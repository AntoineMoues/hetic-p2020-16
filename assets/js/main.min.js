!function e(n,r,t){function i(a,s){if(!r[a]){if(!n[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=r[a]={exports:{}};n[a][0].call(f.exports,function(e){var r=n[a][1][e];return i(r||e)},f,f.exports,e,n,r,t)}return r[a].exports}for(var o="function"==typeof require&&require,a=0;a<t.length;a++)i(t[a]);return i}({1:[function(e,n,r){"use strict";function t(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,r,t){return r&&e(n.prototype,r),t&&e(n,t),n}}(),o=function(){function e(n){var r=this;t(this,e),this.params=n,this.$elements=new Object,this.refreshProperties(),this.init(),window.setInterval(function(){r.init()},500)}return i(e,[{key:"init",value:function(){this.refreshProperties(),window.addEventListener("scroll",this.check())}},{key:"refreshProperties",value:function(){this.$elements.hidden=document.querySelectorAll("."+this.params.hidden),this.height=window.innerHeight}},{key:"check",value:function(){var e=this;this.$elements.hidden.forEach(function(n){n.getBoundingClientRect().top-e.height<=0&&(n.className=n.className.replace(e.params.hidden,e.params.appeared))})}}]),e}();n.exports=o},{}],2:[function(e,n,r){"use strict";var t=e("./components/scrollappearing");new t({hidden:"hidden",appeared:"appeared"})},{"./components/scrollappearing":1}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
