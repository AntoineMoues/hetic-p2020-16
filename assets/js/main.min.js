!function t(e,i,s){function r(n,o){if(!i[n]){if(!e[n]){var h="function"==typeof require&&require;if(!o&&h)return h(n,!0);if(a)return a(n,!0);var l=new Error("Cannot find module '"+n+"'");throw l.code="MODULE_NOT_FOUND",l}var p=i[n]={exports:{}};e[n][0].call(p.exports,function(t){var i=e[n][1][t];return r(i||t)},p,p.exports,t,e,i,s)}return i[n].exports}for(var a="function"==typeof require&&require,n=0;n<s.length;n++)r(s[n]);return r}({1:[function(require,module,exports){!function(t,e){"function"==typeof define&&define.amd?define(function(){return e(t)}):"object"==typeof module&&module.exports?module.exports=e(t):t.bodymovin=e(t)}(window||{},function(window){function ProjectInterface(){return{}}function roundValues(t){bm_rnd=t?Math.round:function(t){return t}}function roundTo2Decimals(t){return Math.round(1e4*t)/1e4}function roundTo3Decimals(t){return Math.round(100*t)/100}function styleDiv(t){t.style.position="absolute",t.style.top=0,t.style.left=0,t.style.display="block",t.style.transformOrigin=t.style.webkitTransformOrigin="0 0",t.style.backfaceVisibility=t.style.webkitBackfaceVisibility="visible",t.style.transformStyle=t.style.webkitTransformStyle=t.style.mozTransformStyle="preserve-3d"}function styleUnselectableDiv(t){t.style.userSelect="none",t.style.MozUserSelect="none",t.style.webkitUserSelect="none",t.style.oUserSelect="none"}function BMEnterFrameEvent(t,e,i,s){this.type=t,this.currentTime=e,this.totalTime=i,this.direction=s<0?-1:1}function BMCompleteEvent(t,e){this.type=t,this.direction=e<0?-1:1}function BMCompleteLoopEvent(t,e,i,s){this.type=t,this.currentLoop=e,this.totalLoops=i,this.direction=s<0?-1:1}function BMSegmentStartEvent(t,e,i){this.type=t,this.firstFrame=e,this.totalFrames=i}function BMDestroyEvent(t,e){this.type=t,this.target=e}function _addEventListener(t,e){return this._cbs[t]||(this._cbs[t]=[]),this._cbs[t].push(e),function(){this.removeEventListener(t,e)}.bind(this)}function _removeEventListener(t,e){if(e){if(this._cbs[t]){for(var i=0,s=this._cbs[t].length;i<s;)this._cbs[t][i]===e&&(this._cbs[t].splice(i,1),i-=1,s-=1),i+=1;this._cbs[t].length||(this._cbs[t]=null)}}else this._cbs[t]=null}function _triggerEvent(t,e){if(this._cbs[t])for(var i=this._cbs[t].length,s=0;s<i;s++)this._cbs[t][s](e)}function randomString(t,e){void 0===e&&(e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890");var i,s="";for(i=t;i>0;--i)s+=e[Math.round(Math.random()*(e.length-1))];return s}function HSVtoRGB(t,e,i){var s,r,a,n,o,h,l,p;switch(1===arguments.length&&(e=t.s,i=t.v,t=t.h),n=Math.floor(6*t),o=6*t-n,h=i*(1-e),l=i*(1-o*e),p=i*(1-(1-o)*e),n%6){case 0:s=i,r=p,a=h;break;case 1:s=l,r=i,a=h;break;case 2:s=h,r=i,a=p;break;case 3:s=h,r=l,a=i;break;case 4:s=p,r=h,a=i;break;case 5:s=i,r=h,a=l}return[s,r,a]}function RGBtoHSV(t,e,i){1===arguments.length&&(e=t.g,i=t.b,t=t.r);var s,r=Math.max(t,e,i),a=Math.min(t,e,i),n=r-a,o=0===r?0:n/r,h=r/255;switch(r){case a:s=0;break;case t:s=e-i+n*(e<i?6:0),s/=6*n;break;case e:s=i-t+2*n,s/=6*n;break;case i:s=t-e+4*n,s/=6*n}return[s,o,h]}function addSaturationToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[1]+=e,i[1]>1?i[1]=1:i[1]<=0&&(i[1]=0),HSVtoRGB(i[0],i[1],i[2])}function addBrightnessToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[2]+=e,i[2]>1?i[2]=1:i[2]<0&&(i[2]=0),HSVtoRGB(i[0],i[1],i[2])}function addHueToRGB(t,e){var i=RGBtoHSV(255*t[0],255*t[1],255*t[2]);return i[0]+=e/360,i[0]>1?i[0]-=1:i[0]<0&&(i[0]+=1),HSVtoRGB(i[0],i[1],i[2])}function componentToHex(t){var e=t.toString(16);return 1==e.length?"0"+e:e}function fillToRgba(t,e){if(!cachedColors[t]){var i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);cachedColors[t]=parseInt(i[1],16)+","+parseInt(i[2],16)+","+parseInt(i[3],16)}return"rgba("+cachedColors[t]+","+e+")"}function RenderedFrame(t,e){this.tr=t,this.o=e}function iterateDynamicProperties(t){var e,i=this.dynamicProperties;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(t)}function reversePath(t){var e,i,s=[],r=[],a=[],n={},o=0;t.c&&(s[0]=t.o[0],r[0]=t.i[0],a[0]=t.v[0],o=1),i=t.i.length;var h=i-1;for(e=o;e<i;e+=1)s.push(t.o[h]),r.push(t.i[h]),a.push(t.v[h]),h-=1;return n.i=s,n.o=r,n.v=a,n}function Matrix(){}function createElement(t,e,i){if(!e){var s=Object.create(t.prototype,i),r={};return s&&"[object Function]"===r.toString.call(s.init)&&s.init(),s}e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.prototype._parent=t.prototype}function extendPrototype(t,e){for(var i in t.prototype)t.prototype.hasOwnProperty(i)&&(e.prototype[i]=t.prototype[i])}function bezFunction(){function t(t,e,i,s,r,a){var n=t*s+e*r+i*a-r*s-a*t-i*e;return n>-1e-4&&n<1e-4}function e(e,i,s,r,a,n,o,h,l){if(0===s&&0===n&&0===l)return t(e,i,r,a,o,h);var p,m=Math.sqrt(Math.pow(r-e,2)+Math.pow(a-i,2)+Math.pow(n-s,2)),c=Math.sqrt(Math.pow(o-e,2)+Math.pow(h-i,2)+Math.pow(l-s,2)),f=Math.sqrt(Math.pow(o-r,2)+Math.pow(h-a,2)+Math.pow(l-n,2));return(p=m>c?m>f?m-c-f:f-c-m:f>c?f-c-m:c-m-f)>-1e-4&&p<1e-4}function i(t){var e,i=t.c,s=t.v,r=t.o,a=t.i,n=t._length,o=[],h=0;for(e=0;e<n-1;e+=1)o[e]=l(s[e],s[e+1],r[e],a[e+1]),h+=o[e].addedLength;return i&&(o[e]=l(s[e],s[0],r[e],a[0]),h+=o[e].addedLength),{lengths:o,totalLength:h}}function s(t){this.segmentLength=0,this.points=new Array(t)}function r(t,e){this.partialLength=t,this.point=e}function a(t,e){var i=e.segments,s=i.length,r=bm_floor((s-1)*t),a=t*e.addedLength,n=0;if(a==i[r].l)return i[r].p;for(var o=i[r].l>a?-1:1,h=!0;h;)i[r].l<=a&&i[r+1].l>a?(n=(a-i[r].l)/(i[r+1].l-i[r].l),h=!1):r+=o,(r<0||r>=s-1)&&(h=!1);return i[r].p+(i[r+1].p-i[r].p)*n}function n(){this.pt1=new Array(2),this.pt2=new Array(2),this.pt3=new Array(2),this.pt4=new Array(2)}function o(t,e,i,s,r,n){var o=a(r,n),h=1-o;return[Math.round(1e3*(h*h*h*t[0]+(o*h*h+h*o*h+h*h*o)*i[0]+(o*o*h+h*o*o+o*h*o)*s[0]+o*o*o*e[0]))/1e3,Math.round(1e3*(h*h*h*t[1]+(o*h*h+h*o*h+h*h*o)*i[1]+(o*o*h+h*o*o+o*h*o)*s[1]+o*o*o*e[1]))/1e3]}function h(t,e,i,s,r,o,h){var l=new n;r=r<0?0:r>1?1:r;var p=a(r,h);o=o>1?1:o;var m,c=a(o,h),f=t.length,d=1-p,u=1-c;for(m=0;m<f;m+=1)l.pt1[m]=Math.round(1e3*(d*d*d*t[m]+(p*d*d+d*p*d+d*d*p)*i[m]+(p*p*d+d*p*p+p*d*p)*s[m]+p*p*p*e[m]))/1e3,l.pt3[m]=Math.round(1e3*(d*d*u*t[m]+(p*d*u+d*p*u+d*d*c)*i[m]+(p*p*u+d*p*c+p*d*c)*s[m]+p*p*c*e[m]))/1e3,l.pt4[m]=Math.round(1e3*(d*u*u*t[m]+(p*u*u+d*c*u+d*u*c)*i[m]+(p*c*u+d*c*c+p*u*c)*s[m]+p*c*c*e[m]))/1e3,l.pt2[m]=Math.round(1e3*(u*u*u*t[m]+(c*u*u+u*c*u+u*u*c)*i[m]+(c*c*u+u*c*c+c*u*c)*s[m]+c*c*c*e[m]))/1e3;return l}var l=(Math,function(){function t(t,e){this.l=t,this.p=e}return function(e,i,s,r){var a,n,o,h,l,p,m=defaultCurveSegments,c=0,f=[],d=[],u={addedLength:0,segments:[]};for(o=s.length,a=0;a<m;a+=1){for(l=a/(m-1),p=0,n=0;n<o;n+=1)h=bm_pow(1-l,3)*e[n]+3*bm_pow(1-l,2)*l*s[n]+3*(1-l)*bm_pow(l,2)*r[n]+bm_pow(l,3)*i[n],f[n]=h,null!==d[n]&&(p+=bm_pow(f[n]-d[n],2)),d[n]=f[n];p&&(p=bm_sqrt(p),c+=p),u.segments.push(new t(c,l))}return u.addedLength=c,u}}()),p=function(){var e={};return function(i){var a=i.s,n=i.e,o=i.to,h=i.ti,l=(a.join("_")+"_"+n.join("_")+"_"+o.join("_")+"_"+h.join("_")).replace(/\./g,"p");if(e[l])return void(i.bezierData=e[l]);var p,m,c,f,d,u,y,g=defaultCurveSegments,v=0,b=null;2===a.length&&(a[0]!=n[0]||a[1]!=n[1])&&t(a[0],a[1],n[0],n[1],a[0]+o[0],a[1]+o[1])&&t(a[0],a[1],n[0],n[1],n[0]+h[0],n[1]+h[1])&&(g=2);var E=new s(g);for(c=o.length,p=0;p<g;p+=1){for(y=new Array(c),d=p/(g-1),u=0,m=0;m<c;m+=1)f=bm_pow(1-d,3)*a[m]+3*bm_pow(1-d,2)*d*(a[m]+o[m])+3*(1-d)*bm_pow(d,2)*(n[m]+h[m])+bm_pow(d,3)*n[m],y[m]=f,null!==b&&(u+=bm_pow(y[m]-b[m],2));u=bm_sqrt(u),v+=u,E.points[p]=new r(u,y),b=y}E.segmentLength=v,i.bezierData=E,e[l]=E}}();return{getBezierLength:l,getSegmentsLength:i,getNewSegment:h,getPointInSegment:o,buildBezierData:p,pointOnLine2D:t,pointOnLine3D:e}}function dataFunctionManager(){function t(r,a,o){var h,l,p,m,c,f,d=r.length;for(l=0;l<d;l+=1)if("ks"in(h=r[l])&&!h.completed){if(h.completed=!0,h.tt&&(r[l-1].td=h.tt),[],-1,h.hasMask){var u=h.masksProperties;for(m=u.length,p=0;p<m;p+=1)if(u[p].pt.k.i)s(u[p].pt.k);else for(f=u[p].pt.k.length,c=0;c<f;c+=1)u[p].pt.k[c].s&&s(u[p].pt.k[c].s[0]),u[p].pt.k[c].e&&s(u[p].pt.k[c].e[0])}0===h.ty?(h.layers=e(h.refId,a),t(h.layers,a,o)):4===h.ty?i(h.shapes):5==h.ty&&n(h,o)}}function e(t,e){for(var i=0,s=e.length;i<s;){if(e[i].id===t)return e[i].layers.__used?JSON.parse(JSON.stringify(e[i].layers)):(e[i].layers.__used=!0,e[i].layers);i+=1}}function i(t){var e,r,a,n=t.length;for(e=n-1;e>=0;e-=1)if("sh"==t[e].ty){if(t[e].ks.k.i)s(t[e].ks.k);else for(a=t[e].ks.k.length,r=0;r<a;r+=1)t[e].ks.k[r].s&&s(t[e].ks.k[r].s[0]),t[e].ks.k[r].e&&s(t[e].ks.k[r].e[0]);!0}else"gr"==t[e].ty&&i(t[e].it)}function s(t){var e,i=t.i.length;for(e=0;e<i;e+=1)t.i[e][0]+=t.v[e][0],t.i[e][1]+=t.v[e][1],t.o[e][0]+=t.v[e][0],t.o[e][1]+=t.v[e][1]}function r(t,e){var i=e?e.split("."):[100,100,100];return t[0]>i[0]||!(i[0]>t[0])&&(t[1]>i[1]||!(i[1]>t[1])&&(t[2]>i[2]||!(i[2]>t[2])&&void 0))}function a(e,i){e.__complete||(l(e),o(e),h(e),p(e),t(e.layers,e.assets,i),e.__complete=!0)}function n(t,e){0!==t.t.a.length||"m"in t.t.p||(t.singleShape=!0)}var o=function(){function t(t){var e=t.t.d;t.t.d={k:[{s:e,t:0}]}}function e(e){var i,s=e.length;for(i=0;i<s;i+=1)5===e[i].ty&&t(e[i])}var i=[4,4,14];return function(t){if(r(i,t.v)&&(e(t.layers),t.assets)){var s,a=t.assets.length;for(s=0;s<a;s+=1)t.assets[s].layers&&e(t.assets[s].layers)}}}(),h=function(){var t=[4,7,99];return function(e){if(e.chars&&!r(t,e.v)){var i,a,n,o,h,l=e.chars.length;for(i=0;i<l;i+=1)if(e.chars[i].data&&e.chars[i].data.shapes)for(h=e.chars[i].data.shapes[0].it,n=h.length,a=0;a<n;a+=1)o=h[a].ks.k,o.__converted||(s(h[a].ks.k),o.__converted=!0)}}}(),l=function(){function t(e){var i,s,r,a=e.length;for(i=0;i<a;i+=1)if("gr"===e[i].ty)t(e[i].it);else if("fl"===e[i].ty||"st"===e[i].ty)if(e[i].c.k&&e[i].c.k[0].i)for(r=e[i].c.k.length,s=0;s<r;s+=1)e[i].c.k[s].s&&(e[i].c.k[s].s[0]/=255,e[i].c.k[s].s[1]/=255,e[i].c.k[s].s[2]/=255,e[i].c.k[s].s[3]/=255),e[i].c.k[s].e&&(e[i].c.k[s].e[0]/=255,e[i].c.k[s].e[1]/=255,e[i].c.k[s].e[2]/=255,e[i].c.k[s].e[3]/=255);else e[i].c.k[0]/=255,e[i].c.k[1]/=255,e[i].c.k[2]/=255,e[i].c.k[3]/=255}function e(e){var i,s=e.length;for(i=0;i<s;i+=1)4===e[i].ty&&t(e[i].shapes)}var i=[4,1,9];return function(t){if(r(i,t.v)&&(e(t.layers),t.assets)){var s,a=t.assets.length;for(s=0;s<a;s+=1)t.assets[s].layers&&e(t.assets[s].layers)}}}(),p=function(){function t(e){var i,s,r,a=e.length;for(i=a-1;i>=0;i-=1)if("sh"==e[i].ty){if(e[i].ks.k.i)e[i].ks.k.c=e[i].closed;else for(r=e[i].ks.k.length,s=0;s<r;s+=1)e[i].ks.k[s].s&&(e[i].ks.k[s].s[0].c=e[i].closed),e[i].ks.k[s].e&&(e[i].ks.k[s].e[0].c=e[i].closed);!0}else"gr"==e[i].ty&&t(e[i].it)}function e(e){var i,s,r,a,n,o,h=e.length;for(s=0;s<h;s+=1){if(i=e[s],i.hasMask){var l=i.masksProperties;for(a=l.length,r=0;r<a;r+=1)if(l[r].pt.k.i)l[r].pt.k.c=l[r].cl;else for(o=l[r].pt.k.length,n=0;n<o;n+=1)l[r].pt.k[n].s&&(l[r].pt.k[n].s[0].c=l[r].cl),l[r].pt.k[n].e&&(l[r].pt.k[n].e[0].c=l[r].cl)}4===i.ty&&t(i.shapes)}}var i=[4,4,18];return function(t){if(r(i,t.v)&&(e(t.layers),t.assets)){var s,a=t.assets.length;for(s=0;s<a;s+=1)t.assets[s].layers&&e(t.assets[s].layers)}}}(),m={};return m.completeData=a,m}function ShapePath(){this.c=!1,this._length=0,this._maxLength=8,this.v=Array.apply(null,{length:this._maxLength}),this.o=Array.apply(null,{length:this._maxLength}),this.i=Array.apply(null,{length:this._maxLength})}function ShapeModifier(){}function TrimModifier(){}function RoundCornersModifier(){}function RepeaterModifier(){}function ShapeCollection(){this._length=0,this._maxLength=4,this.shapes=Array.apply(null,{length:this._maxLength})}function TextAnimatorProperty(t,e,i){this.mdf=!1,this._firstFrame=!0,this._hasMaskedPath=!1,this._frameId=-1,this._dynamicProperties=[],this._textData=t,this._renderType=e,this._elem=i,this._animatorsData=Array.apply(null,{length:this._textData.a.length}),this._pathData={},this._moreOptions={alignment:{}},this.renderedLetters=[],this.lettersChangedFlag=!1}function LetterProps(t,e,i,s,r,a){this.o=t,this.sw=e,this.sc=i,this.fc=s,this.m=r,this.p=a,this.mdf={o:!0,sw:!!e,sc:!!i,fc:!!s,m:!0,p:!0}}function TextProperty(t,e,i){this._frameId=-99999,this.pv="",this.v="",this.kf=!1,this.firstFrame=!0,this.mdf=!0,this.data=e,this.elem=t,this.keysIndex=-1,this.currentData={ascent:0,boxWidth:[0,0],f:"",fStyle:"",fWeight:"",fc:"",j:"",justifyOffset:"",l:[],lh:0,lineWidths:[],ls:"",of:"",s:"",sc:"",sw:0,t:0,tr:0,fillColorAnim:!1,strokeColorAnim:!1,strokeWidthAnim:!1,yOffset:0,__complete:!1},this.searchProperty()?i.push(this):this.getValue(!0)}function BaseRenderer(){}function SVGRenderer(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.globalData={frameNum:-1},this.renderConfig={preserveAspectRatio:e&&e.preserveAspectRatio||"xMidYMid meet",progressiveLoad:e&&e.progressiveLoad||!1,hideOnTransparent:!e||!1!==e.hideOnTransparent,viewBoxOnly:e&&e.viewBoxOnly||!1,className:e&&e.className||""},this.globalData.renderConfig=this.renderConfig,this.elements=[],this.pendingElements=[],this.destroyed=!1}function MaskElement(t,e,i){this.dynamicProperties=[],this.data=t,this.element=e,this.globalData=i,this.storedData=[],this.masksProperties=this.data.masksProperties,this.viewData=Array.apply(null,{length:this.masksProperties.length}),this.maskElement=null,this.firstFrame=!0;var s,r,a,n,o,h,l,p,m=this.globalData.defs,c=this.masksProperties.length,f=this.masksProperties,d=0,u=[],y=randomString(10),g="clipPath",v="clip-path";for(s=0;s<c;s++)if(("a"!==f[s].mode&&"n"!==f[s].mode||f[s].inv||100!==f[s].o.k)&&(g="mask",v="mask"),"s"!=f[s].mode&&"i"!=f[s].mode||0!=d?o=null:(o=document.createElementNS(svgNS,"rect"),o.setAttribute("fill","#ffffff"),o.setAttribute("width",this.element.comp.data.w),o.setAttribute("height",this.element.comp.data.h),u.push(o)),r=document.createElementNS(svgNS,"path"),"n"!=f[s].mode){if(d+=1,"s"==f[s].mode?r.setAttribute("fill","#000000"):r.setAttribute("fill","#ffffff"),r.setAttribute("clip-rule","nonzero"),0!==f[s].x.k){g="mask",v="mask",p=PropertyFactory.getProp(this.element,f[s].x,0,null,this.dynamicProperties);var b="fi_"+randomString(10);h=document.createElementNS(svgNS,"filter"),h.setAttribute("id",b),l=document.createElementNS(svgNS,"feMorphology"),l.setAttribute("operator","dilate"),l.setAttribute("in","SourceGraphic"),l.setAttribute("radius","0"),h.appendChild(l),m.appendChild(h),"s"==f[s].mode?r.setAttribute("stroke","#000000"):r.setAttribute("stroke","#ffffff")}else l=null,p=null;if(this.storedData[s]={elem:r,x:p,expan:l,lastPath:"",lastOperator:"",filterId:b,lastRadius:0},"i"==f[s].mode){n=u.length;var E=document.createElementNS(svgNS,"g");for(a=0;a<n;a+=1)E.appendChild(u[a]);var P=document.createElementNS(svgNS,"mask");P.setAttribute("mask-type","alpha"),P.setAttribute("id",y+"_"+d),P.appendChild(r),m.appendChild(P),E.setAttribute("mask","url("+locationHref+"#"+y+"_"+d+")"),u.length=0,u.push(E)}else u.push(r);f[s].inv&&!this.solidPath&&(this.solidPath=this.createLayerSolidPath()),this.viewData[s]={elem:r,lastPath:"",op:PropertyFactory.getProp(this.element,f[s].o,0,.01,this.dynamicProperties),prop:ShapePropertyFactory.getShapeProp(this.element,f[s],3,this.dynamicProperties,null)},o&&(this.viewData[s].invRect=o),this.viewData[s].prop.k||this.drawPath(f[s],this.viewData[s].prop.v,this.viewData[s])}else this.viewData[s]={op:PropertyFactory.getProp(this.element,f[s].o,0,.01,this.dynamicProperties),prop:ShapePropertyFactory.getShapeProp(this.element,f[s],3,this.dynamicProperties,null),elem:r},m.appendChild(r);for(this.maskElement=document.createElementNS(svgNS,g),c=u.length,s=0;s<c;s+=1)this.maskElement.appendChild(u[s]);this.maskElement.setAttribute("id",y),d>0&&this.element.maskedElement.setAttribute(v,"url("+locationHref+"#"+y+")"),m.appendChild(this.maskElement)}function BaseElement(){}function SVGBaseElement(t,e,i,s,r){this.globalData=i,this.comp=s,this.data=t,this.matteElement=null,this.transformedElement=null,this.isTransparent=!1,this.parentContainer=e,this.layerId=r?r.layerId:"ly_"+randomString(10),this.placeholder=r,this._sizeChanged=!1,this.init()}function IShapeElement(t,e,i,s,r){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.itemsData=[],this.prevViewData=[],this.shapeModifiers=[],this.processedElements=[],this._parent.constructor.call(this,t,e,i,s,r)}function ITextElement(t,e,i,s){}function SVGTextElement(t,e,i,s,r){this.textSpans=[],this.renderType="svg",this._parent.constructor.call(this,t,e,i,s,r)}function SVGTintFilter(t,e){this.filterManager=e;var i=document.createElementNS(svgNS,"feColorMatrix");if(i.setAttribute("type","matrix"),i.setAttribute("color-interpolation-filters","linearRGB"),i.setAttribute("values","0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),i.setAttribute("result","f1"),t.appendChild(i),i=document.createElementNS(svgNS,"feColorMatrix"),i.setAttribute("type","matrix"),i.setAttribute("color-interpolation-filters","sRGB"),i.setAttribute("values","1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),i.setAttribute("result","f2"),t.appendChild(i),this.matrixFilter=i,100!==e.effectElements[2].p.v||e.effectElements[2].p.k){var s=document.createElementNS(svgNS,"feMerge");t.appendChild(s);var r;r=document.createElementNS(svgNS,"feMergeNode"),r.setAttribute("in","SourceGraphic"),s.appendChild(r),r=document.createElementNS(svgNS,"feMergeNode"),r.setAttribute("in","f2"),s.appendChild(r)}}function SVGFillFilter(t,e){this.filterManager=e;var i=document.createElementNS(svgNS,"feColorMatrix");i.setAttribute("type","matrix"),i.setAttribute("color-interpolation-filters","sRGB"),i.setAttribute("values","1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),t.appendChild(i),this.matrixFilter=i}function SVGStrokeEffect(t,e){this.initialized=!1,this.filterManager=e,this.elem=t,this.paths=[]}function SVGTritoneFilter(t,e){this.filterManager=e;var i=document.createElementNS(svgNS,"feColorMatrix");i.setAttribute("type","matrix"),i.setAttribute("color-interpolation-filters","linearRGB"),i.setAttribute("values","0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),i.setAttribute("result","f1"),t.appendChild(i);var s=document.createElementNS(svgNS,"feComponentTransfer");s.setAttribute("color-interpolation-filters","sRGB"),t.appendChild(s),this.matrixFilter=s;var r=document.createElementNS(svgNS,"feFuncR");r.setAttribute("type","table"),s.appendChild(r),this.feFuncR=r;var a=document.createElementNS(svgNS,"feFuncG");a.setAttribute("type","table"),s.appendChild(a),this.feFuncG=a;var n=document.createElementNS(svgNS,"feFuncB");n.setAttribute("type","table"),s.appendChild(n),this.feFuncB=n}function SVGProLevelsFilter(t,e){this.filterManager=e;var i=this.filterManager.effectElements,s=document.createElementNS(svgNS,"feComponentTransfer");(i[9].p.k||0!==i[9].p.v||i[10].p.k||1!==i[10].p.v||i[11].p.k||1!==i[11].p.v||i[12].p.k||0!==i[12].p.v||i[13].p.k||1!==i[13].p.v)&&(this.feFuncR=this.createFeFunc("feFuncR",s)),(i[16].p.k||0!==i[16].p.v||i[17].p.k||1!==i[17].p.v||i[18].p.k||1!==i[18].p.v||i[19].p.k||0!==i[19].p.v||i[20].p.k||1!==i[20].p.v)&&(this.feFuncG=this.createFeFunc("feFuncG",s)),(i[23].p.k||0!==i[23].p.v||i[24].p.k||1!==i[24].p.v||i[25].p.k||1!==i[25].p.v||i[26].p.k||0!==i[26].p.v||i[27].p.k||1!==i[27].p.v)&&(this.feFuncB=this.createFeFunc("feFuncB",s)),(i[30].p.k||0!==i[30].p.v||i[31].p.k||1!==i[31].p.v||i[32].p.k||1!==i[32].p.v||i[33].p.k||0!==i[33].p.v||i[34].p.k||1!==i[34].p.v)&&(this.feFuncA=this.createFeFunc("feFuncA",s)),(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA)&&(s.setAttribute("color-interpolation-filters","sRGB"),t.appendChild(s),s=document.createElementNS(svgNS,"feComponentTransfer")),(i[2].p.k||0!==i[2].p.v||i[3].p.k||1!==i[3].p.v||i[4].p.k||1!==i[4].p.v||i[5].p.k||0!==i[5].p.v||i[6].p.k||1!==i[6].p.v)&&(s.setAttribute("color-interpolation-filters","sRGB"),t.appendChild(s),this.feFuncRComposed=this.createFeFunc("feFuncR",s),this.feFuncGComposed=this.createFeFunc("feFuncG",s),this.feFuncBComposed=this.createFeFunc("feFuncB",s))}function SVGDropShadowEffect(t,e){t.setAttribute("x","-100%"),t.setAttribute("y","-100%"),t.setAttribute("width","400%"),t.setAttribute("height","400%"),this.filterManager=e;var i=document.createElementNS(svgNS,"feGaussianBlur");i.setAttribute("in","SourceAlpha"),i.setAttribute("result","drop_shadow_1"),i.setAttribute("stdDeviation","0"),this.feGaussianBlur=i,t.appendChild(i);var s=document.createElementNS(svgNS,"feOffset");s.setAttribute("dx","25"),s.setAttribute("dy","0"),s.setAttribute("in","drop_shadow_1"),s.setAttribute("result","drop_shadow_2"),this.feOffset=s,t.appendChild(s);var r=document.createElementNS(svgNS,"feFlood");r.setAttribute("flood-color","#00ff00"),r.setAttribute("flood-opacity","1"),r.setAttribute("result","drop_shadow_3"),this.feFlood=r,t.appendChild(r);var a=document.createElementNS(svgNS,"feComposite");a.setAttribute("in","drop_shadow_3"),a.setAttribute("in2","drop_shadow_2"),a.setAttribute("operator","in"),a.setAttribute("result","drop_shadow_4"),t.appendChild(a);var n=document.createElementNS(svgNS,"feMerge");t.appendChild(n);var o;o=document.createElementNS(svgNS,"feMergeNode"),n.appendChild(o),o=document.createElementNS(svgNS,"feMergeNode"),o.setAttribute("in","SourceGraphic"),this.feMergeNode=o,this.feMerge=n,this.originalNodeAdded=!1,n.appendChild(o)}function SVGMatte3Effect(t,e,i){this.initialized=!1,this.filterManager=e,this.filterElem=t,this.elem=i,i.matteElement=document.createElementNS(svgNS,"g"),i.matteElement.appendChild(i.layerElement),i.matteElement.appendChild(i.transformedElement),i.baseElement=i.matteElement}function SVGEffects(t){var e,i=t.data.ef.length,s=randomString(10),r=filtersFactory.createFilter(s),a=0;this.filters=[];var n;for(e=0;e<i;e+=1)20===t.data.ef[e].ty?(a+=1,n=new SVGTintFilter(r,t.effects.effectElements[e]),this.filters.push(n)):21===t.data.ef[e].ty?(a+=1,n=new SVGFillFilter(r,t.effects.effectElements[e]),this.filters.push(n)):22===t.data.ef[e].ty?(n=new SVGStrokeEffect(t,t.effects.effectElements[e]),this.filters.push(n)):23===t.data.ef[e].ty?(a+=1,n=new SVGTritoneFilter(r,t.effects.effectElements[e]),this.filters.push(n)):24===t.data.ef[e].ty?(a+=1,n=new SVGProLevelsFilter(r,t.effects.effectElements[e]),this.filters.push(n)):25===t.data.ef[e].ty?(a+=1,n=new SVGDropShadowEffect(r,t.effects.effectElements[e]),this.filters.push(n)):28===t.data.ef[e].ty&&(n=new SVGMatte3Effect(r,t.effects.effectElements[e],t),this.filters.push(n));a&&(t.globalData.defs.appendChild(r),t.layerElement.setAttribute("filter","url("+locationHref+"#"+s+")"))}function ICompElement(t,e,i,s,r){this._parent.constructor.call(this,t,e,i,s,r),this.layers=t.layers,this.supports3d=!0,this.completeLayers=!1,this.pendingElements=[],this.elements=this.layers?Array.apply(null,{length:this.layers.length}):[],this.data.tm&&(this.tm=PropertyFactory.getProp(this,this.data.tm,0,i.frameRate,this.dynamicProperties)),this.data.xt?(this.layerElement=document.createElementNS(svgNS,"g"),this.buildAllItems()):i.progressiveLoad||this.buildAllItems()}function IImageElement(t,e,i,s,r){this.assetData=i.getAssetData(t.refId),this._parent.constructor.call(this,t,e,i,s,r)}function ISolidElement(t,e,i,s,r){this._parent.constructor.call(this,t,e,i,s,r)}function CanvasRenderer(t,e){this.animationItem=t,this.renderConfig={clearCanvas:!e||void 0===e.clearCanvas||e.clearCanvas,context:e&&e.context||null,progressiveLoad:e&&e.progressiveLoad||!1,preserveAspectRatio:e&&e.preserveAspectRatio||"xMidYMid meet",className:e&&e.className||""},this.renderConfig.dpr=e&&e.dpr||1,this.animationItem.wrapper&&(this.renderConfig.dpr=e&&e.dpr||window.devicePixelRatio||1),this.renderedFrame=-1,this.globalData={frameNum:-1},this.contextData={saved:Array.apply(null,{length:15}),savedOp:Array.apply(null,{length:15}),cArrPos:0,cTr:new Matrix,cO:1};var i;for(i=0;i<15;i+=1)this.contextData.saved[i]=Array.apply(null,{length:16});this.elements=[],this.pendingElements=[],this.transformMat=new Matrix,this.completeLayers=!1}function HybridRenderer(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.globalData={frameNum:-1},this.renderConfig={className:e&&e.className||""},this.pendingElements=[],this.elements=[],this.threeDElements=[],this.destroyed=!1,this.camera=null,this.supports3d=!0}function CVBaseElement(t,e,i){this.globalData=i,this.data=t,this.comp=e,this.canvasContext=i.canvasContext,this.init()}function CVCompElement(t,e,i){this._parent.constructor.call(this,t,e,i);var s={};for(var r in i)i.hasOwnProperty(r)&&(s[r]=i[r]);s.renderer=this,s.compHeight=this.data.h,s.compWidth=this.data.w,this.renderConfig={clearCanvas:!0},this.contextData={saved:Array.apply(null,{length:15}),savedOp:Array.apply(null,{length:15}),cArrPos:0,cTr:new Matrix,cO:1},this.completeLayers=!1;var a;for(a=0;a<15;a+=1)this.contextData.saved[a]=Array.apply(null,{length:16});this.transformMat=new Matrix,this.parentGlobalData=this.globalData;var n=document.createElement("canvas");s.canvasContext=n.getContext("2d"),this.canvasContext=s.canvasContext,n.width=this.data.w,n.height=this.data.h,this.canvas=n,this.globalData=s,this.layers=t.layers,this.pendingElements=[],this.elements=Array.apply(null,{length:this.layers.length}),this.data.tm&&(this.tm=PropertyFactory.getProp(this,this.data.tm,0,i.frameRate,this.dynamicProperties)),!this.data.xt&&i.progressiveLoad||this.buildAllItems()}function CVImageElement(t,e,i){this.assetData=i.getAssetData(t.refId),this._parent.constructor.call(this,t,e,i),this.globalData.addPendingElement()}function CVMaskElement(t,e){this.data=t,this.element=e,this.dynamicProperties=[],this.masksProperties=this.data.masksProperties,this.viewData=Array.apply(null,{length:this.masksProperties.length});var i,s=this.masksProperties.length;for(i=0;i<s;i++)this.viewData[i]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3,this.dynamicProperties,null)}function CVShapeElement(t,e,i){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.itemsData=[],this.prevViewData=[],this.shapeModifiers=[],this.processedElements=[],this._parent.constructor.call(this,t,e,i)}function CVSolidElement(t,e,i){this._parent.constructor.call(this,t,e,i)}function CVTextElement(t,e,i){this.textSpans=[],this.yOffset=0,this.fillColorAnim=!1,this.strokeColorAnim=!1,this.strokeWidthAnim=!1,this.stroke=!1,this.fill=!1,this.justifyOffset=0,this.currentRender=null,this.renderType="canvas",this.values={fill:"rgba(0,0,0,0)",stroke:"rgba(0,0,0,0)",sWidth:0,fValue:""},this._parent.constructor.call(this,t,e,i)}function HBaseElement(t,e,i,s,r){this.globalData=i,this.comp=s,this.data=t,this.matteElement=null,this.parentContainer=e,this.layerId=r?r.layerId:"ly_"+randomString(10),this.placeholder=r,this.init()}function HSolidElement(t,e,i,s,r){this._parent.constructor.call(this,t,e,i,s,r)}function HCompElement(t,e,i,s,r){this._parent.constructor.call(this,t,e,i,s,r),this.layers=t.layers,this.supports3d=!0,this.completeLayers=!1,this.pendingElements=[],this.elements=Array.apply(null,{length:this.layers.length}),this.data.tm&&(this.tm=PropertyFactory.getProp(this,this.data.tm,0,i.frameRate,this.dynamicProperties)),this.data.hasMask&&(this.supports3d=!1),this.data.xt&&(this.layerElement=document.createElement("div")),this.buildAllItems()}function HShapeElement(t,e,i,s,r){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.itemsData=[],this.prevViewData=[],this.shapeModifiers=[],this.processedElements=[],this._parent.constructor.call(this,t,e,i,s,r),this.currentBBox={x:999999,y:-999999,h:0,w:0}}function HTextElement(t,e,i,s,r){this.textSpans=[],this.textPaths=[],this.currentBBox={x:999999,y:-999999,h:0,w:0},this.renderType="svg",this.isMasked=!1,this._parent.constructor.call(this,t,e,i,s,r)}function HImageElement(t,e,i,s,r){this.assetData=i.getAssetData(t.refId),this._parent.constructor.call(this,t,e,i,s,r)}function HCameraElement(t,e,i,s,r){this._parent.constructor.call(this,t,e,i,s,r);var a=PropertyFactory.getProp;if(this.pe=a(this,t.pe,0,0,this.dynamicProperties),t.ks.p.s?(this.px=a(this,t.ks.p.x,1,0,this.dynamicProperties),this.py=a(this,t.ks.p.y,1,0,this.dynamicProperties),this.pz=a(this,t.ks.p.z,1,0,this.dynamicProperties)):this.p=a(this,t.ks.p,1,0,this.dynamicProperties),t.ks.a&&(this.a=a(this,t.ks.a,1,0,this.dynamicProperties)),t.ks.or.k.length&&t.ks.or.k[0].to){var n,o=t.ks.or.k.length;for(n=0;n<o;n+=1)t.ks.or.k[n].to=null,t.ks.or.k[n].ti=null}this.or=a(this,t.ks.or,1,degToRads,this.dynamicProperties),this.or.sh=!0,this.rx=a(this,t.ks.rx,0,degToRads,this.dynamicProperties),this.ry=a(this,t.ks.ry,0,degToRads,this.dynamicProperties),this.rz=a(this,t.ks.rz,0,degToRads,this.dynamicProperties),this.mat=new Matrix}function SliderEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function AngleEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function ColorEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,1,0,i)}function PointEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,1,0,i)}function LayerIndexEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function MaskIndexEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function CheckboxEffect(t,e,i){this.p=PropertyFactory.getProp(e,t.v,0,0,i)}function NoValueEffect(){this.p={}}function EffectsManager(t,e,i){var s=t.ef;this.effectElements=[];var r,a,n=s.length;for(r=0;r<n;r++)a=new GroupEffect(s[r],e,i),this.effectElements.push(a)}function GroupEffect(t,e,i){this.dynamicProperties=[],this.init(t,e,this.dynamicProperties),this.dynamicProperties.length&&i.push(this)}function setLocationHref(t){locationHref=t}function play(t){animationManager.play(t)}function pause(t){animationManager.pause(t)}function togglePause(t){animationManager.togglePause(t)}function setSpeed(t,e){animationManager.setSpeed(t,e)}function setDirection(t,e){animationManager.setDirection(t,e)}function stop(t){animationManager.stop(t)}function moveFrame(t){animationManager.moveFrame(t)}function searchAnimations(){!0===standalone?animationManager.searchAnimations(animationData,standalone,renderer):animationManager.searchAnimations()}function registerAnimation(t){return animationManager.registerAnimation(t)}function resize(){animationManager.resize()}function start(){animationManager.start()}function goToAndStop(t,e,i){animationManager.goToAndStop(t,e,i)}function setSubframeRendering(t){subframeEnabled=t}function loadAnimation(t){return!0===standalone&&(t.animationData=JSON.parse(animationData)),animationManager.loadAnimation(t)}function destroy(t){return animationManager.destroy(t)}function setQuality(t){if("string"==typeof t)switch(t){case"high":defaultCurveSegments=200;break;case"medium":defaultCurveSegments=50;break;case"low":defaultCurveSegments=10}else!isNaN(t)&&t>1&&(defaultCurveSegments=t);roundValues(!(defaultCurveSegments>=50))}function inBrowser(){return"undefined"!=typeof navigator}function installPlugin(t,e){"expressions"===t&&(expressionsPlugin=e)}function getFactory(t){switch(t){case"propertyFactory":return PropertyFactory;case"shapePropertyFactory":return ShapePropertyFactory;case"matrix":return Matrix}}function checkReady(){"complete"===document.readyState&&(clearInterval(readyStateCheckInterval),searchAnimations())}function getQueryVariable(t){for(var e=queryString.split("&"),i=0;i<e.length;i++){var s=e[i].split("=");if(decodeURIComponent(s[0])==t)return decodeURIComponent(s[1])}}var svgNS="http://www.w3.org/2000/svg",locationHref="",subframeEnabled=!0,expressionsPlugin,isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),cachedColors={},bm_rounder=Math.round,bm_rnd,bm_pow=Math.pow,bm_sqrt=Math.sqrt,bm_abs=Math.abs,bm_floor=Math.floor,bm_max=Math.max,bm_min=Math.min,blitter=10,BMMath={};!function(){var t,e=Object.getOwnPropertyNames(Math),i=e.length;for(t=0;t<i;t+=1)BMMath[e[t]]=Math[e[t]]}(),BMMath.random=Math.random,BMMath.abs=function(t){if("object"==typeof t&&t.length){var e,i=Array.apply(null,{length:t.length}),s=t.length;for(e=0;e<s;e+=1)i[e]=Math.abs(t[e]);return i}return Math.abs(t)}
;var defaultCurveSegments=150,degToRads=Math.PI/180,roundCorner=.5519;roundValues(!1);var rgbToHex=function(){var t,e,i=[];for(t=0;t<256;t+=1)e=t.toString(16),i[t]=1==e.length?"0"+e:e;return function(t,e,s){return t<0&&(t=0),e<0&&(e=0),s<0&&(s=0),"#"+i[t]+i[e]+i[s]}}(),fillColorToString=function(){var t=[];return function(e,i){return void 0!==i&&(e[3]=i),t[e[0]]||(t[e[0]]={}),t[e[0]][e[1]]||(t[e[0]][e[1]]={}),t[e[0]][e[1]][e[2]]||(t[e[0]][e[1]][e[2]]={}),t[e[0]][e[1]][e[2]][e[3]]||(t[e[0]][e[1]][e[2]][e[3]]="rgba("+e.join(",")+")"),t[e[0]][e[1]][e[2]][e[3]]}}(),Matrix=function(){function t(){return this.props[0]=1,this.props[1]=0,this.props[2]=0,this.props[3]=0,this.props[4]=0,this.props[5]=1,this.props[6]=0,this.props[7]=0,this.props[8]=0,this.props[9]=0,this.props[10]=1,this.props[11]=0,this.props[12]=0,this.props[13]=0,this.props[14]=0,this.props[15]=1,this}function e(t){if(0===t)return this;var e=Math.cos(t),i=Math.sin(t);return this._t(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1)}function i(t){if(0===t)return this;var e=Math.cos(t),i=Math.sin(t);return this._t(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1)}function s(t){if(0===t)return this;var e=Math.cos(t),i=Math.sin(t);return this._t(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1)}function r(t){if(0===t)return this;var e=Math.cos(t),i=Math.sin(t);return this._t(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1)}function a(t,e){return this._t(1,e,t,1,0,0)}function n(t,e){return this.shear(Math.tan(t),Math.tan(e))}function o(t,e){var i=Math.cos(e),s=Math.sin(e);return this._t(i,s,0,0,-s,i,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,Math.tan(t),1,0,0,0,0,1,0,0,0,0,1)._t(i,-s,0,0,s,i,0,0,0,0,1,0,0,0,0,1)}function h(t,e,i){return i=isNaN(i)?1:i,1==t&&1==e&&1==i?this:this._t(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1)}function l(t,e,i,s,r,a,n,o,h,l,p,m,c,f,d,u){return this.props[0]=t,this.props[1]=e,this.props[2]=i,this.props[3]=s,this.props[4]=r,this.props[5]=a,this.props[6]=n,this.props[7]=o,this.props[8]=h,this.props[9]=l,this.props[10]=p,this.props[11]=m,this.props[12]=c,this.props[13]=f,this.props[14]=d,this.props[15]=u,this}function p(t,e,i){return i=i||0,0!==t||0!==e||0!==i?this._t(1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1):this}function m(t,e,i,s,r,a,n,o,h,l,p,m,c,f,d,u){if(1===t&&0===e&&0===i&&0===s&&0===r&&1===a&&0===n&&0===o&&0===h&&0===l&&1===p&&0===m)return 0===c&&0===f&&0===d||(this.props[12]=this.props[12]*t+this.props[13]*r+this.props[14]*h+this.props[15]*c,this.props[13]=this.props[12]*e+this.props[13]*a+this.props[14]*l+this.props[15]*f,this.props[14]=this.props[12]*i+this.props[13]*n+this.props[14]*p+this.props[15]*d,this.props[15]=this.props[12]*s+this.props[13]*o+this.props[14]*m+this.props[15]*u),this._identityCalculated=!1,this;var y=this.props[0],g=this.props[1],v=this.props[2],b=this.props[3],E=this.props[4],P=this.props[5],x=this.props[6],S=this.props[7],C=this.props[8],k=this.props[9],A=this.props[10],T=this.props[11],M=this.props[12],D=this.props[13],w=this.props[14],_=this.props[15];return this.props[0]=y*t+g*r+v*h+b*c,this.props[1]=y*e+g*a+v*l+b*f,this.props[2]=y*i+g*n+v*p+b*d,this.props[3]=y*s+g*o+v*m+b*u,this.props[4]=E*t+P*r+x*h+S*c,this.props[5]=E*e+P*a+x*l+S*f,this.props[6]=E*i+P*n+x*p+S*d,this.props[7]=E*s+P*o+x*m+S*u,this.props[8]=C*t+k*r+A*h+T*c,this.props[9]=C*e+k*a+A*l+T*f,this.props[10]=C*i+k*n+A*p+T*d,this.props[11]=C*s+k*o+A*m+T*u,this.props[12]=M*t+D*r+w*h+_*c,this.props[13]=M*e+D*a+w*l+_*f,this.props[14]=M*i+D*n+w*p+_*d,this.props[15]=M*s+D*o+w*m+_*u,this._identityCalculated=!1,this}function c(){return this._identityCalculated||(this._identity=!(1!==this.props[0]||0!==this.props[1]||0!==this.props[2]||0!==this.props[3]||0!==this.props[4]||1!==this.props[5]||0!==this.props[6]||0!==this.props[7]||0!==this.props[8]||0!==this.props[9]||1!==this.props[10]||0!==this.props[11]||0!==this.props[12]||0!==this.props[13]||0!==this.props[14]||1!==this.props[15]),this._identityCalculated=!0),this._identity}function f(t){var e;for(e=0;e<16;e+=1)t.props[e]=this.props[e]}function d(t){var e;for(e=0;e<16;e+=1)this.props[e]=t[e]}function u(t,e,i){return{x:t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12],y:t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13],z:t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]}}function y(t,e,i){return t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12]}function g(t,e,i){return t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13]}function v(t,e,i){return t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]}function b(t){var e=this.props[0]*this.props[5]-this.props[1]*this.props[4],i=this.props[5]/e,s=-this.props[1]/e,r=-this.props[4]/e,a=this.props[0]/e,n=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/e,o=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/e;return[t[0]*i+t[1]*r+n,t[0]*s+t[1]*a+o,0]}function E(t){var e,i=t.length,s=[];for(e=0;e<i;e+=1)s[e]=b(t[e]);return s}function P(t,e,i,s){if(s&&2===s){var r=point_pool.newPoint();return r[0]=t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12],r[1]=t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13],r}return[t*this.props[0]+e*this.props[4]+i*this.props[8]+this.props[12],t*this.props[1]+e*this.props[5]+i*this.props[9]+this.props[13],t*this.props[2]+e*this.props[6]+i*this.props[10]+this.props[14]]}function x(t,e){return this.isIdentity()?t+","+e:bm_rnd(t*this.props[0]+e*this.props[4]+this.props[12])+","+bm_rnd(t*this.props[1]+e*this.props[5]+this.props[13])}function S(){return[this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]]}function C(){return isSafari?"matrix3d("+roundTo2Decimals(this.props[0])+","+roundTo2Decimals(this.props[1])+","+roundTo2Decimals(this.props[2])+","+roundTo2Decimals(this.props[3])+","+roundTo2Decimals(this.props[4])+","+roundTo2Decimals(this.props[5])+","+roundTo2Decimals(this.props[6])+","+roundTo2Decimals(this.props[7])+","+roundTo2Decimals(this.props[8])+","+roundTo2Decimals(this.props[9])+","+roundTo2Decimals(this.props[10])+","+roundTo2Decimals(this.props[11])+","+roundTo2Decimals(this.props[12])+","+roundTo2Decimals(this.props[13])+","+roundTo2Decimals(this.props[14])+","+roundTo2Decimals(this.props[15])+")":(this.cssParts[1]=this.props.join(","),this.cssParts.join(""))}function k(){return"matrix("+roundTo2Decimals(this.props[0])+","+roundTo2Decimals(this.props[1])+","+roundTo2Decimals(this.props[4])+","+roundTo2Decimals(this.props[5])+","+roundTo2Decimals(this.props[12])+","+roundTo2Decimals(this.props[13])+")"}function A(){return""+this.toArray()}return function(){this.reset=t,this.rotate=e,this.rotateX=i,this.rotateY=s,this.rotateZ=r,this.skew=n,this.skewFromAxis=o,this.shear=a,this.scale=h,this.setTransform=l,this.translate=p,this.transform=m,this.applyToPoint=u,this.applyToX=y,this.applyToY=g,this.applyToZ=v,this.applyToPointArray=P,this.applyToPointStringified=x,this.toArray=S,this.toCSS=C,this.to2dCSS=k,this.toString=A,this.clone=f,this.cloneFromProps=d,this.inversePoints=E,this.inversePoint=b,this._t=this.transform,this.isIdentity=c,this._identity=!0,this._identityCalculated=!1,this.props=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],this.cssParts=["matrix3d(","",")"]}}();!function(t,e){function i(i,l,p){var g=[];l=1==l?{entropy:!0}:l||{};var v=n(a(l.entropy?[i,h(t)]:null==i?o():i,3),g),b=new s(g),E=function(){for(var t=b.g(c),e=d,i=0;t<u;)t=(t+i)*m,e*=m,i=b.g(1);for(;t>=y;)t/=2,e/=2,i>>>=1;return(t+i)/e};return E.int32=function(){return 0|b.g(4)},E.quick=function(){return b.g(4)/4294967296},E.double=E,n(h(b.S),t),(l.pass||p||function(t,i,s,a){return a&&(a.S&&r(a,b),t.state=function(){return r(b,{})}),s?(e[f]=t,i):t})(E,v,"global"in l?l.global:this==e,l.state)}function s(t){var e,i=t.length,s=this,r=0,a=s.i=s.j=0,n=s.S=[];for(i||(t=[i++]);r<m;)n[r]=r++;for(r=0;r<m;r++)n[r]=n[a=g&a+t[r%i]+(e=n[r])],n[a]=e;(s.g=function(t){for(var e,i=0,r=s.i,a=s.j,n=s.S;t--;)e=n[r=g&r+1],i=i*m+n[g&(n[r]=n[a=g&a+e])+(n[a]=e)];return s.i=r,s.j=a,i})(m)}function r(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function a(t,e){var i,s=[],r=typeof t;if(e&&"object"==r)for(i in t)try{s.push(a(t[i],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function n(t,e){for(var i,s=t+"",r=0;r<s.length;)e[g&r]=g&(i^=19*e[g&r])+s.charCodeAt(r++);return h(e)}function o(){try{if(l)return h(l.randomBytes(m));var e=new Uint8Array(m);return(p.crypto||p.msCrypto).getRandomValues(e),h(e)}catch(e){var i=p.navigator,s=i&&i.plugins;return[+new Date,p,s,p.screen,h(t)]}}function h(t){return String.fromCharCode.apply(0,t)}var l,p=this,m=256,c=6,f="random",d=e.pow(m,c),u=e.pow(2,52),y=2*u,g=m-1;e["seed"+f]=i,n(e.random(),t)}([],BMMath);var BezierFactory=function(){function t(t,e,i,s,r){var a=r||("bez_"+t+"_"+e+"_"+i+"_"+s).replace(/\./g,"p");if(p[a])return p[a];var n=new h([t,e,i,s]);return p[a]=n,n}function e(t,e){return 1-3*e+3*t}function i(t,e){return 3*e-6*t}function s(t){return 3*t}function r(t,r,a){return((e(r,a)*t+i(r,a))*t+s(r))*t}function a(t,r,a){return 3*e(r,a)*t*t+2*i(r,a)*t+s(r)}function n(t,e,i,s,a){var n,o,h=0;do{o=e+(i-e)/2,n=r(o,s,a)-t,n>0?i=o:e=o}while(Math.abs(n)>c&&++h<f);return o}function o(t,e,i,s){for(var n=0;n<m;++n){var o=a(e,i,s);if(0===o)return e;e-=(r(e,i,s)-t)/o}return e}function h(t){this._p=t,this._mSampleValues=y?new Float32Array(d):new Array(d),this._precomputed=!1,this.get=this.get.bind(this)}var l={};l.getBezierEasing=t;var p={},m=4,c=1e-7,f=10,d=11,u=1/(d-1),y="function"==typeof Float32Array;return h.prototype={get:function(t){var e=this._p[0],i=this._p[1],s=this._p[2],a=this._p[3];return this._precomputed||this._precompute(),e===i&&s===a?t:0===t?0:1===t?1:r(this._getTForX(t),i,a)},_precompute:function(){var t=this._p[0],e=this._p[1],i=this._p[2],s=this._p[3];this._precomputed=!0,t===e&&i===s||this._calcSampleValues()},_calcSampleValues:function(){for(var t=this._p[0],e=this._p[2],i=0;i<d;++i)this._mSampleValues[i]=r(i*u,t,e)},_getTForX:function(t){for(var e=this._p[0],i=this._p[2],s=this._mSampleValues,r=0,h=1,l=d-1;h!==l&&s[h]<=t;++h)r+=u;--h;var p=(t-s[h])/(s[h+1]-s[h]),m=r+p*u,c=a(m,e,i);return c>=.001?o(t,m,e,i):0===c?m:n(t,r,r+u,e,i)}},l}();!function(){for(var t=0,e=["ms","moz","webkit","o"],i=0;i<e.length&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[e[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[i]+"CancelAnimationFrame"]||window[e[i]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e,i){var s=(new Date).getTime(),r=Math.max(0,16-(s-t)),a=setTimeout(function(){e(s+r)},r);return t=s+r,a}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)})}();var bez=bezFunction(),dataManager=dataFunctionManager(),FontManager=function(){function t(t,e){var i=document.createElement("span");i.style.fontFamily=e;var s=document.createElement("span");s.innerHTML="giItT1WQy@!-/#",i.style.position="absolute",i.style.left="-10000px",i.style.top="-10000px",i.style.fontSize="300px",i.style.fontVariant="normal",i.style.fontStyle="normal",i.style.fontWeight="normal",i.style.letterSpacing="0",i.appendChild(s),document.body.appendChild(i);var r=s.offsetWidth;return s.style.fontFamily=t+", "+e,{node:s,w:r,parent:i}}function e(){var t,i,s,r=this.fonts.length,a=r;for(t=0;t<r;t+=1)if(this.fonts[t].loaded)a-=1;else if("t"===this.fonts[t].fOrigin||2===this.fonts[t].origin){if(window.Typekit&&window.Typekit.load&&0===this.typekitLoaded){this.typekitLoaded=1;try{window.Typekit.load({async:!0,active:function(){this.typekitLoaded=2}.bind(this)})}catch(t){}}2===this.typekitLoaded&&(this.fonts[t].loaded=!0)}else"n"===this.fonts[t].fOrigin||0===this.fonts[t].origin?this.fonts[t].loaded=!0:(i=this.fonts[t].monoCase.node,s=this.fonts[t].monoCase.w,i.offsetWidth!==s?(a-=1,this.fonts[t].loaded=!0):(i=this.fonts[t].sansCase.node,s=this.fonts[t].sansCase.w,i.offsetWidth!==s&&(a-=1,this.fonts[t].loaded=!0)),this.fonts[t].loaded&&(this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent),this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));0!==a&&Date.now()-this.initTime<h?setTimeout(e.bind(this),20):setTimeout(function(){this.loaded=!0}.bind(this),0)}function i(t,e){var i=document.createElementNS(svgNS,"text");i.style.fontSize="100px",i.style.fontFamily=e.fFamily,i.textContent="1",e.fClass?(i.style.fontFamily="inherit",i.className=e.fClass):i.style.fontFamily=e.fFamily,t.appendChild(i);var s=document.createElement("canvas").getContext("2d");return s.font="100px "+e.fFamily,s}function s(s,r){if(!s)return void(this.loaded=!0);if(this.chars)return this.loaded=!0,void(this.fonts=s.list);var a,n=s.list,o=n.length;for(a=0;a<o;a+=1){if(n[a].loaded=!1,n[a].monoCase=t(n[a].fFamily,"monospace"),n[a].sansCase=t(n[a].fFamily,"sans-serif"),n[a].fPath){if("p"===n[a].fOrigin||3===n[a].origin){var h=document.createElement("style");h.type="text/css",h.innerHTML="@font-face {font-family: "+n[a].fFamily+"; font-style: normal; src: url('"+n[a].fPath+"');}",r.appendChild(h)}else if("g"===n[a].fOrigin||1===n[a].origin){var l=document.createElement("link");l.type="text/css",l.rel="stylesheet",l.href=n[a].fPath,r.appendChild(l)}else if("t"===n[a].fOrigin||2===n[a].origin){var p=document.createElement("script");p.setAttribute("src",n[a].fPath),r.appendChild(p)}}else n[a].loaded=!0;n[a].helper=i(r,n[a]),this.fonts.push(n[a])}e.bind(this)()}function r(t){if(t){this.chars||(this.chars=[]);var e,i,s,r=t.length,a=this.chars.length;for(e=0;e<r;e+=1){for(i=0,s=!1;i<a;)this.chars[i].style===t[e].style&&this.chars[i].fFamily===t[e].fFamily&&this.chars[i].ch===t[e].ch&&(s=!0),i+=1;s||(this.chars.push(t[e]),a+=1)}}}function a(t,e,i){for(var s=0,r=this.chars.length;s<r;){if(this.chars[s].ch===t&&this.chars[s].style===e&&this.chars[s].fFamily===i)return this.chars[s];s+=1}}function n(t,e,i){return this.getFontByName(e).helper.measureText(t).width*i/100}function o(t){for(var e=0,i=this.fonts.length;e<i;){if(this.fonts[e].fName===t)return this.fonts[e];e+=1}return"sans-serif"}var h=5e3,l=function(){this.fonts=[],this.chars=null,this.typekitLoaded=0,this.loaded=!1,this.initTime=Date.now()};return l.prototype.addChars=r,l.prototype.addFonts=s,l.prototype.getCharData=a,l.prototype.getFontByName=o,l.prototype.measureText=n,l}(),PropertyFactory=function(){function t(t,e,i,s){var r,a=this.offsetTime;i.constructor===Array&&(r=Array.apply(null,{length:i.length}));for(var n,o,h=e,l=this.keyframes.length-1,p=!0;p;){if(n=this.keyframes[h],o=this.keyframes[h+1],h==l-1&&t>=o.t-a){n.h&&(n=o),e=0;break}if(o.t-a>t){e=h;break}h<l-1?h+=1:(e=0,p=!1)}var m,c,f,d,u,y;if(n.to){n.bezierData||bez.buildBezierData(n);var g=n.bezierData;if(t>=o.t-a||t<n.t-a){var v=t>=o.t-a?g.points.length-1:0;for(c=g.points[v].point.length,m=0;m<c;m+=1)r[m]=g.points[v].point[m];s._lastBezierData=null}else{n.__fnct?y=n.__fnct:(y=BezierFactory.getBezierEasing(n.o.x,n.o.y,n.i.x,n.i.y,n.n).get,n.__fnct=y),f=y((t-(n.t-a))/(o.t-a-(n.t-a)));var b,E=g.segmentLength*f,P=s.lastFrame<t&&s._lastBezierData===g?s._lastAddedLength:0;for(u=s.lastFrame<t&&s._lastBezierData===g?s._lastPoint:0,p=!0,d=g.points.length;p;){if(P+=g.points[u].partialLength,0===E||0===f||u==g.points.length-1){for(c=g.points[u].point.length,m=0;m<c;m+=1)r[m]=g.points[u].point[m];break}if(E>=P&&E<P+g.points[u+1].partialLength){for(b=(E-P)/g.points[u+1].partialLength,c=g.points[u].point.length,m=0;m<c;m+=1)r[m]=g.points[u].point[m]+(g.points[u+1].point[m]-g.points[u].point[m])*b;break}u<d-1?u+=1:p=!1}s._lastPoint=u,s._lastAddedLength=P-g.points[u].partialLength,s._lastBezierData=g}}else{var x,S,C,k,A;for(l=n.s.length,h=0;h<l;h+=1){if(1!==n.h&&(t>=o.t-a?f=1:t<n.t-a?f=0:(n.o.x.constructor===Array?(n.__fnct||(n.__fnct=[]),n.__fnct[h]?y=n.__fnct[h]:(x=n.o.x[h]||n.o.x[0],S=n.o.y[h]||n.o.y[0],C=n.i.x[h]||n.i.x[0],k=n.i.y[h]||n.i.y[0],y=BezierFactory.getBezierEasing(x,S,C,k).get,n.__fnct[h]=y)):n.__fnct?y=n.__fnct:(x=n.o.x,S=n.o.y,C=n.i.x,k=n.i.y,y=BezierFactory.getBezierEasing(x,S,C,k).get,n.__fnct=y),f=y((t-(n.t-a))/(o.t-a-(n.t-a))))),this.sh&&1!==n.h){var T=n.s[h],M=n.e[h];T-M<-180?T+=360:T-M>180&&(T-=360),A=T+(M-T)*f}else A=1===n.h?n.s[h]:n.s[h]+(n.e[h]-n.s[h])*f;1===l?r=A:r[h]=A}}return{value:r,iterationIndex:e}}function e(){if(this.elem.globalData.frameId!==this.frameId){this.mdf=!1;var t=this.comp.renderedFrame-this.offsetTime,e=this.keyframes[0].t-this.offsetTime,i=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(t===this._caching.lastFrame||this._caching.lastFrame!==p&&(this._caching.lastFrame>=i&&t>=i||this._caching.lastFrame<e&&t<e))){var s=this._caching.lastFrame<t?this._caching.lastIndex:0,r=this.interpolateValue(t,s,this.pv,this._caching);if(this._caching.lastIndex=r.iterationIndex,this.pv.constructor===Array)for(s=0;s<this.v.length;)this.pv[s]=r.value[s],this.v[s]=this.mult?this.pv[s]*this.mult:this.pv[s],this.lastPValue[s]!==this.pv[s]&&(this.mdf=!0,this.lastPValue[s]=this.pv[s]),s+=1;else this.pv=r.value,this.v=this.mult?this.pv*this.mult:this.pv,this.lastPValue!=this.pv&&(this.mdf=!0,this.lastPValue=this.pv)}this._caching.lastFrame=t,this.frameId=this.elem.globalData.frameId}}function i(){}function s(t,e,s){this.mult=s,this.v=s?e.k*s:e.k,this.pv=e.k,this.mdf=!1,this.comp=t.comp,this.k=!1,this.kf=!1,this.vel=0,this.getValue=i}function r(t,e,s){this.mult=s,this.data=e,this.mdf=!1,this.comp=t.comp,this.k=!1,this.kf=!1,this.frameId=-1,this.v=Array.apply(null,{length:e.k.length}),this.pv=Array.apply(null,{length:e.k.length}),this.lastValue=Array.apply(null,{length:e.k.length});var r=Array.apply(null,{length:e.k.length});this.vel=r.map(function(){return 0});var a,n=e.k.length;for(a=0;a<n;a+=1)this.v[a]=s?e.k[a]*s:e.k[a],this.pv[a]=e.k[a];this.getValue=i}function a(i,s,r){this.keyframes=s.k,this.offsetTime=i.data.st,this.lastValue=-99999,this.lastPValue=-99999,this.frameId=-1,this._caching={lastFrame:p,lastIndex:0},this.k=!0,this.kf=!0,this.data=s,this.mult=r,this.elem=i,this.comp=i.comp,this.v=r?s.k[0].s[0]*r:s.k[0].s[0],this.pv=s.k[0].s[0],this.getValue=e,this.interpolateValue=t}function n(i,s,r){var a,n,o,h,l,m=s.k.length;for(a=0;a<m-1;a+=1)s.k[a].to&&s.k[a].s&&s.k[a].e&&(n=s.k[a].s,o=s.k[a].e,h=s.k[a].to,l=s.k[a].ti,(2===n.length&&(n[0]!==o[0]||n[1]!==o[1])&&bez.pointOnLine2D(n[0],n[1],o[0],o[1],n[0]+h[0],n[1]+h[1])&&bez.pointOnLine2D(n[0],n[1],o[0],o[1],o[0]+l[0],o[1]+l[1])||3===n.length&&(n[0]!==o[0]||n[1]!==o[1]||n[2]!==o[2])&&bez.pointOnLine3D(n[0],n[1],n[2],o[0],o[1],o[2],n[0]+h[0],n[1]+h[1],n[2]+h[2])&&bez.pointOnLine3D(n[0],n[1],n[2],o[0],o[1],o[2],o[0]+l[0],o[1]+l[1],o[2]+l[2]))&&(s.k[a].to=null,s.k[a].ti=null));this.keyframes=s.k,this.offsetTime=i.data.st,this.k=!0,this.kf=!0,this.mult=r,this.elem=i,this.comp=i.comp,this._caching={lastFrame:p,lastIndex:0},this.getValue=e,this.interpolateValue=t,this.frameId=-1,this.v=Array.apply(null,{length:s.k[0].s.length}),this.pv=Array.apply(null,{length:s.k[0].s.length}),this.lastValue=Array.apply(null,{length:s.k[0].s.length}),this.lastPValue=Array.apply(null,{length:s.k[0].s.length})}function o(t,e,i,o,h){var l;if(2===i)l=new m(t,e,h);else if(0===e.a)l=0===i?new s(t,e,o):new r(t,e,o);else if(1===e.a)l=0===i?new a(t,e,o):new n(t,e,o);else if(e.k.length)if("number"==typeof e.k[0])l=new r(t,e,o);else switch(i){case 0:l=new a(t,e,o);break;case 1:l=new n(t,e,o)}else l=new s(t,e,o);return l.k&&h.push(l),l}function h(t,e,i,s){return new f(t,e,i,s)}function l(t,e,i){return new d(t,e,i)}var p=-999999,m=function(){function t(){return this.p?ExpressionValue(this.p):[this.px.v,this.py.v,this.pz?this.pz.v:0]}function e(){return ExpressionValue(this.px)}function i(){return ExpressionValue(this.py)}function s(){return ExpressionValue(this.a)}function r(){return ExpressionValue(this.or)}function a(){return this.r?ExpressionValue(this.r,1/degToRads):ExpressionValue(this.rz,1/degToRads)}function n(){return ExpressionValue(this.s,100)}function o(){return ExpressionValue(this.o,100)}function h(){return ExpressionValue(this.sk)}function l(){return ExpressionValue(this.sa)}function p(t){var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.mdf=!0);this.a&&t.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&t.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.r?t.rotate(-this.r.v):t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.data.p.s?this.data.p.z?t.translate(this.px.v,this.py.v,-this.pz.v):t.translate(this.px.v,this.py.v,0):t.translate(this.p.v[0],this.p.v[1],-this.p.v[2])}function m(){if(this.elem.globalData.frameId!==this.frameId){this.mdf=!1;var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.dynamicProperties[t].mdf&&(this.mdf=!0);if(this.mdf){if(this.v.reset(),this.a&&this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&this.v.skewFromAxis(-this.sk.v,this.sa.v),this.r?this.v.rotate(-this.r.v):this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.autoOriented&&this.p.keyframes&&this.p.getValueAtTime){var i,s;this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t?(i=this.p.getValueAtTime((this.p.keyframes[0].t+.01)/this.elem.globalData.frameRate,0),s=this.p.getValueAtTime(this.p.keyframes[0].t/this.elem.globalData.frameRate,0)):this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t?(i=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/this.elem.globalData.frameRate,0),s=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-.01)/this.elem.globalData.frameRate,0)):(i=this.p.pv,s=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-.01)/this.elem.globalData.frameRate,this.p.offsetTime)),this.v.rotate(-Math.atan2(i[1]-s[1],i[0]-s[0]))}this.data.p.s?this.data.p.z?this.v.translate(this.px.v,this.py.v,-this.pz.v):this.v.translate(this.px.v,this.py.v,0):this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2])}this.frameId=this.elem.globalData.frameId}}function c(){this.inverted=!0,this.iv=new Matrix,this.k||(this.data.p.s?this.iv.translate(this.px.v,this.py.v,-this.pz.v):this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]),this.r?this.iv.rotate(-this.r.v):this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),this.s&&this.iv.scale(this.s.v[0],this.s.v[1],1),this.a&&this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]))}function f(){}return function(d,u,y){this.elem=d,this.frameId=-1,this.type="transform",this.dynamicProperties=[],this.mdf=!1,this.data=u,this.getValue=m,this.applyToMatrix=p,this.setInverted=c,this.autoOrient=f,this.v=new Matrix,u.p.s?(this.px=PropertyFactory.getProp(d,u.p.x,0,0,this.dynamicProperties),this.py=PropertyFactory.getProp(d,u.p.y,0,0,this.dynamicProperties),u.p.z&&(this.pz=PropertyFactory.getProp(d,u.p.z,0,0,this.dynamicProperties))):this.p=PropertyFactory.getProp(d,u.p,1,0,this.dynamicProperties),u.r?this.r=PropertyFactory.getProp(d,u.r,0,degToRads,this.dynamicProperties):u.rx&&(this.rx=PropertyFactory.getProp(d,u.rx,0,degToRads,this.dynamicProperties),this.ry=PropertyFactory.getProp(d,u.ry,0,degToRads,this.dynamicProperties),this.rz=PropertyFactory.getProp(d,u.rz,0,degToRads,this.dynamicProperties),this.or=PropertyFactory.getProp(d,u.or,1,degToRads,this.dynamicProperties),this.or.sh=!0),u.sk&&(this.sk=PropertyFactory.getProp(d,u.sk,0,degToRads,this.dynamicProperties),this.sa=PropertyFactory.getProp(d,u.sa,0,degToRads,this.dynamicProperties)),u.a&&(this.a=PropertyFactory.getProp(d,u.a,1,0,this.dynamicProperties)),u.s&&(this.s=PropertyFactory.getProp(d,u.s,1,.01,this.dynamicProperties)),u.o?this.o=PropertyFactory.getProp(d,u.o,0,.01,this.dynamicProperties):this.o={mdf:!1,v:1},this.dynamicProperties.length?y.push(this):(this.a&&this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&this.v.skewFromAxis(-this.sk.v,this.sa.v),this.r?this.v.rotate(-this.r.v):this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.data.p.s?u.p.z?this.v.translate(this.px.v,this.py.v,-this.pz.v):this.v.translate(this.px.v,this.py.v,0):this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2])),Object.defineProperty(this,"position",{get:t}),Object.defineProperty(this,"xPosition",{get:e}),Object.defineProperty(this,"yPosition",{get:i}),Object.defineProperty(this,"orientation",{get:r}),Object.defineProperty(this,"anchorPoint",{get:s}),Object.defineProperty(this,"rotation",{get:a}),Object.defineProperty(this,"scale",{get:n}),Object.defineProperty(this,"opacity",{get:o}),Object.defineProperty(this,"skew",{get:h}),Object.defineProperty(this,"skewAxis",{get:l})}}(),c=function(){function t(t){if(this.prop.getValue(),this.cmdf=!1,this.omdf=!1,this.prop.mdf||t){var e,i,s,r=4*this.data.p;for(e=0;e<r;e+=1)i=e%4==0?100:255,s=Math.round(this.prop.v[e]*i),this.c[e]!==s&&(this.c[e]=s,this.cmdf=!0);if(this.o.length)for(r=this.prop.v.length,e=4*this.data.p;e<r;e+=1)i=e%2==0?100:1,s=e%2==0?Math.round(100*this.prop.v[e]):this.prop.v[e],this.o[e-4*this.data.p]!==s&&(this.o[e-4*this.data.p]=s,this.omdf=!0)}}function e(e,i,s){this.prop=o(e,i.k,1,null,[]),this.data=i,this.k=this.prop.k,this.c=Array.apply(null,{length:4*i.p});var r=i.k.k[0].s?i.k.k[0].s.length-4*i.p:i.k.k.length-4*i.p;this.o=Array.apply(null,{length:r}),this.cmdf=!1,this.omdf=!1,this.getValue=t,this.prop.k&&s.push(this),this.getValue(!0)}return function(t,i,s){return new e(t,i,s)}}(),f=function(){function t(t){var e=0,i=this.dataProps.length;if(this.elem.globalData.frameId!==this.frameId||t){for(this.mdf=!1,this.frameId=this.elem.globalData.frameId;e<i;){if(this.dataProps[e].p.mdf){this.mdf=!0;break}e+=1}if(this.mdf||t)for("svg"===this.renderer&&(this.dasharray=""),e=0;e<i;e+=1)"o"!=this.dataProps[e].n?"svg"===this.renderer?this.dasharray+=" "+this.dataProps[e].p.v:this.dasharray[e]=this.dataProps[e].p.v:this.dashoffset=this.dataProps[e].p.v}}return function(e,i,s,r){this.elem=e,this.frameId=-1,this.dataProps=new Array(i.length),this.renderer=s,this.mdf=!1,this.k=!1,"svg"===this.renderer?this.dasharray="":this.dasharray=new Array(i.length-1),this.dashoffset=0;var a,n,o=i.length;for(a=0;a<o;a+=1)n=PropertyFactory.getProp(e,i[a].v,0,0,r),this.k=!!n.k||this.k,this.dataProps[a]={n:i[a].n,p:n};this.getValue=t,this.k?r.push(this):this.getValue(!0)}}(),d=function(){function t(t){if(this.mdf=t||!1,this.dynamicProperties.length){var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.mdf=!0)}var s=this.elem.textProperty.currentData?this.elem.textProperty.currentData.l.length:0;t&&2===this.data.r&&(this.e.v=s);var r=2===this.data.r?1:100/s,a=this.o.v/r,n=this.s.v/r+a,o=this.e.v/r+a;if(n>o){var h=n;n=o,o=h}this.finalS=n,this.finalE=o}function e(t){var e=BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get,a=0,n=this.finalS,o=this.finalE,h=this.data.sh;if(2==h)a=o===n?t>=o?1:0:i(0,s(.5/(o-n)+(t-n)/(o-n),1)),a=e(a);else if(3==h)a=o===n?t>=o?0:1:1-i(0,s(.5/(o-n)+(t-n)/(o-n),1)),a=e(a);else if(4==h)o===n?a=0:(a=i(0,s(.5/(o-n)+(t-n)/(o-n),1)),a<.5?a*=2:a=1-2*(a-.5)),a=e(a);else if(5==h){if(o===n)a=0;else{var l=o-n;t=s(i(0,t+.5-n),o-n);var p=-l/2+t,m=l/2;a=Math.sqrt(1-p*p/(m*m))}a=e(a)}else 6==h?(o===n?a=0:(t=s(i(0,t+.5-n),o-n),a=(1+Math.cos(Math.PI+2*Math.PI*t/(o-n)))/2),a=e(a)):(t>=r(n)&&(a=t-n<0?1-(n-t):i(0,s(o-t,1))),a=e(a));return a*this.a.v}var i=Math.max,s=Math.min,r=Math.floor;return function(i,s,r){this.mdf=!1,this.k=!1,this.data=s,this.dynamicProperties=[],this.getValue=t,this.getMult=e,this.elem=i,this.comp=i.comp,this.finalS=0,this.finalE=0,this.s=PropertyFactory.getProp(i,s.s||{k:0},0,0,this.dynamicProperties),this.e="e"in s?PropertyFactory.getProp(i,s.e,0,0,this.dynamicProperties):{v:100},this.o=PropertyFactory.getProp(i,s.o||{k:0},0,0,this.dynamicProperties),this.xe=PropertyFactory.getProp(i,s.xe||{k:0},0,0,this.dynamicProperties),this.ne=PropertyFactory.getProp(i,s.ne||{k:0},0,0,this.dynamicProperties),this.a=PropertyFactory.getProp(i,s.a,0,.01,this.dynamicProperties),this.dynamicProperties.length?r.push(this):this.getValue()}}();return{getProp:o,getDashProp:h,getTextSelectorProp:l,getGradientProp:c}}();ShapePath.prototype.setPathData=function(t,e){this.c=t,this.setLength(e);for(var i=0;i<e;)this.v[i]=point_pool.newPoint(),this.o[i]=point_pool.newPoint(),this.i[i]=point_pool.newPoint(),i+=1},ShapePath.prototype.setLength=function(t){for(;this._maxLength<t;)this.doubleArrayLength();this._length=t},ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(Array.apply(null,{length:this._maxLength})),this.i=this.i.concat(Array.apply(null,{length:this._maxLength})),this.o=this.o.concat(Array.apply(null,{length:this._maxLength})),this._maxLength*=2},ShapePath.prototype.setXYAt=function(t,e,i,s,r){var a;switch(this._length=Math.max(this._length,s+1),this._length>=this._maxLength&&this.doubleArrayLength(),i){case"v":a=this.v;break;case"i":a=this.i;break;case"o":a=this.o}(!a[s]||a[s]&&!r)&&(a[s]=point_pool.newPoint()),a[s][0]=t,a[s][1]=e},ShapePath.prototype.setTripleAt=function(t,e,i,s,r,a,n,o){this.setXYAt(t,e,"v",n,o),this.setXYAt(i,s,"o",n,o),this.setXYAt(r,a,"i",n,o)};var ShapePropertyFactory=function(){function t(t,e,i,s){var r,a,n;if(t<this.keyframes[0].t-this.offsetTime)r=this.keyframes[0].s[0],n=!0,e=0;else if(t>=this.keyframes[this.keyframes.length-1].t-this.offsetTime)r=1===this.keyframes[this.keyframes.length-2].h?this.keyframes[this.keyframes.length-1].s[0]:this.keyframes[this.keyframes.length-2].e[0],n=!0;else{for(var o,h,l,p,m,c,f=e,d=this.keyframes.length-1,u=!0;u&&(o=this.keyframes[f],h=this.keyframes[f+1],!(h.t-this.offsetTime>t));)f<d-1?f+=1:u=!1;n=1===o.h,e=f;var y;if(!n){if(t>=h.t-this.offsetTime)y=1;else if(t<o.t-this.offsetTime)y=0;else{var g;o.__fnct?g=o.__fnct:(g=BezierFactory.getBezierEasing(o.o.x,o.o.y,o.i.x,o.i.y).get,o.__fnct=g),y=g((t-(o.t-this.offsetTime))/(h.t-this.offsetTime-(o.t-this.offsetTime)))}a=o.e[0]}r=o.s[0]}p=i._length,c=r.i[0].length;var v,b=!1;for(l=0;l<p;l+=1)for(m=0;m<c;m+=1)n?(v=r.i[l][m],i.i[l][m]!==v&&(i.i[l][m]=v,s&&(this.pv.i[l][m]=v),b=!0),v=r.o[l][m],i.o[l][m]!==v&&(i.o[l][m]=v,s&&(this.pv.o[l][m]=v),b=!0),v=r.v[l][m],i.v[l][m]!==v&&(i.v[l][m]=v,s&&(this.pv.v[l][m]=v),b=!0)):(v=r.i[l][m]+(a.i[l][m]-r.i[l][m])*y,i.i[l][m]!==v&&(i.i[l][m]=v,s&&(this.pv.i[l][m]=v),b=!0),v=r.o[l][m]+(a.o[l][m]-r.o[l][m])*y,i.o[l][m]!==v&&(i.o[l][m]=v,s&&(this.pv.o[l][m]=v),b=!0),v=r.v[l][m]+(a.v[l][m]-r.v[l][m])*y,i.v[l][m]!==v&&(i.v[l][m]=v,s&&(this.pv.v[l][m]=v),b=!0));return b&&(i.c=r.c),{iterationIndex:e,hasModified:b}}function e(){if(this.elem.globalData.frameId!==this.frameId){this.mdf=!1;var t=this.comp.renderedFrame-this.offsetTime,e=this.keyframes[0].t-this.offsetTime,i=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(this.lastFrame===l||!(this.lastFrame<e&&t<e||this.lastFrame>i&&t>i)){var s=this.lastFrame<t?this._lastIndex:0,r=this.interpolateShape(t,s,this.v,!0);this._lastIndex=r.iterationIndex,this.mdf=r.hasModified,r.hasModified&&(this.paths=this.localShapeCollection)}this.lastFrame=t,this.frameId=this.elem.globalData.frameId}}function i(){return this.v}function s(){this.paths=this.localShapeCollection,this.k||(this.mdf=!1)}function r(t,e,i){this.__shapeObject=1,this.comp=t.comp,this.k=!1,this.mdf=!1;var r=3===i?e.pt.k:e.ks.k;this.v=shape_pool.clone(r),this.pv=shape_pool.clone(this.v),this.localShapeCollection=shapeCollection_pool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.reset=s}function a(t,e,i){this.__shapeObject=1,this.comp=t.comp,this.elem=t,this.offsetTime=t.data.st,this._lastIndex=0,
this.keyframes=3===i?e.pt.k:e.ks.k,this.k=!0,this.kf=!0;var r=this.keyframes[0].s[0].i.length;this.keyframes[0].s[0].i[0].length;this.v=shape_pool.newShape(),this.v.setPathData(this.keyframes[0].s[0].c,r),this.pv=shape_pool.clone(this.v),this.localShapeCollection=shapeCollection_pool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.lastFrame=l,this.reset=s}function n(t,e,i,s){var n;if(3===i||4===i){var o=3===i?e.pt:e.ks,h=o.k;n=1===o.a||h.length?new a(t,e,i):new r(t,e,i)}else 5===i?n=new c(t,e):6===i?n=new p(t,e):7===i&&(n=new m(t,e));return n.k&&s.push(n),n}function o(){return r}function h(){return a}var l=-999999;r.prototype.interpolateShape=t,r.prototype.getValue=i,a.prototype.getValue=e,a.prototype.interpolateShape=t;var p=function(){function t(){var t=this.p.v[0],e=this.p.v[1],s=this.s.v[0]/2,r=this.s.v[1]/2;3!==this.d?(this.v.v[0][0]=t,this.v.v[0][1]=e-r,this.v.v[1][0]=t+s,this.v.v[1][1]=e,this.v.v[2][0]=t,this.v.v[2][1]=e+r,this.v.v[3][0]=t-s,this.v.v[3][1]=e,this.v.i[0][0]=t-s*i,this.v.i[0][1]=e-r,this.v.i[1][0]=t+s,this.v.i[1][1]=e-r*i,this.v.i[2][0]=t+s*i,this.v.i[2][1]=e+r,this.v.i[3][0]=t-s,this.v.i[3][1]=e+r*i,this.v.o[0][0]=t+s*i,this.v.o[0][1]=e-r,this.v.o[1][0]=t+s,this.v.o[1][1]=e+r*i,this.v.o[2][0]=t-s*i,this.v.o[2][1]=e+r,this.v.o[3][0]=t-s,this.v.o[3][1]=e-r*i):(this.v.v[0][0]=t,this.v.v[0][1]=e-r,this.v.v[1][0]=t-s,this.v.v[1][1]=e,this.v.v[2][0]=t,this.v.v[2][1]=e+r,this.v.v[3][0]=t+s,this.v.v[3][1]=e,this.v.i[0][0]=t+s*i,this.v.i[0][1]=e-r,this.v.i[1][0]=t-s,this.v.i[1][1]=e-r*i,this.v.i[2][0]=t-s*i,this.v.i[2][1]=e+r,this.v.i[3][0]=t+s,this.v.i[3][1]=e+r*i,this.v.o[0][0]=t-s*i,this.v.o[0][1]=e-r,this.v.o[1][0]=t-s,this.v.o[1][1]=e+r*i,this.v.o[2][0]=t+s*i,this.v.o[2][1]=e+r,this.v.o[3][0]=t+s,this.v.o[3][1]=e-r*i)}function e(t){var e,i=this.dynamicProperties.length;if(this.elem.globalData.frameId!==this.frameId){for(this.mdf=!1,this.frameId=this.elem.globalData.frameId,e=0;e<i;e+=1)this.dynamicProperties[e].getValue(t),this.dynamicProperties[e].mdf&&(this.mdf=!0);this.mdf&&this.convertEllToPath()}}var i=roundCorner;return function(i,r){this.v=shape_pool.newShape(),this.v.setPathData(!0,4),this.localShapeCollection=shapeCollection_pool.newShapeCollection(),this.paths=this.localShapeCollection,this.localShapeCollection.addShape(this.v),this.d=r.d,this.dynamicProperties=[],this.elem=i,this.comp=i.comp,this.frameId=-1,this.mdf=!1,this.getValue=e,this.convertEllToPath=t,this.reset=s,this.p=PropertyFactory.getProp(i,r.p,1,0,this.dynamicProperties),this.s=PropertyFactory.getProp(i,r.s,1,0,this.dynamicProperties),this.dynamicProperties.length?this.k=!0:this.convertEllToPath()}}(),m=function(){function t(){var t,e=Math.floor(this.pt.v),i=2*Math.PI/e,s=this.or.v,r=this.os.v,a=2*Math.PI*s/(4*e),n=-Math.PI/2,o=3===this.data.d?-1:1;for(n+=this.r.v,this.v._length=0,t=0;t<e;t+=1){var h=s*Math.cos(n),l=s*Math.sin(n),p=0===h&&0===l?0:l/Math.sqrt(h*h+l*l),m=0===h&&0===l?0:-h/Math.sqrt(h*h+l*l);h+=+this.p.v[0],l+=+this.p.v[1],this.v.setTripleAt(h,l,h-p*a*r*o,l-m*a*r*o,h+p*a*r*o,l+m*a*r*o,t,!0),n+=i*o}this.paths.length=0,this.paths[0]=this.v}function e(){var t,e,i,s,r=2*Math.floor(this.pt.v),a=2*Math.PI/r,n=!0,o=this.or.v,h=this.ir.v,l=this.os.v,p=this.is.v,m=2*Math.PI*o/(2*r),c=2*Math.PI*h/(2*r),f=-Math.PI/2;f+=this.r.v;var d=3===this.data.d?-1:1;for(this.v._length=0,t=0;t<r;t+=1){e=n?o:h,i=n?l:p,s=n?m:c;var u=e*Math.cos(f),y=e*Math.sin(f),g=0===u&&0===y?0:y/Math.sqrt(u*u+y*y),v=0===u&&0===y?0:-u/Math.sqrt(u*u+y*y);u+=+this.p.v[0],y+=+this.p.v[1],this.v.setTripleAt(u,y,u-g*s*i*d,y-v*s*i*d,u+g*s*i*d,y+v*s*i*d,t,!0),n=!n,f+=a*d}}function i(){if(this.elem.globalData.frameId!==this.frameId){this.mdf=!1,this.frameId=this.elem.globalData.frameId;var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.dynamicProperties[t].mdf&&(this.mdf=!0);this.mdf&&this.convertToPath()}}return function(r,a){this.v=shape_pool.newShape(),this.v.setPathData(!0,0),this.elem=r,this.comp=r.comp,this.data=a,this.frameId=-1,this.d=a.d,this.dynamicProperties=[],this.mdf=!1,this.getValue=i,this.reset=s,1===a.sy?(this.ir=PropertyFactory.getProp(r,a.ir,0,0,this.dynamicProperties),this.is=PropertyFactory.getProp(r,a.is,0,.01,this.dynamicProperties),this.convertToPath=e):this.convertToPath=t,this.pt=PropertyFactory.getProp(r,a.pt,0,0,this.dynamicProperties),this.p=PropertyFactory.getProp(r,a.p,1,0,this.dynamicProperties),this.r=PropertyFactory.getProp(r,a.r,0,degToRads,this.dynamicProperties),this.or=PropertyFactory.getProp(r,a.or,0,0,this.dynamicProperties),this.os=PropertyFactory.getProp(r,a.os,0,.01,this.dynamicProperties),this.localShapeCollection=shapeCollection_pool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.dynamicProperties.length?this.k=!0:this.convertToPath()}}(),c=function(){function t(t){if(this.elem.globalData.frameId!==this.frameId){this.mdf=!1,this.frameId=this.elem.globalData.frameId;var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(t),this.dynamicProperties[e].mdf&&(this.mdf=!0);this.mdf&&this.convertRectToPath()}}function e(){var t=this.p.v[0],e=this.p.v[1],i=this.s.v[0]/2,s=this.s.v[1]/2,r=bm_min(i,s,this.r.v),a=r*(1-roundCorner);this.v._length=0,2===this.d||1===this.d?(this.v.setTripleAt(t+i,e-s+r,t+i,e-s+r,t+i,e-s+a,0,!0),this.v.setTripleAt(t+i,e+s-r,t+i,e+s-a,t+i,e+s-r,1,!0),0!==r?(this.v.setTripleAt(t+i-r,e+s,t+i-r,e+s,t+i-a,e+s,2,!0),this.v.setTripleAt(t-i+r,e+s,t-i+a,e+s,t-i+r,e+s,3,!0),this.v.setTripleAt(t-i,e+s-r,t-i,e+s-r,t-i,e+s-a,4,!0),this.v.setTripleAt(t-i,e-s+r,t-i,e-s+a,t-i,e-s+r,5,!0),this.v.setTripleAt(t-i+r,e-s,t-i+r,e-s,t-i+a,e-s,6,!0),this.v.setTripleAt(t+i-r,e-s,t+i-a,e-s,t+i-r,e-s,7,!0)):(this.v.setTripleAt(t-i,e+s,t-i+a,e+s,t-i,e+s,2),this.v.setTripleAt(t-i,e-s,t-i,e-s+a,t-i,e-s,3))):(this.v.setTripleAt(t+i,e-s+r,t+i,e-s+a,t+i,e-s+r,0,!0),0!==r?(this.v.setTripleAt(t+i-r,e-s,t+i-r,e-s,t+i-a,e-s,1,!0),this.v.setTripleAt(t-i+r,e-s,t-i+a,e-s,t-i+r,e-s,2,!0),this.v.setTripleAt(t-i,e-s+r,t-i,e-s+r,t-i,e-s+a,3,!0),this.v.setTripleAt(t-i,e+s-r,t-i,e+s-a,t-i,e+s-r,4,!0),this.v.setTripleAt(t-i+r,e+s,t-i+r,e+s,t-i+a,e+s,5,!0),this.v.setTripleAt(t+i-r,e+s,t+i-a,e+s,t+i-r,e+s,6,!0),this.v.setTripleAt(t+i,e+s-r,t+i,e+s-r,t+i,e+s-a,7,!0)):(this.v.setTripleAt(t-i,e-s,t-i+a,e-s,t-i,e-s,1,!0),this.v.setTripleAt(t-i,e+s,t-i,e+s-a,t-i,e+s,2,!0),this.v.setTripleAt(t+i,e+s,t+i-a,e+s,t+i,e+s,3,!0)))}return function(i,r){this.v=shape_pool.newShape(),this.v.c=!0,this.localShapeCollection=shapeCollection_pool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.elem=i,this.comp=i.comp,this.frameId=-1,this.d=r.d,this.dynamicProperties=[],this.mdf=!1,this.getValue=t,this.convertRectToPath=e,this.reset=s,this.p=PropertyFactory.getProp(i,r.p,1,0,this.dynamicProperties),this.s=PropertyFactory.getProp(i,r.s,1,0,this.dynamicProperties),this.r=PropertyFactory.getProp(i,r.r,0,0,this.dynamicProperties),this.dynamicProperties.length?this.k=!0:this.convertRectToPath()}}(),f={};return f.getShapeProp=n,f.getConstructorFunction=o,f.getKeyframedConstructorFunction=h,f}(),ShapeModifiers=function(){function t(t,e){s[t]||(s[t]=e)}function e(t,e,i,r){return new s[t](e,i,r)}var i={},s={};return i.registerModifier=t,i.getModifier=e,i}();ShapeModifier.prototype.initModifierProperties=function(){},ShapeModifier.prototype.addShapeToModifier=function(){},ShapeModifier.prototype.addShape=function(t){this.closed||(this.shapes.push({shape:t.sh,data:t,localShapeCollection:shapeCollection_pool.newShapeCollection()}),this.addShapeToModifier(t.sh))},ShapeModifier.prototype.init=function(t,e,i){this.elem=t,this.frameId=-1,this.shapes=[],this.dynamicProperties=[],this.mdf=!1,this.closed=!1,this.k=!1,this.comp=t.comp,this.initModifierProperties(t,e),this.dynamicProperties.length?(this.k=!0,i.push(this)):this.getValue(!0)},extendPrototype(ShapeModifier,TrimModifier),TrimModifier.prototype.processKeys=function(t){if(this.elem.globalData.frameId!==this.frameId||t){this.mdf=!!t,this.frameId=this.elem.globalData.frameId;var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.mdf=!0);if(this.mdf||t){var s=this.o.v%360/360;s<0&&(s+=1);var r=this.s.v+s,a=this.e.v+s;if(r>a){var n=r;r=a,a=n}this.sValue=r,this.eValue=a,this.oValue=s}}},TrimModifier.prototype.initModifierProperties=function(t,e){this.sValue=0,this.eValue=0,this.oValue=0,this.getValue=this.processKeys,this.s=PropertyFactory.getProp(t,e.s,0,.01,this.dynamicProperties),this.e=PropertyFactory.getProp(t,e.e,0,.01,this.dynamicProperties),this.o=PropertyFactory.getProp(t,e.o,0,0,this.dynamicProperties),this.m=e.m,this.dynamicProperties.length||this.getValue(!0)},TrimModifier.prototype.calculateShapeEdges=function(t,e,i,s,r){var a=[];e<=1?a.push({s:t,e:e}):t>=1?a.push({s:t-1,e:e-1}):(a.push({s:t,e:1}),a.push({s:0,e:e-1}));var n,o,h=[],l=a.length;for(n=0;n<l;n+=1)if(o=a[n],o.e*r<s||o.s*r>s+i);else{var p,m;p=o.s*r<=s?0:(o.s*r-s)/i,m=o.e*r>=s+i?1:(o.e*r-s)/i,h.push([p,m])}return h.length||h.push([0,0]),h},TrimModifier.prototype.processShapes=function(t){var e,i,s,r,a,n,o,h=this.shapes.length,l=this.sValue,p=this.eValue,m=0;if(p===l)for(i=0;i<h;i+=1)this.shapes[i].localShapeCollection.releaseShapes(),this.shapes[i].shape.mdf=!0,this.shapes[i].shape.paths=this.shapes[i].localShapeCollection;else if(1===p&&0===l||0===p&&1===l){if(this.mdf)for(i=0;i<h;i+=1)this.shapes[i].shape.mdf=!0}else{var c,f,d=[];for(i=0;i<h;i+=1)if(c=this.shapes[i],c.shape.mdf||this.mdf||t||2===this.m){if(e=c.shape.paths,r=e._length,o=0,!c.shape.mdf&&c.pathsData)o=c.totalShapeLength;else{for(a=[],s=0;s<r;s+=1)n=bez.getSegmentsLength(e.shapes[s]),a.push(n),o+=n.totalLength;c.totalShapeLength=o,c.pathsData=a}m+=o,c.shape.mdf=!0}else c.shape.paths=c.localShapeCollection;var s,r,u=l,y=p,g=0;for(i=h-1;i>=0;i-=1)if(c=this.shapes[i],c.shape.mdf){if(f=c.localShapeCollection,f.releaseShapes(),2===this.m&&h>1){var v=this.calculateShapeEdges(l,p,c.totalShapeLength,g,m);g+=c.totalShapeLength}else v=[[u,y]];for(r=v.length,s=0;s<r;s+=1){u=v[s][0],y=v[s][1],d.length=0,y<=1?d.push({s:c.totalShapeLength*u,e:c.totalShapeLength*y}):u>=1?d.push({s:c.totalShapeLength*(u-1),e:c.totalShapeLength*(y-1)}):(d.push({s:c.totalShapeLength*u,e:c.totalShapeLength}),d.push({s:0,e:c.totalShapeLength*(y-1)}));var b=this.addShapes(c,d[0]);if(d[0].s!==d[0].e){if(d.length>1)if(c.shape.v.c){var E=b.pop();this.addPaths(b,f),b=this.addShapes(c,d[1],E)}else this.addPaths(b,f),b=this.addShapes(c,d[1]);this.addPaths(b,f)}}c.shape.paths=f}}this.dynamicProperties.length||(this.mdf=!1)},TrimModifier.prototype.addPaths=function(t,e){var i,s=t.length;for(i=0;i<s;i+=1)e.addShape(t[i])},TrimModifier.prototype.addSegment=function(t,e,i,s,r,a,n){r.setXYAt(e[0],e[1],"o",a),r.setXYAt(i[0],i[1],"i",a+1),n&&r.setXYAt(t[0],t[1],"v",a),r.setXYAt(s[0],s[1],"v",a+1)},TrimModifier.prototype.addShapes=function(t,e,i){var s,r,a,n,o,h,l,p,m=t.pathsData,c=t.shape.paths.shapes,f=t.shape.paths._length,d=0,u=[],y=!0;for(i?(o=i._length,p=i._length):(i=shape_pool.newShape(),o=0,p=0),u.push(i),s=0;s<f;s+=1){for(h=m[s].lengths,i.c=c[s].c,a=c[s].c?h.length:h.length+1,r=1;r<a;r+=1)if(n=h[r-1],d+n.addedLength<e.s)d+=n.addedLength,i.c=!1;else{if(d>e.e){i.c=!1;break}e.s<=d&&e.e>=d+n.addedLength?(this.addSegment(c[s].v[r-1],c[s].o[r-1],c[s].i[r],c[s].v[r],i,o,y),y=!1):(l=bez.getNewSegment(c[s].v[r-1],c[s].v[r],c[s].o[r-1],c[s].i[r],(e.s-d)/n.addedLength,(e.e-d)/n.addedLength,h[r-1]),this.addSegment(l.pt1,l.pt3,l.pt4,l.pt2,i,o,y),y=!1,i.c=!1),d+=n.addedLength,o+=1}if(c[s].c){if(n=h[r-1],d<=e.e){var g=h[r-1].addedLength;e.s<=d&&e.e>=d+g?(this.addSegment(c[s].v[r-1],c[s].o[r-1],c[s].i[0],c[s].v[0],i,o,y),y=!1):(l=bez.getNewSegment(c[s].v[r-1],c[s].v[0],c[s].o[r-1],c[s].i[0],(e.s-d)/g,(e.e-d)/g,h[r-1]),this.addSegment(l.pt1,l.pt3,l.pt4,l.pt2,i,o,y),y=!1,i.c=!1)}else i.c=!1;d+=n.addedLength,o+=1}if(i._length&&(i.setXYAt(i.v[p][0],i.v[p][1],"i",p),i.setXYAt(i.v[i._length-1][0],i.v[i._length-1][1],"o",i._length-1)),d>e.e)break;s<f-1&&(i=shape_pool.newShape(),y=!0,u.push(i),o=0)}return u},ShapeModifiers.registerModifier("tm",TrimModifier),extendPrototype(ShapeModifier,RoundCornersModifier),RoundCornersModifier.prototype.processKeys=function(t){if(this.elem.globalData.frameId!==this.frameId||t){this.mdf=!!t,this.frameId=this.elem.globalData.frameId;var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.mdf=!0)}},RoundCornersModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.rd=PropertyFactory.getProp(t,e.r,0,null,this.dynamicProperties),this.dynamicProperties.length||this.getValue(!0)},RoundCornersModifier.prototype.processPath=function(t,e){var i=shape_pool.newShape();i.c=t.c;var s,r,a,n,o,h,l,p,m,c,f,d,u,y=t._length,g=0;for(s=0;s<y;s+=1)r=t.v[s],n=t.o[s],a=t.i[s],r[0]===n[0]&&r[1]===n[1]&&r[0]===a[0]&&r[1]===a[1]?0!==s&&s!==y-1||t.c?(o=0===s?t.v[y-1]:t.v[s-1],h=Math.sqrt(Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2)),l=h?Math.min(h/2,e)/h:0,p=d=r[0]+(o[0]-r[0])*l,m=u=r[1]-(r[1]-o[1])*l,c=p-(p-r[0])*roundCorner,f=m-(m-r[1])*roundCorner,i.setTripleAt(p,m,c,f,d,u,g),g+=1,o=s===y-1?t.v[0]:t.v[s+1],h=Math.sqrt(Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2)),l=h?Math.min(h/2,e)/h:0,p=c=r[0]+(o[0]-r[0])*l,m=f=r[1]+(o[1]-r[1])*l,d=p-(p-r[0])*roundCorner,u=m-(m-r[1])*roundCorner,i.setTripleAt(p,m,c,f,d,u,g),g+=1):(i.setTripleAt(r[0],r[1],n[0],n[1],a[0],a[1],g),g+=1):(i.setTripleAt(t.v[s][0],t.v[s][1],t.o[s][0],t.o[s][1],t.i[s][0],t.i[s][1],g),g+=1);return i},RoundCornersModifier.prototype.processShapes=function(t){var e,i,s,r,a=this.shapes.length,n=this.rd.v;if(0!==n){var o,h;for(i=0;i<a;i+=1){if(o=this.shapes[i],o.shape.paths,h=o.localShapeCollection,o.shape.mdf||this.mdf||t)for(h.releaseShapes(),o.shape.mdf=!0,e=o.shape.paths.shapes,r=o.shape.paths._length,s=0;s<r;s+=1)h.addShape(this.processPath(e[s],n));o.shape.paths=o.localShapeCollection}}this.dynamicProperties.length||(this.mdf=!1)},ShapeModifiers.registerModifier("rd",RoundCornersModifier),RepeaterModifier.prototype.processKeys=function(t){if(this.elem.globalData.frameId!==this.frameId||t){this.mdf=!!t;var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.mdf=!0)}},RepeaterModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.c=PropertyFactory.getProp(t,e.c,0,null,this.dynamicProperties),this.o=PropertyFactory.getProp(t,e.o,0,null,this.dynamicProperties),this.tr=PropertyFactory.getProp(t,e.tr,2,null,this.dynamicProperties),this.data=e,this.dynamicProperties.length||this.getValue(!0),this.pMatrix=new Matrix,this.rMatrix=new Matrix,this.sMatrix=new Matrix,this.tMatrix=new Matrix,this.matrix=new Matrix},RepeaterModifier.prototype.applyTransforms=function(t,e,i,s,r,a){var n=a?-1:1,o=s.s.v[0]+(1-s.s.v[0])*(1-r),h=s.s.v[1]+(1-s.s.v[1])*(1-r);t.translate(s.p.v[0]*n*r,s.p.v[1]*n*r,s.p.v[2]),e.translate(-s.a.v[0],-s.a.v[1],s.a.v[2]),e.rotate(-s.r.v*n*r),e.translate(s.a.v[0],s.a.v[1],s.a.v[2]),i.translate(-s.a.v[0],-s.a.v[1],s.a.v[2]),i.scale(a?1/o:o,a?1/h:h),i.translate(s.a.v[0],s.a.v[1],s.a.v[2])},RepeaterModifier.prototype.init=function(t,e,i,s,r){this.elem=t,this.arr=e,this.pos=i,this.elemsData=s,this._currentCopies=0,this._elements=[],this._groups=[],this.dynamicProperties=[],this.frameId=-1,this.initModifierProperties(t,e[i]);for(var a=0;i>0;)i-=1,this._elements.unshift(e[i]),a+=1;this.dynamicProperties.length?(this.k=!0,r.push(this)):this.getValue(!0)},RepeaterModifier.prototype.resetElements=function(t){var e,i=t.length;for(e=0;e<i;e+=1)t[e]._processed=!1,"gr"===t[e].ty&&this.resetElements(t[e].it)},RepeaterModifier.prototype.cloneElements=function(t){var e=(t.length,JSON.parse(JSON.stringify(t)));return this.resetElements(e),e},RepeaterModifier.prototype.changeGroupRender=function(t,e){var i,s=t.length;for(i=0;i<s;i+=1)t[i]._render=e,"gr"===t[i].ty&&this.changeGroupRender(t[i].it,e)},RepeaterModifier.prototype.processShapes=function(t){if(this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.dynamicProperties.length||t||(this.mdf=!1),this.mdf)){var e=Math.ceil(this.c.v);if(this._groups.length<e){for(;this._groups.length<e;){var i={it:this.cloneElements(this._elements),ty:"gr"};i.it.push({a:{a:0,ix:1,k:[0,0]},nm:"Transform",o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:0,ix:6,k:0},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:"tr"}),this.arr.splice(0,0,i),this._groups.splice(0,0,i),this._currentCopies+=1}this.elem.reloadShapes()}var s,r,a=0;for(s=0;s<=this._groups.length-1;s+=1)r=a<e,this._groups[s]._render=r,this.changeGroupRender(this._groups[s].it,r),a+=1;this._currentCopies=e,this.elem.firstFrame=!0;var n=this.o.v,o=n%1,h=n>0?Math.floor(n):Math.ceil(n),l=(this.tr.v.props,this.pMatrix.props),p=this.rMatrix.props,m=this.sMatrix.props;this.pMatrix.reset(),this.rMatrix.reset(),this.sMatrix.reset(),this.tMatrix.reset(),this.matrix.reset();var c=0;if(n>0){for(;c<h;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),c+=1;o&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,o,!1),c+=o)}else if(n<0){for(;c>h;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!0),c-=1;o&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-o,!0),c-=o)}s=1===this.data.m?0:this._currentCopies-1;var f=1===this.data.m?1:-1;for(a=this._currentCopies;a;){if(0!==c){(0!==s&&1===f||s!==this._currentCopies-1&&-1===f)&&this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),this.matrix.transform(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],p[8],p[9],p[10],p[11],p[12],p[13],p[14],p[15]),this.matrix.transform(m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15]),this.matrix.transform(l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],l[8],l[9],l[10],l[11],l[12],l[13],l[14],l[15]);var d,u=this.elemsData[s].it,y=u[u.length-1].transform.mProps.v.props,g=y.length;for(d=0;d<g;d+=1)y[d]=this.matrix.props[d];this.matrix.reset()}else{this.matrix.reset();var d,u=this.elemsData[s].it,y=u[u.length-1].transform.mProps.v.props,g=y.length;for(d=0;d<g;d+=1)y[d]=this.matrix.props[d]}c+=1,a-=1,s+=f}}},RepeaterModifier.prototype.addShape=function(){},ShapeModifiers.registerModifier("rp",RepeaterModifier),ShapeCollection.prototype.addShape=function(t){this._length===this._maxLength&&(this.shapes=this.shapes.concat(Array.apply(null,{length:this._maxLength})),this._maxLength*=2),this.shapes[this._length]=t,this._length+=1},ShapeCollection.prototype.releaseShapes=function(){var t;for(t=0;t<this._length;t+=1)shape_pool.release(this.shapes[t]);this._length=0};var ImagePreloader=function(){function t(){this.loadedAssets+=1,this.loadedAssets===this.totalImages&&n&&n(null)}function e(t){var e="";if(this.assetsPath){var i=t.p;-1!==i.indexOf("images/")&&(i=i.split("/")[1]),e=this.assetsPath+i}else e=this.path,e+=t.u?t.u:"",e+=t.p;return e}function i(e){var i=document.createElement("img");i.addEventListener("load",t.bind(this),!1),i.addEventListener("error",t.bind(this),!1),i.src=e}function s(t,s){n=s,this.totalAssets=t.length;var r;for(r=0;r<this.totalAssets;r+=1)t[r].layers||(i.bind(this)(e.bind(this)(t[r])),this.totalImages+=1)}function r(t){this.path=t||""}function a(t){this.assetsPath=t||""}var n;return function(){this.loadAssets=s,this.setAssetsPath=a,this.setPath=r,this.assetsPath="",this.path="",this.totalAssets=0,this.totalImages=0,this.loadedAssets=0}}(),featureSupport=function(){var t={maskType:!0};return(/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\/\d./i.test(navigator.userAgent))&&(t.maskType=!1),t}(),filtersFactory=function(){function t(t){var e=document.createElementNS(svgNS,"filter");return e.setAttribute("id",t),e.setAttribute("filterUnits","objectBoundingBox"),e.setAttribute("x","0%"),e.setAttribute("y","0%"),e.setAttribute("width","100%"),e.setAttribute("height","100%"),e}function e(){var t=document.createElementNS(svgNS,"feColorMatrix");return t.setAttribute("type","matrix"),t.setAttribute("color-interpolation-filters","sRGB"),t.setAttribute("values","0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),t}var i={};return i.createFilter=t,i.createAlphaToLuminanceFilter=e,i}();TextAnimatorProperty.prototype.searchProperties=function(t){var e,i,s,r=this._textData.a.length,a=PropertyFactory.getProp;for(e=0;e<r;e+=1)s=this._textData.a[e],i={a:{},s:{}},"r"in s.a&&(i.a.r=a(this._elem,s.a.r,0,degToRads,this._dynamicProperties)),"rx"in s.a&&(i.a.rx=a(this._elem,s.a.rx,0,degToRads,this._dynamicProperties)),"ry"in s.a&&(i.a.ry=a(this._elem,s.a.ry,0,degToRads,this._dynamicProperties)),"sk"in s.a&&(i.a.sk=a(this._elem,s.a.sk,0,degToRads,this._dynamicProperties)),"sa"in s.a&&(i.a.sa=a(this._elem,s.a.sa,0,degToRads,this._dynamicProperties)),"s"in s.a&&(i.a.s=a(this._elem,s.a.s,1,.01,this._dynamicProperties)),"a"in s.a&&(i.a.a=a(this._elem,s.a.a,1,0,this._dynamicProperties)),"o"in s.a&&(i.a.o=a(this._elem,s.a.o,0,.01,this._dynamicProperties)),"p"in s.a&&(i.a.p=a(this._elem,s.a.p,1,0,this._dynamicProperties)),"sw"in s.a&&(i.a.sw=a(this._elem,s.a.sw,0,0,this._dynamicProperties)),"sc"in s.a&&(i.a.sc=a(this._elem,s.a.sc,1,0,this._dynamicProperties)),"fc"in s.a&&(i.a.fc=a(this._elem,s.a.fc,1,0,this._dynamicProperties)),"fh"in s.a&&(i.a.fh=a(this._elem,s.a.fh,0,0,this._dynamicProperties)),"fs"in s.a&&(i.a.fs=a(this._elem,s.a.fs,0,.01,this._dynamicProperties)),"fb"in s.a&&(i.a.fb=a(this._elem,s.a.fb,0,.01,this._dynamicProperties)),"t"in s.a&&(i.a.t=a(this._elem,s.a.t,0,0,this._dynamicProperties)),i.s=PropertyFactory.getTextSelectorProp(this._elem,s.s,this._dynamicProperties),i.s.t=s.s.t,this._animatorsData[e]=i;this._textData.p&&"m"in this._textData.p?(this._pathData={f:a(this._elem,this._textData.p.f,0,0,this._dynamicProperties),l:a(this._elem,this._textData.p.l,0,0,this._dynamicProperties),r:this._textData.p.r,m:this._elem.maskManager.getMaskProperty(this._textData.p.m)},this._hasMaskedPath=!0):this._hasMaskedPath=!1,this._moreOptions.alignment=a(this._elem,this._textData.m.a,1,0,this._dynamicProperties),this._dynamicProperties.length&&t.push(this)},TextAnimatorProperty.prototype.getMeasures=function(t,e){if(this.lettersChangedFlag=e,this.mdf||this._firstFrame||e||this._hasMaskedPath&&this._pathData.m.mdf){this._firstFrame=!1;var i,s,r,a,n=this._moreOptions.alignment.v,o=this._animatorsData,h=this._textData,l=this.mHelper,p=this._renderType,m=this.renderedLetters.length,c=(this.data,t.l);if(this._hasMaskedPath){var f=this._pathData.m;if(!this._pathData.n||this._pathData.mdf){var d=f.v;this._pathData.r&&(d=reversePath(d));var u={tLength:0,segments:[]};a=d._length-1;var y,g=0;for(r=0;r<a;r+=1)y={s:d.v[r],e:d.v[r+1],to:[d.o[r][0]-d.v[r][0],d.o[r][1]-d.v[r][1]],ti:[d.i[r+1][0]-d.v[r+1][0],d.i[r+1][1]-d.v[r+1][1]]},bez.buildBezierData(y),u.tLength+=y.bezierData.segmentLength,u.segments.push(y),g+=y.bezierData.segmentLength;r=a,f.v.c&&(y={s:d.v[r],e:d.v[0],to:[d.o[r][0]-d.v[r][0],d.o[r][1]-d.v[r][1]],ti:[d.i[0][0]-d.v[0][0],d.i[0][1]-d.v[0][1]]},bez.buildBezierData(y),u.tLength+=y.bezierData.segmentLength,u.segments.push(y),g+=y.bezierData.segmentLength),this._pathData.pi=u}var v,b,E,u=this._pathData.pi,P=this._pathData.f.v,x=0,S=1,C=0,k=!0,A=u.segments;if(P<0&&f.v.c)for(u.tLength<Math.abs(P)&&(P=-Math.abs(P)%u.tLength),x=A.length-1,E=A[x].bezierData.points,S=E.length-1;P<0;)P+=E[S].partialLength,(S-=1)<0&&(x-=1,E=A[x].bezierData.points,S=E.length-1);E=A[x].bezierData.points,b=E[S-1],v=E[S];var T,M,D=v.partialLength}a=c.length,i=0,s=0;var w,_,I,F,V,R=1.2*t.s*.714,N=!0;if(F=o.length,e)for(I=0;I<F;I+=1)_=o[I].s,_.getValue(!0);var B,L,O,G,j,H,z,W,q,Y,X,$,U,Z=-1,J=P,K=x,Q=S,tt=-1,et=0,it="",st=this.defaultPropsArray;for(r=0;r<a;r+=1){if(l.reset(),j=1,c[r].n)i=0,s+=t.yOffset,s+=N?1:0,P=J,N=!1,et=0,this._hasMaskedPath&&(x=K,S=Q,E=A[x].bezierData.points,b=E[S-1],v=E[S],D=v.partialLength,C=0),U=Y=$=it="",st=this.defaultPropsArray;else{if(this._hasMaskedPath){if(tt!==c[r].line){switch(t.j){case 1:P+=g-t.lineWidths[c[r].line];break;case 2:P+=(g-t.lineWidths[c[r].line])/2}tt=c[r].line}Z!==c[r].ind&&(c[Z]&&(P+=c[Z].extra),P+=c[r].an/2,Z=c[r].ind),P+=n[0]*c[r].an/200;var rt=0;for(I=0;I<F;I+=1)w=o[I].a,"p"in w&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),B.length?rt+=w.p.v[0]*B[0]:rt+=w.p.v[0]*B),"a"in w&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),B.length?rt+=w.a.v[0]*B[0]:rt+=w.a.v[0]*B);for(k=!0;k;)C+D>=P+rt||!E?(T=(P+rt-C)/v.partialLength,O=b.point[0]+(v.point[0]-b.point[0])*T,G=b.point[1]+(v.point[1]-b.point[1])*T,l.translate(-n[0]*c[r].an/200,-n[1]*R/100),k=!1):E&&(C+=v.partialLength,S+=1,S>=E.length&&(S=0,x+=1,A[x]?E=A[x].bezierData.points:f.v.c?(S=0,x=0,E=A[x].bezierData.points):(C-=v.partialLength,E=null)),E&&(b=v,v=E[S],D=v.partialLength));L=c[r].an/2-c[r].add,l.translate(-L,0,0)}else L=c[r].an/2-c[r].add,l.translate(-L,0,0),l.translate(-n[0]*c[r].an/200,-n[1]*R/100,0);for(et+=c[r].l/2,I=0;I<F;I+=1)"t"in(w=o[I].a)&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),this._hasMaskedPath?B.length?P+=w.t*B[0]:P+=w.t*B:B.length?i+=w.t.v*B[0]:i+=w.t.v*B);for(et+=c[r].l/2,t.strokeWidthAnim&&(z=t.sw||0),t.strokeColorAnim&&(H=t.sc?[t.sc[0],t.sc[1],t.sc[2]]:[0,0,0]),t.fillColorAnim&&t.fc&&(W=[t.fc[0],t.fc[1],t.fc[2]]),I=0;I<F;I+=1)"a"in(w=o[I].a)&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),B.length?l.translate(-w.a.v[0]*B[0],-w.a.v[1]*B[1],w.a.v[2]*B[2]):l.translate(-w.a.v[0]*B,-w.a.v[1]*B,w.a.v[2]*B));for(I=0;I<F;I+=1)"s"in(w=o[I].a)&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),B.length?l.scale(1+(w.s.v[0]-1)*B[0],1+(w.s.v[1]-1)*B[1],1):l.scale(1+(w.s.v[0]-1)*B,1+(w.s.v[1]-1)*B,1));for(I=0;I<F;I+=1){if(w=o[I].a,_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),"sk"in w&&(B.length?l.skewFromAxis(-w.sk.v*B[0],w.sa.v*B[1]):l.skewFromAxis(-w.sk.v*B,w.sa.v*B)),"r"in w&&(B.length?l.rotateZ(-w.r.v*B[2]):l.rotateZ(-w.r.v*B)),"ry"in w&&(B.length?l.rotateY(w.ry.v*B[1]):l.rotateY(w.ry.v*B)),"rx"in w&&(B.length?l.rotateX(w.rx.v*B[0]):l.rotateX(w.rx.v*B)),"o"in w&&(B.length?j+=(w.o.v*B[0]-j)*B[0]:j+=(w.o.v*B-j)*B),t.strokeWidthAnim&&"sw"in w&&(B.length?z+=w.sw.v*B[0]:z+=w.sw.v*B),t.strokeColorAnim&&"sc"in w)for(q=0;q<3;q+=1)B.length?H[q]=H[q]+(w.sc.v[q]-H[q])*B[0]:H[q]=H[q]+(w.sc.v[q]-H[q])*B;if(t.fillColorAnim&&t.fc){if("fc"in w)for(q=0;q<3;q+=1)B.length?W[q]=W[q]+(w.fc.v[q]-W[q])*B[0]:W[q]=W[q]+(w.fc.v[q]-W[q])*B;"fh"in w&&(W=B.length?addHueToRGB(W,w.fh.v*B[0]):addHueToRGB(W,w.fh.v*B)),"fs"in w&&(W=B.length?addSaturationToRGB(W,w.fs.v*B[0]):addSaturationToRGB(W,w.fs.v*B)),"fb"in w&&(W=B.length?addBrightnessToRGB(W,w.fb.v*B[0]):addBrightnessToRGB(W,w.fb.v*B))}}for(I=0;I<F;I+=1)"p"in(w=o[I].a)&&(_=o[I].s,B=_.getMult(c[r].anIndexes[I],h.a[I].s.totalChars),this._hasMaskedPath?B.length?l.translate(0,w.p.v[1]*B[0],-w.p.v[2]*B[1]):l.translate(0,w.p.v[1]*B,-w.p.v[2]*B):B.length?l.translate(w.p.v[0]*B[0],w.p.v[1]*B[1],-w.p.v[2]*B[2]):l.translate(w.p.v[0]*B,w.p.v[1]*B,-w.p.v[2]*B));if(t.strokeWidthAnim&&(Y=z<0?0:z),t.strokeColorAnim&&(X="rgb("+Math.round(255*H[0])+","+Math.round(255*H[1])+","+Math.round(255*H[2])+")"),t.fillColorAnim&&t.fc&&($="rgb("+Math.round(255*W[0])+","+Math.round(255*W[1])+","+Math.round(255*W[2])+")"),this._hasMaskedPath){if(l.translate(0,-t.ls),l.translate(0,n[1]*R/100+s,0),h.p.p){M=(v.point[1]-b.point[1])/(v.point[0]-b.point[0]);var at=180*Math.atan(M)/Math.PI;v.point[0]<b.point[0]&&(at+=180),l.rotate(-at*Math.PI/180)}l.translate(O,G,0),P-=n[0]*c[r].an/200,c[r+1]&&Z!==c[r+1].ind&&(P+=c[r].an/2,P+=t.tr/1e3*t.s)}else{switch(l.translate(i,s,0),t.ps&&l.translate(t.ps[0],t.ps[1]+t.ascent,0),t.j){case 1:l.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[c[r].line]),0,0);break;case 2:l.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[c[r].line])/2,0,0)}l.translate(0,-t.ls),l.translate(L,0,0),l.translate(n[0]*c[r].an/200,n[1]*R/100,0),i+=c[r].l+t.tr/1e3*t.s}"html"===p?it=l.toCSS():"svg"===p?it=l.to2dCSS():st=[l.props[0],l.props[1],l.props[2],l.props[3],l.props[4],l.props[5],l.props[6],l.props[7],l.props[8],l.props[9],l.props[10],l.props[11],l.props[12],l.props[13],l.props[14],l.props[15]],U=j}m<=r?(V=new LetterProps(U,Y,X,$,it,st),this.renderedLetters.push(V),m+=1,this.lettersChangedFlag=!0):(V=this.renderedLetters[r],this.lettersChangedFlag=V.update(U,Y,X,$,it,st)||this.lettersChangedFlag)}}},TextAnimatorProperty.prototype.getValue=function(){if(this._elem.globalData.frameId!==this._frameId){this._frameId=this._elem.globalData.frameId;var t,e=this._dynamicProperties.length;for(this.mdf=!1,t=0;t<e;t+=1)this._dynamicProperties[t].getValue(),this.mdf=this._dynamicProperties[t].mdf||this.mdf}},TextAnimatorProperty.prototype.mHelper=new Matrix,TextAnimatorProperty.prototype.defaultPropsArray=[],LetterProps.prototype.update=function(t,e,i,s,r,a){this.mdf.o=!1,this.mdf.sw=!1,this.mdf.sc=!1,this.mdf.fc=!1,this.mdf.m=!1,this.mdf.p=!1;var n=!1;return this.o!==t&&(this.o=t,this.mdf.o=!0,n=!0),this.sw!==e&&(this.sw=e,this.mdf.sw=!0,n=!0),this.sc!==i&&(this.sc=i,this.mdf.sc=!0,n=!0),this.fc!==s&&(this.fc=s,this.mdf.fc=!0,n=!0),this.m!==r&&(this.m=r,this.mdf.m=!0,n=!0),!a.length||this.p[0]===a[0]&&this.p[1]===a[1]&&this.p[4]===a[4]&&this.p[5]===a[5]&&this.p[12]===a[12]&&this.p[13]===a[13]||(this.p=a,this.mdf.p=!0,n=!0),n},TextProperty.prototype.setCurrentData=function(t){var e=this.currentData;e.ascent=t.ascent,e.boxWidth=t.boxWidth?t.boxWidth:e.boxWidth,e.f=t.f,e.fStyle=t.fStyle,e.fWeight=t.fWeight,e.fc=t.fc,e.j=t.j,e.justifyOffset=t.justifyOffset,e.l=t.l,e.lh=t.lh,e.lineWidths=t.lineWidths,e.ls=t.ls,e.of=t.of,e.s=t.s,e.sc=t.sc,e.sw=t.sw,e.t=t.t,e.tr=t.tr,e.fillColorAnim=t.fillColorAnim||e.fillColorAnim,e.strokeColorAnim=t.strokeColorAnim||e.strokeColorAnim,e.strokeWidthAnim=t.strokeWidthAnim||e.strokeWidthAnim,e.yOffset=t.yOffset,e.__complete=!1},TextProperty.prototype.searchProperty=function(){return this.kf=this.data.d.k.length>1,this.kf},TextProperty.prototype.getValue=function(){this.mdf=!1;var t=this.elem.globalData.frameId;if(t!==this._frameId&&this.kf||this.firstFrame){for(var e,i=this.data.d.k,s=0,r=i.length;s<=r-1&&(e=i[s].s,!(s===r-1||i[s+1].t>t));)s+=1;this.keysIndex!==s&&(e.__complete||this.completeTextData(e),this.setCurrentData(e),this.mdf=!this.firstFrame,this.pv=this.v=this.currentData.t,this.keysIndex=s),this._frameId=t}},TextProperty.prototype.completeTextData=function(t){t.__complete=!0;var e,i,s,r,a,n,o,h=this.elem.globalData.fontManager,l=this.data,p=[],m=0,c=l.m.g,f=0,d=0,u=0,y=[],g=0,v=0,b=h.getFontByName(t.f),E=0,P=b.fStyle.split(" "),x="normal",S="normal";i=P.length;for(e=0;e<i;e+=1)switch(P[e].toLowerCase()){case"italic":S="italic";break;case"bold":x="700";break;case"black":x="900";break;case"medium":x="500";break;case"regular":case"normal":x="400";case"light":case"thin":x="200"}t.fWeight=x,t.fStyle=S,i=t.t.length;var C=t.tr/1e3*t.s;if(t.sz){var k=t.sz[0],A=-1;for(e=0;e<i;e+=1)s=!1," "===t.t.charAt(e)?A=e:13===t.t.charCodeAt(e)&&(g=0,s=!0),h.chars?(o=h.getCharData(t.t.charAt(e),b.fStyle,b.fFamily),E=s?0:o.w*t.s/100):E=h.measureText(t.t.charAt(e),t.f,t.s),g+E>k&&" "!==t.t.charAt(e)?(-1===A?i+=1:e=A,t.t=t.t.substr(0,e)+"\r"+t.t.substr(e===A?e+1:e),A=-1,g=0):(g+=E,g+=C);i=t.t.length}g=-C,E=0;var T,M=0;for(e=0;e<i;e+=1)if(s=!1,T=t.t.charAt(e)," "===T?r=" ":13===T.charCodeAt(0)?(M=0,y.push(g),v=g>v?g:v,g=-2*C,r="",s=!0,u+=1):r=t.t.charAt(e),h.chars?(o=h.getCharData(T,b.fStyle,h.getFontByName(t.f).fFamily),E=s?0:o.w*t.s/100):E=h.measureText(r,t.f,t.s)," "===T?M+=E+C:(g+=E+C+M,M=0),p.push({l:E,an:E,add:f,n:s,anIndexes:[],val:r,line:u}),2==c){if(f+=E,""==r||" "==r||e==i-1){for(""!=r&&" "!=r||(f-=E);d<=e;)p[d].an=f,p[d].ind=m,p[d].extra=E,d+=1;m+=1,f=0}}else if(3==c){if(f+=E,
""==r||e==i-1){for(""==r&&(f-=E);d<=e;)p[d].an=f,p[d].ind=m,p[d].extra=E,d+=1;f=0,m+=1}}else p[m].ind=m,p[m].extra=0,m+=1;if(t.l=p,v=g>v?g:v,y.push(g),t.sz)t.boxWidth=t.sz[0],t.justifyOffset=0;else switch(t.boxWidth=v,t.j){case 1:t.justifyOffset=-t.boxWidth;break;case 2:t.justifyOffset=-t.boxWidth/2;break;default:t.justifyOffset=0}t.lineWidths=y;var D,w,_=l.a;n=_.length;var I,F,V=[];for(a=0;a<n;a+=1){for(D=_[a],D.a.sc&&(t.strokeColorAnim=!0),D.a.sw&&(t.strokeWidthAnim=!0),(D.a.fc||D.a.fh||D.a.fs||D.a.fb)&&(t.fillColorAnim=!0),F=0,I=D.s.b,e=0;e<i;e+=1)w=p[e],w.anIndexes[a]=F,(1==I&&""!=w.val||2==I&&""!=w.val&&" "!=w.val||3==I&&(w.n||" "==w.val||e==i-1)||4==I&&(w.n||e==i-1))&&(1===D.s.rn&&V.push(F),F+=1);l.a[a].s.totalChars=F;var R,N=-1;if(1===D.s.rn)for(e=0;e<i;e+=1)w=p[e],N!=w.anIndexes[a]&&(N=w.anIndexes[a],R=V.splice(Math.floor(Math.random()*V.length),1)[0]),w.anIndexes[a]=R}t.yOffset=t.lh||1.2*t.s,t.ls=t.ls||0,t.ascent=b.ascent*t.s/100},TextProperty.prototype.updateDocumentData=function(t,e){e=void 0===e?this.keysIndex:e;var i=this.data.d.k[e].s;i.__complete=!1,i.t=t.t,this.keysIndex=-1,this.firstFrame=!0,this.getValue()};var pooling=function(){function t(t){return t.concat(Array.apply(null,{length:t.length}))}return{double:t}}(),point_pool=function(){function t(){var t;return s?(s-=1,t=a[s]):t=[.1,.1],t}function e(t){s===r&&(a=pooling.double(a),r*=2),a[s]=t,s+=1}var i={newPoint:t,release:e},s=0,r=8,a=Array.apply(null,{length:r});return i}(),shape_pool=function(){function t(){var t;return a?(a-=1,t=o[a]):t=new ShapePath,t}function e(t){a===n&&(o=pooling.double(o),n*=2);var e,i=t._length;for(e=0;e<i;e+=1)point_pool.release(t.v[e]),point_pool.release(t.i[e]),point_pool.release(t.o[e]),t.v[e]=null,t.i[e]=null,t.o[e]=null;t._length=0,t.c=!1,o[a]=t,a+=1}function i(t,i){for(;i--;)e(t[i])}function s(e,i){var s,r=void 0===e._length?e.v.length:e._length,a=t();a.setLength(r),a.c=e.c;var n;for(s=0;s<r;s+=1)i?(n=i.applyToPointArray(e.v[s][0],e.v[s][1],0,2),a.setXYAt(n[0],n[1],"v",s),point_pool.release(n),n=i.applyToPointArray(e.o[s][0],e.o[s][1],0,2),a.setXYAt(n[0],n[1],"o",s),point_pool.release(n),n=i.applyToPointArray(e.i[s][0],e.i[s][1],0,2),a.setXYAt(n[0],n[1],"i",s),point_pool.release(n)):a.setTripleAt(e.v[s][0],e.v[s][1],e.o[s][0],e.o[s][1],e.i[s][0],e.i[s][1],s);return a}var r={clone:s,newShape:t,release:e,releaseArray:i},a=0,n=4,o=Array.apply(null,{length:n});return r}(),shapeCollection_pool=function(){function t(){var t;return r?(r-=1,t=n[r]):t=new ShapeCollection,t}function e(t){var e,i=t._length;for(e=0;e<i;e+=1)shape_pool.release(t.shapes[e]);t._length=0,r===a&&(n=pooling.double(n),a*=2),n[r]=t,r+=1}function i(t,i){e(t),r===a&&(n=pooling.double(n),a*=2),n[r]=t,r+=1}var s={newShapeCollection:t,release:e,clone:i},r=0,a=4,n=Array.apply(null,{length:a});return s}();BaseRenderer.prototype.checkLayers=function(t){var e,i,s=this.layers.length;for(this.completeLayers=!0,e=s-1;e>=0;e--)this.elements[e]||(i=this.layers[e],i.ip-i.st<=t-this.layers[e].st&&i.op-i.st>t-this.layers[e].st&&this.buildItem(e)),this.completeLayers=!!this.elements[e]&&this.completeLayers;this.checkPendingElements()},BaseRenderer.prototype.createItem=function(t){switch(t.ty){case 2:return this.createImage(t);case 0:return this.createComp(t);case 1:return this.createSolid(t);case 4:return this.createShape(t);case 5:return this.createText(t);case 13:return this.createCamera(t);case 99:return null}return this.createBase(t)},BaseRenderer.prototype.createCamera=function(){throw new Error("You're using a 3d camera. Try the html renderer.")},BaseRenderer.prototype.buildAllItems=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.buildItem(t);this.checkPendingElements()},BaseRenderer.prototype.includeLayers=function(t){this.completeLayers=!1;var e,i,s=t.length,r=this.layers.length;for(e=0;e<s;e+=1)for(i=0;i<r;){if(this.layers[i].id==t[e].id){this.layers[i]=t[e];break}i+=1}},BaseRenderer.prototype.setProjectInterface=function(t){this.globalData.projectInterface=t},BaseRenderer.prototype.initItems=function(){this.globalData.progressiveLoad||this.buildAllItems()},BaseRenderer.prototype.buildElementParenting=function(t,e,i){i=i||[];for(var s=this.elements,r=this.layers,a=0,n=r.length;a<n;)r[a].ind==e&&(s[a]&&!0!==s[a]?void 0!==r[a].parent?(i.push(s[a]),s[a]._isParent=!0,this.buildElementParenting(t,r[a].parent,i)):(i.push(s[a]),s[a]._isParent=!0,t.setHierarchy(i)):(this.buildItem(a),this.addPendingElement(t))),a+=1},BaseRenderer.prototype.addPendingElement=function(t){this.pendingElements.push(t)},extendPrototype(BaseRenderer,SVGRenderer),SVGRenderer.prototype.createBase=function(t){return new SVGBaseElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.createShape=function(t){return new IShapeElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.createText=function(t){return new SVGTextElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.createImage=function(t){return new IImageElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.createComp=function(t){return new ICompElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.createSolid=function(t){return new ISolidElement(t,this.layerElement,this.globalData,this)},SVGRenderer.prototype.configAnimation=function(t){this.layerElement=document.createElementNS(svgNS,"svg"),this.layerElement.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.layerElement.setAttribute("viewBox","0 0 "+t.w+" "+t.h),this.renderConfig.viewBoxOnly||(this.layerElement.setAttribute("width",t.w),this.layerElement.setAttribute("height",t.h),this.layerElement.style.width="100%",this.layerElement.style.height="100%"),this.renderConfig.className&&this.layerElement.setAttribute("class",this.renderConfig.className),this.layerElement.setAttribute("preserveAspectRatio",this.renderConfig.preserveAspectRatio),this.animationItem.wrapper.appendChild(this.layerElement);var e=document.createElementNS(svgNS,"defs");this.globalData.defs=e,this.layerElement.appendChild(e),this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.globalData.frameId=0,this.globalData.nm=t.nm,this.globalData.compSize={w:t.w,h:t.h},this.data=t,this.globalData.frameRate=t.fr;var i=document.createElementNS(svgNS,"clipPath"),s=document.createElementNS(svgNS,"rect");s.setAttribute("width",t.w),s.setAttribute("height",t.h),s.setAttribute("x",0),s.setAttribute("y",0);var r="animationMask_"+randomString(10);i.setAttribute("id",r),i.appendChild(s);var a=document.createElementNS(svgNS,"g");a.setAttribute("clip-path","url("+locationHref+"#"+r+")"),this.layerElement.appendChild(a),e.appendChild(i),this.layerElement=a,this.layers=t.layers,this.globalData.fontManager=new FontManager,this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,e),this.elements=Array.apply(null,{length:t.layers.length})},SVGRenderer.prototype.destroy=function(){this.animationItem.wrapper.innerHTML="",this.layerElement=null,this.globalData.defs=null;var t,e=this.layers?this.layers.length:0;for(t=0;t<e;t++)this.elements[t]&&this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null},SVGRenderer.prototype.updateContainerSize=function(){},SVGRenderer.prototype.buildItem=function(t){var e=this.elements;if(!e[t]&&99!=this.layers[t].ty){e[t]=!0;var i=this.createItem(this.layers[t]);e[t]=i,expressionsPlugin&&(0===this.layers[t].ty&&this.globalData.projectInterface.registerComposition(i),i.initExpressions()),this.appendElementInPos(i,t),this.layers[t].tt&&(this.elements[t-1]&&!0!==this.elements[t-1]?i.setMatte(e[t-1].layerId):(this.buildItem(t-1),this.addPendingElement(i)))}},SVGRenderer.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();if(t.checkParenting(),t.data.tt)for(var e=0,i=this.elements.length;e<i;){if(this.elements[e]===t){t.setMatte(this.elements[e-1].layerId);break}e+=1}}},SVGRenderer.prototype.renderFrame=function(t){if(this.renderedFrame!=t&&!this.destroyed){null===t?t=this.renderedFrame:this.renderedFrame=t,this.globalData.frameNum=t,this.globalData.frameId+=1,this.globalData.projectInterface.currentFrame=t;var e,i=this.layers.length;for(this.completeLayers||this.checkLayers(t),e=i-1;e>=0;e--)(this.completeLayers||this.elements[e])&&this.elements[e].prepareFrame(t-this.layers[e].st);for(e=i-1;e>=0;e--)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame()}},SVGRenderer.prototype.appendElementInPos=function(t,e){var i=t.getBaseElement();if(i){for(var s,r=0;r<e;)this.elements[r]&&!0!==this.elements[r]&&this.elements[r].getBaseElement()&&(s=this.elements[r].getBaseElement()),r+=1;s?this.layerElement.insertBefore(i,s):this.layerElement.appendChild(i)}},SVGRenderer.prototype.hide=function(){this.layerElement.style.display="none"},SVGRenderer.prototype.show=function(){this.layerElement.style.display="block"},SVGRenderer.prototype.searchExtraCompositions=function(t){var e,i=t.length,s=document.createElementNS(svgNS,"g");for(e=0;e<i;e+=1)if(t[e].xt){var r=this.createComp(t[e],s,this.globalData.comp,null);r.initExpressions(),this.globalData.projectInterface.registerComposition(r)}},MaskElement.prototype.getMaskProperty=function(t){return this.viewData[t].prop},MaskElement.prototype.prepareFrame=function(){var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue()},MaskElement.prototype.renderFrame=function(t){var e,i=this.masksProperties.length;for(e=0;e<i;e++)if((this.viewData[e].prop.mdf||this.firstFrame)&&this.drawPath(this.masksProperties[e],this.viewData[e].prop.v,this.viewData[e]),(this.viewData[e].op.mdf||this.firstFrame)&&this.viewData[e].elem.setAttribute("fill-opacity",this.viewData[e].op.v),"n"!==this.masksProperties[e].mode&&(this.viewData[e].invRect&&(this.element.finalTransform.mProp.mdf||this.firstFrame)&&(this.viewData[e].invRect.setAttribute("x",-t.props[12]),this.viewData[e].invRect.setAttribute("y",-t.props[13])),this.storedData[e].x&&(this.storedData[e].x.mdf||this.firstFrame))){var s=this.storedData[e].expan;this.storedData[e].x.v<0?("erode"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="erode",this.storedData[e].elem.setAttribute("filter","url("+locationHref+"#"+this.storedData[e].filterId+")")),s.setAttribute("radius",-this.storedData[e].x.v)):("dilate"!==this.storedData[e].lastOperator&&(this.storedData[e].lastOperator="dilate",this.storedData[e].elem.setAttribute("filter",null)),this.storedData[e].elem.setAttribute("stroke-width",2*this.storedData[e].x.v))}this.firstFrame=!1},MaskElement.prototype.getMaskelement=function(){return this.maskElement},MaskElement.prototype.createLayerSolidPath=function(){var t="M0,0 ";return t+=" h"+this.globalData.compSize.w,t+=" v"+this.globalData.compSize.h,t+=" h-"+this.globalData.compSize.w,t+=" v-"+this.globalData.compSize.h+" "},MaskElement.prototype.drawPath=function(t,e,i){var s,r,a=" M"+e.v[0][0]+","+e.v[0][1];for(r=e._length,s=1;s<r;s+=1)a+=" C"+bm_rnd(e.o[s-1][0])+","+bm_rnd(e.o[s-1][1])+" "+bm_rnd(e.i[s][0])+","+bm_rnd(e.i[s][1])+" "+bm_rnd(e.v[s][0])+","+bm_rnd(e.v[s][1]);e.c&&r>1&&(a+=" C"+bm_rnd(e.o[s-1][0])+","+bm_rnd(e.o[s-1][1])+" "+bm_rnd(e.i[0][0])+","+bm_rnd(e.i[0][1])+" "+bm_rnd(e.v[0][0])+","+bm_rnd(e.v[0][1])),i.lastPath!==a&&(i.elem&&(e.c?t.inv?i.elem.setAttribute("d",this.solidPath+a):i.elem.setAttribute("d",a):i.elem.setAttribute("d","")),i.lastPath=a)},MaskElement.prototype.destroy=function(){this.element=null,this.globalData=null,this.maskElement=null,this.data=null,this.masksProperties=null},BaseElement.prototype.checkMasks=function(){if(!this.data.hasMask)return!1;for(var t=0,e=this.data.masksProperties.length;t<e;){if("n"!==this.data.masksProperties[t].mode&&!1!==this.data.masksProperties[t].cl)return!0;t+=1}return!1},BaseElement.prototype.checkParenting=function(){void 0!==this.data.parent&&this.comp.buildElementParenting(this,this.data.parent)},BaseElement.prototype.prepareFrame=function(t){this.data.ip-this.data.st<=t&&this.data.op-this.data.st>t?!0!==this.isVisible&&(this.elemMdf=!0,this.globalData.mdf=!0,this.isVisible=!0,this.firstFrame=!0,this.data.hasMask&&(this.maskManager.firstFrame=!0)):!1!==this.isVisible&&(this.elemMdf=!0,this.globalData.mdf=!0,this.isVisible=!1);var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)(this.isVisible||this._isParent&&"transform"===this.dynamicProperties[e].type)&&(this.dynamicProperties[e].getValue(),this.dynamicProperties[e].mdf&&(this.elemMdf=!0,this.globalData.mdf=!0));return this.data.hasMask&&this.isVisible&&this.maskManager.prepareFrame(t*this.data.sr),this.currentFrameNum=t*this.data.sr,this.isVisible},BaseElement.prototype.globalToLocal=function(t){var e=[];e.push(this.finalTransform);for(var i=!0,s=this.comp;i;)s.finalTransform?(s.data.hasMask&&e.splice(0,0,s.finalTransform),s=s.comp):i=!1;var r,a,n=e.length;for(r=0;r<n;r+=1)a=e[r].mat.applyToPointArray(0,0,0),t=[t[0]-a[0],t[1]-a[1],0];return t},BaseElement.prototype.initExpressions=function(){this.layerInterface=LayerExpressionInterface(this),this.data.hasMask&&this.layerInterface.registerMaskInterface(this.maskManager);var t=EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(t),0===this.data.ty||this.data.xt?this.compInterface=CompExpressionInterface(this):4===this.data.ty?this.layerInterface.shapeInterface=ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface):5===this.data.ty&&(this.layerInterface.textInterface=TextExpressionInterface(this))},BaseElement.prototype.setBlendMode=function(){var t="";switch(this.data.bm){case 1:t="multiply";break;case 2:t="screen";break;case 3:t="overlay";break;case 4:t="darken";break;case 5:t="lighten";break;case 6:t="color-dodge";break;case 7:t="color-burn";break;case 8:t="hard-light";break;case 9:t="soft-light";break;case 10:t="difference";break;case 11:t="exclusion";break;case 12:t="hue";break;case 13:t="saturation";break;case 14:t="color";break;case 15:t="luminosity"}(this.baseElement||this.layerElement).style["mix-blend-mode"]=t},BaseElement.prototype.init=function(){this.data.sr||(this.data.sr=1),this.dynamicProperties=this.dynamicProperties||[],this.data.ef&&(this.effects=new EffectsManager(this.data,this,this.dynamicProperties)),this.hidden=!1,this.firstFrame=!0,this.isVisible=!1,this._isParent=!1,this.currentFrameNum=-99999,this.lastNum=-99999,this.data.ks&&(this.finalTransform={mProp:PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),matMdf:!1,opMdf:!1,mat:new Matrix,opacity:1},this.data.ao&&(this.finalTransform.mProp.autoOriented=!0),this.finalTransform.op=this.finalTransform.mProp.o,this.transform=this.finalTransform.mProp,11!==this.data.ty&&this.createElements(),this.data.hasMask&&this.addMasks(this.data)),this.elemMdf=!1},BaseElement.prototype.getType=function(){return this.type},BaseElement.prototype.resetHierarchy=function(){this.hierarchy?this.hierarchy.length=0:this.hierarchy=[]},BaseElement.prototype.getHierarchy=function(){return this.hierarchy||(this.hierarchy=[]),this.hierarchy},BaseElement.prototype.setHierarchy=function(t){this.hierarchy=t},BaseElement.prototype.getLayerSize=function(){return 5===this.data.ty?{w:this.data.textData.width,h:this.data.textData.height}:{w:this.data.width,h:this.data.height}},BaseElement.prototype.hide=function(){},BaseElement.prototype.sourceRectAtTime=function(){return{top:0,left:0,width:100,height:100}},BaseElement.prototype.mHelper=new Matrix,createElement(BaseElement,SVGBaseElement),SVGBaseElement.prototype.createElements=function(){this.layerElement=document.createElementNS(svgNS,"g"),this.transformedElement=this.layerElement,this.data.hasMask&&(this.maskedElement=this.layerElement);var t=null;if(this.data.td){if(3==this.data.td||1==this.data.td){var e=document.createElementNS(svgNS,"mask");if(e.setAttribute("id",this.layerId),e.setAttribute("mask-type",3==this.data.td?"luminance":"alpha"),e.appendChild(this.layerElement),t=e,this.globalData.defs.appendChild(e),!featureSupport.maskType&&1==this.data.td){e.setAttribute("mask-type","luminance");var i=randomString(10),s=filtersFactory.createFilter(i);this.globalData.defs.appendChild(s),s.appendChild(filtersFactory.createAlphaToLuminanceFilter());var r=document.createElementNS(svgNS,"g");r.appendChild(this.layerElement),t=r,e.appendChild(r),r.setAttribute("filter","url("+locationHref+"#"+i+")")}}else if(2==this.data.td){var a=document.createElementNS(svgNS,"mask");a.setAttribute("id",this.layerId),a.setAttribute("mask-type","alpha");var n=document.createElementNS(svgNS,"g");a.appendChild(n);var i=randomString(10),s=filtersFactory.createFilter(i),o=document.createElementNS(svgNS,"feColorMatrix");o.setAttribute("type","matrix"),o.setAttribute("color-interpolation-filters","sRGB"),o.setAttribute("values","1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1"),s.appendChild(o),this.globalData.defs.appendChild(s);var h=document.createElementNS(svgNS,"rect");if(h.setAttribute("width",this.comp.data.w),h.setAttribute("height",this.comp.data.h),h.setAttribute("x","0"),h.setAttribute("y","0"),h.setAttribute("fill","#ffffff"),h.setAttribute("opacity","0"),n.setAttribute("filter","url("+locationHref+"#"+i+")"),n.appendChild(h),n.appendChild(this.layerElement),t=n,!featureSupport.maskType){a.setAttribute("mask-type","luminance"),s.appendChild(filtersFactory.createAlphaToLuminanceFilter());var r=document.createElementNS(svgNS,"g");n.appendChild(h),r.appendChild(this.layerElement),t=r,n.appendChild(r)}this.globalData.defs.appendChild(a)}}else(this.data.hasMask||this.data.tt)&&this.data.tt?(this.matteElement=document.createElementNS(svgNS,"g"),this.matteElement.appendChild(this.layerElement),t=this.matteElement,this.baseElement=this.matteElement):this.baseElement=this.layerElement;if(!this.data.ln&&!this.data.cl||4!==this.data.ty&&0!==this.data.ty||(this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl)),0===this.data.ty){var l=document.createElementNS(svgNS,"clipPath"),p=document.createElementNS(svgNS,"path");p.setAttribute("d","M0,0 L"+this.data.w+",0 L"+this.data.w+","+this.data.h+" L0,"+this.data.h+"z");var m="cp_"+randomString(8);if(l.setAttribute("id",m),l.appendChild(p),this.globalData.defs.appendChild(l),this.checkMasks()){var c=document.createElementNS(svgNS,"g");c.setAttribute("clip-path","url("+locationHref+"#"+m+")"),c.appendChild(this.layerElement),this.transformedElement=c,t?t.appendChild(this.transformedElement):this.baseElement=this.transformedElement}else this.layerElement.setAttribute("clip-path","url("+locationHref+"#"+m+")")}0!==this.data.bm&&this.setBlendMode(),this.layerElement!==this.parentContainer&&(this.placeholder=null),this.data.ef&&(this.effectsManager=new SVGEffects(this)),this.checkParenting()},SVGBaseElement.prototype.setBlendMode=BaseElement.prototype.setBlendMode,SVGBaseElement.prototype.renderFrame=function(t){if(3===this.data.ty||this.data.hd||!this.isVisible)return!1;this.lastNum=this.currentFrameNum,this.finalTransform.opMdf=this.firstFrame||this.finalTransform.op.mdf,this.finalTransform.matMdf=this.firstFrame||this.finalTransform.mProp.mdf,this.finalTransform.opacity=this.finalTransform.op.v;var e,i=this.finalTransform.mat;if(this.hierarchy){var s=0,r=this.hierarchy.length;if(!this.finalTransform.matMdf)for(;s<r;){if(this.hierarchy[s].finalTransform.mProp.mdf){this.finalTransform.matMdf=!0;break}s+=1}if(this.finalTransform.matMdf)for(e=this.finalTransform.mProp.v.props,i.cloneFromProps(e),s=0;s<r;s+=1)e=this.hierarchy[s].finalTransform.mProp.v.props,i.transform(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}else this.isVisible&&(i=this.finalTransform.mProp.v);return this.finalTransform.matMdf&&this.layerElement&&this.transformedElement.setAttribute("transform",i.to2dCSS()),this.finalTransform.opMdf&&this.layerElement&&(this.finalTransform.op.v<=0?!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent&&(this.isTransparent=!0,this.hide()):this.hidden&&this.isTransparent&&(this.isTransparent=!1,this.show()),this.transformedElement.setAttribute("opacity",this.finalTransform.op.v)),this.data.hasMask&&this.maskManager.renderFrame(i),this.effectsManager&&this.effectsManager.renderFrame(this.firstFrame),this.isVisible},SVGBaseElement.prototype.destroy=function(){this.layerElement=null,this.parentContainer=null,this.matteElement&&(this.matteElement=null),this.maskManager&&this.maskManager.destroy()},SVGBaseElement.prototype.getBaseElement=function(){return this.baseElement},SVGBaseElement.prototype.addMasks=function(t){this.maskManager=new MaskElement(t,this,this.globalData)},SVGBaseElement.prototype.setMatte=function(t){this.matteElement&&this.matteElement.setAttribute("mask","url("+locationHref+"#"+t+")")},SVGBaseElement.prototype.hide=function(){this.hidden||(this.layerElement.style.display="none",this.hidden=!0)},SVGBaseElement.prototype.show=function(){this.isVisible&&!this.isTransparent&&(this.hidden=!1,this.layerElement.style.display="block")},createElement(SVGBaseElement,IShapeElement),IShapeElement.prototype.identityMatrix=new Matrix,IShapeElement.prototype.lcEnum={1:"butt",2:"round",3:"square"},IShapeElement.prototype.ljEnum={1:"miter",2:"round",3:"butt"},IShapeElement.prototype.searchProcessedElement=function(t){for(var e=this.processedElements.length;e;)if(e-=1,this.processedElements[e].elem===t)return this.processedElements[e].pos;return 0},IShapeElement.prototype.addProcessedElement=function(t,e){for(var i=this.processedElements.length;i;)if(i-=1,this.processedElements[i].elem===t){this.processedElements[i].pos=e;break}0===i&&this.processedElements.push({elem:t,pos:e})},IShapeElement.prototype.buildExpressionInterface=function(){},IShapeElement.prototype.createElements=function(){this._parent.createElements.call(this),this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties,0,[],!0),this.data.hd&&!this.data.td||styleUnselectableDiv(this.layerElement)},IShapeElement.prototype.setGradientData=function(t,e,i){var s,r="gr_"+randomString(10);s=1===e.t?document.createElementNS(svgNS,"linearGradient"):document.createElementNS(svgNS,"radialGradient"),s.setAttribute("id",r),s.setAttribute("spreadMethod","pad"),s.setAttribute("gradientUnits","userSpaceOnUse");var a,n,o,h=[];for(o=4*e.g.p,n=0;n<o;n+=4)a=document.createElementNS(svgNS,"stop"),s.appendChild(a),h.push(a);t.setAttribute("gf"===e.ty?"fill":"stroke","url(#"+r+")"),this.globalData.defs.appendChild(s),i.gf=s,i.cst=h},IShapeElement.prototype.setGradientOpacity=function(t,e,i){if(t.g.k.k[0].s&&t.g.k.k[0].s.length>4*t.g.p||t.g.k.k.length>4*t.g.p){var s,r,a,n,o=document.createElementNS(svgNS,"mask"),h=document.createElementNS(svgNS,"path");o.appendChild(h);var l="op_"+randomString(10),p="mk_"+randomString(10);o.setAttribute("id",p),s=1===t.t?document.createElementNS(svgNS,"linearGradient"):document.createElementNS(svgNS,"radialGradient"),s.setAttribute("id",l),s.setAttribute("spreadMethod","pad"),s.setAttribute("gradientUnits","userSpaceOnUse"),n=t.g.k.k[0].s?t.g.k.k[0].s.length:t.g.k.k.length;var m=[];for(a=4*t.g.p;a<n;a+=2)r=document.createElementNS(svgNS,"stop"),r.setAttribute("stop-color","rgb(255,255,255)"),s.appendChild(r),m.push(r);return h.setAttribute("gf"===t.ty?"fill":"stroke","url(#"+l+")"),this.globalData.defs.appendChild(s),this.globalData.defs.appendChild(o),e.of=s,e.ost=m,i.msElem=h,p}},IShapeElement.prototype.createStyleElement=function(t,e,i){var s={},r={data:t,type:t.ty,d:"",ld:"",lvl:e,mdf:!1,closed:!1},a=document.createElementNS(svgNS,"path");if(s.o=PropertyFactory.getProp(this,t.o,0,.01,i),("st"==t.ty||"gs"==t.ty)&&(a.setAttribute("stroke-linecap",this.lcEnum[t.lc]||"round"),a.setAttribute("stroke-linejoin",this.ljEnum[t.lj]||"round"),a.setAttribute("fill-opacity","0"),1==t.lj&&a.setAttribute("stroke-miterlimit",t.ml),s.w=PropertyFactory.getProp(this,t.w,0,null,i),t.d)){var n=PropertyFactory.getDashProp(this,t.d,"svg",i);n.k||(a.setAttribute("stroke-dasharray",n.dasharray),a.setAttribute("stroke-dashoffset",n.dashoffset)),s.d=n}if("fl"==t.ty||"st"==t.ty)s.c=PropertyFactory.getProp(this,t.c,1,255,i);else{s.g=PropertyFactory.getGradientProp(this,t.g,i),2==t.t&&(s.h=PropertyFactory.getProp(this,t.h,0,.01,i),s.a=PropertyFactory.getProp(this,t.a,0,degToRads,i)),s.s=PropertyFactory.getProp(this,t.s,1,null,i),s.e=PropertyFactory.getProp(this,t.e,1,null,i),this.setGradientData(a,t,s,r);var o=this.setGradientOpacity(t,s,r);o&&a.setAttribute("mask","url(#"+o+")")}return s.elem=a,2===t.r&&a.setAttribute("fill-rule","evenodd"),t.ln&&a.setAttribute("id",t.ln),t.cl&&a.setAttribute("class",t.cl),r.pElem=a,this.stylesList.push(r),s.style=r,s},IShapeElement.prototype.createGroupElement=function(t){var e={it:[],prevViewData:[]},i=document.createElementNS(svgNS,"g");return e.gr=i,t.ln&&e.gr.setAttribute("id",t.ln),e},IShapeElement.prototype.createTransformElement=function(t,e){return{transform:{op:PropertyFactory.getProp(this,t.o,0,.01,e),mProps:PropertyFactory.getProp(this,t,2,null,e)},elements:[]}},IShapeElement.prototype.createShapeElement=function(t,e,i,s){var r={elements:[],caches:[],styles:[],transformers:e,lStr:""},a=4;return"rc"==t.ty?a=5:"el"==t.ty?a=6:"sr"==t.ty&&(a=7),r.sh=ShapePropertyFactory.getShapeProp(this,t,a,s),r.lvl=i,this.shapes.push(r.sh),this.addShapeToModifiers(r),r};var cont=0;IShapeElement.prototype.setElementStyles=function(){var t,e=this.stylesList.length,i=[];for(t=0;t<e;t+=1)this.stylesList[t].closed||i.push(this.stylesList[t]);return i},IShapeElement.prototype.reloadShapes=function(){this.firstFrame=!0;var t,e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties,0,[],!0);var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers()},IShapeElement.prototype.searchShapes=function(t,e,i,s,r,a,n,o){var h,l,p,m,c,f,d=[].concat(n),u=t.length-1,y=[],g=[];for(h=u;h>=0;h-=1){if(f=this.searchProcessedElement(t[h]),f?e[h]=i[f-1]:t[h]._render=o,"fl"==t[h].ty||"st"==t[h].ty||"gf"==t[h].ty||"gs"==t[h].ty)f?e[h].style.closed=!1:e[h]=this.createStyleElement(t[h],a,r),t[h]._render&&s.appendChild(e[h].elem),y.push(e[h].style);else if("gr"==t[h].ty){if(f)for(p=e[h].it.length,l=0;l<p;l+=1)e[h].prevViewData[l]=e[h].it[l];else e[h]=this.createGroupElement(t[h]);this.searchShapes(t[h].it,e[h].it,e[h].prevViewData,e[h].gr,r,a+1,d,o),t[h]._render&&s.appendChild(e[h].gr)}else"tr"==t[h].ty?(f||(e[h]=this.createTransformElement(t[h],r)),m=e[h].transform,d.push(m)):"sh"==t[h].ty||"rc"==t[h].ty||"el"==t[h].ty||"sr"==t[h].ty?(f||(e[h]=this.createShapeElement(t[h],d,a,r)),e[h].elements=this.setElementStyles()):"tm"==t[h].ty||"rd"==t[h].ty||"ms"==t[h].ty?(f?(c=e[h],c.closed=!1):(c=ShapeModifiers.getModifier(t[h].ty),c.init(this,t[h],r),e[h]=c,this.shapeModifiers.push(c)),g.push(c)):"rp"==t[h].ty&&(f?(c=e[h],c.closed=!0):(c=ShapeModifiers.getModifier(t[h].ty),e[h]=c,c.init(this,t,h,e,r),this.shapeModifiers.push(c),o=!1),g.push(c));this.addProcessedElement(t[h],h+1)}for(u=y.length,h=0;h<u;h+=1)y[h].closed=!0;for(u=g.length,h=0;h<u;h+=1)g[h].closed=!0},IShapeElement.prototype.addShapeToModifiers=function(t){var e,i=this.shapeModifiers.length;for(e=0;e<i;e+=1)this.shapeModifiers[e].addShape(t)},IShapeElement.prototype.renderModifiers=function(){if(this.shapeModifiers.length){var t,e=this.shapes.length;for(t=0;t<e;t+=1)this.shapes[t].reset();for(e=this.shapeModifiers.length,t=e-1;t>=0;t-=1)this.shapeModifiers[t].processShapes(this.firstFrame)}},IShapeElement.prototype.renderFrame=function(t){if(!1===this._parent.renderFrame.call(this,t))return void this.hide();this.hidden&&(this.layerElement.style.display="block",this.hidden=!1),this.renderModifiers();var e,i=this.stylesList.length;for(e=0;e<i;e+=1)this.stylesList[e].d="",this.stylesList[e].mdf=!1;for(this.renderShape(this.shapesData,this.itemsData,null),e=0;e<i;e+=1)"0"===this.stylesList[e].ld&&(this.stylesList[e].ld="1",this.stylesList[e].pElem.style.display="block"),(this.stylesList[e].mdf||this.firstFrame)&&(this.stylesList[e].pElem.setAttribute("d",this.stylesList[e].d),this.stylesList[e].msElem&&this.stylesList[e].msElem.setAttribute("d",this.stylesList[e].d));this.firstFrame&&(this.firstFrame=!1)},IShapeElement.prototype.hide=function(){if(!this.hidden){this.layerElement.style.display="none";var t,e=this.stylesList.length;for(t=e-1;t>=0;t-=1)"0"!==this.stylesList[t].ld&&(this.stylesList[t].ld="0",this.stylesList[t].pElem.style.display="none",this.stylesList[t].pElem.parentNode&&(this.stylesList[t].parent=this.stylesList[t].pElem.parentNode));this.hidden=!0}},IShapeElement.prototype.renderShape=function(t,e,i){var s,r,a=t.length-1;for(s=a;s>=0;s-=1)r=t[s].ty,"tr"==r?((this.firstFrame||e[s].transform.op.mdf&&i)&&i.setAttribute("opacity",e[s].transform.op.v),(this.firstFrame||e[s].transform.mProps.mdf&&i)&&i.setAttribute("transform",e[s].transform.mProps.v.to2dCSS())):"sh"==r||"el"==r||"rc"==r||"sr"==r?this.renderPath(t[s],e[s]):"fl"==r?this.renderFill(t[s],e[s]):"gf"==r?this.renderGradient(t[s],e[s]):"gs"==r?(this.renderGradient(t[s],e[s]),this.renderStroke(t[s],e[s])):"st"==r?this.renderStroke(t[s],e[s]):"gr"==r&&this.renderShape(t[s].it,e[s].it,e[s].gr)},IShapeElement.prototype.buildShapeString=function(t,e,i,s){var r,a="";for(r=1;r<e;r+=1)1===r&&(a+=" M"+s.applyToPointStringified(t.v[0][0],t.v[0][1])),a+=" C"+s.applyToPointStringified(t.o[r-1][0],t.o[r-1][1])+" "+s.applyToPointStringified(t.i[r][0],t.i[r][1])+" "+s.applyToPointStringified(t.v[r][0],t.v[r][1]);return 1===e&&(a+=" M"+s.applyToPointStringified(t.v[0][0],t.v[0][1])),i&&e&&(a+=" C"+s.applyToPointStringified(t.o[r-1][0],t.o[r-1][1])+" "+s.applyToPointStringified(t.i[0][0],t.i[0][1])+" "+s.applyToPointStringified(t.v[0][0],t.v[0][1]),a+="z"),a},IShapeElement.prototype.renderPath=function(t,e){var i,s,r,a,n,o,h=e.elements.length,l=e.lvl;if(t._render)for(o=0;o<h;o+=1)if(e.elements[o].data._render){a=e.sh.mdf||this.firstFrame,r="M0 0";var p=e.sh.paths;if(s=p._length,e.elements[o].lvl<l){for(var m,c=this.mHelper.reset(),f=l-e.elements[o].lvl,d=e.transformers.length-1;f>0;)a=e.transformers[d].mProps.mdf||a,m=e.transformers[d].mProps.v.props,c.transform(m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15]),f--,d--;if(a){for(i=0;i<s;i+=1)(n=p.shapes[i])&&n._length&&(r+=this.buildShapeString(n,n._length,n.c,c));e.caches[o]=r}else r=e.caches[o]}else if(a){for(i=0;i<s;i+=1)(n=p.shapes[i])&&n._length&&(r+=this.buildShapeString(n,n._length,n.c,this.identityMatrix));e.caches[o]=r}else r=e.caches[o];e.elements[o].d+=r,e.elements[o].mdf=a||e.elements[o].mdf}else e.elements[o].mdf=!0},IShapeElement.prototype.renderFill=function(t,e){var i=e.style;(e.c.mdf||this.firstFrame)&&i.pElem.setAttribute("fill","rgb("+bm_floor(e.c.v[0])+","+bm_floor(e.c.v[1])+","+bm_floor(e.c.v[2])+")"),(e.o.mdf||this.firstFrame)&&i.pElem.setAttribute("fill-opacity",e.o.v)},IShapeElement.prototype.renderGradient=function(t,e){var i=e.gf,s=e.of,r=e.s.v,a=e.e.v;if(e.o.mdf||this.firstFrame){var n="gf"===t.ty?"fill-opacity":"stroke-opacity";e.elem.setAttribute(n,e.o.v)}if(e.s.mdf||this.firstFrame){var o=1===t.t?"x1":"cx",h="x1"===o?"y1":"cy";i.setAttribute(o,r[0]),i.setAttribute(h,r[1]),s&&(s.setAttribute(o,r[0]),s.setAttribute(h,r[1]))}var l,p,m,c;if(e.g.cmdf||this.firstFrame){l=e.cst;var f=e.g.c;for(m=l.length,p=0;p<m;p+=1)c=l[p],c.setAttribute("offset",f[4*p]+"%"),c.setAttribute("stop-color","rgb("+f[4*p+1]+","+f[4*p+2]+","+f[4*p+3]+")")}if(s&&(e.g.omdf||this.firstFrame)){l=e.ost;var d=e.g.o;for(m=l.length,
p=0;p<m;p+=1)c=l[p],c.setAttribute("offset",d[2*p]+"%"),c.setAttribute("stop-opacity",d[2*p+1])}if(1===t.t)(e.e.mdf||this.firstFrame)&&(i.setAttribute("x2",a[0]),i.setAttribute("y2",a[1]),s&&(s.setAttribute("x2",a[0]),s.setAttribute("y2",a[1])));else{var u;if((e.s.mdf||e.e.mdf||this.firstFrame)&&(u=Math.sqrt(Math.pow(r[0]-a[0],2)+Math.pow(r[1]-a[1],2)),i.setAttribute("r",u),s&&s.setAttribute("r",u)),e.e.mdf||e.h.mdf||e.a.mdf||this.firstFrame){u||(u=Math.sqrt(Math.pow(r[0]-a[0],2)+Math.pow(r[1]-a[1],2)));var y=Math.atan2(a[1]-r[1],a[0]-r[0]),g=e.h.v>=1?.99:e.h.v<=-1?-.99:e.h.v,v=u*g,b=Math.cos(y+e.a.v)*v+r[0],E=Math.sin(y+e.a.v)*v+r[1];i.setAttribute("fx",b),i.setAttribute("fy",E),s&&(s.setAttribute("fx",b),s.setAttribute("fy",E))}}},IShapeElement.prototype.renderStroke=function(t,e){var i=e.style,s=e.d;s&&s.k&&(s.mdf||this.firstFrame)&&(i.pElem.setAttribute("stroke-dasharray",s.dasharray),i.pElem.setAttribute("stroke-dashoffset",s.dashoffset)),e.c&&(e.c.mdf||this.firstFrame)&&i.pElem.setAttribute("stroke","rgb("+bm_floor(e.c.v[0])+","+bm_floor(e.c.v[1])+","+bm_floor(e.c.v[2])+")"),(e.o.mdf||this.firstFrame)&&i.pElem.setAttribute("stroke-opacity",e.o.v),(e.w.mdf||this.firstFrame)&&(i.pElem.setAttribute("stroke-width",e.w.v),i.msElem&&i.msElem.setAttribute("stroke-width",e.w.v))},IShapeElement.prototype.destroy=function(){this._parent.destroy.call(this._parent),this.shapeData=null,this.itemsData=null,this.parentContainer=null,this.placeholder=null},ITextElement.prototype.init=function(){this.lettersChangedFlag=!0,this.dynamicProperties=this.dynamicProperties||[],this.textAnimator=new TextAnimatorProperty(this.data.t,this.renderType,this),this.textProperty=new TextProperty(this,this.data.t,this.dynamicProperties),this._parent.init.call(this),this.textAnimator.searchProperties(this.dynamicProperties)},ITextElement.prototype.prepareFrame=function(t){this._parent.prepareFrame.call(this,t),(this.textProperty.mdf||this.textProperty.firstFrame)&&(this.buildNewText(),this.textProperty.firstFrame=!1)},ITextElement.prototype.createPathShape=function(t,e){var i,s,r=e.length,a="";for(i=0;i<r;i+=1)s=e[i].ks.k,a+=this.buildShapeString(s,s.i.length,!0,t);return a},ITextElement.prototype.updateDocumentData=function(t,e){this.textProperty.updateDocumentData(t,e)},ITextElement.prototype.applyTextPropertiesToMatrix=function(t,e,i,s,r){switch(t.ps&&e.translate(t.ps[0],t.ps[1]+t.ascent,0),e.translate(0,-t.ls,0),t.j){case 1:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[i]),0,0);break;case 2:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[i])/2,0,0)}e.translate(s,r,0)},ITextElement.prototype.buildColor=function(t){return"rgb("+Math.round(255*t[0])+","+Math.round(255*t[1])+","+Math.round(255*t[2])+")"},ITextElement.prototype.buildShapeString=IShapeElement.prototype.buildShapeString,ITextElement.prototype.emptyProp=new LetterProps,ITextElement.prototype.destroy=function(){this._parent.destroy.call(this._parent)},createElement(SVGBaseElement,SVGTextElement),extendPrototype(ITextElement,SVGTextElement),SVGTextElement.prototype.createElements=function(){this._parent.createElements.call(this),this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl),this.data.singleShape&&!this.globalData.fontManager.chars&&(this.textContainer=document.createElementNS(svgNS,"text"))},SVGTextElement.prototype.buildNewText=function(){var t,e,i=this.textProperty.currentData;this.renderedLetters=Array.apply(null,{length:i?i.l.length:0}),i.fc?this.layerElement.setAttribute("fill",this.buildColor(i.fc)):this.layerElement.setAttribute("fill","rgba(0,0,0,0)"),i.sc&&(this.layerElement.setAttribute("stroke",this.buildColor(i.sc)),this.layerElement.setAttribute("stroke-width",i.sw)),this.layerElement.setAttribute("font-size",i.s);var s=this.globalData.fontManager.getFontByName(i.f);if(s.fClass)this.layerElement.setAttribute("class",s.fClass);else{this.layerElement.setAttribute("font-family",s.fFamily);var r=i.fWeight,a=i.fStyle;this.layerElement.setAttribute("font-style",a),this.layerElement.setAttribute("font-weight",r)}var n=i.l||[],o=this.globalData.fontManager.chars;if(e=n.length){var h,l,p=this.mHelper,m="",c=this.data.singleShape,f=0,d=0,u=!0,y=i.tr/1e3*i.s;if(c&&!o){var g=this.textContainer,v="";switch(i.j){case 1:v="end";break;case 2:v="middle";break;case 2:v="start"}g.setAttribute("text-anchor",v),g.setAttribute("letter-spacing",y);var b=i.t.split(String.fromCharCode(13));e=b.length;var d=i.ps?i.ps[1]+i.ascent:0;for(t=0;t<e;t+=1)h=this.textSpans[t]||document.createElementNS(svgNS,"tspan"),h.textContent=b[t],h.setAttribute("x",0),h.setAttribute("y",d),h.style.display="inherit",g.appendChild(h),this.textSpans[t]=h,d+=i.lh;this.layerElement.appendChild(g)}else{var E,P,x=this.textSpans.length;for(t=0;t<e;t+=1)o&&c&&0!==t||(h=x>t?this.textSpans[t]:document.createElementNS(svgNS,o?"path":"text"),x<=t&&(h.setAttribute("stroke-linecap","butt"),h.setAttribute("stroke-linejoin","round"),h.setAttribute("stroke-miterlimit","4"),this.textSpans[t]=h,this.layerElement.appendChild(h)),h.style.display="inherit"),p.reset(),o?(p.scale(i.s/100,i.s/100),c&&(n[t].n&&(f=-y,d+=i.yOffset,d+=u?1:0,u=!1),this.applyTextPropertiesToMatrix(i,p,n[t].line,f,d),f+=n[t].l||0,f+=y),P=this.globalData.fontManager.getCharData(i.t.charAt(t),s.fStyle,this.globalData.fontManager.getFontByName(i.f).fFamily),E=P&&P.data||{},l=E.shapes?E.shapes[0].it:[],c?m+=this.createPathShape(p,l):h.setAttribute("d",this.createPathShape(p,l))):(h.textContent=n[t].val,h.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"));c&&h.setAttribute("d",m)}for(;t<this.textSpans.length;)this.textSpans[t].style.display="none",t+=1;this._sizeChanged=!0}},SVGTextElement.prototype.sourceRectAtTime=function(t){if(this.prepareFrame(this.comp.renderedFrame-this.data.st),this.renderLetters(),this._sizeChanged){this._sizeChanged=!1;var e=this.layerElement.getBBox();this.bbox={top:e.y,left:e.x,width:e.width,height:e.height}}return this.bbox},SVGTextElement.prototype.renderLetters=function(){if(!this.data.singleShape&&(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),this.lettersChangedFlag||this.textAnimator.lettersChangedFlag)){this._sizeChanged=!0;var t,e,i=this.textAnimator.renderedLetters,s=this.textProperty.currentData.l;e=s.length;var r,a;for(t=0;t<e;t+=1)s[t].n||(r=i[t],a=this.textSpans[t],r.mdf.m&&a.setAttribute("transform",r.m),r.mdf.o&&a.setAttribute("opacity",r.o),r.mdf.sw&&a.setAttribute("stroke-width",r.sw),r.mdf.sc&&a.setAttribute("stroke",r.sc),r.mdf.fc&&a.setAttribute("fill",r.fc))}},SVGTextElement.prototype.renderFrame=function(t){if(!1===this._parent.renderFrame.call(this,t))return void this.hide();this.hidden&&this.show(),this.firstFrame&&(this.firstFrame=!1),this.renderLetters()},SVGTintFilter.prototype.renderFrame=function(t){if(t||this.filterManager.mdf){var e=this.filterManager.effectElements[0].p.v,i=this.filterManager.effectElements[1].p.v,s=this.filterManager.effectElements[2].p.v/100;this.matrixFilter.setAttribute("values",i[0]-e[0]+" 0 0 0 "+e[0]+" "+(i[1]-e[1])+" 0 0 0 "+e[1]+" "+(i[2]-e[2])+" 0 0 0 "+e[2]+" 0 0 0 "+s+" 0")}},SVGFillFilter.prototype.renderFrame=function(t){if(t||this.filterManager.mdf){var e=this.filterManager.effectElements[2].p.v,i=this.filterManager.effectElements[6].p.v;this.matrixFilter.setAttribute("values","0 0 0 0 "+e[0]+" 0 0 0 0 "+e[1]+" 0 0 0 0 "+e[2]+" 0 0 0 "+i+" 0")}},SVGStrokeEffect.prototype.initialize=function(){var t,e,i,s,r=this.elem.layerElement.children||this.elem.layerElement.childNodes;for(1===this.filterManager.effectElements[1].p.v?(s=this.elem.maskManager.masksProperties.length,i=0):(i=this.filterManager.effectElements[0].p.v-1,s=i+1),e=document.createElementNS(svgNS,"g"),e.setAttribute("fill","none"),e.setAttribute("stroke-linecap","round"),e.setAttribute("stroke-dashoffset",1),i;i<s;i+=1)t=document.createElementNS(svgNS,"path"),e.appendChild(t),this.paths.push({p:t,m:i});if(3===this.filterManager.effectElements[10].p.v){var a=document.createElementNS(svgNS,"mask"),n="stms_"+randomString(10);a.setAttribute("id",n),a.setAttribute("mask-type","alpha"),a.appendChild(e),this.elem.globalData.defs.appendChild(a);var o=document.createElementNS(svgNS,"g");o.setAttribute("mask","url("+locationHref+"#"+n+")"),r[0]&&o.appendChild(r[0]),this.elem.layerElement.appendChild(o),this.masker=a,e.setAttribute("stroke","#fff")}else if(1===this.filterManager.effectElements[10].p.v||2===this.filterManager.effectElements[10].p.v){if(2===this.filterManager.effectElements[10].p.v)for(var r=this.elem.layerElement.children||this.elem.layerElement.childNodes;r.length;)this.elem.layerElement.removeChild(r[0]);this.elem.layerElement.appendChild(e),this.elem.layerElement.removeAttribute("mask"),e.setAttribute("stroke","#fff")}this.initialized=!0,this.pathMasker=e},SVGStrokeEffect.prototype.renderFrame=function(t){this.initialized||this.initialize();var e,i,s,r=this.paths.length;for(e=0;e<r;e+=1)if(i=this.elem.maskManager.viewData[this.paths[e].m],s=this.paths[e].p,(t||this.filterManager.mdf||i.prop.mdf)&&s.setAttribute("d",i.lastPath),t||this.filterManager.effectElements[9].p.mdf||this.filterManager.effectElements[4].p.mdf||this.filterManager.effectElements[7].p.mdf||this.filterManager.effectElements[8].p.mdf||i.prop.mdf){var a;if(0!==this.filterManager.effectElements[7].p.v||100!==this.filterManager.effectElements[8].p.v){var n=Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100,o=Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100,h=s.getTotalLength();a="0 0 0 "+h*n+" ";var l,p=h*(o-n),m=1+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v/100,c=Math.floor(p/m);for(l=0;l<c;l+=1)a+="1 "+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v/100+" ";a+="0 "+10*h+" 0 0"}else a="1 "+2*this.filterManager.effectElements[4].p.v*this.filterManager.effectElements[9].p.v/100;s.setAttribute("stroke-dasharray",a)}if((t||this.filterManager.effectElements[4].p.mdf)&&this.pathMasker.setAttribute("stroke-width",2*this.filterManager.effectElements[4].p.v),(t||this.filterManager.effectElements[6].p.mdf)&&this.pathMasker.setAttribute("opacity",this.filterManager.effectElements[6].p.v),(1===this.filterManager.effectElements[10].p.v||2===this.filterManager.effectElements[10].p.v)&&(t||this.filterManager.effectElements[3].p.mdf)){var f=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute("stroke","rgb("+bm_floor(255*f[0])+","+bm_floor(255*f[1])+","+bm_floor(255*f[2])+")")}},SVGTritoneFilter.prototype.renderFrame=function(t){if(t||this.filterManager.mdf){var e=this.filterManager.effectElements[0].p.v,i=this.filterManager.effectElements[1].p.v,s=this.filterManager.effectElements[2].p.v,r=s[0]+" "+i[0]+" "+e[0],a=s[1]+" "+i[1]+" "+e[1],n=s[2]+" "+i[2]+" "+e[2];this.feFuncR.setAttribute("tableValues",r),this.feFuncG.setAttribute("tableValues",a),this.feFuncB.setAttribute("tableValues",n)}},SVGProLevelsFilter.prototype.createFeFunc=function(t,e){var i=document.createElementNS(svgNS,t);return i.setAttribute("type","table"),e.appendChild(i),i},SVGProLevelsFilter.prototype.getTableValue=function(t,e,i,s,r){for(var a,n,o=0,h=Math.min(t,e),l=Math.max(t,e),p=Array.call(null,{length:256}),m=0,c=r-s,f=e-t;o<=256;)a=o/256,n=a<=h?f<0?r:s:a>=l?f<0?s:r:s+c*Math.pow((a-t)/f,1/i),p[m++]=n,o+=256/255;return p.join(" ")},SVGProLevelsFilter.prototype.renderFrame=function(t){if(t||this.filterManager.mdf){var e,i=this.filterManager.effectElements;this.feFuncRComposed&&(t||i[2].p.mdf||i[3].p.mdf||i[4].p.mdf||i[5].p.mdf||i[6].p.mdf)&&(e=this.getTableValue(i[2].p.v,i[3].p.v,i[4].p.v,i[5].p.v,i[6].p.v),this.feFuncRComposed.setAttribute("tableValues",e),this.feFuncGComposed.setAttribute("tableValues",e),this.feFuncBComposed.setAttribute("tableValues",e)),this.feFuncR&&(t||i[9].p.mdf||i[10].p.mdf||i[11].p.mdf||i[12].p.mdf||i[13].p.mdf)&&(e=this.getTableValue(i[9].p.v,i[10].p.v,i[11].p.v,i[12].p.v,i[13].p.v),this.feFuncR.setAttribute("tableValues",e)),this.feFuncG&&(t||i[16].p.mdf||i[17].p.mdf||i[18].p.mdf||i[19].p.mdf||i[20].p.mdf)&&(e=this.getTableValue(i[16].p.v,i[17].p.v,i[18].p.v,i[19].p.v,i[20].p.v),this.feFuncG.setAttribute("tableValues",e)),this.feFuncB&&(t||i[23].p.mdf||i[24].p.mdf||i[25].p.mdf||i[26].p.mdf||i[27].p.mdf)&&(e=this.getTableValue(i[23].p.v,i[24].p.v,i[25].p.v,i[26].p.v,i[27].p.v),this.feFuncB.setAttribute("tableValues",e)),this.feFuncA&&(t||i[30].p.mdf||i[31].p.mdf||i[32].p.mdf||i[33].p.mdf||i[34].p.mdf)&&(e=this.getTableValue(i[30].p.v,i[31].p.v,i[32].p.v,i[33].p.v,i[34].p.v),this.feFuncA.setAttribute("tableValues",e))}},SVGDropShadowEffect.prototype.renderFrame=function(t){if(t||this.filterManager.mdf){if((t||this.filterManager.effectElements[4].p.mdf)&&this.feGaussianBlur.setAttribute("stdDeviation",this.filterManager.effectElements[4].p.v/4),t||this.filterManager.effectElements[0].p.mdf){var e=this.filterManager.effectElements[0].p.v;this.feFlood.setAttribute("flood-color",rgbToHex(Math.round(255*e[0]),Math.round(255*e[1]),Math.round(255*e[2])))}if((t||this.filterManager.effectElements[1].p.mdf)&&this.feFlood.setAttribute("flood-opacity",this.filterManager.effectElements[1].p.v/255),t||this.filterManager.effectElements[2].p.mdf||this.filterManager.effectElements[3].p.mdf){var i=this.filterManager.effectElements[3].p.v,s=(this.filterManager.effectElements[2].p.v-90)*degToRads,r=i*Math.cos(s),a=i*Math.sin(s);this.feOffset.setAttribute("dx",r),this.feOffset.setAttribute("dy",a)}}},SVGMatte3Effect.prototype.setElementAsMask=function(t,e){var i=document.createElementNS(svgNS,"mask");i.setAttribute("id",e.layerId),i.setAttribute("mask-type","alpha"),i.appendChild(e.layerElement),t.setMatte(e.layerId),e.data.hd=!1,t.globalData.defs.appendChild(i)},SVGMatte3Effect.prototype.initialize=function(){for(var t=this.filterManager.effectElements[0].p.v,e=0,i=this.elem.comp.elements.length;e<i;)this.elem.comp.elements[e].data.ind===t&&this.setElementAsMask(this.elem,this.elem.comp.elements[e]),e+=1;this.initialized=!0},SVGMatte3Effect.prototype.renderFrame=function(){this.initialized||this.initialize()},SVGEffects.prototype.renderFrame=function(t){var e,i=this.filters.length;for(e=0;e<i;e+=1)this.filters[e].renderFrame(t)},createElement(SVGBaseElement,ICompElement),ICompElement.prototype.hide=function(){if(!this.hidden){this._parent.hide.call(this);var t,e=this.elements.length;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].hide()}},ICompElement.prototype.prepareFrame=function(t){if(this._parent.prepareFrame.call(this,t),!1!==this.isVisible||this.data.xt){if(this.tm){var e=this.tm.v;e===this.data.op&&(e=this.data.op-1),this.renderedFrame=e}else this.renderedFrame=t/this.data.sr;var i,s=this.elements.length;for(this.completeLayers||this.checkLayers(this.renderedFrame),i=0;i<s;i+=1)(this.completeLayers||this.elements[i])&&this.elements[i].prepareFrame(this.renderedFrame-this.layers[i].st)}},ICompElement.prototype.renderFrame=function(t){var e,i=this._parent.renderFrame.call(this,t),s=this.layers.length;if(!1===i)return void this.hide();for(this.hidden&&this.show(),e=0;e<s;e+=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame();this.firstFrame&&(this.firstFrame=!1)},ICompElement.prototype.setElements=function(t){this.elements=t},ICompElement.prototype.getElements=function(){return this.elements},ICompElement.prototype.destroy=function(){this._parent.destroy.call(this._parent);var t,e=this.layers.length;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy()},ICompElement.prototype.checkLayers=SVGRenderer.prototype.checkLayers,ICompElement.prototype.buildItem=SVGRenderer.prototype.buildItem,ICompElement.prototype.buildAllItems=SVGRenderer.prototype.buildAllItems,ICompElement.prototype.buildElementParenting=SVGRenderer.prototype.buildElementParenting,ICompElement.prototype.createItem=SVGRenderer.prototype.createItem,ICompElement.prototype.createImage=SVGRenderer.prototype.createImage,ICompElement.prototype.createComp=SVGRenderer.prototype.createComp,ICompElement.prototype.createSolid=SVGRenderer.prototype.createSolid,ICompElement.prototype.createShape=SVGRenderer.prototype.createShape,ICompElement.prototype.createText=SVGRenderer.prototype.createText,ICompElement.prototype.createBase=SVGRenderer.prototype.createBase,ICompElement.prototype.appendElementInPos=SVGRenderer.prototype.appendElementInPos,ICompElement.prototype.checkPendingElements=SVGRenderer.prototype.checkPendingElements,ICompElement.prototype.addPendingElement=SVGRenderer.prototype.addPendingElement,createElement(SVGBaseElement,IImageElement),IImageElement.prototype.createElements=function(){var t=this.globalData.getAssetsPath(this.assetData);this._parent.createElements.call(this),this.innerElem=document.createElementNS(svgNS,"image"),this.innerElem.setAttribute("width",this.assetData.w+"px"),this.innerElem.setAttribute("height",this.assetData.h+"px"),this.innerElem.setAttribute("preserveAspectRatio","xMidYMid slice"),this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink","href",t),this.maskedElement=this.innerElem,this.layerElement.appendChild(this.innerElem),this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl)},IImageElement.prototype.renderFrame=function(t){if(!1===this._parent.renderFrame.call(this,t))return void this.hide();this.hidden&&this.show(),this.firstFrame&&(this.firstFrame=!1)},IImageElement.prototype.destroy=function(){this._parent.destroy.call(this._parent),this.innerElem=null},createElement(SVGBaseElement,ISolidElement),ISolidElement.prototype.createElements=function(){this._parent.createElements.call(this);var t=document.createElementNS(svgNS,"rect");t.setAttribute("width",this.data.sw),t.setAttribute("height",this.data.sh),t.setAttribute("fill",this.data.sc),this.layerElement.appendChild(t),this.innerElem=t,this.data.ln&&this.layerElement.setAttribute("id",this.data.ln),this.data.cl&&this.layerElement.setAttribute("class",this.data.cl)},ISolidElement.prototype.renderFrame=IImageElement.prototype.renderFrame,ISolidElement.prototype.destroy=IImageElement.prototype.destroy;var animationManager=function(){function t(t){for(var e=0,i=t.target;e<C;)x[e].animation===i&&(x.splice(e,1),e-=1,C-=1,i.isPaused||s()),e+=1}function e(t,e){if(!t)return null;for(var i=0;i<C;){if(x[i].elem==t&&null!==x[i].elem)return x[i].animation;i+=1}var s=new AnimationItem;return r(s,t),s.setData(t,e),s}function i(){A+=1,E()}function s(){0===(A-=1)&&(k=!0)}function r(e,r){e.addEventListener("destroy",t),e.addEventListener("_active",i),e.addEventListener("_idle",s),x.push({elem:r,animation:e}),C+=1}function a(t){var e=new AnimationItem;return r(e,null),e.setParams(t),e}function n(t,e){var i;for(i=0;i<C;i+=1)x[i].animation.setSpeed(t,e)}function o(t,e){var i;for(i=0;i<C;i+=1)x[i].animation.setDirection(t,e)}function h(t){var e;for(e=0;e<C;e+=1)x[e].animation.play(t)}function l(t,e){S=Date.now();var i;for(i=0;i<C;i+=1)x[i].animation.moveFrame(t,e)}function p(t){var e,i=t-S;for(e=0;e<C;e+=1)x[e].animation.advanceTime(i);S=t,k||window.requestAnimationFrame(p)}function m(t){S=t,window.requestAnimationFrame(p)}function c(t){var e;for(e=0;e<C;e+=1)x[e].animation.pause(t)}function f(t,e,i){var s;for(s=0;s<C;s+=1)x[s].animation.goToAndStop(t,e,i)}function d(t){var e;for(e=0;e<C;e+=1)x[e].animation.stop(t)}function u(t){var e;for(e=0;e<C;e+=1)x[e].animation.togglePause(t)}function y(t){var e;for(e=C-1;e>=0;e-=1)x[e].animation.destroy(t)}function g(t,i,s){var r,a=document.getElementsByClassName("bodymovin"),n=a.length;for(r=0;r<n;r+=1)s&&a[r].setAttribute("data-bm-type",s),e(a[r],t);if(i&&0===n){s||(s="svg");var o=document.getElementsByTagName("body")[0];o.innerHTML="";var h=document.createElement("div");h.style.width="100%",h.style.height="100%",h.setAttribute("data-bm-type",s),o.appendChild(h),e(h,t)}}function v(){var t;for(t=0;t<C;t+=1)x[t].animation.resize()}function b(){window.requestAnimationFrame(m)}function E(){k&&(k=!1,window.requestAnimationFrame(m))}var P={},x=[],S=0,C=0,k=!0,A=0;return setTimeout(b,0),P.registerAnimation=e,P.loadAnimation=a,P.setSpeed=n,P.setDirection=o,P.play=h,P.moveFrame=l,P.pause=c,P.stop=d,P.togglePause=u,P.searchAnimations=g,P.resize=v,P.start=b,P.goToAndStop=f,P.destroy=y,P}(),AnimationItem=function(){this._cbs=[],this.name="",this.path="",this.isLoaded=!1,this.currentFrame=0,this.currentRawFrame=0,this.totalFrames=0,this.frameRate=0,this.frameMult=0,this.playSpeed=1,this.playDirection=1,this.pendingElements=0,this.playCount=0,this.prerenderFramesFlag=!0,this.animationData={},this.layers=[],this.assets=[],this.isPaused=!0,this.autoplay=!1,this.loop=!0,this.renderer=null,this.animationID=randomString(10),this.scaleMode="fit",this.assetsPath="",this.timeCompleted=0,this.segmentPos=0,this.subframeEnabled=subframeEnabled,this.segments=[],this.pendingSegment=!1,this._idle=!0,this.projectInterface=ProjectInterface()};AnimationItem.prototype.setParams=function(t){var e=this;t.context&&(this.context=t.context),(t.wrapper||t.container)&&(this.wrapper=t.wrapper||t.container);var i=t.animType?t.animType:t.renderer?t.renderer:"svg";switch(i){case"canvas":this.renderer=new CanvasRenderer(this,t.rendererSettings);break;case"svg":this.renderer=new SVGRenderer(this,t.rendererSettings);break;case"hybrid":case"html":default:this.renderer=new HybridRenderer(this,t.rendererSettings)}if(this.renderer.setProjectInterface(this.projectInterface),this.animType=i,""===t.loop||null===t.loop||(!1===t.loop?this.loop=!1:!0===t.loop?this.loop=!0:this.loop=parseInt(t.loop)),this.autoplay=!("autoplay"in t)||t.autoplay,this.name=t.name?t.name:"",this.prerenderFramesFlag=!("prerender"in t)||t.prerender,this.autoloadSegments=!t.hasOwnProperty("autoloadSegments")||t.autoloadSegments,t.animationData)e.configAnimation(t.animationData);else if(t.path){"json"!=t.path.substr(-4)&&("/"!=t.path.substr(-1,1)&&(t.path+="/"),t.path+="data.json");var s=new XMLHttpRequest;-1!=t.path.lastIndexOf("\\")?this.path=t.path.substr(0,t.path.lastIndexOf("\\")+1):this.path=t.path.substr(0,t.path.lastIndexOf("/")+1),this.assetsPath=t.assetsPath,this.fileName=t.path.substr(t.path.lastIndexOf("/")+1),this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf(".json")),s.open("GET",t.path,!0),s.send(),s.onreadystatechange=function(){if(4==s.readyState)if(200==s.status)e.configAnimation(JSON.parse(s.responseText));else try{var t=JSON.parse(s.responseText);e.configAnimation(t)}catch(t){}}}},AnimationItem.prototype.setData=function(t,e){var i={wrapper:t,animationData:e?"object"==typeof e?e:JSON.parse(e):null},s=t.attributes;i.path=s.getNamedItem("data-animation-path")?s.getNamedItem("data-animation-path").value:s.getNamedItem("data-bm-path")?s.getNamedItem("data-bm-path").value:s.getNamedItem("bm-path")?s.getNamedItem("bm-path").value:"",i.animType=s.getNamedItem("data-anim-type")?s.getNamedItem("data-anim-type").value:s.getNamedItem("data-bm-type")?s.getNamedItem("data-bm-type").value:s.getNamedItem("bm-type")?s.getNamedItem("bm-type").value:s.getNamedItem("data-bm-renderer")?s.getNamedItem("data-bm-renderer").value:s.getNamedItem("bm-renderer")?s.getNamedItem("bm-renderer").value:"canvas";var r=s.getNamedItem("data-anim-loop")?s.getNamedItem("data-anim-loop").value:s.getNamedItem("data-bm-loop")?s.getNamedItem("data-bm-loop").value:s.getNamedItem("bm-loop")?s.getNamedItem("bm-loop").value:"";""===r||(i.loop="false"!==r&&("true"===r||parseInt(r)));var a=s.getNamedItem("data-anim-autoplay")?s.getNamedItem("data-anim-autoplay").value:s.getNamedItem("data-bm-autoplay")?s.getNamedItem("data-bm-autoplay").value:!s.getNamedItem("bm-autoplay")||s.getNamedItem("bm-autoplay").value;i.autoplay="false"!==a,i.name=s.getNamedItem("data-name")?s.getNamedItem("data-name").value:s.getNamedItem("data-bm-name")?s.getNamedItem("data-bm-name").value:s.getNamedItem("bm-name")?s.getNamedItem("bm-name").value:"","false"===(s.getNamedItem("data-anim-prerender")?s.getNamedItem("data-anim-prerender").value:s.getNamedItem("data-bm-prerender")?s.getNamedItem("data-bm-prerender").value:s.getNamedItem("bm-prerender")?s.getNamedItem("bm-prerender").value:"")&&(i.prerender=!1),this.setParams(i)},AnimationItem.prototype.includeLayers=function(t){t.op>this.animationData.op&&(this.animationData.op=t.op,this.totalFrames=Math.floor(t.op-this.animationData.ip),this.animationData.tf=this.totalFrames);var e,i,s=this.animationData.layers,r=s.length,a=t.layers,n=a.length;for(i=0;i<n;i+=1)for(e=0;e<r;){if(s[e].id==a[i].id){s[e]=a[i];break}e+=1}if((t.chars||t.fonts)&&(this.renderer.globalData.fontManager.addChars(t.chars),this.renderer.globalData.fontManager.addFonts(t.fonts,this.renderer.globalData.defs)),t.assets)for(r=t.assets.length,e=0;e<r;e+=1)this.animationData.assets.push(t.assets[e]);this.animationData.__complete=!1,dataManager.completeData(this.animationData,this.renderer.globalData.fontManager),this.renderer.includeLayers(t.layers),expressionsPlugin&&expressionsPlugin.initExpressions(this),this.renderer.renderFrame(null),this.loadNextSegment()},AnimationItem.prototype.loadNextSegment=function(){var t=this.animationData.segments;if(!t||0===t.length||!this.autoloadSegments)return this.trigger("data_ready"),void(this.timeCompleted=this.animationData.tf);var e=t.shift();this.timeCompleted=e.time*this.frameRate;var i=new XMLHttpRequest,s=this,r=this.path+this.fileName+"_"+this.segmentPos+".json";this.segmentPos+=1,i.open("GET",r,!0),i.send(),i.onreadystatechange=function(){if(4==i.readyState)if(200==i.status)s.includeLayers(JSON.parse(i.responseText));else try{var t=JSON.parse(i.responseText);s.includeLayers(t)}catch(t){}}},AnimationItem.prototype.loadSegments=function(){this.animationData.segments||(this.timeCompleted=this.animationData.tf),this.loadNextSegment()},AnimationItem.prototype.configAnimation=function(t){var e=this;this.renderer&&this.renderer.destroyed||(this.animationData=t,this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip),this.animationData.tf=this.totalFrames,this.renderer.configAnimation(t),t.assets||(t.assets=[]),t.comps&&(t.assets=t.assets.concat(t.comps),t.comps=null),this.renderer.searchExtraCompositions(t.assets),this.layers=this.animationData.layers,this.assets=this.animationData.assets,this.frameRate=this.animationData.fr,this.firstFrame=Math.round(this.animationData.ip),this.frameMult=this.animationData.fr/1e3,this.trigger("config_ready"),this.imagePreloader=new ImagePreloader,this.imagePreloader.setAssetsPath(this.assetsPath),this.imagePreloader.setPath(this.path),this.imagePreloader.loadAssets(t.assets,function(t){t||e.trigger("loaded_images")}),this.loadSegments(),this.updaFrameModifier(),this.renderer.globalData.fontManager?this.waitForFontsLoaded():(dataManager.completeData(this.animationData,this.renderer.globalData.fontManager),this.checkLoaded()))},AnimationItem.prototype.waitForFontsLoaded=function(){function t(){this.renderer.globalData.fontManager.loaded?(dataManager.completeData(this.animationData,this.renderer.globalData.fontManager),this.checkLoaded()):setTimeout(t.bind(this),20)}return function(){t.bind(this)()}}(),AnimationItem.prototype.addPendingElement=function(){this.pendingElements+=1},AnimationItem.prototype.elementLoaded=function(){this.pendingElements--,this.checkLoaded()},AnimationItem.prototype.checkLoaded=function(){0===this.pendingElements&&(expressionsPlugin&&expressionsPlugin.initExpressions(this),this.renderer.initItems(),setTimeout(function(){this.trigger("DOMLoaded")}.bind(this),0),this.isLoaded=!0,this.gotoFrame(),this.autoplay&&this.play())},AnimationItem.prototype.resize=function(){this.renderer.updateContainerSize()},AnimationItem.prototype.setSubframe=function(t){this.subframeEnabled=!!t},AnimationItem.prototype.gotoFrame=function(){this.subframeEnabled?this.currentFrame=this.currentRawFrame:this.currentFrame=Math.floor(this.currentRawFrame),this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted&&(this.currentFrame=this.timeCompleted),this.trigger("enterFrame"),this.renderFrame()},AnimationItem.prototype.renderFrame=function(){!1!==this.isLoaded&&this.renderer.renderFrame(this.currentFrame+this.firstFrame)},AnimationItem.prototype.play=function(t){t&&this.name!=t||!0===this.isPaused&&(this.isPaused=!1,this._idle&&(this._idle=!1,this.trigger("_active")))},AnimationItem.prototype.pause=function(t){t&&this.name!=t||!1===this.isPaused&&(this.isPaused=!0,this.pendingSegment||(this._idle=!0,this.trigger("_idle")))},AnimationItem.prototype.togglePause=function(t){t&&this.name!=t||(!0===this.isPaused?this.play():this.pause())},AnimationItem.prototype.stop=function(t){t&&this.name!=t||(this.pause(),this.currentFrame=this.currentRawFrame=0,this.playCount=0,this.gotoFrame())},AnimationItem.prototype.goToAndStop=function(t,e,i){i&&this.name!=i||(e?this.setCurrentRawFrameValue(t):this.setCurrentRawFrameValue(t*this.frameModifier),this.pause())},AnimationItem.prototype.goToAndPlay=function(t,e,i){this.goToAndStop(t,e,i),this.play()},AnimationItem.prototype.advanceTime=function(t){if(this.pendingSegment)return this.pendingSegment=!1,this.adjustSegment(this.segments.shift()),void(this.isPaused&&this.play());!0!==this.isPaused&&!1!==this.isLoaded&&this.setCurrentRawFrameValue(this.currentRawFrame+t*this.frameModifier)},AnimationItem.prototype.updateAnimation=function(t){this.setCurrentRawFrameValue(this.totalFrames*t)},AnimationItem.prototype.moveFrame=function(t,e){e&&this.name!=e||this.setCurrentRawFrameValue(this.currentRawFrame+t)},AnimationItem.prototype.adjustSegment=function(t){this.playCount=0,t[1]<t[0]?(this.frameModifier>0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(-1)),this.totalFrames=t[0]-t[1],this.firstFrame=t[1],this.setCurrentRawFrameValue(this.totalFrames-.01)):t[1]>t[0]&&(this.frameModifier<0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(1)),this.totalFrames=t[1]-t[0],this.firstFrame=t[0],this.setCurrentRawFrameValue(0)),this.trigger("segmentStart")},AnimationItem.prototype.setSegment=function(t,e){var i=-1;this.isPaused&&(this.currentRawFrame+this.firstFrame<t?i=t:this.currentRawFrame+this.firstFrame>e&&(i=e-t-.01)),this.firstFrame=t,this.totalFrames=e-t,-1!==i&&this.goToAndStop(i,!0)},AnimationItem.prototype.playSegments=function(t,e){if("object"==typeof t[0]){var i,s=t.length;for(i=0;i<s;i+=1)this.segments.push(t[i])}else this.segments.push(t);e&&this.adjustSegment(this.segments.shift()),this.isPaused&&this.play()},AnimationItem.prototype.resetSegments=function(t){this.segments.length=0,this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op-this.animationData.ip+this.animationData.ip*this.frameRate)]),t&&this.adjustSegment(this.segments.shift())},AnimationItem.prototype.checkSegments=function(){this.segments.length&&(this.pendingSegment=!0)},AnimationItem.prototype.remove=function(t){t&&this.name!=t||this.renderer.destroy()},AnimationItem.prototype.destroy=function(t){t&&this.name!=t||this.renderer&&this.renderer.destroyed||(this.renderer.destroy(),this.trigger("destroy"),this._cbs=null,this.onEnterFrame=this.onLoopComplete=this.onComplete=this.onSegmentStart=this.onDestroy=null)},AnimationItem.prototype.setCurrentRawFrameValue=function(t){if(this.currentRawFrame=t,this.currentRawFrame>=this.totalFrames){if(this.checkSegments(),!1===this.loop)return this.currentRawFrame=this.totalFrames-.01,this.gotoFrame(),this.pause(),void this.trigger("complete");if(this.trigger("loopComplete"),this.playCount+=1,!0!==this.loop&&this.playCount==this.loop||this.pendingSegment)return this.currentRawFrame=this.totalFrames-.01,this.gotoFrame(),this.pause(),void this.trigger("complete");this.currentRawFrame=this.currentRawFrame%this.totalFrames}else if(this.currentRawFrame<0)return this.checkSegments(),this.playCount-=1,
this.playCount<0&&(this.playCount=0),!1===this.loop||this.pendingSegment?(this.currentRawFrame=0,this.gotoFrame(),this.pause(),void this.trigger("complete")):(this.trigger("loopComplete"),this.currentRawFrame=(this.totalFrames+this.currentRawFrame)%this.totalFrames,void this.gotoFrame());this.gotoFrame()},AnimationItem.prototype.setSpeed=function(t){this.playSpeed=t,this.updaFrameModifier()},AnimationItem.prototype.setDirection=function(t){this.playDirection=t<0?-1:1,this.updaFrameModifier()},AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection},AnimationItem.prototype.getPath=function(){return this.path},AnimationItem.prototype.getAssetsPath=function(t){var e="";if(this.assetsPath){var i=t.p;-1!==i.indexOf("images/")&&(i=i.split("/")[1]),e=this.assetsPath+i}else e=this.path,e+=t.u?t.u:"",e+=t.p;return e},AnimationItem.prototype.getAssetData=function(t){for(var e=0,i=this.assets.length;e<i;){if(t==this.assets[e].id)return this.assets[e];e+=1}},AnimationItem.prototype.hide=function(){this.renderer.hide()},AnimationItem.prototype.show=function(){this.renderer.show()},AnimationItem.prototype.getAssets=function(){return this.assets},AnimationItem.prototype.trigger=function(t){if(this._cbs&&this._cbs[t])switch(t){case"enterFrame":this.triggerEvent(t,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult));break;case"loopComplete":this.triggerEvent(t,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult));break;case"complete":this.triggerEvent(t,new BMCompleteEvent(t,this.frameMult));break;case"segmentStart":this.triggerEvent(t,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames));break;case"destroy":this.triggerEvent(t,new BMDestroyEvent(t,this));break;default:this.triggerEvent(t)}"enterFrame"===t&&this.onEnterFrame&&this.onEnterFrame.call(this,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult)),"loopComplete"===t&&this.onLoopComplete&&this.onLoopComplete.call(this,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult)),"complete"===t&&this.onComplete&&this.onComplete.call(this,new BMCompleteEvent(t,this.frameMult)),"segmentStart"===t&&this.onSegmentStart&&this.onSegmentStart.call(this,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames)),"destroy"===t&&this.onDestroy&&this.onDestroy.call(this,new BMDestroyEvent(t,this))},AnimationItem.prototype.addEventListener=_addEventListener,AnimationItem.prototype.removeEventListener=_removeEventListener,AnimationItem.prototype.triggerEvent=_triggerEvent,extendPrototype(BaseRenderer,CanvasRenderer),CanvasRenderer.prototype.createBase=function(t){return new CVBaseElement(t,this,this.globalData)},CanvasRenderer.prototype.createShape=function(t){return new CVShapeElement(t,this,this.globalData)},CanvasRenderer.prototype.createText=function(t){return new CVTextElement(t,this,this.globalData)},CanvasRenderer.prototype.createImage=function(t){return new CVImageElement(t,this,this.globalData)},CanvasRenderer.prototype.createComp=function(t){return new CVCompElement(t,this,this.globalData)},CanvasRenderer.prototype.createSolid=function(t){return new CVSolidElement(t,this,this.globalData)},CanvasRenderer.prototype.ctxTransform=function(t){if(1!==t[0]||0!==t[1]||0!==t[4]||1!==t[5]||0!==t[12]||0!==t[13]){if(!this.renderConfig.clearCanvas)return void this.canvasContext.transform(t[0],t[1],t[4],t[5],t[12],t[13]);this.transformMat.cloneFromProps(t),this.transformMat.transform(this.contextData.cTr.props[0],this.contextData.cTr.props[1],this.contextData.cTr.props[2],this.contextData.cTr.props[3],this.contextData.cTr.props[4],this.contextData.cTr.props[5],this.contextData.cTr.props[6],this.contextData.cTr.props[7],this.contextData.cTr.props[8],this.contextData.cTr.props[9],this.contextData.cTr.props[10],this.contextData.cTr.props[11],this.contextData.cTr.props[12],this.contextData.cTr.props[13],this.contextData.cTr.props[14],this.contextData.cTr.props[15]),this.contextData.cTr.cloneFromProps(this.transformMat.props);var e=this.contextData.cTr.props;this.canvasContext.setTransform(e[0],e[1],e[4],e[5],e[12],e[13])}},CanvasRenderer.prototype.ctxOpacity=function(t){if(1!==t){if(!this.renderConfig.clearCanvas)return void(this.canvasContext.globalAlpha*=t<0?0:t);this.contextData.cO*=t<0?0:t,this.canvasContext.globalAlpha=this.contextData.cO}},CanvasRenderer.prototype.reset=function(){if(!this.renderConfig.clearCanvas)return void this.canvasContext.restore();this.contextData.cArrPos=0,this.contextData.cTr.reset(),this.contextData.cO=1},CanvasRenderer.prototype.save=function(t){if(!this.renderConfig.clearCanvas)return void this.canvasContext.save();t&&this.canvasContext.save();var e=this.contextData.cTr.props;null!==this.contextData.saved[this.contextData.cArrPos]&&void 0!==this.contextData.saved[this.contextData.cArrPos]||(this.contextData.saved[this.contextData.cArrPos]=new Array(16));var i,s=this.contextData.saved[this.contextData.cArrPos];for(i=0;i<16;i+=1)s[i]=e[i];this.contextData.savedOp[this.contextData.cArrPos]=this.contextData.cO,this.contextData.cArrPos+=1},CanvasRenderer.prototype.restore=function(t){if(!this.renderConfig.clearCanvas)return void this.canvasContext.restore();t&&this.canvasContext.restore(),this.contextData.cArrPos-=1;var e,i=this.contextData.saved[this.contextData.cArrPos],s=this.contextData.cTr.props;for(e=0;e<16;e+=1)s[e]=i[e];this.canvasContext.setTransform(i[0],i[1],i[4],i[5],i[12],i[13]),i=this.contextData.savedOp[this.contextData.cArrPos],this.contextData.cO=i,this.canvasContext.globalAlpha=i},CanvasRenderer.prototype.configAnimation=function(t){this.animationItem.wrapper?(this.animationItem.container=document.createElement("canvas"),this.animationItem.container.style.width="100%",this.animationItem.container.style.height="100%",this.animationItem.container.style.transformOrigin=this.animationItem.container.style.mozTransformOrigin=this.animationItem.container.style.webkitTransformOrigin=this.animationItem.container.style["-webkit-transform"]="0px 0px 0px",this.animationItem.wrapper.appendChild(this.animationItem.container),this.canvasContext=this.animationItem.container.getContext("2d"),this.renderConfig.className&&this.animationItem.container.setAttribute("class",this.renderConfig.className)):this.canvasContext=this.renderConfig.context,this.data=t,this.globalData.canvasContext=this.canvasContext,this.globalData.renderer=this,this.globalData.isDashed=!1,this.globalData.totalFrames=Math.floor(t.tf),this.globalData.compWidth=t.w,this.globalData.compHeight=t.h,this.globalData.frameRate=t.fr,this.globalData.frameId=0,this.globalData.compSize={w:t.w,h:t.h},this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.layers=t.layers,this.transformCanvas={},this.transformCanvas.w=t.w,this.transformCanvas.h=t.h,this.globalData.fontManager=new FontManager,this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,document.body),this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.elementLoaded=this.animationItem.elementLoaded.bind(this.animationItem),this.globalData.addPendingElement=this.animationItem.addPendingElement.bind(this.animationItem),this.globalData.transformCanvas=this.transformCanvas,this.elements=Array.apply(null,{length:t.layers.length}),this.updateContainerSize()},CanvasRenderer.prototype.updateContainerSize=function(){var t,e;this.animationItem.wrapper&&this.animationItem.container?(t=this.animationItem.wrapper.offsetWidth,e=this.animationItem.wrapper.offsetHeight,this.animationItem.container.setAttribute("width",t*this.renderConfig.dpr),this.animationItem.container.setAttribute("height",e*this.renderConfig.dpr)):(t=this.canvasContext.canvas.width*this.renderConfig.dpr,e=this.canvasContext.canvas.height*this.renderConfig.dpr);var i,s;if(-1!==this.renderConfig.preserveAspectRatio.indexOf("meet")||-1!==this.renderConfig.preserveAspectRatio.indexOf("slice")){var r=this.renderConfig.preserveAspectRatio.split(" "),a=r[1]||"meet",n=r[0]||"xMidYMid",o=n.substr(0,4),h=n.substr(4);i=t/e,s=this.transformCanvas.w/this.transformCanvas.h,s>i&&"meet"===a||s<i&&"slice"===a?(this.transformCanvas.sx=t/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=t/(this.transformCanvas.w/this.renderConfig.dpr)):(this.transformCanvas.sx=e/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.sy=e/(this.transformCanvas.h/this.renderConfig.dpr)),this.transformCanvas.tx="xMid"===o&&(s<i&&"meet"===a||s>i&&"slice"===a)?(t-this.transformCanvas.w*(e/this.transformCanvas.h))/2*this.renderConfig.dpr:"xMax"===o&&(s<i&&"meet"===a||s>i&&"slice"===a)?(t-this.transformCanvas.w*(e/this.transformCanvas.h))*this.renderConfig.dpr:0,this.transformCanvas.ty="YMid"===h&&(s>i&&"meet"===a||s<i&&"slice"===a)?(e-this.transformCanvas.h*(t/this.transformCanvas.w))/2*this.renderConfig.dpr:"YMax"===h&&(s>i&&"meet"===a||s<i&&"slice"===a)?(e-this.transformCanvas.h*(t/this.transformCanvas.w))*this.renderConfig.dpr:0}else"none"==this.renderConfig.preserveAspectRatio?(this.transformCanvas.sx=t/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=e/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.tx=0,this.transformCanvas.ty=0):(this.transformCanvas.sx=this.renderConfig.dpr,this.transformCanvas.sy=this.renderConfig.dpr,this.transformCanvas.tx=0,this.transformCanvas.ty=0);this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];var l,p=this.elements.length;for(l=0;l<p;l+=1)this.elements[l]&&0===this.elements[l].data.ty&&this.elements[l].resize(this.globalData.transformCanvas)},CanvasRenderer.prototype.destroy=function(){this.renderConfig.clearCanvas&&(this.animationItem.wrapper.innerHTML="");var t,e=this.layers?this.layers.length:0;for(t=e-1;t>=0;t-=1)this.elements[t]&&this.elements[t].destroy();this.elements.length=0,this.globalData.canvasContext=null,this.animationItem.container=null,this.destroyed=!0},CanvasRenderer.prototype.renderFrame=function(t){if(!(this.renderedFrame==t&&!0===this.renderConfig.clearCanvas||this.destroyed||null===t)){this.renderedFrame=t,this.globalData.frameNum=t-this.animationItem.firstFrame,this.globalData.frameId+=1,this.globalData.projectInterface.currentFrame=t,!0===this.renderConfig.clearCanvas?(this.reset(),this.canvasContext.save(),this.canvasContext.clearRect(this.transformCanvas.tx,this.transformCanvas.ty,this.transformCanvas.w*this.transformCanvas.sx,this.transformCanvas.h*this.transformCanvas.sy)):this.save(),this.ctxTransform(this.transformCanvas.props),this.canvasContext.beginPath(),this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h),this.canvasContext.closePath(),this.canvasContext.clip();var e,i=this.layers.length;for(this.completeLayers||this.checkLayers(t),e=0;e<i;e++)(this.completeLayers||this.elements[e])&&this.elements[e].prepareFrame(t-this.layers[e].st);for(e=i-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame();!0!==this.renderConfig.clearCanvas?this.restore():this.canvasContext.restore()}},CanvasRenderer.prototype.buildItem=function(t){var e=this.elements;if(!e[t]&&99!=this.layers[t].ty){var i=this.createItem(this.layers[t],this,this.globalData);e[t]=i,i.initExpressions(),0===this.layers[t].ty&&i.resize(this.globalData.transformCanvas)}},CanvasRenderer.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){this.pendingElements.pop().checkParenting()}},CanvasRenderer.prototype.hide=function(){this.animationItem.container.style.display="none"},CanvasRenderer.prototype.show=function(){this.animationItem.container.style.display="block"},CanvasRenderer.prototype.searchExtraCompositions=function(t){var e,i=t.length;document.createElementNS(svgNS,"g");for(e=0;e<i;e+=1)if(t[e].xt){var s=this.createComp(t[e],this.globalData.comp,this.globalData);s.initExpressions(),this.globalData.projectInterface.registerComposition(s)}},extendPrototype(BaseRenderer,HybridRenderer),HybridRenderer.prototype.buildItem=SVGRenderer.prototype.buildItem,HybridRenderer.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){this.pendingElements.pop().checkParenting()}},HybridRenderer.prototype.appendElementInPos=function(t,e){var i=t.getBaseElement();if(i){var s=this.layers[e];if(s.ddd&&this.supports3d)this.addTo3dContainer(i,e);else{for(var r,a,n=0;n<e;)this.elements[n]&&!0!==this.elements[n]&&this.elements[n].getBaseElement&&(a=this.elements[n],r=this.layers[n].ddd?this.getThreeDContainerByPos(n):a.getBaseElement()),n+=1;r?s.ddd&&this.supports3d||this.layerElement.insertBefore(i,r):s.ddd&&this.supports3d||this.layerElement.appendChild(i)}}},HybridRenderer.prototype.createBase=function(t){return new SVGBaseElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.createShape=function(t){return this.supports3d?new HShapeElement(t,this.layerElement,this.globalData,this):new IShapeElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.createText=function(t){return this.supports3d?new HTextElement(t,this.layerElement,this.globalData,this):new SVGTextElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.createCamera=function(t){return this.camera=new HCameraElement(t,this.layerElement,this.globalData,this),this.camera},HybridRenderer.prototype.createImage=function(t){return this.supports3d?new HImageElement(t,this.layerElement,this.globalData,this):new IImageElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.createComp=function(t){return this.supports3d?new HCompElement(t,this.layerElement,this.globalData,this):new ICompElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.createSolid=function(t){return this.supports3d?new HSolidElement(t,this.layerElement,this.globalData,this):new ISolidElement(t,this.layerElement,this.globalData,this)},HybridRenderer.prototype.getThreeDContainerByPos=function(t){for(var e=0,i=this.threeDElements.length;e<i;){if(this.threeDElements[e].startPos<=t&&this.threeDElements[e].endPos>=t)return this.threeDElements[e].perspectiveElem;e+=1}},HybridRenderer.prototype.createThreeDContainer=function(t){var e=document.createElement("div");styleDiv(e),e.style.width=this.globalData.compSize.w+"px",e.style.height=this.globalData.compSize.h+"px",e.style.transformOrigin=e.style.mozTransformOrigin=e.style.webkitTransformOrigin="50% 50%";var i=document.createElement("div");styleDiv(i),i.style.transform=i.style.webkitTransform="matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)",e.appendChild(i),this.resizerElem.appendChild(e);var s={container:i,perspectiveElem:e,startPos:t,endPos:t};return this.threeDElements.push(s),s},HybridRenderer.prototype.build3dContainers=function(){var t,e,i=this.layers.length;for(t=0;t<i;t+=1)this.layers[t].ddd?(e||(e=this.createThreeDContainer(t)),e.endPos=Math.max(e.endPos,t)):e=null},HybridRenderer.prototype.addTo3dContainer=function(t,e){for(var i=0,s=this.threeDElements.length;i<s;){if(e<=this.threeDElements[i].endPos){for(var r,a=this.threeDElements[i].startPos;a<e;)this.elements[a]&&this.elements[a].getBaseElement&&(r=this.elements[a].getBaseElement()),a+=1;r?this.threeDElements[i].container.insertBefore(t,r):this.threeDElements[i].container.appendChild(t);break}i+=1}},HybridRenderer.prototype.configAnimation=function(t){var e=document.createElement("div"),i=this.animationItem.wrapper;e.style.width=t.w+"px",e.style.height=t.h+"px",this.resizerElem=e,styleDiv(e),e.style.transformStyle=e.style.webkitTransformStyle=e.style.mozTransformStyle="flat",this.renderConfig.className&&i.setAttribute("class",this.renderConfig.className),i.appendChild(e),e.style.overflow="hidden";var s=document.createElementNS(svgNS,"svg");s.setAttribute("width","1"),s.setAttribute("height","1"),styleDiv(s),this.resizerElem.appendChild(s);var r=document.createElementNS(svgNS,"defs");s.appendChild(r),this.globalData.defs=r,this.data=t,this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.elementLoaded=this.animationItem.elementLoaded.bind(this.animationItem),this.globalData.frameId=0,this.globalData.compSize={w:t.w,h:t.h},this.globalData.frameRate=t.fr,this.layers=t.layers,this.globalData.fontManager=new FontManager,this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,s),this.layerElement=this.resizerElem,this.build3dContainers(),this.updateContainerSize()},HybridRenderer.prototype.destroy=function(){this.animationItem.wrapper.innerHTML="",this.animationItem.container=null,this.globalData.defs=null;var t,e=this.layers?this.layers.length:0;for(t=0;t<e;t++)this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null},HybridRenderer.prototype.updateContainerSize=function(){var t,e,i,s,r=this.animationItem.wrapper.offsetWidth,a=this.animationItem.wrapper.offsetHeight,n=r/a,o=this.globalData.compSize.w/this.globalData.compSize.h;o>n?(t=r/this.globalData.compSize.w,e=r/this.globalData.compSize.w,i=0,s=(a-this.globalData.compSize.h*(r/this.globalData.compSize.w))/2):(t=a/this.globalData.compSize.h,e=a/this.globalData.compSize.h,i=(r-this.globalData.compSize.w*(a/this.globalData.compSize.h))/2,s=0),this.resizerElem.style.transform=this.resizerElem.style.webkitTransform="matrix3d("+t+",0,0,0,0,"+e+",0,0,0,0,1,0,"+i+","+s+",0,1)"},HybridRenderer.prototype.renderFrame=SVGRenderer.prototype.renderFrame,HybridRenderer.prototype.hide=function(){this.resizerElem.style.display="none"},HybridRenderer.prototype.show=function(){this.resizerElem.style.display="block"},HybridRenderer.prototype.initItems=function(){if(this.buildAllItems(),this.camera)this.camera.setup();else{var t,e=this.globalData.compSize.w,i=this.globalData.compSize.h,s=this.threeDElements.length;for(t=0;t<s;t+=1)this.threeDElements[t].perspectiveElem.style.perspective=this.threeDElements[t].perspectiveElem.style.webkitPerspective=Math.sqrt(Math.pow(e,2)+Math.pow(i,2))+"px"}},HybridRenderer.prototype.searchExtraCompositions=function(t){var e,i=t.length,s=document.createElement("div");for(e=0;e<i;e+=1)if(t[e].xt){var r=this.createComp(t[e],s,this.globalData.comp,null);r.initExpressions(),this.globalData.projectInterface.registerComposition(r)}},createElement(BaseElement,CVBaseElement),CVBaseElement.prototype.createElements=function(){this.checkParenting()},CVBaseElement.prototype.checkBlendMode=function(t){if(t.blendMode!==this.data.bm){t.blendMode=this.data.bm;var e="";switch(this.data.bm){case 0:e="normal";break;case 1:e="multiply";break;case 2:e="screen";break;case 3:e="overlay";break;case 4:e="darken";break;case 5:e="lighten";break;case 6:e="color-dodge";break;case 7:e="color-burn";break;case 8:e="hard-light";break;case 9:e="soft-light";break;case 10:e="difference";break;case 11:e="exclusion";break;case 12:e="hue";break;case 13:e="saturation";break;case 14:e="color";break;case 15:e="luminosity"}t.canvasContext.globalCompositeOperation=e}},CVBaseElement.prototype.renderFrame=function(t){if(3===this.data.ty)return!1;if(this.checkBlendMode(0===this.data.ty?this.parentGlobalData:this.globalData),!this.isVisible)return this.isVisible;this.finalTransform.opMdf=this.finalTransform.op.mdf,this.finalTransform.matMdf=this.finalTransform.mProp.mdf,this.finalTransform.opacity=this.finalTransform.op.v;var e,i=this.finalTransform.mat;if(this.hierarchy){var s,r=this.hierarchy.length;for(e=this.finalTransform.mProp.v.props,i.cloneFromProps(e),s=0;s<r;s+=1)this.finalTransform.matMdf=!!this.hierarchy[s].finalTransform.mProp.mdf||this.finalTransform.matMdf,e=this.hierarchy[s].finalTransform.mProp.v.props,i.transform(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}else t?(e=this.finalTransform.mProp.v.props,i.cloneFromProps(e)):i.cloneFromProps(this.finalTransform.mProp.v.props);return t&&(e=t.mat.props,i.transform(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]),this.finalTransform.opacity*=t.opacity,this.finalTransform.opMdf=!!t.opMdf||this.finalTransform.opMdf,this.finalTransform.matMdf=!!t.matMdf||this.finalTransform.matMdf),this.data.hasMask&&(this.globalData.renderer.save(!0),this.maskManager.renderFrame(0===this.data.ty?null:i)),this.data.hd&&(this.isVisible=!1),this.isVisible},CVBaseElement.prototype.addMasks=function(t){this.maskManager=new CVMaskElement(t,this,this.globalData)},CVBaseElement.prototype.destroy=function(){this.canvasContext=null,this.data=null,this.globalData=null,this.maskManager&&this.maskManager.destroy()},CVBaseElement.prototype.mHelper=new Matrix,createElement(CVBaseElement,CVCompElement),CVCompElement.prototype.ctxTransform=CanvasRenderer.prototype.ctxTransform,CVCompElement.prototype.ctxOpacity=CanvasRenderer.prototype.ctxOpacity,CVCompElement.prototype.save=CanvasRenderer.prototype.save,CVCompElement.prototype.restore=CanvasRenderer.prototype.restore,CVCompElement.prototype.reset=function(){this.contextData.cArrPos=0,this.contextData.cTr.reset(),this.contextData.cO=1},CVCompElement.prototype.resize=function(t){var e=Math.max(t.sx,t.sy);this.canvas.width=this.data.w*e,this.canvas.height=this.data.h*e,this.transformCanvas={sc:e,w:this.data.w*e,h:this.data.h*e,props:[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1]};var i,s=this.elements.length;for(i=0;i<s;i+=1)this.elements[i]&&0===this.elements[i].data.ty&&this.elements[i].resize(t)},CVCompElement.prototype.prepareFrame=function(t){if(this.globalData.frameId=this.parentGlobalData.frameId,this.globalData.mdf=!1,this._parent.prepareFrame.call(this,t),!1!==this.isVisible||this.data.xt){var e=t;this.tm&&(e=this.tm.v)===this.data.op&&(e=this.data.op-1),this.renderedFrame=e/this.data.sr;var i,s=this.elements.length;for(this.completeLayers||this.checkLayers(t),i=0;i<s;i+=1)(this.completeLayers||this.elements[i])&&(this.elements[i].prepareFrame(e/this.data.sr-this.layers[i].st),0===this.elements[i].data.ty&&this.elements[i].globalData.mdf&&(this.globalData.mdf=!0));this.globalData.mdf&&!this.data.xt&&(this.canvasContext.clearRect(0,0,this.data.w,this.data.h),this.ctxTransform(this.transformCanvas.props))}},CVCompElement.prototype.renderFrame=function(t){if(!1!==this._parent.renderFrame.call(this,t)){if(this.globalData.mdf){var e,i=this.layers.length;for(e=i-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame()}this.data.hasMask&&this.globalData.renderer.restore(!0),this.firstFrame&&(this.firstFrame=!1),this.parentGlobalData.renderer.save(),this.parentGlobalData.renderer.ctxTransform(this.finalTransform.mat.props),this.parentGlobalData.renderer.ctxOpacity(this.finalTransform.opacity),this.parentGlobalData.renderer.canvasContext.drawImage(this.canvas,0,0,this.data.w,this.data.h),this.parentGlobalData.renderer.restore(),this.globalData.mdf&&this.reset()}},CVCompElement.prototype.setElements=function(t){this.elements=t},CVCompElement.prototype.getElements=function(){return this.elements},CVCompElement.prototype.destroy=function(){var t,e=this.layers.length;for(t=e-1;t>=0;t-=1)this.elements[t].destroy();this.layers=null,this.elements=null,this._parent.destroy.call(this._parent)},CVCompElement.prototype.checkLayers=CanvasRenderer.prototype.checkLayers,CVCompElement.prototype.buildItem=CanvasRenderer.prototype.buildItem,CVCompElement.prototype.checkPendingElements=CanvasRenderer.prototype.checkPendingElements,CVCompElement.prototype.addPendingElement=CanvasRenderer.prototype.addPendingElement,CVCompElement.prototype.buildAllItems=CanvasRenderer.prototype.buildAllItems,CVCompElement.prototype.createItem=CanvasRenderer.prototype.createItem,CVCompElement.prototype.createImage=CanvasRenderer.prototype.createImage,CVCompElement.prototype.createComp=CanvasRenderer.prototype.createComp,CVCompElement.prototype.createSolid=CanvasRenderer.prototype.createSolid,CVCompElement.prototype.createShape=CanvasRenderer.prototype.createShape,CVCompElement.prototype.createText=CanvasRenderer.prototype.createText,CVCompElement.prototype.createBase=CanvasRenderer.prototype.createBase,CVCompElement.prototype.buildElementParenting=CanvasRenderer.prototype.buildElementParenting,createElement(CVBaseElement,CVImageElement),CVImageElement.prototype.createElements=function(){var t=function(){if(this.globalData.elementLoaded(),this.assetData.w!==this.img.width||this.assetData.h!==this.img.height){var t=document.createElement("canvas");t.width=this.assetData.w,t.height=this.assetData.h;var e,i,s=t.getContext("2d"),r=this.img.width,a=this.img.height,n=r/a,o=this.assetData.w/this.assetData.h;n>o?(i=a,e=i*o):(e=r,i=e/o),s.drawImage(this.img,(r-e)/2,(a-i)/2,e,i,0,0,this.assetData.w,this.assetData.h),this.img=t}}.bind(this),e=function(){this.failed=!0,this.globalData.elementLoaded()}.bind(this);this.img=new Image,this.img.addEventListener("load",t,!1),this.img.addEventListener("error",e,!1);var i=this.globalData.getAssetsPath(this.assetData);this.img.src=i,this._parent.createElements.call(this)},CVImageElement.prototype.renderFrame=function(t){if(!this.failed&&!1!==this._parent.renderFrame.call(this,t)){var e=this.canvasContext;this.globalData.renderer.save();var i=this.finalTransform.mat.props;this.globalData.renderer.ctxTransform(i),this.globalData.renderer.ctxOpacity(this.finalTransform.opacity),e.drawImage(this.img,0,0),this.globalData.renderer.restore(this.data.hasMask),this.firstFrame&&(this.firstFrame=!1)}},CVImageElement.prototype.destroy=function(){this.img=null,this._parent.destroy.call(this._parent)},CVMaskElement.prototype.prepareFrame=function(t){var e,i=this.dynamicProperties.length;for(e=0;e<i;e+=1)this.dynamicProperties[e].getValue(t),this.dynamicProperties[e].mdf&&(this.element.globalData.mdf=!0)},CVMaskElement.prototype.renderFrame=function(t){var e,i,s,r,a,n=this.element.canvasContext,o=this.data.masksProperties.length,h=!1;for(e=0;e<o;e++)if("n"!==this.masksProperties[e].mode){!1===h&&(n.beginPath(),h=!0),this.masksProperties[e].inv&&(n.moveTo(0,0),n.lineTo(this.element.globalData.compWidth,0),n.lineTo(this.element.globalData.compWidth,this.element.globalData.compHeight),n.lineTo(0,this.element.globalData.compHeight),n.lineTo(0,0)),a=this.viewData[e].v,i=t?t.applyToPointArray(a.v[0][0],a.v[0][1],0):a.v[0],n.moveTo(i[0],i[1]);var l,p=a._length;for(l=1;l<p;l++)i=t?t.applyToPointArray(a.o[l-1][0],a.o[l-1][1],0):a.o[l-1],s=t?t.applyToPointArray(a.i[l][0],a.i[l][1],0):a.i[l],r=t?t.applyToPointArray(a.v[l][0],a.v[l][1],0):a.v[l],n.bezierCurveTo(i[0],i[1],s[0],s[1],r[0],r[1]);i=t?t.applyToPointArray(a.o[l-1][0],a.o[l-1][1],0):a.o[l-1],s=t?t.applyToPointArray(a.i[0][0],a.i[0][1],0):a.i[0],r=t?t.applyToPointArray(a.v[0][0],a.v[0][1],0):a.v[0],n.bezierCurveTo(i[0],i[1],s[0],s[1],r[0],r[1])}h&&n.clip()},CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty,CVMaskElement.prototype.destroy=function(){this.element=null},createElement(CVBaseElement,CVShapeElement),CVShapeElement.prototype.transformHelper={opacity:1,mat:new Matrix,matMdf:!1,opMdf:!1},CVShapeElement.prototype.dashResetter=[],CVShapeElement.prototype.createElements=function(){this._parent.createElements.call(this),this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.dynamicProperties,!0)},CVShapeElement.prototype.createStyleElement=function(t,e){var i={data:t,type:t.ty,elements:[]},s={};if("fl"!=t.ty&&"st"!=t.ty||(s.c=PropertyFactory.getProp(this,t.c,1,255,e),s.c.k||(i.co="rgb("+bm_floor(s.c.v[0])+","+bm_floor(s.c.v[1])+","+bm_floor(s.c.v[2])+")")),s.o=PropertyFactory.getProp(this,t.o,0,.01,e),"st"==t.ty){if(i.lc=this.lcEnum[t.lc]||"round",i.lj=this.ljEnum[t.lj]||"round",1==t.lj&&(i.ml=t.ml),s.w=PropertyFactory.getProp(this,t.w,0,null,e),s.w.k||(i.wi=s.w.v),t.d){var r=PropertyFactory.getDashProp(this,t.d,"canvas",e);s.d=r,s.d.k||(i.da=s.d.dasharray,i.do=s.d.dashoffset)}}else i.r=2===t.r?"evenodd":"nonzero";return this.stylesList.push(i),s.style=i,s},CVShapeElement.prototype.createGroupElement=function(t){return{it:[],prevViewData:[]}},CVShapeElement.prototype.createTransformElement=function(t,e){return{transform:{mat:new Matrix,opacity:1,matMdf:!1,opMdf:!1,op:PropertyFactory.getProp(this,t.o,0,.01,e),mProps:PropertyFactory.getProp(this,t,2,null,e)},elements:[]}},CVShapeElement.prototype.createShapeElement=function(t,e){var i={nodes:[],trNodes:[],tr:[0,0,0,0,0,0]},s=4;"rc"==t.ty?s=5:"el"==t.ty?s=6:"sr"==t.ty&&(s=7),i.sh=ShapePropertyFactory.getShapeProp(this,t,s,e),this.shapes.push(i.sh),this.addShapeToModifiers(i),jLen=this.stylesList.length;var r=!1,a=!1;for(j=0;j<jLen;j+=1)this.stylesList[j].closed||(this.stylesList[j].elements.push(i),"st"===this.stylesList[j].type?r=!0:a=!0);return i.st=r,i.fl=a,i},CVShapeElement.prototype.reloadShapes=function(){this.firstFrame=!0;var t,e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.dynamicProperties,!0);var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers()},CVShapeElement.prototype.searchShapes=function(t,e,i,s,r){var a,n,o,h,l=t.length-1,p=[],m=[];for(a=l;a>=0;a-=1){if(h=this.searchProcessedElement(t[a]),h?e[a]=i[h-1]:t[a]._render=r,"fl"==t[a].ty||"st"==t[a].ty)h?e[a].style.closed=!1:e[a]=this.createStyleElement(t[a],s),p.push(e[a].style);else if("gr"==t[a].ty){if(h)for(o=e[a].it.length,n=0;n<o;n+=1)e[a].prevViewData[n]=e[a].it[n];else e[a]=this.createGroupElement(t[a]);this.searchShapes(t[a].it,e[a].it,e[a].prevViewData,s,r)}else if("tr"==t[a].ty)h||(e[a]=this.createTransformElement(t[a],s));else if("sh"==t[a].ty||"rc"==t[a].ty||"el"==t[a].ty||"sr"==t[a].ty)h||(e[a]=this.createShapeElement(t[a],s));else if("tm"==t[a].ty||"rd"==t[a].ty){if(h)c=e[a],c.closed=!1;else{var c=ShapeModifiers.getModifier(t[a].ty);c.init(this,t[a],s),e[a]=c,this.shapeModifiers.push(c)}m.push(c)}else"rp"==t[a].ty&&(h?(c=e[a],c.closed=!0):(c=ShapeModifiers.getModifier(t[a].ty),e[a]=c,c.init(this,t,a,e,s),this.shapeModifiers.push(c),r=!1),m.push(c));this.addProcessedElement(t[a],a+1)}for(l=p.length,a=0;a<l;a+=1)p[a].closed=!0;for(l=m.length,a=0;a<l;a+=1)m[a].closed=!0},CVShapeElement.prototype.addShapeToModifiers=IShapeElement.prototype.addShapeToModifiers,CVShapeElement.prototype.renderModifiers=IShapeElement.prototype.renderModifiers,CVShapeElement.prototype.lcEnum=IShapeElement.prototype.lcEnum,CVShapeElement.prototype.ljEnum=IShapeElement.prototype.ljEnum,CVShapeElement.prototype.searchProcessedElement=IShapeElement.prototype.searchProcessedElement,CVShapeElement.prototype.addProcessedElement=IShapeElement.prototype.addProcessedElement,CVShapeElement.prototype.renderFrame=function(t){!1!==this._parent.renderFrame.call(this,t)&&(this.transformHelper.mat.reset(),this.transformHelper.opacity=this.finalTransform.opacity,this.transformHelper.matMdf=!1,this.transformHelper.opMdf=this.finalTransform.opMdf,this.renderModifiers(),this.renderShape(this.transformHelper,null,null,!0),this.data.hasMask&&this.globalData.renderer.restore(!0))},CVShapeElement.prototype.renderShape=function(t,e,i,s){var r,a;if(!e)for(e=this.shapesData,a=this.stylesList.length,r=0;r<a;r+=1)this.stylesList[r].d="",this.stylesList[r].mdf=!1;i||(i=this.itemsData),a=e.length-1;var n,o;for(n=t,r=a;r>=0;r-=1)if("tr"==e[r].ty){n=i[r].transform;var h=i[r].transform.mProps.v.props;if(n.matMdf=n.mProps.mdf,n.opMdf=n.op.mdf,o=n.mat,o.cloneFromProps(h),t){var l=t.mat.props;n.opacity=t.opacity,n.opacity*=i[r].transform.op.v,n.matMdf=!!t.matMdf||n.matMdf,n.opMdf=!!t.opMdf||n.opMdf,o.transform(l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],l[8],l[9],l[10],l[11],l[12],l[13],l[14],l[15])}else n.opacity=n.op.o
}else"sh"==e[r].ty||"el"==e[r].ty||"rc"==e[r].ty||"sr"==e[r].ty?this.renderPath(e[r],i[r],n):"fl"==e[r].ty?this.renderFill(e[r],i[r],n):"st"==e[r].ty?this.renderStroke(e[r],i[r],n):"gr"==e[r].ty?this.renderShape(n,e[r].it,i[r].it):e[r].ty;if(s){a=this.stylesList.length;var p,m,c,f,d,u,y,g=this.globalData.renderer,v=this.globalData.canvasContext;for(g.save(),g.ctxTransform(this.finalTransform.mat.props),r=0;r<a;r+=1)if(("st"!==(y=this.stylesList[r].type)||0!==this.stylesList[r].wi)&&this.stylesList[r].data._render){for(g.save(),d=this.stylesList[r].elements,"st"===y?(v.strokeStyle=this.stylesList[r].co,v.lineWidth=this.stylesList[r].wi,v.lineCap=this.stylesList[r].lc,v.lineJoin=this.stylesList[r].lj,v.miterLimit=this.stylesList[r].ml||0):v.fillStyle=this.stylesList[r].co,g.ctxOpacity(this.stylesList[r].coOp),"st"!==y&&v.beginPath(),m=d.length,p=0;p<m;p+=1){for("st"===y&&(v.beginPath(),this.stylesList[r].da?(v.setLineDash(this.stylesList[r].da),v.lineDashOffset=this.stylesList[r].do,this.globalData.isDashed=!0):this.globalData.isDashed&&(v.setLineDash(this.dashResetter),this.globalData.isDashed=!1)),u=d[p].trNodes,f=u.length,c=0;c<f;c+=1)"m"==u[c].t?v.moveTo(u[c].p[0],u[c].p[1]):"c"==u[c].t?v.bezierCurveTo(u[c].p1[0],u[c].p1[1],u[c].p2[0],u[c].p2[1],u[c].p3[0],u[c].p3[1]):v.closePath();"st"===y&&v.stroke()}"st"!==y&&v.fill(this.stylesList[r].r),g.restore()}g.restore(),this.firstFrame&&(this.firstFrame=!1)}},CVShapeElement.prototype.renderPath=function(t,e,i){var s,r,a,n;if(i.matMdf||e.sh.mdf||this.firstFrame){var o=e.sh.paths,h=i.mat;n=o._length;var l=e.trNodes;for(l.length=0,a=0;a<n;a+=1){var p=o.shapes[a];if(p&&p.v){for(s=p._length,r=1;r<s;r+=1)1==r&&l.push({t:"m",p:h.applyToPointArray(p.v[0][0],p.v[0][1],0)}),l.push({t:"c",p1:h.applyToPointArray(p.o[r-1][0],p.o[r-1][1],0),p2:h.applyToPointArray(p.i[r][0],p.i[r][1],0),p3:h.applyToPointArray(p.v[r][0],p.v[r][1],0)});1==s&&l.push({t:"m",p:h.applyToPointArray(p.v[0][0],p.v[0][1],0)}),p.c&&s&&(l.push({t:"c",p1:h.applyToPointArray(p.o[r-1][0],p.o[r-1][1],0),p2:h.applyToPointArray(p.i[0][0],p.i[0][1],0),p3:h.applyToPointArray(p.v[0][0],p.v[0][1],0)}),l.push({t:"z"})),e.lStr=l}}if(e.st)for(r=0;r<16;r+=1)e.tr[r]=i.mat.props[r];e.trNodes=l}},CVShapeElement.prototype.renderFill=function(t,e,i){var s=e.style;(e.c.mdf||this.firstFrame)&&(s.co="rgb("+bm_floor(e.c.v[0])+","+bm_floor(e.c.v[1])+","+bm_floor(e.c.v[2])+")"),(e.o.mdf||i.opMdf||this.firstFrame)&&(s.coOp=e.o.v*i.opacity)},CVShapeElement.prototype.renderStroke=function(t,e,i){var s=e.style,r=e.d;r&&(r.mdf||this.firstFrame)&&(s.da=r.dasharray,s.do=r.dashoffset),(e.c.mdf||this.firstFrame)&&(s.co="rgb("+bm_floor(e.c.v[0])+","+bm_floor(e.c.v[1])+","+bm_floor(e.c.v[2])+")"),(e.o.mdf||i.opMdf||this.firstFrame)&&(s.coOp=e.o.v*i.opacity),(e.w.mdf||this.firstFrame)&&(s.wi=e.w.v)},CVShapeElement.prototype.destroy=function(){this.shapesData=null,this.globalData=null,this.canvasContext=null,this.stylesList.length=0,this.itemData.length=0,this._parent.destroy.call(this._parent)},createElement(CVBaseElement,CVSolidElement),CVSolidElement.prototype.renderFrame=function(t){if(!1!==this._parent.renderFrame.call(this,t)){var e=this.canvasContext;this.globalData.renderer.save(),this.globalData.renderer.ctxTransform(this.finalTransform.mat.props),this.globalData.renderer.ctxOpacity(this.finalTransform.opacity),e.fillStyle=this.data.sc,e.fillRect(0,0,this.data.sw,this.data.sh),this.globalData.renderer.restore(this.data.hasMask),this.firstFrame&&(this.firstFrame=!1)}},createElement(CVBaseElement,CVTextElement),extendPrototype(ITextElement,CVTextElement),CVTextElement.prototype.tHelper=document.createElement("canvas").getContext("2d"),CVTextElement.prototype.createElements=function(){this._parent.createElements.call(this)},CVTextElement.prototype.buildNewText=function(){var t=this.textProperty.currentData;this.renderedLetters=Array.apply(null,{length:t.l?t.l.length:0});var e=!1;t.fc?(e=!0,this.values.fill=this.buildColor(t.fc)):this.values.fill="rgba(0,0,0,0)",this.fill=e;var i=!1;t.sc&&(i=!0,this.values.stroke=this.buildColor(t.sc),this.values.sWidth=t.sw);var s,r,a=this.globalData.fontManager.getFontByName(t.f),n=t.l,o=this.mHelper;this.stroke=i,this.values.fValue=t.s+"px "+this.globalData.fontManager.getFontByName(t.f).fFamily,r=t.t.length;var h,l,p,m,c,f,d,u,y,g,v=this.data.singleShape,b=t.tr/1e3*t.s,E=0,P=0,x=!0,S=0;for(s=0;s<r;s+=1){for(h=this.globalData.fontManager.getCharData(t.t.charAt(s),a.fStyle,this.globalData.fontManager.getFontByName(t.f).fFamily),l=h&&h.data||{},o.reset(),v&&n[s].n&&(E=-b,P+=t.yOffset,P+=x?1:0,x=!1),c=l.shapes?l.shapes[0].it:[],d=c.length,o.scale(t.s/100,t.s/100),v&&this.applyTextPropertiesToMatrix(t,o,n[s].line,E,P),y=Array.apply(null,{length:d}),f=0;f<d;f+=1){for(m=c[f].ks.k.i.length,u=c[f].ks.k,g=[],p=1;p<m;p+=1)1==p&&g.push(o.applyToX(u.v[0][0],u.v[0][1],0),o.applyToY(u.v[0][0],u.v[0][1],0)),g.push(o.applyToX(u.o[p-1][0],u.o[p-1][1],0),o.applyToY(u.o[p-1][0],u.o[p-1][1],0),o.applyToX(u.i[p][0],u.i[p][1],0),o.applyToY(u.i[p][0],u.i[p][1],0),o.applyToX(u.v[p][0],u.v[p][1],0),o.applyToY(u.v[p][0],u.v[p][1],0));g.push(o.applyToX(u.o[p-1][0],u.o[p-1][1],0),o.applyToY(u.o[p-1][0],u.o[p-1][1],0),o.applyToX(u.i[0][0],u.i[0][1],0),o.applyToY(u.i[0][0],u.i[0][1],0),o.applyToX(u.v[0][0],u.v[0][1],0),o.applyToY(u.v[0][0],u.v[0][1],0)),y[f]=g}v&&(E+=n[s].l,E+=b),this.textSpans[S]?this.textSpans[S].elem=y:this.textSpans[S]={elem:y},S+=1}},CVTextElement.prototype.renderFrame=function(t){if(!1!==this._parent.renderFrame.call(this,t)){var e=this.canvasContext,i=this.finalTransform.mat.props;this.globalData.renderer.save(),this.globalData.renderer.ctxTransform(i),this.globalData.renderer.ctxOpacity(this.finalTransform.opacity),e.font=this.values.fValue,e.lineCap="butt",e.lineJoin="miter",e.miterLimit=4,this.data.singleShape||this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);var s,r,a,n,o,h,l=this.textAnimator.renderedLetters,p=this.textProperty.currentData.l;r=p.length;var m,c,f,d=null,u=null,y=null;for(s=0;s<r;s+=1)if(!p[s].n){if(m=l[s],m&&(this.globalData.renderer.save(),this.globalData.renderer.ctxTransform(m.p),this.globalData.renderer.ctxOpacity(m.o)),this.fill){for(m&&m.fc?d!==m.fc&&(d=m.fc,e.fillStyle=m.fc):d!==this.values.fill&&(d=this.values.fill,e.fillStyle=this.values.fill),c=this.textSpans[s].elem,n=c.length,this.globalData.canvasContext.beginPath(),a=0;a<n;a+=1)for(f=c[a],h=f.length,this.globalData.canvasContext.moveTo(f[0],f[1]),o=2;o<h;o+=6)this.globalData.canvasContext.bezierCurveTo(f[o],f[o+1],f[o+2],f[o+3],f[o+4],f[o+5]);this.globalData.canvasContext.closePath(),this.globalData.canvasContext.fill()}if(this.stroke){for(m&&m.sw?y!==m.sw&&(y=m.sw,e.lineWidth=m.sw):y!==this.values.sWidth&&(y=this.values.sWidth,e.lineWidth=this.values.sWidth),m&&m.sc?u!==m.sc&&(u=m.sc,e.strokeStyle=m.sc):u!==this.values.stroke&&(u=this.values.stroke,e.strokeStyle=this.values.stroke),c=this.textSpans[s].elem,n=c.length,this.globalData.canvasContext.beginPath(),a=0;a<n;a+=1)for(f=c[a],h=f.length,this.globalData.canvasContext.moveTo(f[0],f[1]),o=2;o<h;o+=6)this.globalData.canvasContext.bezierCurveTo(f[o],f[o+1],f[o+2],f[o+3],f[o+4],f[o+5]);this.globalData.canvasContext.closePath(),this.globalData.canvasContext.stroke()}m&&this.globalData.renderer.restore()}this.globalData.renderer.restore(this.data.hasMask),this.firstFrame&&(this.firstFrame=!1)}},createElement(BaseElement,HBaseElement),HBaseElement.prototype.checkBlendMode=function(){},HBaseElement.prototype.setBlendMode=BaseElement.prototype.setBlendMode,HBaseElement.prototype.getBaseElement=function(){return this.baseElement},HBaseElement.prototype.createElements=function(){this.data.hasMask?(this.layerElement=document.createElementNS(svgNS,"svg"),styleDiv(this.layerElement),this.baseElement=this.layerElement,this.maskedElement=this.layerElement):this.layerElement=this.parentContainer,this.transformedElement=this.layerElement,!this.data.ln||4!==this.data.ty&&0!==this.data.ty||(this.layerElement===this.parentContainer&&(this.layerElement=document.createElementNS(svgNS,"g"),this.baseElement=this.layerElement),this.layerElement.setAttribute("id",this.data.ln)),this.setBlendMode(),this.layerElement!==this.parentContainer&&(this.placeholder=null),this.checkParenting()},HBaseElement.prototype.renderFrame=function(t){if(3===this.data.ty)return!1;if(this.currentFrameNum===this.lastNum||!this.isVisible)return this.isVisible;this.lastNum=this.currentFrameNum,this.finalTransform.opMdf=this.finalTransform.op.mdf,this.finalTransform.matMdf=this.finalTransform.mProp.mdf,this.finalTransform.opacity=this.finalTransform.op.v,this.firstFrame&&(this.finalTransform.opMdf=!0,this.finalTransform.matMdf=!0);var e,i=this.finalTransform.mat;if(this.hierarchy){var s,r=this.hierarchy.length;for(e=this.finalTransform.mProp.v.props,i.cloneFromProps(e),s=0;s<r;s+=1)this.finalTransform.matMdf=!!this.hierarchy[s].finalTransform.mProp.mdf||this.finalTransform.matMdf,e=this.hierarchy[s].finalTransform.mProp.v.props,i.transform(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}else this.isVisible&&this.finalTransform.matMdf&&(t?(e=this.finalTransform.mProp.v.props,i.cloneFromProps(e)):i.cloneFromProps(this.finalTransform.mProp.v.props));return this.data.hasMask&&this.maskManager.renderFrame(i),t&&(e=t.mat.props,i.cloneFromProps(e),this.finalTransform.opacity*=t.opacity,this.finalTransform.opMdf=!!t.opMdf||this.finalTransform.opMdf,this.finalTransform.matMdf=!!t.matMdf||this.finalTransform.matMdf),this.finalTransform.matMdf&&(this.transformedElement.style.transform=this.transformedElement.style.webkitTransform=i.toCSS(),this.finalMat=i),this.finalTransform.opMdf&&(this.transformedElement.style.opacity=this.finalTransform.opacity),this.isVisible},HBaseElement.prototype.destroy=function(){this.layerElement=null,this.transformedElement=null,this.parentContainer=null,this.matteElement&&(this.matteElement=null),this.maskManager&&(this.maskManager.destroy(),this.maskManager=null)},HBaseElement.prototype.getDomElement=function(){return this.layerElement},HBaseElement.prototype.addMasks=function(t){this.maskManager=new MaskElement(t,this,this.globalData)},HBaseElement.prototype.hide=function(){},HBaseElement.prototype.setMatte=function(){},HBaseElement.prototype.buildElementParenting=HybridRenderer.prototype.buildElementParenting,createElement(HBaseElement,HSolidElement),HSolidElement.prototype.createElements=function(){var t=document.createElement("div");styleDiv(t);var e=document.createElementNS(svgNS,"svg");styleDiv(e),e.setAttribute("width",this.data.sw),e.setAttribute("height",this.data.sh),t.appendChild(e),this.layerElement=t,this.transformedElement=t,this.baseElement=t,this.innerElem=t,this.data.ln&&this.innerElem.setAttribute("id",this.data.ln),0!==this.data.bm&&this.setBlendMode();var i=document.createElementNS(svgNS,"rect");i.setAttribute("width",this.data.sw),i.setAttribute("height",this.data.sh),i.setAttribute("fill",this.data.sc),e.appendChild(i),this.data.hasMask&&(this.maskedElement=i),this.checkParenting()},HSolidElement.prototype.hide=SVGBaseElement.prototype.hide,HSolidElement.prototype.show=SVGBaseElement.prototype.show,HSolidElement.prototype.renderFrame=IImageElement.prototype.renderFrame,HSolidElement.prototype.destroy=IImageElement.prototype.destroy,createElement(HBaseElement,HCompElement),HCompElement.prototype.createElements=function(){var t=document.createElement("div");if(styleDiv(t),this.data.ln&&t.setAttribute("id",this.data.ln),t.style.clip="rect(0px, "+this.data.w+"px, "+this.data.h+"px, 0px)",this.data.hasMask){var e=document.createElementNS(svgNS,"svg");styleDiv(e),e.setAttribute("width",this.data.w),e.setAttribute("height",this.data.h);var i=document.createElementNS(svgNS,"g");e.appendChild(i),t.appendChild(e),this.maskedElement=i,this.baseElement=t,this.layerElement=i,this.transformedElement=t}else this.layerElement=t,this.baseElement=this.layerElement,this.transformedElement=t;this.checkParenting()},HCompElement.prototype.hide=ICompElement.prototype.hide,HCompElement.prototype.prepareFrame=ICompElement.prototype.prepareFrame,HCompElement.prototype.setElements=ICompElement.prototype.setElements,HCompElement.prototype.getElements=ICompElement.prototype.getElements,HCompElement.prototype.destroy=ICompElement.prototype.destroy,HCompElement.prototype.renderFrame=function(t){var e,i=this._parent.renderFrame.call(this,t),s=this.layers.length;if(!1===i)return void this.hide();for(this.hidden=!1,e=0;e<s;e+=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame();this.firstFrame&&(this.firstFrame=!1)},HCompElement.prototype.checkLayers=BaseRenderer.prototype.checkLayers,HCompElement.prototype.buildItem=HybridRenderer.prototype.buildItem,HCompElement.prototype.checkPendingElements=HybridRenderer.prototype.checkPendingElements,HCompElement.prototype.addPendingElement=HybridRenderer.prototype.addPendingElement,HCompElement.prototype.buildAllItems=BaseRenderer.prototype.buildAllItems,HCompElement.prototype.createItem=HybridRenderer.prototype.createItem,HCompElement.prototype.buildElementParenting=HybridRenderer.prototype.buildElementParenting,HCompElement.prototype.createImage=HybridRenderer.prototype.createImage,HCompElement.prototype.createComp=HybridRenderer.prototype.createComp,HCompElement.prototype.createSolid=HybridRenderer.prototype.createSolid,HCompElement.prototype.createShape=HybridRenderer.prototype.createShape,HCompElement.prototype.createText=HybridRenderer.prototype.createText,HCompElement.prototype.createBase=HybridRenderer.prototype.createBase,HCompElement.prototype.appendElementInPos=HybridRenderer.prototype.appendElementInPos,createElement(HBaseElement,HShapeElement);var parent=HShapeElement.prototype._parent;extendPrototype(IShapeElement,HShapeElement),HShapeElement.prototype._parent=parent,HShapeElement.prototype._renderShapeFrame=HShapeElement.prototype.renderFrame,HShapeElement.prototype.createElements=function(){var t=document.createElement("div");styleDiv(t);var e=document.createElementNS(svgNS,"svg");styleDiv(e);var i=this.comp.data?this.comp.data:this.globalData.compSize;if(e.setAttribute("width",i.w),e.setAttribute("height",i.h),this.data.hasMask){var s=document.createElementNS(svgNS,"g");t.appendChild(e),e.appendChild(s),this.maskedElement=s,this.layerElement=s,this.shapesContainer=s}else t.appendChild(e),this.layerElement=e,this.shapesContainer=document.createElementNS(svgNS,"g"),this.layerElement.appendChild(this.shapesContainer);this.data.hd||(this.baseElement=t),this.innerElem=t,this.data.ln&&this.innerElem.setAttribute("id",this.data.ln),this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties,0,[],!0),this.buildExpressionInterface(),this.layerElement=t,this.transformedElement=t,this.shapeCont=e,0!==this.data.bm&&this.setBlendMode(),this.checkParenting()},HShapeElement.prototype.renderFrame=function(t){var e=this.firstFrame;if(this._renderShapeFrame(),this.isVisible&&(this.elemMdf||e)){var i=this.shapeCont.getBBox(),s=!1;this.currentBBox.w!==i.width&&(this.currentBBox.w=i.width,this.shapeCont.setAttribute("width",i.width),s=!0),this.currentBBox.h!==i.height&&(this.currentBBox.h=i.height,this.shapeCont.setAttribute("height",i.height),s=!0),(s||this.currentBBox.x!==i.x||this.currentBBox.y!==i.y)&&(this.currentBBox.w=i.width,this.currentBBox.h=i.height,this.currentBBox.x=i.x,this.currentBBox.y=i.y,this.shapeCont.setAttribute("viewBox",this.currentBBox.x+" "+this.currentBBox.y+" "+this.currentBBox.w+" "+this.currentBBox.h),this.shapeCont.style.transform=this.shapeCont.style.webkitTransform="translate("+this.currentBBox.x+"px,"+this.currentBBox.y+"px)")}},createElement(HBaseElement,HTextElement),extendPrototype(ITextElement,HTextElement),HTextElement.prototype.createElements=function(){this.isMasked=this.checkMasks();var t=document.createElement("div");if(styleDiv(t),this.layerElement=t,this.transformedElement=t,this.isMasked){this.renderType="svg";var e=document.createElementNS(svgNS,"svg");styleDiv(e),this.cont=e,this.compW=this.comp.data.w,this.compH=this.comp.data.h,e.setAttribute("width",this.compW),e.setAttribute("height",this.compH);var i=document.createElementNS(svgNS,"g");e.appendChild(i),t.appendChild(e),this.maskedElement=i,this.innerElem=i}else this.renderType="html",this.innerElem=t;this.baseElement=t,this.checkParenting()},HTextElement.prototype.buildNewText=function(){var t=this.textProperty.currentData;this.renderedLetters=Array.apply(null,{length:this.textProperty.currentData.l?this.textProperty.currentData.l.length:0});var e=this.innerElem.style;e.color=e.fill=t.fc?this.buildColor(t.fc):"rgba(0,0,0,0)",t.sc&&(e.stroke=this.buildColor(t.sc),e.strokeWidth=t.sw+"px");var i=this.globalData.fontManager.getFontByName(t.f);if(!this.globalData.fontManager.chars)if(e.fontSize=t.s+"px",e.lineHeight=t.s+"px",i.fClass)this.innerElem.className=i.fClass;else{e.fontFamily=i.fFamily;var s=t.fWeight,r=t.fStyle;e.fontStyle=r,e.fontWeight=s}var a,n,o=t.l;n=o.length;var h,l,p,m,c=this.mHelper,f="",d=0;for(a=0;a<n;a+=1){if(this.globalData.fontManager.chars?(this.textPaths[d]?h=this.textPaths[d]:(h=document.createElementNS(svgNS,"path"),h.setAttribute("stroke-linecap","butt"),h.setAttribute("stroke-linejoin","round"),h.setAttribute("stroke-miterlimit","4")),this.isMasked||(this.textSpans[d]?(l=this.textSpans[d],p=l.children[0]):(l=document.createElement("div"),p=document.createElementNS(svgNS,"svg"),p.appendChild(h),styleDiv(l)))):this.isMasked?h=this.textPaths[d]?this.textPaths[d]:document.createElementNS(svgNS,"text"):this.textSpans[d]?(l=this.textSpans[d],h=this.textPaths[d]):(l=document.createElement("span"),styleDiv(l),h=document.createElement("span"),styleDiv(h),l.appendChild(h)),this.globalData.fontManager.chars){var u,y=this.globalData.fontManager.getCharData(t.t.charAt(a),i.fStyle,this.globalData.fontManager.getFontByName(t.f).fFamily);if(u=y?y.data:null,c.reset(),u&&u.shapes&&(m=u.shapes[0].it,c.scale(t.s/100,t.s/100),f=this.createPathShape(c,m),h.setAttribute("d",f)),this.isMasked)this.innerElem.appendChild(h);else if(this.innerElem.appendChild(l),u&&u.shapes){document.body.appendChild(p);var g=p.getBBox();p.setAttribute("width",g.width+2),p.setAttribute("height",g.height+2),p.setAttribute("viewBox",g.x-1+" "+(g.y-1)+" "+(g.width+2)+" "+(g.height+2)),p.style.transform=p.style.webkitTransform="translate("+(g.x-1)+"px,"+(g.y-1)+"px)",o[a].yOffset=g.y-1,l.appendChild(p)}else p.setAttribute("width",1),p.setAttribute("height",1)}else h.textContent=o[a].val,h.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),this.isMasked?this.innerElem.appendChild(h):(this.innerElem.appendChild(l),h.style.transform=h.style.webkitTransform="translate3d(0,"+-t.s/1.2+"px,0)");this.isMasked?this.textSpans[d]=h:this.textSpans[d]=l,this.textSpans[d].style.display="block",this.textPaths[d]=h,d+=1}for(;d<this.textSpans.length;)this.textSpans[d].style.display="none",d+=1},HTextElement.prototype.hide=SVGTextElement.prototype.hide,HTextElement.prototype.renderFrame=function(t){if(!1===this._parent.renderFrame.call(this,t))return void this.hide();if(this.hidden&&(this.hidden=!1,this.innerElem.style.display="block",this.layerElement.style.display="block"),this.data.singleShape){if(!this.firstFrame&&!this.lettersChangedFlag)return;this.isMasked&&this.finalTransform.matMdf&&(this.cont.setAttribute("viewBox",-this.finalTransform.mProp.p.v[0]+" "+-this.finalTransform.mProp.p.v[1]+" "+this.compW+" "+this.compH),this.cont.style.transform=this.cont.style.webkitTransform="translate("+-this.finalTransform.mProp.p.v[0]+"px,"+-this.finalTransform.mProp.p.v[1]+"px)")}if(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),this.lettersChangedFlag||this.textAnimator.lettersChangedFlag){var e,i,s=0,r=this.textAnimator.renderedLetters,a=this.textProperty.currentData.l;i=a.length;var n,o,h;for(e=0;e<i;e+=1)a[e].n?s+=1:(o=this.textSpans[e],h=this.textPaths[e],n=r[s],s+=1,this.isMasked?o.setAttribute("transform",n.m):o.style.transform=o.style.webkitTransform=n.m,o.style.opacity=n.o,n.sw&&h.setAttribute("stroke-width",n.sw),n.sc&&h.setAttribute("stroke",n.sc),n.fc&&(h.setAttribute("fill",n.fc),h.style.color=n.fc));if(this.isVisible&&(this.elemMdf||this.firstFrame)&&this.innerElem.getBBox){var l=this.innerElem.getBBox();this.currentBBox.w!==l.width&&(this.currentBBox.w=l.width,this.cont.setAttribute("width",l.width)),this.currentBBox.h!==l.height&&(this.currentBBox.h=l.height,this.cont.setAttribute("height",l.height));this.currentBBox.w===l.width+2&&this.currentBBox.h===l.height+2&&this.currentBBox.x===l.x-1&&this.currentBBox.y===l.y-1||(this.currentBBox.w=l.width+2,this.currentBBox.h=l.height+2,this.currentBBox.x=l.x-1,this.currentBBox.y=l.y-1,this.cont.setAttribute("viewBox",this.currentBBox.x+" "+this.currentBBox.y+" "+this.currentBBox.w+" "+this.currentBBox.h),this.cont.style.transform=this.cont.style.webkitTransform="translate("+this.currentBBox.x+"px,"+this.currentBBox.y+"px)")}this.firstFrame&&(this.firstFrame=!1)}},createElement(HBaseElement,HImageElement),HImageElement.prototype.createElements=function(){var t=this.globalData.getAssetsPath(this.assetData),e=new Image;if(this.data.hasMask){var i=document.createElement("div");styleDiv(i);var s=document.createElementNS(svgNS,"svg");styleDiv(s),s.setAttribute("width",this.assetData.w),s.setAttribute("height",this.assetData.h),i.appendChild(s),this.imageElem=document.createElementNS(svgNS,"image"),this.imageElem.setAttribute("width",this.assetData.w+"px"),this.imageElem.setAttribute("height",this.assetData.h+"px"),this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink","href",t),s.appendChild(this.imageElem),this.layerElement=i,this.transformedElement=i,this.baseElement=i,this.innerElem=i,this.maskedElement=this.imageElem}else styleDiv(e),this.layerElement=e,this.baseElement=e,this.innerElem=e,this.transformedElement=e;e.src=t,this.data.ln&&this.innerElem.setAttribute("id",this.data.ln),this.checkParenting()},HImageElement.prototype.show=HSolidElement.prototype.show,HImageElement.prototype.hide=HSolidElement.prototype.hide,HImageElement.prototype.renderFrame=HSolidElement.prototype.renderFrame,HImageElement.prototype.destroy=HSolidElement.prototype.destroy,createElement(HBaseElement,HCameraElement),HCameraElement.prototype.setup=function(){var t,e,i=this.comp.threeDElements.length;for(t=0;t<i;t+=1)e=this.comp.threeDElements[t],e.perspectiveElem.style.perspective=e.perspectiveElem.style.webkitPerspective=this.pe.v+"px",e.container.style.transformOrigin=e.container.style.mozTransformOrigin=e.container.style.webkitTransformOrigin="0px 0px 0px",e.perspectiveElem.style.transform=e.perspectiveElem.style.webkitTransform="matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)"},HCameraElement.prototype.createElements=function(){},HCameraElement.prototype.hide=function(){},HCameraElement.prototype.renderFrame=function(){var t,e,i=this.firstFrame;if(this.hierarchy)for(e=this.hierarchy.length,t=0;t<e;t+=1)i=!!this.hierarchy[t].finalTransform.mProp.mdf||i;if(i||this.p&&this.p.mdf||this.px&&(this.px.mdf||this.py.mdf||this.pz.mdf)||this.rx.mdf||this.ry.mdf||this.rz.mdf||this.or.mdf||this.a&&this.a.mdf){if(this.mat.reset(),this.p?this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]):this.mat.translate(-this.px.v,-this.py.v,this.pz.v),this.a){var s=[this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]],r=Math.sqrt(Math.pow(s[0],2)+Math.pow(s[1],2)+Math.pow(s[2],2)),a=[s[0]/r,s[1]/r,s[2]/r],n=Math.sqrt(a[2]*a[2]+a[0]*a[0]),o=Math.atan2(a[1],n),h=Math.atan2(a[0],-a[2]);this.mat.rotateY(h).rotateX(-o)}if(this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0),this.mat.translate(0,0,this.pe.v),this.hierarchy){var l;for(e=this.hierarchy.length,t=0;t<e;t+=1)l=this.hierarchy[t].finalTransform.mProp.iv.props,this.mat.transform(l[0],l[1],l[2],l[3],l[4],l[5],l[6],l[7],l[8],l[9],l[10],l[11],-l[12],-l[13],l[14],l[15])}e=this.comp.threeDElements.length;var p;for(t=0;t<e;t+=1)p=this.comp.threeDElements[t],p.container.style.transform=p.container.style.webkitTransform=this.mat.toCSS()}this.firstFrame=!1},HCameraElement.prototype.destroy=function(){};var Expressions=function(){function t(t){t.renderer.compInterface=CompExpressionInterface(t.renderer),t.renderer.globalData.projectInterface.registerComposition(t.renderer)}var e={};return e.initExpressions=t,e}();expressionsPlugin=Expressions,function(){function t(){return this.pv}function e(t,e,i){if(!this.k||!this.keyframes)return this.pv;var s=this.comp.renderedFrame,r=this.keyframes,a=r[r.length-1].t;if(s<=a)return this.pv;var n,o;i?(n=e?Math.abs(a-elem.comp.globalData.frameRate*e):Math.max(0,a-this.elem.data.ip),o=a-n):((!e||e>r.length-1)&&(e=r.length-1),o=r[r.length-1-e].t,n=a-o);var h,l,p,m=this.offsetTime||0;if("pingpong"===t.toLowerCase()){if(Math.floor((s-o)/n)%2!=0)return this.getValueAtTime((n-(s-o)%n+o-m)/this.comp.globalData.frameRate,0)}else{if("offset"===t){var c=this.getValueAtTime(o/this.comp.globalData.frameRate,0),f=this.getValueAtTime(a/this.comp.globalData.frameRate,0),d=this.getValueAtTime(((s-o)%n+o)/this.comp.globalData.frameRate,0),u=Math.floor((s-o)/n);if(this.pv.length){for(p=new Array(c.length),l=p.length,h=0;h<l;h+=1)p[h]=(f[h]-c[h])*u+d[h];return p}return(f-c)*u+d}if("continue"===t){var y=this.getValueAtTime(a/this.comp.globalData.frameRate,0),g=this.getValueAtTime((a-.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(p=new Array(y.length),l=p.length,h=0;h<l;h+=1)p[h]=y[h]+(y[h]-g[h])*((s-a)/this.comp.globalData.frameRate)/5e-4;return p}return y+(s-a)/.001*(y-g)}}return this.getValueAtTime(((s-o)%n+o-m)/this.comp.globalData.frameRate,0)}function i(t,e,i){if(!this.k)return this.pv;var s=time*elem.comp.globalData.frameRate,r=this.keyframes,a=r[0].t,n=this.offsetTime||0;if(s>=a)return this.pv;var o,h;i?(o=e?Math.abs(elem.comp.globalData.frameRate*e):Math.max(0,this.elem.data.op-a),h=a+o):((!e||e>r.length-1)&&(e=r.length-1),h=r[e].t,o=h-a);var l,p,m;if("pingpong"===t){if(Math.floor((a-s)/o)%2==0)return this.getValueAtTime(((a-s)%o+a-n)/this.comp.globalData.frameRate,0)}else{if("offset"===t){var c=this.getValueAtTime(a/this.comp.globalData.frameRate,0),f=this.getValueAtTime(h/this.comp.globalData.frameRate,0),d=this.getValueAtTime((o-(a-s)%o+a)/this.comp.globalData.frameRate,0),u=Math.floor((a-s)/o)+1;if(this.pv.length){for(m=new Array(c.length),p=m.length,l=0;l<p;l+=1)m[l]=d[l]-(f[l]-c[l])*u;return m}return d-(f-c)*u}if("continue"===t){var y=this.getValueAtTime(a/this.comp.globalData.frameRate,0),g=this.getValueAtTime((a+.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(m=new Array(y.length),p=m.length,l=0;l<p;l+=1)m[l]=y[l]+(y[l]-g[l])*(a-s)/.001;return m}return y+(y-g)*(a-s)/.001}}return this.getValueAtTime((o-(a-s)%o+a-n)/this.comp.globalData.frameRate,0)}function s(t){if(this._cachingAtTime||(this._cachingAtTime={lastValue:-99999,lastIndex:0}),t!==this._cachingAtTime.lastFrame){t*=this.elem.globalData.frameRate,t-=this.offsetTime;var e=this._caching.lastFrame<t?this._caching.lastIndex:0,i=this.interpolateValue(t,e,this.pv,this._cachingAtTime);this._cachingAtTime.lastIndex=i.iterationIndex,this._cachingAtTime.value=i.value,this._cachingAtTime.lastFrame=t}return this._cachingAtTime.value}function r(t){if(void 0!==this.vel)return this.vel;var e,i=this.getValueAtTime(t),s=this.getValueAtTime(t+-.01);if(i.length){e=Array.apply(null,{length:i.length});var r;for(r=0;r<i.length;r+=1)e[r]=(s[r]-i[r])/-.01}else e=(s-i)/-.01;return e}function a(t){this.propertyGroup=t}function n(t,e,i){e.x&&(i.k=!0,i.x=!0,i.getValue&&(i.getPreValue=i.getValue),i.getValue=ExpressionManager.initiateExpression.bind(i)(t,e,i))}function o(t){console.log("time:",t)}function h(t){}function l(t){if(this._shapeValueAtTime||(this._lastIndexAtTime=0,this._lastTimeAtTime=-999999,this._shapeValueAtTime=shape_pool.clone(this.pv)),t!==this._lastTimeAtTime){this._lastTimeAtTime=t,t*=this.elem.globalData.frameRate;var e=this.interpolateShape(t,this._lastIndexAtTime,this._shapeValueAtTime,!1);this._lastIndexAtTime=e.iterationIndex}return this._shapeValueAtTime}var p=function(){function e(t,e){return this.textIndex=t+1,this.textTotal=e,this.getValue(),this.v}return function(i,o){this.pv=1,this.comp=i.comp,this.elem=i,this.mult=.01,this.type="textSelector",this.textTotal=o.totalChars,this.selectorValue=100,this.lastValue=[1,1,1],n.bind(this)(i,o,this),this.getMult=e,this.getVelocityAtTime=r,this.kf?this.getValueAtTime=s.bind(this):this.getValueAtTime=t.bind(this),this.setGroupProperty=a}}(),m=PropertyFactory.getProp;PropertyFactory.getProp=function(l,p,c,f,d){var u=m(l,p,c,f,d);2===c?u.dynamicProperties.length?u.getValueAtTime=o.bind(u):u.getValueAtTime=h.bind(u):u.kf?u.getValueAtTime=s.bind(u):u.getValueAtTime=t.bind(u),u.setGroupProperty=a,u.loopOut=e,u.loopIn=i,u.getVelocityAtTime=r,u.numKeys=1===p.a?p.k.length:0;var y=u.k;return void 0!==p.ix&&Object.defineProperty(u,"propertyIndex",{get:function(){return p.ix}}),n(l,p,u),!y&&u.x&&d.push(u),u};var c=ShapePropertyFactory.getConstructorFunction(),f=ShapePropertyFactory.getKeyframedConstructorFunction();c.prototype.vertices=function(t,e){var i=this.v;void 0!==e&&(i=this.getValueAtTime(e,0));var s,r=i._length,a=i[t],n=i.v,o=Array.apply(null,{length:r});for(s=0;s<r;s+=1)o[s]="i"===t||"o"===t?[a[s][0]-n[s][0],a[s][1]-n[s][1]]:[a[s][0],a[s][1]];return o},c.prototype.points=function(t){return this.vertices("v",t)},c.prototype.inTangents=function(t){return this.vertices("i",t)},c.prototype.outTangents=function(t){return this.vertices("o",t)},c.prototype.isClosed=function(){return this.v.c},c.prototype.pointOnPath=function(t,e){var i=this.v;void 0!==e&&(i=this.getValueAtTime(e,0)),this._segmentsLength||(this._segmentsLength=bez.getSegmentsLength(i));for(var s=this._segmentsLength,r=s.lengths,a=s.totalLength*t,n=0,o=r.length,h=0;n<o;){if(h+r[n].addedLength>a){r[n].segments;var l=n,p=i.c&&n===o-1?0:n+1,m=(a-h)/r[n].addedLength,c=bez.getPointInSegment(i.v[l],i.v[p],i.o[l],i.i[p],m,r[n]);break}h+=r[n].addedLength,n+=1}return c||(c=i.c?[i.v[0][0],i.v[0][1]]:[i.v[i._length-1][0],i.v[i._length-1][1]]),c},c.prototype.vectorOnPath=function(t,e,i){t=1==t?this.v.c?0:.999:t;var s=this.pointOnPath(t,e),r=this.pointOnPath(t+.001,e),a=r[0]-s[0],n=r[1]-s[1],o=Math.sqrt(Math.pow(a,2)+Math.pow(n,2));return"tangent"===i?[a/o,n/o]:[-n/o,a/o]},c.prototype.tangentOnPath=function(t,e){return this.vectorOnPath(t,e,"tangent")},c.prototype.normalOnPath=function(t,e){return this.vectorOnPath(t,e,"normal")},c.prototype.setGroupProperty=a,c.prototype.getValueAtTime=t,f.prototype.vertices=c.prototype.vertices,f.prototype.points=c.prototype.points,f.prototype.inTangents=c.prototype.inTangents,f.prototype.outTangents=c.prototype.outTangents,f.prototype.isClosed=c.prototype.isClosed,f.prototype.pointOnPath=c.prototype.pointOnPath,f.prototype.vectorOnPath=c.prototype.vectorOnPath,f.prototype.tangentOnPath=c.prototype.tangentOnPath,f.prototype.normalOnPath=c.prototype.normalOnPath,f.prototype.setGroupProperty=c.prototype.setGroupProperty,f.prototype.getValueAtTime=l;var d=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(t,e,i,s,r){var a=d(t,e,i,s,r),o=a.k;return void 0!==e.ix&&Object.defineProperty(a,"propertyIndex",{get:function(){return e.ix}}),3===i?n(t,e.pt,a):4===i&&n(t,e.ks,a),!o&&a.x&&s.push(a),a};var u=PropertyFactory.getTextSelectorProp;PropertyFactory.getTextSelectorProp=function(t,e,i){return 1===e.t?new p(t,e,i):u(t,e,i)}}(),function(){function t(){return!!this.data.d.x&&(this.comp=this.elem.comp,this.getValue&&(this.getPreValue=this.getValue),this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this),this.getValue=this.getExpressionValue,
!0)}TextProperty.prototype.searchProperty=function(){return this.kf=this.searchExpressions()||this.data.d.k.length>1,this.kf},TextProperty.prototype.getExpressionValue=function(t){this.calculateExpression(),this.mdf&&(this.currentData.t=this.v.toString(),this.completeTextData(this.currentData))},TextProperty.prototype.searchExpressions=t}();var ExpressionManager=function(){function duplicatePropertyValue(t,e){if(e=e||1,"number"==typeof t||t instanceof Number)return t*e;if(t.i)return JSON.parse(JSON.stringify(t));var i,s=Array.apply(null,{length:t.length}),r=t.length;for(i=0;i<r;i+=1)s[i]=t[i]*e;return s}function shapesEqual(t,e){if(t._length!==e._length||t.c!==e.c)return!1;var i,s=t._length;for(i=0;i<s;i+=1)if(t.v[i][0]!==e.v[i][0]||t.v[i][1]!==e.v[i][1]||t.o[i][0]!==e.o[i][0]||t.o[i][1]!==e.o[i][1]||t.i[i][0]!==e.i[i][0]||t.i[i][1]!==e.i[i][1])return!1;return!0}function $bm_neg(t){var e=typeof t;if("number"===e||"boolean"===e||t instanceof Number)return-t;if(t.constructor===Array){var i,s=t.length,r=[];for(i=0;i<s;i+=1)r[i]=-t[i];return r}}function sum(t,e){var i=typeof t,s=typeof e;if("string"===i||"string"===s)return t+e;if(("number"===i||"boolean"===i||"string"===i||t instanceof Number)&&("number"===s||"boolean"===s||"string"===s||e instanceof Number))return t+e;if(t.constructor===Array&&("number"===s||"boolean"===s||"string"===s||e instanceof Number))return t[0]=t[0]+e,t;if(("number"===i||"boolean"===i||"string"===i||t instanceof Number)&&e.constructor===Array)return e[0]=t+e[0],e;if(t.constructor===Array&&e.constructor===Array){for(var r=0,a=t.length,n=e.length,o=[];r<a||r<n;)("number"==typeof t[r]||t[r]instanceof Number)&&("number"==typeof e[r]||e[r]instanceof Number)?o[r]=t[r]+e[r]:o[r]=void 0==e[r]?t[r]:t[r]||e[r],r+=1;return o}return 0}function sub(t,e){var i=typeof t,s=typeof e;if(("number"===i||"boolean"===i||"string"===i||t instanceof Number)&&("number"===s||"boolean"===s||"string"===s||e instanceof Number))return"string"===i&&(t=parseInt(t)),"string"===s&&(e=parseInt(e)),t-e;if(t.constructor===Array&&("number"===s||"boolean"===s||"string"===s||e instanceof Number))return t[0]=t[0]-e,t;if(("number"===i||"boolean"===i||"string"===i||t instanceof Number)&&e.constructor===Array)return e[0]=t-e[0],e;if(t.constructor===Array&&e.constructor===Array){for(var r=0,a=t.length,n=e.length,o=[];r<a||r<n;)("number"==typeof t[r]||t[r]instanceof Number)&&("number"==typeof e[r]||(e[r],Number),!0)?o[r]=t[r]-e[r]:o[r]=void 0==e[r]?t[r]:t[r]||e[r],r+=1;return o}return 0}function mul(t,e){var i,s=typeof t,r=typeof e;if(("number"===s||"boolean"===s||"string"===s||t instanceof Number)&&("number"===r||"boolean"===r||"string"===r||e instanceof Number))return t*e;var a,n;if(t.constructor===Array&&("number"===r||"boolean"===r||"string"===r||e instanceof Number)){for(n=t.length,i=Array.apply(null,{length:n}),a=0;a<n;a+=1)i[a]=t[a]*e;return i}if(("number"===s||"boolean"===s||"string"===s||t instanceof Number)&&e.constructor===Array){for(n=e.length,i=Array.apply(null,{length:n}),a=0;a<n;a+=1)i[a]=t*e[a];return i}return 0}function div(t,e){var i,s=typeof t,r=typeof e;if(("number"===s||"boolean"===s||"string"===s||t instanceof Number)&&("number"===r||"boolean"===r||"string"===r||e instanceof Number))return t/e;var a,n;if(t.constructor===Array&&("number"===r||"boolean"===r||"string"===r||e instanceof Number)){for(n=t.length,i=Array.apply(null,{length:n}),a=0;a<n;a+=1)i[a]=t[a]/e;return i}if(("number"===s||"boolean"===s||"string"===s||t instanceof Number)&&e.constructor===Array){for(n=e.length,i=Array.apply(null,{length:n}),a=0;a<n;a+=1)i[a]=t/e[a];return i}return 0}function mod(t,e){return"string"==typeof t&&(t=parseInt(t)),"string"==typeof e&&(e=parseInt(e)),t%e}function clamp(t,e,i){if(e>i){var s=i;i=e,e=s}return Math.min(Math.max(t,e),i)}function radiansToDegrees(t){return t/degToRads}function degreesToRadians(t){return t*degToRads}function length(t,e){if("number"==typeof t||t instanceof Number)return e=e||0,Math.abs(t-e);e||(e=helperLengthArray);var i,s=Math.min(t.length,e.length),r=0;for(i=0;i<s;i+=1)r+=Math.pow(e[i]-t[i],2);return Math.sqrt(r)}function normalize(t){return div(t,length(t))}function rgbToHsl(t){var e,i,s=t[0],r=t[1],a=t[2],n=Math.max(s,r,a),o=Math.min(s,r,a),h=(n+o)/2;if(n==o)e=i=0;else{var l=n-o;switch(i=h>.5?l/(2-n-o):l/(n+o),n){case s:e=(r-a)/l+(r<a?6:0);break;case r:e=(a-s)/l+2;break;case a:e=(s-r)/l+4}e/=6}return[e,i,h,t[3]]}function hslToRgb(t){function e(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t}var i,s,r,a=t[0],n=t[1],o=t[2];if(0==n)i=s=r=o;else{var h=o<.5?o*(1+n):o+n-o*n,l=2*o-h;i=e(l,h,a+1/3),s=e(l,h,a),r=e(l,h,a-1/3)}return[i,s,r,t[3]]}function linear(t,e,i,s,r){if(void 0===s||void 0===r)return linear(t,0,1,e,i);if(t<=e)return s;if(t>=i)return r;var a=i===e?0:(t-e)/(i-e);if(!s.length)return s+(r-s)*a;var n,o=s.length,h=Array.apply(null,{length:o});for(n=0;n<o;n+=1)h[n]=s[n]+(r[n]-s[n])*a;return h}function random(t,e){if(void 0===e&&(void 0===t?(t=0,e=1):(e=t,t=void 0)),e.length){var i,s=e.length;t||(t=Array.apply(null,{length:s}));var r=Array.apply(null,{length:s}),a=BMMath.random();for(i=0;i<s;i+=1)r[i]=t[i]+a*(e[i]-t[i]);return r}return void 0===t&&(t=0),t+BMMath.random()*(e-t)}function createPath(t,e,s,r){e=e&&e.length?e:t,s=s&&s.length?s:t;var a=shape_pool.newShape(),n=t.length;for(a.setPathData(r,n),i=0;i<n;i+=1)a.setTripleAt(t[i][0],t[i][1],s[i][0]+t[i][0],s[i][1]+t[i][1],e[i][0]+t[i][0],e[i][1]+t[i][1],i,!0);return a}function initiateExpression(elem,data,property){function lookAt(t,e){var i=[e[0]-t[0],e[1]-t[1],e[2]-t[2]],s=Math.atan2(i[0],Math.sqrt(i[1]*i[1]+i[2]*i[2]))/degToRads;return[-Math.atan2(i[1],i[2])/degToRads,s,0]}function easeOut(t,e,i){return-(i-e)*t*(t-2)+e}function nearestKey(t){var e,i,s,r=data.k.length;if(data.k.length&&"number"!=typeof data.k[0])if(i=-1,(t*=elem.comp.globalData.frameRate)<data.k[0].t)i=1,s=data.k[0].t;else{for(e=0;e<r-1;e+=1){if(t===data.k[e].t){i=e+1,s=data.k[e].t;break}if(t>data.k[e].t&&t<data.k[e+1].t){t-data.k[e].t>data.k[e+1].t-t?(i=e+2,s=data.k[e+1].t):(i=e+1,s=data.k[e].t);break}}-1===i&&(i=e+1,s=data.k[e].t)}else i=0,s=0;var a={};return a.index=i,a.time=s/elem.comp.globalData.frameRate,a}function key(t){var e,i,s;if(!data.k.length||"number"==typeof data.k[0])throw new Error("The property has no keyframe at index "+t);t-=1,e={time:data.k[t].t/elem.comp.globalData.frameRate};var r;for(r=t!==data.k.length-1||data.k[t].h?data.k[t].s:data.k[t-1].e,s=r.length,i=0;i<s;i+=1)e[i]=r[i];return e}function framesToTime(t,e){return e||(e=elem.comp.globalData.frameRate),t/e}function timeToFrames(t,e){return t||0===t||(t=time),e||(e=elem.comp.globalData.frameRate),t*e}function seedRandom(t){BMMath.seedrandom(randSeed+t)}function sourceRectAtTime(){return elem.sourceRectAtTime()}function executeExpression(){if(_needsRandom&&seedRandom(randSeed),this.frameExpressionId!==elem.globalData.frameId||"textSelector"===this.type){if(this.lock)return this.v=duplicatePropertyValue(this.pv,this.mult),!0;"textSelector"===this.type&&(textIndex=this.textIndex,textTotal=this.textTotal,selectorValue=this.selectorValue),thisLayer||(thisLayer=elem.layerInterface,thisComp=elem.comp.compInterface,toWorld=thisLayer.toWorld.bind(thisLayer),fromWorld=thisLayer.fromWorld.bind(thisLayer),fromComp=thisLayer.fromComp.bind(thisLayer),mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null,fromCompToSurface=fromComp),transform||(transform=elem.layerInterface("ADBE Transform Group"),anchorPoint=transform.anchorPoint),4!==elemType||content||(content=thisLayer("ADBE Root Vectors Group")),effect||(effect=thisLayer(4)),hasParent=!(!elem.hierarchy||!elem.hierarchy.length),hasParent&&!parent&&(parent=elem.hierarchy[0].layerInterface),this.lock=!0,this.getPreValue&&this.getPreValue(),value=this.pv,time=this.comp.renderedFrame/this.comp.globalData.frameRate,needsVelocity&&(velocity=velocityAtTime(time)),bindedFn(),this.frameExpressionId=elem.globalData.frameId;var t,e;if(this.mult)if("number"==typeof this.v||this.v instanceof Number||this.v instanceof String||"string"==typeof this.v)this.v*=this.mult;else if(1===this.v.length)this.v=this.v[0]*this.mult;else for(e=this.v.length,value===this.v&&(this.v=2===e?[value[0],value[1]]:[value[0],value[1],value[2]]),t=0;t<e;t+=1)this.v[t]*=this.mult;if(1===this.v.length&&(this.v=this.v[0]),"number"==typeof this.v||this.v instanceof Number||this.v instanceof String||"string"==typeof this.v)this.lastValue!==this.v&&(this.lastValue=this.v,this.mdf=!0);else if(this.v._length)shapesEqual(this.v,this.localShapeCollection.shapes[0])||(this.mdf=!0,this.localShapeCollection.releaseShapes(),this.localShapeCollection.addShape(shape_pool.clone(this.v)));else for(e=this.v.length,t=0;t<e;t+=1)this.v[t]!==this.lastValue[t]&&(this.lastValue[t]=this.v[t],this.mdf=!0);this.lock=!1}}var val=data.x,needsVelocity=/velocity(?![\w\d])/.test(val),_needsRandom=-1!==val.indexOf("random"),elemType=elem.data.ty,transform,content,effect,thisComp=elem.comp,thisProperty=property;elem.comp.frameDuration=1/elem.comp.globalData.frameRate;var inPoint=elem.data.ip/elem.comp.globalData.frameRate,outPoint=elem.data.op/elem.comp.globalData.frameRate,width=elem.data.sw?elem.data.sw:0,height=elem.data.sh?elem.data.sh:0,loopIn,loop_in,loopOut,loop_out,toWorld,fromWorld,fromComp,fromCompToSurface,anchorPoint,thisLayer,thisComp,mask,valueAtTime,velocityAtTime,fn=new Function,fn=eval("[function(){"+val+";if($bm_rt.__shapeObject){this.v=shape_pool.clone($bm_rt.v);}else{this.v=$bm_rt;}}]")[0],bindedFn=fn.bind(this),numKeys=property.kf?data.k.length:0,wiggle=function(t,e){var i,s,r=this.pv.length?this.pv.length:1,a=Array.apply(null,{len:r});for(s=0;s<r;s+=1)a[s]=0;t=5;var n=Math.floor(time*t);for(i=0,s=0;i<n;){for(s=0;s<r;s+=1)a[s]+=-e+2*e*BMMath.random();i+=1}var o=time*t,h=o-Math.floor(o),l=Array.apply({length:r});if(r>1){for(s=0;s<r;s+=1)l[s]=this.pv[s]+a[s]+(-e+2*e*BMMath.random())*h;return l}return this.pv+a[0]+(-e+2*e*BMMath.random())*h}.bind(this);thisProperty.loopIn&&(loopIn=thisProperty.loopIn.bind(thisProperty),loop_in=loopIn),thisProperty.loopOut&&(loopOut=thisProperty.loopOut.bind(thisProperty),loop_out=loopOut);var loopInDuration=function(t,e){return loopIn(t,e,!0)}.bind(this),loopOutDuration=function(t,e){return loopOut(t,e,!0)}.bind(this);this.getValueAtTime&&(valueAtTime=this.getValueAtTime.bind(this)),this.getVelocityAtTime&&(velocityAtTime=this.getVelocityAtTime.bind(this));var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),time,velocity,value,textIndex,textTotal,selectorValue,index=elem.data.ind,hasParent=!(!elem.hierarchy||!elem.hierarchy.length),parent,randSeed=Math.floor(1e6*Math.random());return executeExpression}var ob={},Math=BMMath,window=null,document=null,add=sum,radians_to_degrees=radiansToDegrees,degrees_to_radians=radiansToDegrees,helperLengthArray=[0,0,0,0,0,0];return ob.initiateExpression=initiateExpression,ob}(),ShapeExpressionInterface=function(){function t(t,e,i){return d(t,e,i)}function e(t,e,i){return y(t,e,i)}function i(t,e,i){return g(t,e,i)}function s(t,e,i){return v(t,e,i)}function r(t,e,i){return b(t,e,i)}function a(t,e,i){return E(t,e,i)}function n(t,e,i){return P(t,e,i)}function o(t,e,i){return x(t,e,i)}function h(t,e,i){return S(t,e,i)}function l(t,e,i){return C(t,e,i)}function p(t,e,i){return k(t,e,i)}function m(t,e,i){return A(t,e,i)}function c(t,e,i){var s,r=[],a=t?t.length:0;for(s=0;s<a;s+=1)"gr"==t[s].ty?r.push(ShapeExpressionInterface.createGroupInterface(t[s],e[s],i)):"fl"==t[s].ty?r.push(ShapeExpressionInterface.createFillInterface(t[s],e[s],i)):"st"==t[s].ty?r.push(ShapeExpressionInterface.createStrokeInterface(t[s],e[s],i)):"tm"==t[s].ty?r.push(ShapeExpressionInterface.createTrimInterface(t[s],e[s],i)):"tr"==t[s].ty||("el"==t[s].ty?r.push(ShapeExpressionInterface.createEllipseInterface(t[s],e[s],i)):"sr"==t[s].ty?r.push(ShapeExpressionInterface.createStarInterface(t[s],e[s],i)):"sh"==t[s].ty?r.push(ShapeExpressionInterface.createPathInterface(t[s],e[s],i)):"rc"==t[s].ty?r.push(ShapeExpressionInterface.createRectInterface(t[s],e[s],i)):"rd"==t[s].ty?r.push(ShapeExpressionInterface.createRoundedInterface(t[s],e[s],i)):"rp"==t[s].ty&&r.push(ShapeExpressionInterface.createRepatearInterface(t[s],e[s],i)));return r}var f={createShapeInterface:t,createGroupInterface:e,createTrimInterface:r,createStrokeInterface:s,createTransformInterface:a,createEllipseInterface:n,createStarInterface:o,createRectInterface:h,createRoundedInterface:l,createRepatearInterface:p,createPathInterface:m,createFillInterface:i},d=function(){return function(t,e,i){function s(t){if("number"==typeof t)return r[t-1];for(var e=0,i=r.length;e<i;){if(r[e]._name===t)return r[e];e+=1}}var r;return s.propertyGroup=i,r=c(t,e,s),s}}(),u=function(){return function(t,e,i){var s,r=function(t){for(var e=0,i=s.length;e<i;){if(s[e]._name===t||s[e].mn===t||s[e].propertyIndex===t||s[e].ix===t||s[e].ind===t)return s[e];e+=1}if("number"==typeof t)return s[t-1]};return r.propertyGroup=function(t){return 1===t?r:i(t-1)},s=c(t.it,e.it,r.propertyGroup),r.numProperties=s.length,r.propertyIndex=t.cix,r}}(),y=function(){return function(t,e,i){var s=function(t){switch(t){case"ADBE Vectors Group":case"Contents":case 2:return s.content;case"ADBE Vector Transform Group":case 3:default:return s.transform}};s.propertyGroup=function(t){return 1===t?s:i(t-1)};var r=u(t,e,s.propertyGroup),a=ShapeExpressionInterface.createTransformInterface(t.it[t.it.length-1],e.it[e.it.length-1],s.propertyGroup);return s.content=r,s.transform=a,Object.defineProperty(s,"_name",{get:function(){return t.nm}}),s.numProperties=t.np,s.propertyIndex=t.ix,s.nm=t.nm,s.mn=t.mn,s}}(),g=function(){return function(t,e,i){function s(t){return"Color"===t||"color"===t?s.color:"Opacity"===t||"opacity"===t?s.opacity:void 0}return Object.defineProperty(s,"color",{get:function(){return ExpressionValue(e.c,1/e.c.mult,"color")}}),Object.defineProperty(s,"opacity",{get:function(){return ExpressionValue(e.o,100)}}),Object.defineProperty(s,"_name",{value:t.nm}),Object.defineProperty(s,"mn",{value:t.mn}),e.c.setGroupProperty(i),e.o.setGroupProperty(i),s}}(),v=function(){return function(t,e,i){function s(t){return 1===t?f:i(t-1)}function r(t){return 1===t?h:s(t-1)}function a(t){return"Color"===t||"color"===t?a.color:"Opacity"===t||"opacity"===t?a.opacity:"Stroke Width"===t||"stroke width"===t?a.strokeWidth:void 0}var n,o=t.d?t.d.length:0,h={};for(n=0;n<o;n+=1)!function(i){Object.defineProperty(h,t.d[i].nm,{get:function(){return ExpressionValue(e.d.dataProps[i].p)}})}(n),e.d.dataProps[n].p.setGroupProperty(r);return Object.defineProperty(a,"color",{get:function(){return ExpressionValue(e.c,1/e.c.mult,"color")}}),Object.defineProperty(a,"opacity",{get:function(){return ExpressionValue(e.o,100)}}),Object.defineProperty(a,"strokeWidth",{get:function(){return ExpressionValue(e.w)}}),Object.defineProperty(a,"dash",{get:function(){return h}}),Object.defineProperty(a,"_name",{value:t.nm}),Object.defineProperty(a,"mn",{value:t.mn}),e.c.setGroupProperty(s),e.o.setGroupProperty(s),e.w.setGroupProperty(s),a}}(),b=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return e===t.e.ix||"End"===e||"end"===e?r.end:e===t.s.ix?r.start:e===t.o.ix?r.offset:void 0}return r.propertyIndex=t.ix,e.s.setGroupProperty(s),e.e.setGroupProperty(s),e.o.setGroupProperty(s),r.propertyIndex=t.ix,Object.defineProperty(r,"start",{get:function(){return ExpressionValue(e.s,1/e.s.mult)}}),Object.defineProperty(r,"end",{get:function(){return ExpressionValue(e.e,1/e.e.mult)}}),Object.defineProperty(r,"offset",{get:function(){return ExpressionValue(e.o)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),E=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return t.a.ix===e?r.anchorPoint:t.o.ix===e?r.opacity:t.p.ix===e?r.position:t.r.ix===e?r.rotation:t.s.ix===e?r.scale:t.sk&&t.sk.ix===e?r.skew:t.sa&&t.sa.ix===e?r.skewAxis:"Opacity"===e?r.opacity:"Position"===e?r.position:"Anchor Point"===e?r.anchorPoint:"Scale"===e?r.scale:"Rotation"===e||"ADBE Vector Rotation"===e?r.rotation:"Skew"===e?r.skew:"Skew Axis"===e?r.skewAxis:void 0}e.transform.mProps.o.setGroupProperty(s),e.transform.mProps.p.setGroupProperty(s),e.transform.mProps.a.setGroupProperty(s),e.transform.mProps.s.setGroupProperty(s),e.transform.mProps.r.setGroupProperty(s),e.transform.mProps.sk&&(e.transform.mProps.sk.setGroupProperty(s),e.transform.mProps.sa.setGroupProperty(s)),e.transform.op.setGroupProperty(s),Object.defineProperty(r,"opacity",{get:function(){return ExpressionValue(e.transform.mProps.o,1/e.transform.mProps.o.mult)}}),Object.defineProperty(r,"position",{get:function(){return ExpressionValue(e.transform.mProps.p)}}),Object.defineProperty(r,"anchorPoint",{get:function(){return ExpressionValue(e.transform.mProps.a)}});return Object.defineProperty(r,"scale",{get:function(){return ExpressionValue(e.transform.mProps.s,1/e.transform.mProps.s.mult)}}),Object.defineProperty(r,"rotation",{get:function(){return ExpressionValue(e.transform.mProps.r,1/e.transform.mProps.r.mult)}}),Object.defineProperty(r,"skew",{get:function(){return ExpressionValue(e.transform.mProps.sk)}}),Object.defineProperty(r,"skewAxis",{get:function(){return ExpressionValue(e.transform.mProps.sa)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.ty="tr",r.mn=t.mn,r}}(),P=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return t.p.ix===e?r.position:t.s.ix===e?r.size:void 0}r.propertyIndex=t.ix;var a="tm"===e.sh.ty?e.sh.prop:e.sh;return a.s.setGroupProperty(s),a.p.setGroupProperty(s),Object.defineProperty(r,"size",{get:function(){return ExpressionValue(a.s)}}),Object.defineProperty(r,"position",{get:function(){return ExpressionValue(a.p)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),x=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return t.p.ix===e?r.position:t.r.ix===e?r.rotation:t.pt.ix===e?r.points:t.or.ix===e||"ADBE Vector Star Outer Radius"===e?r.outerRadius:t.os.ix===e?r.outerRoundness:!t.ir||t.ir.ix!==e&&"ADBE Vector Star Inner Radius"!==e?t.is&&t.is.ix===e?r.innerRoundness:void 0:r.innerRadius}var a="tm"===e.sh.ty?e.sh.prop:e.sh;return r.propertyIndex=t.ix,a.or.setGroupProperty(s),a.os.setGroupProperty(s),a.pt.setGroupProperty(s),a.p.setGroupProperty(s),a.r.setGroupProperty(s),t.ir&&(a.ir.setGroupProperty(s),a.is.setGroupProperty(s)),Object.defineProperty(r,"position",{get:function(){return ExpressionValue(a.p)}}),Object.defineProperty(r,"rotation",{get:function(){return ExpressionValue(a.r,1/a.r.mult)}}),Object.defineProperty(r,"points",{get:function(){return ExpressionValue(a.pt)}}),Object.defineProperty(r,"outerRadius",{get:function(){return ExpressionValue(a.or)}}),Object.defineProperty(r,"outerRoundness",{get:function(){return ExpressionValue(a.os)}}),Object.defineProperty(r,"innerRadius",{get:function(){return a.ir?ExpressionValue(a.ir):0}}),Object.defineProperty(r,"innerRoundness",{get:function(){return a.is?ExpressionValue(a.is,1/a.is.mult):0}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),S=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return t.p.ix===e?r.position:t.r.ix===e?r.roundness:t.s.ix===e||"Size"===e?r.size:void 0}var a="tm"===e.sh.ty?e.sh.prop:e.sh;return r.propertyIndex=t.ix,a.p.setGroupProperty(s),a.s.setGroupProperty(s),a.r.setGroupProperty(s),Object.defineProperty(r,"position",{get:function(){return ExpressionValue(a.p)}}),Object.defineProperty(r,"roundness",{get:function(){return ExpressionValue(a.r)}}),Object.defineProperty(r,"size",{get:function(){return ExpressionValue(a.s)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),C=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){if(t.r.ix===e||"Round Corners 1"===e)return r.radius}var a=e;return r.propertyIndex=t.ix,a.rd.setGroupProperty(s),Object.defineProperty(r,"radius",{get:function(){return ExpressionValue(a.rd)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),k=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(e){return t.c.ix===e||"Copies"===e?r.copies:t.o.ix===e||"Offset"===e?r.offset:void 0}var a=e;return r.propertyIndex=t.ix,a.c.setGroupProperty(s),a.o.setGroupProperty(s),Object.defineProperty(r,"copies",{get:function(){return ExpressionValue(a.c)}}),Object.defineProperty(r,"offset",{get:function(){return ExpressionValue(a.o)}}),Object.defineProperty(r,"_name",{get:function(){return t.nm}}),r.mn=t.mn,r}}(),A=function(){return function(t,e,i){function s(t){return 1==t?r:i(--t)}function r(t){if("Shape"===t||"shape"===t||"Path"===t||"path"===t||"ADBE Vector Shape"===t||2===t)return r.path}var a=e.sh;return a.setGroupProperty(s),Object.defineProperty(r,"path",{get:function(){return a.k&&a.getValue(),a}}),Object.defineProperty(r,"shape",{get:function(){return a.k&&a.getValue(),a}}),Object.defineProperty(r,"_name",{value:t.nm}),Object.defineProperty(r,"ix",{value:t.ix}),Object.defineProperty(r,"mn",{value:t.mn}),r}}();return f}(),TextExpressionInterface=function(){return function(t){function e(){}var i;return Object.defineProperty(e,"sourceText",{get:function(){var e=t.textProperty.currentData.t;return void 0!==t.textProperty.currentData.t&&(t.textProperty.currentData.t=void 0,i=new String(e),i.value=e||new String(e)),i}}),e}}(),LayerExpressionInterface=function(){function t(t,e){var i=new Matrix;i.reset();var s;if(s=this._elem.finalTransform.mProp,s.applyToMatrix(i),this._elem.hierarchy&&this._elem.hierarchy.length){var r,a=this._elem.hierarchy.length;for(r=0;r<a;r+=1)this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(i);return i.applyToPointArray(t[0],t[1],t[2]||0)}return i.applyToPointArray(t[0],t[1],t[2]||0)}function e(t,e){var i=new Matrix;i.reset();var s;if(s=this._elem.finalTransform.mProp,s.applyToMatrix(i),this._elem.hierarchy&&this._elem.hierarchy.length){var r,a=this._elem.hierarchy.length;for(r=0;r<a;r+=1)this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(i);return i.inversePoint(t)}return i.inversePoint(t)}function i(t){var e=new Matrix;if(e.reset(),this._elem.finalTransform.mProp.applyToMatrix(e),this._elem.hierarchy&&this._elem.hierarchy.length){var i,s=this._elem.hierarchy.length;for(i=0;i<s;i+=1)this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(e);return e.inversePoint(t)}return e.inversePoint(t)}return function(s){function r(t){n.mask=new MaskManagerInterface(t,s)}function a(t){n.effect=t}function n(t){switch(t){case"ADBE Root Vectors Group":case"Contents":case 2:return n.shapeInterface;case 1:case 6:case"Transform":case"transform":case"ADBE Transform Group":return o;case 4:case"ADBE Effect Parade":return n.effect}}var o=TransformExpressionInterface(s.transform);return n.toWorld=t,n.fromWorld=e,n.toComp=t,n.fromComp=i,n.sourceRectAtTime=s.sourceRectAtTime.bind(s),n._elem=s,Object.defineProperty(n,"hasParent",{get:function(){return!!s.hierarchy}}),Object.defineProperty(n,"parent",{get:function(){return s.hierarchy[0].layerInterface}}),Object.defineProperty(n,"rotation",{get:function(){return o.rotation}}),Object.defineProperty(n,"scale",{get:function(){return o.scale}}),Object.defineProperty(n,"position",{get:function(){return o.position}}),Object.defineProperty(n,"anchorPoint",{get:function(){return o.anchorPoint}}),Object.defineProperty(n,"transform",{get:function(){return o}}),Object.defineProperty(n,"width",{get:function(){return 0===s.data.ty?s.data.w:100}}),Object.defineProperty(n,"height",{get:function(){return 0===s.data.ty?s.data.h:100}}),Object.defineProperty(n,"source",{get:function(){return s.data.refId}}),Object.defineProperty(n,"index",{get:function(){return s.data.ind}}),Object.defineProperty(n,"_name",{value:s.data.nm}),Object.defineProperty(n,"content",{get:function(){return n.shapeInterface}}),Object.defineProperty(n,"active",{get:function(){return s.isVisible}}),Object.defineProperty(n,"text",{get:function(){return n.textInterface}}),n.registerMaskInterface=r,n.registerEffectsInterface=a,n}}(),CompExpressionInterface=function(){return function(t){function e(e){for(var i=0,s=t.layers.length;i<s;){if(t.layers[i].nm===e||t.layers[i].ind===e)return t.elements[i].layerInterface;i+=1}return{active:!1}}return Object.defineProperty(e,"_name",{value:t.data.nm}),e.layer=e,e.pixelAspect=1,e.height=t.globalData.compSize.h,e.width=t.globalData.compSize.w,e.pixelAspect=1,e.frameDuration=1/t.globalData.frameRate,e}}(),TransformExpressionInterface=function(){return function(t){function e(i){switch(i){case"scale":case"Scale":case"ADBE Scale":case 6:return e.scale;case"rotation":case"Rotation":case"ADBE Rotation":case"ADBE Rotate Z":case 10:return e.rotation;case"position":case"Position":case"ADBE Position":case 2:return t.position;case"anchorPoint":case"AnchorPoint":case"Anchor Point":case"ADBE AnchorPoint":case 1:return e.anchorPoint;case"opacity":case"Opacity":case 11:return e.opacity}}return Object.defineProperty(e,"rotation",{get:function(){return t.rotation}}),Object.defineProperty(e,"scale",{get:function(){return t.scale}}),Object.defineProperty(e,"position",{get:function(){return t.position}}),Object.defineProperty(e,"xPosition",{get:function(){return t.xPosition}}),Object.defineProperty(e,"yPosition",{get:function(){return t.yPosition}}),Object.defineProperty(e,"anchorPoint",{get:function(){return t.anchorPoint}}),Object.defineProperty(e,"opacity",{get:function(){return t.opacity}}),Object.defineProperty(e,"skew",{get:function(){return t.skew}}),Object.defineProperty(e,"skewAxis",{get:function(){return t.skewAxis}}),e}}(),ProjectInterface=function(){function t(t){this.compositions.push(t)}return function(){function e(t){for(var e=0,i=this.compositions.length;e<i;){if(this.compositions[e].data&&this.compositions[e].data.nm===t)return this.compositions[e].prepareFrame&&this.compositions[e].prepareFrame(this.currentFrame),this.compositions[e].compInterface;e+=1}}return e.compositions=[],e.currentFrame=0,e.registerComposition=t,e}}(),EffectsExpressionInterface=function(){function t(t,i){if(t.effects){var s,r=[],a=t.data.ef,n=t.effects.effectElements.length;for(s=0;s<n;s+=1)r.push(e(a[s],t.effects.effectElements[s],i,t));return function(e){for(var i=t.data.ef,s=0,a=i.length;s<a;){if(e===i[s].nm||e===i[s].mn||e===i[s].ix)return r[s];s+=1}}}}function e(t,s,r,a){function n(t){return 1===t?p:r(t-1)}var o,h=[],l=t.ef.length;for(o=0;o<l;o+=1)5===t.ef[o].ty?h.push(e(t.ef[o],s.effectElements[o],s.effectElements[o].propertyGroup,a)):h.push(i(s.effectElements[o],t.ef[o].ty,a,n));var p=function(e){for(var i=t.ef,s=0,r=i.length;s<r;){if(e===i[s].nm||e===i[s].mn||e===i[s].ix)return 5===i[s].ty?h[s]:h[s]();s+=1}return h[0]()};return p.propertyGroup=n,"ADBE Color Control"===t.mn&&Object.defineProperty(p,"color",{get:function(){return h[0]()}}),Object.defineProperty(p,"numProperties",{get:function(){return t.np}}),p.active=0!==t.en,p}function i(t,e,i,s){function r(){return 10===e?i.comp.compInterface(t.p.v):ExpressionValue(t.p)}return t.p.setGroupProperty&&t.p.setGroupProperty(s),r}return{createEffectsInterface:t}}(),MaskManagerInterface=function(){function t(t,e){this._mask=t,this._data=e}return Object.defineProperty(t.prototype,"maskPath",{get:function(){return this._mask.prop.k&&this._mask.prop.getValue(),this._mask.prop}}),function(e,i){var s,r=Array.apply(null,{length:e.viewData.length}),a=e.viewData.length;for(s=0;s<a;s+=1)r[s]=new t(e.viewData[s],e.masksProperties[s]);return function(t){for(s=0;s<a;){if(e.masksProperties[s].nm===t)return r[s];s+=1}}}}(),ExpressionValue=function(){return function(t,e,i){var s;t.k&&t.getValue();var r,a,n;if(i){if("color"===i){for(a=4,s=Array.apply(null,{length:a}),n=Array.apply(null,{length:a}),r=0;r<a;r+=1)s[r]=n[r]=e&&r<3?t.v[r]*e:1;s.value=n}}else if("number"==typeof t.v||t.v instanceof Number)s=e?new Number(t.v*e):new Number(t.v),s.value=e?t.v*e:t.v;else{for(a=t.v.length,s=Array.apply(null,{length:a}),n=Array.apply(null,{length:a}),r=0;r<a;r+=1)s[r]=n[r]=e?t.v[r]*e:t.v[r];s.value=n}return s.numKeys=t.keyframes?t.keyframes.length:0,s.key=function(e){return s.numKeys?t.keyframes[e-1].t:0},s.valueAtTime=t.getValueAtTime,s.propertyGroup=t.propertyGroup,s}}();GroupEffect.prototype.getValue=function(){this.mdf=!1;var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.mdf=!!this.dynamicProperties[t].mdf||this.mdf},GroupEffect.prototype.init=function(t,e,i){this.data=t,this.mdf=!1,this.effectElements=[];var s,r,a=this.data.ef.length,n=this.data.ef;for(s=0;s<a;s+=1)switch(n[s].ty){case 0:r=new SliderEffect(n[s],e,i),this.effectElements.push(r);break;case 1:r=new AngleEffect(n[s],e,i),this.effectElements.push(r);break;case 2:r=new ColorEffect(n[s],e,i),this.effectElements.push(r);break;case 3:r=new PointEffect(n[s],e,i),this.effectElements.push(r);break;case 4:case 7:r=new CheckboxEffect(n[s],e,i),this.effectElements.push(r);break;case 10:r=new LayerIndexEffect(n[s],e,i),this.effectElements.push(r);break;case 11:r=new MaskIndexEffect(n[s],e,i),this.effectElements.push(r);break;case 5:r=new EffectsManager(n[s],e,i),this.effectElements.push(r);break;case 6:r=new NoValueEffect(n[s],e,i),this.effectElements.push(r)}};var bodymovinjs={};bodymovinjs.play=play,bodymovinjs.pause=pause,bodymovinjs.setLocationHref=setLocationHref,bodymovinjs.togglePause=togglePause,bodymovinjs.setSpeed=setSpeed,bodymovinjs.setDirection=setDirection,bodymovinjs.stop=stop,bodymovinjs.moveFrame=moveFrame,bodymovinjs.searchAnimations=searchAnimations,bodymovinjs.registerAnimation=registerAnimation,bodymovinjs.loadAnimation=loadAnimation,bodymovinjs.setSubframeRendering=setSubframeRendering,bodymovinjs.resize=resize,bodymovinjs.start=start,bodymovinjs.goToAndStop=goToAndStop,bodymovinjs.destroy=destroy,bodymovinjs.setQuality=setQuality,bodymovinjs.inBrowser=inBrowser,bodymovinjs.installPlugin=installPlugin,bodymovinjs.__getFactory=getFactory,bodymovinjs.version="4.13.0";var standalone="__[STANDALONE]__",animationData="__[ANIMATIONDATA]__",renderer="";if(standalone){var scripts=document.getElementsByTagName("script"),index=scripts.length-1,myScript=scripts[index]||{src:""},queryString=myScript.src.replace(/^[^\?]+\??/,"");renderer=getQueryVariable("renderer")}var readyStateCheckInterval=setInterval(checkReady,100);return bodymovinjs})},{}],2:[function(t,e,i){!function(t,i,s,r){"use strict";function a(t,e,i){return setTimeout(p(t,i),e)}function n(t,e,i){return!!Array.isArray(t)&&(o(t,i[e],i),!0)}function o(t,e,i){var s;if(t)if(t.forEach)t.forEach(e,i);else if(t.length!==r)for(s=0;s<t.length;)e.call(i,t[s],s,t),s++;else for(s in t)t.hasOwnProperty(s)&&e.call(i,t[s],s,t)}function h(e,i,s){var r="DEPRECATED METHOD: "+i+"\n"+s+" AT \n";return function(){var i=new Error("get-stack-trace"),s=i&&i.stack?i.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",a=t.console&&(t.console.warn||t.console.log);return a&&a.call(t.console,r,s),e.apply(this,arguments)}}function l(t,e,i){var s,r=e.prototype;s=t.prototype=Object.create(r),s.constructor=t,s._super=r,i&&mt(s,i)}function p(t,e){return function(){return t.apply(e,arguments)}}function m(t,e){return typeof t==dt?t.apply(e?e[0]||r:r,e):t}function c(t,e){return t===r?e:t}function f(t,e,i){o(g(e),function(e){t.addEventListener(e,i,!1)})}function d(t,e,i){o(g(e),function(e){t.removeEventListener(e,i,!1)})}function u(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1}function y(t,e){return t.indexOf(e)>-1}function g(t){return t.trim().split(/\s+/g)}function v(t,e,i){if(t.indexOf&&!i)return t.indexOf(e);for(var s=0;s<t.length;){if(i&&t[s][i]==e||!i&&t[s]===e)return s;s++}return-1}function b(t){return Array.prototype.slice.call(t,0)}function E(t,e,i){
for(var s=[],r=[],a=0;a<t.length;){var n=e?t[a][e]:t[a];v(r,n)<0&&s.push(t[a]),r[a]=n,a++}return i&&(s=e?s.sort(function(t,i){return t[e]>i[e]}):s.sort()),s}function P(t,e){for(var i,s,a=e[0].toUpperCase()+e.slice(1),n=0;n<ct.length;){if(i=ct[n],(s=i?i+a:e)in t)return s;n++}return r}function x(){return Et++}function S(e){var i=e.ownerDocument||e;return i.defaultView||i.parentWindow||t}function C(t,e){var i=this;this.manager=t,this.callback=e,this.element=t.element,this.target=t.options.inputTarget,this.domHandler=function(e){m(t.options.enable,[t])&&i.handler(e)},this.init()}function k(t){var e=t.options.inputClass;return new(e||(St?O:Ct?H:xt?W:L))(t,A)}function A(t,e,i){var s=i.pointers.length,r=i.changedPointers.length,a=e&At&&s-r==0,n=e&(Mt|Dt)&&s-r==0;i.isFirst=!!a,i.isFinal=!!n,a&&(t.session={}),i.eventType=e,T(t,i),t.emit("hammer.input",i),t.recognize(i),t.session.prevInput=i}function T(t,e){var i=t.session,s=e.pointers,r=s.length;i.firstInput||(i.firstInput=w(e)),r>1&&!i.firstMultiple?i.firstMultiple=w(e):1===r&&(i.firstMultiple=!1);var a=i.firstInput,n=i.firstMultiple,o=n?n.center:a.center,h=e.center=_(s);e.timeStamp=gt(),e.deltaTime=e.timeStamp-a.timeStamp,e.angle=R(o,h),e.distance=V(o,h),M(i,e),e.offsetDirection=F(e.deltaX,e.deltaY);var l=I(e.deltaTime,e.deltaX,e.deltaY);e.overallVelocityX=l.x,e.overallVelocityY=l.y,e.overallVelocity=yt(l.x)>yt(l.y)?l.x:l.y,e.scale=n?B(n.pointers,s):1,e.rotation=n?N(n.pointers,s):0,e.maxPointers=i.prevInput?e.pointers.length>i.prevInput.maxPointers?e.pointers.length:i.prevInput.maxPointers:e.pointers.length,D(i,e);var p=t.element;u(e.srcEvent.target,p)&&(p=e.srcEvent.target),e.target=p}function M(t,e){var i=e.center,s=t.offsetDelta||{},r=t.prevDelta||{},a=t.prevInput||{};e.eventType!==At&&a.eventType!==Mt||(r=t.prevDelta={x:a.deltaX||0,y:a.deltaY||0},s=t.offsetDelta={x:i.x,y:i.y}),e.deltaX=r.x+(i.x-s.x),e.deltaY=r.y+(i.y-s.y)}function D(t,e){var i,s,a,n,o=t.lastInterval||e,h=e.timeStamp-o.timeStamp;if(e.eventType!=Dt&&(h>kt||o.velocity===r)){var l=e.deltaX-o.deltaX,p=e.deltaY-o.deltaY,m=I(h,l,p);s=m.x,a=m.y,i=yt(m.x)>yt(m.y)?m.x:m.y,n=F(l,p),t.lastInterval=e}else i=o.velocity,s=o.velocityX,a=o.velocityY,n=o.direction;e.velocity=i,e.velocityX=s,e.velocityY=a,e.direction=n}function w(t){for(var e=[],i=0;i<t.pointers.length;)e[i]={clientX:ut(t.pointers[i].clientX),clientY:ut(t.pointers[i].clientY)},i++;return{timeStamp:gt(),pointers:e,center:_(e),deltaX:t.deltaX,deltaY:t.deltaY}}function _(t){var e=t.length;if(1===e)return{x:ut(t[0].clientX),y:ut(t[0].clientY)};for(var i=0,s=0,r=0;r<e;)i+=t[r].clientX,s+=t[r].clientY,r++;return{x:ut(i/e),y:ut(s/e)}}function I(t,e,i){return{x:e/t||0,y:i/t||0}}function F(t,e){return t===e?wt:yt(t)>=yt(e)?t<0?_t:It:e<0?Ft:Vt}function V(t,e,i){i||(i=Lt);var s=e[i[0]]-t[i[0]],r=e[i[1]]-t[i[1]];return Math.sqrt(s*s+r*r)}function R(t,e,i){i||(i=Lt);var s=e[i[0]]-t[i[0]],r=e[i[1]]-t[i[1]];return 180*Math.atan2(r,s)/Math.PI}function N(t,e){return R(e[1],e[0],Ot)+R(t[1],t[0],Ot)}function B(t,e){return V(e[0],e[1],Ot)/V(t[0],t[1],Ot)}function L(){this.evEl=jt,this.evWin=Ht,this.pressed=!1,C.apply(this,arguments)}function O(){this.evEl=qt,this.evWin=Yt,C.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function G(){this.evTarget=$t,this.evWin=Ut,this.started=!1,C.apply(this,arguments)}function j(t,e){var i=b(t.touches),s=b(t.changedTouches);return e&(Mt|Dt)&&(i=E(i.concat(s),"identifier",!0)),[i,s]}function H(){this.evTarget=Jt,this.targetIds={},C.apply(this,arguments)}function z(t,e){var i=b(t.touches),s=this.targetIds;if(e&(At|Tt)&&1===i.length)return s[i[0].identifier]=!0,[i,i];var r,a,n=b(t.changedTouches),o=[],h=this.target;if(a=i.filter(function(t){return u(t.target,h)}),e===At)for(r=0;r<a.length;)s[a[r].identifier]=!0,r++;for(r=0;r<n.length;)s[n[r].identifier]&&o.push(n[r]),e&(Mt|Dt)&&delete s[n[r].identifier],r++;return o.length?[E(a.concat(o),"identifier",!0),o]:void 0}function W(){C.apply(this,arguments);var t=p(this.handler,this);this.touch=new H(this.manager,t),this.mouse=new L(this.manager,t),this.primaryTouch=null,this.lastTouches=[]}function q(t,e){t&At?(this.primaryTouch=e.changedPointers[0].identifier,Y.call(this,e)):t&(Mt|Dt)&&Y.call(this,e)}function Y(t){var e=t.changedPointers[0];if(e.identifier===this.primaryTouch){var i={x:e.clientX,y:e.clientY};this.lastTouches.push(i);var s=this.lastTouches,r=function(){var t=s.indexOf(i);t>-1&&s.splice(t,1)};setTimeout(r,Kt)}}function X(t){for(var e=t.srcEvent.clientX,i=t.srcEvent.clientY,s=0;s<this.lastTouches.length;s++){var r=this.lastTouches[s],a=Math.abs(e-r.x),n=Math.abs(i-r.y);if(a<=Qt&&n<=Qt)return!0}return!1}function $(t,e){this.manager=t,this.set(e)}function U(t){if(y(t,re))return re;var e=y(t,ae),i=y(t,ne);return e&&i?re:e||i?e?ae:ne:y(t,se)?se:ie}function Z(t){this.options=mt({},this.defaults,t||{}),this.id=x(),this.manager=null,this.options.enable=c(this.options.enable,!0),this.state=he,this.simultaneous={},this.requireFail=[]}function J(t){return t&fe?"cancel":t&me?"end":t&pe?"move":t&le?"start":""}function K(t){return t==Vt?"down":t==Ft?"up":t==_t?"left":t==It?"right":""}function Q(t,e){var i=e.manager;return i?i.get(t):t}function tt(){Z.apply(this,arguments)}function et(){tt.apply(this,arguments),this.pX=null,this.pY=null}function it(){tt.apply(this,arguments)}function st(){Z.apply(this,arguments),this._timer=null,this._input=null}function rt(){tt.apply(this,arguments)}function at(){tt.apply(this,arguments)}function nt(){Z.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ot(t,e){return e=e||{},e.recognizers=c(e.recognizers,ot.defaults.preset),new ht(t,e)}function ht(t,e){this.options=mt({},ot.defaults,e||{}),this.options.inputTarget=this.options.inputTarget||t,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=t,this.input=k(this),this.touchAction=new $(this,this.options.touchAction),lt(this,!0),o(this.options.recognizers,function(t){var e=this.add(new t[0](t[1]));t[2]&&e.recognizeWith(t[2]),t[3]&&e.requireFailure(t[3])},this)}function lt(t,e){var i=t.element;if(i.style){var s;o(t.options.cssProps,function(r,a){s=P(i.style,a),e?(t.oldCssProps[s]=i.style[s],i.style[s]=r):i.style[s]=t.oldCssProps[s]||""}),e||(t.oldCssProps={})}}function pt(t,e){var s=i.createEvent("Event");s.initEvent(t,!0,!0),s.gesture=e,e.target.dispatchEvent(s)}var mt,ct=["","webkit","Moz","MS","ms","o"],ft=i.createElement("div"),dt="function",ut=Math.round,yt=Math.abs,gt=Date.now;mt="function"!=typeof Object.assign?function(t){if(t===r||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var s=arguments[i];if(s!==r&&null!==s)for(var a in s)s.hasOwnProperty(a)&&(e[a]=s[a])}return e}:Object.assign;var vt=h(function(t,e,i){for(var s=Object.keys(e),a=0;a<s.length;)(!i||i&&t[s[a]]===r)&&(t[s[a]]=e[s[a]]),a++;return t},"extend","Use `assign`."),bt=h(function(t,e){return vt(t,e,!0)},"merge","Use `assign`."),Et=1,Pt=/mobile|tablet|ip(ad|hone|od)|android/i,xt="ontouchstart"in t,St=P(t,"PointerEvent")!==r,Ct=xt&&Pt.test(navigator.userAgent),kt=25,At=1,Tt=2,Mt=4,Dt=8,wt=1,_t=2,It=4,Ft=8,Vt=16,Rt=_t|It,Nt=Ft|Vt,Bt=Rt|Nt,Lt=["x","y"],Ot=["clientX","clientY"];C.prototype={handler:function(){},init:function(){this.evEl&&f(this.element,this.evEl,this.domHandler),this.evTarget&&f(this.target,this.evTarget,this.domHandler),this.evWin&&f(S(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&d(this.element,this.evEl,this.domHandler),this.evTarget&&d(this.target,this.evTarget,this.domHandler),this.evWin&&d(S(this.element),this.evWin,this.domHandler)}};var Gt={mousedown:At,mousemove:Tt,mouseup:Mt},jt="mousedown",Ht="mousemove mouseup";l(L,C,{handler:function(t){var e=Gt[t.type];e&At&&0===t.button&&(this.pressed=!0),e&Tt&&1!==t.which&&(e=Mt),this.pressed&&(e&Mt&&(this.pressed=!1),this.callback(this.manager,e,{pointers:[t],changedPointers:[t],pointerType:"mouse",srcEvent:t}))}});var zt={pointerdown:At,pointermove:Tt,pointerup:Mt,pointercancel:Dt,pointerout:Dt},Wt={2:"touch",3:"pen",4:"mouse",5:"kinect"},qt="pointerdown",Yt="pointermove pointerup pointercancel";t.MSPointerEvent&&!t.PointerEvent&&(qt="MSPointerDown",Yt="MSPointerMove MSPointerUp MSPointerCancel"),l(O,C,{handler:function(t){var e=this.store,i=!1,s=t.type.toLowerCase().replace("ms",""),r=zt[s],a=Wt[t.pointerType]||t.pointerType,n="touch"==a,o=v(e,t.pointerId,"pointerId");r&At&&(0===t.button||n)?o<0&&(e.push(t),o=e.length-1):r&(Mt|Dt)&&(i=!0),o<0||(e[o]=t,this.callback(this.manager,r,{pointers:e,changedPointers:[t],pointerType:a,srcEvent:t}),i&&e.splice(o,1))}});var Xt={touchstart:At,touchmove:Tt,touchend:Mt,touchcancel:Dt},$t="touchstart",Ut="touchstart touchmove touchend touchcancel";l(G,C,{handler:function(t){var e=Xt[t.type];if(e===At&&(this.started=!0),this.started){var i=j.call(this,t,e);e&(Mt|Dt)&&i[0].length-i[1].length==0&&(this.started=!1),this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:"touch",srcEvent:t})}}});var Zt={touchstart:At,touchmove:Tt,touchend:Mt,touchcancel:Dt},Jt="touchstart touchmove touchend touchcancel";l(H,C,{handler:function(t){var e=Zt[t.type],i=z.call(this,t,e);i&&this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:"touch",srcEvent:t})}});var Kt=2500,Qt=25;l(W,C,{handler:function(t,e,i){var s="touch"==i.pointerType,r="mouse"==i.pointerType;if(!(r&&i.sourceCapabilities&&i.sourceCapabilities.firesTouchEvents)){if(s)q.call(this,e,i);else if(r&&X.call(this,i))return;this.callback(t,e,i)}},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var te=P(ft.style,"touchAction"),ee=te!==r,ie="auto",se="manipulation",re="none",ae="pan-x",ne="pan-y",oe=function(){if(!ee)return!1;var e={},i=t.CSS&&t.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach(function(s){e[s]=!i||t.CSS.supports("touch-action",s)}),e}();$.prototype={set:function(t){"compute"==t&&(t=this.compute()),ee&&this.manager.element.style&&oe[t]&&(this.manager.element.style[te]=t),this.actions=t.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var t=[];return o(this.manager.recognizers,function(e){m(e.options.enable,[e])&&(t=t.concat(e.getTouchAction()))}),U(t.join(" "))},preventDefaults:function(t){var e=t.srcEvent,i=t.offsetDirection;if(this.manager.session.prevented)return void e.preventDefault();var s=this.actions,r=y(s,re)&&!oe[re],a=y(s,ne)&&!oe[ne],n=y(s,ae)&&!oe[ae];if(r){var o=1===t.pointers.length,h=t.distance<2,l=t.deltaTime<250;if(o&&h&&l)return}return n&&a?void 0:r||a&&i&Rt||n&&i&Nt?this.preventSrc(e):void 0},preventSrc:function(t){this.manager.session.prevented=!0,t.preventDefault()}};var he=1,le=2,pe=4,me=8,ce=me,fe=16;Z.prototype={defaults:{},set:function(t){return mt(this.options,t),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(t){if(n(t,"recognizeWith",this))return this;var e=this.simultaneous;return t=Q(t,this),e[t.id]||(e[t.id]=t,t.recognizeWith(this)),this},dropRecognizeWith:function(t){return n(t,"dropRecognizeWith",this)?this:(t=Q(t,this),delete this.simultaneous[t.id],this)},requireFailure:function(t){if(n(t,"requireFailure",this))return this;var e=this.requireFail;return t=Q(t,this),-1===v(e,t)&&(e.push(t),t.requireFailure(this)),this},dropRequireFailure:function(t){if(n(t,"dropRequireFailure",this))return this;t=Q(t,this);var e=v(this.requireFail,t);return e>-1&&this.requireFail.splice(e,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(t){return!!this.simultaneous[t.id]},emit:function(t){function e(e){i.manager.emit(e,t)}var i=this,s=this.state;s<me&&e(i.options.event+J(s)),e(i.options.event),t.additionalEvent&&e(t.additionalEvent),s>=me&&e(i.options.event+J(s))},tryEmit:function(t){if(this.canEmit())return this.emit(t);this.state=32},canEmit:function(){for(var t=0;t<this.requireFail.length;){if(!(this.requireFail[t].state&(32|he)))return!1;t++}return!0},recognize:function(t){var e=mt({},t);if(!m(this.options.enable,[this,e]))return this.reset(),void(this.state=32);this.state&(ce|fe|32)&&(this.state=he),this.state=this.process(e),this.state&(le|pe|me|fe)&&this.tryEmit(e)},process:function(t){},getTouchAction:function(){},reset:function(){}},l(tt,Z,{defaults:{pointers:1},attrTest:function(t){var e=this.options.pointers;return 0===e||t.pointers.length===e},process:function(t){var e=this.state,i=t.eventType,s=e&(le|pe),r=this.attrTest(t);return s&&(i&Dt||!r)?e|fe:s||r?i&Mt?e|me:e&le?e|pe:le:32}}),l(et,tt,{defaults:{event:"pan",threshold:10,pointers:1,direction:Bt},getTouchAction:function(){var t=this.options.direction,e=[];return t&Rt&&e.push(ne),t&Nt&&e.push(ae),e},directionTest:function(t){var e=this.options,i=!0,s=t.distance,r=t.direction,a=t.deltaX,n=t.deltaY;return r&e.direction||(e.direction&Rt?(r=0===a?wt:a<0?_t:It,i=a!=this.pX,s=Math.abs(t.deltaX)):(r=0===n?wt:n<0?Ft:Vt,i=n!=this.pY,s=Math.abs(t.deltaY))),t.direction=r,i&&s>e.threshold&&r&e.direction},attrTest:function(t){return tt.prototype.attrTest.call(this,t)&&(this.state&le||!(this.state&le)&&this.directionTest(t))},emit:function(t){this.pX=t.deltaX,this.pY=t.deltaY;var e=K(t.direction);e&&(t.additionalEvent=this.options.event+e),this._super.emit.call(this,t)}}),l(it,tt,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[re]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.scale-1)>this.options.threshold||this.state&le)},emit:function(t){if(1!==t.scale){var e=t.scale<1?"in":"out";t.additionalEvent=this.options.event+e}this._super.emit.call(this,t)}}),l(st,Z,{defaults:{event:"press",pointers:1,time:251,threshold:9},getTouchAction:function(){return[ie]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,s=t.distance<e.threshold,r=t.deltaTime>e.time;if(this._input=t,!s||!i||t.eventType&(Mt|Dt)&&!r)this.reset();else if(t.eventType&At)this.reset(),this._timer=a(function(){this.state=ce,this.tryEmit()},e.time,this);else if(t.eventType&Mt)return ce;return 32},reset:function(){clearTimeout(this._timer)},emit:function(t){this.state===ce&&(t&&t.eventType&Mt?this.manager.emit(this.options.event+"up",t):(this._input.timeStamp=gt(),this.manager.emit(this.options.event,this._input)))}}),l(rt,tt,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[re]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.rotation)>this.options.threshold||this.state&le)}}),l(at,tt,{defaults:{event:"swipe",threshold:10,velocity:.3,direction:Rt|Nt,pointers:1},getTouchAction:function(){return et.prototype.getTouchAction.call(this)},attrTest:function(t){var e,i=this.options.direction;return i&(Rt|Nt)?e=t.overallVelocity:i&Rt?e=t.overallVelocityX:i&Nt&&(e=t.overallVelocityY),this._super.attrTest.call(this,t)&&i&t.offsetDirection&&t.distance>this.options.threshold&&t.maxPointers==this.options.pointers&&yt(e)>this.options.velocity&&t.eventType&Mt},emit:function(t){var e=K(t.offsetDirection);e&&this.manager.emit(this.options.event+e,t),this.manager.emit(this.options.event,t)}}),l(nt,Z,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return[se]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,s=t.distance<e.threshold,r=t.deltaTime<e.time;if(this.reset(),t.eventType&At&&0===this.count)return this.failTimeout();if(s&&r&&i){if(t.eventType!=Mt)return this.failTimeout();var n=!this.pTime||t.timeStamp-this.pTime<e.interval,o=!this.pCenter||V(this.pCenter,t.center)<e.posThreshold;this.pTime=t.timeStamp,this.pCenter=t.center,o&&n?this.count+=1:this.count=1,this._input=t;if(0===this.count%e.taps)return this.hasRequireFailures()?(this._timer=a(function(){this.state=ce,this.tryEmit()},e.interval,this),le):ce}return 32},failTimeout:function(){return this._timer=a(function(){this.state=32},this.options.interval,this),32},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==ce&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ot.VERSION="2.0.7",ot.defaults={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,preset:[[rt,{enable:!1}],[it,{enable:!1},["rotate"]],[at,{direction:Rt}],[et,{direction:Rt},["swipe"]],[nt],[nt,{event:"doubletap",taps:2},["tap"]],[st]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};ht.prototype={set:function(t){return mt(this.options,t),t.touchAction&&this.touchAction.update(),t.inputTarget&&(this.input.destroy(),this.input.target=t.inputTarget,this.input.init()),this},stop:function(t){this.session.stopped=t?2:1},recognize:function(t){var e=this.session;if(!e.stopped){this.touchAction.preventDefaults(t);var i,s=this.recognizers,r=e.curRecognizer;(!r||r&&r.state&ce)&&(r=e.curRecognizer=null);for(var a=0;a<s.length;)i=s[a],2===e.stopped||r&&i!=r&&!i.canRecognizeWith(r)?i.reset():i.recognize(t),!r&&i.state&(le|pe|me)&&(r=e.curRecognizer=i),a++}},get:function(t){if(t instanceof Z)return t;for(var e=this.recognizers,i=0;i<e.length;i++)if(e[i].options.event==t)return e[i];return null},add:function(t){if(n(t,"add",this))return this;var e=this.get(t.options.event);return e&&this.remove(e),this.recognizers.push(t),t.manager=this,this.touchAction.update(),t},remove:function(t){if(n(t,"remove",this))return this;if(t=this.get(t)){var e=this.recognizers,i=v(e,t);-1!==i&&(e.splice(i,1),this.touchAction.update())}return this},on:function(t,e){if(t!==r&&e!==r){var i=this.handlers;return o(g(t),function(t){i[t]=i[t]||[],i[t].push(e)}),this}},off:function(t,e){if(t!==r){var i=this.handlers;return o(g(t),function(t){e?i[t]&&i[t].splice(v(i[t],e),1):delete i[t]}),this}},emit:function(t,e){this.options.domEvents&&pt(t,e);var i=this.handlers[t]&&this.handlers[t].slice();if(i&&i.length){e.type=t,e.preventDefault=function(){e.srcEvent.preventDefault()};for(var s=0;s<i.length;)i[s](e),s++}},destroy:function(){this.element&&lt(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},mt(ot,{INPUT_START:At,INPUT_MOVE:Tt,INPUT_END:Mt,INPUT_CANCEL:Dt,STATE_POSSIBLE:he,STATE_BEGAN:le,STATE_CHANGED:pe,STATE_ENDED:me,STATE_RECOGNIZED:ce,STATE_CANCELLED:fe,STATE_FAILED:32,DIRECTION_NONE:wt,DIRECTION_LEFT:_t,DIRECTION_RIGHT:It,DIRECTION_UP:Ft,DIRECTION_DOWN:Vt,DIRECTION_HORIZONTAL:Rt,DIRECTION_VERTICAL:Nt,DIRECTION_ALL:Bt,Manager:ht,Input:C,TouchAction:$,TouchInput:H,MouseInput:L,PointerEventInput:O,TouchMouseInput:W,SingleTouchInput:G,Recognizer:Z,AttrRecognizer:tt,Tap:nt,Pan:et,Swipe:at,Pinch:it,Rotate:rt,Press:st,on:f,off:d,each:o,merge:bt,extend:vt,assign:mt,inherit:l,bindFn:p,prefixed:P}),(void 0!==t?t:"undefined"!=typeof self?self:{}).Hammer=ot,"function"==typeof define&&define.amd?define(function(){return ot}):void 0!==e&&e.exports?e.exports=ot:t.Hammer=ot}(window,document)},{}],3:[function(t,e,i){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function t(e){s(this,t),window.addEventListener("scroll",function(){e.$container.getBoundingClientRect().y<70&&e.$container.getBoundingClientRect().y>-e.$container.getBoundingClientRect().height?e.$animate.forEach(function(t){t.classList.add(e.animation)}):e.$animate.forEach(function(t){t.classList.remove(e.animation)})})};e.exports=r},{}],4:[function(t,e,i){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,i,s){return i&&t(e.prototype,i),s&&t(e,s),e}}(),a=t("hammerjs"),n=function(){function t(e){var i=this;s(this,t),this.index=0,this.$container=e.$container,this.$controls=document.querySelectorAll(".colors__controls"),this.$images=document.querySelectorAll(".colors__imageContainer"),this.$image=document.querySelector(".colors__images"),this.$diamond=document.querySelector(".colors__diamond"),this.$diamondText=document.querySelector(".colors__number"),this.$texts=document.querySelectorAll(".colors__textContainer"),this.$text=document.querySelectorAll(".colors__text"),this.$backgroundDivs=document.querySelectorAll(".background div:not(.background__circle)"),this.$circles=document.querySelectorAll(".background__circle"),this.quantity=this.$images.length,this.swiped=!1,this.colors=["#FFFFFF","#56FFA7","#56F0FF","#FF7029","#FFD500"],this.backgroundColors=["#595959","#244028","#243540","#402B24","#403B24"],this.swipes=new a(this.$image),this.swipes.on("panleft",function(t){i.index+1<=i.quantity-1&&0==i.swiped&&(i.index++,i.changeSlide())}),this.swipes.on("panright",function(t){i.index-1>=0&&0==i.swiped&&(i.index--,i.changeSlide())}),this.changeSlide(),this.$controls.forEach(function(t,e){t.addEventListener("click",function(){i.index=e,i.changeSlide()})}),window.addEventListener("scroll",function(){i.check()})}return r(t,[{key:"changeSlide",value:function(){var t=this;this.swiped=!0,document.querySelector(".colors__controls--active").classList.remove("colors__controls--active"),this.$controls[this.index].classList.add("colors__controls--active"),document.querySelector(".colors__imageContainer--active").classList.remove("colors__imageContainer--active"),this.$images[this.index].classList.add("colors__imageContainer--active"),this.$diamondText.innerHTML=this.index+1,document.querySelector(".colors__textContainer--active").classList.remove("colors__textContainer--active"),this.$texts[this.index].classList.add("colors__textContainer--active"),this.$text.forEach(function(e){e.style.color=t.colors[t.index]}),this.check(),this.$diamond.style.borderColor=this.colors[this.index],window.setTimeout(function(){t.swiped=!1},1500)}},{key:"check",value:function(){var t=this;this.$container.getBoundingClientRect().y<190&&this.$container.getBoundingClientRect().y>300-this.$container.getBoundingClientRect().height?(this.$backgroundDivs.forEach(function(e){e.style.backgroundColor=t.backgroundColors[t.index]}),this.$circles.forEach(function(e){e.style.borderColor=t.backgroundColors[t.index]})):(this.$backgroundDivs.forEach(function(t){t.style.backgroundColor="#403524"}),this.$circles.forEach(function(t){t.style.borderColor="#403524"}))}}]),t}();e.exports=n},{hammerjs:2}],5:[function(t,e,i){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,i,s){return i&&t(e.prototype,i),s&&t(e,s),e}}(),a=function(){function t(e){var i=this;s(this,t),this.audio=new Audio(e.link),this.audio.autoplay=!0,this.params=e,null!==localStorage.getItem("audio")?(this.state=JSON.parse(localStorage.getItem("audio")),this.state=this.state?this.state=!1:this.state=!0):(this.state=!0,localStorage.setItem("audio",this.state)),this.mute(),e.$el.addEventListener("click",function(){i.mute()})}return r(t,[{key:"mute",value:function(){1==this.state?(this.params.$icon.src="/assets/img/cross.png",this.audio.pause(),this.audio.volume=0,this.state=!1,localStorage.setItem("audio",this.state)):(this.params.$icon.src="/assets/img/sound.gif",this.audio.play(),this.audio.volume=1,this.state=!0,localStorage.setItem("audio",this.state))}}]),t}();e.exports=a},{}],6:[function(t,e,i){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){function t(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,i,s){return i&&t(e.prototype,i),s&&t(e,s),e}}(),a=function(){function t(e){var i=this;s(this,t),this.params=e,this.$elements=new Object,this.refreshProperties(),this.init(),window.setInterval(function(){i.init()},500)}return r(t,[{key:"init",value:function(){this.refreshProperties(),window.addEventListener("scroll",this.check())}},{key:"refreshProperties",value:function(){this.$elements.hidden=document.querySelectorAll("."+this.params.hidden),this.height=window.innerHeight}},{key:"check",value:function(){var t=this;this.$elements.hidden.forEach(function(e){e.getBoundingClientRect().top-t.height<=0&&(e.className=e.className.replace(t.params.hidden,t.params.appeared))})}}]),t}();e.exports=a},{}],7:[function(t,e,i){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}var r=t("./components/scrollappearing"),a=s(r),n=t("./components/appear"),o=s(n),h=t("./components/carousel"),l=s(h),p=t("./components/music"),m=s(p),c=t("bodymovin"),f=s(c);new a.default({hidden:"hidden",appeared:"appeared"}),new o.default({$container:document.querySelector(".box"),$animate:document.querySelectorAll(".background__circle"),animation:"opacity"}),new l.default({$container:document.querySelector(".colors")}),new m.default({link:"/assets/sounds/background.mp3",$el:document.querySelector(".audio__button"),$icon:document.querySelector(".audio__icon")}),f.default.loadAnimation({container:document.querySelector(".loader"),renderer:"svg",autoplay:!0,path:"/assets/data/loader.json"});window.onload=function(){setTimeout(function(){document.querySelector(".loader").classList.add("removed"),setTimeout(function(){document.querySelector(".loader").style.display="none"},2e3)},2500)}},{"./components/appear":3,"./components/carousel":4,"./components/music":5,"./components/scrollappearing":6,bodymovin:1}]},{},[7]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZSIsInQiLCJuIiwiciIsInMiLCJvIiwidSIsImEiLCJyZXF1aXJlIiwiaSIsImYiLCJFcnJvciIsImNvZGUiLCJsIiwiZXhwb3J0cyIsImNhbGwiLCJsZW5ndGgiLCIxIiwibW9kdWxlIiwicm9vdCIsImZhY3RvcnkiLCJkZWZpbmUiLCJhbWQiLCJib2R5bW92aW4iLCJ3aW5kb3ciLCJQcm9qZWN0SW50ZXJmYWNlIiwicm91bmRWYWx1ZXMiLCJmbGFnIiwiYm1fcm5kIiwiTWF0aCIsInJvdW5kIiwidmFsIiwicm91bmRUbzJEZWNpbWFscyIsInJvdW5kVG8zRGVjaW1hbHMiLCJzdHlsZURpdiIsImVsZW1lbnQiLCJzdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsImRpc3BsYXkiLCJ0cmFuc2Zvcm1PcmlnaW4iLCJ3ZWJraXRUcmFuc2Zvcm1PcmlnaW4iLCJiYWNrZmFjZVZpc2liaWxpdHkiLCJ3ZWJraXRCYWNrZmFjZVZpc2liaWxpdHkiLCJ0cmFuc2Zvcm1TdHlsZSIsIndlYmtpdFRyYW5zZm9ybVN0eWxlIiwibW96VHJhbnNmb3JtU3R5bGUiLCJzdHlsZVVuc2VsZWN0YWJsZURpdiIsInVzZXJTZWxlY3QiLCJNb3pVc2VyU2VsZWN0Iiwid2Via2l0VXNlclNlbGVjdCIsIm9Vc2VyU2VsZWN0IiwiQk1FbnRlckZyYW1lRXZlbnQiLCJjIiwiZCIsInRoaXMiLCJ0eXBlIiwiY3VycmVudFRpbWUiLCJ0b3RhbFRpbWUiLCJkaXJlY3Rpb24iLCJCTUNvbXBsZXRlRXZlbnQiLCJCTUNvbXBsZXRlTG9vcEV2ZW50IiwiY3VycmVudExvb3AiLCJ0b3RhbExvb3BzIiwiQk1TZWdtZW50U3RhcnRFdmVudCIsImZpcnN0RnJhbWUiLCJ0b3RhbEZyYW1lcyIsIkJNRGVzdHJveUV2ZW50IiwidGFyZ2V0IiwiX2FkZEV2ZW50TGlzdGVuZXIiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsIl9jYnMiLCJwdXNoIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJfcmVtb3ZlRXZlbnRMaXN0ZW5lciIsImxlbiIsInNwbGljZSIsIl90cmlnZ2VyRXZlbnQiLCJhcmdzIiwicmFuZG9tU3RyaW5nIiwiY2hhcnMiLCJ1bmRlZmluZWQiLCJyZXN1bHQiLCJyYW5kb20iLCJIU1Z0b1JHQiIsImgiLCJ2IiwiZyIsImIiLCJwIiwicSIsImFyZ3VtZW50cyIsImZsb29yIiwiUkdCdG9IU1YiLCJtYXgiLCJtaW4iLCJhZGRTYXR1cmF0aW9uVG9SR0IiLCJjb2xvciIsIm9mZnNldCIsImhzdiIsImFkZEJyaWdodG5lc3NUb1JHQiIsImFkZEh1ZVRvUkdCIiwiY29tcG9uZW50VG9IZXgiLCJoZXgiLCJ0b1N0cmluZyIsImZpbGxUb1JnYmEiLCJhbHBoYSIsImNhY2hlZENvbG9ycyIsImV4ZWMiLCJwYXJzZUludCIsIlJlbmRlcmVkRnJhbWUiLCJ0ciIsIml0ZXJhdGVEeW5hbWljUHJvcGVydGllcyIsIm51bSIsImR5bmFtaWNQcm9wZXJ0aWVzIiwiZ2V0VmFsdWUiLCJyZXZlcnNlUGF0aCIsInBhdGhzIiwibmV3SSIsIm5ld08iLCJuZXdWIiwibmV3UGF0aHMiLCJpbml0IiwiY250IiwiTWF0cml4IiwiY3JlYXRlRWxlbWVudCIsInBhcmVudCIsImNoaWxkIiwicGFyYW1zIiwiaW5zdGFuY2UiLCJPYmplY3QiLCJjcmVhdGUiLCJwcm90b3R5cGUiLCJnZXRUeXBlIiwiY29uc3RydWN0b3IiLCJfcGFyZW50IiwiZXh0ZW5kUHJvdG90eXBlIiwic291cmNlIiwiZGVzdGluYXRpb24iLCJhdHRyIiwiaGFzT3duUHJvcGVydHkiLCJiZXpGdW5jdGlvbiIsInBvaW50T25MaW5lMkQiLCJ4MSIsInkxIiwieDIiLCJ5MiIsIngzIiwieTMiLCJkZXQxIiwicG9pbnRPbkxpbmUzRCIsInoxIiwiejIiLCJ6MyIsImRpZmZEaXN0IiwiZGlzdDEiLCJzcXJ0IiwicG93IiwiZGlzdDIiLCJkaXN0MyIsImdldFNlZ21lbnRzTGVuZ3RoIiwic2hhcGVEYXRhIiwiY2xvc2VkIiwicGF0aFYiLCJwYXRoTyIsInBhdGhJIiwiX2xlbmd0aCIsImxlbmd0aHMiLCJ0b3RhbExlbmd0aCIsImdldEJlemllckxlbmd0aCIsImFkZGVkTGVuZ3RoIiwiQmV6aWVyRGF0YSIsInNlZ21lbnRMZW5ndGgiLCJwb2ludHMiLCJBcnJheSIsIlBvaW50RGF0YSIsInBhcnRpYWwiLCJwb2ludCIsInBhcnRpYWxMZW5ndGgiLCJnZXREaXN0YW5jZVBlcmMiLCJwZXJjIiwiYmV6aWVyRGF0YSIsInNlZ21lbnRzIiwiaW5pdFBvcyIsImJtX2Zsb29yIiwibGVuZ3RoUG9zIiwibFBlcmMiLCJkaXIiLCJTZWdtZW50UG9pbnRzIiwicHQxIiwicHQyIiwicHQzIiwicHQ0IiwiZ2V0UG9pbnRJblNlZ21lbnQiLCJwZXJjZW50IiwidDEiLCJ1MSIsImdldE5ld1NlZ21lbnQiLCJzdGFydFBlcmMiLCJlbmRQZXJjIiwicHRzIiwidDAiLCJ1MCIsIlNlZ21lbnQiLCJrIiwicHRDb29yZCIsInB0RGlzdGFuY2UiLCJjdXJ2ZVNlZ21lbnRzIiwiZGVmYXVsdEN1cnZlU2VnbWVudHMiLCJsYXN0UG9pbnQiLCJsZW5ndGhEYXRhIiwiYm1fcG93IiwiYm1fc3FydCIsImJ1aWxkQmV6aWVyRGF0YSIsInN0b3JlZERhdGEiLCJrZXlEYXRhIiwidG8iLCJ0aSIsImJlemllck5hbWUiLCJqb2luIiwicmVwbGFjZSIsImRhdGFGdW5jdGlvbk1hbmFnZXIiLCJjb21wbGV0ZUxheWVycyIsImxheWVycyIsImNvbXBzIiwiZm9udE1hbmFnZXIiLCJsYXllckRhdGEiLCJqIiwiakxlbiIsImtMZW4iLCJjb21wbGV0ZWQiLCJ0dCIsInRkIiwiaGFzTWFzayIsIm1hc2tQcm9wcyIsIm1hc2tzUHJvcGVydGllcyIsInB0IiwiY29udmVydFBhdGhzVG9BYnNvbHV0ZVZhbHVlcyIsInR5IiwiZmluZENvbXBMYXllcnMiLCJyZWZJZCIsImNvbXBsZXRlU2hhcGVzIiwic2hhcGVzIiwiY29tcGxldGVUZXh0IiwiaWQiLCJfX3VzZWQiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJhcnIiLCJrcyIsIml0IiwicGF0aCIsImNoZWNrVmVyc2lvbiIsIm1pbmltdW0iLCJhbmltVmVyc2lvblN0cmluZyIsImFuaW1WZXJzaW9uIiwic3BsaXQiLCJjb21wbGV0ZURhdGEiLCJhbmltYXRpb25EYXRhIiwiX19jb21wbGV0ZSIsImNoZWNrQ29sb3JzIiwiY2hlY2tUZXh0IiwiY2hlY2tDaGFycyIsImNoZWNrU2hhcGVzIiwiYXNzZXRzIiwiZGF0YSIsInNpbmdsZVNoYXBlIiwidXBkYXRlVGV4dExheWVyIiwidGV4dExheWVyIiwiZG9jdW1lbnREYXRhIiwiaXRlcmF0ZUxheWVycyIsIm1pbmltdW1WZXJzaW9uIiwicGF0aERhdGEiLCJfX2NvbnZlcnRlZCIsIml0ZXJhdGVTaGFwZXMiLCJjbCIsIm1vZHVsZU9iIiwiU2hhcGVQYXRoIiwiX21heExlbmd0aCIsImFwcGx5IiwiU2hhcGVNb2RpZmllciIsIlRyaW1Nb2RpZmllciIsIlJvdW5kQ29ybmVyc01vZGlmaWVyIiwiUmVwZWF0ZXJNb2RpZmllciIsIlNoYXBlQ29sbGVjdGlvbiIsIlRleHRBbmltYXRvclByb3BlcnR5IiwidGV4dERhdGEiLCJyZW5kZXJUeXBlIiwiZWxlbSIsIm1kZiIsIl9maXJzdEZyYW1lIiwiX2hhc01hc2tlZFBhdGgiLCJfZnJhbWVJZCIsIl9keW5hbWljUHJvcGVydGllcyIsIl90ZXh0RGF0YSIsIl9yZW5kZXJUeXBlIiwiX2VsZW0iLCJfYW5pbWF0b3JzRGF0YSIsIl9wYXRoRGF0YSIsIl9tb3JlT3B0aW9ucyIsImFsaWdubWVudCIsInJlbmRlcmVkTGV0dGVycyIsImxldHRlcnNDaGFuZ2VkRmxhZyIsIkxldHRlclByb3BzIiwic3ciLCJzYyIsImZjIiwibSIsIlRleHRQcm9wZXJ0eSIsInB2Iiwia2YiLCJrZXlzSW5kZXgiLCJjdXJyZW50RGF0YSIsImFzY2VudCIsImJveFdpZHRoIiwiZlN0eWxlIiwiZldlaWdodCIsImp1c3RpZnlPZmZzZXQiLCJsaCIsImxpbmVXaWR0aHMiLCJscyIsIm9mIiwiZmlsbENvbG9yQW5pbSIsInN0cm9rZUNvbG9yQW5pbSIsInN0cm9rZVdpZHRoQW5pbSIsInlPZmZzZXQiLCJzZWFyY2hQcm9wZXJ0eSIsIkJhc2VSZW5kZXJlciIsIlNWR1JlbmRlcmVyIiwiYW5pbWF0aW9uSXRlbSIsImNvbmZpZyIsInJlbmRlcmVkRnJhbWUiLCJnbG9iYWxEYXRhIiwiZnJhbWVOdW0iLCJyZW5kZXJDb25maWciLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIiwicHJvZ3Jlc3NpdmVMb2FkIiwiaGlkZU9uVHJhbnNwYXJlbnQiLCJ2aWV3Qm94T25seSIsImNsYXNzTmFtZSIsImVsZW1lbnRzIiwicGVuZGluZ0VsZW1lbnRzIiwiZGVzdHJveWVkIiwiTWFza0VsZW1lbnQiLCJ2aWV3RGF0YSIsIm1hc2tFbGVtZW50IiwicmVjdCIsImV4cGFuc29yIiwiZmVNb3JwaCIsIngiLCJkZWZzIiwicHJvcGVydGllcyIsImNvdW50IiwiY3VycmVudE1hc2tzIiwibGF5ZXJJZCIsIm1hc2tUeXBlIiwibWFza1JlZiIsIm1vZGUiLCJpbnYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnROUyIsInN2Z05TIiwic2V0QXR0cmlidXRlIiwiY29tcCIsInciLCJQcm9wZXJ0eUZhY3RvcnkiLCJnZXRQcm9wIiwiZmlsdGVySUQiLCJhcHBlbmRDaGlsZCIsImV4cGFuIiwibGFzdFBhdGgiLCJsYXN0T3BlcmF0b3IiLCJmaWx0ZXJJZCIsImxhc3RSYWRpdXMiLCJtYXNrIiwibG9jYXRpb25IcmVmIiwic29saWRQYXRoIiwiY3JlYXRlTGF5ZXJTb2xpZFBhdGgiLCJvcCIsInByb3AiLCJTaGFwZVByb3BlcnR5RmFjdG9yeSIsImdldFNoYXBlUHJvcCIsImludlJlY3QiLCJkcmF3UGF0aCIsIm1hc2tlZEVsZW1lbnQiLCJCYXNlRWxlbWVudCIsIlNWR0Jhc2VFbGVtZW50IiwicGFyZW50Q29udGFpbmVyIiwicGxhY2Vob2xkZXIiLCJtYXR0ZUVsZW1lbnQiLCJ0cmFuc2Zvcm1lZEVsZW1lbnQiLCJpc1RyYW5zcGFyZW50IiwiX3NpemVDaGFuZ2VkIiwiSVNoYXBlRWxlbWVudCIsInNoYXBlc0RhdGEiLCJzdHlsZXNMaXN0IiwiaXRlbXNEYXRhIiwicHJldlZpZXdEYXRhIiwic2hhcGVNb2RpZmllcnMiLCJwcm9jZXNzZWRFbGVtZW50cyIsIklUZXh0RWxlbWVudCIsIlNWR1RleHRFbGVtZW50IiwidGV4dFNwYW5zIiwiU1ZHVGludEZpbHRlciIsImZpbHRlciIsImZpbHRlck1hbmFnZXIiLCJmZUNvbG9yTWF0cml4IiwibWF0cml4RmlsdGVyIiwiZWZmZWN0RWxlbWVudHMiLCJmZU1lcmdlIiwiZmVNZXJnZU5vZGUiLCJTVkdGaWxsRmlsdGVyIiwiU1ZHU3Ryb2tlRWZmZWN0IiwiaW5pdGlhbGl6ZWQiLCJTVkdUcml0b25lRmlsdGVyIiwiZmVDb21wb25lbnRUcmFuc2ZlciIsImZlRnVuY1IiLCJmZUZ1bmNHIiwiZmVGdW5jQiIsIlNWR1Byb0xldmVsc0ZpbHRlciIsImNyZWF0ZUZlRnVuYyIsImZlRnVuY0EiLCJmZUZ1bmNSQ29tcG9zZWQiLCJmZUZ1bmNHQ29tcG9zZWQiLCJmZUZ1bmNCQ29tcG9zZWQiLCJTVkdEcm9wU2hhZG93RWZmZWN0IiwiZmVHYXVzc2lhbkJsdXIiLCJmZU9mZnNldCIsImZlRmxvb2QiLCJmZUNvbXBvc2l0ZSIsIm9yaWdpbmFsTm9kZUFkZGVkIiwiU1ZHTWF0dGUzRWZmZWN0IiwiZmlsdGVyRWxlbSIsImxheWVyRWxlbWVudCIsImJhc2VFbGVtZW50IiwiU1ZHRWZmZWN0cyIsImVmIiwiZmlsSWQiLCJmaWwiLCJmaWx0ZXJzRmFjdG9yeSIsImNyZWF0ZUZpbHRlciIsImZpbHRlcnMiLCJlZmZlY3RzIiwiSUNvbXBFbGVtZW50Iiwic3VwcG9ydHMzZCIsInRtIiwiZnJhbWVSYXRlIiwieHQiLCJidWlsZEFsbEl0ZW1zIiwiSUltYWdlRWxlbWVudCIsImFzc2V0RGF0YSIsImdldEFzc2V0RGF0YSIsIklTb2xpZEVsZW1lbnQiLCJDYW52YXNSZW5kZXJlciIsImNsZWFyQ2FudmFzIiwiY29udGV4dCIsImRwciIsIndyYXBwZXIiLCJkZXZpY2VQaXhlbFJhdGlvIiwiY29udGV4dERhdGEiLCJzYXZlZCIsInNhdmVkT3AiLCJjQXJyUG9zIiwiY1RyIiwiY08iLCJ0cmFuc2Zvcm1NYXQiLCJIeWJyaWRSZW5kZXJlciIsInRocmVlREVsZW1lbnRzIiwiY2FtZXJhIiwiQ1ZCYXNlRWxlbWVudCIsImNhbnZhc0NvbnRleHQiLCJDVkNvbXBFbGVtZW50IiwiY29tcEdsb2JhbERhdGEiLCJyZW5kZXJlciIsImNvbXBIZWlnaHQiLCJjb21wV2lkdGgiLCJwYXJlbnRHbG9iYWxEYXRhIiwiY3YiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJjYW52YXMiLCJDVkltYWdlRWxlbWVudCIsImFkZFBlbmRpbmdFbGVtZW50IiwiQ1ZNYXNrRWxlbWVudCIsIkNWU2hhcGVFbGVtZW50IiwiQ1ZTb2xpZEVsZW1lbnQiLCJDVlRleHRFbGVtZW50Iiwic3Ryb2tlIiwiZmlsbCIsImN1cnJlbnRSZW5kZXIiLCJ2YWx1ZXMiLCJzV2lkdGgiLCJmVmFsdWUiLCJIQmFzZUVsZW1lbnQiLCJIU29saWRFbGVtZW50IiwiSENvbXBFbGVtZW50IiwiSFNoYXBlRWxlbWVudCIsImN1cnJlbnRCQm94IiwieSIsIkhUZXh0RWxlbWVudCIsInRleHRQYXRocyIsImlzTWFza2VkIiwiSEltYWdlRWxlbWVudCIsIkhDYW1lcmFFbGVtZW50IiwicGUiLCJweCIsInB5IiwicHoiLCJ6Iiwib3IiLCJkZWdUb1JhZHMiLCJzaCIsInJ4IiwicnkiLCJyeiIsIm1hdCIsIlNsaWRlckVmZmVjdCIsIkFuZ2xlRWZmZWN0IiwiQ29sb3JFZmZlY3QiLCJQb2ludEVmZmVjdCIsIkxheWVySW5kZXhFZmZlY3QiLCJNYXNrSW5kZXhFZmZlY3QiLCJDaGVja2JveEVmZmVjdCIsIk5vVmFsdWVFZmZlY3QiLCJFZmZlY3RzTWFuYWdlciIsImVmZmVjdEl0ZW0iLCJHcm91cEVmZmVjdCIsInNldExvY2F0aW9uSHJlZiIsImhyZWYiLCJwbGF5IiwiYW5pbWF0aW9uIiwiYW5pbWF0aW9uTWFuYWdlciIsInBhdXNlIiwidG9nZ2xlUGF1c2UiLCJzZXRTcGVlZCIsInZhbHVlIiwic2V0RGlyZWN0aW9uIiwic3RvcCIsIm1vdmVGcmFtZSIsInNlYXJjaEFuaW1hdGlvbnMiLCJzdGFuZGFsb25lIiwicmVnaXN0ZXJBbmltYXRpb24iLCJyZXNpemUiLCJzdGFydCIsImdvVG9BbmRTdG9wIiwiaXNGcmFtZSIsInNldFN1YmZyYW1lUmVuZGVyaW5nIiwic3ViZnJhbWVFbmFibGVkIiwibG9hZEFuaW1hdGlvbiIsImRlc3Ryb3kiLCJzZXRRdWFsaXR5IiwiaXNOYU4iLCJpbkJyb3dzZXIiLCJuYXZpZ2F0b3IiLCJpbnN0YWxsUGx1Z2luIiwicGx1Z2luIiwiZXhwcmVzc2lvbnNQbHVnaW4iLCJnZXRGYWN0b3J5IiwibmFtZSIsImNoZWNrUmVhZHkiLCJyZWFkeVN0YXRlIiwiY2xlYXJJbnRlcnZhbCIsInJlYWR5U3RhdGVDaGVja0ludGVydmFsIiwiZ2V0UXVlcnlWYXJpYWJsZSIsInZhcmlhYmxlIiwidmFycyIsInF1ZXJ5U3RyaW5nIiwicGFpciIsImRlY29kZVVSSUNvbXBvbmVudCIsImlzU2FmYXJpIiwidGVzdCIsInVzZXJBZ2VudCIsImJtX3JvdW5kZXIiLCJibV9hYnMiLCJhYnMiLCJibV9tYXgiLCJibV9taW4iLCJibGl0dGVyIiwiQk1NYXRoIiwicHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5TmFtZXMiLCJhYnNBcnIiLCJQSSIsInJvdW5kQ29ybmVyIiwicmdiVG9IZXgiLCJjb2xvck1hcCIsImZpbGxDb2xvclRvU3RyaW5nIiwiY29sb3JBcnIiLCJyZXNldCIsInByb3BzIiwicm90YXRlIiwiYW5nbGUiLCJtQ29zIiwiY29zIiwibVNpbiIsInNpbiIsIl90Iiwicm90YXRlWCIsInJvdGF0ZVkiLCJyb3RhdGVaIiwic2hlYXIiLCJzeCIsInN5Iiwic2tldyIsImF4IiwiYXkiLCJ0YW4iLCJza2V3RnJvbUF4aXMiLCJzY2FsZSIsInN6Iiwic2V0VHJhbnNmb3JtIiwidHJhbnNsYXRlIiwidHgiLCJ0eiIsInRyYW5zZm9ybSIsImEyIiwiYjIiLCJjMiIsImQyIiwiZTIiLCJmMiIsImcyIiwiaDIiLCJpMiIsImoyIiwiazIiLCJsMiIsIm0yIiwibjIiLCJvMiIsInAyIiwiX2lkZW50aXR5Q2FsY3VsYXRlZCIsImExIiwiYjEiLCJjMSIsImQxIiwiZTEiLCJmMSIsImcxIiwiaDEiLCJpMSIsImoxIiwiazEiLCJsMSIsIm0xIiwibjEiLCJvMSIsInAxIiwiaXNJZGVudGl0eSIsIl9pZGVudGl0eSIsImNsb25lIiwibWF0ciIsImNsb25lRnJvbVByb3BzIiwiYXBwbHlUb1BvaW50IiwiYXBwbHlUb1giLCJhcHBseVRvWSIsImFwcGx5VG9aIiwiaW52ZXJzZVBvaW50IiwiZGV0ZXJtaW5hbnQiLCJpbnZlcnNlUG9pbnRzIiwicmV0UHRzIiwiYXBwbHlUb1BvaW50QXJyYXkiLCJkaW1lbnNpb25zIiwicG9pbnRfcG9vbCIsIm5ld1BvaW50IiwiYXBwbHlUb1BvaW50U3RyaW5naWZpZWQiLCJ0b0FycmF5IiwidG9DU1MiLCJjc3NQYXJ0cyIsInRvMmRDU1MiLCJwb29sIiwibWF0aCIsInNlZWRyYW5kb20iLCJzZWVkIiwib3B0aW9ucyIsImtleSIsImVudHJvcHkiLCJzaG9ydHNlZWQiLCJtaXhrZXkiLCJmbGF0dGVuIiwidG9zdHJpbmciLCJhdXRvc2VlZCIsImFyYzQiLCJBUkM0IiwicHJuZyIsImNodW5rcyIsInN0YXJ0ZGVub20iLCJzaWduaWZpY2FuY2UiLCJvdmVyZmxvdyIsImludDMyIiwicXVpY2siLCJkb3VibGUiLCJTIiwicGFzcyIsImlzX21hdGhfY2FsbCIsInN0YXRlIiwiY29weSIsInJuZ25hbWUiLCJnbG9iYWwiLCJrZXlsZW4iLCJtZSIsInNsaWNlIiwib2JqIiwiZGVwdGgiLCJ0eXAiLCJzbWVhciIsInN0cmluZ3NlZWQiLCJjaGFyQ29kZUF0Iiwibm9kZWNyeXB0byIsInJhbmRvbUJ5dGVzIiwib3V0IiwiVWludDhBcnJheSIsImNyeXB0byIsIm1zQ3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwiYnJvd3NlciIsInBsdWdpbnMiLCJEYXRlIiwic2NyZWVuIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiQmV6aWVyRmFjdG9yeSIsImdldEJlemllckVhc2luZyIsIm5tIiwic3RyIiwiYmV6aWVycyIsImJlekVhc2luZyIsIkJlemllckVhc2luZyIsIkEiLCJhQTEiLCJhQTIiLCJCIiwiQyIsImNhbGNCZXppZXIiLCJhVCIsImdldFNsb3BlIiwiYmluYXJ5U3ViZGl2aWRlIiwiYVgiLCJhQSIsImFCIiwibVgxIiwibVgyIiwiY3VycmVudFgiLCJjdXJyZW50VCIsIlNVQkRJVklTSU9OX1BSRUNJU0lPTiIsIlNVQkRJVklTSU9OX01BWF9JVEVSQVRJT05TIiwibmV3dG9uUmFwaHNvbkl0ZXJhdGUiLCJhR3Vlc3NUIiwiTkVXVE9OX0lURVJBVElPTlMiLCJjdXJyZW50U2xvcGUiLCJfcCIsIl9tU2FtcGxlVmFsdWVzIiwiZmxvYXQzMkFycmF5U3VwcG9ydGVkIiwiRmxvYXQzMkFycmF5Iiwia1NwbGluZVRhYmxlU2l6ZSIsIl9wcmVjb21wdXRlZCIsImdldCIsIm9iIiwia1NhbXBsZVN0ZXBTaXplIiwibVkxIiwibVkyIiwiX3ByZWNvbXB1dGUiLCJfZ2V0VEZvclgiLCJfY2FsY1NhbXBsZVZhbHVlcyIsIm1TYW1wbGVWYWx1ZXMiLCJpbnRlcnZhbFN0YXJ0IiwiY3VycmVudFNhbXBsZSIsImxhc3RTYW1wbGUiLCJkaXN0IiwiZ3Vlc3NGb3JUIiwiaW5pdGlhbFNsb3BlIiwibGFzdFRpbWUiLCJ2ZW5kb3JzIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjdXJyVGltZSIsImdldFRpbWUiLCJ0aW1lVG9DYWxsIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsImJleiIsImRhdGFNYW5hZ2VyIiwiRm9udE1hbmFnZXIiLCJzZXRVcE5vZGUiLCJmb250IiwiZmFtaWx5IiwicGFyZW50Tm9kZSIsImZvbnRGYW1pbHkiLCJub2RlIiwiaW5uZXJIVE1MIiwiZm9udFNpemUiLCJmb250VmFyaWFudCIsImZvbnRTdHlsZSIsImZvbnRXZWlnaHQiLCJsZXR0ZXJTcGFjaW5nIiwiYm9keSIsIm9mZnNldFdpZHRoIiwiY2hlY2tMb2FkZWRGb250cyIsImZvbnRzIiwibG9hZGVkQ291bnQiLCJsb2FkZWQiLCJmT3JpZ2luIiwib3JpZ2luIiwiVHlwZWtpdCIsImxvYWQiLCJ0eXBla2l0TG9hZGVkIiwiYXN5bmMiLCJhY3RpdmUiLCJtb25vQ2FzZSIsInNhbnNDYXNlIiwicmVtb3ZlQ2hpbGQiLCJub3ciLCJpbml0VGltZSIsIm1heFdhaXRpbmdUaW1lIiwiY3JlYXRlSGVscGVyIiwiZGVmIiwiZm9udERhdGEiLCJ0SGVscGVyIiwiZkZhbWlseSIsInRleHRDb250ZW50IiwiZkNsYXNzIiwidENhbnZhc0hlbHBlciIsImFkZEZvbnRzIiwibGlzdCIsImZvbnRBcnIiLCJmUGF0aCIsInJlbCIsImhlbHBlciIsImFkZENoYXJzIiwiZm91bmQiLCJjaCIsImdldENoYXJEYXRhIiwiY2hhciIsIm1lYXN1cmVUZXh0IiwiZm9udE5hbWUiLCJzaXplIiwiZ2V0Rm9udEJ5TmFtZSIsImZOYW1lIiwiRm9udCIsImludGVycG9sYXRlVmFsdWUiLCJpdGVyYXRpb25JbmRleCIsInByZXZpb3VzVmFsdWUiLCJjYWNoaW5nIiwibmV3VmFsdWUiLCJvZmZzZXRUaW1lIiwibmV4dEtleURhdGEiLCJrZXlmcmFtZXMiLCJmbmMiLCJpbmQiLCJfbGFzdEJlemllckRhdGEiLCJfX2ZuY3QiLCJzZWdtZW50UGVyYyIsImRpc3RhbmNlSW5MaW5lIiwibGFzdEZyYW1lIiwiX2xhc3RBZGRlZExlbmd0aCIsIl9sYXN0UG9pbnQiLCJvdXRYIiwib3V0WSIsImluWCIsImluWSIsImtleVZhbHVlIiwiaW5pdFAiLCJlbmRQIiwiZ2V0VmFsdWVBdEN1cnJlbnRUaW1lIiwiZnJhbWVJZCIsImVuZFRpbWUiLCJfY2FjaGluZyIsImluaXRGcmFtZSIsImxhc3RJbmRleCIsInJlbmRlclJlc3VsdCIsIm11bHQiLCJsYXN0UFZhbHVlIiwiZ2V0Tm9WYWx1ZSIsIlZhbHVlUHJvcGVydHkiLCJ2ZWwiLCJNdWx0aURpbWVuc2lvbmFsUHJvcGVydHkiLCJsYXN0VmFsdWUiLCJtYXAiLCJLZXlmcmFtZWRWYWx1ZVByb3BlcnR5Iiwic3QiLCJLZXlmcmFtZWRNdWx0aWRpbWVuc2lvbmFsUHJvcGVydHkiLCJUcmFuc2Zvcm1Qcm9wZXJ0eSIsImdldERhc2hQcm9wIiwiRGFzaFByb3BlcnR5IiwiZ2V0VGV4dFNlbGVjdG9yUHJvcCIsIlRleHRTZWxlY3RvclByb3AiLCJwb3NpdGlvbkdldHRlciIsIkV4cHJlc3Npb25WYWx1ZSIsInhQb3NpdGlvbkdldHRlciIsInlQb3NpdGlvbkdldHRlciIsImFuY2hvckdldHRlciIsIm9yaWVudGF0aW9uR2V0dGVyIiwicm90YXRpb25HZXR0ZXIiLCJzY2FsZUdldHRlciIsIm9wYWNpdHlHZXR0ZXIiLCJza2V3R2V0dGVyIiwic2siLCJza2V3QXhpc0dldHRlciIsInNhIiwiYXBwbHlUb01hdHJpeCIsInByb2Nlc3NLZXlzIiwiYXV0b09yaWVudGVkIiwiZ2V0VmFsdWVBdFRpbWUiLCJ2MSIsInYyIiwiYXRhbjIiLCJzZXRJbnZlcnRlZCIsImludmVydGVkIiwiaXYiLCJhdXRvT3JpZW50IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRHcmFkaWVudFByb3AiLCJmb3JjZVJlbmRlciIsImNtZGYiLCJvbWRmIiwiZ3JhZGllbnRQcm9wIiwiY0xlbmd0aCIsImRhdGFQcm9wcyIsImRhc2hhcnJheSIsImRhc2hvZmZzZXQiLCJ1cGRhdGVSYW5nZSIsIm5ld0NoYXJzRmxhZyIsInRvdGFsQ2hhcnMiLCJ0ZXh0UHJvcGVydHkiLCJkaXZpc29yIiwiX3MiLCJmaW5hbFMiLCJmaW5hbEUiLCJnZXRNdWx0IiwiZWFzZXIiLCJuZSIsInhlIiwidG90Iiwic2V0UGF0aERhdGEiLCJzZXRMZW5ndGgiLCJkb3VibGVBcnJheUxlbmd0aCIsImNvbmNhdCIsInNldFhZQXQiLCJwb3MiLCJzZXRUcmlwbGVBdCIsInZYIiwidlkiLCJvWCIsIm9ZIiwiaVgiLCJpWSIsImludGVycG9sYXRlU2hhcGUiLCJpc0N1cnJlbnRSZW5kZXIiLCJrZXlQcm9wUyIsImtleVByb3BFIiwiaXNIb2xkIiwidmVydGV4VmFsdWUiLCJoYXNNb2RpZmllZCIsImludGVycG9sYXRlU2hhcGVDdXJyZW50VGltZSIsIl9sYXN0SW5kZXgiLCJsb2NhbFNoYXBlQ29sbGVjdGlvbiIsImdldFNoYXBlVmFsdWUiLCJyZXNldFNoYXBlIiwiU2hhcGVQcm9wZXJ0eSIsIl9fc2hhcGVPYmplY3QiLCJzaGFwZV9wb29sIiwic2hhcGVDb2xsZWN0aW9uX3Bvb2wiLCJuZXdTaGFwZUNvbGxlY3Rpb24iLCJhZGRTaGFwZSIsIktleWZyYW1lZFNoYXBlUHJvcGVydHkiLCJuZXdTaGFwZSIsImRhdGFQcm9wIiwia2V5cyIsIlJlY3RTaGFwZVByb3BlcnR5IiwiRWxsU2hhcGVQcm9wZXJ0eSIsIlN0YXJTaGFwZVByb3BlcnR5IiwiZ2V0Q29uc3RydWN0b3JGdW5jdGlvbiIsImdldEtleWZyYW1lZENvbnN0cnVjdG9yRnVuY3Rpb24iLCJjb252ZXJ0RWxsVG9QYXRoIiwicDAiLCJzMCIsInMxIiwiY1BvaW50IiwiY29udmVydFBvbHlnb25Ub1BhdGgiLCJudW1QdHMiLCJyYWQiLCJyb3VuZG5lc3MiLCJvcyIsInBlcmltU2VnbWVudCIsImN1cnJlbnRBbmciLCJveCIsIm95IiwiY29udmVydFN0YXJUb1BhdGgiLCJsb25nRmxhZyIsImxvbmdSYWQiLCJzaG9ydFJhZCIsImlyIiwibG9uZ1JvdW5kIiwic2hvcnRSb3VuZCIsImlzIiwibG9uZ1BlcmltU2VnbWVudCIsInNob3J0UGVyaW1TZWdtZW50IiwiY29udmVydFRvUGF0aCIsImNvbnZlcnRSZWN0VG9QYXRoIiwidjAiLCJTaGFwZU1vZGlmaWVycyIsInJlZ2lzdGVyTW9kaWZpZXIiLCJtb2RpZmllcnMiLCJnZXRNb2RpZmllciIsImluaXRNb2RpZmllclByb3BlcnRpZXMiLCJhZGRTaGFwZVRvTW9kaWZpZXIiLCJzaGFwZSIsInNWYWx1ZSIsImVWYWx1ZSIsIm9WYWx1ZSIsImNhbGN1bGF0ZVNoYXBlRWRnZXMiLCJzaGFwZUxlbmd0aCIsInRvdGFsTW9kaWZpZXJMZW5ndGgiLCJzZWdtZW50T2IiLCJzaGFwZVNlZ21lbnRzIiwic2hhcGVTIiwic2hhcGVFIiwicHJvY2Vzc1NoYXBlcyIsInNoYXBlUGF0aHMiLCJwYXRoc0RhdGEiLCJ0b3RhbFNoYXBlTGVuZ3RoIiwicmVsZWFzZVNoYXBlcyIsImVkZ2VzIiwibmV3U2hhcGVzRGF0YSIsImFkZFNoYXBlcyIsImxhc3RTaGFwZSIsInBvcCIsImFkZFBhdGhzIiwiYWRkU2VnbWVudCIsInNoYXBlUGF0aCIsInNoYXBlU2VnbWVudCIsImN1cnJlbnRMZW5ndGhEYXRhIiwic2VnbWVudENvdW50Iiwic2VnbWVudCIsInJkIiwicHJvY2Vzc1BhdGgiLCJjbG9uZWRfcGF0aCIsImN1cnJlbnRWIiwiY3VycmVudEkiLCJjdXJyZW50TyIsImNsb3NlclYiLCJkaXN0YW5jZSIsIm5ld1Bvc1BlcmMiLCJpbmRleCIsInBNYXRyaXgiLCJyTWF0cml4Iiwic01hdHJpeCIsInRNYXRyaXgiLCJtYXRyaXgiLCJhcHBseVRyYW5zZm9ybXMiLCJzY2FsZVgiLCJzY2FsZVkiLCJlbGVtc0RhdGEiLCJfY3VycmVudENvcGllcyIsIl9lbGVtZW50cyIsIl9ncm91cHMiLCJjb250IiwidW5zaGlmdCIsInJlc2V0RWxlbWVudHMiLCJfcHJvY2Vzc2VkIiwiY2xvbmVFbGVtZW50cyIsIm5ld0VsZW1lbnRzIiwiY2hhbmdlR3JvdXBSZW5kZXIiLCJyZW5kZXJGbGFnIiwiX3JlbmRlciIsImNvcGllcyIsImNlaWwiLCJncm91cCIsIml4IiwicmVsb2FkU2hhcGVzIiwib2Zmc2V0TW9kdWxvIiwicm91bmRPZmZzZXQiLCJwUHJvcHMiLCJyUHJvcHMiLCJzUHJvcHMiLCJpdGVyYXRpb24iLCJpdGVtcyIsIml0ZW1zVHJhbnNmb3JtIiwibVByb3BzIiwicmVsZWFzZSIsIkltYWdlUHJlbG9hZGVyIiwiaW1hZ2VMb2FkZWQiLCJsb2FkZWRBc3NldHMiLCJ0b3RhbEltYWdlcyIsImltYWdlc0xvYWRlZENiIiwiZ2V0QXNzZXRzUGF0aCIsImFzc2V0c1BhdGgiLCJpbWFnZVBhdGgiLCJpbmRleE9mIiwibG9hZEltYWdlIiwiaW1nIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNyYyIsImxvYWRBc3NldHMiLCJjYiIsInRvdGFsQXNzZXRzIiwic2V0UGF0aCIsInNldEFzc2V0c1BhdGgiLCJmZWF0dXJlU3VwcG9ydCIsImNyZWF0ZUFscGhhVG9MdW1pbmFuY2VGaWx0ZXIiLCJzZWFyY2hQcm9wZXJ0aWVzIiwiYW5pbWF0b3JEYXRhIiwiYW5pbWF0b3JQcm9wcyIsImZoIiwiZnMiLCJmYiIsIm1hc2tNYW5hZ2VyIiwiZ2V0TWFza1Byb3BlcnR5IiwiZ2V0TWVhc3VyZXMiLCJ4UG9zIiwieVBvcyIsImFuaW1hdG9ycyIsIm1hdHJpeEhlbHBlciIsIm1IZWxwZXIiLCJyZW5kZXJlZExldHRlcnNDb3VudCIsImxldHRlcnMiLCJwYXRoSW5mbyIsInRMZW5ndGgiLCJwaSIsImN1cnJlbnRQb2ludCIsInByZXZQb2ludCIsImN1cnJlbnRMZW5ndGgiLCJzZWdtZW50SW5kIiwicG9pbnRJbmQiLCJ0YW5BbmdsZSIsImFuaW1hdG9yU2VsZWN0b3IiLCJsZXR0ZXJWYWx1ZSIsInlPZmYiLCJmaXJzdExpbmUiLCJvZmZmIiwieFBhdGhQb3MiLCJ5UGF0aFBvcyIsImVsZW1PcGFjaXR5IiwibGV0dGVyU3ciLCJsZXR0ZXJTYyIsImxldHRlckZjIiwibGV0dGVyTyIsImluaXRQYXRoUG9zIiwiaW5pdFNlZ21lbnRJbmQiLCJpbml0UG9pbnRJbmQiLCJjdXJyZW50TGluZSIsImxpbmVMZW5ndGgiLCJsZXR0ZXJNIiwibGV0dGVyUCIsImRlZmF1bHRQcm9wc0FycmF5IiwibGluZSIsImV4dHJhIiwiYW4iLCJhbmltYXRvck9mZnNldCIsImFuSW5kZXhlcyIsImFkZCIsInJvdCIsImF0YW4iLCJwcyIsInVwZGF0ZSIsInVwZGF0ZWQiLCJzZXRDdXJyZW50RGF0YSIsInRleHREb2N1bWVudERhdGEiLCJ0ZXh0S2V5cyIsImNvbXBsZXRlVGV4dERhdGEiLCJuZXdMaW5lRmxhZyIsImNoYXJEYXRhIiwiYW5jaG9yR3JvdXBpbmciLCJjdXJyZW50U2l6ZSIsImN1cnJlbnRQb3MiLCJsaW5lV2lkdGgiLCJtYXhMaW5lV2lkdGgiLCJzdHlsZXMiLCJ0b0xvd2VyQ2FzZSIsInRyYWNraW5nT2Zmc2V0IiwibGFzdFNwYWNlSW5kZXgiLCJjaGFyQXQiLCJzdWJzdHIiLCJjdXJyZW50Q2hhciIsInVuY29sbGFwc2VkU3BhY2VzIiwibGV0dGVyRGF0YSIsImJhc2VkIiwiaW5kZXhlcyIsInJuIiwibmV3SW5kIiwiY3VycmVudEluZCIsInVwZGF0ZURvY3VtZW50RGF0YSIsIm5ld0RhdGEiLCJkRGF0YSIsInBvb2xpbmciLCJyZWxlYXNlQXJyYXkiLCJzaGFwZVBhdGhzQ29sbGVjdGlvbiIsImNsb25lZCIsInNoYXBlQ29sbGVjdGlvbiIsIm9yaWdpbkNvbGxlY3Rpb24iLCJjaGVja0xheWVycyIsImlwIiwiYnVpbGRJdGVtIiwiY2hlY2tQZW5kaW5nRWxlbWVudHMiLCJjcmVhdGVJdGVtIiwibGF5ZXIiLCJjcmVhdGVJbWFnZSIsImNyZWF0ZUNvbXAiLCJjcmVhdGVTb2xpZCIsImNyZWF0ZVNoYXBlIiwiY3JlYXRlVGV4dCIsImNyZWF0ZUNhbWVyYSIsImNyZWF0ZUJhc2UiLCJpbmNsdWRlTGF5ZXJzIiwibmV3TGF5ZXJzIiwic2V0UHJvamVjdEludGVyZmFjZSIsInBJbnRlcmZhY2UiLCJwcm9qZWN0SW50ZXJmYWNlIiwiaW5pdEl0ZW1zIiwiYnVpbGRFbGVtZW50UGFyZW50aW5nIiwicGFyZW50TmFtZSIsImhpZXJhcmNoeSIsIl9pc1BhcmVudCIsInNldEhpZXJhcmNoeSIsImNvbmZpZ0FuaW1hdGlvbiIsImFuaW1EYXRhIiwiY29tcFNpemUiLCJmciIsIm1hc2tJZCIsInVwZGF0ZUNvbnRhaW5lclNpemUiLCJyZWdpc3RlckNvbXBvc2l0aW9uIiwiaW5pdEV4cHJlc3Npb25zIiwiYXBwZW5kRWxlbWVudEluUG9zIiwic2V0TWF0dGUiLCJjaGVja1BhcmVudGluZyIsInJlbmRlckZyYW1lIiwiY3VycmVudEZyYW1lIiwicHJlcGFyZUZyYW1lIiwibmV3RWxlbWVudCIsImdldEJhc2VFbGVtZW50IiwibmV4dEVsZW1lbnQiLCJpbnNlcnRCZWZvcmUiLCJoaWRlIiwic2hvdyIsInNlYXJjaEV4dHJhQ29tcG9zaXRpb25zIiwiZmxvYXRpbmdDb250YWluZXIiLCJmaW5hbE1hdCIsImZpbmFsVHJhbnNmb3JtIiwibVByb3AiLCJnZXRNYXNrZWxlbWVudCIsInBhdGhOb2RlcyIsInBhdGhTdHJpbmciLCJjaGVja01hc2tzIiwiaXNWaXNpYmxlIiwiZWxlbU1kZiIsInNyIiwiY3VycmVudEZyYW1lTnVtIiwiZ2xvYmFsVG9Mb2NhbCIsInRyYW5zZm9ybXMiLCJwdE5ldyIsImxheWVySW50ZXJmYWNlIiwiTGF5ZXJFeHByZXNzaW9uSW50ZXJmYWNlIiwicmVnaXN0ZXJNYXNrSW50ZXJmYWNlIiwiZWZmZWN0c0ludGVyZmFjZSIsIkVmZmVjdHNFeHByZXNzaW9uSW50ZXJmYWNlIiwiY3JlYXRlRWZmZWN0c0ludGVyZmFjZSIsInJlZ2lzdGVyRWZmZWN0c0ludGVyZmFjZSIsImNvbXBJbnRlcmZhY2UiLCJDb21wRXhwcmVzc2lvbkludGVyZmFjZSIsInNoYXBlSW50ZXJmYWNlIiwiU2hhcGVFeHByZXNzaW9uSW50ZXJmYWNlIiwiY3JlYXRlU2hhcGVJbnRlcmZhY2UiLCJ0ZXh0SW50ZXJmYWNlIiwiVGV4dEV4cHJlc3Npb25JbnRlcmZhY2UiLCJzZXRCbGVuZE1vZGUiLCJibGVuZE1vZGVWYWx1ZSIsImJtIiwiaGlkZGVuIiwibGFzdE51bSIsIm1hdE1kZiIsIm9wTWRmIiwib3BhY2l0eSIsImFvIiwiY3JlYXRlRWxlbWVudHMiLCJhZGRNYXNrcyIsInJlc2V0SGllcmFyY2h5IiwiZ2V0SGllcmFyY2h5IiwiZ2V0TGF5ZXJTaXplIiwic291cmNlUmVjdEF0VGltZSIsImxheWVyRWxlbWVudFBhcmVudCIsIm1hc2tlciIsImdnIiwibWFza0dyb3VwIiwibWFza0dyb3VwZXIiLCJhbHBoYVJlY3QiLCJsbiIsImNwIiwiY2xpcElkIiwiY3BHcm91cCIsImVmZmVjdHNNYW5hZ2VyIiwicGFyZW50VHJhbnNmb3JtIiwiaGQiLCJpZGVudGl0eU1hdHJpeCIsImxjRW51bSIsIjIiLCIzIiwibGpFbnVtIiwic2VhcmNoUHJvY2Vzc2VkRWxlbWVudCIsImFkZFByb2Nlc3NlZEVsZW1lbnQiLCJidWlsZEV4cHJlc3Npb25JbnRlcmZhY2UiLCJzZWFyY2hTaGFwZXMiLCJzZXRHcmFkaWVudERhdGEiLCJwYXRoRWxlbWVudCIsImdmaWxsIiwiZ3JhZGllbnRJZCIsInN0b3BzIiwiZ2YiLCJjc3QiLCJzZXRHcmFkaWVudE9wYWNpdHkiLCJzdHlsZU9iIiwib3BGaWxsIiwib3BhY2l0eUlkIiwib3N0IiwibXNFbGVtIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwibGV2ZWwiLCJlbGVtZW50RGF0YSIsImxkIiwibHZsIiwibGMiLCJsaiIsIm1sIiwicEVsZW0iLCJjcmVhdGVHcm91cEVsZW1lbnQiLCJnciIsImNyZWF0ZVRyYW5zZm9ybUVsZW1lbnQiLCJjcmVhdGVTaGFwZUVsZW1lbnQiLCJvd25UcmFuc2Zvcm1lcnMiLCJjYWNoZXMiLCJ0cmFuc2Zvcm1lcnMiLCJsU3RyIiwiYWRkU2hhcGVUb01vZGlmaWVycyIsInNldEVsZW1lbnRTdHlsZXMiLCJyZW5kZXJNb2RpZmllcnMiLCJjb250YWluZXIiLCJyZW5kZXIiLCJjdXJyZW50VHJhbnNmb3JtIiwibW9kaWZpZXIiLCJwcm9jZXNzZWRQb3MiLCJvd25TdHlsZXMiLCJvd25Nb2RpZmllcnMiLCJwYXJlbnRNYXRyaXgiLCJyZW5kZXJTaGFwZSIsInJlbmRlclBhdGgiLCJyZW5kZXJGaWxsIiwicmVuZGVyR3JhZGllbnQiLCJyZW5kZXJTdHJva2UiLCJidWlsZFNoYXBlU3RyaW5nIiwic2hhcGVTdHJpbmciLCJpdGVtRGF0YSIsInBhdGhTdHJpbmdUcmFuc2Zvcm1lZCIsInJlZHJhdyIsImxMZW4iLCJpdGVyYXRpb25zIiwic3R5bGVEYXRhIiwic3R5bGVFbGVtIiwiYXR0cjEiLCJhdHRyMiIsImNWYWx1ZXMiLCJvVmFsdWVzIiwiYW5nIiwidGV4dEFuaW1hdG9yIiwiYnVpbGROZXdUZXh0IiwiY3JlYXRlUGF0aFNoYXBlIiwic2hhcGVTdHIiLCJhcHBseVRleHRQcm9wZXJ0aWVzVG9NYXRyaXgiLCJsaW5lTnVtYmVyIiwiYnVpbGRDb2xvciIsImNvbG9yRGF0YSIsImVtcHR5UHJvcCIsInRleHRDb250YWluZXIiLCJ1c2VzR2x5cGhzIiwidFNwYW4iLCJ0RWxlbWVudCIsImp1c3RpZnkiLCJjYWNoZWRTcGFuc0xlbmd0aCIsInNldEF0dHJpYnV0ZU5TIiwidGltZSIsInJlbmRlckxldHRlcnMiLCJ0ZXh0Qm94IiwiZ2V0QkJveCIsImJib3giLCJyZW5kZXJlZExldHRlciIsInRleHRTcGFuIiwiY29sb3JCbGFjayIsImNvbG9yV2hpdGUiLCJpbml0aWFsaXplIiwiZ3JvdXBQYXRoIiwiZWxlbUNoaWxkcmVuIiwiY2hpbGRyZW4iLCJjaGlsZE5vZGVzIiwicmVtb3ZlQXR0cmlidXRlIiwicGF0aE1hc2tlciIsImRhc2hhcnJheVZhbHVlIiwiZ2V0VG90YWxMZW5ndGgiLCJ1bml0cyIsImNvbG9yMSIsImNvbG9yMiIsImNvbG9yMyIsInRhYmxlUiIsInRhYmxlRyIsInRhYmxlQiIsImZlRnVuYyIsImdldFRhYmxlVmFsdWUiLCJpbnB1dEJsYWNrIiwiaW5wdXRXaGl0ZSIsImdhbW1hIiwib3V0cHV0QmxhY2siLCJvdXRwdXRXaGl0ZSIsImNvbG9yVmFsdWUiLCJ0YWJsZSIsIm91dHB1dERlbHRhIiwiaW5wdXREZWx0YSIsImNvbCIsInNldEVsZW1lbnRBc01hc2siLCJ0aW1lUmVtYXBwZWQiLCJyZW5kZXJQYXJlbnQiLCJzZXRFbGVtZW50cyIsImVsZW1zIiwiZ2V0RWxlbWVudHMiLCJhc3NldFBhdGgiLCJpbm5lckVsZW0iLCJyZW1vdmVFbGVtZW50IiwiZXYiLCJhbmltSXRlbSIsInJlZ2lzdGVyZWRBbmltYXRpb25zIiwiaXNQYXVzZWQiLCJzdWJ0cmFjdFBsYXlpbmdDb3VudCIsIkFuaW1hdGlvbkl0ZW0iLCJzZXR1cEFuaW1hdGlvbiIsInNldERhdGEiLCJhZGRQbGF5aW5nQ291bnQiLCJwbGF5aW5nQW5pbWF0aW9uc051bSIsImFjdGl2YXRlIiwiaWRsZWQiLCJzZXRQYXJhbXMiLCJyZXN1bWUiLCJub3dUaW1lIiwiZWxhcHNlZFRpbWUiLCJhZHZhbmNlVGltZSIsImZpcnN0IiwiYW5pbUVsZW1lbnRzIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZGl2IiwiaXNMb2FkZWQiLCJjdXJyZW50UmF3RnJhbWUiLCJmcmFtZU11bHQiLCJwbGF5U3BlZWQiLCJwbGF5RGlyZWN0aW9uIiwicGxheUNvdW50IiwicHJlcmVuZGVyRnJhbWVzRmxhZyIsImF1dG9wbGF5IiwibG9vcCIsImFuaW1hdGlvbklEIiwic2NhbGVNb2RlIiwidGltZUNvbXBsZXRlZCIsInNlZ21lbnRQb3MiLCJwZW5kaW5nU2VnbWVudCIsIl9pZGxlIiwic2VsZiIsImFuaW1UeXBlIiwicmVuZGVyZXJTZXR0aW5ncyIsInByZXJlbmRlciIsImF1dG9sb2FkU2VnbWVudHMiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsImxhc3RJbmRleE9mIiwiZmlsZU5hbWUiLCJvcGVuIiwic2VuZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInN0YXR1cyIsInJlc3BvbnNlVGV4dCIsInJlc3BvbnNlIiwiZXJyIiwid3JhcHBlckF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiZ2V0TmFtZWRJdGVtIiwidGYiLCJsb2FkTmV4dFNlZ21lbnQiLCJ0cmlnZ2VyIiwic2hpZnQiLCJzZWdtZW50UGF0aCIsImxvYWRTZWdtZW50cyIsIl90aGlzIiwiaW1hZ2VQcmVsb2FkZXIiLCJ1cGRhRnJhbWVNb2RpZmllciIsIndhaXRGb3JGb250c0xvYWRlZCIsImNoZWNrTG9hZGVkIiwiY2hlY2tGb250c0xvYWRlZCIsImVsZW1lbnRMb2FkZWQiLCJnb3RvRnJhbWUiLCJzZXRTdWJmcmFtZSIsInNldEN1cnJlbnRSYXdGcmFtZVZhbHVlIiwiZnJhbWVNb2RpZmllciIsImdvVG9BbmRQbGF5IiwiYWRqdXN0U2VnbWVudCIsInVwZGF0ZUFuaW1hdGlvbiIsInNldFNlZ21lbnQiLCJlbmQiLCJwZW5kaW5nRnJhbWUiLCJwbGF5U2VnbWVudHMiLCJmb3JjZUZsYWciLCJyZXNldFNlZ21lbnRzIiwiY2hlY2tTZWdtZW50cyIsInJlbW92ZSIsIm9uRW50ZXJGcmFtZSIsIm9uTG9vcENvbXBsZXRlIiwib25Db21wbGV0ZSIsIm9uU2VnbWVudFN0YXJ0Iiwib25EZXN0cm95IiwiZ2V0UGF0aCIsImdldEFzc2V0cyIsInRyaWdnZXJFdmVudCIsImN0eFRyYW5zZm9ybSIsInRyUHJvcHMiLCJjdHhPcGFjaXR5IiwiZ2xvYmFsQWxwaGEiLCJyZXN0b3JlIiwic2F2ZSIsImFjdGlvbkZsYWciLCJwb3BwZWQiLCJtb3pUcmFuc2Zvcm1PcmlnaW4iLCJpc0Rhc2hlZCIsInRyYW5zZm9ybUNhbnZhcyIsImVsZW1lbnRXaWR0aCIsImVsZW1lbnRIZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJlbGVtZW50UmVsIiwiYW5pbWF0aW9uUmVsIiwicGFyIiwiZmlsbFR5cGUiLCJjbGVhclJlY3QiLCJiZWdpblBhdGgiLCJjbG9zZVBhdGgiLCJjbGlwIiwibmV3RE9NRWxlbWVudCIsImRkZCIsImFkZFRvM2RDb250YWluZXIiLCJuZXh0RE9NRWxlbWVudCIsIm5leHRMYXllciIsImdldFRocmVlRENvbnRhaW5lckJ5UG9zIiwic3RhcnRQb3MiLCJlbmRQb3MiLCJwZXJzcGVjdGl2ZUVsZW0iLCJjcmVhdGVUaHJlZURDb250YWluZXIiLCJ3ZWJraXRUcmFuc2Zvcm0iLCJyZXNpemVyRWxlbSIsInRocmVlRENvbnRhaW5lckRhdGEiLCJidWlsZDNkQ29udGFpbmVycyIsImxhc3RUaHJlZURDb250YWluZXJEYXRhIiwic3ZnIiwic2V0dXAiLCJjV2lkdGgiLCJjSGVpZ2h0IiwicGVyc3BlY3RpdmUiLCJ3ZWJraXRQZXJzcGVjdGl2ZSIsImNoZWNrQmxlbmRNb2RlIiwiYmxlbmRNb2RlIiwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIiwibWF4U2NhbGUiLCJkcmF3SW1hZ2UiLCJ3aWR0aENyb3AiLCJoZWlnaHRDcm9wIiwiY3R4IiwiaW1nVyIsImltZ0giLCJpbWdSZWwiLCJjYW52YXNSZWwiLCJpbWFnZUZhaWxlZCIsImZhaWxlZCIsIkltYWdlIiwiaGFzTWFza3MiLCJtb3ZlVG8iLCJsaW5lVG8iLCJiZXppZXJDdXJ2ZVRvIiwidHJhbnNmb3JtSGVscGVyIiwiZGFzaFJlc2V0dGVyIiwiY28iLCJ3aSIsImRhIiwiZG8iLCJub2RlcyIsInRyTm9kZXMiLCJoYXNTdHJva2VzIiwiaGFzRmlsbHMiLCJmbCIsIm93bkFycmF5cyIsImlzTWFpbiIsImdyb3VwVHJhbnNmb3JtIiwiZ3JvdXBNYXRyaXgiLCJtdEFyciIsInN0cm9rZVN0eWxlIiwibGluZUNhcCIsImxpbmVKb2luIiwibWl0ZXJMaW1pdCIsImZpbGxTdHlsZSIsImNvT3AiLCJzZXRMaW5lRGFzaCIsImxpbmVEYXNoT2Zmc2V0IiwicDMiLCJncm91cFRyYW5zZm9ybU1hdCIsImZpbGxSZWN0IiwiaGFzRmlsbCIsImhhc1N0cm9rZSIsImNvbW1hbmRzIiwicGF0aEFyciIsImxhc3RGaWxsIiwibGFzdFN0cm9rZSIsImxhc3RTdHJva2VXIiwiZ2V0RG9tRWxlbWVudCIsImRpdkVsZW1lbnQiLCJjb21wU3ZnIiwiX3JlbmRlclNoYXBlRnJhbWUiLCJzaGFwZXNDb250YWluZXIiLCJzaGFwZUNvbnQiLCJib3VuZGluZ0JveCIsImNoYW5nZWQiLCJjb21wVyIsImNvbXBIIiwiaW5uZXJFbGVtU3R5bGUiLCJzdHJva2VXaWR0aCIsImxpbmVIZWlnaHQiLCJ0UGFyZW50IiwidENvbnQiLCJ0ZXh0UGF0aCIsIm1hcmdpbiIsImltYWdlRWxlbSIsImRpZmZWZWN0b3IiLCJtYWciLCJsb29rRGlyIiwibG9va0xlbmd0aE9uWFoiLCJtX3JvdGF0aW9uWCIsIm1fcm90YXRpb25ZIiwiRXhwcmVzc2lvbnMiLCJnZXRTdGF0aWNWYWx1ZUF0VGltZSIsImxvb3BPdXQiLCJkdXJhdGlvbiIsImR1cmF0aW9uRmxhZyIsImxhc3RLZXlGcmFtZSIsImN5Y2xlRHVyYXRpb24iLCJmaXJzdEtleUZyYW1lIiwicmV0IiwiaW5pdFYiLCJlbmRWIiwiY3VycmVudCIsInJlcGVhdHMiLCJuZXh0TGFzdFZhbHVlIiwibG9vcEluIiwiZmlyc3RWYWx1ZSIsIm5leHRGaXJzdFZhbHVlIiwiX2NhY2hpbmdBdFRpbWUiLCJpbnRlcnBvbGF0aW9uUmVzdWx0IiwiZ2V0VmVsb2NpdHlBdFRpbWUiLCJ2ZWxvY2l0eSIsInNldEdyb3VwUHJvcGVydHkiLCJwcm9wZXJ0eUdyb3VwIiwic2VhcmNoRXhwcmVzc2lvbnMiLCJnZXRQcmVWYWx1ZSIsIkV4cHJlc3Npb25NYW5hZ2VyIiwiaW5pdGlhdGVFeHByZXNzaW9uIiwiZ2V0VHJhbnNmb3JtVmFsdWVBdFRpbWUiLCJjb25zb2xlIiwibG9nIiwiZ2V0VHJhbnNmb3JtU3RhdGljVmFsdWVBdFRpbWUiLCJnZXRTaGFwZVZhbHVlQXRUaW1lIiwiX3NoYXBlVmFsdWVBdFRpbWUiLCJfbGFzdEluZGV4QXRUaW1lIiwiX2xhc3RUaW1lQXRUaW1lIiwiVGV4dEV4cHJlc3Npb25TZWxlY3RvclByb3AiLCJnZXRWYWx1ZVByb3h5IiwidG90YWwiLCJ0ZXh0SW5kZXgiLCJ0ZXh0VG90YWwiLCJzZWxlY3RvclZhbHVlIiwicHJvcGVydHlHZXRQcm9wIiwibnVtS2V5cyIsImlzQWRkZWQiLCJTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbiIsIktleWZyYW1lZFNoYXBlUHJvcGVydHlDb25zdHJ1Y3RvckZ1bmN0aW9uIiwidmVydGljZXMiLCJpblRhbmdlbnRzIiwib3V0VGFuZ2VudHMiLCJpc0Nsb3NlZCIsInBvaW50T25QYXRoIiwiX3NlZ21lbnRzTGVuZ3RoIiwic2VnbWVudHNMZW5ndGgiLCJhY2N1bXVsYXRlZExlbmd0aCIsImluaXRJbmRleCIsImVuZEluZGV4IiwidmVjdG9yT25QYXRoIiwidmVjdG9yVHlwZSIsInhMZW5ndGgiLCJ5TGVuZ3RoIiwibWFnbml0dWRlIiwidGFuZ2VudE9uUGF0aCIsIm5vcm1hbE9uUGF0aCIsInByb3BlcnR5R2V0U2hhcGVQcm9wIiwidHJpbXMiLCJwcm9wZXJ0eUdldFRleHRQcm9wIiwiY2FsY3VsYXRlRXhwcmVzc2lvbiIsImdldEV4cHJlc3Npb25WYWx1ZSIsImR1cGxpY2F0ZVByb3BlcnR5VmFsdWUiLCJOdW1iZXIiLCJzaGFwZXNFcXVhbCIsInNoYXBlMSIsInNoYXBlMiIsIiRibV9uZWciLCJ0T2ZBIiwibGVuQSIsInJldEFyciIsInN1bSIsInRPZkIiLCJsZW5CIiwic3ViIiwibXVsIiwibW9kIiwiY2xhbXAiLCJtbSIsInJhZGlhbnNUb0RlZ3JlZXMiLCJkZWdyZWVzVG9SYWRpYW5zIiwiYXJyMSIsImFycjIiLCJoZWxwZXJMZW5ndGhBcnJheSIsIm5vcm1hbGl6ZSIsInZlYyIsInJnYlRvSHNsIiwiaHNsVG9SZ2IiLCJodWUycmdiIiwibGluZWFyIiwidE1pbiIsInRNYXgiLCJ2YWx1ZTEiLCJ2YWx1ZTIiLCJybmQiLCJjcmVhdGVQYXRoIiwicHJvcGVydHkiLCJsb29rQXQiLCJlbGVtMSIsImVsZW0yIiwiZlZlYyIsInBpdGNoIiwiZWFzZU91dCIsInZhbDEiLCJ2YWwyIiwibmVhcmVzdEtleSIsImtleVRpbWUiLCJmcmFtZXNUb1RpbWUiLCJmcmFtZXMiLCJmcHMiLCJ0aW1lVG9GcmFtZXMiLCJzZWVkUmFuZG9tIiwicmFuZFNlZWQiLCJleGVjdXRlRXhwcmVzc2lvbiIsIl9uZWVkc1JhbmRvbSIsImZyYW1lRXhwcmVzc2lvbklkIiwibG9jayIsInRoaXNMYXllciIsInRoaXNDb21wIiwidG9Xb3JsZCIsImZyb21Xb3JsZCIsImZyb21Db21wIiwiZnJvbUNvbXBUb1N1cmZhY2UiLCJhbmNob3JQb2ludCIsImVsZW1UeXBlIiwiY29udGVudCIsImVmZmVjdCIsImhhc1BhcmVudCIsIm5lZWRzVmVsb2NpdHkiLCJ2ZWxvY2l0eUF0VGltZSIsImJpbmRlZEZuIiwidGhpc1Byb3BlcnR5IiwiZnJhbWVEdXJhdGlvbiIsImluUG9pbnQiLCJvdXRQb2ludCIsImxvb3BfaW4iLCJsb29wX291dCIsInZhbHVlQXRUaW1lIiwiZm4iLCJGdW5jdGlvbiIsImV2YWwiLCJ3aWdnbGUiLCJmcmVxIiwiYW1wIiwiYWRkZWRBbXBzIiwicGVyaW9kcyIsImxvb3BJbkR1cmF0aW9uIiwibG9vcE91dER1cmF0aW9uIiwicmFkaWFuc190b19kZWdyZWVzIiwiZGVncmVlc190b19yYWRpYW5zIiwidmlldyIsInNoYXBlSW50ZXJmYWNlRmFjdG9yeSIsImNyZWF0ZUdyb3VwSW50ZXJmYWNlIiwiZ3JvdXBJbnRlcmZhY2VGYWN0b3J5IiwiY3JlYXRlRmlsbEludGVyZmFjZSIsImZpbGxJbnRlcmZhY2VGYWN0b3J5IiwiY3JlYXRlU3Ryb2tlSW50ZXJmYWNlIiwic3Ryb2tlSW50ZXJmYWNlRmFjdG9yeSIsImNyZWF0ZVRyaW1JbnRlcmZhY2UiLCJ0cmltSW50ZXJmYWNlRmFjdG9yeSIsImNyZWF0ZVRyYW5zZm9ybUludGVyZmFjZSIsInRyYW5zZm9ybUludGVyZmFjZUZhY3RvcnkiLCJjcmVhdGVFbGxpcHNlSW50ZXJmYWNlIiwiZWxsaXBzZUludGVyZmFjZUZhY3RvcnkiLCJjcmVhdGVTdGFySW50ZXJmYWNlIiwic3RhckludGVyZmFjZUZhY3RvcnkiLCJjcmVhdGVSZWN0SW50ZXJmYWNlIiwicmVjdEludGVyZmFjZUZhY3RvcnkiLCJjcmVhdGVSb3VuZGVkSW50ZXJmYWNlIiwicm91bmRlZEludGVyZmFjZUZhY3RvcnkiLCJjcmVhdGVSZXBhdGVhckludGVyZmFjZSIsInJlcGVhdGVySW50ZXJmYWNlRmFjdG9yeSIsImNyZWF0ZVBhdGhJbnRlcmZhY2UiLCJwYXRoSW50ZXJmYWNlRmFjdG9yeSIsIml0ZXJhdGVFbGVtZW50cyIsIl9pbnRlcmZhY2VGdW5jdGlvbiIsImludGVyZmFjZXMiLCJfbmFtZSIsImNvbnRlbnRzSW50ZXJmYWNlRmFjdG9yeSIsImludGVyZmFjZUZ1bmN0aW9uIiwibW4iLCJwcm9wZXJ0eUluZGV4IiwibnVtUHJvcGVydGllcyIsImNpeCIsInRyYW5zZm9ybUludGVyZmFjZSIsIm5wIiwiX3Byb3BlcnR5R3JvdXAiLCJfZGFzaFByb3BlcnR5R3JvdXAiLCJkYXNoT2IiLCJyb3RhdGlvbiIsInNrZXdBeGlzIiwib3V0ZXJSYWRpdXMiLCJvdXRlclJvdW5kbmVzcyIsImlubmVyUm91bmRuZXNzIiwiaW5uZXJSYWRpdXMiLCJyYWRpdXMiLCJfdGhpc0xheWVyRnVuY3Rpb24iLCJfc291cmNlVGV4dCIsInN0cmluZ1ZhbHVlIiwiX3ByZXZWYWx1ZSIsInRvV29ybGRNYXQiLCJfcmVnaXN0ZXJNYXNrSW50ZXJmYWNlIiwiTWFza01hbmFnZXJJbnRlcmZhY2UiLCJfcmVnaXN0ZXJFZmZlY3RzSW50ZXJmYWNlIiwiVHJhbnNmb3JtRXhwcmVzc2lvbkludGVyZmFjZSIsInRvQ29tcCIsInBpeGVsQXNwZWN0IiwiX3RoaXNGdW5jdGlvbiIsInhQb3NpdGlvbiIsInlQb3NpdGlvbiIsImNvbXBvc2l0aW9ucyIsIl90aGlzUHJvamVjdEZ1bmN0aW9uIiwiZWZmZWN0c0RhdGEiLCJncm91cEludGVyZmFjZSIsImNyZWF0ZVZhbHVlSW50ZXJmYWNlIiwiZW4iLCJNYXNrSW50ZXJmYWNlIiwiX21hc2siLCJfZGF0YSIsIl9tYXNrc0ludGVyZmFjZXMiLCJlbGVtZW50UHJvcCIsImV4cHJlc3Npb25WYWx1ZSIsImFyclZhbHVlIiwiZWZmIiwiYm9keW1vdmluanMiLCJfX2dldEZhY3RvcnkiLCJ2ZXJzaW9uIiwic2NyaXB0cyIsIm15U2NyaXB0Iiwic2V0SW50ZXJ2YWwiLCJleHBvcnROYW1lIiwic2V0VGltZW91dENvbnRleHQiLCJ0aW1lb3V0IiwiYmluZEZuIiwiaW52b2tlQXJyYXlBcmciLCJhcmciLCJpc0FycmF5IiwiZWFjaCIsIml0ZXJhdG9yIiwiZm9yRWFjaCIsImRlcHJlY2F0ZSIsIm1ldGhvZCIsIm1lc3NhZ2UiLCJkZXByZWNhdGlvbk1lc3NhZ2UiLCJzdGFjayIsIndhcm4iLCJpbmhlcml0IiwiYmFzZSIsImNoaWxkUCIsImJhc2VQIiwiX3N1cGVyIiwiYXNzaWduIiwiYm9vbE9yRm4iLCJUWVBFX0ZVTkNUSU9OIiwiaWZVbmRlZmluZWQiLCJhZGRFdmVudExpc3RlbmVycyIsInR5cGVzIiwiaGFuZGxlciIsInNwbGl0U3RyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJpblN0ciIsImZpbmQiLCJ0cmltIiwiaW5BcnJheSIsImZpbmRCeUtleSIsInVuaXF1ZUFycmF5Iiwic29ydCIsInJlc3VsdHMiLCJwcmVmaXhlZCIsInByZWZpeCIsImNhbWVsUHJvcCIsInRvVXBwZXJDYXNlIiwiVkVORE9SX1BSRUZJWEVTIiwidW5pcXVlSWQiLCJfdW5pcXVlSWQiLCJnZXRXaW5kb3dGb3JFbGVtZW50IiwiZG9jIiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiSW5wdXQiLCJtYW5hZ2VyIiwiaW5wdXRUYXJnZXQiLCJkb21IYW5kbGVyIiwiZW5hYmxlIiwiY3JlYXRlSW5wdXRJbnN0YW5jZSIsImlucHV0Q2xhc3MiLCJTVVBQT1JUX1BPSU5URVJfRVZFTlRTIiwiUG9pbnRlckV2ZW50SW5wdXQiLCJTVVBQT1JUX09OTFlfVE9VQ0giLCJUb3VjaElucHV0IiwiU1VQUE9SVF9UT1VDSCIsIlRvdWNoTW91c2VJbnB1dCIsIk1vdXNlSW5wdXQiLCJpbnB1dEhhbmRsZXIiLCJldmVudFR5cGUiLCJpbnB1dCIsInBvaW50ZXJzTGVuIiwicG9pbnRlcnMiLCJjaGFuZ2VkUG9pbnRlcnNMZW4iLCJjaGFuZ2VkUG9pbnRlcnMiLCJpc0ZpcnN0IiwiSU5QVVRfU1RBUlQiLCJpc0ZpbmFsIiwiSU5QVVRfRU5EIiwiSU5QVVRfQ0FOQ0VMIiwic2Vzc2lvbiIsImNvbXB1dGVJbnB1dERhdGEiLCJlbWl0IiwicmVjb2duaXplIiwicHJldklucHV0IiwicG9pbnRlcnNMZW5ndGgiLCJmaXJzdElucHV0Iiwic2ltcGxlQ2xvbmVJbnB1dERhdGEiLCJmaXJzdE11bHRpcGxlIiwib2Zmc2V0Q2VudGVyIiwiY2VudGVyIiwiZ2V0Q2VudGVyIiwidGltZVN0YW1wIiwiZGVsdGFUaW1lIiwiZ2V0QW5nbGUiLCJnZXREaXN0YW5jZSIsImNvbXB1dGVEZWx0YVhZIiwib2Zmc2V0RGlyZWN0aW9uIiwiZ2V0RGlyZWN0aW9uIiwiZGVsdGFYIiwiZGVsdGFZIiwib3ZlcmFsbFZlbG9jaXR5IiwiZ2V0VmVsb2NpdHkiLCJvdmVyYWxsVmVsb2NpdHlYIiwib3ZlcmFsbFZlbG9jaXR5WSIsImdldFNjYWxlIiwiZ2V0Um90YXRpb24iLCJtYXhQb2ludGVycyIsImNvbXB1dGVJbnRlcnZhbElucHV0RGF0YSIsInNyY0V2ZW50Iiwib2Zmc2V0RGVsdGEiLCJwcmV2RGVsdGEiLCJ2ZWxvY2l0eVgiLCJ2ZWxvY2l0eVkiLCJsYXN0IiwibGFzdEludGVydmFsIiwiQ09NUFVURV9JTlRFUlZBTCIsImNsaWVudFgiLCJjbGllbnRZIiwiRElSRUNUSU9OX05PTkUiLCJESVJFQ1RJT05fTEVGVCIsIkRJUkVDVElPTl9SSUdIVCIsIkRJUkVDVElPTl9VUCIsIkRJUkVDVElPTl9ET1dOIiwiUFJPUFNfWFkiLCJQUk9QU19DTElFTlRfWFkiLCJldkVsIiwiTU9VU0VfRUxFTUVOVF9FVkVOVFMiLCJldldpbiIsIk1PVVNFX1dJTkRPV19FVkVOVFMiLCJwcmVzc2VkIiwiUE9JTlRFUl9FTEVNRU5UX0VWRU5UUyIsIlBPSU5URVJfV0lORE9XX0VWRU5UUyIsInN0b3JlIiwicG9pbnRlckV2ZW50cyIsIlNpbmdsZVRvdWNoSW5wdXQiLCJldlRhcmdldCIsIlNJTkdMRV9UT1VDSF9UQVJHRVRfRVZFTlRTIiwiU0lOR0xFX1RPVUNIX1dJTkRPV19FVkVOVFMiLCJzdGFydGVkIiwibm9ybWFsaXplU2luZ2xlVG91Y2hlcyIsImFsbCIsInRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlRPVUNIX1RBUkdFVF9FVkVOVFMiLCJ0YXJnZXRJZHMiLCJnZXRUb3VjaGVzIiwiYWxsVG91Y2hlcyIsIklOUFVUX01PVkUiLCJpZGVudGlmaWVyIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUYXJnZXRUb3VjaGVzIiwidG91Y2giLCJtb3VzZSIsInByaW1hcnlUb3VjaCIsImxhc3RUb3VjaGVzIiwicmVjb3JkVG91Y2hlcyIsImV2ZW50RGF0YSIsInNldExhc3RUb3VjaCIsImxhc3RUb3VjaCIsImx0cyIsInJlbW92ZUxhc3RUb3VjaCIsIkRFRFVQX1RJTUVPVVQiLCJpc1N5bnRoZXRpY0V2ZW50IiwiZHgiLCJkeSIsIkRFRFVQX0RJU1RBTkNFIiwiVG91Y2hBY3Rpb24iLCJzZXQiLCJjbGVhblRvdWNoQWN0aW9ucyIsImFjdGlvbnMiLCJUT1VDSF9BQ1RJT05fTk9ORSIsImhhc1BhblgiLCJUT1VDSF9BQ1RJT05fUEFOX1giLCJoYXNQYW5ZIiwiVE9VQ0hfQUNUSU9OX1BBTl9ZIiwiVE9VQ0hfQUNUSU9OX01BTklQVUxBVElPTiIsIlRPVUNIX0FDVElPTl9BVVRPIiwiUmVjb2duaXplciIsImRlZmF1bHRzIiwiU1RBVEVfUE9TU0lCTEUiLCJzaW11bHRhbmVvdXMiLCJyZXF1aXJlRmFpbCIsInN0YXRlU3RyIiwiU1RBVEVfQ0FOQ0VMTEVEIiwiU1RBVEVfRU5ERUQiLCJTVEFURV9DSEFOR0VEIiwiU1RBVEVfQkVHQU4iLCJkaXJlY3Rpb25TdHIiLCJnZXRSZWNvZ25pemVyQnlOYW1lSWZNYW5hZ2VyIiwib3RoZXJSZWNvZ25pemVyIiwicmVjb2duaXplciIsIkF0dHJSZWNvZ25pemVyIiwiUGFuUmVjb2duaXplciIsInBYIiwicFkiLCJQaW5jaFJlY29nbml6ZXIiLCJQcmVzc1JlY29nbml6ZXIiLCJfdGltZXIiLCJfaW5wdXQiLCJSb3RhdGVSZWNvZ25pemVyIiwiU3dpcGVSZWNvZ25pemVyIiwiVGFwUmVjb2duaXplciIsInBUaW1lIiwicENlbnRlciIsIkhhbW1lciIsInJlY29nbml6ZXJzIiwicHJlc2V0IiwiTWFuYWdlciIsImhhbmRsZXJzIiwib2xkQ3NzUHJvcHMiLCJ0b3VjaEFjdGlvbiIsInRvZ2dsZUNzc1Byb3BzIiwiaXRlbSIsInJlY29nbml6ZVdpdGgiLCJyZXF1aXJlRmFpbHVyZSIsImNzc1Byb3BzIiwidHJpZ2dlckRvbUV2ZW50IiwiZXZlbnQiLCJnZXN0dXJlRXZlbnQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImdlc3R1cmUiLCJkaXNwYXRjaEV2ZW50IiwiVEVTVF9FTEVNRU5UIiwiVHlwZUVycm9yIiwib3V0cHV0IiwibmV4dEtleSIsImV4dGVuZCIsImRlc3QiLCJtZXJnZSIsIk1PQklMRV9SRUdFWCIsIkRJUkVDVElPTl9IT1JJWk9OVEFMIiwiRElSRUNUSU9OX1ZFUlRJQ0FMIiwiRElSRUNUSU9OX0FMTCIsIk1PVVNFX0lOUFVUX01BUCIsIm1vdXNlZG93biIsIm1vdXNlbW92ZSIsIm1vdXNldXAiLCJidXR0b24iLCJ3aGljaCIsInBvaW50ZXJUeXBlIiwiUE9JTlRFUl9JTlBVVF9NQVAiLCJwb2ludGVyZG93biIsInBvaW50ZXJtb3ZlIiwicG9pbnRlcnVwIiwicG9pbnRlcmNhbmNlbCIsInBvaW50ZXJvdXQiLCJJRTEwX1BPSU5URVJfVFlQRV9FTlVNIiwiNCIsIjUiLCJNU1BvaW50ZXJFdmVudCIsIlBvaW50ZXJFdmVudCIsInJlbW92ZVBvaW50ZXIiLCJldmVudFR5cGVOb3JtYWxpemVkIiwiaXNUb3VjaCIsInN0b3JlSW5kZXgiLCJwb2ludGVySWQiLCJTSU5HTEVfVE9VQ0hfSU5QVVRfTUFQIiwidG91Y2hzdGFydCIsInRvdWNobW92ZSIsInRvdWNoZW5kIiwidG91Y2hjYW5jZWwiLCJUT1VDSF9JTlBVVF9NQVAiLCJpbnB1dEV2ZW50IiwiaW5wdXREYXRhIiwiaXNNb3VzZSIsInNvdXJjZUNhcGFiaWxpdGllcyIsImZpcmVzVG91Y2hFdmVudHMiLCJQUkVGSVhFRF9UT1VDSF9BQ1RJT04iLCJOQVRJVkVfVE9VQ0hfQUNUSU9OIiwiVE9VQ0hfQUNUSU9OX01BUCIsInRvdWNoTWFwIiwiY3NzU3VwcG9ydHMiLCJDU1MiLCJzdXBwb3J0cyIsImNvbXB1dGUiLCJnZXRUb3VjaEFjdGlvbiIsInByZXZlbnREZWZhdWx0cyIsInByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwiaGFzTm9uZSIsImlzVGFwUG9pbnRlciIsImlzVGFwTW92ZW1lbnQiLCJpc1RhcFRvdWNoVGltZSIsInByZXZlbnRTcmMiLCJTVEFURV9SRUNPR05JWkVEIiwiZHJvcFJlY29nbml6ZVdpdGgiLCJkcm9wUmVxdWlyZUZhaWx1cmUiLCJoYXNSZXF1aXJlRmFpbHVyZXMiLCJjYW5SZWNvZ25pemVXaXRoIiwiYWRkaXRpb25hbEV2ZW50IiwidHJ5RW1pdCIsImNhbkVtaXQiLCJpbnB1dERhdGFDbG9uZSIsInByb2Nlc3MiLCJhdHRyVGVzdCIsIm9wdGlvblBvaW50ZXJzIiwiaXNSZWNvZ25pemVkIiwiaXNWYWxpZCIsInRocmVzaG9sZCIsImRpcmVjdGlvblRlc3QiLCJoYXNNb3ZlZCIsImluT3V0IiwidmFsaWRQb2ludGVycyIsInZhbGlkTW92ZW1lbnQiLCJ2YWxpZFRpbWUiLCJ0YXBzIiwiaW50ZXJ2YWwiLCJwb3NUaHJlc2hvbGQiLCJ2YWxpZFRvdWNoVGltZSIsImZhaWxUaW1lb3V0IiwidmFsaWRJbnRlcnZhbCIsInZhbGlkTXVsdGlUYXAiLCJ0YXBDb3VudCIsIlZFUlNJT04iLCJkb21FdmVudHMiLCJ0b3VjaFNlbGVjdCIsInRvdWNoQ2FsbG91dCIsImNvbnRlbnRab29taW5nIiwidXNlckRyYWciLCJ0YXBIaWdobGlnaHRDb2xvciIsImZvcmNlIiwic3RvcHBlZCIsImN1clJlY29nbml6ZXIiLCJleGlzdGluZyIsIm9uIiwiZXZlbnRzIiwib2ZmIiwiU1RBVEVfRkFJTEVEIiwiVGFwIiwiUGFuIiwiU3dpcGUiLCJQaW5jaCIsIlJvdGF0ZSIsIlByZXNzIiwiX2NsYXNzQ2FsbENoZWNrIiwiQ29uc3RydWN0b3IiLCJBcHBlYXIiLCIkY29udGFpbmVyIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiJGFuaW1hdGUiLCJjbGFzc0xpc3QiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIkNhcm91c2VsIiwiJGNvbnRyb2xzIiwicXVlcnlTZWxlY3RvckFsbCIsIiRpbWFnZXMiLCIkaW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwiJGRpYW1vbmQiLCIkZGlhbW9uZFRleHQiLCIkdGV4dHMiLCIkdGV4dCIsIiRiYWNrZ3JvdW5kRGl2cyIsIiRjaXJjbGVzIiwicXVhbnRpdHkiLCJzd2lwZWQiLCJjb2xvcnMiLCJiYWNrZ3JvdW5kQ29sb3JzIiwic3dpcGVzIiwiY2hhbmdlU2xpZGUiLCJjaGVjayIsIl90aGlzMiIsImJvcmRlckNvbG9yIiwiX3RoaXMzIiwiYmFja2dyb3VuZENvbG9yIiwiaGFtbWVyanMiLCJNdXNpYyIsImF1ZGlvIiwiQXVkaW8iLCJsaW5rIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJtdXRlIiwiJGVsIiwiJGljb24iLCJ2b2x1bWUiLCI2IiwiU2Nyb2xsQXBwZWFyaW5nIiwiJGVsZW1lbnRzIiwicmVmcmVzaFByb3BlcnRpZXMiLCJpbm5lckhlaWdodCIsImFwcGVhcmVkIiwiNyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9zY3JvbGxhcHBlYXJpbmciLCJfc2Nyb2xsYXBwZWFyaW5nMiIsIl9hcHBlYXIiLCJfYXBwZWFyMiIsIl9jYXJvdXNlbCIsIl9jYXJvdXNlbDIiLCJfbXVzaWMiLCJfbXVzaWMyIiwiX2JvZHltb3ZpbiIsIl9ib2R5bW92aW4yIiwib25sb2FkIiwiLi9jb21wb25lbnRzL2FwcGVhciIsIi4vY29tcG9uZW50cy9jYXJvdXNlbCIsIi4vY29tcG9uZW50cy9tdXNpYyIsIi4vY29tcG9uZW50cy9zY3JvbGxhcHBlYXJpbmciXSwibWFwcGluZ3MiOiJDQUFBLFFBQVVBLEdBQUVDLEVBQUVDLEVBQUVDLEdBQUcsUUFBU0MsR0FBRUMsRUFBRUMsR0FBRyxJQUFJSixFQUFFRyxHQUFHLENBQUMsSUFBSUosRUFBRUksR0FBRyxDQUFDLEdBQUlFLEdBQWtCLGtCQUFUQyxVQUFxQkEsT0FBUSxLQUFJRixHQUFHQyxFQUFFLE1BQU9BLEdBQUVGLEdBQUUsRUFBSSxJQUFHSSxFQUFFLE1BQU9BLEdBQUVKLEdBQUUsRUFBSSxJQUFJSyxHQUFFLEdBQUlDLE9BQU0sdUJBQXVCTixFQUFFLElBQUssTUFBTUssR0FBRUUsS0FBSyxtQkFBbUJGLEVBQUUsR0FBSUcsR0FBRVgsRUFBRUcsSUFBSVMsV0FBWWIsR0FBRUksR0FBRyxHQUFHVSxLQUFLRixFQUFFQyxRQUFRLFNBQVNkLEdBQUcsR0FBSUUsR0FBRUQsRUFBRUksR0FBRyxHQUFHTCxFQUFHLE9BQU9JLEdBQUVGLEdBQUlGLElBQUlhLEVBQUVBLEVBQUVDLFFBQVFkLEVBQUVDLEVBQUVDLEVBQUVDLEdBQUcsTUFBT0QsR0FBRUcsR0FBR1MsUUFBa0QsSUFBSSxHQUExQ0wsR0FBa0Isa0JBQVRELFVBQXFCQSxRQUFnQkgsRUFBRSxFQUFFQSxFQUFFRixFQUFFYSxPQUFPWCxJQUFJRCxFQUFFRCxFQUFFRSxHQUFJLE9BQU9ELEtBQUthLEdBQUcsU0FBU1QsUUFBUVUsT0FBT0osVUFDdGQsU0FBU0ssRUFBTUMsR0FDVSxrQkFBWEMsU0FBeUJBLE9BQU9DLElBQ3ZDRCxPQUFPLFdBQ0gsTUFBT0QsR0FBUUQsS0FFTSxnQkFBWEQsU0FBdUJBLE9BQU9KLFFBQzVDSSxPQUFPSixRQUFVTSxFQUFRRCxHQUV6QkEsRUFBS0ksVUFBWUgsRUFBUUQsSUFFOUJLLFdBQWUsU0FBU0EsUUE0QjNCLFFBQVNDLG9CQUFt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eTBELGNBQWMsUUFDbkNmLFNBQVUxekQsU0FBU3MwRCxpQkFBaUIsdUJBQ3BDMXBELFVBQVcsWUFRQSxHQUFJMHNELEdBQVdOLFNBQzFCeEQsV0FBWXh6RCxTQUFTeTBELGNBQWMsYUFRekIsR0FBSStDLEdBQVFSLFNBQ3RCakIsS0FBTSxnQ0FDTkssSUFBS3AyRCxTQUFTeTBELGNBQWMsa0JBQzVCNEIsTUFBT3IyRCxTQUFTeTBELGNBQWMsa0JBT25CaUQsRUFBWVYsUUFBUWxyRCxlQUMvQmt4QixVQUFXaDlCLFNBQVN5MEQsY0FBYyxXQUNsQ3Z0RCxTQUFVLE1BQ1ZvOUIsVUFBVSxFQUNWbHJDLEtBQU0sNEJBR1J2TyxRQUFPOHNFLE9BQVMsV0FDZHY5QyxXQUFXLFdBQ1RwYSxTQUFTeTBELGNBQWMsV0FBV2QsVUFBVW5pQyxJQUFJLFdBQ2hEcFgsV0FBVyxXQUNUcGEsU0FBU3kwRCxjQUFjLFdBQVdocEUsTUFBTUksUUFBVSxRQUNqRCxNQUNGLFNBR0YrckUsc0JBQXNCLEVBQUVDLHdCQUF3QixFQUFFQyxxQkFBcUIsRUFBRUMsK0JBQStCLEVBQUVudEUsVUFBWSxTQUFTIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xyXG4gICAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XHJcbiAgICAgICAgZGVmaW5lKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFjdG9yeShyb290KTtcclxuICAgICAgICB9KTtcclxuICAgIH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiBtb2R1bGUuZXhwb3J0cykge1xyXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyb290KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcm9vdC5ib2R5bW92aW4gPSBmYWN0b3J5KHJvb3QpO1xyXG4gICAgfVxyXG59KCh3aW5kb3cgfHwge30pLCBmdW5jdGlvbih3aW5kb3cpIHtcclxuICAgIHZhciBzdmdOUyA9IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtcclxuXHJcbnZhciBsb2NhdGlvbkhyZWYgPSAnJztcclxuXG52YXIgc3ViZnJhbWVFbmFibGVkID0gdHJ1ZTtcclxudmFyIGV4cHJlc3Npb25zUGx1Z2luO1xyXG52YXIgaXNTYWZhcmkgPSAvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xyXG52YXIgY2FjaGVkQ29sb3JzID0ge307XHJcbnZhciBibV9yb3VuZGVyID0gTWF0aC5yb3VuZDtcclxudmFyIGJtX3JuZDtcclxudmFyIGJtX3BvdyA9IE1hdGgucG93O1xyXG52YXIgYm1fc3FydCA9IE1hdGguc3FydDtcclxudmFyIGJtX2FicyA9IE1hdGguYWJzO1xyXG52YXIgYm1fZmxvb3IgPSBNYXRoLmZsb29yO1xyXG52YXIgYm1fbWF4ID0gTWF0aC5tYXg7XHJcbnZhciBibV9taW4gPSBNYXRoLm1pbjtcclxudmFyIGJsaXR0ZXIgPSAxMDtcclxuXHJcbnZhciBCTU1hdGggPSB7fTtcclxuKGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgcHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE1hdGgpO1xyXG4gICAgdmFyIGksIGxlbiA9IHByb3BlcnR5TmFtZXMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBCTU1hdGhbcHJvcGVydHlOYW1lc1tpXV0gPSBNYXRoW3Byb3BlcnR5TmFtZXNbaV1dO1xyXG4gICAgfVxyXG59KCkpO1xyXG5cclxuZnVuY3Rpb24gUHJvamVjdEludGVyZmFjZSgpe3JldHVybiB7fX07XHJcblxyXG5CTU1hdGgucmFuZG9tID0gTWF0aC5yYW5kb207XHJcbkJNTWF0aC5hYnMgPSBmdW5jdGlvbih2YWwpe1xyXG4gICAgdmFyIHRPZlZhbCA9IHR5cGVvZiB2YWw7XHJcbiAgICBpZih0T2ZWYWwgPT09ICdvYmplY3QnICYmIHZhbC5sZW5ndGgpe1xyXG4gICAgICAgIHZhciBhYnNBcnIgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dmFsLmxlbmd0aH0pO1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSB2YWwubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIGFic0FycltpXSA9IE1hdGguYWJzKHZhbFtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhYnNBcnI7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gTWF0aC5hYnModmFsKTtcclxuXHJcbn1cclxudmFyIGRlZmF1bHRDdXJ2ZVNlZ21lbnRzID0gMTUwO1xyXG52YXIgZGVnVG9SYWRzID0gTWF0aC5QSS8xODA7XHJcbnZhciByb3VuZENvcm5lciA9IDAuNTUxOTtcclxuXHJcbmZ1bmN0aW9uIHJvdW5kVmFsdWVzKGZsYWcpe1xyXG4gICAgaWYoZmxhZyl7XHJcbiAgICAgICAgYm1fcm5kID0gTWF0aC5yb3VuZDtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIGJtX3JuZCA9IGZ1bmN0aW9uKHZhbCl7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWw7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5yb3VuZFZhbHVlcyhmYWxzZSk7XHJcblxyXG5mdW5jdGlvbiByb3VuZFRvMkRlY2ltYWxzKHZhbCl7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWwqMTAwMDApLzEwMDAwO1xyXG59XHJcblxyXG5mdW5jdGlvbiByb3VuZFRvM0RlY2ltYWxzKHZhbCl7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWwqMTAwKS8xMDA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN0eWxlRGl2KGVsZW1lbnQpe1xyXG4gICAgZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgICBlbGVtZW50LnN0eWxlLnRvcCA9IDA7XHJcbiAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSAwO1xyXG4gICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgIGVsZW1lbnQuc3R5bGUudHJhbnNmb3JtT3JpZ2luID0gZWxlbWVudC5zdHlsZS53ZWJraXRUcmFuc2Zvcm1PcmlnaW4gPSAnMCAwJztcclxuICAgIGVsZW1lbnQuc3R5bGUuYmFja2ZhY2VWaXNpYmlsaXR5ICA9IGVsZW1lbnQuc3R5bGUud2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5ID0gJ3Zpc2libGUnO1xyXG4gICAgZWxlbWVudC5zdHlsZS50cmFuc2Zvcm1TdHlsZSA9IGVsZW1lbnQuc3R5bGUud2Via2l0VHJhbnNmb3JtU3R5bGUgPSBlbGVtZW50LnN0eWxlLm1velRyYW5zZm9ybVN0eWxlID0gXCJwcmVzZXJ2ZS0zZFwiO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzdHlsZVVuc2VsZWN0YWJsZURpdihlbGVtZW50KXtcclxuICAgIGVsZW1lbnQuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJztcclxuICAgIGVsZW1lbnQuc3R5bGUuTW96VXNlclNlbGVjdCA9ICdub25lJztcclxuICAgIGVsZW1lbnQuc3R5bGUud2Via2l0VXNlclNlbGVjdCA9ICdub25lJztcclxuICAgIGVsZW1lbnQuc3R5bGUub1VzZXJTZWxlY3QgPSAnbm9uZSc7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBCTUVudGVyRnJhbWVFdmVudChuLGMsdCxkKXtcclxuICAgIHRoaXMudHlwZSA9IG47XHJcbiAgICB0aGlzLmN1cnJlbnRUaW1lID0gYztcclxuICAgIHRoaXMudG90YWxUaW1lID0gdDtcclxuICAgIHRoaXMuZGlyZWN0aW9uID0gZCA8IDAgPyAtMToxO1xyXG59XHJcblxyXG5mdW5jdGlvbiBCTUNvbXBsZXRlRXZlbnQobixkKXtcclxuICAgIHRoaXMudHlwZSA9IG47XHJcbiAgICB0aGlzLmRpcmVjdGlvbiA9IGQgPCAwID8gLTE6MTtcclxufVxyXG5cclxuZnVuY3Rpb24gQk1Db21wbGV0ZUxvb3BFdmVudChuLGMsdCxkKXtcclxuICAgIHRoaXMudHlwZSA9IG47XHJcbiAgICB0aGlzLmN1cnJlbnRMb29wID0gYztcclxuICAgIHRoaXMudG90YWxMb29wcyA9IHQ7XHJcbiAgICB0aGlzLmRpcmVjdGlvbiA9IGQgPCAwID8gLTE6MTtcclxufVxyXG5cclxuZnVuY3Rpb24gQk1TZWdtZW50U3RhcnRFdmVudChuLGYsdCl7XHJcbiAgICB0aGlzLnR5cGUgPSBuO1xyXG4gICAgdGhpcy5maXJzdEZyYW1lID0gZjtcclxuICAgIHRoaXMudG90YWxGcmFtZXMgPSB0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBCTURlc3Ryb3lFdmVudChuLHQpe1xyXG4gICAgdGhpcy50eXBlID0gbjtcclxuICAgIHRoaXMudGFyZ2V0ID0gdDtcclxufVxyXG5cclxuZnVuY3Rpb24gX2FkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBjYWxsYmFjayl7XHJcblxyXG4gICAgaWYgKCF0aGlzLl9jYnNbZXZlbnROYW1lXSl7XHJcbiAgICAgICAgdGhpcy5fY2JzW2V2ZW50TmFtZV0gPSBbXTtcclxuICAgIH1cclxuICAgIHRoaXMuX2Nic1tldmVudE5hbWVdLnB1c2goY2FsbGJhY2spO1xyXG5cclxuXHRyZXR1cm4gZnVuY3Rpb24oKSB7XHJcblx0XHR0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBjYWxsYmFjayk7XHJcblx0fS5iaW5kKHRoaXMpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBfcmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsY2FsbGJhY2spe1xyXG5cclxuICAgIGlmICghY2FsbGJhY2spe1xyXG4gICAgICAgIHRoaXMuX2Nic1tldmVudE5hbWVdID0gbnVsbDtcclxuICAgIH1lbHNlIGlmKHRoaXMuX2Nic1tldmVudE5hbWVdKXtcclxuICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IHRoaXMuX2Nic1tldmVudE5hbWVdLmxlbmd0aDtcclxuICAgICAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuX2Nic1tldmVudE5hbWVdW2ldID09PSBjYWxsYmFjayl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jYnNbZXZlbnROYW1lXS5zcGxpY2UoaSwxKTtcclxuICAgICAgICAgICAgICAgIGkgLT0xO1xyXG4gICAgICAgICAgICAgICAgbGVuIC09IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZighdGhpcy5fY2JzW2V2ZW50TmFtZV0ubGVuZ3RoKXtcclxuICAgICAgICAgICAgdGhpcy5fY2JzW2V2ZW50TmFtZV0gPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIF90cmlnZ2VyRXZlbnQoZXZlbnROYW1lLCBhcmdzKXtcclxuICAgIGlmICh0aGlzLl9jYnNbZXZlbnROYW1lXSkge1xyXG4gICAgICAgIHZhciBsZW4gPSB0aGlzLl9jYnNbZXZlbnROYW1lXS5sZW5ndGg7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKyl7XHJcbiAgICAgICAgICAgIHRoaXMuX2Nic1tldmVudE5hbWVdW2ldKGFyZ3MpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcmFuZG9tU3RyaW5nKGxlbmd0aCwgY2hhcnMpe1xyXG4gICAgaWYoY2hhcnMgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgY2hhcnMgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjEyMzQ1Njc4OTAnO1xyXG4gICAgfVxyXG4gICAgdmFyIGk7XHJcbiAgICB2YXIgcmVzdWx0ID0gJyc7XHJcbiAgICBmb3IgKGkgPSBsZW5ndGg7IGkgPiAwOyAtLWkpIHJlc3VsdCArPSBjaGFyc1tNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAoY2hhcnMubGVuZ3RoIC0gMSkpXTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEhTVnRvUkdCKGgsIHMsIHYpIHtcclxuICAgIHZhciByLCBnLCBiLCBpLCBmLCBwLCBxLCB0O1xyXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICBzID0gaC5zLCB2ID0gaC52LCBoID0gaC5oO1xyXG4gICAgfVxyXG4gICAgaSA9IE1hdGguZmxvb3IoaCAqIDYpO1xyXG4gICAgZiA9IGggKiA2IC0gaTtcclxuICAgIHAgPSB2ICogKDEgLSBzKTtcclxuICAgIHEgPSB2ICogKDEgLSBmICogcyk7XHJcbiAgICB0ID0gdiAqICgxIC0gKDEgLSBmKSAqIHMpO1xyXG4gICAgc3dpdGNoIChpICUgNikge1xyXG4gICAgICAgIGNhc2UgMDogciA9IHYsIGcgPSB0LCBiID0gcDsgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAxOiByID0gcSwgZyA9IHYsIGIgPSBwOyBicmVhaztcclxuICAgICAgICBjYXNlIDI6IHIgPSBwLCBnID0gdiwgYiA9IHQ7IGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMzogciA9IHAsIGcgPSBxLCBiID0gdjsgYnJlYWs7XHJcbiAgICAgICAgY2FzZSA0OiByID0gdCwgZyA9IHAsIGIgPSB2OyBicmVhaztcclxuICAgICAgICBjYXNlIDU6IHIgPSB2LCBnID0gcCwgYiA9IHE7IGJyZWFrO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFsgcixcclxuICAgICAgICBnLFxyXG4gICAgICAgICBiIF07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIFJHQnRvSFNWKHIsIGcsIGIpIHtcclxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgZyA9IHIuZywgYiA9IHIuYiwgciA9IHIucjtcclxuICAgIH1cclxuICAgIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKSwgbWluID0gTWF0aC5taW4ociwgZywgYiksXHJcbiAgICAgICAgZCA9IG1heCAtIG1pbixcclxuICAgICAgICBoLFxyXG4gICAgICAgIHMgPSAobWF4ID09PSAwID8gMCA6IGQgLyBtYXgpLFxyXG4gICAgICAgIHYgPSBtYXggLyAyNTU7XHJcblxyXG4gICAgc3dpdGNoIChtYXgpIHtcclxuICAgICAgICBjYXNlIG1pbjogaCA9IDA7IGJyZWFrO1xyXG4gICAgICAgIGNhc2UgcjogaCA9IChnIC0gYikgKyBkICogKGcgPCBiID8gNjogMCk7IGggLz0gNiAqIGQ7IGJyZWFrO1xyXG4gICAgICAgIGNhc2UgZzogaCA9IChiIC0gcikgKyBkICogMjsgaCAvPSA2ICogZDsgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBiOiBoID0gKHIgLSBnKSArIGQgKiA0OyBoIC89IDYgKiBkOyBicmVhaztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gW1xyXG4gICAgICAgICBoLFxyXG4gICAgICAgICBzLFxyXG4gICAgICAgICB2XHJcbiAgICBdO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRTYXR1cmF0aW9uVG9SR0IoY29sb3Isb2Zmc2V0KXtcclxuICAgIHZhciBoc3YgPSBSR0J0b0hTVihjb2xvclswXSoyNTUsY29sb3JbMV0qMjU1LGNvbG9yWzJdKjI1NSk7XHJcbiAgICBoc3ZbMV0gKz0gb2Zmc2V0O1xyXG4gICAgaWYgKGhzdlsxXSA+IDEpIHtcclxuICAgICAgICBoc3ZbMV0gPSAxO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoaHN2WzFdIDw9IDApIHtcclxuICAgICAgICBoc3ZbMV0gPSAwO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEhTVnRvUkdCKGhzdlswXSxoc3ZbMV0saHN2WzJdKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkQnJpZ2h0bmVzc1RvUkdCKGNvbG9yLG9mZnNldCl7XHJcbiAgICB2YXIgaHN2ID0gUkdCdG9IU1YoY29sb3JbMF0qMjU1LGNvbG9yWzFdKjI1NSxjb2xvclsyXSoyNTUpO1xyXG4gICAgaHN2WzJdICs9IG9mZnNldDtcclxuICAgIGlmIChoc3ZbMl0gPiAxKSB7XHJcbiAgICAgICAgaHN2WzJdID0gMTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGhzdlsyXSA8IDApIHtcclxuICAgICAgICBoc3ZbMl0gPSAwO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEhTVnRvUkdCKGhzdlswXSxoc3ZbMV0saHN2WzJdKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkSHVlVG9SR0IoY29sb3Isb2Zmc2V0KSB7XHJcbiAgICB2YXIgaHN2ID0gUkdCdG9IU1YoY29sb3JbMF0qMjU1LGNvbG9yWzFdKjI1NSxjb2xvclsyXSoyNTUpO1xyXG4gICAgaHN2WzBdICs9IG9mZnNldC8zNjA7XHJcbiAgICBpZiAoaHN2WzBdID4gMSkge1xyXG4gICAgICAgIGhzdlswXSAtPSAxO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoaHN2WzBdIDwgMCkge1xyXG4gICAgICAgIGhzdlswXSArPSAxO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEhTVnRvUkdCKGhzdlswXSxoc3ZbMV0saHN2WzJdKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY29tcG9uZW50VG9IZXgoYykge1xyXG4gICAgdmFyIGhleCA9IGMudG9TdHJpbmcoMTYpO1xyXG4gICAgcmV0dXJuIGhleC5sZW5ndGggPT0gMSA/ICcwJyArIGhleCA6IGhleDtcclxufVxyXG5cclxudmFyIHJnYlRvSGV4ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgY29sb3JNYXAgPSBbXTtcclxuICAgIHZhciBpO1xyXG4gICAgdmFyIGhleDtcclxuICAgIGZvcihpPTA7aTwyNTY7aSs9MSl7XHJcbiAgICAgICAgaGV4ID0gaS50b1N0cmluZygxNik7XHJcbiAgICAgICAgY29sb3JNYXBbaV0gPSBoZXgubGVuZ3RoID09IDEgPyAnMCcgKyBoZXggOiBoZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHIsIGcsIGIpIHtcclxuICAgICAgICBpZihyPDApe1xyXG4gICAgICAgICAgICByID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoZzwwKXtcclxuICAgICAgICAgICAgZyA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGI8MCl7XHJcbiAgICAgICAgICAgIGIgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gJyMnICsgY29sb3JNYXBbcl0gKyBjb2xvck1hcFtnXSArIGNvbG9yTWFwW2JdO1xyXG4gICAgfTtcclxufSgpKTtcclxuXHJcbmZ1bmN0aW9uIGZpbGxUb1JnYmEoaGV4LGFscGhhKXtcclxuICAgIGlmKCFjYWNoZWRDb2xvcnNbaGV4XSl7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IC9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2kuZXhlYyhoZXgpO1xyXG4gICAgICAgIGNhY2hlZENvbG9yc1toZXhdID0gcGFyc2VJbnQocmVzdWx0WzFdLCAxNikrJywnK3BhcnNlSW50KHJlc3VsdFsyXSwgMTYpKycsJytwYXJzZUludChyZXN1bHRbM10sIDE2KTtcclxuICAgIH1cclxuICAgIHJldHVybiAncmdiYSgnK2NhY2hlZENvbG9yc1toZXhdKycsJythbHBoYSsnKSc7XHJcbn1cclxuXHJcbnZhciBmaWxsQ29sb3JUb1N0cmluZyA9IChmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBjb2xvck1hcCA9IFtdO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGNvbG9yQXJyLGFscGhhKXtcclxuICAgICAgICBpZihhbHBoYSAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgY29sb3JBcnJbM10gPSBhbHBoYTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIWNvbG9yTWFwW2NvbG9yQXJyWzBdXSl7XHJcbiAgICAgICAgICAgIGNvbG9yTWFwW2NvbG9yQXJyWzBdXSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZighY29sb3JNYXBbY29sb3JBcnJbMF1dW2NvbG9yQXJyWzFdXSl7XHJcbiAgICAgICAgICAgIGNvbG9yTWFwW2NvbG9yQXJyWzBdXVtjb2xvckFyclsxXV0gPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIWNvbG9yTWFwW2NvbG9yQXJyWzBdXVtjb2xvckFyclsxXV1bY29sb3JBcnJbMl1dKXtcclxuICAgICAgICAgICAgY29sb3JNYXBbY29sb3JBcnJbMF1dW2NvbG9yQXJyWzFdXVtjb2xvckFyclsyXV0gPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIWNvbG9yTWFwW2NvbG9yQXJyWzBdXVtjb2xvckFyclsxXV1bY29sb3JBcnJbMl1dW2NvbG9yQXJyWzNdXSl7XHJcbiAgICAgICAgICAgIGNvbG9yTWFwW2NvbG9yQXJyWzBdXVtjb2xvckFyclsxXV1bY29sb3JBcnJbMl1dW2NvbG9yQXJyWzNdXSA9ICdyZ2JhKCcgKyBjb2xvckFyci5qb2luKCcsJykrJyknO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29sb3JNYXBbY29sb3JBcnJbMF1dW2NvbG9yQXJyWzFdXVtjb2xvckFyclsyXV1bY29sb3JBcnJbM11dO1xyXG4gICAgfTtcclxufSgpKTtcclxuXHJcbmZ1bmN0aW9uIFJlbmRlcmVkRnJhbWUodHIsbykge1xyXG4gICAgdGhpcy50ciA9IHRyO1xyXG4gICAgdGhpcy5vID0gbztcclxufVxyXG5cclxuZnVuY3Rpb24gaXRlcmF0ZUR5bmFtaWNQcm9wZXJ0aWVzKG51bSl7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5keW5hbWljUHJvcGVydGllcztcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZShudW0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiByZXZlcnNlUGF0aChwYXRocyl7XHJcbiAgICB2YXIgbmV3SSA9IFtdLCBuZXdPID0gW10sIG5ld1YgPSBbXTtcclxuICAgIHZhciBpLCBsZW4sIG5ld1BhdGhzID0ge307XHJcbiAgICB2YXIgaW5pdCA9IDA7XHJcbiAgICBpZiAocGF0aHMuYykge1xyXG4gICAgICAgIG5ld0lbMF0gPSBwYXRocy5vWzBdO1xyXG4gICAgICAgIG5ld09bMF0gPSBwYXRocy5pWzBdO1xyXG4gICAgICAgIG5ld1ZbMF0gPSBwYXRocy52WzBdO1xyXG4gICAgICAgIGluaXQgPSAxO1xyXG4gICAgfVxyXG4gICAgbGVuID0gcGF0aHMuaS5sZW5ndGg7XHJcbiAgICB2YXIgY250ID0gbGVuIC0gMTtcclxuXHJcbiAgICBmb3IgKGkgPSBpbml0OyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICBuZXdJLnB1c2gocGF0aHMub1tjbnRdKTtcclxuICAgICAgICBuZXdPLnB1c2gocGF0aHMuaVtjbnRdKTtcclxuICAgICAgICBuZXdWLnB1c2gocGF0aHMudltjbnRdKTtcclxuICAgICAgICBjbnQgLT0gMTtcclxuICAgIH1cclxuXHJcbiAgICBuZXdQYXRocy5pID0gbmV3STtcclxuICAgIG5ld1BhdGhzLm8gPSBuZXdPO1xyXG4gICAgbmV3UGF0aHMudiA9IG5ld1Y7XHJcblxyXG4gICAgcmV0dXJuIG5ld1BhdGhzO1xyXG59XG4vKiFcclxuIFRyYW5zZm9ybWF0aW9uIE1hdHJpeCB2Mi4wXHJcbiAoYykgRXBpc3RlbWV4IDIwMTQtMjAxNVxyXG4gd3d3LmVwaXN0ZW1leC5jb21cclxuIEJ5IEtlbiBGeXJzdGVuYmVyZ1xyXG4gQ29udHJpYnV0aW9ucyBieSBsZWVvbml5YS5cclxuIExpY2Vuc2U6IE1JVCwgaGVhZGVyIHJlcXVpcmVkLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiAyRCB0cmFuc2Zvcm1hdGlvbiBtYXRyaXggb2JqZWN0IGluaXRpYWxpemVkIHdpdGggaWRlbnRpdHkgbWF0cml4LlxyXG4gKlxyXG4gKiBUaGUgbWF0cml4IGNhbiBzeW5jaHJvbml6ZSBhIGNhbnZhcyBjb250ZXh0IGJ5IHN1cHBseWluZyB0aGUgY29udGV4dFxyXG4gKiBhcyBhbiBhcmd1bWVudCwgb3IgbGF0ZXIgYXBwbHkgY3VycmVudCBhYnNvbHV0ZSB0cmFuc2Zvcm0gdG8gYW5cclxuICogZXhpc3RpbmcgY29udGV4dC5cclxuICpcclxuICogQWxsIHZhbHVlcyBhcmUgaGFuZGxlZCBhcyBmbG9hdGluZyBwb2ludCB2YWx1ZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfSBbY29udGV4dF0gLSBPcHRpb25hbCBjb250ZXh0IHRvIHN5bmMgd2l0aCBNYXRyaXhcclxuICogQHByb3Age251bWJlcn0gYSAtIHNjYWxlIHhcclxuICogQHByb3Age251bWJlcn0gYiAtIHNoZWFyIHlcclxuICogQHByb3Age251bWJlcn0gYyAtIHNoZWFyIHhcclxuICogQHByb3Age251bWJlcn0gZCAtIHNjYWxlIHlcclxuICogQHByb3Age251bWJlcn0gZSAtIHRyYW5zbGF0ZSB4XHJcbiAqIEBwcm9wIHtudW1iZXJ9IGYgLSB0cmFuc2xhdGUgeVxyXG4gKiBAcHJvcCB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfG51bGx9IFtjb250ZXh0PW51bGxdIC0gc2V0IG9yIGdldCBjdXJyZW50IGNhbnZhcyBjb250ZXh0XHJcbiAqIEBjb25zdHJ1Y3RvclxyXG4gKi9cclxuXHJcbnZhciBNYXRyaXggPSAoZnVuY3Rpb24oKXtcclxuXHJcbiAgICBmdW5jdGlvbiByZXNldCgpe1xyXG4gICAgICAgIHRoaXMucHJvcHNbMF0gPSAxO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMV0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMl0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbM10gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbNF0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbNV0gPSAxO1xyXG4gICAgICAgIHRoaXMucHJvcHNbNl0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbN10gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbOF0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbOV0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTBdID0gMTtcclxuICAgICAgICB0aGlzLnByb3BzWzExXSA9IDA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxMl0gPSAwO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTNdID0gMDtcclxuICAgICAgICB0aGlzLnByb3BzWzE0XSA9IDA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxNV0gPSAxO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJvdGF0ZShhbmdsZSkge1xyXG4gICAgICAgIGlmKGFuZ2xlID09PSAwKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBtQ29zID0gTWF0aC5jb3MoYW5nbGUpO1xyXG4gICAgICAgIHZhciBtU2luID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90KG1Db3MsIC1tU2luLCAgMCwgMFxyXG4gICAgICAgICAgICAsIG1TaW4sICBtQ29zLCAwLCAwXHJcbiAgICAgICAgICAgICwgMCwgIDAsICAxLCAwXHJcbiAgICAgICAgICAgICwgMCwgMCwgMCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcm90YXRlWChhbmdsZSl7XHJcbiAgICAgICAgaWYoYW5nbGUgPT09IDApe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG1Db3MgPSBNYXRoLmNvcyhhbmdsZSk7XHJcbiAgICAgICAgdmFyIG1TaW4gPSBNYXRoLnNpbihhbmdsZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3QoMSwgMCwgMCwgMFxyXG4gICAgICAgICAgICAsIDAsIG1Db3MsIC1tU2luLCAwXHJcbiAgICAgICAgICAgICwgMCwgbVNpbiwgIG1Db3MsIDBcclxuICAgICAgICAgICAgLCAwLCAwLCAwLCAxKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByb3RhdGVZKGFuZ2xlKXtcclxuICAgICAgICBpZihhbmdsZSA9PT0gMCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgbUNvcyA9IE1hdGguY29zKGFuZ2xlKTtcclxuICAgICAgICB2YXIgbVNpbiA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdChtQ29zLCAgMCwgIG1TaW4sIDBcclxuICAgICAgICAgICAgLCAwLCAxLCAwLCAwXHJcbiAgICAgICAgICAgICwgLW1TaW4sICAwLCAgbUNvcywgMFxyXG4gICAgICAgICAgICAsIDAsIDAsIDAsIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJvdGF0ZVooYW5nbGUpe1xyXG4gICAgICAgIGlmKGFuZ2xlID09PSAwKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBtQ29zID0gTWF0aC5jb3MoYW5nbGUpO1xyXG4gICAgICAgIHZhciBtU2luID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90KG1Db3MsIC1tU2luLCAgMCwgMFxyXG4gICAgICAgICAgICAsIG1TaW4sICBtQ29zLCAwLCAwXHJcbiAgICAgICAgICAgICwgMCwgIDAsICAxLCAwXHJcbiAgICAgICAgICAgICwgMCwgMCwgMCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2hlYXIoc3gsc3kpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90KDEsIHN5LCBzeCwgMSwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2tldyhheCwgYXkpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNoZWFyKE1hdGgudGFuKGF4KSwgTWF0aC50YW4oYXkpKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBza2V3RnJvbUF4aXMoYXgsIGFuZ2xlKXtcclxuICAgICAgICB2YXIgbUNvcyA9IE1hdGguY29zKGFuZ2xlKTtcclxuICAgICAgICB2YXIgbVNpbiA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdChtQ29zLCBtU2luLCAgMCwgMFxyXG4gICAgICAgICAgICAsIC1tU2luLCAgbUNvcywgMCwgMFxyXG4gICAgICAgICAgICAsIDAsICAwLCAgMSwgMFxyXG4gICAgICAgICAgICAsIDAsIDAsIDAsIDEpXHJcbiAgICAgICAgICAgIC5fdCgxLCAwLCAgMCwgMFxyXG4gICAgICAgICAgICAsIE1hdGgudGFuKGF4KSwgIDEsIDAsIDBcclxuICAgICAgICAgICAgLCAwLCAgMCwgIDEsIDBcclxuICAgICAgICAgICAgLCAwLCAwLCAwLCAxKVxyXG4gICAgICAgICAgICAuX3QobUNvcywgLW1TaW4sICAwLCAwXHJcbiAgICAgICAgICAgICwgbVNpbiwgIG1Db3MsIDAsIDBcclxuICAgICAgICAgICAgLCAwLCAgMCwgIDEsIDBcclxuICAgICAgICAgICAgLCAwLCAwLCAwLCAxKTtcclxuICAgICAgICAvL3JldHVybiB0aGlzLl90KG1Db3MsIG1TaW4sIC1tU2luLCBtQ29zLCAwLCAwKS5fdCgxLCAwLCBNYXRoLnRhbihheCksIDEsIDAsIDApLl90KG1Db3MsIC1tU2luLCBtU2luLCBtQ29zLCAwLCAwKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzY2FsZShzeCwgc3ksIHN6KSB7XHJcbiAgICAgICAgc3ogPSBpc05hTihzeikgPyAxIDogc3o7XHJcbiAgICAgICAgaWYoc3ggPT0gMSAmJiBzeSA9PSAxICYmIHN6ID09IDEpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Qoc3gsIDAsIDAsIDAsIDAsIHN5LCAwLCAwLCAwLCAwLCBzeiwgMCwgMCwgMCwgMCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0VHJhbnNmb3JtKGEsIGIsIGMsIGQsIGUsIGYsIGcsIGgsIGksIGosIGssIGwsIG0sIG4sIG8sIHApIHtcclxuICAgICAgICB0aGlzLnByb3BzWzBdID0gYTtcclxuICAgICAgICB0aGlzLnByb3BzWzFdID0gYjtcclxuICAgICAgICB0aGlzLnByb3BzWzJdID0gYztcclxuICAgICAgICB0aGlzLnByb3BzWzNdID0gZDtcclxuICAgICAgICB0aGlzLnByb3BzWzRdID0gZTtcclxuICAgICAgICB0aGlzLnByb3BzWzVdID0gZjtcclxuICAgICAgICB0aGlzLnByb3BzWzZdID0gZztcclxuICAgICAgICB0aGlzLnByb3BzWzddID0gaDtcclxuICAgICAgICB0aGlzLnByb3BzWzhdID0gaTtcclxuICAgICAgICB0aGlzLnByb3BzWzldID0gajtcclxuICAgICAgICB0aGlzLnByb3BzWzEwXSA9IGs7XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxMV0gPSBsO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTJdID0gbTtcclxuICAgICAgICB0aGlzLnByb3BzWzEzXSA9IG47XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxNF0gPSBvO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTVdID0gcDtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0cmFuc2xhdGUodHgsIHR5LCB0eikge1xyXG4gICAgICAgIHR6ID0gdHogfHwgMDtcclxuICAgICAgICBpZih0eCAhPT0gMCB8fCB0eSAhPT0gMCB8fCB0eiAhPT0gMCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90KDEsMCwwLDAsMCwxLDAsMCwwLDAsMSwwLHR4LHR5LHR6LDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0cmFuc2Zvcm0oYTIsIGIyLCBjMiwgZDIsIGUyLCBmMiwgZzIsIGgyLCBpMiwgajIsIGsyLCBsMiwgbTIsIG4yLCBvMiwgcDIpIHtcclxuXHJcbiAgICAgICAgaWYoYTIgPT09IDEgJiYgYjIgPT09IDAgJiYgYzIgPT09IDAgJiYgZDIgPT09IDAgJiYgZTIgPT09IDAgJiYgZjIgPT09IDEgJiYgZzIgPT09IDAgJiYgaDIgPT09IDAgJiYgaTIgPT09IDAgJiYgajIgPT09IDAgJiYgazIgPT09IDEgJiYgbDIgPT09IDApe1xyXG4gICAgICAgICAgICBpZihtMiAhPT0gMCB8fCBuMiAhPT0gMCB8fCBvMiAhPT0gMCl7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wc1sxMl0gPSB0aGlzLnByb3BzWzEyXSAqIGEyICsgdGhpcy5wcm9wc1sxM10gKiBlMiArIHRoaXMucHJvcHNbMTRdICogaTIgKyB0aGlzLnByb3BzWzE1XSAqIG0yIDtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvcHNbMTNdID0gdGhpcy5wcm9wc1sxMl0gKiBiMiArIHRoaXMucHJvcHNbMTNdICogZjIgKyB0aGlzLnByb3BzWzE0XSAqIGoyICsgdGhpcy5wcm9wc1sxNV0gKiBuMiA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzWzE0XSA9IHRoaXMucHJvcHNbMTJdICogYzIgKyB0aGlzLnByb3BzWzEzXSAqIGcyICsgdGhpcy5wcm9wc1sxNF0gKiBrMiArIHRoaXMucHJvcHNbMTVdICogbzIgO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wc1sxNV0gPSB0aGlzLnByb3BzWzEyXSAqIGQyICsgdGhpcy5wcm9wc1sxM10gKiBoMiArIHRoaXMucHJvcHNbMTRdICogbDIgKyB0aGlzLnByb3BzWzE1XSAqIHAyIDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9pZGVudGl0eUNhbGN1bGF0ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgYTEgPSB0aGlzLnByb3BzWzBdO1xyXG4gICAgICAgIHZhciBiMSA9IHRoaXMucHJvcHNbMV07XHJcbiAgICAgICAgdmFyIGMxID0gdGhpcy5wcm9wc1syXTtcclxuICAgICAgICB2YXIgZDEgPSB0aGlzLnByb3BzWzNdO1xyXG4gICAgICAgIHZhciBlMSA9IHRoaXMucHJvcHNbNF07XHJcbiAgICAgICAgdmFyIGYxID0gdGhpcy5wcm9wc1s1XTtcclxuICAgICAgICB2YXIgZzEgPSB0aGlzLnByb3BzWzZdO1xyXG4gICAgICAgIHZhciBoMSA9IHRoaXMucHJvcHNbN107XHJcbiAgICAgICAgdmFyIGkxID0gdGhpcy5wcm9wc1s4XTtcclxuICAgICAgICB2YXIgajEgPSB0aGlzLnByb3BzWzldO1xyXG4gICAgICAgIHZhciBrMSA9IHRoaXMucHJvcHNbMTBdO1xyXG4gICAgICAgIHZhciBsMSA9IHRoaXMucHJvcHNbMTFdO1xyXG4gICAgICAgIHZhciBtMSA9IHRoaXMucHJvcHNbMTJdO1xyXG4gICAgICAgIHZhciBuMSA9IHRoaXMucHJvcHNbMTNdO1xyXG4gICAgICAgIHZhciBvMSA9IHRoaXMucHJvcHNbMTRdO1xyXG4gICAgICAgIHZhciBwMSA9IHRoaXMucHJvcHNbMTVdO1xyXG5cclxuICAgICAgICAvKiBtYXRyaXggb3JkZXIgKGNhbnZhcyBjb21wYXRpYmxlKTpcclxuICAgICAgICAgKiBhY2VcclxuICAgICAgICAgKiBiZGZcclxuICAgICAgICAgKiAwMDFcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnByb3BzWzBdID0gYTEgKiBhMiArIGIxICogZTIgKyBjMSAqIGkyICsgZDEgKiBtMjtcclxuICAgICAgICB0aGlzLnByb3BzWzFdID0gYTEgKiBiMiArIGIxICogZjIgKyBjMSAqIGoyICsgZDEgKiBuMiA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1syXSA9IGExICogYzIgKyBiMSAqIGcyICsgYzEgKiBrMiArIGQxICogbzIgO1xyXG4gICAgICAgIHRoaXMucHJvcHNbM10gPSBhMSAqIGQyICsgYjEgKiBoMiArIGMxICogbDIgKyBkMSAqIHAyIDtcclxuXHJcbiAgICAgICAgdGhpcy5wcm9wc1s0XSA9IGUxICogYTIgKyBmMSAqIGUyICsgZzEgKiBpMiArIGgxICogbTIgO1xyXG4gICAgICAgIHRoaXMucHJvcHNbNV0gPSBlMSAqIGIyICsgZjEgKiBmMiArIGcxICogajIgKyBoMSAqIG4yIDtcclxuICAgICAgICB0aGlzLnByb3BzWzZdID0gZTEgKiBjMiArIGYxICogZzIgKyBnMSAqIGsyICsgaDEgKiBvMiA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1s3XSA9IGUxICogZDIgKyBmMSAqIGgyICsgZzEgKiBsMiArIGgxICogcDIgO1xyXG5cclxuICAgICAgICB0aGlzLnByb3BzWzhdID0gaTEgKiBhMiArIGoxICogZTIgKyBrMSAqIGkyICsgbDEgKiBtMiA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1s5XSA9IGkxICogYjIgKyBqMSAqIGYyICsgazEgKiBqMiArIGwxICogbjIgO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTBdID0gaTEgKiBjMiArIGoxICogZzIgKyBrMSAqIGsyICsgbDEgKiBvMiA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxMV0gPSBpMSAqIGQyICsgajEgKiBoMiArIGsxICogbDIgKyBsMSAqIHAyIDtcclxuXHJcbiAgICAgICAgdGhpcy5wcm9wc1sxMl0gPSBtMSAqIGEyICsgbjEgKiBlMiArIG8xICogaTIgKyBwMSAqIG0yIDtcclxuICAgICAgICB0aGlzLnByb3BzWzEzXSA9IG0xICogYjIgKyBuMSAqIGYyICsgbzEgKiBqMiArIHAxICogbjIgO1xyXG4gICAgICAgIHRoaXMucHJvcHNbMTRdID0gbTEgKiBjMiArIG4xICogZzIgKyBvMSAqIGsyICsgcDEgKiBvMiA7XHJcbiAgICAgICAgdGhpcy5wcm9wc1sxNV0gPSBtMSAqIGQyICsgbjEgKiBoMiArIG8xICogbDIgKyBwMSAqIHAyIDtcclxuXHJcbiAgICAgICAgdGhpcy5faWRlbnRpdHlDYWxjdWxhdGVkID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaXNJZGVudGl0eSgpIHtcclxuICAgICAgICBpZighdGhpcy5faWRlbnRpdHlDYWxjdWxhdGVkKXtcclxuICAgICAgICAgICAgdGhpcy5faWRlbnRpdHkgPSAhKHRoaXMucHJvcHNbMF0gIT09IDEgfHwgdGhpcy5wcm9wc1sxXSAhPT0gMCB8fCB0aGlzLnByb3BzWzJdICE9PSAwIHx8IHRoaXMucHJvcHNbM10gIT09IDBcclxuICAgICAgICAgICAgICAgIHx8IHRoaXMucHJvcHNbNF0gIT09IDAgfHwgdGhpcy5wcm9wc1s1XSAhPT0gMSB8fCB0aGlzLnByb3BzWzZdICE9PSAwIHx8IHRoaXMucHJvcHNbN10gIT09IDBcclxuICAgICAgICAgICAgICAgIHx8IHRoaXMucHJvcHNbOF0gIT09IDAgfHwgdGhpcy5wcm9wc1s5XSAhPT0gMCB8fCB0aGlzLnByb3BzWzEwXSAhPT0gMSB8fCB0aGlzLnByb3BzWzExXSAhPT0gMFxyXG4gICAgICAgICAgICAgICAgfHwgdGhpcy5wcm9wc1sxMl0gIT09IDAgfHwgdGhpcy5wcm9wc1sxM10gIT09IDAgfHwgdGhpcy5wcm9wc1sxNF0gIT09IDAgfHwgdGhpcy5wcm9wc1sxNV0gIT09IDEpO1xyXG4gICAgICAgICAgICB0aGlzLl9pZGVudGl0eUNhbGN1bGF0ZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5faWRlbnRpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvbmUobWF0cil7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPDE2O2krPTEpe1xyXG4gICAgICAgICAgICBtYXRyLnByb3BzW2ldID0gdGhpcy5wcm9wc1tpXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvbmVGcm9tUHJvcHMocHJvcHMpe1xyXG4gICAgICAgIHZhciBpO1xyXG4gICAgICAgIGZvcihpPTA7aTwxNjtpKz0xKXtcclxuICAgICAgICAgICAgdGhpcy5wcm9wc1tpXSA9IHByb3BzW2ldO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhcHBseVRvUG9pbnQoeCwgeSwgeikge1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB4OiB4ICogdGhpcy5wcm9wc1swXSArIHkgKiB0aGlzLnByb3BzWzRdICsgeiAqIHRoaXMucHJvcHNbOF0gKyB0aGlzLnByb3BzWzEyXSxcclxuICAgICAgICAgICAgeTogeCAqIHRoaXMucHJvcHNbMV0gKyB5ICogdGhpcy5wcm9wc1s1XSArIHogKiB0aGlzLnByb3BzWzldICsgdGhpcy5wcm9wc1sxM10sXHJcbiAgICAgICAgICAgIHo6IHggKiB0aGlzLnByb3BzWzJdICsgeSAqIHRoaXMucHJvcHNbNl0gKyB6ICogdGhpcy5wcm9wc1sxMF0gKyB0aGlzLnByb3BzWzE0XVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLypyZXR1cm4ge1xyXG4gICAgICAgICB4OiB4ICogbWUuYSArIHkgKiBtZS5jICsgbWUuZSxcclxuICAgICAgICAgeTogeCAqIG1lLmIgKyB5ICogbWUuZCArIG1lLmZcclxuICAgICAgICAgfTsqL1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gYXBwbHlUb1goeCwgeSwgeikge1xyXG4gICAgICAgIHJldHVybiB4ICogdGhpcy5wcm9wc1swXSArIHkgKiB0aGlzLnByb3BzWzRdICsgeiAqIHRoaXMucHJvcHNbOF0gKyB0aGlzLnByb3BzWzEyXTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFwcGx5VG9ZKHgsIHksIHopIHtcclxuICAgICAgICByZXR1cm4geCAqIHRoaXMucHJvcHNbMV0gKyB5ICogdGhpcy5wcm9wc1s1XSArIHogKiB0aGlzLnByb3BzWzldICsgdGhpcy5wcm9wc1sxM107XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhcHBseVRvWih4LCB5LCB6KSB7XHJcbiAgICAgICAgcmV0dXJuIHggKiB0aGlzLnByb3BzWzJdICsgeSAqIHRoaXMucHJvcHNbNl0gKyB6ICogdGhpcy5wcm9wc1sxMF0gKyB0aGlzLnByb3BzWzE0XTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbnZlcnNlUG9pbnQocHQpIHtcclxuICAgICAgICB2YXIgZGV0ZXJtaW5hbnQgPSB0aGlzLnByb3BzWzBdICogdGhpcy5wcm9wc1s1XSAtIHRoaXMucHJvcHNbMV0gKiB0aGlzLnByb3BzWzRdO1xyXG4gICAgICAgIHZhciBhID0gdGhpcy5wcm9wc1s1XS9kZXRlcm1pbmFudDtcclxuICAgICAgICB2YXIgYiA9IC0gdGhpcy5wcm9wc1sxXS9kZXRlcm1pbmFudDtcclxuICAgICAgICB2YXIgYyA9IC0gdGhpcy5wcm9wc1s0XS9kZXRlcm1pbmFudDtcclxuICAgICAgICB2YXIgZCA9IHRoaXMucHJvcHNbMF0vZGV0ZXJtaW5hbnQ7XHJcbiAgICAgICAgdmFyIGUgPSAodGhpcy5wcm9wc1s0XSAqIHRoaXMucHJvcHNbMTNdIC0gdGhpcy5wcm9wc1s1XSAqIHRoaXMucHJvcHNbMTJdKS9kZXRlcm1pbmFudDtcclxuICAgICAgICB2YXIgZiA9IC0gKHRoaXMucHJvcHNbMF0gKiB0aGlzLnByb3BzWzEzXSAtIHRoaXMucHJvcHNbMV0gKiB0aGlzLnByb3BzWzEyXSkvZGV0ZXJtaW5hbnQ7XHJcbiAgICAgICAgcmV0dXJuIFtwdFswXSAqIGEgKyBwdFsxXSAqIGMgKyBlLCBwdFswXSAqIGIgKyBwdFsxXSAqIGQgKyBmLCAwXTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbnZlcnNlUG9pbnRzKHB0cyl7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHB0cy5sZW5ndGgsIHJldFB0cyA9IFtdO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHJldFB0c1tpXSA9IGludmVyc2VQb2ludChwdHNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmV0UHRzO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFwcGx5VG9Qb2ludEFycmF5KHgseSx6LGRpbWVuc2lvbnMpe1xyXG4gICAgICAgIGlmKGRpbWVuc2lvbnMgJiYgZGltZW5zaW9ucyA9PT0gMikge1xyXG4gICAgICAgICAgICB2YXIgYXJyID0gcG9pbnRfcG9vbC5uZXdQb2ludCgpO1xyXG4gICAgICAgICAgICBhcnJbMF0gPSB4ICogdGhpcy5wcm9wc1swXSArIHkgKiB0aGlzLnByb3BzWzRdICsgeiAqIHRoaXMucHJvcHNbOF0gKyB0aGlzLnByb3BzWzEyXTsgXHJcbiAgICAgICAgICAgIGFyclsxXSA9IHggKiB0aGlzLnByb3BzWzFdICsgeSAqIHRoaXMucHJvcHNbNV0gKyB6ICogdGhpcy5wcm9wc1s5XSArIHRoaXMucHJvcHNbMTNdOyBcclxuICAgICAgICAgICAgcmV0dXJuIGFycjsgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBbeCAqIHRoaXMucHJvcHNbMF0gKyB5ICogdGhpcy5wcm9wc1s0XSArIHogKiB0aGlzLnByb3BzWzhdICsgdGhpcy5wcm9wc1sxMl0seCAqIHRoaXMucHJvcHNbMV0gKyB5ICogdGhpcy5wcm9wc1s1XSArIHogKiB0aGlzLnByb3BzWzldICsgdGhpcy5wcm9wc1sxM10seCAqIHRoaXMucHJvcHNbMl0gKyB5ICogdGhpcy5wcm9wc1s2XSArIHogKiB0aGlzLnByb3BzWzEwXSArIHRoaXMucHJvcHNbMTRdXTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFwcGx5VG9Qb2ludFN0cmluZ2lmaWVkKHgsIHkpIHtcclxuICAgICAgICBpZih0aGlzLmlzSWRlbnRpdHkoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4geCArICcsJyArIHk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAoYm1fcm5kKHggKiB0aGlzLnByb3BzWzBdICsgeSAqIHRoaXMucHJvcHNbNF0gKyB0aGlzLnByb3BzWzEyXSkpKycsJysoYm1fcm5kKHggKiB0aGlzLnByb3BzWzFdICsgeSAqIHRoaXMucHJvcHNbNV0gKyB0aGlzLnByb3BzWzEzXSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHRvQXJyYXkoKSB7XHJcbiAgICAgICAgcmV0dXJuIFt0aGlzLnByb3BzWzBdLHRoaXMucHJvcHNbMV0sdGhpcy5wcm9wc1syXSx0aGlzLnByb3BzWzNdLHRoaXMucHJvcHNbNF0sdGhpcy5wcm9wc1s1XSx0aGlzLnByb3BzWzZdLHRoaXMucHJvcHNbN10sdGhpcy5wcm9wc1s4XSx0aGlzLnByb3BzWzldLHRoaXMucHJvcHNbMTBdLHRoaXMucHJvcHNbMTFdLHRoaXMucHJvcHNbMTJdLHRoaXMucHJvcHNbMTNdLHRoaXMucHJvcHNbMTRdLHRoaXMucHJvcHNbMTVdXTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0b0NTUygpIHtcclxuICAgICAgICBpZihpc1NhZmFyaSl7XHJcbiAgICAgICAgICAgIHJldHVybiBcIm1hdHJpeDNkKFwiICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzBdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1sxXSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbMl0pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzNdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1s0XSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbNV0pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzZdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1s3XSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbOF0pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzldKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1sxMF0pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzExXSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbMTJdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1sxM10pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzE0XSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbMTVdKSArICcpJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmNzc1BhcnRzWzFdID0gdGhpcy5wcm9wcy5qb2luKCcsJyk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNzc1BhcnRzLmpvaW4oJycpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0bzJkQ1NTKCkge1xyXG4gICAgICAgIHJldHVybiBcIm1hdHJpeChcIiArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1swXSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbMV0pICsgJywnICsgcm91bmRUbzJEZWNpbWFscyh0aGlzLnByb3BzWzRdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1s1XSkgKyAnLCcgKyByb3VuZFRvMkRlY2ltYWxzKHRoaXMucHJvcHNbMTJdKSArICcsJyArIHJvdW5kVG8yRGVjaW1hbHModGhpcy5wcm9wc1sxM10pICsgXCIpXCI7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgKyB0aGlzLnRvQXJyYXkoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLnJlc2V0ID0gcmVzZXQ7XHJcbiAgICAgICAgdGhpcy5yb3RhdGUgPSByb3RhdGU7XHJcbiAgICAgICAgdGhpcy5yb3RhdGVYID0gcm90YXRlWDtcclxuICAgICAgICB0aGlzLnJvdGF0ZVkgPSByb3RhdGVZO1xyXG4gICAgICAgIHRoaXMucm90YXRlWiA9IHJvdGF0ZVo7XHJcbiAgICAgICAgdGhpcy5za2V3ID0gc2tldztcclxuICAgICAgICB0aGlzLnNrZXdGcm9tQXhpcyA9IHNrZXdGcm9tQXhpcztcclxuICAgICAgICB0aGlzLnNoZWFyID0gc2hlYXI7XHJcbiAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xyXG4gICAgICAgIHRoaXMuc2V0VHJhbnNmb3JtID0gc2V0VHJhbnNmb3JtO1xyXG4gICAgICAgIHRoaXMudHJhbnNsYXRlID0gdHJhbnNsYXRlO1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xyXG4gICAgICAgIHRoaXMuYXBwbHlUb1BvaW50ID0gYXBwbHlUb1BvaW50O1xyXG4gICAgICAgIHRoaXMuYXBwbHlUb1ggPSBhcHBseVRvWDtcclxuICAgICAgICB0aGlzLmFwcGx5VG9ZID0gYXBwbHlUb1k7XHJcbiAgICAgICAgdGhpcy5hcHBseVRvWiA9IGFwcGx5VG9aO1xyXG4gICAgICAgIHRoaXMuYXBwbHlUb1BvaW50QXJyYXkgPSBhcHBseVRvUG9pbnRBcnJheTtcclxuICAgICAgICB0aGlzLmFwcGx5VG9Qb2ludFN0cmluZ2lmaWVkID0gYXBwbHlUb1BvaW50U3RyaW5naWZpZWQ7XHJcbiAgICAgICAgdGhpcy50b0FycmF5ID0gdG9BcnJheTtcclxuICAgICAgICB0aGlzLnRvQ1NTID0gdG9DU1M7XHJcbiAgICAgICAgdGhpcy50bzJkQ1NTID0gdG8yZENTUztcclxuICAgICAgICB0aGlzLnRvU3RyaW5nID0gdG9TdHJpbmc7XHJcbiAgICAgICAgdGhpcy5jbG9uZSA9IGNsb25lO1xyXG4gICAgICAgIHRoaXMuY2xvbmVGcm9tUHJvcHMgPSBjbG9uZUZyb21Qcm9wcztcclxuICAgICAgICB0aGlzLmludmVyc2VQb2ludHMgPSBpbnZlcnNlUG9pbnRzO1xyXG4gICAgICAgIHRoaXMuaW52ZXJzZVBvaW50ID0gaW52ZXJzZVBvaW50O1xyXG4gICAgICAgIHRoaXMuX3QgPSB0aGlzLnRyYW5zZm9ybTtcclxuICAgICAgICB0aGlzLmlzSWRlbnRpdHkgPSBpc0lkZW50aXR5O1xyXG4gICAgICAgIHRoaXMuX2lkZW50aXR5ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLl9pZGVudGl0eUNhbGN1bGF0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5wcm9wcyA9IFsxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxXTtcclxuXHJcbiAgICAgICAgdGhpcy5jc3NQYXJ0cyA9IFsnbWF0cml4M2QoJywnJywnKSddO1xyXG4gICAgfVxyXG59KCkpO1xyXG5cclxuZnVuY3Rpb24gTWF0cml4KCkge1xyXG5cclxuXHJcbn1cclxuXG4vKlxyXG4gQ29weXJpZ2h0IDIwMTQgRGF2aWQgQmF1LlxyXG5cclxuIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZ1xyXG4gYSBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXHJcbiBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcclxuIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcclxuIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0b1xyXG4gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvXHJcbiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcblxyXG4gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmVcclxuIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG5cclxuIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsXHJcbiBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0ZcclxuIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC5cclxuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZXHJcbiBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULFxyXG4gVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEVcclxuIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxyXG5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKHBvb2wsIG1hdGgpIHtcclxuLy9cclxuLy8gVGhlIGZvbGxvd2luZyBjb25zdGFudHMgYXJlIHJlbGF0ZWQgdG8gSUVFRSA3NTQgbGltaXRzLlxyXG4vL1xyXG4gICAgdmFyIGdsb2JhbCA9IHRoaXMsXHJcbiAgICAgICAgd2lkdGggPSAyNTYsICAgICAgICAvLyBlYWNoIFJDNCBvdXRwdXQgaXMgMCA8PSB4IDwgMjU2XHJcbiAgICAgICAgY2h1bmtzID0gNiwgICAgICAgICAvLyBhdCBsZWFzdCBzaXggUkM0IG91dHB1dHMgZm9yIGVhY2ggZG91YmxlXHJcbiAgICAgICAgZGlnaXRzID0gNTIsICAgICAgICAvLyB0aGVyZSBhcmUgNTIgc2lnbmlmaWNhbnQgZGlnaXRzIGluIGEgZG91YmxlXHJcbiAgICAgICAgcm5nbmFtZSA9ICdyYW5kb20nLCAvLyBybmduYW1lOiBuYW1lIGZvciBNYXRoLnJhbmRvbSBhbmQgTWF0aC5zZWVkcmFuZG9tXHJcbiAgICAgICAgc3RhcnRkZW5vbSA9IG1hdGgucG93KHdpZHRoLCBjaHVua3MpLFxyXG4gICAgICAgIHNpZ25pZmljYW5jZSA9IG1hdGgucG93KDIsIGRpZ2l0cyksXHJcbiAgICAgICAgb3ZlcmZsb3cgPSBzaWduaWZpY2FuY2UgKiAyLFxyXG4gICAgICAgIG1hc2sgPSB3aWR0aCAtIDEsXHJcbiAgICAgICAgbm9kZWNyeXB0bzsgICAgICAgICAvLyBub2RlLmpzIGNyeXB0byBtb2R1bGUsIGluaXRpYWxpemVkIGF0IHRoZSBib3R0b20uXHJcblxyXG4vL1xyXG4vLyBzZWVkcmFuZG9tKClcclxuLy8gVGhpcyBpcyB0aGUgc2VlZHJhbmRvbSBmdW5jdGlvbiBkZXNjcmliZWQgYWJvdmUuXHJcbi8vXHJcbiAgICBmdW5jdGlvbiBzZWVkcmFuZG9tKHNlZWQsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdmFyIGtleSA9IFtdO1xyXG4gICAgICAgIG9wdGlvbnMgPSAob3B0aW9ucyA9PSB0cnVlKSA/IHsgZW50cm9weTogdHJ1ZSB9IDogKG9wdGlvbnMgfHwge30pO1xyXG5cclxuICAgICAgICAvLyBGbGF0dGVuIHRoZSBzZWVkIHN0cmluZyBvciBidWlsZCBvbmUgZnJvbSBsb2NhbCBlbnRyb3B5IGlmIG5lZWRlZC5cclxuICAgICAgICB2YXIgc2hvcnRzZWVkID0gbWl4a2V5KGZsYXR0ZW4oXHJcbiAgICAgICAgICAgIG9wdGlvbnMuZW50cm9weSA/IFtzZWVkLCB0b3N0cmluZyhwb29sKV0gOlxyXG4gICAgICAgICAgICAgICAgKHNlZWQgPT0gbnVsbCkgPyBhdXRvc2VlZCgpIDogc2VlZCwgMyksIGtleSk7XHJcblxyXG4gICAgICAgIC8vIFVzZSB0aGUgc2VlZCB0byBpbml0aWFsaXplIGFuIEFSQzQgZ2VuZXJhdG9yLlxyXG4gICAgICAgIHZhciBhcmM0ID0gbmV3IEFSQzQoa2V5KTtcclxuXHJcbiAgICAgICAgLy8gVGhpcyBmdW5jdGlvbiByZXR1cm5zIGEgcmFuZG9tIGRvdWJsZSBpbiBbMCwgMSkgdGhhdCBjb250YWluc1xyXG4gICAgICAgIC8vIHJhbmRvbW5lc3MgaW4gZXZlcnkgYml0IG9mIHRoZSBtYW50aXNzYSBvZiB0aGUgSUVFRSA3NTQgdmFsdWUuXHJcbiAgICAgICAgdmFyIHBybmcgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIG4gPSBhcmM0LmcoY2h1bmtzKSwgICAgICAgICAgICAgLy8gU3RhcnQgd2l0aCBhIG51bWVyYXRvciBuIDwgMiBeIDQ4XHJcbiAgICAgICAgICAgICAgICBkID0gc3RhcnRkZW5vbSwgICAgICAgICAgICAgICAgIC8vICAgYW5kIGRlbm9taW5hdG9yIGQgPSAyIF4gNDguXHJcbiAgICAgICAgICAgICAgICB4ID0gMDsgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgYW5kIG5vICdleHRyYSBsYXN0IGJ5dGUnLlxyXG4gICAgICAgICAgICB3aGlsZSAobiA8IHNpZ25pZmljYW5jZSkgeyAgICAgICAgICAvLyBGaWxsIHVwIGFsbCBzaWduaWZpY2FudCBkaWdpdHMgYnlcclxuICAgICAgICAgICAgICAgIG4gPSAobiArIHgpICogd2lkdGg7ICAgICAgICAgICAgICAvLyAgIHNoaWZ0aW5nIG51bWVyYXRvciBhbmRcclxuICAgICAgICAgICAgICAgIGQgKj0gd2lkdGg7ICAgICAgICAgICAgICAgICAgICAgICAvLyAgIGRlbm9taW5hdG9yIGFuZCBnZW5lcmF0aW5nIGFcclxuICAgICAgICAgICAgICAgIHggPSBhcmM0LmcoMSk7ICAgICAgICAgICAgICAgICAgICAvLyAgIG5ldyBsZWFzdC1zaWduaWZpY2FudC1ieXRlLlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHdoaWxlIChuID49IG92ZXJmbG93KSB7ICAgICAgICAgICAgIC8vIFRvIGF2b2lkIHJvdW5kaW5nIHVwLCBiZWZvcmUgYWRkaW5nXHJcbiAgICAgICAgICAgICAgICBuIC89IDI7ICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICBsYXN0IGJ5dGUsIHNoaWZ0IGV2ZXJ5dGhpbmdcclxuICAgICAgICAgICAgICAgIGQgLz0gMjsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgIHJpZ2h0IHVzaW5nIGludGVnZXIgbWF0aCB1bnRpbFxyXG4gICAgICAgICAgICAgICAgeCA+Pj49IDE7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgd2UgaGF2ZSBleGFjdGx5IHRoZSBkZXNpcmVkIGJpdHMuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIChuICsgeCkgLyBkOyAgICAgICAgICAgICAgICAgLy8gRm9ybSB0aGUgbnVtYmVyIHdpdGhpbiBbMCwgMSkuXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcHJuZy5pbnQzMiA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJjNC5nKDQpIHwgMDsgfVxyXG4gICAgICAgIHBybmcucXVpY2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGFyYzQuZyg0KSAvIDB4MTAwMDAwMDAwOyB9XHJcbiAgICAgICAgcHJuZy5kb3VibGUgPSBwcm5nO1xyXG5cclxuICAgICAgICAvLyBNaXggdGhlIHJhbmRvbW5lc3MgaW50byBhY2N1bXVsYXRlZCBlbnRyb3B5LlxyXG4gICAgICAgIG1peGtleSh0b3N0cmluZyhhcmM0LlMpLCBwb29sKTtcclxuXHJcbiAgICAgICAgLy8gQ2FsbGluZyBjb252ZW50aW9uOiB3aGF0IHRvIHJldHVybiBhcyBhIGZ1bmN0aW9uIG9mIHBybmcsIHNlZWQsIGlzX21hdGguXHJcbiAgICAgICAgcmV0dXJuIChvcHRpb25zLnBhc3MgfHwgY2FsbGJhY2sgfHxcclxuICAgICAgICBmdW5jdGlvbihwcm5nLCBzZWVkLCBpc19tYXRoX2NhbGwsIHN0YXRlKSB7XHJcbiAgICAgICAgICAgIGlmIChzdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gTG9hZCB0aGUgYXJjNCBzdGF0ZSBmcm9tIHRoZSBnaXZlbiBzdGF0ZSBpZiBpdCBoYXMgYW4gUyBhcnJheS5cclxuICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5TKSB7IGNvcHkoc3RhdGUsIGFyYzQpOyB9XHJcbiAgICAgICAgICAgICAgICAvLyBPbmx5IHByb3ZpZGUgdGhlIC5zdGF0ZSBtZXRob2QgaWYgcmVxdWVzdGVkIHZpYSBvcHRpb25zLnN0YXRlLlxyXG4gICAgICAgICAgICAgICAgcHJuZy5zdGF0ZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29weShhcmM0LCB7fSk7IH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gSWYgY2FsbGVkIGFzIGEgbWV0aG9kIG9mIE1hdGggKE1hdGguc2VlZHJhbmRvbSgpKSwgbXV0YXRlXHJcbiAgICAgICAgICAgIC8vIE1hdGgucmFuZG9tIGJlY2F1c2UgdGhhdCBpcyBob3cgc2VlZHJhbmRvbS5qcyBoYXMgd29ya2VkIHNpbmNlIHYxLjAuXHJcbiAgICAgICAgICAgIGlmIChpc19tYXRoX2NhbGwpIHsgbWF0aFtybmduYW1lXSA9IHBybmc7IHJldHVybiBzZWVkOyB9XHJcblxyXG4gICAgICAgICAgICAvLyBPdGhlcndpc2UsIGl0IGlzIGEgbmV3ZXIgY2FsbGluZyBjb252ZW50aW9uLCBzbyByZXR1cm4gdGhlXHJcbiAgICAgICAgICAgIC8vIHBybmcgZGlyZWN0bHkuXHJcbiAgICAgICAgICAgIGVsc2UgcmV0dXJuIHBybmc7XHJcbiAgICAgICAgfSkoXHJcbiAgICAgICAgICAgIHBybmcsXHJcbiAgICAgICAgICAgIHNob3J0c2VlZCxcclxuICAgICAgICAgICAgJ2dsb2JhbCcgaW4gb3B0aW9ucyA/IG9wdGlvbnMuZ2xvYmFsIDogKHRoaXMgPT0gbWF0aCksXHJcbiAgICAgICAgICAgIG9wdGlvbnMuc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgbWF0aFsnc2VlZCcgKyBybmduYW1lXSA9IHNlZWRyYW5kb207XHJcblxyXG4vL1xyXG4vLyBBUkM0XHJcbi8vXHJcbi8vIEFuIEFSQzQgaW1wbGVtZW50YXRpb24uICBUaGUgY29uc3RydWN0b3IgdGFrZXMgYSBrZXkgaW4gdGhlIGZvcm0gb2ZcclxuLy8gYW4gYXJyYXkgb2YgYXQgbW9zdCAod2lkdGgpIGludGVnZXJzIHRoYXQgc2hvdWxkIGJlIDAgPD0geCA8ICh3aWR0aCkuXHJcbi8vXHJcbi8vIFRoZSBnKGNvdW50KSBtZXRob2QgcmV0dXJucyBhIHBzZXVkb3JhbmRvbSBpbnRlZ2VyIHRoYXQgY29uY2F0ZW5hdGVzXHJcbi8vIHRoZSBuZXh0IChjb3VudCkgb3V0cHV0cyBmcm9tIEFSQzQuICBJdHMgcmV0dXJuIHZhbHVlIGlzIGEgbnVtYmVyIHhcclxuLy8gdGhhdCBpcyBpbiB0aGUgcmFuZ2UgMCA8PSB4IDwgKHdpZHRoIF4gY291bnQpLlxyXG4vL1xyXG4gICAgZnVuY3Rpb24gQVJDNChrZXkpIHtcclxuICAgICAgICB2YXIgdCwga2V5bGVuID0ga2V5Lmxlbmd0aCxcclxuICAgICAgICAgICAgbWUgPSB0aGlzLCBpID0gMCwgaiA9IG1lLmkgPSBtZS5qID0gMCwgcyA9IG1lLlMgPSBbXTtcclxuXHJcbiAgICAgICAgLy8gVGhlIGVtcHR5IGtleSBbXSBpcyB0cmVhdGVkIGFzIFswXS5cclxuICAgICAgICBpZiAoIWtleWxlbikgeyBrZXkgPSBba2V5bGVuKytdOyB9XHJcblxyXG4gICAgICAgIC8vIFNldCB1cCBTIHVzaW5nIHRoZSBzdGFuZGFyZCBrZXkgc2NoZWR1bGluZyBhbGdvcml0aG0uXHJcbiAgICAgICAgd2hpbGUgKGkgPCB3aWR0aCkge1xyXG4gICAgICAgICAgICBzW2ldID0gaSsrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgd2lkdGg7IGkrKykge1xyXG4gICAgICAgICAgICBzW2ldID0gc1tqID0gbWFzayAmIChqICsga2V5W2kgJSBrZXlsZW5dICsgKHQgPSBzW2ldKSldO1xyXG4gICAgICAgICAgICBzW2pdID0gdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFRoZSBcImdcIiBtZXRob2QgcmV0dXJucyB0aGUgbmV4dCAoY291bnQpIG91dHB1dHMgYXMgb25lIG51bWJlci5cclxuICAgICAgICAobWUuZyA9IGZ1bmN0aW9uKGNvdW50KSB7XHJcbiAgICAgICAgICAgIC8vIFVzaW5nIGluc3RhbmNlIG1lbWJlcnMgaW5zdGVhZCBvZiBjbG9zdXJlIHN0YXRlIG5lYXJseSBkb3VibGVzIHNwZWVkLlxyXG4gICAgICAgICAgICB2YXIgdCwgciA9IDAsXHJcbiAgICAgICAgICAgICAgICBpID0gbWUuaSwgaiA9IG1lLmosIHMgPSBtZS5TO1xyXG4gICAgICAgICAgICB3aGlsZSAoY291bnQtLSkge1xyXG4gICAgICAgICAgICAgICAgdCA9IHNbaSA9IG1hc2sgJiAoaSArIDEpXTtcclxuICAgICAgICAgICAgICAgIHIgPSByICogd2lkdGggKyBzW21hc2sgJiAoKHNbaV0gPSBzW2ogPSBtYXNrICYgKGogKyB0KV0pICsgKHNbal0gPSB0KSldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1lLmkgPSBpOyBtZS5qID0gajtcclxuICAgICAgICAgICAgcmV0dXJuIHI7XHJcbiAgICAgICAgICAgIC8vIEZvciByb2J1c3QgdW5wcmVkaWN0YWJpbGl0eSwgdGhlIGZ1bmN0aW9uIGNhbGwgYmVsb3cgYXV0b21hdGljYWxseVxyXG4gICAgICAgICAgICAvLyBkaXNjYXJkcyBhbiBpbml0aWFsIGJhdGNoIG9mIHZhbHVlcy4gIFRoaXMgaXMgY2FsbGVkIFJDNC1kcm9wWzI1Nl0uXHJcbiAgICAgICAgICAgIC8vIFNlZSBodHRwOi8vZ29vZ2xlLmNvbS9zZWFyY2g/cT1yc2ErZmx1aHJlcityZXNwb25zZSZidG5JXHJcbiAgICAgICAgfSkod2lkdGgpO1xyXG4gICAgfVxyXG5cclxuLy9cclxuLy8gY29weSgpXHJcbi8vIENvcGllcyBpbnRlcm5hbCBzdGF0ZSBvZiBBUkM0IHRvIG9yIGZyb20gYSBwbGFpbiBvYmplY3QuXHJcbi8vXHJcbiAgICBmdW5jdGlvbiBjb3B5KGYsIHQpIHtcclxuICAgICAgICB0LmkgPSBmLmk7XHJcbiAgICAgICAgdC5qID0gZi5qO1xyXG4gICAgICAgIHQuUyA9IGYuUy5zbGljZSgpO1xyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuXHJcbi8vXHJcbi8vIGZsYXR0ZW4oKVxyXG4vLyBDb252ZXJ0cyBhbiBvYmplY3QgdHJlZSB0byBuZXN0ZWQgYXJyYXlzIG9mIHN0cmluZ3MuXHJcbi8vXHJcbiAgICBmdW5jdGlvbiBmbGF0dGVuKG9iaiwgZGVwdGgpIHtcclxuICAgICAgICB2YXIgcmVzdWx0ID0gW10sIHR5cCA9ICh0eXBlb2Ygb2JqKSwgcHJvcDtcclxuICAgICAgICBpZiAoZGVwdGggJiYgdHlwID09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgIGZvciAocHJvcCBpbiBvYmopIHtcclxuICAgICAgICAgICAgICAgIHRyeSB7IHJlc3VsdC5wdXNoKGZsYXR0ZW4ob2JqW3Byb3BdLCBkZXB0aCAtIDEpKTsgfSBjYXRjaCAoZSkge31cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gKHJlc3VsdC5sZW5ndGggPyByZXN1bHQgOiB0eXAgPT0gJ3N0cmluZycgPyBvYmogOiBvYmogKyAnXFwwJyk7XHJcbiAgICB9XHJcblxyXG4vL1xyXG4vLyBtaXhrZXkoKVxyXG4vLyBNaXhlcyBhIHN0cmluZyBzZWVkIGludG8gYSBrZXkgdGhhdCBpcyBhbiBhcnJheSBvZiBpbnRlZ2VycywgYW5kXHJcbi8vIHJldHVybnMgYSBzaG9ydGVuZWQgc3RyaW5nIHNlZWQgdGhhdCBpcyBlcXVpdmFsZW50IHRvIHRoZSByZXN1bHQga2V5LlxyXG4vL1xyXG4gICAgZnVuY3Rpb24gbWl4a2V5KHNlZWQsIGtleSkge1xyXG4gICAgICAgIHZhciBzdHJpbmdzZWVkID0gc2VlZCArICcnLCBzbWVhciwgaiA9IDA7XHJcbiAgICAgICAgd2hpbGUgKGogPCBzdHJpbmdzZWVkLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBrZXlbbWFzayAmIGpdID1cclxuICAgICAgICAgICAgICAgIG1hc2sgJiAoKHNtZWFyIF49IGtleVttYXNrICYgal0gKiAxOSkgKyBzdHJpbmdzZWVkLmNoYXJDb2RlQXQoaisrKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0b3N0cmluZyhrZXkpO1xyXG4gICAgfVxyXG5cclxuLy9cclxuLy8gYXV0b3NlZWQoKVxyXG4vLyBSZXR1cm5zIGFuIG9iamVjdCBmb3IgYXV0b3NlZWRpbmcsIHVzaW5nIHdpbmRvdy5jcnlwdG8gYW5kIE5vZGUgY3J5cHRvXHJcbi8vIG1vZHVsZSBpZiBhdmFpbGFibGUuXHJcbi8vXHJcbiAgICBmdW5jdGlvbiBhdXRvc2VlZCgpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBpZiAobm9kZWNyeXB0bykgeyByZXR1cm4gdG9zdHJpbmcobm9kZWNyeXB0by5yYW5kb21CeXRlcyh3aWR0aCkpOyB9XHJcbiAgICAgICAgICAgIHZhciBvdXQgPSBuZXcgVWludDhBcnJheSh3aWR0aCk7XHJcbiAgICAgICAgICAgIChnbG9iYWwuY3J5cHRvIHx8IGdsb2JhbC5tc0NyeXB0bykuZ2V0UmFuZG9tVmFsdWVzKG91dCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0b3N0cmluZyhvdXQpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdmFyIGJyb3dzZXIgPSBnbG9iYWwubmF2aWdhdG9yLFxyXG4gICAgICAgICAgICAgICAgcGx1Z2lucyA9IGJyb3dzZXIgJiYgYnJvd3Nlci5wbHVnaW5zO1xyXG4gICAgICAgICAgICByZXR1cm4gWytuZXcgRGF0ZSwgZ2xvYmFsLCBwbHVnaW5zLCBnbG9iYWwuc2NyZWVuLCB0b3N0cmluZyhwb29sKV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuLy9cclxuLy8gdG9zdHJpbmcoKVxyXG4vLyBDb252ZXJ0cyBhbiBhcnJheSBvZiBjaGFyY29kZXMgdG8gYSBzdHJpbmdcclxuLy9cclxuICAgIGZ1bmN0aW9uIHRvc3RyaW5nKGEpIHtcclxuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseSgwLCBhKTtcclxuICAgIH1cclxuXHJcbi8vXHJcbi8vIFdoZW4gc2VlZHJhbmRvbS5qcyBpcyBsb2FkZWQsIHdlIGltbWVkaWF0ZWx5IG1peCBhIGZldyBiaXRzXHJcbi8vIGZyb20gdGhlIGJ1aWx0LWluIFJORyBpbnRvIHRoZSBlbnRyb3B5IHBvb2wuICBCZWNhdXNlIHdlIGRvXHJcbi8vIG5vdCB3YW50IHRvIGludGVyZmVyZSB3aXRoIGRldGVybWluaXN0aWMgUFJORyBzdGF0ZSBsYXRlcixcclxuLy8gc2VlZHJhbmRvbSB3aWxsIG5vdCBjYWxsIG1hdGgucmFuZG9tIG9uIGl0cyBvd24gYWdhaW4gYWZ0ZXJcclxuLy8gaW5pdGlhbGl6YXRpb24uXHJcbi8vXHJcbiAgICBtaXhrZXkobWF0aC5yYW5kb20oKSwgcG9vbCk7XHJcblxyXG4vL1xyXG4vLyBOb2RlanMgYW5kIEFNRCBzdXBwb3J0OiBleHBvcnQgdGhlIGltcGxlbWVudGF0aW9uIGFzIGEgbW9kdWxlIHVzaW5nXHJcbi8vIGVpdGhlciBjb252ZW50aW9uLlxyXG4vL1xyXG5cclxuLy8gRW5kIGFub255bW91cyBzY29wZSwgYW5kIHBhc3MgaW5pdGlhbCB2YWx1ZXMuXHJcbn0pKFxyXG4gICAgW10sICAgICAvLyBwb29sOiBlbnRyb3B5IHBvb2wgc3RhcnRzIGVtcHR5XHJcbiAgICBCTU1hdGggICAgLy8gbWF0aDogcGFja2FnZSBjb250YWluaW5nIHJhbmRvbSwgcG93LCBhbmQgc2VlZHJhbmRvbVxyXG4pO1xudmFyIEJlemllckZhY3RvcnkgPSAoZnVuY3Rpb24oKXtcclxuICAgIC8qKlxyXG4gICAgICogQmV6aWVyRWFzaW5nIC0gdXNlIGJlemllciBjdXJ2ZSBmb3IgdHJhbnNpdGlvbiBlYXNpbmcgZnVuY3Rpb25cclxuICAgICAqIGJ5IEdhw6t0YW4gUmVuYXVkZWF1IDIwMTQgLSAyMDE1IOKAkyBNSVQgTGljZW5zZVxyXG4gICAgICpcclxuICAgICAqIENyZWRpdHM6IGlzIGJhc2VkIG9uIEZpcmVmb3gncyBuc1NNSUxLZXlTcGxpbmUuY3BwXHJcbiAgICAgKiBVc2FnZTpcclxuICAgICAqIHZhciBzcGxpbmUgPSBCZXppZXJFYXNpbmcoWyAwLjI1LCAwLjEsIDAuMjUsIDEuMCBdKVxyXG4gICAgICogc3BsaW5lLmdldCh4KSA9PiByZXR1cm5zIHRoZSBlYXNpbmcgdmFsdWUgfCB4IG11c3QgYmUgaW4gWzAsIDFdIHJhbmdlXHJcbiAgICAgKlxyXG4gICAgICovXHJcblxyXG4gICAgICAgIHZhciBvYiA9IHt9O1xyXG4gICAgb2IuZ2V0QmV6aWVyRWFzaW5nID0gZ2V0QmV6aWVyRWFzaW5nO1xyXG4gICAgdmFyIGJlemllcnMgPSB7fTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXRCZXppZXJFYXNpbmcoYSxiLGMsZCxubSl7XHJcbiAgICAgICAgdmFyIHN0ciA9IG5tIHx8ICgnYmV6XycgKyBhKydfJytiKydfJytjKydfJytkKS5yZXBsYWNlKC9cXC4vZywgJ3AnKTtcclxuICAgICAgICBpZihiZXppZXJzW3N0cl0pe1xyXG4gICAgICAgICAgICByZXR1cm4gYmV6aWVyc1tzdHJdO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgYmV6RWFzaW5nID0gbmV3IEJlemllckVhc2luZyhbYSxiLGMsZF0pO1xyXG4gICAgICAgIGJlemllcnNbc3RyXSA9IGJlekVhc2luZztcclxuICAgICAgICByZXR1cm4gYmV6RWFzaW5nO1xyXG4gICAgfVxyXG5cclxuLy8gVGhlc2UgdmFsdWVzIGFyZSBlc3RhYmxpc2hlZCBieSBlbXBpcmljaXNtIHdpdGggdGVzdHMgKHRyYWRlb2ZmOiBwZXJmb3JtYW5jZSBWUyBwcmVjaXNpb24pXHJcbiAgICB2YXIgTkVXVE9OX0lURVJBVElPTlMgPSA0O1xyXG4gICAgdmFyIE5FV1RPTl9NSU5fU0xPUEUgPSAwLjAwMTtcclxuICAgIHZhciBTVUJESVZJU0lPTl9QUkVDSVNJT04gPSAwLjAwMDAwMDE7XHJcbiAgICB2YXIgU1VCRElWSVNJT05fTUFYX0lURVJBVElPTlMgPSAxMDtcclxuXHJcbiAgICB2YXIga1NwbGluZVRhYmxlU2l6ZSA9IDExO1xyXG4gICAgdmFyIGtTYW1wbGVTdGVwU2l6ZSA9IDEuMCAvIChrU3BsaW5lVGFibGVTaXplIC0gMS4wKTtcclxuXHJcbiAgICB2YXIgZmxvYXQzMkFycmF5U3VwcG9ydGVkID0gdHlwZW9mIEZsb2F0MzJBcnJheSA9PT0gXCJmdW5jdGlvblwiO1xyXG5cclxuICAgIGZ1bmN0aW9uIEEgKGFBMSwgYUEyKSB7IHJldHVybiAxLjAgLSAzLjAgKiBhQTIgKyAzLjAgKiBhQTE7IH1cclxuICAgIGZ1bmN0aW9uIEIgKGFBMSwgYUEyKSB7IHJldHVybiAzLjAgKiBhQTIgLSA2LjAgKiBhQTE7IH1cclxuICAgIGZ1bmN0aW9uIEMgKGFBMSkgICAgICB7IHJldHVybiAzLjAgKiBhQTE7IH1cclxuXHJcbi8vIFJldHVybnMgeCh0KSBnaXZlbiB0LCB4MSwgYW5kIHgyLCBvciB5KHQpIGdpdmVuIHQsIHkxLCBhbmQgeTIuXHJcbiAgICBmdW5jdGlvbiBjYWxjQmV6aWVyIChhVCwgYUExLCBhQTIpIHtcclxuICAgICAgICByZXR1cm4gKChBKGFBMSwgYUEyKSphVCArIEIoYUExLCBhQTIpKSphVCArIEMoYUExKSkqYVQ7XHJcbiAgICB9XHJcblxyXG4vLyBSZXR1cm5zIGR4L2R0IGdpdmVuIHQsIHgxLCBhbmQgeDIsIG9yIGR5L2R0IGdpdmVuIHQsIHkxLCBhbmQgeTIuXHJcbiAgICBmdW5jdGlvbiBnZXRTbG9wZSAoYVQsIGFBMSwgYUEyKSB7XHJcbiAgICAgICAgcmV0dXJuIDMuMCAqIEEoYUExLCBhQTIpKmFUKmFUICsgMi4wICogQihhQTEsIGFBMikgKiBhVCArIEMoYUExKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBiaW5hcnlTdWJkaXZpZGUgKGFYLCBhQSwgYUIsIG1YMSwgbVgyKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRYLCBjdXJyZW50VCwgaSA9IDA7XHJcbiAgICAgICAgZG8ge1xyXG4gICAgICAgICAgICBjdXJyZW50VCA9IGFBICsgKGFCIC0gYUEpIC8gMi4wO1xyXG4gICAgICAgICAgICBjdXJyZW50WCA9IGNhbGNCZXppZXIoY3VycmVudFQsIG1YMSwgbVgyKSAtIGFYO1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudFggPiAwLjApIHtcclxuICAgICAgICAgICAgICAgIGFCID0gY3VycmVudFQ7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhQSA9IGN1cnJlbnRUO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSB3aGlsZSAoTWF0aC5hYnMoY3VycmVudFgpID4gU1VCRElWSVNJT05fUFJFQ0lTSU9OICYmICsraSA8IFNVQkRJVklTSU9OX01BWF9JVEVSQVRJT05TKTtcclxuICAgICAgICByZXR1cm4gY3VycmVudFQ7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbmV3dG9uUmFwaHNvbkl0ZXJhdGUgKGFYLCBhR3Vlc3NULCBtWDEsIG1YMikge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgTkVXVE9OX0lURVJBVElPTlM7ICsraSkge1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFNsb3BlID0gZ2V0U2xvcGUoYUd1ZXNzVCwgbVgxLCBtWDIpO1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudFNsb3BlID09PSAwLjApIHJldHVybiBhR3Vlc3NUO1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFggPSBjYWxjQmV6aWVyKGFHdWVzc1QsIG1YMSwgbVgyKSAtIGFYO1xyXG4gICAgICAgICAgICBhR3Vlc3NUIC09IGN1cnJlbnRYIC8gY3VycmVudFNsb3BlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYUd1ZXNzVDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHBvaW50cyBpcyBhbiBhcnJheSBvZiBbIG1YMSwgbVkxLCBtWDIsIG1ZMiBdXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIEJlemllckVhc2luZyAocG9pbnRzKSB7XHJcbiAgICAgICAgdGhpcy5fcCA9IHBvaW50cztcclxuICAgICAgICB0aGlzLl9tU2FtcGxlVmFsdWVzID0gZmxvYXQzMkFycmF5U3VwcG9ydGVkID8gbmV3IEZsb2F0MzJBcnJheShrU3BsaW5lVGFibGVTaXplKSA6IG5ldyBBcnJheShrU3BsaW5lVGFibGVTaXplKTtcclxuICAgICAgICB0aGlzLl9wcmVjb21wdXRlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICB0aGlzLmdldCA9IHRoaXMuZ2V0LmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgQmV6aWVyRWFzaW5nLnByb3RvdHlwZSA9IHtcclxuXHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoeCkge1xyXG4gICAgICAgICAgICB2YXIgbVgxID0gdGhpcy5fcFswXSxcclxuICAgICAgICAgICAgICAgIG1ZMSA9IHRoaXMuX3BbMV0sXHJcbiAgICAgICAgICAgICAgICBtWDIgPSB0aGlzLl9wWzJdLFxyXG4gICAgICAgICAgICAgICAgbVkyID0gdGhpcy5fcFszXTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9wcmVjb21wdXRlZCkgdGhpcy5fcHJlY29tcHV0ZSgpO1xyXG4gICAgICAgICAgICBpZiAobVgxID09PSBtWTEgJiYgbVgyID09PSBtWTIpIHJldHVybiB4OyAvLyBsaW5lYXJcclxuICAgICAgICAgICAgLy8gQmVjYXVzZSBKYXZhU2NyaXB0IG51bWJlciBhcmUgaW1wcmVjaXNlLCB3ZSBzaG91bGQgZ3VhcmFudGVlIHRoZSBleHRyZW1lcyBhcmUgcmlnaHQuXHJcbiAgICAgICAgICAgIGlmICh4ID09PSAwKSByZXR1cm4gMDtcclxuICAgICAgICAgICAgaWYgKHggPT09IDEpIHJldHVybiAxO1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsY0Jlemllcih0aGlzLl9nZXRURm9yWCh4KSwgbVkxLCBtWTIpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIC8vIFByaXZhdGUgcGFydFxyXG5cclxuICAgICAgICBfcHJlY29tcHV0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgbVgxID0gdGhpcy5fcFswXSxcclxuICAgICAgICAgICAgICAgIG1ZMSA9IHRoaXMuX3BbMV0sXHJcbiAgICAgICAgICAgICAgICBtWDIgPSB0aGlzLl9wWzJdLFxyXG4gICAgICAgICAgICAgICAgbVkyID0gdGhpcy5fcFszXTtcclxuICAgICAgICAgICAgdGhpcy5fcHJlY29tcHV0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAobVgxICE9PSBtWTEgfHwgbVgyICE9PSBtWTIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWxjU2FtcGxlVmFsdWVzKCk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgX2NhbGNTYW1wbGVWYWx1ZXM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG1YMSA9IHRoaXMuX3BbMF0sXHJcbiAgICAgICAgICAgICAgICBtWDIgPSB0aGlzLl9wWzJdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtTcGxpbmVUYWJsZVNpemU7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbVNhbXBsZVZhbHVlc1tpXSA9IGNhbGNCZXppZXIoaSAqIGtTYW1wbGVTdGVwU2l6ZSwgbVgxLCBtWDIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogZ2V0VEZvclggY2hvc2UgdGhlIGZhc3Rlc3QgaGV1cmlzdGljIHRvIGRldGVybWluZSB0aGUgcGVyY2VudGFnZSB2YWx1ZSBwcmVjaXNlbHkgZnJvbSBhIGdpdmVuIFggcHJvamVjdGlvbi5cclxuICAgICAgICAgKi9cclxuICAgICAgICBfZ2V0VEZvclg6IGZ1bmN0aW9uIChhWCkge1xyXG4gICAgICAgICAgICB2YXIgbVgxID0gdGhpcy5fcFswXSxcclxuICAgICAgICAgICAgICAgIG1YMiA9IHRoaXMuX3BbMl0sXHJcbiAgICAgICAgICAgICAgICBtU2FtcGxlVmFsdWVzID0gdGhpcy5fbVNhbXBsZVZhbHVlcztcclxuXHJcbiAgICAgICAgICAgIHZhciBpbnRlcnZhbFN0YXJ0ID0gMC4wO1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFNhbXBsZSA9IDE7XHJcbiAgICAgICAgICAgIHZhciBsYXN0U2FtcGxlID0ga1NwbGluZVRhYmxlU2l6ZSAtIDE7XHJcblxyXG4gICAgICAgICAgICBmb3IgKDsgY3VycmVudFNhbXBsZSAhPT0gbGFzdFNhbXBsZSAmJiBtU2FtcGxlVmFsdWVzW2N1cnJlbnRTYW1wbGVdIDw9IGFYOyArK2N1cnJlbnRTYW1wbGUpIHtcclxuICAgICAgICAgICAgICAgIGludGVydmFsU3RhcnQgKz0ga1NhbXBsZVN0ZXBTaXplO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC0tY3VycmVudFNhbXBsZTtcclxuXHJcbiAgICAgICAgICAgIC8vIEludGVycG9sYXRlIHRvIHByb3ZpZGUgYW4gaW5pdGlhbCBndWVzcyBmb3IgdFxyXG4gICAgICAgICAgICB2YXIgZGlzdCA9IChhWCAtIG1TYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pIC8gKG1TYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZSsxXSAtIG1TYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pO1xyXG4gICAgICAgICAgICB2YXIgZ3Vlc3NGb3JUID0gaW50ZXJ2YWxTdGFydCArIGRpc3QgKiBrU2FtcGxlU3RlcFNpemU7XHJcblxyXG4gICAgICAgICAgICB2YXIgaW5pdGlhbFNsb3BlID0gZ2V0U2xvcGUoZ3Vlc3NGb3JULCBtWDEsIG1YMik7XHJcbiAgICAgICAgICAgIGlmIChpbml0aWFsU2xvcGUgPj0gTkVXVE9OX01JTl9TTE9QRSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld3RvblJhcGhzb25JdGVyYXRlKGFYLCBndWVzc0ZvclQsIG1YMSwgbVgyKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpbml0aWFsU2xvcGUgPT09IDAuMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGd1ZXNzRm9yVDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBiaW5hcnlTdWJkaXZpZGUoYVgsIGludGVydmFsU3RhcnQsIGludGVydmFsU3RhcnQgKyBrU2FtcGxlU3RlcFNpemUsIG1YMSwgbVgyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIG9iO1xyXG5cclxufSgpKTtcbihmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbGFzdFRpbWUgPSAwO1xyXG4gICAgdmFyIHZlbmRvcnMgPSBbJ21zJywgJ21veicsICd3ZWJraXQnLCAnbyddO1xyXG4gICAgZm9yKHZhciB4ID0gMDsgeCA8IHZlbmRvcnMubGVuZ3RoICYmICF3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lOyArK3gpIHtcclxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93W3ZlbmRvcnNbeF0gKyAnUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XHJcbiAgICAgICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lID0gd2luZG93W3ZlbmRvcnNbeF0gKyAnQ2FuY2VsQW5pbWF0aW9uRnJhbWUnXSB8fCB3aW5kb3dbdmVuZG9yc1t4XSArICdDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXTtcclxuICAgIH1cclxuICAgIGlmKCF3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKVxyXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgIHZhciB0aW1lVG9DYWxsID0gTWF0aC5tYXgoMCwgMTYgLSAoY3VyclRpbWUgLSBsYXN0VGltZSkpO1xyXG4gICAgICAgICAgICB2YXIgaWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhjdXJyVGltZSArIHRpbWVUb0NhbGwpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHRpbWVUb0NhbGwpO1xyXG4gICAgICAgICAgICBsYXN0VGltZSA9IGN1cnJUaW1lICsgdGltZVRvQ2FsbDtcclxuICAgICAgICAgICAgcmV0dXJuIGlkO1xyXG4gICAgICAgIH07XHJcbiAgICBpZighd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKVxyXG4gICAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSA9IGZ1bmN0aW9uIChpZCkge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQoaWQpO1xyXG4gICAgICAgIH07XHJcbn0oKSk7XHJcblxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudChwYXJlbnQsY2hpbGQscGFyYW1zKXtcclxuICAgIGlmKGNoaWxkKXtcclxuICAgICAgICBjaGlsZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHBhcmVudC5wcm90b3R5cGUpO1xyXG4gICAgICAgIGNoaWxkLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNoaWxkO1xyXG4gICAgICAgIGNoaWxkLnByb3RvdHlwZS5fcGFyZW50ID0gcGFyZW50LnByb3RvdHlwZTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHZhciBpbnN0YW5jZSA9IE9iamVjdC5jcmVhdGUocGFyZW50LnByb3RvdHlwZSxwYXJhbXMpO1xyXG4gICAgICAgIHZhciBnZXRUeXBlID0ge307XHJcbiAgICAgICAgaWYoaW5zdGFuY2UgJiYgZ2V0VHlwZS50b1N0cmluZy5jYWxsKGluc3RhbmNlLmluaXQpID09PSAnW29iamVjdCBGdW5jdGlvbl0nKXtcclxuICAgICAgICAgICAgaW5zdGFuY2UuaW5pdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaW5zdGFuY2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV4dGVuZFByb3RvdHlwZShzb3VyY2UsZGVzdGluYXRpb24pe1xyXG4gICAgZm9yICh2YXIgYXR0ciBpbiBzb3VyY2UucHJvdG90eXBlKSB7XHJcbiAgICAgICAgaWYgKHNvdXJjZS5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkoYXR0cikpIGRlc3RpbmF0aW9uLnByb3RvdHlwZVthdHRyXSA9IHNvdXJjZS5wcm90b3R5cGVbYXR0cl07XHJcbiAgICB9XHJcbn1cbmZ1bmN0aW9uIGJlekZ1bmN0aW9uKCl7XHJcblxyXG4gICAgdmFyIGVhc2luZ0Z1bmN0aW9ucyA9IFtdO1xyXG4gICAgdmFyIG1hdGggPSBNYXRoO1xyXG5cclxuICAgIGZ1bmN0aW9uIHBvaW50T25MaW5lMkQoeDEseTEsIHgyLHkyLCB4Myx5Myl7XHJcbiAgICAgICAgdmFyIGRldDEgPSAoeDEqeTIpICsgKHkxKngzKSArICh4Mip5MykgLSAoeDMqeTIpIC0gKHkzKngxKSAtICh4Mip5MSk7XHJcbiAgICAgICAgcmV0dXJuIGRldDEgPiAtMC4wMDAxICYmIGRldDEgPCAwLjAwMDE7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcG9pbnRPbkxpbmUzRCh4MSx5MSx6MSwgeDIseTIsejIsIHgzLHkzLHozKXtcclxuICAgICAgICBpZih6MSA9PT0gMCAmJiB6MiA9PT0gMCAmJiB6MyA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gcG9pbnRPbkxpbmUyRCh4MSx5MSwgeDIseTIsIHgzLHkzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGRpc3QxID0gTWF0aC5zcXJ0KE1hdGgucG93KHgyIC0geDEsIDIpICsgTWF0aC5wb3coeTIgLSB5MSwgMikgKyBNYXRoLnBvdyh6MiAtIHoxLCAyKSk7XHJcbiAgICAgICAgdmFyIGRpc3QyID0gTWF0aC5zcXJ0KE1hdGgucG93KHgzIC0geDEsIDIpICsgTWF0aC5wb3coeTMgLSB5MSwgMikgKyBNYXRoLnBvdyh6MyAtIHoxLCAyKSk7XHJcbiAgICAgICAgdmFyIGRpc3QzID0gTWF0aC5zcXJ0KE1hdGgucG93KHgzIC0geDIsIDIpICsgTWF0aC5wb3coeTMgLSB5MiwgMikgKyBNYXRoLnBvdyh6MyAtIHoyLCAyKSk7XHJcbiAgICAgICAgdmFyIGRpZmZEaXN0O1xyXG4gICAgICAgIGlmKGRpc3QxID4gZGlzdDIpe1xyXG4gICAgICAgICAgICBpZihkaXN0MSA+IGRpc3QzKXtcclxuICAgICAgICAgICAgICAgIGRpZmZEaXN0ID0gZGlzdDEgLSBkaXN0MiAtIGRpc3QzO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZGlmZkRpc3QgPSBkaXN0MyAtIGRpc3QyIC0gZGlzdDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYoZGlzdDMgPiBkaXN0Mil7XHJcbiAgICAgICAgICAgIGRpZmZEaXN0ID0gZGlzdDMgLSBkaXN0MiAtIGRpc3QxO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGRpZmZEaXN0ID0gZGlzdDIgLSBkaXN0MSAtIGRpc3QzO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGlmZkRpc3QgPiAtMC4wMDAxICYmIGRpZmZEaXN0IDwgMC4wMDAxO1xyXG4gICAgfVxyXG5cclxuICAgIC8qZnVuY3Rpb24gZ2V0RWFzaW5nQ3VydmUoYWEsYmIsY2MsZGQsZW5jb2RlZEZ1bmNOYW1lKSB7XHJcbiAgICAgICAgaWYoIWVuY29kZWRGdW5jTmFtZSl7XHJcbiAgICAgICAgICAgIGVuY29kZWRGdW5jTmFtZSA9ICgnYmV6XycgKyBhYSsnXycrYmIrJ18nK2NjKydfJytkZCkucmVwbGFjZSgvXFwuL2csICdwJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGVhc2luZ0Z1bmN0aW9uc1tlbmNvZGVkRnVuY05hbWVdKXtcclxuICAgICAgICAgICAgcmV0dXJuIGVhc2luZ0Z1bmN0aW9uc1tlbmNvZGVkRnVuY05hbWVdO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgQTAsIEIwLCBDMDtcclxuICAgICAgICB2YXIgQTEsIEIxLCBDMTtcclxuICAgICAgICBlYXNpbmdGdW5jdGlvbnNbZW5jb2RlZEZ1bmNOYW1lXSA9IGZ1bmN0aW9uKHR0KSB7XHJcbiAgICAgICAgICAgIHZhciB4ID0gdHQ7XHJcbiAgICAgICAgICAgIHZhciBpID0gMCwgejtcclxuICAgICAgICAgICAgd2hpbGUgKCsraSA8IDIwKSB7XHJcbiAgICAgICAgICAgICAgICBDMCA9IDMgKiBhYTtcclxuICAgICAgICAgICAgICAgIEIwID0gMyAqIChjYyAtIGFhKSAtIEMwO1xyXG4gICAgICAgICAgICAgICAgQTAgPSAxIC0gQzAgLSBCMDtcclxuICAgICAgICAgICAgICAgIHogPSAoeCAqIChDMCArIHggKiAoQjAgKyB4ICogQTApKSkgLSB0dDtcclxuICAgICAgICAgICAgICAgIGlmIChibV9hYnMoeikgPCAxZS0zKSBicmVhaztcclxuICAgICAgICAgICAgICAgIHggLT0geiAvIChDMCArIHggKiAoMiAqIEIwICsgMyAqIEEwICogeCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEMxID0gMyAqIGJiO1xyXG4gICAgICAgICAgICBCMSA9IDMgKiAoZGQgLSBiYikgLSBDMTtcclxuICAgICAgICAgICAgQTEgPSAxIC0gQzEgLSBCMTtcclxuICAgICAgICAgICAgdmFyIHBvbHlCID0geCAqIChDMSArIHggKiAoQjEgKyB4ICogQTEpKTtcclxuICAgICAgICAgICAgLy9yZXR1cm4gYyAqIHBvbHlCICsgYjtcclxuICAgICAgICAgICAgcmV0dXJuIHBvbHlCO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIGVhc2luZ0Z1bmN0aW9uc1tlbmNvZGVkRnVuY05hbWVdO1xyXG4gICAgfSovXHJcbiAgICB2YXIgZ2V0QmV6aWVyTGVuZ3RoID0gKGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIFNlZ21lbnQobCxwKXtcclxuICAgICAgICAgICAgdGhpcy5sID0gbDtcclxuICAgICAgICAgICAgdGhpcy5wID0gcDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihwdDEscHQyLHB0MyxwdDQpe1xyXG4gICAgICAgICAgICB2YXIgY3VydmVTZWdtZW50cyA9IGRlZmF1bHRDdXJ2ZVNlZ21lbnRzO1xyXG4gICAgICAgICAgICB2YXIgaztcclxuICAgICAgICAgICAgdmFyIGksIGxlbjtcclxuICAgICAgICAgICAgdmFyIHB0Q29vcmQscGVyYyxhZGRlZExlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgIHZhciBwdERpc3RhbmNlO1xyXG4gICAgICAgICAgICB2YXIgcG9pbnQgPSBbXSxsYXN0UG9pbnQgPSBbXTtcclxuICAgICAgICAgICAgdmFyIGxlbmd0aERhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICBhZGRlZExlbmd0aDogMCxcclxuICAgICAgICAgICAgICAgIHNlZ21lbnRzOiBbXVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBsZW4gPSBwdDMubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3Ioaz0wO2s8Y3VydmVTZWdtZW50cztrKz0xKXtcclxuICAgICAgICAgICAgICAgIHBlcmMgPSBrLyhjdXJ2ZVNlZ21lbnRzLTEpO1xyXG4gICAgICAgICAgICAgICAgcHREaXN0YW5jZSA9IDA7XHJcbiAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHB0Q29vcmQgPSBibV9wb3coMS1wZXJjLDMpKnB0MVtpXSszKmJtX3BvdygxLXBlcmMsMikqcGVyYypwdDNbaV0rMyooMS1wZXJjKSpibV9wb3cocGVyYywyKSpwdDRbaV0rYm1fcG93KHBlcmMsMykqcHQyW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50W2ldID0gcHRDb29yZDtcclxuICAgICAgICAgICAgICAgICAgICBpZihsYXN0UG9pbnRbaV0gIT09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwdERpc3RhbmNlICs9IGJtX3Bvdyhwb2ludFtpXSAtIGxhc3RQb2ludFtpXSwyKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgbGFzdFBvaW50W2ldID0gcG9pbnRbaV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihwdERpc3RhbmNlKXtcclxuICAgICAgICAgICAgICAgICAgICBwdERpc3RhbmNlID0gYm1fc3FydChwdERpc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgICAgICBhZGRlZExlbmd0aCArPSBwdERpc3RhbmNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbGVuZ3RoRGF0YS5zZWdtZW50cy5wdXNoKG5ldyBTZWdtZW50KGFkZGVkTGVuZ3RoLHBlcmMpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZW5ndGhEYXRhLmFkZGVkTGVuZ3RoID0gYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgIHJldHVybiBsZW5ndGhEYXRhO1xyXG4gICAgICAgIH07XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdldFNlZ21lbnRzTGVuZ3RoKHNoYXBlRGF0YSkge1xyXG4gICAgICAgIHZhciBjbG9zZWQgPSBzaGFwZURhdGEuYztcclxuICAgICAgICB2YXIgcGF0aFYgPSBzaGFwZURhdGEudjtcclxuICAgICAgICB2YXIgcGF0aE8gPSBzaGFwZURhdGEubztcclxuICAgICAgICB2YXIgcGF0aEkgPSBzaGFwZURhdGEuaTtcclxuICAgICAgICB2YXIgaSwgbGVuID0gc2hhcGVEYXRhLl9sZW5ndGg7XHJcbiAgICAgICAgdmFyIGxlbmd0aHMgPSBbXTtcclxuICAgICAgICB2YXIgdG90YWxMZW5ndGggPSAwO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW4tMTtpKz0xKXtcclxuICAgICAgICAgICAgbGVuZ3Roc1tpXSA9IGdldEJlemllckxlbmd0aChwYXRoVltpXSxwYXRoVltpKzFdLHBhdGhPW2ldLHBhdGhJW2krMV0pO1xyXG4gICAgICAgICAgICB0b3RhbExlbmd0aCArPSBsZW5ndGhzW2ldLmFkZGVkTGVuZ3RoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihjbG9zZWQpe1xyXG4gICAgICAgICAgICBsZW5ndGhzW2ldID0gZ2V0QmV6aWVyTGVuZ3RoKHBhdGhWW2ldLHBhdGhWWzBdLHBhdGhPW2ldLHBhdGhJWzBdKTtcclxuICAgICAgICAgICAgdG90YWxMZW5ndGggKz0gbGVuZ3Roc1tpXS5hZGRlZExlbmd0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtsZW5ndGhzOmxlbmd0aHMsdG90YWxMZW5ndGg6dG90YWxMZW5ndGh9O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIEJlemllckRhdGEobGVuZ3RoKXtcclxuICAgICAgICB0aGlzLnNlZ21lbnRMZW5ndGggPSAwO1xyXG4gICAgICAgIHRoaXMucG9pbnRzID0gbmV3IEFycmF5KGxlbmd0aCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gUG9pbnREYXRhKHBhcnRpYWwscG9pbnQpe1xyXG4gICAgICAgIHRoaXMucGFydGlhbExlbmd0aCA9IHBhcnRpYWw7XHJcbiAgICAgICAgdGhpcy5wb2ludCA9IHBvaW50O1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBidWlsZEJlemllckRhdGEgPSAoZnVuY3Rpb24oKXtcclxuXHJcbiAgICAgICAgdmFyIHN0b3JlZERhdGEgPSB7fTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChrZXlEYXRhKXtcclxuICAgICAgICAgICAgdmFyIHB0MSA9IGtleURhdGEucztcclxuICAgICAgICAgICAgdmFyIHB0MiA9IGtleURhdGEuZTtcclxuICAgICAgICAgICAgdmFyIHB0MyA9IGtleURhdGEudG87XHJcbiAgICAgICAgICAgIHZhciBwdDQgPSBrZXlEYXRhLnRpO1xyXG4gICAgICAgICAgICB2YXIgYmV6aWVyTmFtZSA9IChwdDEuam9pbignXycpKydfJytwdDIuam9pbignXycpKydfJytwdDMuam9pbignXycpKydfJytwdDQuam9pbignXycpKS5yZXBsYWNlKC9cXC4vZywgJ3AnKTtcclxuICAgICAgICAgICAgaWYoc3RvcmVkRGF0YVtiZXppZXJOYW1lXSl7XHJcbiAgICAgICAgICAgICAgICBrZXlEYXRhLmJlemllckRhdGEgPSBzdG9yZWREYXRhW2Jlemllck5hbWVdO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgdmFyIGN1cnZlU2VnbWVudHMgPSBkZWZhdWx0Q3VydmVTZWdtZW50cztcclxuICAgICAgICB2YXIgaywgaSwgbGVuO1xyXG4gICAgICAgICAgICB2YXIgcHRDb29yZCxwZXJjLGFkZGVkTGVuZ3RoID0gMDtcclxuICAgICAgICAgICAgdmFyIHB0RGlzdGFuY2U7XHJcbiAgICAgICAgICAgIHZhciBwb2ludCxsYXN0UG9pbnQgPSBudWxsO1xyXG4gICAgICAgICAgICBpZihwdDEubGVuZ3RoID09PSAyICYmIChwdDFbMF0gIT0gcHQyWzBdIHx8IHB0MVsxXSAhPSBwdDJbMV0pICYmIHBvaW50T25MaW5lMkQocHQxWzBdLHB0MVsxXSxwdDJbMF0scHQyWzFdLHB0MVswXStwdDNbMF0scHQxWzFdK3B0M1sxXSkgJiYgcG9pbnRPbkxpbmUyRChwdDFbMF0scHQxWzFdLHB0MlswXSxwdDJbMV0scHQyWzBdK3B0NFswXSxwdDJbMV0rcHQ0WzFdKSl7XHJcbiAgICAgICAgICAgICAgICBjdXJ2ZVNlZ21lbnRzID0gMjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgYmV6aWVyRGF0YSA9IG5ldyBCZXppZXJEYXRhKGN1cnZlU2VnbWVudHMpO1xyXG4gICAgICAgICAgICBsZW4gPSBwdDMubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3Ioaz0wO2s8Y3VydmVTZWdtZW50cztrKz0xKXtcclxuICAgICAgICAgICAgcG9pbnQgPSBuZXcgQXJyYXkobGVuKTtcclxuICAgICAgICAgICAgICAgIHBlcmMgPSBrLyhjdXJ2ZVNlZ21lbnRzLTEpO1xyXG4gICAgICAgICAgICAgICAgcHREaXN0YW5jZSA9IDA7XHJcbiAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgcHRDb29yZCA9IGJtX3BvdygxLXBlcmMsMykqcHQxW2ldKzMqYm1fcG93KDEtcGVyYywyKSpwZXJjKihwdDFbaV0gKyBwdDNbaV0pKzMqKDEtcGVyYykqYm1fcG93KHBlcmMsMikqKHB0MltpXSArIHB0NFtpXSkrYm1fcG93KHBlcmMsMykqcHQyW2ldO1xyXG4gICAgICAgICAgICAgICAgcG9pbnRbaV0gPSBwdENvb3JkO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGxhc3RQb2ludCAhPT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcHREaXN0YW5jZSArPSBibV9wb3cocG9pbnRbaV0gLSBsYXN0UG9pbnRbaV0sMik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwdERpc3RhbmNlID0gYm1fc3FydChwdERpc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgIGFkZGVkTGVuZ3RoICs9IHB0RGlzdGFuY2U7XHJcbiAgICAgICAgICAgICAgICBiZXppZXJEYXRhLnBvaW50c1trXSA9IG5ldyBQb2ludERhdGEocHREaXN0YW5jZSxwb2ludCk7XHJcbiAgICAgICAgICAgICAgICBsYXN0UG9pbnQgPSBwb2ludDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBiZXppZXJEYXRhLnNlZ21lbnRMZW5ndGggPSBhZGRlZExlbmd0aDtcclxuICAgICAgICAgICAga2V5RGF0YS5iZXppZXJEYXRhID0gYmV6aWVyRGF0YTtcclxuICAgICAgICAgICAgc3RvcmVkRGF0YVtiZXppZXJOYW1lXSA9IGJlemllckRhdGE7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0RGlzdGFuY2VQZXJjKHBlcmMsYmV6aWVyRGF0YSl7XHJcbiAgICAgICAgdmFyIHNlZ21lbnRzID0gYmV6aWVyRGF0YS5zZWdtZW50cztcclxuICAgICAgICB2YXIgbGVuID0gc2VnbWVudHMubGVuZ3RoO1xyXG4gICAgICAgIHZhciBpbml0UG9zID0gYm1fZmxvb3IoKGxlbi0xKSpwZXJjKTtcclxuICAgICAgICB2YXIgbGVuZ3RoUG9zID0gcGVyYypiZXppZXJEYXRhLmFkZGVkTGVuZ3RoO1xyXG4gICAgICAgIHZhciBsUGVyYyA9IDA7XHJcbiAgICAgICAgaWYobGVuZ3RoUG9zID09IHNlZ21lbnRzW2luaXRQb3NdLmwpe1xyXG4gICAgICAgICAgICByZXR1cm4gc2VnbWVudHNbaW5pdFBvc10ucDtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdmFyIGRpciA9IHNlZ21lbnRzW2luaXRQb3NdLmwgPiBsZW5ndGhQb3MgPyAtMSA6IDE7XHJcbiAgICAgICAgICAgIHZhciBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgd2hpbGUoZmxhZyl7XHJcbiAgICAgICAgICAgICAgICBpZihzZWdtZW50c1tpbml0UG9zXS5sIDw9IGxlbmd0aFBvcyAmJiBzZWdtZW50c1tpbml0UG9zKzFdLmwgPiBsZW5ndGhQb3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxQZXJjID0gKGxlbmd0aFBvcyAtIHNlZ21lbnRzW2luaXRQb3NdLmwpLyhzZWdtZW50c1tpbml0UG9zKzFdLmwtc2VnbWVudHNbaW5pdFBvc10ubCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdFBvcyArPSBkaXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihpbml0UG9zIDwgMCB8fCBpbml0UG9zID49IGxlbiAtIDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gc2VnbWVudHNbaW5pdFBvc10ucCArIChzZWdtZW50c1tpbml0UG9zKzFdLnAgLSBzZWdtZW50c1tpbml0UG9zXS5wKSpsUGVyYztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gU2VnbWVudFBvaW50cygpe1xyXG4gICAgICAgIHRoaXMucHQxID0gbmV3IEFycmF5KDIpO1xyXG4gICAgICAgIHRoaXMucHQyID0gbmV3IEFycmF5KDIpO1xyXG4gICAgICAgIHRoaXMucHQzID0gbmV3IEFycmF5KDIpO1xyXG4gICAgICAgIHRoaXMucHQ0ID0gbmV3IEFycmF5KDIpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFBvaW50SW5TZWdtZW50KHB0MSwgcHQyLCBwdDMsIHB0NCwgcGVyY2VudCwgYmV6aWVyRGF0YSkge1xyXG4gICAgICAgIHZhciB0MSA9IGdldERpc3RhbmNlUGVyYyhwZXJjZW50LGJlemllckRhdGEpO1xyXG4gICAgICAgIHZhciB1MCA9IDE7XHJcbiAgICAgICAgdmFyIHUxID0gMSAtIHQxO1xyXG4gICAgICAgIHZhciBwdFggPSBNYXRoLnJvdW5kKCh1MSp1MSp1MSogcHQxWzBdICsgKHQxKnUxKnUxICsgdTEqdDEqdTEgKyB1MSp1MSp0MSkqIHB0M1swXSArICh0MSp0MSp1MSArIHUxKnQxKnQxICsgdDEqdTEqdDEpKnB0NFswXSArIHQxKnQxKnQxKiBwdDJbMF0pKiAxMDAwKSAvIDEwMDA7XHJcbiAgICAgICAgdmFyIHB0WSA9IE1hdGgucm91bmQoKHUxKnUxKnUxKiBwdDFbMV0gKyAodDEqdTEqdTEgKyB1MSp0MSp1MSArIHUxKnUxKnQxKSogcHQzWzFdICsgKHQxKnQxKnUxICsgdTEqdDEqdDEgKyB0MSp1MSp0MSkqcHQ0WzFdICsgdDEqdDEqdDEqIHB0MlsxXSkqIDEwMDApIC8gMTAwMDtcclxuICAgICAgICByZXR1cm4gW3B0WCwgcHRZXTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXROZXdTZWdtZW50KHB0MSxwdDIscHQzLHB0NCxzdGFydFBlcmMsZW5kUGVyYywgYmV6aWVyRGF0YSl7XHJcblxyXG4gICAgICAgIHZhciBwdHMgPSBuZXcgU2VnbWVudFBvaW50cygpO1xyXG4gICAgICAgIHN0YXJ0UGVyYyA9IHN0YXJ0UGVyYyA8IDAgPyAwIDogc3RhcnRQZXJjID4gMSA/IDEgOiBzdGFydFBlcmM7XHJcbiAgICAgICAgdmFyIHQwID0gZ2V0RGlzdGFuY2VQZXJjKHN0YXJ0UGVyYyxiZXppZXJEYXRhKTtcclxuICAgICAgICBlbmRQZXJjID0gZW5kUGVyYyA+IDEgPyAxIDogZW5kUGVyYztcclxuICAgICAgICB2YXIgdDEgPSBnZXREaXN0YW5jZVBlcmMoZW5kUGVyYyxiZXppZXJEYXRhKTtcclxuICAgICAgICB2YXIgaSwgbGVuID0gcHQxLmxlbmd0aDtcclxuICAgICAgICB2YXIgdTAgPSAxIC0gdDA7XHJcbiAgICAgICAgdmFyIHUxID0gMSAtIHQxO1xyXG4gICAgICAgIC8vTWF0aC5yb3VuZChudW0gKiAxMDApIC8gMTAwXHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcHRzLnB0MVtpXSA9ICBNYXRoLnJvdW5kKCh1MCp1MCp1MCogcHQxW2ldICsgKHQwKnUwKnUwICsgdTAqdDAqdTAgKyB1MCp1MCp0MCkgKiBwdDNbaV0gKyAodDAqdDAqdTAgKyB1MCp0MCp0MCArIHQwKnUwKnQwKSogcHQ0W2ldICsgdDAqdDAqdDAqIHB0MltpXSkqIDEwMDApIC8gMTAwMDtcclxuICAgICAgICAgICAgcHRzLnB0M1tpXSA9IE1hdGgucm91bmQoKHUwKnUwKnUxKnB0MVtpXSArICh0MCp1MCp1MSArIHUwKnQwKnUxICsgdTAqdTAqdDEpKiBwdDNbaV0gKyAodDAqdDAqdTEgKyB1MCp0MCp0MSArIHQwKnUwKnQxKSogcHQ0W2ldICsgdDAqdDAqdDEqIHB0MltpXSkqIDEwMDApIC8gMTAwMDtcclxuICAgICAgICAgICAgcHRzLnB0NFtpXSA9IE1hdGgucm91bmQoKHUwKnUxKnUxKiBwdDFbaV0gKyAodDAqdTEqdTEgKyB1MCp0MSp1MSArIHUwKnUxKnQxKSogcHQzW2ldICsgKHQwKnQxKnUxICsgdTAqdDEqdDEgKyB0MCp1MSp0MSkqIHB0NFtpXSArIHQwKnQxKnQxKiBwdDJbaV0pKiAxMDAwKSAvIDEwMDA7XHJcbiAgICAgICAgICAgIHB0cy5wdDJbaV0gPSBNYXRoLnJvdW5kKCh1MSp1MSp1MSogcHQxW2ldICsgKHQxKnUxKnUxICsgdTEqdDEqdTEgKyB1MSp1MSp0MSkqIHB0M1tpXSArICh0MSp0MSp1MSArIHUxKnQxKnQxICsgdDEqdTEqdDEpKnB0NFtpXSArIHQxKnQxKnQxKiBwdDJbaV0pKiAxMDAwKSAvIDEwMDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwdHM7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICAvL2dldEVhc2luZ0N1cnZlIDogZ2V0RWFzaW5nQ3VydmUsXHJcbiAgICAgICAgZ2V0QmV6aWVyTGVuZ3RoIDogZ2V0QmV6aWVyTGVuZ3RoLFxyXG4gICAgICAgIGdldFNlZ21lbnRzTGVuZ3RoIDogZ2V0U2VnbWVudHNMZW5ndGgsXHJcbiAgICAgICAgZ2V0TmV3U2VnbWVudCA6IGdldE5ld1NlZ21lbnQsXHJcbiAgICAgICAgZ2V0UG9pbnRJblNlZ21lbnQgOiBnZXRQb2ludEluU2VnbWVudCxcclxuICAgICAgICBidWlsZEJlemllckRhdGEgOiBidWlsZEJlemllckRhdGEsXHJcbiAgICAgICAgcG9pbnRPbkxpbmUyRCA6IHBvaW50T25MaW5lMkQsXHJcbiAgICAgICAgcG9pbnRPbkxpbmUzRCA6IHBvaW50T25MaW5lM0RcclxuICAgIH07XHJcbn1cclxuXHJcbnZhciBiZXogPSBiZXpGdW5jdGlvbigpO1xuZnVuY3Rpb24gZGF0YUZ1bmN0aW9uTWFuYWdlcigpe1xyXG5cclxuICAgIC8vdmFyIHRDYW52YXNIZWxwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKS5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlTGF5ZXJzKGxheWVycywgY29tcHMsIGZvbnRNYW5hZ2VyKXtcclxuICAgICAgICB2YXIgbGF5ZXJEYXRhO1xyXG4gICAgICAgIHZhciBhbmltQXJyYXksIGxhc3RGcmFtZTtcclxuICAgICAgICB2YXIgaSwgbGVuID0gbGF5ZXJzLmxlbmd0aDtcclxuICAgICAgICB2YXIgaiwgakxlbiwgaywga0xlbjtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBsYXllckRhdGEgPSBsYXllcnNbaV07XHJcbiAgICAgICAgICAgIGlmKCEoJ2tzJyBpbiBsYXllckRhdGEpIHx8IGxheWVyRGF0YS5jb21wbGV0ZWQpe1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGF5ZXJEYXRhLmNvbXBsZXRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKGxheWVyRGF0YS50dCl7XHJcbiAgICAgICAgICAgICAgICBsYXllcnNbaS0xXS50ZCA9IGxheWVyRGF0YS50dDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhbmltQXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgbGFzdEZyYW1lID0gLTE7XHJcbiAgICAgICAgICAgIGlmKGxheWVyRGF0YS5oYXNNYXNrKXtcclxuICAgICAgICAgICAgICAgIHZhciBtYXNrUHJvcHMgPSBsYXllckRhdGEubWFza3NQcm9wZXJ0aWVzO1xyXG4gICAgICAgICAgICAgICAgakxlbiA9IG1hc2tQcm9wcy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihtYXNrUHJvcHNbal0ucHQuay5pKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udmVydFBhdGhzVG9BYnNvbHV0ZVZhbHVlcyhtYXNrUHJvcHNbal0ucHQuayk7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtMZW4gPSBtYXNrUHJvcHNbal0ucHQuay5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcihrPTA7azxrTGVuO2srPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobWFza1Byb3BzW2pdLnB0Lmtba10ucyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVydFBhdGhzVG9BYnNvbHV0ZVZhbHVlcyhtYXNrUHJvcHNbal0ucHQua1trXS5zWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKG1hc2tQcm9wc1tqXS5wdC5rW2tdLmUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnRQYXRoc1RvQWJzb2x1dGVWYWx1ZXMobWFza1Byb3BzW2pdLnB0Lmtba10uZVswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYobGF5ZXJEYXRhLnR5PT09MCl7XHJcbiAgICAgICAgICAgICAgICBsYXllckRhdGEubGF5ZXJzID0gZmluZENvbXBMYXllcnMobGF5ZXJEYXRhLnJlZklkLCBjb21wcyk7XHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZUxheWVycyhsYXllckRhdGEubGF5ZXJzLGNvbXBzLCBmb250TWFuYWdlcik7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGxheWVyRGF0YS50eSA9PT0gNCl7XHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZVNoYXBlcyhsYXllckRhdGEuc2hhcGVzKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYobGF5ZXJEYXRhLnR5ID09IDUpe1xyXG4gICAgICAgICAgICAgICAgY29tcGxldGVUZXh0KGxheWVyRGF0YSwgZm9udE1hbmFnZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGZpbmRDb21wTGF5ZXJzKGlkLGNvbXBzKXtcclxuICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IGNvbXBzLmxlbmd0aDtcclxuICAgICAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgICAgIGlmKGNvbXBzW2ldLmlkID09PSBpZCl7XHJcbiAgICAgICAgICAgICAgICBpZighY29tcHNbaV0ubGF5ZXJzLl9fdXNlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBzW2ldLmxheWVycy5fX3VzZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21wc1tpXS5sYXllcnM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjb21wc1tpXS5sYXllcnMpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlU2hhcGVzKGFycil7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IGFyci5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGosIGpMZW47XHJcbiAgICAgICAgdmFyIGhhc1BhdGhzID0gZmFsc2U7XHJcbiAgICAgICAgZm9yKGk9bGVuLTE7aT49MDtpLT0xKXtcclxuICAgICAgICAgICAgaWYoYXJyW2ldLnR5ID09ICdzaCcpe1xyXG4gICAgICAgICAgICAgICAgaWYoYXJyW2ldLmtzLmsuaSl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udmVydFBhdGhzVG9BYnNvbHV0ZVZhbHVlcyhhcnJbaV0ua3Muayk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBqTGVuID0gYXJyW2ldLmtzLmsubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhcnJbaV0ua3Mua1tqXS5zKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnRQYXRoc1RvQWJzb2x1dGVWYWx1ZXMoYXJyW2ldLmtzLmtbal0uc1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoYXJyW2ldLmtzLmtbal0uZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJ0UGF0aHNUb0Fic29sdXRlVmFsdWVzKGFycltpXS5rcy5rW2pdLmVbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaGFzUGF0aHMgPSB0cnVlO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ2dyJyl7XHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZVNoYXBlcyhhcnJbaV0uaXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qaWYoaGFzUGF0aHMpe1xyXG4gICAgICAgICAgICAvL214OiBkaXN0YW5jZVxyXG4gICAgICAgICAgICAvL3NzOiBzZW5zaXRpdml0eVxyXG4gICAgICAgICAgICAvL2RjOiBkZWNheVxyXG4gICAgICAgICAgICBhcnIuc3BsaWNlKGFyci5sZW5ndGgtMSwwLHtcclxuICAgICAgICAgICAgICAgIFwidHlcIjogXCJtc1wiLFxyXG4gICAgICAgICAgICAgICAgXCJteFwiOjIwLFxyXG4gICAgICAgICAgICAgICAgXCJzc1wiOjEwLFxyXG4gICAgICAgICAgICAgICAgIFwiZGNcIjowLjAwMSxcclxuICAgICAgICAgICAgICAgIFwibWF4RGlzdFwiOjIwMFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9Ki9cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjb252ZXJ0UGF0aHNUb0Fic29sdXRlVmFsdWVzKHBhdGgpe1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSBwYXRoLmkubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHBhdGguaVtpXVswXSArPSBwYXRoLnZbaV1bMF07XHJcbiAgICAgICAgICAgIHBhdGguaVtpXVsxXSArPSBwYXRoLnZbaV1bMV07XHJcbiAgICAgICAgICAgIHBhdGgub1tpXVswXSArPSBwYXRoLnZbaV1bMF07XHJcbiAgICAgICAgICAgIHBhdGgub1tpXVsxXSArPSBwYXRoLnZbaV1bMV07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNoZWNrVmVyc2lvbihtaW5pbXVtLGFuaW1WZXJzaW9uU3RyaW5nKXtcclxuICAgICAgICB2YXIgYW5pbVZlcnNpb24gPSBhbmltVmVyc2lvblN0cmluZyA/IGFuaW1WZXJzaW9uU3RyaW5nLnNwbGl0KCcuJykgOiBbMTAwLDEwMCwxMDBdO1xyXG4gICAgICAgIGlmKG1pbmltdW1bMF0+YW5pbVZlcnNpb25bMF0pe1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGVsc2UgaWYoYW5pbVZlcnNpb25bMF0gPiBtaW5pbXVtWzBdKXtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihtaW5pbXVtWzFdPmFuaW1WZXJzaW9uWzFdKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmKGFuaW1WZXJzaW9uWzFdID4gbWluaW11bVsxXSl7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYobWluaW11bVsyXT5hbmltVmVyc2lvblsyXSl7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSBpZihhbmltVmVyc2lvblsyXSA+IG1pbmltdW1bMl0pe1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBjaGVja1RleHQgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgbWluaW11bVZlcnNpb24gPSBbNCw0LDE0XTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlVGV4dExheWVyKHRleHRMYXllcil7XHJcbiAgICAgICAgICAgIHZhciBkb2N1bWVudERhdGEgPSB0ZXh0TGF5ZXIudC5kO1xyXG4gICAgICAgICAgICB0ZXh0TGF5ZXIudC5kID0ge1xyXG4gICAgICAgICAgICAgICAgazogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgczpkb2N1bWVudERhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHQ6MFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaXRlcmF0ZUxheWVycyhsYXllcnMpe1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gbGF5ZXJzLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGxheWVyc1tpXS50eSA9PT0gNSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVGV4dExheWVyKGxheWVyc1tpXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoYW5pbWF0aW9uRGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGNoZWNrVmVyc2lvbihtaW5pbXVtVmVyc2lvbixhbmltYXRpb25EYXRhLnYpKXtcclxuICAgICAgICAgICAgICAgIGl0ZXJhdGVMYXllcnMoYW5pbWF0aW9uRGF0YS5sYXllcnMpO1xyXG4gICAgICAgICAgICAgICAgaWYoYW5pbWF0aW9uRGF0YS5hc3NldHMpe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpLCBsZW4gPSBhbmltYXRpb25EYXRhLmFzc2V0cy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoYW5pbWF0aW9uRGF0YS5hc3NldHNbaV0ubGF5ZXJzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZXJhdGVMYXllcnMoYW5pbWF0aW9uRGF0YS5hc3NldHNbaV0ubGF5ZXJzKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KCkpXHJcblxyXG4gICAgdmFyIGNoZWNrQ2hhcnMgPSAoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIG1pbmltdW1WZXJzaW9uID0gWzQsNyw5OV07XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhbmltYXRpb25EYXRhKXtcclxuICAgICAgICAgICAgaWYoYW5pbWF0aW9uRGF0YS5jaGFycyAmJiAhY2hlY2tWZXJzaW9uKG1pbmltdW1WZXJzaW9uLGFuaW1hdGlvbkRhdGEudikpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGksIGxlbiA9IGFuaW1hdGlvbkRhdGEuY2hhcnMubGVuZ3RoLCBqLCBqTGVuLCBrLCBrTGVuO1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhdGhEYXRhLCBwYXRocztcclxuICAgICAgICAgICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoYW5pbWF0aW9uRGF0YS5jaGFyc1tpXS5kYXRhICYmIGFuaW1hdGlvbkRhdGEuY2hhcnNbaV0uZGF0YS5zaGFwZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aHMgPSBhbmltYXRpb25EYXRhLmNoYXJzW2ldLmRhdGEuc2hhcGVzWzBdLml0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqTGVuID0gcGF0aHMubGVuZ3RoO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKGogPSAwOyBqIDwgakxlbjsgaiArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoRGF0YSA9IHBhdGhzW2pdLmtzLms7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZighcGF0aERhdGEuX19jb252ZXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJ0UGF0aHNUb0Fic29sdXRlVmFsdWVzKHBhdGhzW2pdLmtzLmspO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhEYXRhLl9fY29udmVydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9KCkpXHJcblxyXG4gICAgdmFyIGNoZWNrQ29sb3JzID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIG1pbmltdW1WZXJzaW9uID0gWzQsMSw5XTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaXRlcmF0ZVNoYXBlcyhzaGFwZXMpe1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gc2hhcGVzLmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIGosIGpMZW47XHJcbiAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZXNbaV0udHkgPT09ICdncicpe1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZXJhdGVTaGFwZXMoc2hhcGVzW2ldLml0KTtcclxuICAgICAgICAgICAgICAgIH1lbHNlIGlmKHNoYXBlc1tpXS50eSA9PT0gJ2ZsJyB8fCBzaGFwZXNbaV0udHkgPT09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHNoYXBlc1tpXS5jLmsgJiYgc2hhcGVzW2ldLmMua1swXS5pKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgakxlbiA9IHNoYXBlc1tpXS5jLmsubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHNoYXBlc1tpXS5jLmtbal0ucyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcGVzW2ldLmMua1tqXS5zWzBdIC89IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFwZXNbaV0uYy5rW2pdLnNbMV0gLz0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlc1tpXS5jLmtbal0uc1syXSAvPSAyNTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcGVzW2ldLmMua1tqXS5zWzNdIC89IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHNoYXBlc1tpXS5jLmtbal0uZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcGVzW2ldLmMua1tqXS5lWzBdIC89IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFwZXNbaV0uYy5rW2pdLmVbMV0gLz0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlc1tpXS5jLmtbal0uZVsyXSAvPSAyNTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hhcGVzW2ldLmMua1tqXS5lWzNdIC89IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlc1tpXS5jLmtbMF0gLz0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaGFwZXNbaV0uYy5rWzFdIC89IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2hhcGVzW2ldLmMua1syXSAvPSAyNTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlc1tpXS5jLmtbM10gLz0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaXRlcmF0ZUxheWVycyhsYXllcnMpe1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gbGF5ZXJzLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGxheWVyc1tpXS50eSA9PT0gNCl7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlcmF0ZVNoYXBlcyhsYXllcnNbaV0uc2hhcGVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhbmltYXRpb25EYXRhKXtcclxuICAgICAgICAgICAgaWYoY2hlY2tWZXJzaW9uKG1pbmltdW1WZXJzaW9uLGFuaW1hdGlvbkRhdGEudikpe1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0ZUxheWVycyhhbmltYXRpb25EYXRhLmxheWVycyk7XHJcbiAgICAgICAgICAgICAgICBpZihhbmltYXRpb25EYXRhLmFzc2V0cyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGksIGxlbiA9IGFuaW1hdGlvbkRhdGEuYXNzZXRzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhbmltYXRpb25EYXRhLmFzc2V0c1tpXS5sYXllcnMpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlcmF0ZUxheWVycyhhbmltYXRpb25EYXRhLmFzc2V0c1tpXS5sYXllcnMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIGNoZWNrU2hhcGVzID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdmFyIG1pbmltdW1WZXJzaW9uID0gWzQsNCwxOF07XHJcblxyXG5cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gY29tcGxldGVTaGFwZXMoYXJyKXtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IGFyci5sZW5ndGg7XHJcbiAgICAgICAgICAgIHZhciBqLCBqTGVuO1xyXG4gICAgICAgICAgICB2YXIgaGFzUGF0aHMgPSBmYWxzZTtcclxuICAgICAgICAgICAgZm9yKGk9bGVuLTE7aT49MDtpLT0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGFycltpXS50eSA9PSAnc2gnKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihhcnJbaV0ua3Muay5pKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXJyW2ldLmtzLmsuYyA9IGFycltpXS5jbG9zZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGpMZW4gPSBhcnJbaV0ua3Muay5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoYXJyW2ldLmtzLmtbal0ucyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyW2ldLmtzLmtbal0uc1swXS5jID0gYXJyW2ldLmNsb3NlZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFycltpXS5rcy5rW2pdLmUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFycltpXS5rcy5rW2pdLmVbMF0uYyA9IGFycltpXS5jbG9zZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaGFzUGF0aHMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICdncicpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlU2hhcGVzKGFycltpXS5pdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGl0ZXJhdGVMYXllcnMobGF5ZXJzKXtcclxuICAgICAgICAgICAgdmFyIGxheWVyRGF0YTtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IGxheWVycy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHZhciBqLCBqTGVuLCBrLCBrTGVuO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgbGF5ZXJEYXRhID0gbGF5ZXJzW2ldO1xyXG4gICAgICAgICAgICAgICAgaWYobGF5ZXJEYXRhLmhhc01hc2spe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXNrUHJvcHMgPSBsYXllckRhdGEubWFza3NQcm9wZXJ0aWVzO1xyXG4gICAgICAgICAgICAgICAgICAgIGpMZW4gPSBtYXNrUHJvcHMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihtYXNrUHJvcHNbal0ucHQuay5pKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2tQcm9wc1tqXS5wdC5rLmMgPSBtYXNrUHJvcHNbal0uY2w7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga0xlbiA9IG1hc2tQcm9wc1tqXS5wdC5rLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcihrPTA7azxrTGVuO2srPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKG1hc2tQcm9wc1tqXS5wdC5rW2tdLnMpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrUHJvcHNbal0ucHQua1trXS5zWzBdLmMgPSBtYXNrUHJvcHNbal0uY2w7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKG1hc2tQcm9wc1tqXS5wdC5rW2tdLmUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrUHJvcHNbal0ucHQua1trXS5lWzBdLmMgPSBtYXNrUHJvcHNbal0uY2w7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYobGF5ZXJEYXRhLnR5ID09PSA0KXtcclxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZVNoYXBlcyhsYXllckRhdGEuc2hhcGVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhbmltYXRpb25EYXRhKXtcclxuICAgICAgICAgICAgaWYoY2hlY2tWZXJzaW9uKG1pbmltdW1WZXJzaW9uLGFuaW1hdGlvbkRhdGEudikpe1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0ZUxheWVycyhhbmltYXRpb25EYXRhLmxheWVycyk7XHJcbiAgICAgICAgICAgICAgICBpZihhbmltYXRpb25EYXRhLmFzc2V0cyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGksIGxlbiA9IGFuaW1hdGlvbkRhdGEuYXNzZXRzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhbmltYXRpb25EYXRhLmFzc2V0c1tpXS5sYXllcnMpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlcmF0ZUxheWVycyhhbmltYXRpb25EYXRhLmFzc2V0c1tpXS5sYXllcnMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgLypmdW5jdGlvbiBibGl0UGF0aHMocGF0aCl7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHBhdGguaS5sZW5ndGg7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcGF0aC5pW2ldWzBdIC89IGJsaXR0ZXI7XHJcbiAgICAgICAgICAgIHBhdGguaVtpXVsxXSAvPSBibGl0dGVyO1xyXG4gICAgICAgICAgICBwYXRoLm9baV1bMF0gLz0gYmxpdHRlcjtcclxuICAgICAgICAgICAgcGF0aC5vW2ldWzFdIC89IGJsaXR0ZXI7XHJcbiAgICAgICAgICAgIHBhdGgudltpXVswXSAvPSBibGl0dGVyO1xyXG4gICAgICAgICAgICBwYXRoLnZbaV1bMV0gLz0gYmxpdHRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYmxpdFNoYXBlcyhhcnIpe1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSBhcnIubGVuZ3RoO1xyXG4gICAgICAgIHZhciBqLCBqTGVuO1xyXG4gICAgICAgIHZhciBoYXNQYXRocyA9IGZhbHNlO1xyXG4gICAgICAgIGZvcihpPWxlbi0xO2k+PTA7aS09MSl7XHJcbiAgICAgICAgICAgIGlmKGFycltpXS50eSA9PSAnc2gnKXtcclxuICAgICAgICAgICAgICAgIGlmKGFycltpXS5rcy5rLmkpe1xyXG4gICAgICAgICAgICAgICAgICAgIGJsaXRQYXRocyhhcnJbaV0ua3Muayk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBqTGVuID0gYXJyW2ldLmtzLmsubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhcnJbaV0ua3Mua1tqXS5zKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsaXRQYXRocyhhcnJbaV0ua3Mua1tqXS5zWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhcnJbaV0ua3Mua1tqXS5lKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsaXRQYXRocyhhcnJbaV0ua3Mua1tqXS5lWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGhhc1BhdGhzID0gdHJ1ZTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICdncicpe1xyXG4gICAgICAgICAgICAgICAgYmxpdFNoYXBlcyhhcnJbaV0uaXQpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ3JjJyl7XHJcbiAgICAgICAgICAgICAgICBibGl0UHJvcGVydHkoYXJyW2ldLnApO1xyXG4gICAgICAgICAgICAgICAgYmxpdFByb3BlcnR5KGFycltpXS5zKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgYmxpdFByb3BlcnR5KGFycltpXS53KTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICd0cicpe1xyXG4gICAgICAgICAgICAgICAgYmxpdFByb3BlcnR5KGFycltpXS5wKTtcclxuICAgICAgICAgICAgICAgIGJsaXRQcm9wZXJ0eShhcnJbaV0uc2spO1xyXG4gICAgICAgICAgICAgICAgYmxpdFByb3BlcnR5KGFycltpXS5hKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICdlbCcpe1xyXG4gICAgICAgICAgICAgICAgYmxpdFByb3BlcnR5KGFycltpXS5wKTtcclxuICAgICAgICAgICAgICAgIGJsaXRQcm9wZXJ0eShhcnJbaV0ucyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGFycltpXS50eSA9PSAncmQnKXtcclxuICAgICAgICAgICAgICAgIGJsaXRQcm9wZXJ0eShhcnJbaV0ucik7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG5cclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coYXJyW2ldLnR5ICk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYmxpdFRleHQoZGF0YSwgZm9udE1hbmFnZXIpe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBibGl0VmFsdWUodmFsKXtcclxuICAgICAgICBpZih0eXBlb2YodmFsKSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgICAgICB2YWwgLz0gYmxpdHRlcjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgaSA9IHZhbC5sZW5ndGgtMTtcclxuICAgICAgICAgICAgd2hpbGUoaT49MCl7XHJcbiAgICAgICAgICAgICAgICB2YWxbaV0gLz0gYmxpdHRlcjtcclxuICAgICAgICAgICAgICAgIGktPTE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHZhbDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBibGl0UHJvcGVydHkoZGF0YSl7XHJcbiAgICAgICAgaWYoIWRhdGEuay5sZW5ndGgpe1xyXG4gICAgICAgICAgICBkYXRhLmsgPSBibGl0VmFsdWUoZGF0YS5rKTtcclxuICAgICAgICB9ZWxzZSBpZih0eXBlb2YoZGF0YS5rWzBdKSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgICAgICBkYXRhLmsgPSBibGl0VmFsdWUoZGF0YS5rKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gZGF0YS5rLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGRhdGEua1tpXS5zKXtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdwcmUgUzogJywgZGF0YS5rW2ldLnMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEua1tpXS5zID0gYmxpdFZhbHVlKGRhdGEua1tpXS5zKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdwb3N0IFM6ICcsIGRhdGEua1tpXS5zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKGRhdGEua1tpXS5lKXtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdwcmUgRTogJywgZGF0YS5rW2ldLmUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEua1tpXS5lID0gYmxpdFZhbHVlKGRhdGEua1tpXS5lKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdwb3N0IEU6ICcsIGRhdGEua1tpXS5lKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBibGl0TGF5ZXJzKGxheWVycyxjb21wcywgZm9udE1hbmFnZXIpe1xyXG4gICAgICAgIHZhciBsYXllckRhdGE7XHJcbiAgICAgICAgdmFyIGFuaW1BcnJheSwgbGFzdEZyYW1lO1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSBsYXllcnMubGVuZ3RoO1xyXG4gICAgICAgIHZhciBqLCBqTGVuLCBrLCBrTGVuO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIGxheWVyRGF0YSA9IGxheWVyc1tpXTtcclxuICAgICAgICAgICAgaWYoISgna3MnIGluIGxheWVyRGF0YSkpe1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYmxpdFByb3BlcnR5KGxheWVyRGF0YS5rcy5hKTtcclxuICAgICAgICAgICAgYmxpdFByb3BlcnR5KGxheWVyRGF0YS5rcy5wKTtcclxuICAgICAgICAgICAgbGF5ZXJEYXRhLmNvbXBsZXRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKGxheWVyRGF0YS50dCl7XHJcbiAgICAgICAgICAgICAgICBsYXllcnNbaS0xXS50ZCA9IGxheWVyRGF0YS50dDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhbmltQXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgbGFzdEZyYW1lID0gLTE7XHJcbiAgICAgICAgICAgIGlmKGxheWVyRGF0YS5oYXNNYXNrKXtcclxuICAgICAgICAgICAgICAgIHZhciBtYXNrUHJvcHMgPSBsYXllckRhdGEubWFza3NQcm9wZXJ0aWVzO1xyXG4gICAgICAgICAgICAgICAgakxlbiA9IG1hc2tQcm9wcy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihtYXNrUHJvcHNbal0ucHQuay5pKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmxpdFBhdGhzKG1hc2tQcm9wc1tqXS5wdC5rKTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAga0xlbiA9IG1hc2tQcm9wc1tqXS5wdC5rLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKGs9MDtrPGtMZW47ays9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihtYXNrUHJvcHNbal0ucHQua1trXS5zKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibGl0UGF0aHMobWFza1Byb3BzW2pdLnB0Lmtba10uc1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihtYXNrUHJvcHNbal0ucHQua1trXS5lKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibGl0UGF0aHMobWFza1Byb3BzW2pdLnB0Lmtba10uZVswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYobGF5ZXJEYXRhLnR5PT09MCl7XHJcbiAgICAgICAgICAgICAgICBsYXllckRhdGEudyA9IE1hdGgucm91bmQobGF5ZXJEYXRhLncvYmxpdHRlcik7XHJcbiAgICAgICAgICAgICAgICBsYXllckRhdGEuaCA9IE1hdGgucm91bmQobGF5ZXJEYXRhLmgvYmxpdHRlcik7XHJcbiAgICAgICAgICAgICAgICBibGl0TGF5ZXJzKGxheWVyRGF0YS5sYXllcnMsY29tcHMsIGZvbnRNYW5hZ2VyKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYobGF5ZXJEYXRhLnR5ID09PSA0KXtcclxuICAgICAgICAgICAgICAgIGJsaXRTaGFwZXMobGF5ZXJEYXRhLnNoYXBlcyk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGxheWVyRGF0YS50eSA9PSA1KXtcclxuICAgICAgICAgICAgICAgIGJsaXRUZXh0KGxheWVyRGF0YSwgZm9udE1hbmFnZXIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihsYXllckRhdGEudHkgPT0gMSl7XHJcbiAgICAgICAgICAgICAgICBsYXllckRhdGEuc2ggLz0gYmxpdHRlcjtcclxuICAgICAgICAgICAgICAgIGxheWVyRGF0YS5zdyAvPSBibGl0dGVyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGJsaXRBbmltYXRpb24oYW5pbWF0aW9uRGF0YSxjb21wcywgZm9udE1hbmFnZXIpe1xyXG4gICAgICAgIGJsaXRMYXllcnMoYW5pbWF0aW9uRGF0YS5sYXllcnMsY29tcHMsIGZvbnRNYW5hZ2VyKTtcclxuICAgIH0qL1xyXG5cclxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlRGF0YShhbmltYXRpb25EYXRhLCBmb250TWFuYWdlcil7XHJcbiAgICAgICAgaWYoYW5pbWF0aW9uRGF0YS5fX2NvbXBsZXRlKXtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjaGVja0NvbG9ycyhhbmltYXRpb25EYXRhKTtcclxuICAgICAgICBjaGVja1RleHQoYW5pbWF0aW9uRGF0YSk7XHJcbiAgICAgICAgY2hlY2tDaGFycyhhbmltYXRpb25EYXRhKTtcclxuICAgICAgICBjaGVja1NoYXBlcyhhbmltYXRpb25EYXRhKTtcclxuICAgICAgICBjb21wbGV0ZUxheWVycyhhbmltYXRpb25EYXRhLmxheWVycywgYW5pbWF0aW9uRGF0YS5hc3NldHMsIGZvbnRNYW5hZ2VyKTtcclxuICAgICAgICBhbmltYXRpb25EYXRhLl9fY29tcGxldGUgPSB0cnVlO1xyXG4gICAgICAgIC8vYmxpdEFuaW1hdGlvbihhbmltYXRpb25EYXRhLCBhbmltYXRpb25EYXRhLmFzc2V0cywgZm9udE1hbmFnZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlVGV4dChkYXRhLCBmb250TWFuYWdlcil7XHJcbiAgICAgICAgaWYoZGF0YS50LmEubGVuZ3RoID09PSAwICYmICEoJ20nIGluIGRhdGEudC5wKSl7XHJcbiAgICAgICAgICAgIGRhdGEuc2luZ2xlU2hhcGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB2YXIgbW9kdWxlT2IgPSB7fTtcclxuICAgIG1vZHVsZU9iLmNvbXBsZXRlRGF0YSA9IGNvbXBsZXRlRGF0YTtcclxuXHJcbiAgICByZXR1cm4gbW9kdWxlT2I7XHJcbn1cclxuXHJcbnZhciBkYXRhTWFuYWdlciA9IGRhdGFGdW5jdGlvbk1hbmFnZXIoKTtcbnZhciBGb250TWFuYWdlciA9IChmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBtYXhXYWl0aW5nVGltZSA9IDUwMDA7XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0VXBOb2RlKGZvbnQsIGZhbWlseSl7XHJcbiAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgcGFyZW50Tm9kZS5zdHlsZS5mb250RmFtaWx5ICAgID0gZmFtaWx5O1xyXG4gICAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgIC8vIENoYXJhY3RlcnMgdGhhdCB2YXJ5IHNpZ25pZmljYW50bHkgYW1vbmcgZGlmZmVyZW50IGZvbnRzXHJcbiAgICAgICAgbm9kZS5pbm5lckhUTUwgPSAnZ2lJdFQxV1F5QCEtLyMnO1xyXG4gICAgICAgIC8vIFZpc2libGUgLSBzbyB3ZSBjYW4gbWVhc3VyZSBpdCAtIGJ1dCBub3Qgb24gdGhlIHNjcmVlblxyXG4gICAgICAgIHBhcmVudE5vZGUuc3R5bGUucG9zaXRpb24gICAgICA9ICdhYnNvbHV0ZSc7XHJcbiAgICAgICAgcGFyZW50Tm9kZS5zdHlsZS5sZWZ0ICAgICAgICAgID0gJy0xMDAwMHB4JztcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLnRvcCAgICAgICAgICAgPSAnLTEwMDAwcHgnO1xyXG4gICAgICAgIC8vIExhcmdlIGZvbnQgc2l6ZSBtYWtlcyBldmVuIHN1YnRsZSBjaGFuZ2VzIG9idmlvdXNcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLmZvbnRTaXplICAgICAgPSAnMzAwcHgnO1xyXG4gICAgICAgIC8vIFJlc2V0IGFueSBmb250IHByb3BlcnRpZXNcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLmZvbnRWYXJpYW50ICAgPSAnbm9ybWFsJztcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLmZvbnRTdHlsZSAgICAgPSAnbm9ybWFsJztcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLmZvbnRXZWlnaHQgICAgPSAnbm9ybWFsJztcclxuICAgICAgICBwYXJlbnROb2RlLnN0eWxlLmxldHRlclNwYWNpbmcgPSAnMCc7XHJcbiAgICAgICAgcGFyZW50Tm9kZS5hcHBlbmRDaGlsZChub2RlKTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBhcmVudE5vZGUpO1xyXG5cclxuICAgICAgICAvLyBSZW1lbWJlciB3aWR0aCB3aXRoIG5vIGFwcGxpZWQgd2ViIGZvbnRcclxuICAgICAgICB2YXIgd2lkdGggPSBub2RlLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIG5vZGUuc3R5bGUuZm9udEZhbWlseSA9IGZvbnQgKyAnLCAnK2ZhbWlseTtcclxuICAgICAgICByZXR1cm4ge25vZGU6bm9kZSwgdzp3aWR0aCwgcGFyZW50OnBhcmVudE5vZGV9O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNoZWNrTG9hZGVkRm9udHMoKSB7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuZm9udHMubGVuZ3RoO1xyXG4gICAgICAgIHZhciBub2RlLCB3O1xyXG4gICAgICAgIHZhciBsb2FkZWRDb3VudCA9IGxlbjtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuOyBpKz0gMSl7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZm9udHNbaV0ubG9hZGVkKXtcclxuICAgICAgICAgICAgICAgIGxvYWRlZENvdW50IC09IDE7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLmZvbnRzW2ldLmZPcmlnaW4gPT09ICd0JyB8fCB0aGlzLmZvbnRzW2ldLm9yaWdpbiA9PT0gMil7XHJcbiAgICAgICAgICAgICAgICBpZih3aW5kb3cuVHlwZWtpdCAmJiB3aW5kb3cuVHlwZWtpdC5sb2FkICYmIHRoaXMudHlwZWtpdExvYWRlZCA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50eXBla2l0TG9hZGVkID0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0cnl7d2luZG93LlR5cGVraXQubG9hZCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzeW5jOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50eXBla2l0TG9hZGVkID0gMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfS5iaW5kKHRoaXMpXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7fWNhdGNoKGUpe31cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHRoaXMudHlwZWtpdExvYWRlZCA9PT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZm9udHNbaV0ubG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmKHRoaXMuZm9udHNbaV0uZk9yaWdpbiA9PT0gJ24nIHx8IHRoaXMuZm9udHNbaV0ub3JpZ2luID09PSAwKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZm9udHNbaV0ubG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgbm9kZSA9IHRoaXMuZm9udHNbaV0ubW9ub0Nhc2Uubm9kZTtcclxuICAgICAgICAgICAgICAgIHcgPSB0aGlzLmZvbnRzW2ldLm1vbm9DYXNlLnc7XHJcbiAgICAgICAgICAgICAgICBpZihub2RlLm9mZnNldFdpZHRoICE9PSB3KXtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkZWRDb3VudCAtPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZm9udHNbaV0ubG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSB0aGlzLmZvbnRzW2ldLnNhbnNDYXNlLm5vZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgdyA9IHRoaXMuZm9udHNbaV0uc2Fuc0Nhc2UudztcclxuICAgICAgICAgICAgICAgICAgICBpZihub2RlLm9mZnNldFdpZHRoICE9PSB3KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGVkQ291bnQgLT0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mb250c1tpXS5sb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuZm9udHNbaV0ubG9hZGVkKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZvbnRzW2ldLnNhbnNDYXNlLnBhcmVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZm9udHNbaV0uc2Fuc0Nhc2UucGFyZW50KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZvbnRzW2ldLm1vbm9DYXNlLnBhcmVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZm9udHNbaV0ubW9ub0Nhc2UucGFyZW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYobG9hZGVkQ291bnQgIT09IDAgJiYgRGF0ZS5ub3coKSAtIHRoaXMuaW5pdFRpbWUgPCBtYXhXYWl0aW5nVGltZSl7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoY2hlY2tMb2FkZWRGb250cy5iaW5kKHRoaXMpLDIwKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe3RoaXMubG9hZGVkID0gdHJ1ZTt9LmJpbmQodGhpcyksMCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gY3JlYXRlSGVscGVyKGRlZiwgZm9udERhdGEpe1xyXG4gICAgICAgIHZhciB0SGVscGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCd0ZXh0Jyk7XHJcbiAgICAgICAgdEhlbHBlci5zdHlsZS5mb250U2l6ZSA9ICcxMDBweCc7XHJcbiAgICAgICAgdEhlbHBlci5zdHlsZS5mb250RmFtaWx5ID0gZm9udERhdGEuZkZhbWlseTtcclxuICAgICAgICB0SGVscGVyLnRleHRDb250ZW50ID0gJzEnO1xyXG4gICAgICAgIGlmKGZvbnREYXRhLmZDbGFzcyl7XHJcbiAgICAgICAgICAgIHRIZWxwZXIuc3R5bGUuZm9udEZhbWlseSA9ICdpbmhlcml0JztcclxuICAgICAgICAgICAgdEhlbHBlci5jbGFzc05hbWUgPSBmb250RGF0YS5mQ2xhc3M7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdEhlbHBlci5zdHlsZS5mb250RmFtaWx5ID0gZm9udERhdGEuZkZhbWlseTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZGVmLmFwcGVuZENoaWxkKHRIZWxwZXIpO1xyXG4gICAgICAgIHZhciB0Q2FudmFzSGVscGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJykuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgICAgICB0Q2FudmFzSGVscGVyLmZvbnQgPSAnMTAwcHggJysgZm9udERhdGEuZkZhbWlseTtcclxuICAgICAgICByZXR1cm4gdENhbnZhc0hlbHBlcjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRGb250cyhmb250RGF0YSwgZGVmcyl7XHJcbiAgICAgICAgaWYoIWZvbnREYXRhKXtcclxuICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuY2hhcnMpe1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuZm9udHMgPSBmb250RGF0YS5saXN0O1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgZm9udEFyciA9IGZvbnREYXRhLmxpc3Q7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IGZvbnRBcnIubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7IGk8bGVuOyBpKz0gMSl7XHJcbiAgICAgICAgICAgIGZvbnRBcnJbaV0ubG9hZGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZvbnRBcnJbaV0ubW9ub0Nhc2UgPSBzZXRVcE5vZGUoZm9udEFycltpXS5mRmFtaWx5LCdtb25vc3BhY2UnKTtcclxuICAgICAgICAgICAgZm9udEFycltpXS5zYW5zQ2FzZSA9IHNldFVwTm9kZShmb250QXJyW2ldLmZGYW1pbHksJ3NhbnMtc2VyaWYnKTtcclxuICAgICAgICAgICAgaWYoIWZvbnRBcnJbaV0uZlBhdGgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnRBcnJbaV0ubG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoZm9udEFycltpXS5mT3JpZ2luID09PSAncCcgfHwgZm9udEFycltpXS5vcmlnaW4gPT09IDMpe1xyXG4gICAgICAgICAgICAgICAgdmFyIHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG4gICAgICAgICAgICAgICAgcy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xyXG4gICAgICAgICAgICAgICAgcy5pbm5lckhUTUwgPSBcIkBmb250LWZhY2Uge1wiICsgXCJmb250LWZhbWlseTogXCIrZm9udEFycltpXS5mRmFtaWx5K1wiOyBmb250LXN0eWxlOiBub3JtYWw7IHNyYzogdXJsKCdcIitmb250QXJyW2ldLmZQYXRoK1wiJyk7fVwiO1xyXG4gICAgICAgICAgICAgICAgZGVmcy5hcHBlbmRDaGlsZChzKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKGZvbnRBcnJbaV0uZk9yaWdpbiA9PT0gJ2cnIHx8IGZvbnRBcnJbaV0ub3JpZ2luID09PSAxKXtcclxuICAgICAgICAgICAgICAgIC8vPGxpbmsgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU1vbnRzZXJyYXQnIHJlbD0nc3R5bGVzaGVldCcgdHlwZT0ndGV4dC9jc3MnPlxyXG4gICAgICAgICAgICAgICAgdmFyIGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7XHJcbiAgICAgICAgICAgICAgICBsLnR5cGUgPSBcInRleHQvY3NzXCI7XHJcbiAgICAgICAgICAgICAgICBsLnJlbCA9IFwic3R5bGVzaGVldFwiO1xyXG4gICAgICAgICAgICAgICAgbC5ocmVmID0gZm9udEFycltpXS5mUGF0aDtcclxuICAgICAgICAgICAgICAgIGRlZnMuYXBwZW5kQ2hpbGQobCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihmb250QXJyW2ldLmZPcmlnaW4gPT09ICd0JyB8fCBmb250QXJyW2ldLm9yaWdpbiA9PT0gMil7XHJcbiAgICAgICAgICAgICAgICAvLzxsaW5rIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Nb250c2VycmF0JyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz5cclxuICAgICAgICAgICAgICAgIHZhciBzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4gICAgICAgICAgICAgICAgc2Muc2V0QXR0cmlidXRlKCdzcmMnLGZvbnRBcnJbaV0uZlBhdGgpO1xyXG4gICAgICAgICAgICAgICAgZGVmcy5hcHBlbmRDaGlsZChzYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZm9udEFycltpXS5oZWxwZXIgPSBjcmVhdGVIZWxwZXIoZGVmcyxmb250QXJyW2ldKTtcclxuICAgICAgICAgICAgdGhpcy5mb250cy5wdXNoKGZvbnRBcnJbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjaGVja0xvYWRlZEZvbnRzLmJpbmQodGhpcykoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRDaGFycyhjaGFycyl7XHJcbiAgICAgICAgaWYoIWNoYXJzKXtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZighdGhpcy5jaGFycyl7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnMgPSBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IGNoYXJzLmxlbmd0aDtcclxuICAgICAgICB2YXIgaiwgakxlbiA9IHRoaXMuY2hhcnMubGVuZ3RoLCBmb3VuZDtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBqID0gMDtcclxuICAgICAgICAgICAgZm91bmQgPSBmYWxzZTtcclxuICAgICAgICAgICAgd2hpbGUoajxqTGVuKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuY2hhcnNbal0uc3R5bGUgPT09IGNoYXJzW2ldLnN0eWxlICYmIHRoaXMuY2hhcnNbal0uZkZhbWlseSA9PT0gY2hhcnNbaV0uZkZhbWlseSAmJiB0aGlzLmNoYXJzW2pdLmNoID09PSBjaGFyc1tpXS5jaCl7XHJcbiAgICAgICAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaiArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKCFmb3VuZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNoYXJzLnB1c2goY2hhcnNbaV0pO1xyXG4gICAgICAgICAgICAgICAgakxlbiArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldENoYXJEYXRhKGNoYXIsIHN0eWxlLCBmb250KXtcclxuICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IHRoaXMuY2hhcnMubGVuZ3RoO1xyXG4gICAgICAgIHdoaWxlKCBpIDwgbGVuKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuY2hhcnNbaV0uY2ggPT09IGNoYXIgJiYgdGhpcy5jaGFyc1tpXS5zdHlsZSA9PT0gc3R5bGUgJiYgdGhpcy5jaGFyc1tpXS5mRmFtaWx5ID09PSBmb250KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoYXJzW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGkrPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtZWFzdXJlVGV4dChjaGFyLCBmb250TmFtZSwgc2l6ZSl7XHJcbiAgICAgICAgdmFyIGZvbnREYXRhID0gdGhpcy5nZXRGb250QnlOYW1lKGZvbnROYW1lKTtcclxuICAgICAgICB2YXIgdEhlbHBlciA9IGZvbnREYXRhLmhlbHBlcjtcclxuICAgICAgICAvL3RIZWxwZXIudGV4dENvbnRlbnQgPSBjaGFyO1xyXG4gICAgICAgIHJldHVybiB0SGVscGVyLm1lYXN1cmVUZXh0KGNoYXIpLndpZHRoKnNpemUvMTAwO1xyXG4gICAgICAgIC8vcmV0dXJuIHRIZWxwZXIuZ2V0Q29tcHV0ZWRUZXh0TGVuZ3RoKCkqc2l6ZS8xMDA7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0Rm9udEJ5TmFtZShuYW1lKXtcclxuICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IHRoaXMuZm9udHMubGVuZ3RoO1xyXG4gICAgICAgIHdoaWxlKGk8bGVuKXtcclxuICAgICAgICAgICAgaWYodGhpcy5mb250c1tpXS5mTmFtZSA9PT0gbmFtZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9udHNbaV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gJ3NhbnMtc2VyaWYnO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBGb250ID0gZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLmZvbnRzID0gW107XHJcbiAgICAgICAgdGhpcy5jaGFycyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy50eXBla2l0TG9hZGVkID0gMDtcclxuICAgICAgICB0aGlzLmxvYWRlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuaW5pdFRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgfTtcclxuICAgIEZvbnQucHJvdG90eXBlLmFkZENoYXJzID0gYWRkQ2hhcnM7XHJcbiAgICBGb250LnByb3RvdHlwZS5hZGRGb250cyA9IGFkZEZvbnRzO1xyXG4gICAgRm9udC5wcm90b3R5cGUuZ2V0Q2hhckRhdGEgPSBnZXRDaGFyRGF0YTtcclxuICAgIEZvbnQucHJvdG90eXBlLmdldEZvbnRCeU5hbWUgPSBnZXRGb250QnlOYW1lO1xyXG4gICAgRm9udC5wcm90b3R5cGUubWVhc3VyZVRleHQgPSBtZWFzdXJlVGV4dDtcclxuXHJcbiAgICByZXR1cm4gRm9udDtcclxuXHJcbn0oKSk7XG52YXIgUHJvcGVydHlGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgdmFyIGluaXRGcmFtZSA9IC05OTk5OTk7XHJcblxyXG4gICAgZnVuY3Rpb24gaW50ZXJwb2xhdGVWYWx1ZShmcmFtZU51bSwgaXRlcmF0aW9uSW5kZXgsIHByZXZpb3VzVmFsdWUsIGNhY2hpbmcpe1xyXG4gICAgICAgIHZhciBvZmZzZXRUaW1lID0gdGhpcy5vZmZzZXRUaW1lO1xyXG4gICAgICAgIHZhciBuZXdWYWx1ZTtcclxuICAgICAgICBpZihwcmV2aW91c1ZhbHVlLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xyXG4gICAgICAgICAgICBuZXdWYWx1ZSA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpwcmV2aW91c1ZhbHVlLmxlbmd0aH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBpID0gaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMua2V5ZnJhbWVzLmxlbmd0aC0gMSxmbGFnID0gdHJ1ZTtcclxuICAgICAgICB2YXIga2V5RGF0YSwgbmV4dEtleURhdGE7XHJcblxyXG4gICAgICAgIHdoaWxlKGZsYWcpe1xyXG4gICAgICAgICAgICBrZXlEYXRhID0gdGhpcy5rZXlmcmFtZXNbaV07XHJcbiAgICAgICAgICAgIG5leHRLZXlEYXRhID0gdGhpcy5rZXlmcmFtZXNbaSsxXTtcclxuICAgICAgICAgICAgaWYoaSA9PSBsZW4tMSAmJiBmcmFtZU51bSA+PSBuZXh0S2V5RGF0YS50IC0gb2Zmc2V0VGltZSl7XHJcbiAgICAgICAgICAgICAgICBpZihrZXlEYXRhLmgpe1xyXG4gICAgICAgICAgICAgICAgICAgIGtleURhdGEgPSBuZXh0S2V5RGF0YTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGl0ZXJhdGlvbkluZGV4ID0gMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKChuZXh0S2V5RGF0YS50IC0gb2Zmc2V0VGltZSkgPiBmcmFtZU51bSl7XHJcbiAgICAgICAgICAgICAgICBpdGVyYXRpb25JbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihpIDwgbGVuIC0gMSl7XHJcbiAgICAgICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0aW9uSW5kZXggPSAwO1xyXG4gICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgaywga0xlbixwZXJjLGpMZW4sIGosIGZuYztcclxuICAgICAgICBpZihrZXlEYXRhLnRvKXtcclxuXHJcbiAgICAgICAgICAgIGlmKCFrZXlEYXRhLmJlemllckRhdGEpe1xyXG4gICAgICAgICAgICAgICAgYmV6LmJ1aWxkQmV6aWVyRGF0YShrZXlEYXRhKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgYmV6aWVyRGF0YSA9IGtleURhdGEuYmV6aWVyRGF0YTtcclxuICAgICAgICAgICAgaWYoZnJhbWVOdW0gPj0gbmV4dEtleURhdGEudC1vZmZzZXRUaW1lIHx8IGZyYW1lTnVtIDwga2V5RGF0YS50LW9mZnNldFRpbWUpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGluZCA9IGZyYW1lTnVtID49IG5leHRLZXlEYXRhLnQtb2Zmc2V0VGltZSA/IGJlemllckRhdGEucG9pbnRzLmxlbmd0aCAtIDEgOiAwO1xyXG4gICAgICAgICAgICAgICAga0xlbiA9IGJlemllckRhdGEucG9pbnRzW2luZF0ucG9pbnQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yKGsgPSAwOyBrIDwga0xlbjsgayArPSAxKXtcclxuICAgICAgICAgICAgICAgICAgICBuZXdWYWx1ZVtrXSA9IGJlemllckRhdGEucG9pbnRzW2luZF0ucG9pbnRba107XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYWNoaW5nLl9sYXN0QmV6aWVyRGF0YSA9IG51bGw7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgaWYoa2V5RGF0YS5fX2ZuY3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZuYyA9IGtleURhdGEuX19mbmN0O1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgZm5jID0gQmV6aWVyRmFjdG9yeS5nZXRCZXppZXJFYXNpbmcoa2V5RGF0YS5vLngsa2V5RGF0YS5vLnksa2V5RGF0YS5pLngsa2V5RGF0YS5pLnksa2V5RGF0YS5uKS5nZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAga2V5RGF0YS5fX2ZuY3QgPSBmbmM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwZXJjID0gZm5jKChmcmFtZU51bS0oa2V5RGF0YS50LW9mZnNldFRpbWUpKS8oKG5leHRLZXlEYXRhLnQtb2Zmc2V0VGltZSktKGtleURhdGEudC1vZmZzZXRUaW1lKSkpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRpc3RhbmNlSW5MaW5lID0gYmV6aWVyRGF0YS5zZWdtZW50TGVuZ3RoKnBlcmM7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIHNlZ21lbnRQZXJjO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFkZGVkTGVuZ3RoID0gIChjYWNoaW5nLmxhc3RGcmFtZSA8IGZyYW1lTnVtICYmIGNhY2hpbmcuX2xhc3RCZXppZXJEYXRhID09PSBiZXppZXJEYXRhKSA/IGNhY2hpbmcuX2xhc3RBZGRlZExlbmd0aCA6IDA7XHJcbiAgICAgICAgICAgICAgICBqID0gIChjYWNoaW5nLmxhc3RGcmFtZSA8IGZyYW1lTnVtICYmIGNhY2hpbmcuX2xhc3RCZXppZXJEYXRhID09PSBiZXppZXJEYXRhKSA/IGNhY2hpbmcuX2xhc3RQb2ludCA6IDA7XHJcbiAgICAgICAgICAgICAgICBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGpMZW4gPSBiZXppZXJEYXRhLnBvaW50cy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB3aGlsZShmbGFnKXtcclxuICAgICAgICAgICAgICAgICAgICBhZGRlZExlbmd0aCArPWJlemllckRhdGEucG9pbnRzW2pdLnBhcnRpYWxMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGlzdGFuY2VJbkxpbmUgPT09IDAgfHwgcGVyYyA9PT0gMCB8fCBqID09IGJlemllckRhdGEucG9pbnRzLmxlbmd0aCAtIDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBrTGVuID0gYmV6aWVyRGF0YS5wb2ludHNbal0ucG9pbnQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3Ioaz0wO2s8a0xlbjtrKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlW2tdID0gYmV6aWVyRGF0YS5wb2ludHNbal0ucG9pbnRba107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoZGlzdGFuY2VJbkxpbmUgPj0gYWRkZWRMZW5ndGggJiYgZGlzdGFuY2VJbkxpbmUgPCBhZGRlZExlbmd0aCArIGJlemllckRhdGEucG9pbnRzW2orMV0ucGFydGlhbExlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlZ21lbnRQZXJjID0gKGRpc3RhbmNlSW5MaW5lLWFkZGVkTGVuZ3RoKS8oYmV6aWVyRGF0YS5wb2ludHNbaisxXS5wYXJ0aWFsTGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAga0xlbiA9IGJlemllckRhdGEucG9pbnRzW2pdLnBvaW50Lmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKGs9MDtrPGtMZW47ays9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdWYWx1ZVtrXSA9IGJlemllckRhdGEucG9pbnRzW2pdLnBvaW50W2tdICsgKGJlemllckRhdGEucG9pbnRzW2orMV0ucG9pbnRba10gLSBiZXppZXJEYXRhLnBvaW50c1tqXS5wb2ludFtrXSkqc2VnbWVudFBlcmM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGogPCBqTGVuIC0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGogKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhY2hpbmcuX2xhc3RQb2ludCA9IGo7XHJcbiAgICAgICAgICAgICAgICBjYWNoaW5nLl9sYXN0QWRkZWRMZW5ndGggPSBhZGRlZExlbmd0aCAtIGJlemllckRhdGEucG9pbnRzW2pdLnBhcnRpYWxMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBjYWNoaW5nLl9sYXN0QmV6aWVyRGF0YSA9IGJlemllckRhdGE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdmFyIG91dFgsb3V0WSxpblgsaW5ZLCBrZXlWYWx1ZTtcclxuICAgICAgICAgICAgbGVuID0ga2V5RGF0YS5zLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGtleURhdGEuaCAhPT0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZnJhbWVOdW0gPj0gbmV4dEtleURhdGEudC1vZmZzZXRUaW1lKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGVyYyA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoZnJhbWVOdW0gPCBrZXlEYXRhLnQtb2Zmc2V0VGltZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmMgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihrZXlEYXRhLm8ueC5jb25zdHJ1Y3RvciA9PT0gQXJyYXkpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIWtleURhdGEuX19mbmN0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlEYXRhLl9fZm5jdCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFrZXlEYXRhLl9fZm5jdFtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dFggPSBrZXlEYXRhLm8ueFtpXSB8fCBrZXlEYXRhLm8ueFswXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRZID0ga2V5RGF0YS5vLnlbaV0gfHwga2V5RGF0YS5vLnlbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5YID0ga2V5RGF0YS5pLnhbaV0gfHwga2V5RGF0YS5pLnhbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5ZID0ga2V5RGF0YS5pLnlbaV0gfHwga2V5RGF0YS5pLnlbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm5jID0gQmV6aWVyRmFjdG9yeS5nZXRCZXppZXJFYXNpbmcob3V0WCxvdXRZLGluWCxpblkpLmdldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlEYXRhLl9fZm5jdFtpXSA9IGZuYztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm5jID0ga2V5RGF0YS5fX2ZuY3RbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWtleURhdGEuX19mbmN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0WCA9IGtleURhdGEuby54O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dFkgPSBrZXlEYXRhLm8ueTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpblggPSBrZXlEYXRhLmkueDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpblkgPSBrZXlEYXRhLmkueTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbmMgPSBCZXppZXJGYWN0b3J5LmdldEJlemllckVhc2luZyhvdXRYLG91dFksaW5YLGluWSkuZ2V0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleURhdGEuX19mbmN0ID0gZm5jO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZuYyA9IGtleURhdGEuX19mbmN0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmMgPSBmbmMoKGZyYW1lTnVtLShrZXlEYXRhLnQtb2Zmc2V0VGltZSkpLygobmV4dEtleURhdGEudC1vZmZzZXRUaW1lKS0oa2V5RGF0YS50LW9mZnNldFRpbWUpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zaCAmJiBrZXlEYXRhLmggIT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbml0UCA9IGtleURhdGEuc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZW5kUCA9IGtleURhdGEuZVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBpZihpbml0UC1lbmRQIDwgLTE4MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRQICs9IDM2MDtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaW5pdFAtZW5kUCA+IDE4MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRQIC09IDM2MDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAga2V5VmFsdWUgPSBpbml0UCsoZW5kUC1pbml0UCkqcGVyYztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAga2V5VmFsdWUgPSBrZXlEYXRhLmggPT09IDEgPyBrZXlEYXRhLnNbaV0gOiBrZXlEYXRhLnNbaV0rKGtleURhdGEuZVtpXS1rZXlEYXRhLnNbaV0pKnBlcmM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihsZW4gPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0ga2V5VmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBuZXdWYWx1ZVtpXSA9IGtleVZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBuZXdWYWx1ZSxcclxuICAgICAgICAgICAgaXRlcmF0aW9uSW5kZXg6IGl0ZXJhdGlvbkluZGV4XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFZhbHVlQXRDdXJyZW50VGltZSgpe1xyXG4gICAgICAgIGlmKHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQgPT09IHRoaXMuZnJhbWVJZCl7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICB2YXIgZnJhbWVOdW0gPSB0aGlzLmNvbXAucmVuZGVyZWRGcmFtZSAtIHRoaXMub2Zmc2V0VGltZTtcclxuICAgICAgICB2YXIgaW5pdFRpbWUgPSB0aGlzLmtleWZyYW1lc1swXS50LXRoaXMub2Zmc2V0VGltZTtcclxuICAgICAgICB2YXIgZW5kVGltZSA9IHRoaXMua2V5ZnJhbWVzW3RoaXMua2V5ZnJhbWVzLmxlbmd0aC0gMV0udC10aGlzLm9mZnNldFRpbWU7XHJcbiAgICAgICAgaWYoIShmcmFtZU51bSA9PT0gdGhpcy5fY2FjaGluZy5sYXN0RnJhbWUgfHwgKHRoaXMuX2NhY2hpbmcubGFzdEZyYW1lICE9PSBpbml0RnJhbWUgJiYgKCh0aGlzLl9jYWNoaW5nLmxhc3RGcmFtZSA+PSBlbmRUaW1lICYmIGZyYW1lTnVtID49IGVuZFRpbWUpIHx8ICh0aGlzLl9jYWNoaW5nLmxhc3RGcmFtZSA8IGluaXRUaW1lICYmIGZyYW1lTnVtIDwgaW5pdFRpbWUpKSkpKXtcclxuICAgICAgICAgICAgdmFyIGkgPSB0aGlzLl9jYWNoaW5nLmxhc3RGcmFtZSA8IGZyYW1lTnVtID8gdGhpcy5fY2FjaGluZy5sYXN0SW5kZXggOiAwO1xyXG4gICAgICAgICAgICB2YXIgcmVuZGVyUmVzdWx0ID0gdGhpcy5pbnRlcnBvbGF0ZVZhbHVlKGZyYW1lTnVtLCBpLCB0aGlzLnB2LCB0aGlzLl9jYWNoaW5nKTtcclxuICAgICAgICAgICAgdGhpcy5fY2FjaGluZy5sYXN0SW5kZXggPSByZW5kZXJSZXN1bHQuaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgICAgIGlmKHRoaXMucHYuY29uc3RydWN0b3IgPT09IEFycmF5KXtcclxuICAgICAgICAgICAgICAgIGkgPSAwO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUoaTx0aGlzLnYubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnB2W2ldID0gcmVuZGVyUmVzdWx0LnZhbHVlW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudltpXSA9IHRoaXMubXVsdCA/IHRoaXMucHZbaV0gKiB0aGlzLm11bHQgOiB0aGlzLnB2W2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMubGFzdFBWYWx1ZVtpXSAhPT0gdGhpcy5wdltpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFBWYWx1ZVtpXSA9IHRoaXMucHZbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucHYgPSByZW5kZXJSZXN1bHQudmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYgPSB0aGlzLm11bHQgPyB0aGlzLnB2KnRoaXMubXVsdCA6IHRoaXMucHY7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmxhc3RQVmFsdWUgIT0gdGhpcy5wdil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFBWYWx1ZSA9IHRoaXMucHY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2NhY2hpbmcubGFzdEZyYW1lID0gZnJhbWVOdW07XHJcbiAgICAgICAgdGhpcy5mcmFtZUlkID0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXROb1ZhbHVlKCl7fVxyXG5cclxuICAgIGZ1bmN0aW9uIFZhbHVlUHJvcGVydHkoZWxlbSxkYXRhLCBtdWx0KXtcclxuICAgICAgICB0aGlzLm11bHQgPSBtdWx0O1xyXG4gICAgICAgIHRoaXMudiA9IG11bHQgPyBkYXRhLmsgKiBtdWx0IDogZGF0YS5rO1xyXG4gICAgICAgIHRoaXMucHYgPSBkYXRhLms7XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdGhpcy5rID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5rZiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudmVsID0gMDtcclxuICAgICAgICB0aGlzLmdldFZhbHVlID0gZ2V0Tm9WYWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBNdWx0aURpbWVuc2lvbmFsUHJvcGVydHkoZWxlbSxkYXRhLCBtdWx0KXtcclxuICAgICAgICB0aGlzLm11bHQgPSBtdWx0O1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdGhpcy5rID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5rZiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZnJhbWVJZCA9IC0xO1xyXG4gICAgICAgIHRoaXMudiA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6ZGF0YS5rLmxlbmd0aH0pO1xyXG4gICAgICAgIHRoaXMucHYgPSBBcnJheS5hcHBseShudWxsLCB7bGVuZ3RoOmRhdGEuay5sZW5ndGh9KTtcclxuICAgICAgICB0aGlzLmxhc3RWYWx1ZSA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6ZGF0YS5rLmxlbmd0aH0pO1xyXG4gICAgICAgIHZhciBhcnIgPSBBcnJheS5hcHBseShudWxsLCB7bGVuZ3RoOmRhdGEuay5sZW5ndGh9KTtcclxuICAgICAgICB0aGlzLnZlbCA9IGFyci5tYXAoZnVuY3Rpb24gKCkgeyByZXR1cm4gMCB9KTtcclxuICAgICAgICB2YXIgaSwgbGVuID0gZGF0YS5rLmxlbmd0aDtcclxuICAgICAgICBmb3IoaSA9IDA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHRoaXMudltpXSA9IG11bHQgPyBkYXRhLmtbaV0gKiBtdWx0IDogZGF0YS5rW2ldO1xyXG4gICAgICAgICAgICB0aGlzLnB2W2ldID0gZGF0YS5rW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmdldFZhbHVlID0gZ2V0Tm9WYWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBLZXlmcmFtZWRWYWx1ZVByb3BlcnR5KGVsZW0sIGRhdGEsIG11bHQpe1xyXG4gICAgICAgIHRoaXMua2V5ZnJhbWVzID0gZGF0YS5rO1xyXG4gICAgICAgIHRoaXMub2Zmc2V0VGltZSA9IGVsZW0uZGF0YS5zdDtcclxuICAgICAgICB0aGlzLmxhc3RWYWx1ZSA9IC05OTk5OTtcclxuICAgICAgICB0aGlzLmxhc3RQVmFsdWUgPSAtOTk5OTk7XHJcbiAgICAgICAgdGhpcy5mcmFtZUlkID0gLTE7XHJcbiAgICAgICAgdGhpcy5fY2FjaGluZz17bGFzdEZyYW1lOmluaXRGcmFtZSxsYXN0SW5kZXg6MH07XHJcbiAgICAgICAgdGhpcy5rID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmtmID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgIHRoaXMubXVsdCA9IG11bHQ7XHJcbiAgICAgICAgdGhpcy5lbGVtID0gZWxlbTtcclxuICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdGhpcy52ID0gbXVsdCA/IGRhdGEua1swXS5zWzBdKm11bHQgOiBkYXRhLmtbMF0uc1swXTtcclxuICAgICAgICB0aGlzLnB2ID0gZGF0YS5rWzBdLnNbMF07XHJcbiAgICAgICAgdGhpcy5nZXRWYWx1ZSA9IGdldFZhbHVlQXRDdXJyZW50VGltZTtcclxuICAgICAgICB0aGlzLmludGVycG9sYXRlVmFsdWUgPSBpbnRlcnBvbGF0ZVZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIEtleWZyYW1lZE11bHRpZGltZW5zaW9uYWxQcm9wZXJ0eShlbGVtLCBkYXRhLCBtdWx0KXtcclxuICAgICAgICB2YXIgaSwgbGVuID0gZGF0YS5rLmxlbmd0aDtcclxuICAgICAgICB2YXIgcywgZSx0byx0aTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuLTE7aSs9MSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEua1tpXS50byAmJiBkYXRhLmtbaV0ucyAmJiBkYXRhLmtbaV0uZSl7XHJcbiAgICAgICAgICAgICAgICBzID0gZGF0YS5rW2ldLnM7XHJcbiAgICAgICAgICAgICAgICBlID0gZGF0YS5rW2ldLmU7XHJcbiAgICAgICAgICAgICAgICB0byA9IGRhdGEua1tpXS50bztcclxuICAgICAgICAgICAgICAgIHRpID0gZGF0YS5rW2ldLnRpO1xyXG4gICAgICAgICAgICAgICAgaWYoKHMubGVuZ3RoID09PSAyICYmICEoc1swXSA9PT0gZVswXSAmJiBzWzFdID09PSBlWzFdKSAmJiBiZXoucG9pbnRPbkxpbmUyRChzWzBdLHNbMV0sZVswXSxlWzFdLHNbMF0gKyB0b1swXSxzWzFdICsgdG9bMV0pICYmIGJlei5wb2ludE9uTGluZTJEKHNbMF0sc1sxXSxlWzBdLGVbMV0sZVswXSArIHRpWzBdLGVbMV0gKyB0aVsxXSkpIHx8IChzLmxlbmd0aCA9PT0gMyAmJiAhKHNbMF0gPT09IGVbMF0gJiYgc1sxXSA9PT0gZVsxXSAmJiBzWzJdID09PSBlWzJdKSAmJiBiZXoucG9pbnRPbkxpbmUzRChzWzBdLHNbMV0sc1syXSxlWzBdLGVbMV0sZVsyXSxzWzBdICsgdG9bMF0sc1sxXSArIHRvWzFdLHNbMl0gKyB0b1syXSkgJiYgYmV6LnBvaW50T25MaW5lM0Qoc1swXSxzWzFdLHNbMl0sZVswXSxlWzFdLGVbMl0sZVswXSArIHRpWzBdLGVbMV0gKyB0aVsxXSxlWzJdICsgdGlbMl0pKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5rW2ldLnRvID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmtbaV0udGkgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMua2V5ZnJhbWVzID0gZGF0YS5rO1xyXG4gICAgICAgIHRoaXMub2Zmc2V0VGltZSA9IGVsZW0uZGF0YS5zdDtcclxuICAgICAgICB0aGlzLmsgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMua2YgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubXVsdCA9IG11bHQ7XHJcbiAgICAgICAgdGhpcy5lbGVtID0gZWxlbTtcclxuICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdGhpcy5fY2FjaGluZz17bGFzdEZyYW1lOmluaXRGcmFtZSxsYXN0SW5kZXg6MH07XHJcbiAgICAgICAgdGhpcy5nZXRWYWx1ZSA9IGdldFZhbHVlQXRDdXJyZW50VGltZTtcclxuICAgICAgICB0aGlzLmludGVycG9sYXRlVmFsdWUgPSBpbnRlcnBvbGF0ZVZhbHVlO1xyXG4gICAgICAgIHRoaXMuZnJhbWVJZCA9IC0xO1xyXG4gICAgICAgIHRoaXMudiA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6ZGF0YS5rWzBdLnMubGVuZ3RofSk7XHJcbiAgICAgICAgdGhpcy5wdiA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6ZGF0YS5rWzBdLnMubGVuZ3RofSk7XHJcbiAgICAgICAgdGhpcy5sYXN0VmFsdWUgPSBBcnJheS5hcHBseShudWxsLCB7bGVuZ3RoOmRhdGEua1swXS5zLmxlbmd0aH0pO1xyXG4gICAgICAgIHRoaXMubGFzdFBWYWx1ZSA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6ZGF0YS5rWzBdLnMubGVuZ3RofSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIFRyYW5zZm9ybVByb3BlcnR5ID0gKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIHBvc2l0aW9uR2V0dGVyKCkge1xyXG4gICAgICAgICAgICBpZih0aGlzLnApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5wKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBbdGhpcy5weC52LCB0aGlzLnB5LnYsIHRoaXMucHogPyB0aGlzLnB6LnYgOiAwXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiB4UG9zaXRpb25HZXR0ZXIoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5weCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIHlQb3NpdGlvbkdldHRlcigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh0aGlzLnB5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gelBvc2l0aW9uR2V0dGVyKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHRoaXMucHopO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBhbmNob3JHZXR0ZXIoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5hKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gb3JpZW50YXRpb25HZXR0ZXIoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5vcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJvdGF0aW9uR2V0dGVyKCkge1xyXG4gICAgICAgICAgICBpZih0aGlzLnIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5yLCAxL2RlZ1RvUmFkcyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHRoaXMucnosIDEvZGVnVG9SYWRzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBzY2FsZUdldHRlcigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh0aGlzLnMsIDEwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIG9wYWNpdHlHZXR0ZXIoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodGhpcy5vLCAxMDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBza2V3R2V0dGVyKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHRoaXMuc2spO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBza2V3QXhpc0dldHRlcigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh0aGlzLnNhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gYXBwbHlUb01hdHJpeChtYXQpIHtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmEpIHtcclxuICAgICAgICAgICAgICAgIG1hdC50cmFuc2xhdGUoLXRoaXMuYS52WzBdLCAtdGhpcy5hLnZbMV0sIHRoaXMuYS52WzJdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5zKSB7XHJcbiAgICAgICAgICAgICAgICBtYXQuc2NhbGUodGhpcy5zLnZbMF0sIHRoaXMucy52WzFdLCB0aGlzLnMudlsyXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMucikge1xyXG4gICAgICAgICAgICAgICAgbWF0LnJvdGF0ZSgtdGhpcy5yLnYpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbWF0LnJvdGF0ZVooLXRoaXMucnoudikucm90YXRlWSh0aGlzLnJ5LnYpLnJvdGF0ZVgodGhpcy5yeC52KS5yb3RhdGVaKC10aGlzLm9yLnZbMl0pLnJvdGF0ZVkodGhpcy5vci52WzFdKS5yb3RhdGVYKHRoaXMub3IudlswXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuZGF0YS5wLnMpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRhdGEucC56KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF0LnRyYW5zbGF0ZSh0aGlzLnB4LnYsIHRoaXMucHkudiwgLXRoaXMucHoudik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hdC50cmFuc2xhdGUodGhpcy5weC52LCB0aGlzLnB5LnYsIDApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbWF0LnRyYW5zbGF0ZSh0aGlzLnAudlswXSwgdGhpcy5wLnZbMV0sIC10aGlzLnAudlsyXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gcHJvY2Vzc0tleXMoKXtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQgPT09IHRoaXMuZnJhbWVJZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGg7XHJcblxyXG4gICAgICAgICAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1kZikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnJlc2V0KCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnRyYW5zbGF0ZSgtdGhpcy5hLnZbMF0sIC10aGlzLmEudlsxXSwgdGhpcy5hLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNjYWxlKHRoaXMucy52WzBdLCB0aGlzLnMudlsxXSwgdGhpcy5zLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc2spIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2tld0Zyb21BeGlzKC10aGlzLnNrLnYsIHRoaXMuc2Eudik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnJvdGF0ZSgtdGhpcy5yLnYpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYucm90YXRlWigtdGhpcy5yei52KS5yb3RhdGVZKHRoaXMucnkudikucm90YXRlWCh0aGlzLnJ4LnYpLnJvdGF0ZVooLXRoaXMub3IudlsyXSkucm90YXRlWSh0aGlzLm9yLnZbMV0pLnJvdGF0ZVgodGhpcy5vci52WzBdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmF1dG9PcmllbnRlZCAmJiB0aGlzLnAua2V5ZnJhbWVzICYmIHRoaXMucC5nZXRWYWx1ZUF0VGltZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB2MSx2MjtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5wLl9jYWNoaW5nLmxhc3RGcmFtZSt0aGlzLnAub2Zmc2V0VGltZSA8PSB0aGlzLnAua2V5ZnJhbWVzWzBdLnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdjEgPSB0aGlzLnAuZ2V0VmFsdWVBdFRpbWUoKHRoaXMucC5rZXlmcmFtZXNbMF0udCArIDAuMDEpIC8gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVSYXRlLDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2MiA9IHRoaXMucC5nZXRWYWx1ZUF0VGltZSh0aGlzLnAua2V5ZnJhbWVzWzBdLnQgLyB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZih0aGlzLnAuX2NhY2hpbmcubGFzdEZyYW1lK3RoaXMucC5vZmZzZXRUaW1lID49IHRoaXMucC5rZXlmcmFtZXNbdGhpcy5wLmtleWZyYW1lcy5sZW5ndGggLSAxXS50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHYxID0gdGhpcy5wLmdldFZhbHVlQXRUaW1lKCh0aGlzLnAua2V5ZnJhbWVzW3RoaXMucC5rZXlmcmFtZXMubGVuZ3RoIC0gMV0udCAvIHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lUmF0ZSksIDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2MiA9IHRoaXMucC5nZXRWYWx1ZUF0VGltZSgodGhpcy5wLmtleWZyYW1lc1t0aGlzLnAua2V5ZnJhbWVzLmxlbmd0aCAtIDFdLnQgLSAwLjAxKSAvIHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdjEgPSB0aGlzLnAucHY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHYyID0gdGhpcy5wLmdldFZhbHVlQXRUaW1lKCh0aGlzLnAuX2NhY2hpbmcubGFzdEZyYW1lK3RoaXMucC5vZmZzZXRUaW1lIC0gMC4wMSkgLyB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIHRoaXMucC5vZmZzZXRUaW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnJvdGF0ZSgtTWF0aC5hdGFuMih2MVsxXSAtIHYyWzFdLCB2MVswXSAtIHYyWzBdKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGEucC5zKXtcclxuICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGEucC56KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudi50cmFuc2xhdGUodGhpcy5weC52LCB0aGlzLnB5LnYsIC10aGlzLnB6LnYpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudi50cmFuc2xhdGUodGhpcy5weC52LCB0aGlzLnB5LnYsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi50cmFuc2xhdGUodGhpcy5wLnZbMF0sdGhpcy5wLnZbMV0sLXRoaXMucC52WzJdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gc2V0SW52ZXJ0ZWQoKXtcclxuICAgICAgICAgICAgdGhpcy5pbnZlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuaXYgPSBuZXcgTWF0cml4KCk7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmspe1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5kYXRhLnAucyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdi50cmFuc2xhdGUodGhpcy5weC52LHRoaXMucHkudiwtdGhpcy5wei52KTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXYudHJhbnNsYXRlKHRoaXMucC52WzBdLHRoaXMucC52WzFdLC10aGlzLnAudlsyXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnIpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXYucm90YXRlKC10aGlzLnIudik7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLml2LnJvdGF0ZVgoLXRoaXMucngudikucm90YXRlWSgtdGhpcy5yeS52KS5yb3RhdGVaKHRoaXMucnoudik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnMpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXYuc2NhbGUodGhpcy5zLnZbMF0sdGhpcy5zLnZbMV0sMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXYudHJhbnNsYXRlKC10aGlzLmEudlswXSwtdGhpcy5hLnZbMV0sdGhpcy5hLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBhdXRvT3JpZW50KCl7XHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIC8vdmFyIHByZXZQID0gdGhpcy5nZXRWYWx1ZUF0VGltZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIFRyYW5zZm9ybVByb3BlcnR5KGVsZW0sZGF0YSxhcnIpe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW0gPSBlbGVtO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gJ3RyYW5zZm9ybSc7XHJcbiAgICAgICAgICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXMgPSBbXTtcclxuICAgICAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZSA9IHByb2Nlc3NLZXlzO1xyXG4gICAgICAgICAgICB0aGlzLmFwcGx5VG9NYXRyaXggPSBhcHBseVRvTWF0cml4O1xyXG4gICAgICAgICAgICB0aGlzLnNldEludmVydGVkID0gc2V0SW52ZXJ0ZWQ7XHJcbiAgICAgICAgICAgIHRoaXMuYXV0b09yaWVudCA9IGF1dG9PcmllbnQ7XHJcbiAgICAgICAgICAgIHRoaXMudiA9IG5ldyBNYXRyaXgoKTtcclxuICAgICAgICAgICAgaWYoZGF0YS5wLnMpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5weCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5wLngsMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5weSA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5wLnksMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YS5wLnope1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHogPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucC56LDAsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnAgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucCwxLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZGF0YS5yKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnIgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLCBkYXRhLnIsIDAsIGRlZ1RvUmFkcywgdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihkYXRhLnJ4KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJ4ID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSwgZGF0YS5yeCwgMCwgZGVnVG9SYWRzLCB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucnkgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLCBkYXRhLnJ5LCAwLCBkZWdUb1JhZHMsIHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yeiA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sIGRhdGEucnosIDAsIGRlZ1RvUmFkcywgdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9yID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSwgZGF0YS5vciwgMSwgZGVnVG9SYWRzLCB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIC8vc2ggSW5kaWNhdGVzIGl0IG5lZWRzIHRvIGJlIGNhcHBlZCBiZXR3ZWVuIC0xODAgYW5kIDE4MFxyXG4gICAgICAgICAgICAgICAgdGhpcy5vci5zaCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZGF0YS5zayl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNrID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSwgZGF0YS5zaywgMCwgZGVnVG9SYWRzLCB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2EgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLCBkYXRhLnNhLCAwLCBkZWdUb1JhZHMsIHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGEuYSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLmEsMSwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGEucykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnMsMSwwLjAxLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRhdGEubyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm8gPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEubywwLDAuMDEsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm8gPSB7bWRmOmZhbHNlLHY6MX07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgYXJyLnB1c2godGhpcyk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5hKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYudHJhbnNsYXRlKC10aGlzLmEudlswXSwtdGhpcy5hLnZbMV0sdGhpcy5hLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2NhbGUodGhpcy5zLnZbMF0sdGhpcy5zLnZbMV0sdGhpcy5zLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zayl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNrZXdGcm9tQXhpcygtdGhpcy5zay52LHRoaXMuc2Eudik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnIpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5yb3RhdGUoLXRoaXMuci52KTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5yb3RhdGVaKC10aGlzLnJ6LnYpLnJvdGF0ZVkodGhpcy5yeS52KS5yb3RhdGVYKHRoaXMucngudikucm90YXRlWigtdGhpcy5vci52WzJdKS5yb3RhdGVZKHRoaXMub3IudlsxXSkucm90YXRlWCh0aGlzLm9yLnZbMF0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5kYXRhLnAucyl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5wLnopIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52LnRyYW5zbGF0ZSh0aGlzLnB4LnYsIHRoaXMucHkudiwgLXRoaXMucHoudik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52LnRyYW5zbGF0ZSh0aGlzLnB4LnYsIHRoaXMucHkudiwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnRyYW5zbGF0ZSh0aGlzLnAudlswXSx0aGlzLnAudlsxXSwtdGhpcy5wLnZbMl0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBvc2l0aW9uXCIsIHsgZ2V0OiBwb3NpdGlvbkdldHRlcn0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ4UG9zaXRpb25cIiwgeyBnZXQ6IHhQb3NpdGlvbkdldHRlcn0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ5UG9zaXRpb25cIiwgeyBnZXQ6IHlQb3NpdGlvbkdldHRlcn0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcmllbnRhdGlvblwiLCB7IGdldDogb3JpZW50YXRpb25HZXR0ZXJ9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYW5jaG9yUG9pbnRcIiwgeyBnZXQ6IGFuY2hvckdldHRlcn0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJyb3RhdGlvblwiLCB7IGdldDogcm90YXRpb25HZXR0ZXJ9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2NhbGVcIiwgeyBnZXQ6IHNjYWxlR2V0dGVyfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9wYWNpdHlcIiwgeyBnZXQ6IG9wYWNpdHlHZXR0ZXJ9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2tld1wiLCB7IGdldDogc2tld0dldHRlcn0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJza2V3QXhpc1wiLCB7IGdldDogc2tld0F4aXNHZXR0ZXJ9KTtcclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdldFByb3AoZWxlbSxkYXRhLHR5cGUsIG11bHQsIGFycikge1xyXG4gICAgICAgIHZhciBwO1xyXG4gICAgICAgIGlmKHR5cGUgPT09IDIpe1xyXG4gICAgICAgICAgICBwID0gbmV3IFRyYW5zZm9ybVByb3BlcnR5KGVsZW0sIGRhdGEsIGFycik7XHJcbiAgICAgICAgfSBlbHNlIGlmKGRhdGEuYSA9PT0gMCl7XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHAgPSBuZXcgVmFsdWVQcm9wZXJ0eShlbGVtLGRhdGEsbXVsdCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwID0gbmV3IE11bHRpRGltZW5zaW9uYWxQcm9wZXJ0eShlbGVtLGRhdGEsIG11bHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmKGRhdGEuYSA9PT0gMSl7XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHAgPSBuZXcgS2V5ZnJhbWVkVmFsdWVQcm9wZXJ0eShlbGVtLGRhdGEsbXVsdCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwID0gbmV3IEtleWZyYW1lZE11bHRpZGltZW5zaW9uYWxQcm9wZXJ0eShlbGVtLGRhdGEsIG11bHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmKCFkYXRhLmsubGVuZ3RoKXtcclxuICAgICAgICAgICAgcCA9IG5ldyBWYWx1ZVByb3BlcnR5KGVsZW0sZGF0YSwgbXVsdCk7XHJcbiAgICAgICAgfWVsc2UgaWYodHlwZW9mKGRhdGEua1swXSkgPT09ICdudW1iZXInKXtcclxuICAgICAgICAgICAgcCA9IG5ldyBNdWx0aURpbWVuc2lvbmFsUHJvcGVydHkoZWxlbSxkYXRhLCBtdWx0KTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgc3dpdGNoKHR5cGUpe1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgIHAgPSBuZXcgS2V5ZnJhbWVkVmFsdWVQcm9wZXJ0eShlbGVtLGRhdGEsbXVsdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgcCA9IG5ldyBLZXlmcmFtZWRNdWx0aWRpbWVuc2lvbmFsUHJvcGVydHkoZWxlbSxkYXRhLG11bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHAuayl7XHJcbiAgICAgICAgICAgIGFyci5wdXNoKHApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcDtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgZ2V0R3JhZGllbnRQcm9wID0gKGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldFZhbHVlKGZvcmNlUmVuZGVyKXtcclxuICAgICAgICAgICAgdGhpcy5wcm9wLmdldFZhbHVlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY21kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLm9tZGYgPSBmYWxzZTtcclxuICAgICAgICAgICAgaWYodGhpcy5wcm9wLm1kZiB8fCBmb3JjZVJlbmRlcil7XHJcbiAgICAgICAgICAgICAgICB2YXIgaSwgbGVuID0gdGhpcy5kYXRhLnAqNDtcclxuICAgICAgICAgICAgICAgIHZhciBtdWx0LCB2YWw7XHJcbiAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSBpJTQgPT09IDAgPyAxMDAgOiAyNTU7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsID0gTWF0aC5yb3VuZCh0aGlzLnByb3AudltpXSptdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmNbaV0gIT09IHZhbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY1tpXSA9IHZhbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLm8ubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICBsZW4gPSB0aGlzLnByb3Audi5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGk9dGhpcy5kYXRhLnAqNDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdCA9IGklMiA9PT0gMCA/IDEwMCA6IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbCA9IGklMiA9PT0gMCA/ICBNYXRoLnJvdW5kKHRoaXMucHJvcC52W2ldKjEwMCk6dGhpcy5wcm9wLnZbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMub1tpLXRoaXMuZGF0YS5wKjRdICE9PSB2YWwpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vW2ktdGhpcy5kYXRhLnAqNF0gPSB2YWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ3JhZGllbnRQcm9wKGVsZW0sZGF0YSxhcnIpe1xyXG4gICAgICAgICAgICB0aGlzLnByb3AgPSBnZXRQcm9wKGVsZW0sZGF0YS5rLDEsbnVsbCxbXSk7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgICAgIHRoaXMuayA9IHRoaXMucHJvcC5rO1xyXG4gICAgICAgICAgICB0aGlzLmMgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6ZGF0YS5wKjR9KTtcclxuICAgICAgICAgICAgdmFyIGNMZW5ndGggPSBkYXRhLmsua1swXS5zID8gKGRhdGEuay5rWzBdLnMubGVuZ3RoIC0gZGF0YS5wKjQpIDogZGF0YS5rLmsubGVuZ3RoIC0gZGF0YS5wKjQ7XHJcbiAgICAgICAgICAgIHRoaXMubyA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpjTGVuZ3RofSk7XHJcbiAgICAgICAgICAgIHRoaXMuY21kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLm9tZGYgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZSA9IGdldFZhbHVlO1xyXG4gICAgICAgICAgICBpZih0aGlzLnByb3Auayl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaCh0aGlzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdldFZhbHVlKHRydWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGdldEdyYWRpZW50UHJvcChlbGVtLGRhdGEsYXJyKXtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBncmFkaWVudFByb3AoZWxlbSxkYXRhLGFycik7XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcblxyXG5cclxuXHJcbiAgICB2YXIgRGFzaFByb3BlcnR5ID0gKGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHByb2Nlc3NLZXlzKGZvcmNlUmVuZGVyKXtcclxuICAgICAgICAgICAgdmFyIGkgPSAwLCBsZW4gPSB0aGlzLmRhdGFQcm9wcy5sZW5ndGg7XHJcblxyXG4gICAgICAgICAgICBpZih0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkID09PSB0aGlzLmZyYW1lSWQgJiYgIWZvcmNlUmVuZGVyKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkO1xyXG4gICAgICAgICAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGFQcm9wc1tpXS5wLm1kZil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaSs9MTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLm1kZiB8fCBmb3JjZVJlbmRlcil7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnJlbmRlcmVyID09PSAnc3ZnJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGFzaGFycmF5ID0gJyc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuZGF0YVByb3BzW2ldLm4gIT0gJ28nKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5yZW5kZXJlciA9PT0gJ3N2ZycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGFzaGFycmF5ICs9ICcgJyArIHRoaXMuZGF0YVByb3BzW2ldLnAudjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhc2hhcnJheVtpXSA9IHRoaXMuZGF0YVByb3BzW2ldLnAudjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhc2hvZmZzZXQgPSB0aGlzLmRhdGFQcm9wc1tpXS5wLnY7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oZWxlbSwgZGF0YSxyZW5kZXJlciwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW0gPSBlbGVtO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhUHJvcHMgPSBuZXcgQXJyYXkoZGF0YS5sZW5ndGgpO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuayA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZih0aGlzLnJlbmRlcmVyID09PSAnc3ZnJyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhc2hhcnJheSA9ICcnO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhc2hhcnJheSA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuZGFzaG9mZnNldCA9IDA7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4gPSBkYXRhLmxlbmd0aCwgcHJvcDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHByb3AgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGFbaV0udiwwLCAwLCBkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmsgPSBwcm9wLmsgPyB0cnVlIDogdGhpcy5rO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhUHJvcHNbaV0gPSB7bjpkYXRhW2ldLm4scDpwcm9wfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdldFZhbHVlID0gcHJvY2Vzc0tleXM7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuayl7XHJcbiAgICAgICAgICAgICAgICBkeW5hbWljUHJvcGVydGllcy5wdXNoKHRoaXMpO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0VmFsdWUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXREYXNoUHJvcChlbGVtLCBkYXRhLHJlbmRlcmVyLCBkeW5hbWljUHJvcGVydGllcykge1xyXG4gICAgICAgIHJldHVybiBuZXcgRGFzaFByb3BlcnR5KGVsZW0sIGRhdGEscmVuZGVyZXIsIGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIFRleHRTZWxlY3RvclByb3AgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgbWF4ID0gTWF0aC5tYXg7XHJcbiAgICAgICAgdmFyIG1pbiA9IE1hdGgubWluO1xyXG4gICAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XHJcbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlUmFuZ2UobmV3Q2hhcnNGbGFnKXtcclxuICAgICAgICAgICAgdGhpcy5tZGYgPSBuZXdDaGFyc0ZsYWcgfHwgZmFsc2U7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdG90YWxDaGFycyA9IHRoaXMuZWxlbS50ZXh0UHJvcGVydHkuY3VycmVudERhdGEgPyB0aGlzLmVsZW0udGV4dFByb3BlcnR5LmN1cnJlbnREYXRhLmwubGVuZ3RoIDogMDtcclxuICAgICAgICAgICAgaWYobmV3Q2hhcnNGbGFnICYmIHRoaXMuZGF0YS5yID09PSAyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmUudiA9IHRvdGFsQ2hhcnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGRpdmlzb3IgPSB0aGlzLmRhdGEuciA9PT0gMiA/IDEgOiAxMDAgLyB0b3RhbENoYXJzO1xyXG4gICAgICAgICAgICB2YXIgbyA9IHRoaXMuby52L2Rpdmlzb3I7XHJcbiAgICAgICAgICAgIHZhciBzID0gdGhpcy5zLnYvZGl2aXNvciArIG87XHJcbiAgICAgICAgICAgIHZhciBlID0gKHRoaXMuZS52L2Rpdmlzb3IpICsgbztcclxuICAgICAgICAgICAgaWYocz5lKXtcclxuICAgICAgICAgICAgICAgIHZhciBfcyA9IHM7XHJcbiAgICAgICAgICAgICAgICBzID0gZTtcclxuICAgICAgICAgICAgICAgIGUgPSBfcztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmZpbmFsUyA9IHM7XHJcbiAgICAgICAgICAgIHRoaXMuZmluYWxFID0gZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldE11bHQoaW5kKXtcclxuICAgICAgICAgICAgLy92YXIgZWFzZXIgPSBiZXouZ2V0RWFzaW5nQ3VydmUodGhpcy5uZS52LzEwMCwwLDEtdGhpcy54ZS52LzEwMCwxKTtcclxuICAgICAgICAgICAgdmFyIGVhc2VyID0gQmV6aWVyRmFjdG9yeS5nZXRCZXppZXJFYXNpbmcodGhpcy5uZS52LzEwMCwwLDEtdGhpcy54ZS52LzEwMCwxKS5nZXQ7XHJcbiAgICAgICAgICAgIHZhciBtdWx0ID0gMDtcclxuICAgICAgICAgICAgdmFyIHMgPSB0aGlzLmZpbmFsUztcclxuICAgICAgICAgICAgdmFyIGUgPSB0aGlzLmZpbmFsRTtcclxuICAgICAgICAgICAgdmFyIHR5cGUgPSB0aGlzLmRhdGEuc2g7XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT0gMil7XHJcbiAgICAgICAgICAgICAgICBpZihlID09PSBzKXtcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gaW5kID49IGUgPyAxIDogMDtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSBtYXgoMCxtaW4oMC41LyhlLXMpICsgKGluZC1zKS8oZS1zKSwxKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtdWx0ID0gZWFzZXIobXVsdCk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHR5cGUgPT0gMyl7XHJcbiAgICAgICAgICAgICAgICBpZihlID09PSBzKXtcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gaW5kID49IGUgPyAwIDogMTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSAxIC0gbWF4KDAsbWluKDAuNS8oZS1zKSArIChpbmQtcykvKGUtcyksMSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIG11bHQgPSBlYXNlcihtdWx0KTtcclxuICAgICAgICAgICAgfWVsc2UgaWYodHlwZSA9PSA0KXtcclxuICAgICAgICAgICAgICAgIGlmKGUgPT09IHMpe1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSAwO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdCA9IG1heCgwLG1pbigwLjUvKGUtcykgKyAoaW5kLXMpLyhlLXMpLDEpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZihtdWx0PC41KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdCAqPSAyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdWx0ID0gMSAtIDIqKG11bHQtMC41KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtdWx0ID0gZWFzZXIobXVsdCk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHR5cGUgPT0gNSl7XHJcbiAgICAgICAgICAgICAgICBpZihlID09PSBzKXtcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gMDtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0b3QgPSBlIC0gcztcclxuICAgICAgICAgICAgICAgICAgICAvKmluZCArPSAwLjU7XHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdCA9IC00Lyh0b3QqdG90KSooaW5kKmluZCkrKDQvdG90KSppbmQ7Ki9cclxuICAgICAgICAgICAgICAgICAgICBpbmQgPSBtaW4obWF4KDAsaW5kKzAuNS1zKSxlLXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB4ID0gLXRvdC8yK2luZDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IHRvdC8yO1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSBNYXRoLnNxcnQoMSAtICh4KngpLyhhKmEpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG11bHQgPSBlYXNlcihtdWx0KTtcclxuICAgICAgICAgICAgfWVsc2UgaWYodHlwZSA9PSA2KXtcclxuICAgICAgICAgICAgICAgIGlmKGUgPT09IHMpe1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSAwO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kID0gbWluKG1heCgwLGluZCswLjUtcyksZS1zKTtcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gKDErKE1hdGguY29zKChNYXRoLlBJK01hdGguUEkqMiooaW5kKS8oZS1zKSkpKSkvMjtcclxuICAgICAgICAgICAgICAgICAgICAvKlxyXG4gICAgICAgICAgICAgICAgICAgICBpbmQgPSBNYXRoLm1pbihNYXRoLm1heChzLGluZCksZS0xKTtcclxuICAgICAgICAgICAgICAgICAgICAgbXVsdCA9ICgxKyhNYXRoLmNvcygoTWF0aC5QSStNYXRoLlBJKjIqKGluZC1zKS8oZS0xLXMpKSkpKS8yO1xyXG4gICAgICAgICAgICAgICAgICAgICBtdWx0ID0gTWF0aC5tYXgobXVsdCwoMS8oZS0xLXMpKS8oZS0xLXMpKTsqL1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbXVsdCA9IGVhc2VyKG11bHQpO1xyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZihpbmQgPj0gZmxvb3Iocykpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGluZC1zIDwgMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHQgPSAxIC0gKHMgLSBpbmQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdWx0ID0gbWF4KDAsbWluKGUtaW5kLDEpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtdWx0ID0gZWFzZXIobXVsdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG11bHQqdGhpcy5hLnY7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gVGV4dFNlbGVjdG9yUHJvcChlbGVtLGRhdGEsIGFycil7XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuayA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgICAgICAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VmFsdWUgPSB1cGRhdGVSYW5nZTtcclxuICAgICAgICAgICAgdGhpcy5nZXRNdWx0ID0gZ2V0TXVsdDtcclxuICAgICAgICAgICAgdGhpcy5lbGVtID0gZWxlbTtcclxuICAgICAgICAgICAgdGhpcy5jb21wID0gZWxlbS5jb21wO1xyXG4gICAgICAgICAgICB0aGlzLmZpbmFsUyA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuZmluYWxFID0gMDtcclxuICAgICAgICAgICAgdGhpcy5zID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnMgfHwge2s6MH0sMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICBpZignZScgaW4gZGF0YSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmUgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEuZSwwLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lID0ge3Y6MTAwfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm8gPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEubyB8fCB7azowfSwwLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHRoaXMueGUgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEueGUgfHwge2s6MH0sMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB0aGlzLm5lID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLm5lIHx8IHtrOjB9LDAsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgdGhpcy5hID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLmEsMCwwLjAxLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICBpZih0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaCh0aGlzKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdldFZhbHVlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdldFRleHRTZWxlY3RvclByb3AoZWxlbSwgZGF0YSxhcnIpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFRleHRTZWxlY3RvclByb3AoZWxlbSwgZGF0YSwgYXJyKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIG9iID0ge1xyXG4gICAgICAgIGdldFByb3A6IGdldFByb3AsXHJcbiAgICAgICAgZ2V0RGFzaFByb3A6IGdldERhc2hQcm9wLFxyXG4gICAgICAgIGdldFRleHRTZWxlY3RvclByb3A6IGdldFRleHRTZWxlY3RvclByb3AsXHJcbiAgICAgICAgZ2V0R3JhZGllbnRQcm9wOiBnZXRHcmFkaWVudFByb3BcclxuICAgIH07XHJcbiAgICByZXR1cm4gb2I7XHJcbn0oKSk7XG5mdW5jdGlvbiBTaGFwZVBhdGgoKXtcclxuXHR0aGlzLmMgPSBmYWxzZTtcclxuXHR0aGlzLl9sZW5ndGggPSAwO1xyXG5cdHRoaXMuX21heExlbmd0aCA9IDg7XHJcblx0dGhpcy52ID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMuX21heExlbmd0aH0pO1xyXG5cdHRoaXMubyA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDp0aGlzLl9tYXhMZW5ndGh9KTtcclxuXHR0aGlzLmkgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dGhpcy5fbWF4TGVuZ3RofSk7XHJcbn07XHJcblxyXG5TaGFwZVBhdGgucHJvdG90eXBlLnNldFBhdGhEYXRhID0gZnVuY3Rpb24oY2xvc2VkLCBsZW4pIHtcclxuXHR0aGlzLmMgPSBjbG9zZWQ7XHJcblx0dGhpcy5zZXRMZW5ndGgobGVuKTtcclxuXHR2YXIgaSA9IDA7XHJcblx0d2hpbGUoaSA8IGxlbil7XHJcblx0XHR0aGlzLnZbaV0gPSBwb2ludF9wb29sLm5ld1BvaW50KCk7XHJcblx0XHR0aGlzLm9baV0gPSBwb2ludF9wb29sLm5ld1BvaW50KCk7XHJcblx0XHR0aGlzLmlbaV0gPSBwb2ludF9wb29sLm5ld1BvaW50KCk7XHJcblx0XHRpICs9IDE7XHJcblx0fVxyXG59O1xyXG5cclxuU2hhcGVQYXRoLnByb3RvdHlwZS5zZXRMZW5ndGggPSBmdW5jdGlvbihsZW4pIHtcclxuXHR3aGlsZSh0aGlzLl9tYXhMZW5ndGggPCBsZW4pIHtcclxuXHRcdHRoaXMuZG91YmxlQXJyYXlMZW5ndGgoKTtcclxuXHR9XHJcblx0dGhpcy5fbGVuZ3RoID0gbGVuO1xyXG59XHJcblxyXG5TaGFwZVBhdGgucHJvdG90eXBlLmRvdWJsZUFycmF5TGVuZ3RoID0gZnVuY3Rpb24oKSB7XHJcblx0dGhpcy52ID0gdGhpcy52LmNvbmNhdChBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dGhpcy5fbWF4TGVuZ3RofSkpXHJcblx0dGhpcy5pID0gdGhpcy5pLmNvbmNhdChBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dGhpcy5fbWF4TGVuZ3RofSkpXHJcblx0dGhpcy5vID0gdGhpcy5vLmNvbmNhdChBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dGhpcy5fbWF4TGVuZ3RofSkpXHJcblx0dGhpcy5fbWF4TGVuZ3RoICo9IDI7XHJcbn07XHJcblxyXG5TaGFwZVBhdGgucHJvdG90eXBlLnNldFhZQXQgPSBmdW5jdGlvbih4LCB5LCB0eXBlLCBwb3MsIHJlcGxhY2UpIHtcclxuXHR2YXIgYXJyO1xyXG5cdHRoaXMuX2xlbmd0aCA9IE1hdGgubWF4KHRoaXMuX2xlbmd0aCwgcG9zICsgMSk7XHJcblx0aWYodGhpcy5fbGVuZ3RoID49IHRoaXMuX21heExlbmd0aCkge1xyXG5cdFx0dGhpcy5kb3VibGVBcnJheUxlbmd0aCgpO1xyXG5cdH1cclxuXHRzd2l0Y2godHlwZSl7XHJcblx0XHRjYXNlICd2JzpcclxuXHRcdFx0YXJyID0gdGhpcy52O1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ2knOlxyXG5cdFx0XHRhcnIgPSB0aGlzLmk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAnbyc6XHJcblx0XHRcdGFyciA9IHRoaXMubztcclxuXHRcdFx0YnJlYWs7XHJcblx0fVxyXG5cdGlmKCFhcnJbcG9zXSB8fCAoYXJyW3Bvc10gJiYgIXJlcGxhY2UpKXtcclxuXHRcdGFycltwb3NdID0gcG9pbnRfcG9vbC5uZXdQb2ludCgpO1xyXG5cdH1cclxuXHRhcnJbcG9zXVswXSA9IHg7XHJcblx0YXJyW3Bvc11bMV0gPSB5O1xyXG59O1xyXG5cclxuU2hhcGVQYXRoLnByb3RvdHlwZS5zZXRUcmlwbGVBdCA9IGZ1bmN0aW9uKHZYLHZZLG9YLG9ZLGlYLGlZLHBvcywgcmVwbGFjZSkge1xyXG5cdHRoaXMuc2V0WFlBdCh2WCx2WSwndicscG9zLCByZXBsYWNlKTtcclxuXHR0aGlzLnNldFhZQXQob1gsb1ksJ28nLHBvcywgcmVwbGFjZSk7XHJcblx0dGhpcy5zZXRYWUF0KGlYLGlZLCdpJyxwb3MsIHJlcGxhY2UpO1xyXG59O1xudmFyIFNoYXBlUHJvcGVydHlGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgdmFyIGluaXRGcmFtZSA9IC05OTk5OTk7XHJcblxyXG4gICAgZnVuY3Rpb24gaW50ZXJwb2xhdGVTaGFwZShmcmFtZU51bSwgaXRlcmF0aW9uSW5kZXgsIHByZXZpb3VzVmFsdWUsIGlzQ3VycmVudFJlbmRlcikge1xyXG4gICAgICAgIHZhciBrZXlQcm9wUyxrZXlQcm9wRSxpc0hvbGQ7XHJcbiAgICAgICAgaWYoZnJhbWVOdW0gPCB0aGlzLmtleWZyYW1lc1swXS50LXRoaXMub2Zmc2V0VGltZSl7XHJcbiAgICAgICAgICAgIGtleVByb3BTID0gdGhpcy5rZXlmcmFtZXNbMF0uc1swXTtcclxuICAgICAgICAgICAgaXNIb2xkID0gdHJ1ZTtcclxuICAgICAgICAgICAgaXRlcmF0aW9uSW5kZXggPSAwO1xyXG4gICAgICAgIH1lbHNlIGlmKGZyYW1lTnVtID49IHRoaXMua2V5ZnJhbWVzW3RoaXMua2V5ZnJhbWVzLmxlbmd0aCAtIDFdLnQtdGhpcy5vZmZzZXRUaW1lKXtcclxuICAgICAgICAgICAgaWYodGhpcy5rZXlmcmFtZXNbdGhpcy5rZXlmcmFtZXMubGVuZ3RoIC0gMl0uaCA9PT0gMSl7XHJcbiAgICAgICAgICAgICAgICBrZXlQcm9wUyA9IHRoaXMua2V5ZnJhbWVzW3RoaXMua2V5ZnJhbWVzLmxlbmd0aCAtIDFdLnNbMF07XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAga2V5UHJvcFMgPSB0aGlzLmtleWZyYW1lc1t0aGlzLmtleWZyYW1lcy5sZW5ndGggLSAyXS5lWzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzSG9sZCA9IHRydWU7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHZhciBpID0gaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgICAgIHZhciBsZW4gPSB0aGlzLmtleWZyYW1lcy5sZW5ndGgtIDEsZmxhZyA9IHRydWUsa2V5RGF0YSxuZXh0S2V5RGF0YSwgaiwgakxlbiwgaywga0xlbjtcclxuICAgICAgICAgICAgd2hpbGUoZmxhZyl7XHJcbiAgICAgICAgICAgICAgICBrZXlEYXRhID0gdGhpcy5rZXlmcmFtZXNbaV07XHJcbiAgICAgICAgICAgICAgICBuZXh0S2V5RGF0YSA9IHRoaXMua2V5ZnJhbWVzW2krMV07XHJcbiAgICAgICAgICAgICAgICBpZigobmV4dEtleURhdGEudCAtIHRoaXMub2Zmc2V0VGltZSkgPiBmcmFtZU51bSl7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihpIDwgbGVuIC0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzSG9sZCA9IGtleURhdGEuaCA9PT0gMTtcclxuICAgICAgICAgICAgaXRlcmF0aW9uSW5kZXggPSBpO1xyXG5cclxuICAgICAgICAgICAgdmFyIHBlcmM7XHJcbiAgICAgICAgICAgIGlmKCFpc0hvbGQpe1xyXG4gICAgICAgICAgICAgICAgaWYoZnJhbWVOdW0gPj0gbmV4dEtleURhdGEudC10aGlzLm9mZnNldFRpbWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHBlcmMgPSAxO1xyXG4gICAgICAgICAgICAgICAgfWVsc2UgaWYoZnJhbWVOdW0gPCBrZXlEYXRhLnQtdGhpcy5vZmZzZXRUaW1lKXtcclxuICAgICAgICAgICAgICAgICAgICBwZXJjID0gMDtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmbmM7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoa2V5RGF0YS5fX2ZuY3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbmMgPSBrZXlEYXRhLl9fZm5jdDtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm5jID0gQmV6aWVyRmFjdG9yeS5nZXRCZXppZXJFYXNpbmcoa2V5RGF0YS5vLngsa2V5RGF0YS5vLnksa2V5RGF0YS5pLngsa2V5RGF0YS5pLnkpLmdldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAga2V5RGF0YS5fX2ZuY3QgPSBmbmM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHBlcmMgPSBmbmMoKGZyYW1lTnVtLShrZXlEYXRhLnQtdGhpcy5vZmZzZXRUaW1lKSkvKChuZXh0S2V5RGF0YS50LXRoaXMub2Zmc2V0VGltZSktKGtleURhdGEudC10aGlzLm9mZnNldFRpbWUpKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBrZXlQcm9wRSA9IGtleURhdGEuZVswXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBrZXlQcm9wUyA9IGtleURhdGEuc1swXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgakxlbiA9IHByZXZpb3VzVmFsdWUuX2xlbmd0aDtcclxuICAgICAgICBrTGVuID0ga2V5UHJvcFMuaVswXS5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGhhc01vZGlmaWVkID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIHZlcnRleFZhbHVlO1xyXG4gICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICBmb3Ioaz0wO2s8a0xlbjtrKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGlzSG9sZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmVydGV4VmFsdWUgPSBrZXlQcm9wUy5pW2pdW2tdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHByZXZpb3VzVmFsdWUuaVtqXVtrXSAhPT0gdmVydGV4VmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c1ZhbHVlLmlbal1ba10gPSB2ZXJ0ZXhWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNDdXJyZW50UmVuZGVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnB2Lmlbal1ba10gPSB2ZXJ0ZXhWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNNb2RpZmllZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZlcnRleFZhbHVlID0ga2V5UHJvcFMub1tqXVtrXTtcclxuICAgICAgICAgICAgICAgICAgICBpZihwcmV2aW91c1ZhbHVlLm9bal1ba10gIT09IHZlcnRleFZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZS5vW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGlzQ3VycmVudFJlbmRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wdi5vW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzTW9kaWZpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhWYWx1ZSA9IGtleVByb3BTLnZbal1ba107XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocHJldmlvdXNWYWx1ZS52W2pdW2tdICE9PSB2ZXJ0ZXhWYWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzVmFsdWUudltqXVtrXSA9IHZlcnRleFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihpc0N1cnJlbnRSZW5kZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHYudltqXVtrXSA9IHZlcnRleFZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc01vZGlmaWVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhWYWx1ZSA9IGtleVByb3BTLmlbal1ba10rKGtleVByb3BFLmlbal1ba10ta2V5UHJvcFMuaVtqXVtrXSkqcGVyYztcclxuICAgICAgICAgICAgICAgICAgICBpZihwcmV2aW91c1ZhbHVlLmlbal1ba10gIT09IHZlcnRleFZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZS5pW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGlzQ3VycmVudFJlbmRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wdi5pW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzTW9kaWZpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhWYWx1ZSA9IGtleVByb3BTLm9bal1ba10rKGtleVByb3BFLm9bal1ba10ta2V5UHJvcFMub1tqXVtrXSkqcGVyYztcclxuICAgICAgICAgICAgICAgICAgICBpZihwcmV2aW91c1ZhbHVlLm9bal1ba10gIT09IHZlcnRleFZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZS5vW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGlzQ3VycmVudFJlbmRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wdi5vW2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzTW9kaWZpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhWYWx1ZSA9IGtleVByb3BTLnZbal1ba10rKGtleVByb3BFLnZbal1ba10ta2V5UHJvcFMudltqXVtrXSkqcGVyYztcclxuICAgICAgICAgICAgICAgICAgICBpZihwcmV2aW91c1ZhbHVlLnZbal1ba10gIT09IHZlcnRleFZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZS52W2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGlzQ3VycmVudFJlbmRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wdi52W2pdW2tdID0gdmVydGV4VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzTW9kaWZpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihoYXNNb2RpZmllZCkge1xyXG4gICAgICAgICAgICBwcmV2aW91c1ZhbHVlLmMgPSBrZXlQcm9wUy5jO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpdGVyYXRpb25JbmRleDogaXRlcmF0aW9uSW5kZXgsXHJcbiAgICAgICAgICAgIGhhc01vZGlmaWVkOiBoYXNNb2RpZmllZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbnRlcnBvbGF0ZVNoYXBlQ3VycmVudFRpbWUoKXtcclxuICAgICAgICBpZih0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkID09PSB0aGlzLmZyYW1lSWQpe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIGZyYW1lTnVtID0gdGhpcy5jb21wLnJlbmRlcmVkRnJhbWUgLSB0aGlzLm9mZnNldFRpbWU7XHJcbiAgICAgICAgdmFyIGluaXRUaW1lID0gdGhpcy5rZXlmcmFtZXNbMF0udCAtIHRoaXMub2Zmc2V0VGltZTtcclxuICAgICAgICB2YXIgZW5kVGltZSA9IHRoaXMua2V5ZnJhbWVzW3RoaXMua2V5ZnJhbWVzLmxlbmd0aCAtIDFdLnQgLSB0aGlzLm9mZnNldFRpbWU7XHJcbiAgICAgICAgaWYoISh0aGlzLmxhc3RGcmFtZSAhPT0gaW5pdEZyYW1lICYmICgodGhpcy5sYXN0RnJhbWUgPCBpbml0VGltZSAmJiBmcmFtZU51bSA8IGluaXRUaW1lKSB8fCAodGhpcy5sYXN0RnJhbWUgPiBlbmRUaW1lICYmIGZyYW1lTnVtID4gZW5kVGltZSkpKSl7XHJcbiAgICAgICAgICAgIC8vLy9cclxuICAgICAgICAgICAgdmFyIGkgPSB0aGlzLmxhc3RGcmFtZSA8IGZyYW1lTnVtID8gdGhpcy5fbGFzdEluZGV4IDogMDtcclxuICAgICAgICAgICAgdmFyIHJlbmRlclJlc3VsdCA9IHRoaXMuaW50ZXJwb2xhdGVTaGFwZShmcmFtZU51bSwgaSwgdGhpcy52LCB0cnVlKTtcclxuICAgICAgICAgICAgLy8vL1xyXG4gICAgICAgICAgICB0aGlzLl9sYXN0SW5kZXggPSByZW5kZXJSZXN1bHQuaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gcmVuZGVyUmVzdWx0Lmhhc01vZGlmaWVkO1xyXG4gICAgICAgICAgICBpZihyZW5kZXJSZXN1bHQuaGFzTW9kaWZpZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGF0aHMgPSB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGFzdEZyYW1lID0gZnJhbWVOdW07XHJcbiAgICAgICAgdGhpcy5mcmFtZUlkID0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRTaGFwZVZhbHVlKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZXNldFNoYXBlKCl7XHJcbiAgICAgICAgdGhpcy5wYXRocyA9IHRoaXMubG9jYWxTaGFwZUNvbGxlY3Rpb247XHJcbiAgICAgICAgaWYoIXRoaXMuayl7XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIFNoYXBlUHJvcGVydHkoZWxlbSwgZGF0YSwgdHlwZSl7XHJcbiAgICAgICAgdGhpcy5fX3NoYXBlT2JqZWN0ID0gMTtcclxuICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdGhpcy5rID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICB2YXIgcGF0aERhdGEgPSB0eXBlID09PSAzID8gZGF0YS5wdC5rIDogZGF0YS5rcy5rO1xyXG4gICAgICAgIHRoaXMudiA9IHNoYXBlX3Bvb2wuY2xvbmUocGF0aERhdGEpO1xyXG4gICAgICAgIHRoaXMucHYgPSBzaGFwZV9wb29sLmNsb25lKHRoaXMudik7XHJcbiAgICAgICAgdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbiA9IHNoYXBlQ29sbGVjdGlvbl9wb29sLm5ld1NoYXBlQ29sbGVjdGlvbigpO1xyXG4gICAgICAgIHRoaXMucGF0aHMgPSB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIHRoaXMucGF0aHMuYWRkU2hhcGUodGhpcy52KTtcclxuICAgICAgICB0aGlzLnJlc2V0ID0gcmVzZXRTaGFwZTtcclxuICAgIH1cclxuICAgIFNoYXBlUHJvcGVydHkucHJvdG90eXBlLmludGVycG9sYXRlU2hhcGUgPSBpbnRlcnBvbGF0ZVNoYXBlO1xyXG4gICAgU2hhcGVQcm9wZXJ0eS5wcm90b3R5cGUuZ2V0VmFsdWUgPSBnZXRTaGFwZVZhbHVlO1xyXG5cclxuICAgIGZ1bmN0aW9uIEtleWZyYW1lZFNoYXBlUHJvcGVydHkoZWxlbSxkYXRhLHR5cGUpe1xyXG4gICAgICAgIHRoaXMuX19zaGFwZU9iamVjdCA9IDE7XHJcbiAgICAgICAgdGhpcy5jb21wID0gZWxlbS5jb21wO1xyXG4gICAgICAgIHRoaXMuZWxlbSA9IGVsZW07XHJcbiAgICAgICAgdGhpcy5vZmZzZXRUaW1lID0gZWxlbS5kYXRhLnN0O1xyXG4gICAgICAgIHRoaXMuX2xhc3RJbmRleCA9IDA7XHJcbiAgICAgICAgdGhpcy5rZXlmcmFtZXMgPSB0eXBlID09PSAzID8gZGF0YS5wdC5rIDogZGF0YS5rcy5rO1xyXG4gICAgICAgIHRoaXMuayA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5rZiA9IHRydWU7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMua2V5ZnJhbWVzWzBdLnNbMF0uaS5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGpMZW4gPSB0aGlzLmtleWZyYW1lc1swXS5zWzBdLmlbMF0ubGVuZ3RoO1xyXG4gICAgICAgIHRoaXMudiA9IHNoYXBlX3Bvb2wubmV3U2hhcGUoKTtcclxuICAgICAgICB0aGlzLnYuc2V0UGF0aERhdGEodGhpcy5rZXlmcmFtZXNbMF0uc1swXS5jLCBsZW4pO1xyXG4gICAgICAgIHRoaXMucHYgPSBzaGFwZV9wb29sLmNsb25lKHRoaXMudik7XHJcbiAgICAgICAgdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbiA9IHNoYXBlQ29sbGVjdGlvbl9wb29sLm5ld1NoYXBlQ29sbGVjdGlvbigpO1xyXG4gICAgICAgIHRoaXMucGF0aHMgPSB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIHRoaXMucGF0aHMuYWRkU2hhcGUodGhpcy52KTtcclxuICAgICAgICB0aGlzLmxhc3RGcmFtZSA9IGluaXRGcmFtZTtcclxuICAgICAgICB0aGlzLnJlc2V0ID0gcmVzZXRTaGFwZTtcclxuICAgIH1cclxuICAgIEtleWZyYW1lZFNoYXBlUHJvcGVydHkucHJvdG90eXBlLmdldFZhbHVlID0gaW50ZXJwb2xhdGVTaGFwZUN1cnJlbnRUaW1lO1xyXG4gICAgS2V5ZnJhbWVkU2hhcGVQcm9wZXJ0eS5wcm90b3R5cGUuaW50ZXJwb2xhdGVTaGFwZSA9IGludGVycG9sYXRlU2hhcGU7XHJcblxyXG4gICAgdmFyIEVsbFNoYXBlUHJvcGVydHkgPSAoZnVuY3Rpb24oKXtcclxuXHJcbiAgICAgICAgdmFyIGNQb2ludCA9IHJvdW5kQ29ybmVyO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBjb252ZXJ0RWxsVG9QYXRoKCl7XHJcbiAgICAgICAgICAgIHZhciBwMCA9IHRoaXMucC52WzBdLCBwMSA9IHRoaXMucC52WzFdLCBzMCA9IHRoaXMucy52WzBdLzIsIHMxID0gdGhpcy5zLnZbMV0vMjtcclxuICAgICAgICAgICAgaWYodGhpcy5kICE9PSAzKXtcclxuICAgICAgICAgICAgICAgIHRoaXMudi52WzBdWzBdID0gcDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYudlswXVsxXSA9IHAxLXMxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbMV1bMF0gPSBwMCArIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbMV1bMV0gPSBwMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi52WzJdWzBdID0gcDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYudlsyXVsxXSA9IHAxK3MxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbM11bMF0gPSBwMCAtIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbM11bMV0gPSBwMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzBdWzBdID0gcDAgLSBzMCpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVswXVsxXSA9IHAxIC0gczE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVsxXVswXSA9IHAwICsgczA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVsxXVsxXSA9IHAxIC0gczEqY1BvaW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LmlbMl1bMF0gPSBwMCArIHMwKmNQb2ludDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzJdWzFdID0gcDEgKyBzMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzNdWzBdID0gcDAgLSBzMDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzNdWzFdID0gcDEgKyBzMSpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1swXVswXSA9IHAwICsgczAqY1BvaW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMF1bMV0gPSBwMSAtIHMxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMV1bMF0gPSBwMCArIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMV1bMV0gPSBwMSArIHMxKmNQb2ludDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5vWzJdWzBdID0gcDAgLSBzMCpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1syXVsxXSA9IHAxICsgczE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1szXVswXSA9IHAwIC0gczA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1szXVsxXSA9IHAxIC0gczEqY1BvaW50O1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMudi52WzBdWzBdID0gcDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYudlswXVsxXSA9IHAxLXMxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbMV1bMF0gPSBwMCAtIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbMV1bMV0gPSBwMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi52WzJdWzBdID0gcDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYudlsyXVsxXSA9IHAxK3MxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbM11bMF0gPSBwMCArIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnZbM11bMV0gPSBwMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzBdWzBdID0gcDAgKyBzMCpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVswXVsxXSA9IHAxIC0gczE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVsxXVswXSA9IHAwIC0gczA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuaVsxXVsxXSA9IHAxIC0gczEqY1BvaW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LmlbMl1bMF0gPSBwMCAtIHMwKmNQb2ludDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzJdWzFdID0gcDEgKyBzMTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzNdWzBdID0gcDAgKyBzMDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5pWzNdWzFdID0gcDEgKyBzMSpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1swXVswXSA9IHAwIC0gczAqY1BvaW50O1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMF1bMV0gPSBwMSAtIHMxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMV1bMF0gPSBwMCAtIHMwO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52Lm9bMV1bMV0gPSBwMSArIHMxKmNQb2ludDtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5vWzJdWzBdID0gcDAgKyBzMCpjUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1syXVsxXSA9IHAxICsgczE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1szXVswXSA9IHAwICsgczA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYub1szXVsxXSA9IHAxIC0gczEqY1BvaW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBwcm9jZXNzS2V5cyhmcmFtZU51bSl7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgICAgICAgICAgaWYodGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZCA9PT0gdGhpcy5mcmFtZUlkKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkO1xyXG5cclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0uZ2V0VmFsdWUoZnJhbWVOdW0pO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5tZGYpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLm1kZil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRFbGxUb1BhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIEVsbFNoYXBlUHJvcGVydHkoZWxlbSxkYXRhKSB7XHJcbiAgICAgICAgICAgIC8qdGhpcy52ID0ge1xyXG4gICAgICAgICAgICAgICAgdjogQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOjR9KSxcclxuICAgICAgICAgICAgICAgIGk6IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDo0fSksXHJcbiAgICAgICAgICAgICAgICBvOiBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6NH0pLFxyXG4gICAgICAgICAgICAgICAgYzogdHJ1ZVxyXG4gICAgICAgICAgICB9OyovXHJcbiAgICAgICAgICAgIHRoaXMudiA9IHNoYXBlX3Bvb2wubmV3U2hhcGUoKTtcclxuICAgICAgICAgICAgdGhpcy52LnNldFBhdGhEYXRhKHRydWUsIDQpO1xyXG4gICAgICAgICAgICB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uID0gc2hhcGVDb2xsZWN0aW9uX3Bvb2wubmV3U2hhcGVDb2xsZWN0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMucGF0aHMgPSB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uLmFkZFNoYXBlKHRoaXMudik7XHJcbiAgICAgICAgICAgIHRoaXMuZCA9IGRhdGEuZDtcclxuICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllcyA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW0gPSBlbGVtO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgICAgIHRoaXMuZnJhbWVJZCA9IC0xO1xyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmdldFZhbHVlID0gcHJvY2Vzc0tleXM7XHJcbiAgICAgICAgICAgIHRoaXMuY29udmVydEVsbFRvUGF0aCA9IGNvbnZlcnRFbGxUb1BhdGg7XHJcbiAgICAgICAgICAgIHRoaXMucmVzZXQgPSByZXNldFNoYXBlO1xyXG4gICAgICAgICAgICB0aGlzLnAgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucCwxLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHRoaXMucyA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5zLDEsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5rID0gdHJ1ZTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRFbGxUb1BhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIFN0YXJTaGFwZVByb3BlcnR5ID0gKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBjb252ZXJ0UG9seWdvblRvUGF0aCgpe1xyXG4gICAgICAgICAgICB2YXIgbnVtUHRzID0gTWF0aC5mbG9vcih0aGlzLnB0LnYpO1xyXG4gICAgICAgICAgICB2YXIgYW5nbGUgPSBNYXRoLlBJKjIvbnVtUHRzO1xyXG4gICAgICAgICAgICAvKnRoaXMudi52Lmxlbmd0aCA9IG51bVB0cztcclxuICAgICAgICAgICAgdGhpcy52LmkubGVuZ3RoID0gbnVtUHRzO1xyXG4gICAgICAgICAgICB0aGlzLnYuby5sZW5ndGggPSBudW1QdHM7Ki9cclxuICAgICAgICAgICAgdmFyIHJhZCA9IHRoaXMub3IudjtcclxuICAgICAgICAgICAgdmFyIHJvdW5kbmVzcyA9IHRoaXMub3MudjtcclxuICAgICAgICAgICAgdmFyIHBlcmltU2VnbWVudCA9IDIqTWF0aC5QSSpyYWQvKG51bVB0cyo0KTtcclxuICAgICAgICAgICAgdmFyIGksIGN1cnJlbnRBbmcgPSAtTWF0aC5QSS8gMjtcclxuICAgICAgICAgICAgdmFyIGRpciA9IHRoaXMuZGF0YS5kID09PSAzID8gLTEgOiAxO1xyXG4gICAgICAgICAgICBjdXJyZW50QW5nICs9IHRoaXMuci52O1xyXG4gICAgICAgICAgICB0aGlzLnYuX2xlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgIGZvcihpPTA7aTxudW1QdHM7aSs9MSl7XHJcbiAgICAgICAgICAgICAgICB2YXIgeCA9IHJhZCAqIE1hdGguY29zKGN1cnJlbnRBbmcpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHkgPSByYWQgKiBNYXRoLnNpbihjdXJyZW50QW5nKTtcclxuICAgICAgICAgICAgICAgIHZhciBveCA9IHggPT09IDAgJiYgeSA9PT0gMCA/IDAgOiB5L01hdGguc3FydCh4KnggKyB5KnkpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG95ID0geCA9PT0gMCAmJiB5ID09PSAwID8gMCA6IC14L01hdGguc3FydCh4KnggKyB5KnkpO1xyXG4gICAgICAgICAgICAgICAgeCArPSAgKyB0aGlzLnAudlswXTtcclxuICAgICAgICAgICAgICAgIHkgKz0gICsgdGhpcy5wLnZbMV07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQoeCx5LHgtb3gqcGVyaW1TZWdtZW50KnJvdW5kbmVzcypkaXIseS1veSpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcix4K294KnBlcmltU2VnbWVudCpyb3VuZG5lc3MqZGlyLHkrb3kqcGVyaW1TZWdtZW50KnJvdW5kbmVzcypkaXIsIGksIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgLyp0aGlzLnYudltpXSA9IFt4LHldO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LmlbaV0gPSBbeCtveCpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcix5K295KnBlcmltU2VnbWVudCpyb3VuZG5lc3MqZGlyXTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5vW2ldID0gW3gtb3gqcGVyaW1TZWdtZW50KnJvdW5kbmVzcypkaXIseS1veSpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcl07Ki9cclxuICAgICAgICAgICAgICAgIGN1cnJlbnRBbmcgKz0gYW5nbGUqZGlyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMucGF0aHMubGVuZ3RoID0gMDtcclxuICAgICAgICAgICAgdGhpcy5wYXRoc1swXSA9IHRoaXMudjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGNvbnZlcnRTdGFyVG9QYXRoKCkge1xyXG4gICAgICAgICAgICB2YXIgbnVtUHRzID0gTWF0aC5mbG9vcih0aGlzLnB0LnYpKjI7XHJcbiAgICAgICAgICAgIHZhciBhbmdsZSA9IE1hdGguUEkqMi9udW1QdHM7XHJcbiAgICAgICAgICAgIC8qdGhpcy52LnYubGVuZ3RoID0gbnVtUHRzO1xyXG4gICAgICAgICAgICB0aGlzLnYuaS5sZW5ndGggPSBudW1QdHM7XHJcbiAgICAgICAgICAgIHRoaXMudi5vLmxlbmd0aCA9IG51bVB0czsqL1xyXG4gICAgICAgICAgICB2YXIgbG9uZ0ZsYWcgPSB0cnVlO1xyXG4gICAgICAgICAgICB2YXIgbG9uZ1JhZCA9IHRoaXMub3IudjtcclxuICAgICAgICAgICAgdmFyIHNob3J0UmFkID0gdGhpcy5pci52O1xyXG4gICAgICAgICAgICB2YXIgbG9uZ1JvdW5kID0gdGhpcy5vcy52O1xyXG4gICAgICAgICAgICB2YXIgc2hvcnRSb3VuZCA9IHRoaXMuaXMudjtcclxuICAgICAgICAgICAgdmFyIGxvbmdQZXJpbVNlZ21lbnQgPSAyKk1hdGguUEkqbG9uZ1JhZC8obnVtUHRzKjIpO1xyXG4gICAgICAgICAgICB2YXIgc2hvcnRQZXJpbVNlZ21lbnQgPSAyKk1hdGguUEkqc2hvcnRSYWQvKG51bVB0cyoyKTtcclxuICAgICAgICAgICAgdmFyIGksIHJhZCxyb3VuZG5lc3MscGVyaW1TZWdtZW50LCBjdXJyZW50QW5nID0gLU1hdGguUEkvIDI7XHJcbiAgICAgICAgICAgIGN1cnJlbnRBbmcgKz0gdGhpcy5yLnY7XHJcbiAgICAgICAgICAgIHZhciBkaXIgPSB0aGlzLmRhdGEuZCA9PT0gMyA/IC0xIDogMTtcclxuICAgICAgICAgICAgdGhpcy52Ll9sZW5ndGggPSAwO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bnVtUHRzO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgcmFkID0gbG9uZ0ZsYWcgPyBsb25nUmFkIDogc2hvcnRSYWQ7XHJcbiAgICAgICAgICAgICAgICByb3VuZG5lc3MgPSBsb25nRmxhZyA/IGxvbmdSb3VuZCA6IHNob3J0Um91bmQ7XHJcbiAgICAgICAgICAgICAgICBwZXJpbVNlZ21lbnQgPSBsb25nRmxhZyA/IGxvbmdQZXJpbVNlZ21lbnQgOiBzaG9ydFBlcmltU2VnbWVudDtcclxuICAgICAgICAgICAgICAgIHZhciB4ID0gcmFkICogTWF0aC5jb3MoY3VycmVudEFuZyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgeSA9IHJhZCAqIE1hdGguc2luKGN1cnJlbnRBbmcpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG94ID0geCA9PT0gMCAmJiB5ID09PSAwID8gMCA6IHkvTWF0aC5zcXJ0KHgqeCArIHkqeSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgb3kgPSB4ID09PSAwICYmIHkgPT09IDAgPyAwIDogLXgvTWF0aC5zcXJ0KHgqeCArIHkqeSk7XHJcbiAgICAgICAgICAgICAgICB4ICs9ICArIHRoaXMucC52WzBdO1xyXG4gICAgICAgICAgICAgICAgeSArPSAgKyB0aGlzLnAudlsxXTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdCh4LHkseC1veCpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcix5LW95KnBlcmltU2VnbWVudCpyb3VuZG5lc3MqZGlyLHgrb3gqcGVyaW1TZWdtZW50KnJvdW5kbmVzcypkaXIseStveSpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpciwgaSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgLyp0aGlzLnYudltpXSA9IFt4LHldO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LmlbaV0gPSBbeCtveCpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcix5K295KnBlcmltU2VnbWVudCpyb3VuZG5lc3MqZGlyXTtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5vW2ldID0gW3gtb3gqcGVyaW1TZWdtZW50KnJvdW5kbmVzcypkaXIseS1veSpwZXJpbVNlZ21lbnQqcm91bmRuZXNzKmRpcl07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnYuX2xlbmd0aCA9IG51bVB0czsqL1xyXG4gICAgICAgICAgICAgICAgbG9uZ0ZsYWcgPSAhbG9uZ0ZsYWc7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50QW5nICs9IGFuZ2xlKmRpcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcHJvY2Vzc0tleXMoKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQgPT09IHRoaXMuZnJhbWVJZCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5mcmFtZUlkID0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZDtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoO1xyXG5cclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0uZ2V0VmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5tZGYpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb252ZXJ0VG9QYXRoKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBTdGFyU2hhcGVQcm9wZXJ0eShlbGVtLGRhdGEpIHtcclxuICAgICAgICAgICAgLyp0aGlzLnYgPSB7XHJcbiAgICAgICAgICAgICAgICB2OiBbXSxcclxuICAgICAgICAgICAgICAgIGk6IFtdLFxyXG4gICAgICAgICAgICAgICAgbzogW10sXHJcbiAgICAgICAgICAgICAgICBjOiB0cnVlXHJcbiAgICAgICAgICAgIH07Ki9cclxuICAgICAgICAgICAgdGhpcy52ID0gc2hhcGVfcG9vbC5uZXdTaGFwZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnYuc2V0UGF0aERhdGEodHJ1ZSwgMCk7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbSA9IGVsZW07XHJcbiAgICAgICAgICAgIHRoaXMuY29tcCA9IGVsZW0uY29tcDtcclxuICAgICAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5mcmFtZUlkID0gLTE7XHJcbiAgICAgICAgICAgIHRoaXMuZCA9IGRhdGEuZDtcclxuICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllcyA9IFtdO1xyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmdldFZhbHVlID0gcHJvY2Vzc0tleXM7XHJcbiAgICAgICAgICAgIHRoaXMucmVzZXQgPSByZXNldFNoYXBlO1xyXG4gICAgICAgICAgICBpZihkYXRhLnN5ID09PSAxKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXIgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEuaXIsMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pcyA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5pcywwLDAuMDEsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRUb1BhdGggPSBjb252ZXJ0U3RhclRvUGF0aDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udmVydFRvUGF0aCA9IGNvbnZlcnRQb2x5Z29uVG9QYXRoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMucHQgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucHQsMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB0aGlzLnAgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucCwxLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHRoaXMuciA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5yLDAsZGVnVG9SYWRzLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB0aGlzLm9yID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLm9yLDAsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgdGhpcy5vcyA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5vcywwLDAuMDEsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHRoaXMubG9jYWxTaGFwZUNvbGxlY3Rpb24gPSBzaGFwZUNvbGxlY3Rpb25fcG9vbC5uZXdTaGFwZUNvbGxlY3Rpb24oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbi5hZGRTaGFwZSh0aGlzLnYpO1xyXG4gICAgICAgICAgICB0aGlzLnBhdGhzID0gdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbjtcclxuICAgICAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5rID0gdHJ1ZTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRUb1BhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIFJlY3RTaGFwZVByb3BlcnR5ID0gKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIHByb2Nlc3NLZXlzKGZyYW1lTnVtKXtcclxuICAgICAgICAgICAgaWYodGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZCA9PT0gdGhpcy5mcmFtZUlkKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkO1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGg7XHJcblxyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZShmcmFtZU51bSk7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLm1kZil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRoaXMubWRmKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udmVydFJlY3RUb1BhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGNvbnZlcnRSZWN0VG9QYXRoKCl7XHJcbiAgICAgICAgICAgIHZhciBwMCA9IHRoaXMucC52WzBdLCBwMSA9IHRoaXMucC52WzFdLCB2MCA9IHRoaXMucy52WzBdLzIsIHYxID0gdGhpcy5zLnZbMV0vMjtcclxuICAgICAgICAgICAgdmFyIHJvdW5kID0gYm1fbWluKHYwLHYxLHRoaXMuci52KTtcclxuICAgICAgICAgICAgdmFyIGNQb2ludCA9IHJvdW5kKigxLXJvdW5kQ29ybmVyKTtcclxuICAgICAgICAgICAgdGhpcy52Ll9sZW5ndGggPSAwO1xyXG5cclxuICAgICAgICAgICAgaWYodGhpcy5kID09PSAyIHx8IHRoaXMuZCA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwK3YwLCBwMS12MStyb3VuZCxwMCt2MCwgcDEtdjErcm91bmQscDArdjAscDEtdjErY1BvaW50LDAsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwK3YwLCBwMSt2MS1yb3VuZCxwMCt2MCwgcDErdjEtY1BvaW50LHAwK3YwLCBwMSt2MS1yb3VuZCwxLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIGlmKHJvdW5kIT09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMCt2MC1yb3VuZCwgcDErdjEscDArdjAtcm91bmQscDErdjEscDArdjAtY1BvaW50LHAxK3YxLDIsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMC12MCtyb3VuZCxwMSt2MSxwMC12MCtjUG9pbnQscDErdjEscDAtdjArcm91bmQscDErdjEsMywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwLXYwLHAxK3YxLXJvdW5kLHAwLXYwLHAxK3YxLXJvdW5kLHAwLXYwLHAxK3YxLWNQb2ludCw0LCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDAtdjAscDEtdjErcm91bmQscDAtdjAscDEtdjErY1BvaW50LHAwLXYwLHAxLXYxK3JvdW5kLDUsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMC12MCtyb3VuZCxwMS12MSxwMC12MCtyb3VuZCxwMS12MSxwMC12MCtjUG9pbnQscDEtdjEsNiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwK3YwLXJvdW5kLHAxLXYxLHAwK3YwLWNQb2ludCxwMS12MSxwMCt2MC1yb3VuZCxwMS12MSw3LCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwLXYwLHAxK3YxLHAwLXYwK2NQb2ludCxwMSt2MSxwMC12MCxwMSt2MSwyKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDAtdjAscDEtdjEscDAtdjAscDEtdjErY1BvaW50LHAwLXYwLHAxLXYxLDMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMCt2MCxwMS12MStyb3VuZCxwMCt2MCxwMS12MStjUG9pbnQscDArdjAscDEtdjErcm91bmQsMCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBpZihyb3VuZCE9PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDArdjAtcm91bmQscDEtdjEscDArdjAtcm91bmQscDEtdjEscDArdjAtY1BvaW50LHAxLXYxLDEsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMC12MCtyb3VuZCxwMS12MSxwMC12MCtjUG9pbnQscDEtdjEscDAtdjArcm91bmQscDEtdjEsMiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwLXYwLHAxLXYxK3JvdW5kLHAwLXYwLHAxLXYxK3JvdW5kLHAwLXYwLHAxLXYxK2NQb2ludCwzLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDAtdjAscDErdjEtcm91bmQscDAtdjAscDErdjEtY1BvaW50LHAwLXYwLHAxK3YxLXJvdW5kLDQsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMC12MCtyb3VuZCxwMSt2MSxwMC12MCtyb3VuZCxwMSt2MSxwMC12MCtjUG9pbnQscDErdjEsNSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwK3YwLXJvdW5kLHAxK3YxLHAwK3YwLWNQb2ludCxwMSt2MSxwMCt2MC1yb3VuZCxwMSt2MSw2LCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDArdjAscDErdjEtcm91bmQscDArdjAscDErdjEtcm91bmQscDArdjAscDErdjEtY1BvaW50LDcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnYuc2V0VHJpcGxlQXQocDAtdjAscDEtdjEscDAtdjArY1BvaW50LHAxLXYxLHAwLXYwLHAxLXYxLDEsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudi5zZXRUcmlwbGVBdChwMC12MCxwMSt2MSxwMC12MCxwMSt2MS1jUG9pbnQscDAtdjAscDErdjEsMiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52LnNldFRyaXBsZUF0KHAwK3YwLHAxK3YxLHAwK3YwLWNQb2ludCxwMSt2MSxwMCt2MCxwMSt2MSwzLCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBSZWN0U2hhcGVQcm9wZXJ0eShlbGVtLGRhdGEpIHtcclxuICAgICAgICAgICAgdGhpcy52ID0gc2hhcGVfcG9vbC5uZXdTaGFwZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnYuYyA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMubG9jYWxTaGFwZUNvbGxlY3Rpb24gPSBzaGFwZUNvbGxlY3Rpb25fcG9vbC5uZXdTaGFwZUNvbGxlY3Rpb24oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbi5hZGRTaGFwZSh0aGlzLnYpO1xyXG4gICAgICAgICAgICB0aGlzLnBhdGhzID0gdGhpcy5sb2NhbFNoYXBlQ29sbGVjdGlvbjtcclxuICAgICAgICAgICAgdGhpcy5lbGVtID0gZWxlbTtcclxuICAgICAgICAgICAgdGhpcy5jb21wID0gZWxlbS5jb21wO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSWQgPSAtMTtcclxuICAgICAgICAgICAgdGhpcy5kID0gZGF0YS5kO1xyXG4gICAgICAgICAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VmFsdWUgPSBwcm9jZXNzS2V5cztcclxuICAgICAgICAgICAgdGhpcy5jb252ZXJ0UmVjdFRvUGF0aCA9IGNvbnZlcnRSZWN0VG9QYXRoO1xyXG4gICAgICAgICAgICB0aGlzLnJlc2V0ID0gcmVzZXRTaGFwZTtcclxuICAgICAgICAgICAgdGhpcy5wID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnAsMSwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB0aGlzLnMgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEucywxLDAsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHRoaXMuciA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS5yLDAsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5rID0gdHJ1ZTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRSZWN0VG9QYXRoKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGdldFNoYXBlUHJvcChlbGVtLGRhdGEsdHlwZSwgYXJyKXtcclxuICAgICAgICB2YXIgcHJvcDtcclxuICAgICAgICBpZih0eXBlID09PSAzIHx8IHR5cGUgPT09IDQpe1xyXG4gICAgICAgICAgICB2YXIgZGF0YVByb3AgPSB0eXBlID09PSAzID8gZGF0YS5wdCA6IGRhdGEua3M7XHJcbiAgICAgICAgICAgIHZhciBrZXlzID0gZGF0YVByb3AuaztcclxuICAgICAgICAgICAgaWYoZGF0YVByb3AuYSA9PT0gMSB8fCBrZXlzLmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICBwcm9wID0gbmV3IEtleWZyYW1lZFNoYXBlUHJvcGVydHkoZWxlbSwgZGF0YSwgdHlwZSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgcHJvcCA9IG5ldyBTaGFwZVByb3BlcnR5KGVsZW0sIGRhdGEsIHR5cGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2UgaWYodHlwZSA9PT0gNSl7XHJcbiAgICAgICAgICAgIHByb3AgPSBuZXcgUmVjdFNoYXBlUHJvcGVydHkoZWxlbSwgZGF0YSk7XHJcbiAgICAgICAgfWVsc2UgaWYodHlwZSA9PT0gNil7XHJcbiAgICAgICAgICAgIHByb3AgPSBuZXcgRWxsU2hhcGVQcm9wZXJ0eShlbGVtLCBkYXRhKTtcclxuICAgICAgICB9ZWxzZSBpZih0eXBlID09PSA3KXtcclxuICAgICAgICAgICAgcHJvcCA9IG5ldyBTdGFyU2hhcGVQcm9wZXJ0eShlbGVtLCBkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYocHJvcC5rKXtcclxuICAgICAgICAgICAgYXJyLnB1c2gocHJvcCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwcm9wO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldENvbnN0cnVjdG9yRnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIFNoYXBlUHJvcGVydHk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0S2V5ZnJhbWVkQ29uc3RydWN0b3JGdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gS2V5ZnJhbWVkU2hhcGVQcm9wZXJ0eTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgb2IgPSB7fTtcclxuICAgIG9iLmdldFNoYXBlUHJvcCA9IGdldFNoYXBlUHJvcDtcclxuICAgIG9iLmdldENvbnN0cnVjdG9yRnVuY3Rpb24gPSBnZXRDb25zdHJ1Y3RvckZ1bmN0aW9uO1xyXG4gICAgb2IuZ2V0S2V5ZnJhbWVkQ29uc3RydWN0b3JGdW5jdGlvbiA9IGdldEtleWZyYW1lZENvbnN0cnVjdG9yRnVuY3Rpb247XHJcbiAgICByZXR1cm4gb2I7XHJcbn0oKSk7XG52YXIgU2hhcGVNb2RpZmllcnMgPSAoZnVuY3Rpb24oKXtcclxuICAgIHZhciBvYiA9IHt9O1xyXG4gICAgdmFyIG1vZGlmaWVycyA9IHt9O1xyXG4gICAgb2IucmVnaXN0ZXJNb2RpZmllciA9IHJlZ2lzdGVyTW9kaWZpZXI7XHJcbiAgICBvYi5nZXRNb2RpZmllciA9IGdldE1vZGlmaWVyO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJlZ2lzdGVyTW9kaWZpZXIobm0sZmFjdG9yeSl7XHJcbiAgICAgICAgaWYoIW1vZGlmaWVyc1tubV0pe1xyXG4gICAgICAgICAgICBtb2RpZmllcnNbbm1dID0gZmFjdG9yeTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TW9kaWZpZXIobm0sZWxlbSwgZGF0YSwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgICAgIHJldHVybiBuZXcgbW9kaWZpZXJzW25tXShlbGVtLCBkYXRhLCBkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG9iO1xyXG59KCkpO1xyXG5cclxuZnVuY3Rpb24gU2hhcGVNb2RpZmllcigpe31cclxuU2hhcGVNb2RpZmllci5wcm90b3R5cGUuaW5pdE1vZGlmaWVyUHJvcGVydGllcyA9IGZ1bmN0aW9uKCl7fTtcclxuU2hhcGVNb2RpZmllci5wcm90b3R5cGUuYWRkU2hhcGVUb01vZGlmaWVyID0gZnVuY3Rpb24oKXt9O1xyXG5TaGFwZU1vZGlmaWVyLnByb3RvdHlwZS5hZGRTaGFwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgaWYoIXRoaXMuY2xvc2VkKXtcclxuICAgICAgICB0aGlzLnNoYXBlcy5wdXNoKHtzaGFwZTpkYXRhLnNoLCBkYXRhOiBkYXRhLCBsb2NhbFNoYXBlQ29sbGVjdGlvbjpzaGFwZUNvbGxlY3Rpb25fcG9vbC5uZXdTaGFwZUNvbGxlY3Rpb24oKX0pO1xyXG4gICAgICAgIHRoaXMuYWRkU2hhcGVUb01vZGlmaWVyKGRhdGEuc2gpO1xyXG4gICAgfVxyXG59XHJcblNoYXBlTW9kaWZpZXIucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbihlbGVtLGRhdGEsZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdGhpcy5lbGVtID0gZWxlbTtcclxuICAgIHRoaXMuZnJhbWVJZCA9IC0xO1xyXG4gICAgdGhpcy5zaGFwZXMgPSBbXTtcclxuICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXMgPSBbXTtcclxuICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICB0aGlzLmNsb3NlZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5rID0gZmFsc2U7XHJcbiAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICB0aGlzLmluaXRNb2RpZmllclByb3BlcnRpZXMoZWxlbSxkYXRhKTtcclxuICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKXtcclxuICAgICAgICB0aGlzLmsgPSB0cnVlO1xyXG4gICAgICAgIGR5bmFtaWNQcm9wZXJ0aWVzLnB1c2godGhpcyk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLmdldFZhbHVlKHRydWUpO1xyXG4gICAgfVxyXG59XG5mdW5jdGlvbiBUcmltTW9kaWZpZXIoKXt9O1xyXG5leHRlbmRQcm90b3R5cGUoU2hhcGVNb2RpZmllcixUcmltTW9kaWZpZXIpO1xyXG5UcmltTW9kaWZpZXIucHJvdG90eXBlLnByb2Nlc3NLZXlzID0gZnVuY3Rpb24oZm9yY2VSZW5kZXIpe1xyXG4gICAgaWYodGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZCA9PT0gdGhpcy5mcmFtZUlkICYmICFmb3JjZVJlbmRlcil7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5tZGYgPSBmb3JjZVJlbmRlciA/IHRydWUgOiBmYWxzZTtcclxuICAgIHRoaXMuZnJhbWVJZCA9IHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQ7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGg7XHJcblxyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLmdldFZhbHVlKCk7XHJcbiAgICAgICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5tZGYpe1xyXG4gICAgICAgICAgICB0aGlzLm1kZiA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYodGhpcy5tZGYgfHwgZm9yY2VSZW5kZXIpe1xyXG4gICAgICAgIHZhciBvID0gKHRoaXMuby52JTM2MCkvMzYwO1xyXG4gICAgICAgIGlmKG8gPCAwKXtcclxuICAgICAgICAgICAgbyArPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcyA9IHRoaXMucy52ICsgbztcclxuICAgICAgICB2YXIgZSA9IHRoaXMuZS52ICsgbztcclxuICAgICAgICBpZihzID09IGUpe1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYocz5lKXtcclxuICAgICAgICAgICAgdmFyIF9zID0gcztcclxuICAgICAgICAgICAgcyA9IGU7XHJcbiAgICAgICAgICAgIGUgPSBfcztcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zVmFsdWUgPSBzO1xyXG4gICAgICAgIHRoaXMuZVZhbHVlID0gZTtcclxuICAgICAgICB0aGlzLm9WYWx1ZSA9IG87XHJcbiAgICB9XHJcbn1cclxuVHJpbU1vZGlmaWVyLnByb3RvdHlwZS5pbml0TW9kaWZpZXJQcm9wZXJ0aWVzID0gZnVuY3Rpb24oZWxlbSxkYXRhKXtcclxuICAgIHRoaXMuc1ZhbHVlID0gMDtcclxuICAgIHRoaXMuZVZhbHVlID0gMDtcclxuICAgIHRoaXMub1ZhbHVlID0gMDtcclxuICAgIHRoaXMuZ2V0VmFsdWUgPSB0aGlzLnByb2Nlc3NLZXlzO1xyXG4gICAgdGhpcy5zID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnMsMCwwLjAxLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5lID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLmUsMCwwLjAxLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5vID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLm8sMCwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5tID0gZGF0YS5tO1xyXG4gICAgaWYoIXRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKXtcclxuICAgICAgICB0aGlzLmdldFZhbHVlKHRydWUpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuVHJpbU1vZGlmaWVyLnByb3RvdHlwZS5jYWxjdWxhdGVTaGFwZUVkZ2VzID0gZnVuY3Rpb24ocywgZSwgc2hhcGVMZW5ndGgsIGFkZGVkTGVuZ3RoLCB0b3RhbE1vZGlmaWVyTGVuZ3RoKSB7XHJcbiAgICB2YXIgc2VnbWVudHMgPSBbXVxyXG4gICAgaWYoZSA8PSAxKXtcclxuICAgICAgICBzZWdtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAgczogcyxcclxuICAgICAgICAgICAgZTogZVxyXG4gICAgICAgIH0pXHJcbiAgICB9ZWxzZSBpZihzID49IDEpe1xyXG4gICAgICAgIHNlZ21lbnRzLnB1c2goe1xyXG4gICAgICAgICAgICBzOiBzIC0gMSxcclxuICAgICAgICAgICAgZTogZSAtIDFcclxuICAgICAgICB9KVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgc2VnbWVudHMucHVzaCh7XHJcbiAgICAgICAgICAgIHM6IHMsXHJcbiAgICAgICAgICAgIGU6IDFcclxuICAgICAgICB9KVxyXG4gICAgICAgIHNlZ21lbnRzLnB1c2goe1xyXG4gICAgICAgICAgICBzOiAwLFxyXG4gICAgICAgICAgICBlOiBlIC0gMVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICB2YXIgc2hhcGVTZWdtZW50cyA9IFtdO1xyXG4gICAgdmFyIGksIGxlbiA9IHNlZ21lbnRzLmxlbmd0aCwgc2VnbWVudE9iO1xyXG4gICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICBzZWdtZW50T2IgPSBzZWdtZW50c1tpXTtcclxuICAgICAgICBpZiAoc2VnbWVudE9iLmUgKiB0b3RhbE1vZGlmaWVyTGVuZ3RoIDwgYWRkZWRMZW5ndGggfHwgc2VnbWVudE9iLnMgKiB0b3RhbE1vZGlmaWVyTGVuZ3RoID4gYWRkZWRMZW5ndGggKyBzaGFwZUxlbmd0aCkge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgc2hhcGVTLCBzaGFwZUU7XHJcbiAgICAgICAgICAgIGlmKHNlZ21lbnRPYi5zICogdG90YWxNb2RpZmllckxlbmd0aCA8PSBhZGRlZExlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgc2hhcGVTID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNoYXBlUyA9IChzZWdtZW50T2IucyAqIHRvdGFsTW9kaWZpZXJMZW5ndGggLSBhZGRlZExlbmd0aCkgLyBzaGFwZUxlbmd0aDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihzZWdtZW50T2IuZSAqIHRvdGFsTW9kaWZpZXJMZW5ndGggPj0gYWRkZWRMZW5ndGggKyBzaGFwZUxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgc2hhcGVFID0gMTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNoYXBlRSA9ICgoc2VnbWVudE9iLmUgKiB0b3RhbE1vZGlmaWVyTGVuZ3RoIC0gYWRkZWRMZW5ndGgpIC8gc2hhcGVMZW5ndGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHNoYXBlU2VnbWVudHMucHVzaChbc2hhcGVTLCBzaGFwZUVdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZighc2hhcGVTZWdtZW50cy5sZW5ndGgpe1xyXG4gICAgICAgIHNoYXBlU2VnbWVudHMucHVzaChbMCwwXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2hhcGVTZWdtZW50cztcclxufVxyXG5cclxuVHJpbU1vZGlmaWVyLnByb3RvdHlwZS5wcm9jZXNzU2hhcGVzID0gZnVuY3Rpb24oZmlyc3RGcmFtZSl7XHJcbiAgICB2YXIgc2hhcGVQYXRocztcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLnNoYXBlcy5sZW5ndGg7XHJcbiAgICB2YXIgaiwgakxlbjtcclxuICAgIHZhciBzID0gdGhpcy5zVmFsdWU7XHJcbiAgICB2YXIgZSA9IHRoaXMuZVZhbHVlO1xyXG4gICAgdmFyIHBhdGhzRGF0YSxwYXRoRGF0YSwgdG90YWxTaGFwZUxlbmd0aCwgdG90YWxNb2RpZmllckxlbmd0aCA9IDA7XHJcblxyXG4gICAgaWYoZSA9PT0gcyl7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgdGhpcy5zaGFwZXNbaV0ubG9jYWxTaGFwZUNvbGxlY3Rpb24ucmVsZWFzZVNoYXBlcygpO1xyXG4gICAgICAgICAgICB0aGlzLnNoYXBlc1tpXS5zaGFwZS5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnNoYXBlc1tpXS5zaGFwZS5wYXRocyA9IHRoaXMuc2hhcGVzW2ldLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSBpZighKChlID09PSAxICYmIHMgPT09IDApIHx8IChlPT09MCAmJiBzID09PSAxKSkpe1xyXG4gICAgICAgIHZhciBzZWdtZW50cyA9IFtdLCBzaGFwZURhdGEsIGxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHNoYXBlRGF0YSA9IHRoaXMuc2hhcGVzW2ldO1xyXG4gICAgICAgICAgICBpZighc2hhcGVEYXRhLnNoYXBlLm1kZiAmJiAhdGhpcy5tZGYgJiYgIWZpcnN0RnJhbWUgJiYgdGhpcy5tICE9PSAyKXtcclxuICAgICAgICAgICAgICAgIHNoYXBlRGF0YS5zaGFwZS5wYXRocyA9IHNoYXBlRGF0YS5sb2NhbFNoYXBlQ29sbGVjdGlvbjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNoYXBlUGF0aHMgPSBzaGFwZURhdGEuc2hhcGUucGF0aHM7XHJcbiAgICAgICAgICAgICAgICBqTGVuID0gc2hhcGVQYXRocy5fbGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgdG90YWxTaGFwZUxlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgICAgICBpZighc2hhcGVEYXRhLnNoYXBlLm1kZiAmJiBzaGFwZURhdGEucGF0aHNEYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICB0b3RhbFNoYXBlTGVuZ3RoID0gc2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhzRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoRGF0YSA9IGJlei5nZXRTZWdtZW50c0xlbmd0aChzaGFwZVBhdGhzLnNoYXBlc1tqXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhzRGF0YS5wdXNoKHBhdGhEYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxTaGFwZUxlbmd0aCArPSBwYXRoRGF0YS50b3RhbExlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgc2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGggPSB0b3RhbFNoYXBlTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIHNoYXBlRGF0YS5wYXRoc0RhdGEgPSBwYXRoc0RhdGE7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdG90YWxNb2RpZmllckxlbmd0aCArPSB0b3RhbFNoYXBlTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgc2hhcGVEYXRhLnNoYXBlLm1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHNoYXBlUyA9IHMsIHNoYXBlRSA9IGUsIGFkZGVkTGVuZ3RoID0gMDtcclxuICAgICAgICB2YXIgaiwgakxlbjtcclxuICAgICAgICBmb3IoaSA9IGxlbiAtIDE7IGkgPj0gMDsgaSAtPSAxKXtcclxuICAgICAgICAgICAgc2hhcGVEYXRhID0gdGhpcy5zaGFwZXNbaV07XHJcbiAgICAgICAgICAgIGlmIChzaGFwZURhdGEuc2hhcGUubWRmKSB7XHJcbiAgICAgICAgICAgICAgICBsb2NhbFNoYXBlQ29sbGVjdGlvbiA9IHNoYXBlRGF0YS5sb2NhbFNoYXBlQ29sbGVjdGlvbjtcclxuICAgICAgICAgICAgICAgIGxvY2FsU2hhcGVDb2xsZWN0aW9uLnJlbGVhc2VTaGFwZXMoKTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMubSA9PT0gMiAmJiBsZW4gPiAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVkZ2VzID0gdGhpcy5jYWxjdWxhdGVTaGFwZUVkZ2VzKHMsIGUsIHNoYXBlRGF0YS50b3RhbFNoYXBlTGVuZ3RoLCBhZGRlZExlbmd0aCwgdG90YWxNb2RpZmllckxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYWRkZWRMZW5ndGggKz0gc2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGVkZ2VzID0gW1tzaGFwZVMsIHNoYXBlRV1dXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBqTGVuID0gZWRnZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGpMZW47IGogKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNoYXBlUyA9IGVkZ2VzW2pdWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIHNoYXBlRSA9IGVkZ2VzW2pdWzFdO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlZ21lbnRzLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoc2hhcGVFIDw9IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWdtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHM6c2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGggKiBzaGFwZVMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlOnNoYXBlRGF0YS50b3RhbFNoYXBlTGVuZ3RoICogc2hhcGVFXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoc2hhcGVTID49IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWdtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHM6c2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGggKiAoc2hhcGVTIC0gMSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlOnNoYXBlRGF0YS50b3RhbFNoYXBlTGVuZ3RoICogKHNoYXBlRSAtIDEpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlZ21lbnRzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgczpzaGFwZURhdGEudG90YWxTaGFwZUxlbmd0aCAqIHNoYXBlUyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGU6c2hhcGVEYXRhLnRvdGFsU2hhcGVMZW5ndGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VnbWVudHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzOjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlOnNoYXBlRGF0YS50b3RhbFNoYXBlTGVuZ3RoKihzaGFwZUUgLSAxKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3U2hhcGVzRGF0YSA9IHRoaXMuYWRkU2hhcGVzKHNoYXBlRGF0YSxzZWdtZW50c1swXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlZ21lbnRzWzBdLnMgIT09IHNlZ21lbnRzWzBdLmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RQb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHNlZ21lbnRzLmxlbmd0aCA+IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoc2hhcGVEYXRhLnNoYXBlLnYuYyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RTaGFwZSA9IG5ld1NoYXBlc0RhdGEucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRQYXRocyhuZXdTaGFwZXNEYXRhLCBsb2NhbFNoYXBlQ29sbGVjdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2hhcGVzRGF0YSA9IHRoaXMuYWRkU2hhcGVzKHNoYXBlRGF0YSxzZWdtZW50c1sxXSwgbGFzdFNoYXBlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRQYXRocyhuZXdTaGFwZXNEYXRhLCBsb2NhbFNoYXBlQ29sbGVjdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2hhcGVzRGF0YSA9IHRoaXMuYWRkU2hhcGVzKHNoYXBlRGF0YSxzZWdtZW50c1sxXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkUGF0aHMobmV3U2hhcGVzRGF0YSwgbG9jYWxTaGFwZUNvbGxlY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNoYXBlRGF0YS5zaGFwZS5wYXRocyA9IGxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIGlmKHRoaXMubWRmKXtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICB0aGlzLnNoYXBlc1tpXS5zaGFwZS5tZGYgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKCF0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aCl7XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuVHJpbU1vZGlmaWVyLnByb3RvdHlwZS5hZGRQYXRocyA9IGZ1bmN0aW9uKG5ld1BhdGhzLCBsb2NhbFNoYXBlQ29sbGVjdGlvbikge1xyXG4gICAgdmFyIGksIGxlbiA9IG5ld1BhdGhzLmxlbmd0aDtcclxuICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgbG9jYWxTaGFwZUNvbGxlY3Rpb24uYWRkU2hhcGUobmV3UGF0aHNbaV0pXHJcbiAgICB9XHJcbn1cclxuXHJcblRyaW1Nb2RpZmllci5wcm90b3R5cGUuYWRkU2VnbWVudCA9IGZ1bmN0aW9uKHB0MSxwdDIscHQzLHB0NCxzaGFwZVBhdGgscG9zLCBuZXdTaGFwZSkge1xyXG4gICAgLypjb25zb2xlLmxvZyhwdDEsICd2ZXJ0ZXg6IHYsIGF0OiAnLCBwb3MpO1xyXG4gICAgY29uc29sZS5sb2cocHQyLCAndmVydGV4OiBvLCBhdDogJywgcG9zKTtcclxuICAgIGNvbnNvbGUubG9nKHB0MywgJ3ZlcnRleDogaSwgYXQ6ICcsIHBvcyArIDEpO1xyXG4gICAgY29uc29sZS5sb2cocHQ0LCAndmVydGV4OiB2LCBhdDogJywgcG9zICsgMSk7XHJcbiAgICBjb25zb2xlLmxvZygnbmV3U2hhcGU6ICcsIG5ld1NoYXBlKTsqL1xyXG4gICAgc2hhcGVQYXRoLnNldFhZQXQocHQyWzBdLHB0MlsxXSwnbycscG9zKTtcclxuICAgIHNoYXBlUGF0aC5zZXRYWUF0KHB0M1swXSxwdDNbMV0sJ2knLHBvcyArIDEpO1xyXG4gICAgaWYobmV3U2hhcGUpe1xyXG4gICAgICAgIHNoYXBlUGF0aC5zZXRYWUF0KHB0MVswXSxwdDFbMV0sJ3YnLHBvcyk7XHJcbiAgICB9XHJcbiAgICBzaGFwZVBhdGguc2V0WFlBdChwdDRbMF0scHQ0WzFdLCd2Jyxwb3MgKyAxKTtcclxufVxyXG5cclxuVHJpbU1vZGlmaWVyLnByb3RvdHlwZS5hZGRTaGFwZXMgPSBmdW5jdGlvbihzaGFwZURhdGEsIHNoYXBlU2VnbWVudCwgc2hhcGVQYXRoKXtcclxuICAgIHZhciBwYXRoc0RhdGEgPSBzaGFwZURhdGEucGF0aHNEYXRhO1xyXG4gICAgdmFyIHNoYXBlUGF0aHMgPSBzaGFwZURhdGEuc2hhcGUucGF0aHMuc2hhcGVzO1xyXG4gICAgdmFyIGksIGxlbiA9IHNoYXBlRGF0YS5zaGFwZS5wYXRocy5fbGVuZ3RoLCBqLCBqTGVuO1xyXG4gICAgdmFyIGFkZGVkTGVuZ3RoID0gMDtcclxuICAgIHZhciBjdXJyZW50TGVuZ3RoRGF0YSxzZWdtZW50Q291bnQ7XHJcbiAgICB2YXIgbGVuZ3RocztcclxuICAgIHZhciBzZWdtZW50O1xyXG4gICAgdmFyIHNoYXBlcyA9IFtdO1xyXG4gICAgdmFyIGluaXRQb3M7XHJcbiAgICB2YXIgbmV3U2hhcGUgPSB0cnVlO1xyXG4gICAgaWYoIXNoYXBlUGF0aCl7XHJcbiAgICAgICAgc2hhcGVQYXRoID0gc2hhcGVfcG9vbC5uZXdTaGFwZSgpO1xyXG4gICAgICAgIHNlZ21lbnRDb3VudCA9IDA7XHJcbiAgICAgICAgaW5pdFBvcyA9IDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNlZ21lbnRDb3VudCA9IHNoYXBlUGF0aC5fbGVuZ3RoO1xyXG4gICAgICAgIGluaXRQb3MgPSBzaGFwZVBhdGguX2xlbmd0aDtcclxuICAgIH1cclxuICAgIHNoYXBlcy5wdXNoKHNoYXBlUGF0aCk7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIGxlbmd0aHMgPSBwYXRoc0RhdGFbaV0ubGVuZ3RocztcclxuICAgICAgICBzaGFwZVBhdGguYyA9IHNoYXBlUGF0aHNbaV0uYztcclxuICAgICAgICBqTGVuID0gc2hhcGVQYXRoc1tpXS5jID8gbGVuZ3Rocy5sZW5ndGggOiBsZW5ndGhzLmxlbmd0aCArIDE7XHJcbiAgICAgICAgZm9yKGo9MTtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgIGN1cnJlbnRMZW5ndGhEYXRhID0gbGVuZ3Roc1tqLTFdO1xyXG4gICAgICAgICAgICBpZihhZGRlZExlbmd0aCArIGN1cnJlbnRMZW5ndGhEYXRhLmFkZGVkTGVuZ3RoIDwgc2hhcGVTZWdtZW50LnMpe1xyXG4gICAgICAgICAgICAgICAgYWRkZWRMZW5ndGggKz0gY3VycmVudExlbmd0aERhdGEuYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBzaGFwZVBhdGguYyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYoYWRkZWRMZW5ndGggPiBzaGFwZVNlZ21lbnQuZSl7XHJcbiAgICAgICAgICAgICAgICBzaGFwZVBhdGguYyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZVNlZ21lbnQucyA8PSBhZGRlZExlbmd0aCAmJiBzaGFwZVNlZ21lbnQuZSA+PSBhZGRlZExlbmd0aCArIGN1cnJlbnRMZW5ndGhEYXRhLmFkZGVkTGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFNlZ21lbnQoc2hhcGVQYXRoc1tpXS52W2otMV0sc2hhcGVQYXRoc1tpXS5vW2otMV0sc2hhcGVQYXRoc1tpXS5pW2pdLHNoYXBlUGF0aHNbaV0udltqXSxzaGFwZVBhdGgsc2VnbWVudENvdW50LG5ld1NoYXBlKTtcclxuICAgICAgICAgICAgICAgICAgICBuZXdTaGFwZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWdtZW50ID0gYmV6LmdldE5ld1NlZ21lbnQoc2hhcGVQYXRoc1tpXS52W2otMV0sc2hhcGVQYXRoc1tpXS52W2pdLHNoYXBlUGF0aHNbaV0ub1tqLTFdLHNoYXBlUGF0aHNbaV0uaVtqXSwgKHNoYXBlU2VnbWVudC5zIC0gYWRkZWRMZW5ndGgpL2N1cnJlbnRMZW5ndGhEYXRhLmFkZGVkTGVuZ3RoLChzaGFwZVNlZ21lbnQuZSAtIGFkZGVkTGVuZ3RoKS9jdXJyZW50TGVuZ3RoRGF0YS5hZGRlZExlbmd0aCwgbGVuZ3Roc1tqLTFdKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFNlZ21lbnQoc2VnbWVudC5wdDEsc2VnbWVudC5wdDMsc2VnbWVudC5wdDQsc2VnbWVudC5wdDIsc2hhcGVQYXRoLHNlZ21lbnRDb3VudCxuZXdTaGFwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3U2hhcGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBzaGFwZVBhdGguYyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYWRkZWRMZW5ndGggKz0gY3VycmVudExlbmd0aERhdGEuYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBzZWdtZW50Q291bnQgKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihzaGFwZVBhdGhzW2ldLmMpe1xyXG4gICAgICAgICAgICBjdXJyZW50TGVuZ3RoRGF0YSA9IGxlbmd0aHNbai0xXTtcclxuICAgICAgICAgICAgaWYoYWRkZWRMZW5ndGggPD0gc2hhcGVTZWdtZW50LmUpe1xyXG4gICAgICAgICAgICAgICAgdmFyIHNlZ21lbnRMZW5ndGggPSBsZW5ndGhzW2otMV0uYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZVNlZ21lbnQucyA8PSBhZGRlZExlbmd0aCAmJiBzaGFwZVNlZ21lbnQuZSA+PSBhZGRlZExlbmd0aCArIHNlZ21lbnRMZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkU2VnbWVudChzaGFwZVBhdGhzW2ldLnZbai0xXSxzaGFwZVBhdGhzW2ldLm9bai0xXSxzaGFwZVBhdGhzW2ldLmlbMF0sc2hhcGVQYXRoc1tpXS52WzBdLHNoYXBlUGF0aCxzZWdtZW50Q291bnQsbmV3U2hhcGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1NoYXBlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBzZWdtZW50ID0gYmV6LmdldE5ld1NlZ21lbnQoc2hhcGVQYXRoc1tpXS52W2otMV0sc2hhcGVQYXRoc1tpXS52WzBdLHNoYXBlUGF0aHNbaV0ub1tqLTFdLHNoYXBlUGF0aHNbaV0uaVswXSwgKHNoYXBlU2VnbWVudC5zIC0gYWRkZWRMZW5ndGgpL3NlZ21lbnRMZW5ndGgsKHNoYXBlU2VnbWVudC5lIC0gYWRkZWRMZW5ndGgpL3NlZ21lbnRMZW5ndGgsIGxlbmd0aHNbai0xXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRTZWdtZW50KHNlZ21lbnQucHQxLHNlZ21lbnQucHQzLHNlZ21lbnQucHQ0LHNlZ21lbnQucHQyLHNoYXBlUGF0aCxzZWdtZW50Q291bnQsbmV3U2hhcGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1NoYXBlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hhcGVQYXRoLmMgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNoYXBlUGF0aC5jID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYWRkZWRMZW5ndGggKz0gY3VycmVudExlbmd0aERhdGEuYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgIHNlZ21lbnRDb3VudCArPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihzaGFwZVBhdGguX2xlbmd0aCl7XHJcbiAgICAgICAgICAgIHNoYXBlUGF0aC5zZXRYWUF0KHNoYXBlUGF0aC52W2luaXRQb3NdWzBdLHNoYXBlUGF0aC52W2luaXRQb3NdWzFdLCdpJyxpbml0UG9zKTtcclxuICAgICAgICAgICAgc2hhcGVQYXRoLnNldFhZQXQoc2hhcGVQYXRoLnZbc2hhcGVQYXRoLl9sZW5ndGggLSAxXVswXSxzaGFwZVBhdGgudltzaGFwZVBhdGguX2xlbmd0aCAtIDFdWzFdLCdvJyxzaGFwZVBhdGguX2xlbmd0aCAtIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhZGRlZExlbmd0aCA+IHNoYXBlU2VnbWVudC5lKXtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGk8bGVuLTEpe1xyXG4gICAgICAgICAgICBzaGFwZVBhdGggPSBzaGFwZV9wb29sLm5ld1NoYXBlKCk7XHJcbiAgICAgICAgICAgIG5ld1NoYXBlID0gdHJ1ZTtcclxuICAgICAgICAgICAgc2hhcGVzLnB1c2goc2hhcGVQYXRoKTtcclxuICAgICAgICAgICAgc2VnbWVudENvdW50ID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2hhcGVzO1xyXG5cclxufVxyXG5cclxuXHJcblNoYXBlTW9kaWZpZXJzLnJlZ2lzdGVyTW9kaWZpZXIoJ3RtJyxUcmltTW9kaWZpZXIpO1xuZnVuY3Rpb24gUm91bmRDb3JuZXJzTW9kaWZpZXIoKXt9O1xyXG5leHRlbmRQcm90b3R5cGUoU2hhcGVNb2RpZmllcixSb3VuZENvcm5lcnNNb2RpZmllcik7XHJcblJvdW5kQ29ybmVyc01vZGlmaWVyLnByb3RvdHlwZS5wcm9jZXNzS2V5cyA9IGZ1bmN0aW9uKGZvcmNlUmVuZGVyKXtcclxuICAgIGlmKHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQgPT09IHRoaXMuZnJhbWVJZCAmJiAhZm9yY2VSZW5kZXIpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMubWRmID0gZm9yY2VSZW5kZXIgPyB0cnVlIDogZmFsc2U7XHJcbiAgICB0aGlzLmZyYW1lSWQgPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoO1xyXG5cclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKXtcclxuICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5Sb3VuZENvcm5lcnNNb2RpZmllci5wcm90b3R5cGUuaW5pdE1vZGlmaWVyUHJvcGVydGllcyA9IGZ1bmN0aW9uKGVsZW0sZGF0YSl7XHJcbiAgICB0aGlzLmdldFZhbHVlID0gdGhpcy5wcm9jZXNzS2V5cztcclxuICAgIHRoaXMucmQgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEuciwwLG51bGwsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICBpZighdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgIHRoaXMuZ2V0VmFsdWUodHJ1ZSk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5Sb3VuZENvcm5lcnNNb2RpZmllci5wcm90b3R5cGUucHJvY2Vzc1BhdGggPSBmdW5jdGlvbihwYXRoLCByb3VuZCl7XHJcbiAgICB2YXIgY2xvbmVkX3BhdGggPSBzaGFwZV9wb29sLm5ld1NoYXBlKCk7XHJcbiAgICBjbG9uZWRfcGF0aC5jID0gcGF0aC5jO1xyXG4gICAgdmFyIGksIGxlbiA9IHBhdGguX2xlbmd0aDtcclxuICAgIHZhciBjdXJyZW50VixjdXJyZW50SSxjdXJyZW50TyxjbG9zZXJWLCBuZXdWLG5ld08sbmV3SSxkaXN0YW5jZSxuZXdQb3NQZXJjLGluZGV4ID0gMDtcclxuICAgIHZhciB2WCx2WSxvWCxvWSxpWCxpWTtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgY3VycmVudFYgPSBwYXRoLnZbaV07XHJcbiAgICAgICAgY3VycmVudE8gPSBwYXRoLm9baV07XHJcbiAgICAgICAgY3VycmVudEkgPSBwYXRoLmlbaV07XHJcbiAgICAgICAgaWYoY3VycmVudFZbMF09PT1jdXJyZW50T1swXSAmJiBjdXJyZW50VlsxXT09PWN1cnJlbnRPWzFdICYmIGN1cnJlbnRWWzBdPT09Y3VycmVudElbMF0gJiYgY3VycmVudFZbMV09PT1jdXJyZW50SVsxXSl7XHJcbiAgICAgICAgICAgIGlmKChpPT09MCB8fCBpID09PSBsZW4gLSAxKSAmJiAhcGF0aC5jKXtcclxuICAgICAgICAgICAgICAgIGNsb25lZF9wYXRoLnNldFRyaXBsZUF0KGN1cnJlbnRWWzBdLGN1cnJlbnRWWzFdLGN1cnJlbnRPWzBdLGN1cnJlbnRPWzFdLGN1cnJlbnRJWzBdLGN1cnJlbnRJWzFdLGluZGV4KTtcclxuICAgICAgICAgICAgICAgIC8qY2xvbmVkX3BhdGgudltpbmRleF0gPSBjdXJyZW50VjtcclxuICAgICAgICAgICAgICAgIGNsb25lZF9wYXRoLm9baW5kZXhdID0gY3VycmVudE87XHJcbiAgICAgICAgICAgICAgICBjbG9uZWRfcGF0aC5pW2luZGV4XSA9IGN1cnJlbnRJOyovXHJcbiAgICAgICAgICAgICAgICBpbmRleCArPSAxO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYoaT09PTApe1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb3NlclYgPSBwYXRoLnZbbGVuLTFdO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjbG9zZXJWID0gcGF0aC52W2ktMV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IE1hdGguc3FydChNYXRoLnBvdyhjdXJyZW50VlswXS1jbG9zZXJWWzBdLDIpK01hdGgucG93KGN1cnJlbnRWWzFdLWNsb3NlclZbMV0sMikpO1xyXG4gICAgICAgICAgICAgICAgbmV3UG9zUGVyYyA9IGRpc3RhbmNlID8gTWF0aC5taW4oZGlzdGFuY2UvMixyb3VuZCkvZGlzdGFuY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgdlggPSBpWCA9IGN1cnJlbnRWWzBdKyhjbG9zZXJWWzBdLWN1cnJlbnRWWzBdKSpuZXdQb3NQZXJjO1xyXG4gICAgICAgICAgICAgICAgdlkgPSBpWSA9IGN1cnJlbnRWWzFdLShjdXJyZW50VlsxXS1jbG9zZXJWWzFdKSpuZXdQb3NQZXJjO1xyXG4gICAgICAgICAgICAgICAgb1ggPSB2WC0odlgtY3VycmVudFZbMF0pKnJvdW5kQ29ybmVyO1xyXG4gICAgICAgICAgICAgICAgb1kgPSB2WS0odlktY3VycmVudFZbMV0pKnJvdW5kQ29ybmVyO1xyXG4gICAgICAgICAgICAgICAgY2xvbmVkX3BhdGguc2V0VHJpcGxlQXQodlgsdlksb1gsb1ksaVgsaVksaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgaW5kZXggKz0gMTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZihpID09PSBsZW4gLSAxKXtcclxuICAgICAgICAgICAgICAgICAgICBjbG9zZXJWID0gcGF0aC52WzBdO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjbG9zZXJWID0gcGF0aC52W2krMV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IE1hdGguc3FydChNYXRoLnBvdyhjdXJyZW50VlswXS1jbG9zZXJWWzBdLDIpK01hdGgucG93KGN1cnJlbnRWWzFdLWNsb3NlclZbMV0sMikpO1xyXG4gICAgICAgICAgICAgICAgbmV3UG9zUGVyYyA9IGRpc3RhbmNlID8gTWF0aC5taW4oZGlzdGFuY2UvMixyb3VuZCkvZGlzdGFuY2UgOiAwO1xyXG4gICAgICAgICAgICAgICAgdlggPSBvWCA9IGN1cnJlbnRWWzBdKyhjbG9zZXJWWzBdLWN1cnJlbnRWWzBdKSpuZXdQb3NQZXJjO1xyXG4gICAgICAgICAgICAgICAgdlkgPSBvWSA9IGN1cnJlbnRWWzFdKyhjbG9zZXJWWzFdLWN1cnJlbnRWWzFdKSpuZXdQb3NQZXJjO1xyXG4gICAgICAgICAgICAgICAgaVggPSB2WC0odlgtY3VycmVudFZbMF0pKnJvdW5kQ29ybmVyO1xyXG4gICAgICAgICAgICAgICAgaVkgPSB2WS0odlktY3VycmVudFZbMV0pKnJvdW5kQ29ybmVyO1xyXG4gICAgICAgICAgICAgICAgY2xvbmVkX3BhdGguc2V0VHJpcGxlQXQodlgsdlksb1gsb1ksaVgsaVksaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgaW5kZXggKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNsb25lZF9wYXRoLnNldFRyaXBsZUF0KHBhdGgudltpXVswXSxwYXRoLnZbaV1bMV0scGF0aC5vW2ldWzBdLHBhdGgub1tpXVsxXSxwYXRoLmlbaV1bMF0scGF0aC5pW2ldWzFdLGluZGV4KTtcclxuICAgICAgICAgICAgaW5kZXggKz0gMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2xvbmVkX3BhdGg7XHJcbn1cclxuXHJcblJvdW5kQ29ybmVyc01vZGlmaWVyLnByb3RvdHlwZS5wcm9jZXNzU2hhcGVzID0gZnVuY3Rpb24oZmlyc3RGcmFtZSl7XHJcbiAgICB2YXIgc2hhcGVQYXRocztcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLnNoYXBlcy5sZW5ndGg7XHJcbiAgICB2YXIgaiwgakxlbjtcclxuICAgIHZhciByZCA9IHRoaXMucmQudjtcclxuXHJcbiAgICBpZihyZCAhPT0gMCl7XHJcbiAgICAgICAgdmFyIHNoYXBlRGF0YSwgbmV3UGF0aHMsIGxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHNoYXBlRGF0YSA9IHRoaXMuc2hhcGVzW2ldO1xyXG4gICAgICAgICAgICBuZXdQYXRocyA9IHNoYXBlRGF0YS5zaGFwZS5wYXRocztcclxuICAgICAgICAgICAgbG9jYWxTaGFwZUNvbGxlY3Rpb24gPSBzaGFwZURhdGEubG9jYWxTaGFwZUNvbGxlY3Rpb247XHJcbiAgICAgICAgICAgIGlmKCEoIXNoYXBlRGF0YS5zaGFwZS5tZGYgJiYgIXRoaXMubWRmICYmICFmaXJzdEZyYW1lKSl7XHJcbiAgICAgICAgICAgICAgICBsb2NhbFNoYXBlQ29sbGVjdGlvbi5yZWxlYXNlU2hhcGVzKCk7XHJcbiAgICAgICAgICAgICAgICBzaGFwZURhdGEuc2hhcGUubWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHNoYXBlUGF0aHMgPSBzaGFwZURhdGEuc2hhcGUucGF0aHMuc2hhcGVzO1xyXG4gICAgICAgICAgICAgICAgakxlbiA9IHNoYXBlRGF0YS5zaGFwZS5wYXRocy5fbGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxTaGFwZUNvbGxlY3Rpb24uYWRkU2hhcGUodGhpcy5wcm9jZXNzUGF0aChzaGFwZVBhdGhzW2pdLHJkKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2hhcGVEYXRhLnNoYXBlLnBhdGhzID0gc2hhcGVEYXRhLmxvY2FsU2hhcGVDb2xsZWN0aW9uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICBpZighdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgIHRoaXMubWRmID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5TaGFwZU1vZGlmaWVycy5yZWdpc3Rlck1vZGlmaWVyKCdyZCcsUm91bmRDb3JuZXJzTW9kaWZpZXIpO1xuZnVuY3Rpb24gUmVwZWF0ZXJNb2RpZmllcigpe307XHJcblJlcGVhdGVyTW9kaWZpZXIucHJvdG90eXBlLnByb2Nlc3NLZXlzID0gZnVuY3Rpb24oZm9yY2VSZW5kZXIpe1xyXG4gICAgaWYodGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZCA9PT0gdGhpcy5mcmFtZUlkICYmICFmb3JjZVJlbmRlcil7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5tZGYgPSBmb3JjZVJlbmRlciA/IHRydWUgOiBmYWxzZTtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuXHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0uZ2V0VmFsdWUoKTtcclxuICAgICAgICBpZih0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLm1kZil7XHJcbiAgICAgICAgICAgIHRoaXMubWRmID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5SZXBlYXRlck1vZGlmaWVyLnByb3RvdHlwZS5pbml0TW9kaWZpZXJQcm9wZXJ0aWVzID0gZnVuY3Rpb24oZWxlbSxkYXRhKXtcclxuICAgIHRoaXMuZ2V0VmFsdWUgPSB0aGlzLnByb2Nlc3NLZXlzO1xyXG4gICAgdGhpcy5jID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLmMsMCxudWxsLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5vID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLm8sMCxudWxsLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy50ciA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS50ciwyLG51bGwsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgaWYoIXRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKXtcclxuICAgICAgICB0aGlzLmdldFZhbHVlKHRydWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5wTWF0cml4ID0gbmV3IE1hdHJpeCgpO1xyXG4gICAgdGhpcy5yTWF0cml4ID0gbmV3IE1hdHJpeCgpO1xyXG4gICAgdGhpcy5zTWF0cml4ID0gbmV3IE1hdHJpeCgpO1xyXG4gICAgdGhpcy50TWF0cml4ID0gbmV3IE1hdHJpeCgpO1xyXG4gICAgdGhpcy5tYXRyaXggPSBuZXcgTWF0cml4KCk7XHJcbn07XHJcblxyXG5SZXBlYXRlck1vZGlmaWVyLnByb3RvdHlwZS5hcHBseVRyYW5zZm9ybXMgPSBmdW5jdGlvbihwTWF0cml4LCByTWF0cml4LCBzTWF0cml4LCB0cmFuc2Zvcm0sIHBlcmMsIGludil7XHJcbiAgICB2YXIgZGlyID0gaW52ID8gLTEgOiAxO1xyXG4gICAgdmFyIHNjYWxlWCA9IHRyYW5zZm9ybS5zLnZbMF0gKyAoMSAtIHRyYW5zZm9ybS5zLnZbMF0pICogKDEgLSBwZXJjKTtcclxuICAgIHZhciBzY2FsZVkgPSB0cmFuc2Zvcm0ucy52WzFdICsgKDEgLSB0cmFuc2Zvcm0ucy52WzFdKSAqICgxIC0gcGVyYyk7XHJcbiAgICBwTWF0cml4LnRyYW5zbGF0ZSh0cmFuc2Zvcm0ucC52WzBdICogZGlyICogcGVyYywgdHJhbnNmb3JtLnAudlsxXSAqIGRpciAqIHBlcmMsIHRyYW5zZm9ybS5wLnZbMl0pO1xyXG4gICAgck1hdHJpeC50cmFuc2xhdGUoLXRyYW5zZm9ybS5hLnZbMF0sIC10cmFuc2Zvcm0uYS52WzFdLCB0cmFuc2Zvcm0uYS52WzJdKTtcclxuICAgIHJNYXRyaXgucm90YXRlKC10cmFuc2Zvcm0uci52ICogZGlyICogcGVyYyk7XHJcbiAgICByTWF0cml4LnRyYW5zbGF0ZSh0cmFuc2Zvcm0uYS52WzBdLCB0cmFuc2Zvcm0uYS52WzFdLCB0cmFuc2Zvcm0uYS52WzJdKTtcclxuICAgIHNNYXRyaXgudHJhbnNsYXRlKC10cmFuc2Zvcm0uYS52WzBdLCAtdHJhbnNmb3JtLmEudlsxXSwgdHJhbnNmb3JtLmEudlsyXSk7XHJcbiAgICBzTWF0cml4LnNjYWxlKGludiA/IDEvc2NhbGVYIDogc2NhbGVYLCBpbnYgPyAxL3NjYWxlWSA6IHNjYWxlWSk7XHJcbiAgICBzTWF0cml4LnRyYW5zbGF0ZSh0cmFuc2Zvcm0uYS52WzBdLCB0cmFuc2Zvcm0uYS52WzFdLCB0cmFuc2Zvcm0uYS52WzJdKTtcclxufVxyXG5cclxuUmVwZWF0ZXJNb2RpZmllci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKGVsZW0sIGFyciwgcG9zLCBlbGVtc0RhdGEsIGR5bmFtaWNQcm9wZXJ0aWVzKSB7XHJcbiAgICB0aGlzLmVsZW0gPSBlbGVtO1xyXG4gICAgdGhpcy5hcnIgPSBhcnI7XHJcbiAgICB0aGlzLnBvcyA9IHBvcztcclxuICAgIHRoaXMuZWxlbXNEYXRhID0gZWxlbXNEYXRhO1xyXG4gICAgdGhpcy5fY3VycmVudENvcGllcyA9IDA7XHJcbiAgICB0aGlzLl9lbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5fZ3JvdXBzID0gW107XHJcbiAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gW107XHJcbiAgICB0aGlzLmZyYW1lSWQgPSAtMTtcclxuICAgIHRoaXMuaW5pdE1vZGlmaWVyUHJvcGVydGllcyhlbGVtLGFycltwb3NdKTtcclxuICAgIHZhciBjb250ID0gMDtcclxuICAgIHdoaWxlKHBvcz4wKXtcclxuICAgICAgICBwb3MgLT0gMTtcclxuICAgICAgICAvL3RoaXMuX2VsZW1lbnRzLnVuc2hpZnQoYXJyLnNwbGljZShwb3MsMSlbMF0pO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnRzLnVuc2hpZnQoYXJyW3Bvc10pO1xyXG4gICAgICAgIGNvbnQgKz0gMTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKXtcclxuICAgICAgICB0aGlzLmsgPSB0cnVlO1xyXG4gICAgICAgIGR5bmFtaWNQcm9wZXJ0aWVzLnB1c2godGhpcyk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLmdldFZhbHVlKHRydWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5SZXBlYXRlck1vZGlmaWVyLnByb3RvdHlwZS5yZXNldEVsZW1lbnRzID0gZnVuY3Rpb24oZWxlbWVudHMpe1xyXG4gICAgdmFyIGksIGxlbiA9IGVsZW1lbnRzLmxlbmd0aDtcclxuICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgZWxlbWVudHNbaV0uX3Byb2Nlc3NlZCA9IGZhbHNlO1xyXG4gICAgICAgIGlmKGVsZW1lbnRzW2ldLnR5ID09PSAnZ3InKXtcclxuICAgICAgICAgICAgdGhpcy5yZXNldEVsZW1lbnRzKGVsZW1lbnRzW2ldLml0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblJlcGVhdGVyTW9kaWZpZXIucHJvdG90eXBlLmNsb25lRWxlbWVudHMgPSBmdW5jdGlvbihlbGVtZW50cyl7XHJcbiAgICB2YXIgaSwgbGVuID0gZWxlbWVudHMubGVuZ3RoO1xyXG4gICAgdmFyIG5ld0VsZW1lbnRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShlbGVtZW50cykpO1xyXG4gICAgdGhpcy5yZXNldEVsZW1lbnRzKG5ld0VsZW1lbnRzKTtcclxuICAgIHJldHVybiBuZXdFbGVtZW50cztcclxufVxyXG5cclxuUmVwZWF0ZXJNb2RpZmllci5wcm90b3R5cGUuY2hhbmdlR3JvdXBSZW5kZXIgPSBmdW5jdGlvbihlbGVtZW50cywgcmVuZGVyRmxhZykge1xyXG4gICAgdmFyIGksIGxlbiA9IGVsZW1lbnRzLmxlbmd0aDtcclxuICAgIGZvcihpID0gMDsgaSA8IGxlbiA7IGkgKz0gMSkge1xyXG4gICAgICAgIGVsZW1lbnRzW2ldLl9yZW5kZXIgPSByZW5kZXJGbGFnO1xyXG4gICAgICAgIGlmKGVsZW1lbnRzW2ldLnR5ID09PSAnZ3InKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlR3JvdXBSZW5kZXIoZWxlbWVudHNbaV0uaXQsIHJlbmRlckZsYWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuUmVwZWF0ZXJNb2RpZmllci5wcm90b3R5cGUucHJvY2Vzc1NoYXBlcyA9IGZ1bmN0aW9uKGZpcnN0RnJhbWUpe1xyXG5cclxuICAgIGlmKHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQgPT09IHRoaXMuZnJhbWVJZCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5mcmFtZUlkID0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVJZDtcclxuICAgIGlmKCF0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aCAmJiAhZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMubWRmKXtcclxuICAgICAgICB2YXIgY29waWVzID0gTWF0aC5jZWlsKHRoaXMuYy52KTtcclxuICAgICAgICBpZih0aGlzLl9ncm91cHMubGVuZ3RoIDwgY29waWVzKXtcclxuICAgICAgICAgICAgd2hpbGUodGhpcy5fZ3JvdXBzLmxlbmd0aCA8IGNvcGllcyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgZ3JvdXAgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXQ6dGhpcy5jbG9uZUVsZW1lbnRzKHRoaXMuX2VsZW1lbnRzKSxcclxuICAgICAgICAgICAgICAgICAgICB0eTonZ3InXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBncm91cC5pdC5wdXNoKHtcImFcIjp7XCJhXCI6MCxcIml4XCI6MSxcImtcIjpbMCwwXX0sXCJubVwiOlwiVHJhbnNmb3JtXCIsXCJvXCI6e1wiYVwiOjAsXCJpeFwiOjcsXCJrXCI6MTAwfSxcInBcIjp7XCJhXCI6MCxcIml4XCI6MixcImtcIjpbMCwwXX0sXCJyXCI6e1wiYVwiOjAsXCJpeFwiOjYsXCJrXCI6MH0sXCJzXCI6e1wiYVwiOjAsXCJpeFwiOjMsXCJrXCI6WzEwMCwxMDBdfSxcInNhXCI6e1wiYVwiOjAsXCJpeFwiOjUsXCJrXCI6MH0sXCJza1wiOntcImFcIjowLFwiaXhcIjo0LFwia1wiOjB9LFwidHlcIjpcInRyXCJ9KTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgdGhpcy5hcnIuc3BsaWNlKDAsMCxncm91cCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9ncm91cHMuc3BsaWNlKDAsMCxncm91cCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50Q29waWVzICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5lbGVtLnJlbG9hZFNoYXBlcygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaSwgY29udCA9IDAsIHJlbmRlckZsYWc7XHJcbiAgICAgICAgZm9yKGkgPSAwOyBpICA8PSB0aGlzLl9ncm91cHMubGVuZ3RoIC0gMTsgaSArPSAxKXtcclxuICAgICAgICAgICAgcmVuZGVyRmxhZyA9IGNvbnQgPCBjb3BpZXM7XHJcbiAgICAgICAgICAgIHRoaXMuX2dyb3Vwc1tpXS5fcmVuZGVyID0gcmVuZGVyRmxhZztcclxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VHcm91cFJlbmRlcih0aGlzLl9ncm91cHNbaV0uaXQsIHJlbmRlckZsYWcpO1xyXG4gICAgICAgICAgICBjb250ICs9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRDb3BpZXMgPSBjb3BpZXM7XHJcbiAgICAgICAgdGhpcy5lbGVtLmZpcnN0RnJhbWUgPSB0cnVlO1xyXG4gICAgICAgIC8vLy9cclxuXHJcbiAgICAgICAgdmFyIG9mZnNldCA9IHRoaXMuby52O1xyXG4gICAgICAgIHZhciBvZmZzZXRNb2R1bG8gPSBvZmZzZXQlMTtcclxuICAgICAgICB2YXIgcm91bmRPZmZzZXQgPSBvZmZzZXQgPiAwID8gTWF0aC5mbG9vcihvZmZzZXQpIDogTWF0aC5jZWlsKG9mZnNldCk7XHJcbiAgICAgICAgdmFyIGs7XHJcbiAgICAgICAgdmFyIHRNYXQgPSB0aGlzLnRyLnYucHJvcHM7XHJcbiAgICAgICAgdmFyIHBQcm9wcyA9IHRoaXMucE1hdHJpeC5wcm9wcztcclxuICAgICAgICB2YXIgclByb3BzID0gdGhpcy5yTWF0cml4LnByb3BzO1xyXG4gICAgICAgIHZhciBzUHJvcHMgPSB0aGlzLnNNYXRyaXgucHJvcHM7XHJcbiAgICAgICAgdGhpcy5wTWF0cml4LnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5yTWF0cml4LnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5zTWF0cml4LnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy50TWF0cml4LnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5tYXRyaXgucmVzZXQoKTtcclxuICAgICAgICB2YXIgaXRlcmF0aW9uID0gMDtcclxuXHJcbiAgICAgICAgaWYob2Zmc2V0ID4gMCkge1xyXG4gICAgICAgICAgICB3aGlsZShpdGVyYXRpb248cm91bmRPZmZzZXQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBseVRyYW5zZm9ybXModGhpcy5wTWF0cml4LCB0aGlzLnJNYXRyaXgsIHRoaXMuc01hdHJpeCwgdGhpcy50ciwgMSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0aW9uICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYob2Zmc2V0TW9kdWxvKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlUcmFuc2Zvcm1zKHRoaXMucE1hdHJpeCwgdGhpcy5yTWF0cml4LCB0aGlzLnNNYXRyaXgsIHRoaXMudHIsIG9mZnNldE1vZHVsbywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0aW9uICs9IG9mZnNldE1vZHVsbztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZihvZmZzZXQgPCAwKSB7XHJcbiAgICAgICAgICAgIHdoaWxlKGl0ZXJhdGlvbj5yb3VuZE9mZnNldCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGx5VHJhbnNmb3Jtcyh0aGlzLnBNYXRyaXgsIHRoaXMuck1hdHJpeCwgdGhpcy5zTWF0cml4LCB0aGlzLnRyLCAxLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIGl0ZXJhdGlvbiAtPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKG9mZnNldE1vZHVsbyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGx5VHJhbnNmb3Jtcyh0aGlzLnBNYXRyaXgsIHRoaXMuck1hdHJpeCwgdGhpcy5zTWF0cml4LCB0aGlzLnRyLCAtIG9mZnNldE1vZHVsbywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICBpdGVyYXRpb24gLT0gb2Zmc2V0TW9kdWxvO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGkgPSB0aGlzLmRhdGEubSA9PT0gMSA/IDAgOiB0aGlzLl9jdXJyZW50Q29waWVzIC0gMTtcclxuICAgICAgICB2YXIgZGlyID0gdGhpcy5kYXRhLm0gPT09IDEgPyAxIDogLTE7XHJcbiAgICAgICAgY29udCA9IHRoaXMuX2N1cnJlbnRDb3BpZXM7XHJcbiAgICAgICAgd2hpbGUoY29udCl7XHJcbiAgICAgICAgICAgIGlmKGl0ZXJhdGlvbiAhPT0gMCl7XHJcbiAgICAgICAgICAgICAgICBpZigoaSAhPT0gMCAmJiBkaXIgPT09IDEpIHx8IChpICE9PSB0aGlzLl9jdXJyZW50Q29waWVzIC0gMSAmJiBkaXIgPT09IC0xKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBseVRyYW5zZm9ybXModGhpcy5wTWF0cml4LCB0aGlzLnJNYXRyaXgsIHRoaXMuc01hdHJpeCwgdGhpcy50ciwgMSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXRyaXgudHJhbnNmb3JtKHJQcm9wc1swXSxyUHJvcHNbMV0sclByb3BzWzJdLHJQcm9wc1szXSxyUHJvcHNbNF0sclByb3BzWzVdLHJQcm9wc1s2XSxyUHJvcHNbN10sclByb3BzWzhdLHJQcm9wc1s5XSxyUHJvcHNbMTBdLHJQcm9wc1sxMV0sclByb3BzWzEyXSxyUHJvcHNbMTNdLHJQcm9wc1sxNF0sclByb3BzWzE1XSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hdHJpeC50cmFuc2Zvcm0oc1Byb3BzWzBdLHNQcm9wc1sxXSxzUHJvcHNbMl0sc1Byb3BzWzNdLHNQcm9wc1s0XSxzUHJvcHNbNV0sc1Byb3BzWzZdLHNQcm9wc1s3XSxzUHJvcHNbOF0sc1Byb3BzWzldLHNQcm9wc1sxMF0sc1Byb3BzWzExXSxzUHJvcHNbMTJdLHNQcm9wc1sxM10sc1Byb3BzWzE0XSxzUHJvcHNbMTVdKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubWF0cml4LnRyYW5zZm9ybShwUHJvcHNbMF0scFByb3BzWzFdLHBQcm9wc1syXSxwUHJvcHNbM10scFByb3BzWzRdLHBQcm9wc1s1XSxwUHJvcHNbNl0scFByb3BzWzddLHBQcm9wc1s4XSxwUHJvcHNbOV0scFByb3BzWzEwXSxwUHJvcHNbMTFdLHBQcm9wc1sxMl0scFByb3BzWzEzXSxwUHJvcHNbMTRdLHBQcm9wc1sxNV0pO1xyXG4gICAgICAgICAgICAgICAgdmFyIGl0ZW1zID0gdGhpcy5lbGVtc0RhdGFbaV0uaXQ7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXRlbXNUcmFuc2Zvcm0gPSBpdGVtc1tpdGVtcy5sZW5ndGggLSAxXS50cmFuc2Zvcm0ubVByb3BzLnYucHJvcHM7XHJcbiAgICAgICAgICAgICAgICB2YXIgaiwgakxlbiA9IGl0ZW1zVHJhbnNmb3JtLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtc1RyYW5zZm9ybVtqXSA9IHRoaXMubWF0cml4LnByb3BzW2pdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXRyaXgucmVzZXQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubWF0cml4LnJlc2V0KCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLmVsZW1zRGF0YVtpXS5pdDtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVtc1RyYW5zZm9ybSA9IGl0ZW1zW2l0ZW1zLmxlbmd0aCAtIDFdLnRyYW5zZm9ybS5tUHJvcHMudi5wcm9wcztcclxuICAgICAgICAgICAgICAgIHZhciBqLCBqTGVuID0gaXRlbXNUcmFuc2Zvcm0ubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zVHJhbnNmb3JtW2pdID0gdGhpcy5tYXRyaXgucHJvcHNbal07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaXRlcmF0aW9uICs9IDE7XHJcbiAgICAgICAgICAgIGNvbnQgLT0gMTtcclxuICAgICAgICAgICAgaSArPSBkaXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5SZXBlYXRlck1vZGlmaWVyLnByb3RvdHlwZS5hZGRTaGFwZSA9IGZ1bmN0aW9uKCl7fVxyXG5cclxuU2hhcGVNb2RpZmllcnMucmVnaXN0ZXJNb2RpZmllcigncnAnLFJlcGVhdGVyTW9kaWZpZXIpO1xuZnVuY3Rpb24gU2hhcGVDb2xsZWN0aW9uKCl7XHJcblx0dGhpcy5fbGVuZ3RoID0gMDtcclxuXHR0aGlzLl9tYXhMZW5ndGggPSA0O1xyXG5cdHRoaXMuc2hhcGVzID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMuX21heExlbmd0aH0pO1xyXG59O1xyXG5cclxuU2hhcGVDb2xsZWN0aW9uLnByb3RvdHlwZS5hZGRTaGFwZSA9IGZ1bmN0aW9uKHNoYXBlRGF0YSl7XHJcblx0aWYodGhpcy5fbGVuZ3RoID09PSB0aGlzLl9tYXhMZW5ndGgpe1xyXG5cdFx0dGhpcy5zaGFwZXMgPSB0aGlzLnNoYXBlcy5jb25jYXQoQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMuX21heExlbmd0aH0pKTtcclxuXHRcdHRoaXMuX21heExlbmd0aCAqPSAyO1xyXG5cdH1cclxuXHR0aGlzLnNoYXBlc1t0aGlzLl9sZW5ndGhdID0gc2hhcGVEYXRhO1xyXG5cdHRoaXMuX2xlbmd0aCArPSAxO1xyXG59O1xyXG5cclxuU2hhcGVDb2xsZWN0aW9uLnByb3RvdHlwZS5yZWxlYXNlU2hhcGVzID0gZnVuY3Rpb24oKXtcclxuXHR2YXIgaTtcclxuXHRmb3IoaSA9IDA7IGkgPCB0aGlzLl9sZW5ndGg7IGkgKz0gMSkge1xyXG5cdFx0c2hhcGVfcG9vbC5yZWxlYXNlKHRoaXMuc2hhcGVzW2ldKTtcclxuXHR9XHJcblx0dGhpcy5fbGVuZ3RoID0gMDtcclxufTtcbnZhciBJbWFnZVByZWxvYWRlciA9IChmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBpbWFnZXNMb2FkZWRDYjtcclxuXHJcbiAgICBmdW5jdGlvbiBpbWFnZUxvYWRlZCgpe1xyXG4gICAgICAgIHRoaXMubG9hZGVkQXNzZXRzICs9IDE7XHJcbiAgICAgICAgaWYodGhpcy5sb2FkZWRBc3NldHMgPT09IHRoaXMudG90YWxJbWFnZXMpe1xyXG4gICAgICAgICAgICBpZihpbWFnZXNMb2FkZWRDYikge1xyXG4gICAgICAgICAgICAgICAgaW1hZ2VzTG9hZGVkQ2IobnVsbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0QXNzZXRzUGF0aChhc3NldERhdGEpe1xyXG4gICAgICAgIHZhciBwYXRoID0gJyc7XHJcbiAgICAgICAgaWYodGhpcy5hc3NldHNQYXRoKXtcclxuICAgICAgICAgICAgdmFyIGltYWdlUGF0aCA9IGFzc2V0RGF0YS5wO1xyXG4gICAgICAgICAgICBpZihpbWFnZVBhdGguaW5kZXhPZignaW1hZ2VzLycpICE9PSAtMSl7XHJcbiAgICAgICAgICAgICAgICBpbWFnZVBhdGggPSBpbWFnZVBhdGguc3BsaXQoJy8nKVsxXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwYXRoID0gdGhpcy5hc3NldHNQYXRoICsgaW1hZ2VQYXRoO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBhdGggPSB0aGlzLnBhdGg7XHJcbiAgICAgICAgICAgIHBhdGggKz0gYXNzZXREYXRhLnUgPyBhc3NldERhdGEudSA6ICcnO1xyXG4gICAgICAgICAgICBwYXRoICs9IGFzc2V0RGF0YS5wO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGF0aDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBsb2FkSW1hZ2UocGF0aCl7XHJcbiAgICAgICAgdmFyIGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgaW1hZ2VMb2FkZWQuYmluZCh0aGlzKSwgZmFsc2UpO1xyXG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGltYWdlTG9hZGVkLmJpbmQodGhpcyksIGZhbHNlKTtcclxuICAgICAgICBpbWcuc3JjID0gcGF0aDtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGxvYWRBc3NldHMoYXNzZXRzLCBjYil7XHJcbiAgICAgICAgaW1hZ2VzTG9hZGVkQ2IgPSBjYjtcclxuICAgICAgICB0aGlzLnRvdGFsQXNzZXRzID0gYXNzZXRzLmxlbmd0aDtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICBmb3IoaT0wO2k8dGhpcy50b3RhbEFzc2V0cztpKz0xKXtcclxuICAgICAgICAgICAgaWYoIWFzc2V0c1tpXS5sYXllcnMpe1xyXG4gICAgICAgICAgICAgICAgbG9hZEltYWdlLmJpbmQodGhpcykoZ2V0QXNzZXRzUGF0aC5iaW5kKHRoaXMpKGFzc2V0c1tpXSkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b3RhbEltYWdlcyArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNldFBhdGgocGF0aCl7XHJcbiAgICAgICAgdGhpcy5wYXRoID0gcGF0aCB8fCAnJztcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZXRBc3NldHNQYXRoKHBhdGgpe1xyXG4gICAgICAgIHRoaXMuYXNzZXRzUGF0aCA9IHBhdGggfHwgJyc7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIEltYWdlUHJlbG9hZGVyKCl7XHJcbiAgICAgICAgdGhpcy5sb2FkQXNzZXRzID0gbG9hZEFzc2V0cztcclxuICAgICAgICB0aGlzLnNldEFzc2V0c1BhdGggPSBzZXRBc3NldHNQYXRoO1xyXG4gICAgICAgIHRoaXMuc2V0UGF0aCA9IHNldFBhdGg7XHJcbiAgICAgICAgdGhpcy5hc3NldHNQYXRoID0gJyc7XHJcbiAgICAgICAgdGhpcy5wYXRoID0gJyc7XHJcbiAgICAgICAgdGhpcy50b3RhbEFzc2V0cyA9IDA7XHJcbiAgICAgICAgdGhpcy50b3RhbEltYWdlcyA9IDA7XHJcbiAgICAgICAgdGhpcy5sb2FkZWRBc3NldHMgPSAwO1xyXG4gICAgfVxyXG59KCkpO1xudmFyIGZlYXR1cmVTdXBwb3J0ID0gKGZ1bmN0aW9uKCl7XHJcblx0dmFyIG9iID0ge1xyXG5cdFx0bWFza1R5cGU6IHRydWVcclxuXHR9XHJcblx0aWYgKC9NU0lFIDEwL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSB8fCAvTVNJRSA5L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSB8fCAvcnY6MTEuMC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkgfHwgL0VkZ2VcXC9cXGQuL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkge1xyXG5cdCAgIG9iLm1hc2tUeXBlID0gZmFsc2U7XHJcblx0fVxyXG5cdHJldHVybiBvYjtcclxufSgpKTtcbnZhciBmaWx0ZXJzRmFjdG9yeSA9IChmdW5jdGlvbigpe1xyXG5cdHZhciBvYiA9IHt9O1xyXG5cdG9iLmNyZWF0ZUZpbHRlciA9IGNyZWF0ZUZpbHRlcjtcclxuXHRvYi5jcmVhdGVBbHBoYVRvTHVtaW5hbmNlRmlsdGVyID0gY3JlYXRlQWxwaGFUb0x1bWluYW5jZUZpbHRlcjtcclxuXHJcblx0ZnVuY3Rpb24gY3JlYXRlRmlsdGVyKGZpbElkKXtcclxuICAgICAgICBcdHZhciBmaWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZpbHRlcicpO1xyXG4gICAgICAgIFx0ZmlsLnNldEF0dHJpYnV0ZSgnaWQnLGZpbElkKTtcclxuICAgICAgICAgICAgICAgIGZpbC5zZXRBdHRyaWJ1dGUoJ2ZpbHRlclVuaXRzJywnb2JqZWN0Qm91bmRpbmdCb3gnKTtcclxuICAgICAgICAgICAgICAgIGZpbC5zZXRBdHRyaWJ1dGUoJ3gnLCcwJScpO1xyXG4gICAgICAgICAgICAgICAgZmlsLnNldEF0dHJpYnV0ZSgneScsJzAlJyk7XHJcbiAgICAgICAgICAgICAgICBmaWwuc2V0QXR0cmlidXRlKCd3aWR0aCcsJzEwMCUnKTtcclxuICAgICAgICAgICAgICAgIGZpbC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsJzEwMCUnKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmaWw7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjcmVhdGVBbHBoYVRvTHVtaW5hbmNlRmlsdGVyKCl7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmVDb2xvck1hdHJpeCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVDb2xvck1hdHJpeCcpO1xyXG4gICAgICAgICAgICAgICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCdtYXRyaXgnKTtcclxuICAgICAgICAgICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCdjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMnLCdzUkdCJyk7XHJcbiAgICAgICAgICAgICAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgndmFsdWVzJywnMCAwIDAgMSAwICAwIDAgMCAxIDAgIDAgMCAwIDEgMCAgMCAwIDAgMSAxJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmVDb2xvck1hdHJpeDtcclxuXHR9XHJcblxyXG5cdHJldHVybiBvYjtcclxufSgpKVxuZnVuY3Rpb24gVGV4dEFuaW1hdG9yUHJvcGVydHkodGV4dERhdGEsIHJlbmRlclR5cGUsIGVsZW0pe1xyXG4gICAgdGhpcy5tZGYgPSBmYWxzZTtcclxuICAgIHRoaXMuX2ZpcnN0RnJhbWUgPSB0cnVlO1xyXG5cdHRoaXMuX2hhc01hc2tlZFBhdGggPSBmYWxzZTtcclxuXHR0aGlzLl9mcmFtZUlkID0gLTE7XHJcblx0dGhpcy5fZHluYW1pY1Byb3BlcnRpZXMgPSBbXTtcclxuXHR0aGlzLl90ZXh0RGF0YSA9IHRleHREYXRhO1xyXG5cdHRoaXMuX3JlbmRlclR5cGUgPSByZW5kZXJUeXBlO1xyXG5cdHRoaXMuX2VsZW0gPSBlbGVtO1xyXG5cdHRoaXMuX2FuaW1hdG9yc0RhdGEgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6dGhpcy5fdGV4dERhdGEuYS5sZW5ndGh9KTtcclxuXHR0aGlzLl9wYXRoRGF0YSA9IHt9XHJcblx0dGhpcy5fbW9yZU9wdGlvbnMgPSB7XHJcblx0XHRhbGlnbm1lbnQ6IHt9XHJcblx0fTtcclxuXHR0aGlzLnJlbmRlcmVkTGV0dGVycyA9IFtdO1xyXG4gICAgdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWcgPSBmYWxzZTtcclxuXHJcbn1cclxuXHJcblRleHRBbmltYXRvclByb3BlcnR5LnByb3RvdHlwZS5zZWFyY2hQcm9wZXJ0aWVzID0gZnVuY3Rpb24oZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuX3RleHREYXRhLmEubGVuZ3RoLCBhbmltYXRvckRhdGEsIGFuaW1hdG9yUHJvcHM7XHJcbiAgICB2YXIgZ2V0UHJvcCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBhbmltYXRvclByb3BzID0gdGhpcy5fdGV4dERhdGEuYVtpXTtcclxuICAgICAgICBhbmltYXRvckRhdGEgPSB7XHJcbiAgICAgICAgICAgIGE6IHt9LFxyXG4gICAgICAgICAgICBzOiB7fVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYoJ3InIGluIGFuaW1hdG9yUHJvcHMuYSkge1xyXG4gICAgICAgICAgICBhbmltYXRvckRhdGEuYS5yID0gZ2V0UHJvcCh0aGlzLl9lbGVtLGFuaW1hdG9yUHJvcHMuYS5yLDAsZGVnVG9SYWRzLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3J4JyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEucnggPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLnJ4LDAsZGVnVG9SYWRzLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3J5JyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEucnkgPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLnJ5LDAsZGVnVG9SYWRzLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3NrJyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEuc2sgPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLnNrLDAsZGVnVG9SYWRzLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3NhJyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEuc2EgPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLnNhLDAsZGVnVG9SYWRzLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3MnIGluIGFuaW1hdG9yUHJvcHMuYSkge1xyXG4gICAgICAgICAgICBhbmltYXRvckRhdGEuYS5zID0gZ2V0UHJvcCh0aGlzLl9lbGVtLGFuaW1hdG9yUHJvcHMuYS5zLDEsMC4wMSx0aGlzLl9keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCdhJyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEuYSA9IGdldFByb3AodGhpcy5fZWxlbSxhbmltYXRvclByb3BzLmEuYSwxLDAsdGhpcy5fZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZignbycgaW4gYW5pbWF0b3JQcm9wcy5hKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdG9yRGF0YS5hLm8gPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLm8sMCwwLjAxLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ3AnIGluIGFuaW1hdG9yUHJvcHMuYSkge1xyXG4gICAgICAgICAgICBhbmltYXRvckRhdGEuYS5wID0gZ2V0UHJvcCh0aGlzLl9lbGVtLGFuaW1hdG9yUHJvcHMuYS5wLDEsMCx0aGlzLl9keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCdzdycgaW4gYW5pbWF0b3JQcm9wcy5hKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdG9yRGF0YS5hLnN3ID0gZ2V0UHJvcCh0aGlzLl9lbGVtLGFuaW1hdG9yUHJvcHMuYS5zdywwLDAsdGhpcy5fZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZignc2MnIGluIGFuaW1hdG9yUHJvcHMuYSkge1xyXG4gICAgICAgICAgICBhbmltYXRvckRhdGEuYS5zYyA9IGdldFByb3AodGhpcy5fZWxlbSxhbmltYXRvclByb3BzLmEuc2MsMSwwLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ2ZjJyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEuZmMgPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLmZjLDEsMCx0aGlzLl9keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCdmaCcgaW4gYW5pbWF0b3JQcm9wcy5hKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdG9yRGF0YS5hLmZoID0gZ2V0UHJvcCh0aGlzLl9lbGVtLGFuaW1hdG9yUHJvcHMuYS5maCwwLDAsdGhpcy5fZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZignZnMnIGluIGFuaW1hdG9yUHJvcHMuYSkge1xyXG4gICAgICAgICAgICBhbmltYXRvckRhdGEuYS5mcyA9IGdldFByb3AodGhpcy5fZWxlbSxhbmltYXRvclByb3BzLmEuZnMsMCwwLjAxLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoJ2ZiJyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEuZmIgPSBnZXRQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5hLmZiLDAsMC4wMSx0aGlzLl9keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCd0JyBpbiBhbmltYXRvclByb3BzLmEpIHtcclxuICAgICAgICAgICAgYW5pbWF0b3JEYXRhLmEudCA9IGdldFByb3AodGhpcy5fZWxlbSxhbmltYXRvclByb3BzLmEudCwwLDAsdGhpcy5fZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhbmltYXRvckRhdGEucyA9IFByb3BlcnR5RmFjdG9yeS5nZXRUZXh0U2VsZWN0b3JQcm9wKHRoaXMuX2VsZW0sYW5pbWF0b3JQcm9wcy5zLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICBhbmltYXRvckRhdGEucy50ID0gYW5pbWF0b3JQcm9wcy5zLnQ7XHJcbiAgICAgICAgdGhpcy5fYW5pbWF0b3JzRGF0YVtpXSA9IGFuaW1hdG9yRGF0YTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuX3RleHREYXRhLnAgJiYgJ20nIGluIHRoaXMuX3RleHREYXRhLnApe1xyXG4gICAgICAgIHRoaXMuX3BhdGhEYXRhID0ge1xyXG4gICAgICAgICAgICBmOiBnZXRQcm9wKHRoaXMuX2VsZW0sdGhpcy5fdGV4dERhdGEucC5mLDAsMCx0aGlzLl9keW5hbWljUHJvcGVydGllcyksXHJcbiAgICAgICAgICAgIGw6IGdldFByb3AodGhpcy5fZWxlbSx0aGlzLl90ZXh0RGF0YS5wLmwsMCwwLHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzKSxcclxuICAgICAgICAgICAgcjogdGhpcy5fdGV4dERhdGEucC5yLFxyXG4gICAgICAgICAgICBtOiB0aGlzLl9lbGVtLm1hc2tNYW5hZ2VyLmdldE1hc2tQcm9wZXJ0eSh0aGlzLl90ZXh0RGF0YS5wLm0pXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLl9oYXNNYXNrZWRQYXRoID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5faGFzTWFza2VkUGF0aCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fbW9yZU9wdGlvbnMuYWxpZ25tZW50ID0gZ2V0UHJvcCh0aGlzLl9lbGVtLHRoaXMuX3RleHREYXRhLm0uYSwxLDAsdGhpcy5fZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgaWYodGhpcy5fZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKSB7XHJcbiAgICBcdGR5bmFtaWNQcm9wZXJ0aWVzLnB1c2godGhpcyk7XHJcbiAgICB9XHJcbn1cclxuXHJcblRleHRBbmltYXRvclByb3BlcnR5LnByb3RvdHlwZS5nZXRNZWFzdXJlcyA9IGZ1bmN0aW9uKGRvY3VtZW50RGF0YSwgbGV0dGVyc0NoYW5nZWRGbGFnKXtcclxuICAgIHRoaXMubGV0dGVyc0NoYW5nZWRGbGFnID0gbGV0dGVyc0NoYW5nZWRGbGFnO1xyXG4gICAgaWYoIXRoaXMubWRmICYmICF0aGlzLl9maXJzdEZyYW1lICYmICFsZXR0ZXJzQ2hhbmdlZEZsYWcgJiYgKCF0aGlzLl9oYXNNYXNrZWRQYXRoIHx8ICF0aGlzLl9wYXRoRGF0YS5tLm1kZikpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLl9maXJzdEZyYW1lID0gZmFsc2U7XHJcbiAgICB2YXIgYWxpZ25tZW50ID0gdGhpcy5fbW9yZU9wdGlvbnMuYWxpZ25tZW50LnY7XHJcbiAgICB2YXIgYW5pbWF0b3JzID0gdGhpcy5fYW5pbWF0b3JzRGF0YTtcclxuICAgIHZhciB0ZXh0RGF0YSA9IHRoaXMuX3RleHREYXRhO1xyXG4gICAgdmFyIG1hdHJpeEhlbHBlciA9IHRoaXMubUhlbHBlcjtcclxuICAgIHZhciByZW5kZXJUeXBlID0gdGhpcy5fcmVuZGVyVHlwZTtcclxuICAgIHZhciByZW5kZXJlZExldHRlcnNDb3VudCA9IHRoaXMucmVuZGVyZWRMZXR0ZXJzLmxlbmd0aDtcclxuICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xyXG4gICAgdmFyIHhQb3MseVBvcztcclxuICAgIHZhciBpLCBsZW47XHJcbiAgICB2YXIgbGV0dGVycyA9IGRvY3VtZW50RGF0YS5sO1xyXG4gICAgaWYodGhpcy5faGFzTWFza2VkUGF0aCkge1xyXG4gICAgICAgIHZhciBtYXNrID0gdGhpcy5fcGF0aERhdGEubTtcclxuICAgICAgICBpZighdGhpcy5fcGF0aERhdGEubiB8fCB0aGlzLl9wYXRoRGF0YS5tZGYpe1xyXG4gICAgICAgICAgICB2YXIgcGF0aHMgPSBtYXNrLnY7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuX3BhdGhEYXRhLnIpe1xyXG4gICAgICAgICAgICAgICAgcGF0aHMgPSByZXZlcnNlUGF0aChwYXRocyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHBhdGhJbmZvID0ge1xyXG4gICAgICAgICAgICAgICAgdExlbmd0aDogMCxcclxuICAgICAgICAgICAgICAgIHNlZ21lbnRzOiBbXVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBsZW4gPSBwYXRocy5fbGVuZ3RoIC0gMTtcclxuICAgICAgICAgICAgdmFyIHBhdGhEYXRhO1xyXG4gICAgICAgICAgICB2YXIgdG90YWxMZW5ndGggPSAwO1xyXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgICAgIHBhdGhEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHM6IHBhdGhzLnZbaV0sXHJcbiAgICAgICAgICAgICAgICAgICAgZTogcGF0aHMudltpICsgMV0sXHJcbiAgICAgICAgICAgICAgICAgICAgdG86IFtwYXRocy5vW2ldWzBdIC0gcGF0aHMudltpXVswXSwgcGF0aHMub1tpXVsxXSAtIHBhdGhzLnZbaV1bMV1dLFxyXG4gICAgICAgICAgICAgICAgICAgIHRpOiBbcGF0aHMuaVtpICsgMV1bMF0gLSBwYXRocy52W2kgKyAxXVswXSwgcGF0aHMuaVtpICsgMV1bMV0gLSBwYXRocy52W2kgKyAxXVsxXV1cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBiZXouYnVpbGRCZXppZXJEYXRhKHBhdGhEYXRhKTtcclxuICAgICAgICAgICAgICAgIHBhdGhJbmZvLnRMZW5ndGggKz0gcGF0aERhdGEuYmV6aWVyRGF0YS5zZWdtZW50TGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgcGF0aEluZm8uc2VnbWVudHMucHVzaChwYXRoRGF0YSk7XHJcbiAgICAgICAgICAgICAgICB0b3RhbExlbmd0aCArPSBwYXRoRGF0YS5iZXppZXJEYXRhLnNlZ21lbnRMZW5ndGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSA9IGxlbjtcclxuICAgICAgICAgICAgaWYgKG1hc2sudi5jKSB7XHJcbiAgICAgICAgICAgICAgICBwYXRoRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBzOiBwYXRocy52W2ldLFxyXG4gICAgICAgICAgICAgICAgICAgIGU6IHBhdGhzLnZbMF0sXHJcbiAgICAgICAgICAgICAgICAgICAgdG86IFtwYXRocy5vW2ldWzBdIC0gcGF0aHMudltpXVswXSwgcGF0aHMub1tpXVsxXSAtIHBhdGhzLnZbaV1bMV1dLFxyXG4gICAgICAgICAgICAgICAgICAgIHRpOiBbcGF0aHMuaVswXVswXSAtIHBhdGhzLnZbMF1bMF0sIHBhdGhzLmlbMF1bMV0gLSBwYXRocy52WzBdWzFdXVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGJlei5idWlsZEJlemllckRhdGEocGF0aERhdGEpO1xyXG4gICAgICAgICAgICAgICAgcGF0aEluZm8udExlbmd0aCArPSBwYXRoRGF0YS5iZXppZXJEYXRhLnNlZ21lbnRMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBwYXRoSW5mby5zZWdtZW50cy5wdXNoKHBhdGhEYXRhKTtcclxuICAgICAgICAgICAgICAgIHRvdGFsTGVuZ3RoICs9IHBhdGhEYXRhLmJlemllckRhdGEuc2VnbWVudExlbmd0aDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9wYXRoRGF0YS5waSA9IHBhdGhJbmZvO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcGF0aEluZm8gPSB0aGlzLl9wYXRoRGF0YS5waTtcclxuXHJcbiAgICAgICAgdmFyIGN1cnJlbnRMZW5ndGggPSB0aGlzLl9wYXRoRGF0YS5mLnYsIHNlZ21lbnRJbmQgPSAwLCBwb2ludEluZCA9IDEsIGN1cnJlbnRQb2ludCwgcHJldlBvaW50LCBwb2ludHM7XHJcbiAgICAgICAgdmFyIHNlZ21lbnRMZW5ndGggPSAwLCBmbGFnID0gdHJ1ZTtcclxuICAgICAgICB2YXIgc2VnbWVudHMgPSBwYXRoSW5mby5zZWdtZW50cztcclxuICAgICAgICBpZiAoY3VycmVudExlbmd0aCA8IDAgJiYgbWFzay52LmMpIHtcclxuICAgICAgICAgICAgaWYgKHBhdGhJbmZvLnRMZW5ndGggPCBNYXRoLmFicyhjdXJyZW50TGVuZ3RoKSkge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudExlbmd0aCA9IC1NYXRoLmFicyhjdXJyZW50TGVuZ3RoKSAlIHBhdGhJbmZvLnRMZW5ndGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2VnbWVudEluZCA9IHNlZ21lbnRzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgICAgIHBvaW50cyA9IHNlZ21lbnRzW3NlZ21lbnRJbmRdLmJlemllckRhdGEucG9pbnRzO1xyXG4gICAgICAgICAgICBwb2ludEluZCA9IHBvaW50cy5sZW5ndGggLSAxO1xyXG4gICAgICAgICAgICB3aGlsZSAoY3VycmVudExlbmd0aCA8IDApIHtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggKz0gcG9pbnRzW3BvaW50SW5kXS5wYXJ0aWFsTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgcG9pbnRJbmQgLT0gMTtcclxuICAgICAgICAgICAgICAgIGlmIChwb2ludEluZCA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWdtZW50SW5kIC09IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRzID0gc2VnbWVudHNbc2VnbWVudEluZF0uYmV6aWVyRGF0YS5wb2ludHM7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9pbnRJbmQgPSBwb2ludHMubGVuZ3RoIC0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgcG9pbnRzID0gc2VnbWVudHNbc2VnbWVudEluZF0uYmV6aWVyRGF0YS5wb2ludHM7XHJcbiAgICAgICAgcHJldlBvaW50ID0gcG9pbnRzW3BvaW50SW5kIC0gMV07XHJcbiAgICAgICAgY3VycmVudFBvaW50ID0gcG9pbnRzW3BvaW50SW5kXTtcclxuICAgICAgICB2YXIgcGFydGlhbExlbmd0aCA9IGN1cnJlbnRQb2ludC5wYXJ0aWFsTGVuZ3RoO1xyXG4gICAgICAgIHZhciBwZXJjLCB0YW5BbmdsZTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgbGVuID0gbGV0dGVycy5sZW5ndGg7XHJcbiAgICB4UG9zID0gMDtcclxuICAgIHlQb3MgPSAwO1xyXG4gICAgdmFyIHlPZmYgPSBkb2N1bWVudERhdGEucyoxLjIqLjcxNDtcclxuICAgIHZhciBmaXJzdExpbmUgPSB0cnVlO1xyXG4gICAgdmFyIGFuaW1hdG9yUHJvcHMsIGFuaW1hdG9yU2VsZWN0b3I7XHJcbiAgICB2YXIgaiwgakxlbjtcclxuICAgIHZhciBsZXR0ZXJWYWx1ZTtcclxuXHJcbiAgICBqTGVuID0gYW5pbWF0b3JzLmxlbmd0aDtcclxuICAgIGlmIChsZXR0ZXJzQ2hhbmdlZEZsYWcpIHtcclxuICAgICAgICBmb3IgKGogPSAwOyBqIDwgakxlbjsgaiArPSAxKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdG9yU2VsZWN0b3IgPSBhbmltYXRvcnNbal0ucztcclxuICAgICAgICAgICAgYW5pbWF0b3JTZWxlY3Rvci5nZXRWYWx1ZSh0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB2YXIgbGFzdExldHRlcjtcclxuXHJcbiAgICB2YXIgbXVsdCwgaW5kID0gLTEsIG9mZmYsIHhQYXRoUG9zLCB5UGF0aFBvcztcclxuICAgIHZhciBpbml0UGF0aFBvcyA9IGN1cnJlbnRMZW5ndGgsaW5pdFNlZ21lbnRJbmQgPSBzZWdtZW50SW5kLCBpbml0UG9pbnRJbmQgPSBwb2ludEluZCwgY3VycmVudExpbmUgPSAtMTtcclxuICAgIHZhciBlbGVtT3BhY2l0eTtcclxuICAgIHZhciBzYyxzdyxmYyxrO1xyXG4gICAgdmFyIGxpbmVMZW5ndGggPSAwO1xyXG4gICAgdmFyIGxldHRlclN3LGxldHRlclNjLGxldHRlckZjLGxldHRlck0gPSAnJyxsZXR0ZXJQID0gdGhpcy5kZWZhdWx0UHJvcHNBcnJheSxsZXR0ZXJPO1xyXG4gICAgZm9yKCBpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgbWF0cml4SGVscGVyLnJlc2V0KCk7XHJcbiAgICAgICAgZWxlbU9wYWNpdHkgPSAxO1xyXG4gICAgICAgIGlmKGxldHRlcnNbaV0ubikge1xyXG4gICAgICAgICAgICB4UG9zID0gMDtcclxuICAgICAgICAgICAgeVBvcyArPSBkb2N1bWVudERhdGEueU9mZnNldDtcclxuICAgICAgICAgICAgeVBvcyArPSBmaXJzdExpbmUgPyAxIDogMDtcclxuICAgICAgICAgICAgY3VycmVudExlbmd0aCA9IGluaXRQYXRoUG9zIDtcclxuICAgICAgICAgICAgZmlyc3RMaW5lID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGxpbmVMZW5ndGggPSAwO1xyXG4gICAgICAgICAgICBpZih0aGlzLl9oYXNNYXNrZWRQYXRoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWdtZW50SW5kID0gaW5pdFNlZ21lbnRJbmQ7XHJcbiAgICAgICAgICAgICAgICBwb2ludEluZCA9IGluaXRQb2ludEluZDtcclxuICAgICAgICAgICAgICAgIHBvaW50cyA9IHNlZ21lbnRzW3NlZ21lbnRJbmRdLmJlemllckRhdGEucG9pbnRzO1xyXG4gICAgICAgICAgICAgICAgcHJldlBvaW50ID0gcG9pbnRzW3BvaW50SW5kIC0gMV07XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UG9pbnQgPSBwb2ludHNbcG9pbnRJbmRdO1xyXG4gICAgICAgICAgICAgICAgcGFydGlhbExlbmd0aCA9IGN1cnJlbnRQb2ludC5wYXJ0aWFsTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgc2VnbWVudExlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0dGVyTyA9IGxldHRlclN3ID0gbGV0dGVyRmMgPSBsZXR0ZXJNID0gJyc7XHJcbiAgICAgICAgICAgIGxldHRlclAgPSB0aGlzLmRlZmF1bHRQcm9wc0FycmF5O1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBpZih0aGlzLl9oYXNNYXNrZWRQYXRoKSB7XHJcbiAgICAgICAgICAgICAgICBpZihjdXJyZW50TGluZSAhPT0gbGV0dGVyc1tpXS5saW5lKXtcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2goZG9jdW1lbnREYXRhLmope1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGVuZ3RoICs9IHRvdGFsTGVuZ3RoIC0gZG9jdW1lbnREYXRhLmxpbmVXaWR0aHNbbGV0dGVyc1tpXS5saW5lXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGVuZ3RoICs9ICh0b3RhbExlbmd0aCAtIGRvY3VtZW50RGF0YS5saW5lV2lkdGhzW2xldHRlcnNbaV0ubGluZV0pLzI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudExpbmUgPSBsZXR0ZXJzW2ldLmxpbmU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5kICE9PSBsZXR0ZXJzW2ldLmluZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChsZXR0ZXJzW2luZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudExlbmd0aCArPSBsZXR0ZXJzW2luZF0uZXh0cmE7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggKz0gbGV0dGVyc1tpXS5hbiAvIDI7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kID0gbGV0dGVyc1tpXS5pbmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TGVuZ3RoICs9IGFsaWdubWVudFswXSAqIGxldHRlcnNbaV0uYW4gLyAyMDA7XHJcbiAgICAgICAgICAgICAgICB2YXIgYW5pbWF0b3JPZmZzZXQgPSAwO1xyXG4gICAgICAgICAgICAgICAgZm9yIChqID0gMDsgaiA8IGpMZW47IGogKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdG9yUHJvcHMgPSBhbmltYXRvcnNbal0uYTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJ3AnIGluIGFuaW1hdG9yUHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0b3JTZWxlY3RvciA9IGFuaW1hdG9yc1tqXS5zO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtdWx0ID0gYW5pbWF0b3JTZWxlY3Rvci5nZXRNdWx0KGxldHRlcnNbaV0uYW5JbmRleGVzW2pdLHRleHREYXRhLmFbal0ucy50b3RhbENoYXJzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0b3JPZmZzZXQgKz0gYW5pbWF0b3JQcm9wcy5wLnZbMF0gKiBtdWx0WzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRvck9mZnNldCArPSBhbmltYXRvclByb3BzLnAudlswXSAqIG11bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICgnYScgaW4gYW5pbWF0b3JQcm9wcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRvclNlbGVjdG9yID0gYW5pbWF0b3JzW2pdLnM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHQgPSBhbmltYXRvclNlbGVjdG9yLmdldE11bHQobGV0dGVyc1tpXS5hbkluZGV4ZXNbal0sdGV4dERhdGEuYVtqXS5zLnRvdGFsQ2hhcnMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRvck9mZnNldCArPSBhbmltYXRvclByb3BzLmEudlswXSAqIG11bHRbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1hdG9yT2Zmc2V0ICs9IGFuaW1hdG9yUHJvcHMuYS52WzBdICogbXVsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHdoaWxlIChmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlZ21lbnRMZW5ndGggKyBwYXJ0aWFsTGVuZ3RoID49IGN1cnJlbnRMZW5ndGggKyBhbmltYXRvck9mZnNldCB8fCAhcG9pbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcmMgPSAoY3VycmVudExlbmd0aCArIGFuaW1hdG9yT2Zmc2V0IC0gc2VnbWVudExlbmd0aCkgLyBjdXJyZW50UG9pbnQucGFydGlhbExlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeFBhdGhQb3MgPSBwcmV2UG9pbnQucG9pbnRbMF0gKyAoY3VycmVudFBvaW50LnBvaW50WzBdIC0gcHJldlBvaW50LnBvaW50WzBdKSAqIHBlcmM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHlQYXRoUG9zID0gcHJldlBvaW50LnBvaW50WzFdICsgKGN1cnJlbnRQb2ludC5wb2ludFsxXSAtIHByZXZQb2ludC5wb2ludFsxXSkgKiBwZXJjO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKC1hbGlnbm1lbnRbMF0qbGV0dGVyc1tpXS5hbi8yMDAsIC0oYWxpZ25tZW50WzFdICogeU9mZiAvIDEwMCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwb2ludHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VnbWVudExlbmd0aCArPSBjdXJyZW50UG9pbnQucGFydGlhbExlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRJbmQgKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBvaW50SW5kID49IHBvaW50cy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50SW5kID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlZ21lbnRJbmQgKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2VnbWVudHNbc2VnbWVudEluZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWFzay52LmMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRJbmQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWdtZW50SW5kID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzID0gc2VnbWVudHNbc2VnbWVudEluZF0uYmV6aWVyRGF0YS5wb2ludHM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VnbWVudExlbmd0aCAtPSBjdXJyZW50UG9pbnQucGFydGlhbExlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50cyA9IHNlZ21lbnRzW3NlZ21lbnRJbmRdLmJlemllckRhdGEucG9pbnRzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb2ludHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZQb2ludCA9IGN1cnJlbnRQb2ludDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQb2ludCA9IHBvaW50c1twb2ludEluZF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJ0aWFsTGVuZ3RoID0gY3VycmVudFBvaW50LnBhcnRpYWxMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvZmZmID0gbGV0dGVyc1tpXS5hbiAvIDIgLSBsZXR0ZXJzW2ldLmFkZDtcclxuICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoLW9mZmYsIDAsIDApO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgb2ZmZiA9IGxldHRlcnNbaV0uYW4vMiAtIGxldHRlcnNbaV0uYWRkO1xyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZSgtb2ZmZiwwLDApO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIEdyb3VwaW5nIGFsaWdubWVudFxyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZSgtYWxpZ25tZW50WzBdKmxldHRlcnNbaV0uYW4vMjAwLCAtYWxpZ25tZW50WzFdKnlPZmYvMTAwLCAwKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGluZUxlbmd0aCArPSBsZXR0ZXJzW2ldLmwvMjtcclxuICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRvclByb3BzID0gYW5pbWF0b3JzW2pdLmE7XHJcbiAgICAgICAgICAgICAgICBpZiAoJ3QnIGluIGFuaW1hdG9yUHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbmltYXRvclNlbGVjdG9yID0gYW5pbWF0b3JzW2pdLnM7XHJcbiAgICAgICAgICAgICAgICAgICAgbXVsdCA9IGFuaW1hdG9yU2VsZWN0b3IuZ2V0TXVsdChsZXR0ZXJzW2ldLmFuSW5kZXhlc1tqXSx0ZXh0RGF0YS5hW2pdLnMudG90YWxDaGFycyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5faGFzTWFza2VkUGF0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudExlbmd0aCArPSBhbmltYXRvclByb3BzLnQqbXVsdFswXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggKz0gYW5pbWF0b3JQcm9wcy50Km11bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhQb3MgKz0gYW5pbWF0b3JQcm9wcy50LnYqbXVsdFswXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhQb3MgKz0gYW5pbWF0b3JQcm9wcy50LnYqbXVsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaW5lTGVuZ3RoICs9IGxldHRlcnNbaV0ubC8yO1xyXG4gICAgICAgICAgICBpZihkb2N1bWVudERhdGEuc3Ryb2tlV2lkdGhBbmltKSB7XHJcbiAgICAgICAgICAgICAgICBzdyA9IGRvY3VtZW50RGF0YS5zdyB8fCAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRvY3VtZW50RGF0YS5zdHJva2VDb2xvckFuaW0pIHtcclxuICAgICAgICAgICAgICAgIGlmKGRvY3VtZW50RGF0YS5zYyl7XHJcbiAgICAgICAgICAgICAgICAgICAgc2MgPSBbZG9jdW1lbnREYXRhLnNjWzBdLCBkb2N1bWVudERhdGEuc2NbMV0sIGRvY3VtZW50RGF0YS5zY1syXV07XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBzYyA9IFswLDAsMF07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZG9jdW1lbnREYXRhLmZpbGxDb2xvckFuaW0gJiYgZG9jdW1lbnREYXRhLmZjKSB7XHJcbiAgICAgICAgICAgICAgICBmYyA9IFtkb2N1bWVudERhdGEuZmNbMF0sIGRvY3VtZW50RGF0YS5mY1sxXSwgZG9jdW1lbnREYXRhLmZjWzJdXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgIGFuaW1hdG9yUHJvcHMgPSBhbmltYXRvcnNbal0uYTtcclxuICAgICAgICAgICAgICAgIGlmICgnYScgaW4gYW5pbWF0b3JQcm9wcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdG9yU2VsZWN0b3IgPSBhbmltYXRvcnNbal0ucztcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gYW5pbWF0b3JTZWxlY3Rvci5nZXRNdWx0KGxldHRlcnNbaV0uYW5JbmRleGVzW2pdLHRleHREYXRhLmFbal0ucy50b3RhbENoYXJzKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKC1hbmltYXRvclByb3BzLmEudlswXSptdWx0WzBdLCAtYW5pbWF0b3JQcm9wcy5hLnZbMV0qbXVsdFsxXSwgYW5pbWF0b3JQcm9wcy5hLnZbMl0qbXVsdFsyXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZSgtYW5pbWF0b3JQcm9wcy5hLnZbMF0qbXVsdCwgLWFuaW1hdG9yUHJvcHMuYS52WzFdKm11bHQsIGFuaW1hdG9yUHJvcHMuYS52WzJdKm11bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgIGFuaW1hdG9yUHJvcHMgPSBhbmltYXRvcnNbal0uYTtcclxuICAgICAgICAgICAgICAgIGlmICgncycgaW4gYW5pbWF0b3JQcm9wcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdG9yU2VsZWN0b3IgPSBhbmltYXRvcnNbal0ucztcclxuICAgICAgICAgICAgICAgICAgICBtdWx0ID0gYW5pbWF0b3JTZWxlY3Rvci5nZXRNdWx0KGxldHRlcnNbaV0uYW5JbmRleGVzW2pdLHRleHREYXRhLmFbal0ucy50b3RhbENoYXJzKTtcclxuICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci5zY2FsZSgxKygoYW5pbWF0b3JQcm9wcy5zLnZbMF0tMSkqbXVsdFswXSksMSsoKGFuaW1hdG9yUHJvcHMucy52WzFdLTEpKm11bHRbMV0pLDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci5zY2FsZSgxKygoYW5pbWF0b3JQcm9wcy5zLnZbMF0tMSkqbXVsdCksMSsoKGFuaW1hdG9yUHJvcHMucy52WzFdLTEpKm11bHQpLDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKSB7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRvclByb3BzID0gYW5pbWF0b3JzW2pdLmE7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRvclNlbGVjdG9yID0gYW5pbWF0b3JzW2pdLnM7XHJcbiAgICAgICAgICAgICAgICBtdWx0ID0gYW5pbWF0b3JTZWxlY3Rvci5nZXRNdWx0KGxldHRlcnNbaV0uYW5JbmRleGVzW2pdLHRleHREYXRhLmFbal0ucy50b3RhbENoYXJzKTtcclxuICAgICAgICAgICAgICAgIGlmICgnc2snIGluIGFuaW1hdG9yUHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIuc2tld0Zyb21BeGlzKC1hbmltYXRvclByb3BzLnNrLnYgKiBtdWx0WzBdLCBhbmltYXRvclByb3BzLnNhLnYgKiBtdWx0WzFdKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIuc2tld0Zyb21BeGlzKC1hbmltYXRvclByb3BzLnNrLnYgKiBtdWx0LCBhbmltYXRvclByb3BzLnNhLnYgKiBtdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJ3InIGluIGFuaW1hdG9yUHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIucm90YXRlWigtYW5pbWF0b3JQcm9wcy5yLnYgKiBtdWx0WzJdKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIucm90YXRlWigtYW5pbWF0b3JQcm9wcy5yLnYgKiBtdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJ3J5JyBpbiBhbmltYXRvclByb3BzKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmKG11bHQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci5yb3RhdGVZKGFuaW1hdG9yUHJvcHMucnkudiptdWx0WzFdKTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnJvdGF0ZVkoYW5pbWF0b3JQcm9wcy5yeS52Km11bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgncngnIGluIGFuaW1hdG9yUHJvcHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIucm90YXRlWChhbmltYXRvclByb3BzLnJ4LnYqbXVsdFswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnJvdGF0ZVgoYW5pbWF0b3JQcm9wcy5yeC52Km11bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgnbycgaW4gYW5pbWF0b3JQcm9wcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKG11bHQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1PcGFjaXR5ICs9ICgoYW5pbWF0b3JQcm9wcy5vLnYpKm11bHRbMF0gLSBlbGVtT3BhY2l0eSkqbXVsdFswXTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtT3BhY2l0eSArPSAoKGFuaW1hdG9yUHJvcHMuby52KSptdWx0IC0gZWxlbU9wYWNpdHkpKm11bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50RGF0YS5zdHJva2VXaWR0aEFuaW0gJiYgJ3N3JyBpbiBhbmltYXRvclByb3BzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3cgKz0gYW5pbWF0b3JQcm9wcy5zdy52Km11bHRbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3cgKz0gYW5pbWF0b3JQcm9wcy5zdy52Km11bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50RGF0YS5zdHJva2VDb2xvckFuaW0gJiYgJ3NjJyBpbiBhbmltYXRvclByb3BzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGs9MDtrPDM7ays9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG11bHQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY1trXSA9IHNjW2tdICsgKGFuaW1hdG9yUHJvcHMuc2MudltrXSAtIHNjW2tdKSptdWx0WzBdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY1trXSA9IHNjW2tdICsgKGFuaW1hdG9yUHJvcHMuc2MudltrXSAtIHNjW2tdKSptdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50RGF0YS5maWxsQ29sb3JBbmltICYmIGRvY3VtZW50RGF0YS5mYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKCdmYycgaW4gYW5pbWF0b3JQcm9wcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcihrPTA7azwzO2srPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmY1trXSA9IGZjW2tdICsgKGFuaW1hdG9yUHJvcHMuZmMudltrXSAtIGZjW2tdKSptdWx0WzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmY1trXSA9IGZjW2tdICsgKGFuaW1hdG9yUHJvcHMuZmMudltrXSAtIGZjW2tdKSptdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKCdmaCcgaW4gYW5pbWF0b3JQcm9wcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG11bHQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYyA9IGFkZEh1ZVRvUkdCKGZjLGFuaW1hdG9yUHJvcHMuZmgudiptdWx0WzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZjID0gYWRkSHVlVG9SR0IoZmMsYW5pbWF0b3JQcm9wcy5maC52Km11bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKCdmcycgaW4gYW5pbWF0b3JQcm9wcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG11bHQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYyA9IGFkZFNhdHVyYXRpb25Ub1JHQihmYyxhbmltYXRvclByb3BzLmZzLnYqbXVsdFswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYyA9IGFkZFNhdHVyYXRpb25Ub1JHQihmYyxhbmltYXRvclByb3BzLmZzLnYqbXVsdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoJ2ZiJyBpbiBhbmltYXRvclByb3BzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZjID0gYWRkQnJpZ2h0bmVzc1RvUkdCKGZjLGFuaW1hdG9yUHJvcHMuZmIudiptdWx0WzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZjID0gYWRkQnJpZ2h0bmVzc1RvUkdCKGZjLGFuaW1hdG9yUHJvcHMuZmIudiptdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgICAgICBhbmltYXRvclByb3BzID0gYW5pbWF0b3JzW2pdLmE7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCdwJyBpbiBhbmltYXRvclByb3BzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0b3JTZWxlY3RvciA9IGFuaW1hdG9yc1tqXS5zO1xyXG4gICAgICAgICAgICAgICAgICAgIG11bHQgPSBhbmltYXRvclNlbGVjdG9yLmdldE11bHQobGV0dGVyc1tpXS5hbkluZGV4ZXNbal0sdGV4dERhdGEuYVtqXS5zLnRvdGFsQ2hhcnMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuX2hhc01hc2tlZFBhdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYobXVsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoMCwgYW5pbWF0b3JQcm9wcy5wLnZbMV0gKiBtdWx0WzBdLCAtYW5pbWF0b3JQcm9wcy5wLnZbMl0gKiBtdWx0WzFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoMCwgYW5pbWF0b3JQcm9wcy5wLnZbMV0gKiBtdWx0LCAtYW5pbWF0b3JQcm9wcy5wLnZbMl0gKiBtdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihtdWx0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZShhbmltYXRvclByb3BzLnAudlswXSAqIG11bHRbMF0sIGFuaW1hdG9yUHJvcHMucC52WzFdICogbXVsdFsxXSwgLWFuaW1hdG9yUHJvcHMucC52WzJdICogbXVsdFsyXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKGFuaW1hdG9yUHJvcHMucC52WzBdICogbXVsdCwgYW5pbWF0b3JQcm9wcy5wLnZbMV0gKiBtdWx0LCAtYW5pbWF0b3JQcm9wcy5wLnZbMl0gKiBtdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihkb2N1bWVudERhdGEuc3Ryb2tlV2lkdGhBbmltKXtcclxuICAgICAgICAgICAgICAgIGxldHRlclN3ID0gc3cgPCAwID8gMCA6IHN3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGRvY3VtZW50RGF0YS5zdHJva2VDb2xvckFuaW0pe1xyXG4gICAgICAgICAgICAgICAgbGV0dGVyU2MgPSAncmdiKCcrTWF0aC5yb3VuZChzY1swXSoyNTUpKycsJytNYXRoLnJvdW5kKHNjWzFdKjI1NSkrJywnK01hdGgucm91bmQoc2NbMl0qMjU1KSsnKSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZG9jdW1lbnREYXRhLmZpbGxDb2xvckFuaW0gJiYgZG9jdW1lbnREYXRhLmZjKXtcclxuICAgICAgICAgICAgICAgIGxldHRlckZjID0gJ3JnYignK01hdGgucm91bmQoZmNbMF0qMjU1KSsnLCcrTWF0aC5yb3VuZChmY1sxXSoyNTUpKycsJytNYXRoLnJvdW5kKGZjWzJdKjI1NSkrJyknO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZih0aGlzLl9oYXNNYXNrZWRQYXRoKSB7XHJcbiAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKDAsLWRvY3VtZW50RGF0YS5scyk7XHJcblxyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZSgwLCBhbGlnbm1lbnRbMV0qeU9mZi8xMDAgKyB5UG9zLDApO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRleHREYXRhLnAucCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhbkFuZ2xlID0gKGN1cnJlbnRQb2ludC5wb2ludFsxXSAtIHByZXZQb2ludC5wb2ludFsxXSkgLyAoY3VycmVudFBvaW50LnBvaW50WzBdIC0gcHJldlBvaW50LnBvaW50WzBdKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcm90ID0gTWF0aC5hdGFuKHRhbkFuZ2xlKSAqIDE4MCAvIE1hdGguUEk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRQb2ludC5wb2ludFswXSA8IHByZXZQb2ludC5wb2ludFswXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3QgKz0gMTgwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIucm90YXRlKC1yb3QgKiBNYXRoLlBJIC8gMTgwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoeFBhdGhQb3MsIHlQYXRoUG9zLCAwKTtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRMZW5ndGggLT0gYWxpZ25tZW50WzBdKmxldHRlcnNbaV0uYW4vMjAwO1xyXG4gICAgICAgICAgICAgICAgaWYobGV0dGVyc1tpKzFdICYmIGluZCAhPT0gbGV0dGVyc1tpKzFdLmluZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudExlbmd0aCArPSBsZXR0ZXJzW2ldLmFuIC8gMjtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGVuZ3RoICs9IGRvY3VtZW50RGF0YS50ci8xMDAwKmRvY3VtZW50RGF0YS5zO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuXHJcbiAgICAgICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKHhQb3MseVBvcywwKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZihkb2N1bWVudERhdGEucHMpe1xyXG4gICAgICAgICAgICAgICAgICAgIC8vbWF0cml4SGVscGVyLnRyYW5zbGF0ZShkb2N1bWVudERhdGEucHNbMF0sZG9jdW1lbnREYXRhLnBzWzFdLDApO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoZG9jdW1lbnREYXRhLnBzWzBdLGRvY3VtZW50RGF0YS5wc1sxXSArIGRvY3VtZW50RGF0YS5hc2NlbnQsMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2goZG9jdW1lbnREYXRhLmope1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZShkb2N1bWVudERhdGEuanVzdGlmeU9mZnNldCArIChkb2N1bWVudERhdGEuYm94V2lkdGggLSBkb2N1bWVudERhdGEubGluZVdpZHRoc1tsZXR0ZXJzW2ldLmxpbmVdKSwwLDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoZG9jdW1lbnREYXRhLmp1c3RpZnlPZmZzZXQgKyAoZG9jdW1lbnREYXRhLmJveFdpZHRoIC0gZG9jdW1lbnREYXRhLmxpbmVXaWR0aHNbbGV0dGVyc1tpXS5saW5lXSkvMiwwLDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoMCwtZG9jdW1lbnREYXRhLmxzKTtcclxuICAgICAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUob2ZmZiwwLDApO1xyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZShhbGlnbm1lbnRbMF0qbGV0dGVyc1tpXS5hbi8yMDAsYWxpZ25tZW50WzFdKnlPZmYvMTAwLDApO1xyXG4gICAgICAgICAgICAgICAgeFBvcyArPSBsZXR0ZXJzW2ldLmwgKyBkb2N1bWVudERhdGEudHIvMTAwMCpkb2N1bWVudERhdGEucztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihyZW5kZXJUeXBlID09PSAnaHRtbCcpe1xyXG4gICAgICAgICAgICAgICAgbGV0dGVyTSA9IG1hdHJpeEhlbHBlci50b0NTUygpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihyZW5kZXJUeXBlID09PSAnc3ZnJyl7XHJcbiAgICAgICAgICAgICAgICBsZXR0ZXJNID0gbWF0cml4SGVscGVyLnRvMmRDU1MoKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBsZXR0ZXJQID0gW21hdHJpeEhlbHBlci5wcm9wc1swXSxtYXRyaXhIZWxwZXIucHJvcHNbMV0sbWF0cml4SGVscGVyLnByb3BzWzJdLG1hdHJpeEhlbHBlci5wcm9wc1szXSxtYXRyaXhIZWxwZXIucHJvcHNbNF0sbWF0cml4SGVscGVyLnByb3BzWzVdLG1hdHJpeEhlbHBlci5wcm9wc1s2XSxtYXRyaXhIZWxwZXIucHJvcHNbN10sbWF0cml4SGVscGVyLnByb3BzWzhdLG1hdHJpeEhlbHBlci5wcm9wc1s5XSxtYXRyaXhIZWxwZXIucHJvcHNbMTBdLG1hdHJpeEhlbHBlci5wcm9wc1sxMV0sbWF0cml4SGVscGVyLnByb3BzWzEyXSxtYXRyaXhIZWxwZXIucHJvcHNbMTNdLG1hdHJpeEhlbHBlci5wcm9wc1sxNF0sbWF0cml4SGVscGVyLnByb3BzWzE1XV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0dGVyTyA9IGVsZW1PcGFjaXR5O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXJzQ291bnQgPD0gaSkge1xyXG4gICAgICAgICAgICBsZXR0ZXJWYWx1ZSA9IG5ldyBMZXR0ZXJQcm9wcyhsZXR0ZXJPLGxldHRlclN3LGxldHRlclNjLGxldHRlckZjLGxldHRlck0sbGV0dGVyUCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZWRMZXR0ZXJzLnB1c2gobGV0dGVyVmFsdWUpO1xyXG4gICAgICAgICAgICByZW5kZXJlZExldHRlcnNDb3VudCArPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmxldHRlcnNDaGFuZ2VkRmxhZyA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGV0dGVyVmFsdWUgPSB0aGlzLnJlbmRlcmVkTGV0dGVyc1tpXTtcclxuICAgICAgICAgICAgdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWcgPSBsZXR0ZXJWYWx1ZS51cGRhdGUobGV0dGVyTywgbGV0dGVyU3csIGxldHRlclNjLCBsZXR0ZXJGYywgbGV0dGVyTSwgbGV0dGVyUCkgfHwgdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5UZXh0QW5pbWF0b3JQcm9wZXJ0eS5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbigpe1xyXG5cdGlmKHRoaXMuX2VsZW0uZ2xvYmFsRGF0YS5mcmFtZUlkID09PSB0aGlzLl9mcmFtZUlkKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLl9mcmFtZUlkID0gdGhpcy5fZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQ7XHJcblx0dmFyIGksIGxlbiA9IHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIHRoaXMubWRmID0gZmFsc2U7XHJcblx0Zm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuXHRcdHRoaXMuX2R5bmFtaWNQcm9wZXJ0aWVzW2ldLmdldFZhbHVlKCk7XHJcbiAgICAgICAgdGhpcy5tZGYgPSB0aGlzLl9keW5hbWljUHJvcGVydGllc1tpXS5tZGYgfHwgdGhpcy5tZGY7XHJcblx0fVxyXG59XHJcblxyXG5UZXh0QW5pbWF0b3JQcm9wZXJ0eS5wcm90b3R5cGUubUhlbHBlciA9IG5ldyBNYXRyaXgoKTtcclxuVGV4dEFuaW1hdG9yUHJvcGVydHkucHJvdG90eXBlLmRlZmF1bHRQcm9wc0FycmF5ID0gW107XG5mdW5jdGlvbiBMZXR0ZXJQcm9wcyhvLCBzdywgc2MsIGZjLCBtLCBwKXtcclxuICAgIHRoaXMubyA9IG87XHJcbiAgICB0aGlzLnN3ID0gc3c7XHJcbiAgICB0aGlzLnNjID0gc2M7XHJcbiAgICB0aGlzLmZjID0gZmM7XHJcbiAgICB0aGlzLm0gPSBtO1xyXG4gICAgdGhpcy5wID0gcDtcclxuICAgIHRoaXMubWRmID0ge1xyXG4gICAgXHRvOiB0cnVlLFxyXG4gICAgXHRzdzogISFzdyxcclxuICAgIFx0c2M6ICEhc2MsXHJcbiAgICBcdGZjOiAhIWZjLFxyXG4gICAgXHRtOiB0cnVlLFxyXG4gICAgXHRwOiB0cnVlXHJcbiAgICB9O1xyXG59XHJcblxyXG5MZXR0ZXJQcm9wcy5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24obywgc3csIHNjLCBmYywgbSwgcCkge1xyXG5cdHRoaXMubWRmLm8gPSBmYWxzZTtcclxuXHR0aGlzLm1kZi5zdyA9IGZhbHNlO1xyXG5cdHRoaXMubWRmLnNjID0gZmFsc2U7XHJcblx0dGhpcy5tZGYuZmMgPSBmYWxzZTtcclxuXHR0aGlzLm1kZi5tID0gZmFsc2U7XHJcblx0dGhpcy5tZGYucCA9IGZhbHNlO1xyXG5cdHZhciB1cGRhdGVkID0gZmFsc2U7XHJcblxyXG5cdGlmKHRoaXMubyAhPT0gbykge1xyXG5cdFx0dGhpcy5vID0gbztcclxuXHRcdHRoaXMubWRmLm8gPSB0cnVlO1xyXG5cdFx0dXBkYXRlZCA9IHRydWU7XHJcblx0fVxyXG5cdGlmKHRoaXMuc3cgIT09IHN3KSB7XHJcblx0XHR0aGlzLnN3ID0gc3c7XHJcblx0XHR0aGlzLm1kZi5zdyA9IHRydWU7XHJcblx0XHR1cGRhdGVkID0gdHJ1ZTtcclxuXHR9XHJcblx0aWYodGhpcy5zYyAhPT0gc2MpIHtcclxuXHRcdHRoaXMuc2MgPSBzYztcclxuXHRcdHRoaXMubWRmLnNjID0gdHJ1ZTtcclxuXHRcdHVwZGF0ZWQgPSB0cnVlO1xyXG5cdH1cclxuXHRpZih0aGlzLmZjICE9PSBmYykge1xyXG5cdFx0dGhpcy5mYyA9IGZjO1xyXG5cdFx0dGhpcy5tZGYuZmMgPSB0cnVlO1xyXG5cdFx0dXBkYXRlZCA9IHRydWU7XHJcblx0fVxyXG5cdGlmKHRoaXMubSAhPT0gbSkge1xyXG5cdFx0dGhpcy5tID0gbTtcclxuXHRcdHRoaXMubWRmLm0gPSB0cnVlO1xyXG5cdFx0dXBkYXRlZCA9IHRydWU7XHJcblx0fVxyXG5cdGlmKHAubGVuZ3RoICYmICh0aGlzLnBbMF0gIT09IHBbMF0gfHwgdGhpcy5wWzFdICE9PSBwWzFdIHx8IHRoaXMucFs0XSAhPT0gcFs0XSB8fCB0aGlzLnBbNV0gIT09IHBbNV0gfHwgdGhpcy5wWzEyXSAhPT0gcFsxMl0gfHwgdGhpcy5wWzEzXSAhPT0gcFsxM10pKSB7XHJcblx0XHR0aGlzLnAgPSBwO1xyXG5cdFx0dGhpcy5tZGYucCA9IHRydWU7XHJcblx0XHR1cGRhdGVkID0gdHJ1ZTtcclxuXHR9XHJcblx0cmV0dXJuIHVwZGF0ZWQ7XHJcbn1cbmZ1bmN0aW9uIFRleHRQcm9wZXJ0eShlbGVtLCBkYXRhLCBkeW5hbWljUHJvcGVydGllcyl7XHJcblx0dGhpcy5fZnJhbWVJZCA9IC05OTk5OTtcclxuXHR0aGlzLnB2ID0gJyc7XHJcblx0dGhpcy52ID0gJyc7XHJcblx0dGhpcy5rZiA9IGZhbHNlO1xyXG5cdHRoaXMuZmlyc3RGcmFtZSA9IHRydWU7XHJcblx0dGhpcy5tZGYgPSB0cnVlO1xyXG5cdHRoaXMuZGF0YSA9IGRhdGE7XHJcblx0dGhpcy5lbGVtID0gZWxlbTtcclxuXHR0aGlzLmtleXNJbmRleCA9IC0xO1xyXG5cdHRoaXMuY3VycmVudERhdGEgPSB7XHJcblx0XHRhc2NlbnQ6IDAsXHJcbiAgICAgICAgYm94V2lkdGg6IFswLDBdLFxyXG4gICAgICAgIGY6ICcnLFxyXG4gICAgICAgIGZTdHlsZTogJycsXHJcbiAgICAgICAgZldlaWdodDogJycsXHJcbiAgICAgICAgZmM6ICcnLFxyXG4gICAgICAgIGo6ICcnLFxyXG4gICAgICAgIGp1c3RpZnlPZmZzZXQ6ICcnLFxyXG4gICAgICAgIGw6IFtdLFxyXG4gICAgICAgIGxoOiAwLFxyXG4gICAgICAgIGxpbmVXaWR0aHM6IFtdLFxyXG4gICAgICAgIGxzOiAnJyxcclxuICAgICAgICBvZjogJycsXHJcbiAgICAgICAgczogJycsXHJcbiAgICAgICAgc2M6ICcnLFxyXG4gICAgICAgIHN3OiAwLFxyXG4gICAgICAgIHQ6IDAsXHJcbiAgICAgICAgdHI6IDAsXHJcbiAgICAgICAgZmlsbENvbG9yQW5pbTogZmFsc2UsXHJcbiAgICAgICAgc3Ryb2tlQ29sb3JBbmltOiBmYWxzZSxcclxuICAgICAgICBzdHJva2VXaWR0aEFuaW06IGZhbHNlLFxyXG4gICAgICAgIHlPZmZzZXQ6IDAsXHJcbiAgICAgICAgX19jb21wbGV0ZTogZmFsc2VcclxuXHJcblx0fVxyXG5cdGlmKHRoaXMuc2VhcmNoUHJvcGVydHkoKSkge1xyXG5cdFx0ZHluYW1pY1Byb3BlcnRpZXMucHVzaCh0aGlzKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0dGhpcy5nZXRWYWx1ZSh0cnVlKTtcclxuXHR9XHJcbn1cclxuXHJcblRleHRQcm9wZXJ0eS5wcm90b3R5cGUuc2V0Q3VycmVudERhdGEgPSBmdW5jdGlvbihkYXRhKXtcclxuXHRcdHZhciBjdXJyZW50RGF0YSA9IHRoaXMuY3VycmVudERhdGE7XHJcbiAgICAgICAgY3VycmVudERhdGEuYXNjZW50ID0gZGF0YS5hc2NlbnQ7XHJcbiAgICAgICAgY3VycmVudERhdGEuYm94V2lkdGggPSBkYXRhLmJveFdpZHRoID8gZGF0YS5ib3hXaWR0aCA6IGN1cnJlbnREYXRhLmJveFdpZHRoO1xyXG4gICAgICAgIGN1cnJlbnREYXRhLmYgPSBkYXRhLmY7XHJcbiAgICAgICAgY3VycmVudERhdGEuZlN0eWxlID0gZGF0YS5mU3R5bGU7XHJcbiAgICAgICAgY3VycmVudERhdGEuZldlaWdodCA9IGRhdGEuZldlaWdodDtcclxuICAgICAgICBjdXJyZW50RGF0YS5mYyA9IGRhdGEuZmM7XHJcbiAgICAgICAgY3VycmVudERhdGEuaiA9IGRhdGEuajtcclxuICAgICAgICBjdXJyZW50RGF0YS5qdXN0aWZ5T2Zmc2V0ID0gZGF0YS5qdXN0aWZ5T2Zmc2V0O1xyXG4gICAgICAgIGN1cnJlbnREYXRhLmwgPSBkYXRhLmw7XHJcbiAgICAgICAgY3VycmVudERhdGEubGggPSBkYXRhLmxoO1xyXG4gICAgICAgIGN1cnJlbnREYXRhLmxpbmVXaWR0aHMgPSBkYXRhLmxpbmVXaWR0aHM7XHJcbiAgICAgICAgY3VycmVudERhdGEubHMgPSBkYXRhLmxzO1xyXG4gICAgICAgIGN1cnJlbnREYXRhLm9mID0gZGF0YS5vZjtcclxuICAgICAgICBjdXJyZW50RGF0YS5zID0gZGF0YS5zO1xyXG4gICAgICAgIGN1cnJlbnREYXRhLnNjID0gZGF0YS5zYztcclxuICAgICAgICBjdXJyZW50RGF0YS5zdyA9IGRhdGEuc3c7XHJcbiAgICAgICAgY3VycmVudERhdGEudCA9IGRhdGEudDtcclxuICAgICAgICBjdXJyZW50RGF0YS50ciA9IGRhdGEudHI7XHJcbiAgICAgICAgY3VycmVudERhdGEuZmlsbENvbG9yQW5pbSA9IGRhdGEuZmlsbENvbG9yQW5pbSB8fCBjdXJyZW50RGF0YS5maWxsQ29sb3JBbmltO1xyXG4gICAgICAgIGN1cnJlbnREYXRhLnN0cm9rZUNvbG9yQW5pbSA9IGRhdGEuc3Ryb2tlQ29sb3JBbmltIHx8IGN1cnJlbnREYXRhLnN0cm9rZUNvbG9yQW5pbTtcclxuICAgICAgICBjdXJyZW50RGF0YS5zdHJva2VXaWR0aEFuaW0gPSBkYXRhLnN0cm9rZVdpZHRoQW5pbSB8fCBjdXJyZW50RGF0YS5zdHJva2VXaWR0aEFuaW07XHJcbiAgICAgICAgY3VycmVudERhdGEueU9mZnNldCA9IGRhdGEueU9mZnNldDtcclxuICAgICAgICBjdXJyZW50RGF0YS5fX2NvbXBsZXRlID0gZmFsc2U7XHJcbn1cclxuXHJcblRleHRQcm9wZXJ0eS5wcm90b3R5cGUuc2VhcmNoUHJvcGVydHkgPSBmdW5jdGlvbigpIHtcclxuXHR0aGlzLmtmID0gdGhpcy5kYXRhLmQuay5sZW5ndGggPiAxO1xyXG5cdHJldHVybiB0aGlzLmtmO1xyXG59XHJcblxyXG5UZXh0UHJvcGVydHkucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24oKSB7XHJcblx0dGhpcy5tZGYgPSBmYWxzZTtcclxuXHR2YXIgZnJhbWVJZCA9IHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZyYW1lSWQ7XHJcblx0aWYoKGZyYW1lSWQgPT09IHRoaXMuX2ZyYW1lSWQgfHwgIXRoaXMua2YpICYmICF0aGlzLmZpcnN0RnJhbWUpIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblx0dmFyIHRleHRLZXlzID0gdGhpcy5kYXRhLmQuaywgdGV4dERvY3VtZW50RGF0YTtcclxuICAgIHZhciBpID0gMCwgbGVuID0gdGV4dEtleXMubGVuZ3RoO1xyXG4gICAgd2hpbGUoaSA8PSBsZW4gLSAxKSB7XHJcbiAgICAgICAgdGV4dERvY3VtZW50RGF0YSA9IHRleHRLZXlzW2ldLnM7XHJcbiAgICAgICAgaWYoaSA9PT0gbGVuIC0gMSB8fCB0ZXh0S2V5c1tpKzFdLnQgPiBmcmFtZUlkKXtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGkgKz0gMTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMua2V5c0luZGV4ICE9PSBpKSB7XHJcbiAgICBcdGlmKCF0ZXh0RG9jdW1lbnREYXRhLl9fY29tcGxldGUpIHtcclxuICAgICAgICAgICAgdGhpcy5jb21wbGV0ZVRleHREYXRhKHRleHREb2N1bWVudERhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldEN1cnJlbnREYXRhKHRleHREb2N1bWVudERhdGEpO1xyXG4gICAgICAgIHRoaXMubWRmID0gdGhpcy5maXJzdEZyYW1lID8gZmFsc2UgOiB0cnVlO1xyXG4gICAgICAgIHRoaXMucHYgPSB0aGlzLnYgPSB0aGlzLmN1cnJlbnREYXRhLnQ7XHJcbiAgICAgICAgdGhpcy5rZXlzSW5kZXggPSBpO1xyXG4gICAgfVxyXG5cdHRoaXMuX2ZyYW1lSWQgPSBmcmFtZUlkO1xyXG59XHJcblxyXG5UZXh0UHJvcGVydHkucHJvdG90eXBlLmNvbXBsZXRlVGV4dERhdGEgPSBmdW5jdGlvbihkb2N1bWVudERhdGEpIHtcclxuICAgIGRvY3VtZW50RGF0YS5fX2NvbXBsZXRlID0gdHJ1ZTtcclxuICAgIHZhciBmb250TWFuYWdlciA9IHRoaXMuZWxlbS5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyO1xyXG4gICAgdmFyIGRhdGEgPSB0aGlzLmRhdGE7XHJcbiAgICB2YXIgbGV0dGVycyA9IFtdO1xyXG4gICAgdmFyIGksIGxlbjtcclxuICAgIHZhciBuZXdMaW5lRmxhZywgaW5kZXggPSAwLCB2YWw7XHJcbiAgICB2YXIgYW5jaG9yR3JvdXBpbmcgPSBkYXRhLm0uZztcclxuICAgIHZhciBjdXJyZW50U2l6ZSA9IDAsIGN1cnJlbnRQb3MgPSAwLCBjdXJyZW50TGluZSA9IDAsIGxpbmVXaWR0aHMgPSBbXTtcclxuICAgIHZhciBsaW5lV2lkdGggPSAwO1xyXG4gICAgdmFyIG1heExpbmVXaWR0aCA9IDA7XHJcbiAgICB2YXIgaiwgakxlbjtcclxuICAgIHZhciBmb250RGF0YSA9IGZvbnRNYW5hZ2VyLmdldEZvbnRCeU5hbWUoZG9jdW1lbnREYXRhLmYpO1xyXG4gICAgdmFyIGNoYXJEYXRhLCBjTGVuZ3RoID0gMDtcclxuICAgIHZhciBzdHlsZXMgPSBmb250RGF0YS5mU3R5bGUuc3BsaXQoJyAnKTtcclxuXHJcbiAgICB2YXIgZldlaWdodCA9ICdub3JtYWwnLCBmU3R5bGUgPSAnbm9ybWFsJztcclxuICAgIGxlbiA9IHN0eWxlcy5sZW5ndGg7XHJcbiAgICB2YXIgc3R5bGVOYW1lO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBzdHlsZU5hbWUgPSBzdHlsZXNbaV0udG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBzd2l0Y2goc3R5bGVOYW1lKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ2l0YWxpYyc6XHJcbiAgICAgICAgICAgIGZTdHlsZSA9ICdpdGFsaWMnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnYm9sZCc6XHJcbiAgICAgICAgICAgIGZXZWlnaHQgPSAnNzAwJztcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2JsYWNrJzpcclxuICAgICAgICAgICAgZldlaWdodCA9ICc5MDAnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnbWVkaXVtJzpcclxuICAgICAgICAgICAgZldlaWdodCA9ICc1MDAnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAncmVndWxhcic6XHJcbiAgICAgICAgICAgIGNhc2UgJ25vcm1hbCc6XHJcbiAgICAgICAgICAgIGZXZWlnaHQgPSAnNDAwJztcclxuICAgICAgICAgICAgY2FzZSAnbGlnaHQnOlxyXG4gICAgICAgICAgICBjYXNlICd0aGluJzpcclxuICAgICAgICAgICAgZldlaWdodCA9ICcyMDAnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkb2N1bWVudERhdGEuZldlaWdodCA9IGZXZWlnaHQ7XHJcbiAgICBkb2N1bWVudERhdGEuZlN0eWxlID0gZlN0eWxlO1xyXG4gICAgbGVuID0gZG9jdW1lbnREYXRhLnQubGVuZ3RoO1xyXG4gICAgdmFyIHRyYWNraW5nT2Zmc2V0ID0gZG9jdW1lbnREYXRhLnRyLzEwMDAqZG9jdW1lbnREYXRhLnM7XHJcbiAgICBpZihkb2N1bWVudERhdGEuc3ope1xyXG4gICAgICAgIHZhciBib3hXaWR0aCA9IGRvY3VtZW50RGF0YS5zelswXTtcclxuICAgICAgICB2YXIgbGFzdFNwYWNlSW5kZXggPSAtMTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBuZXdMaW5lRmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihkb2N1bWVudERhdGEudC5jaGFyQXQoaSkgPT09ICcgJyl7XHJcbiAgICAgICAgICAgICAgICBsYXN0U3BhY2VJbmRleCA9IGk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGRvY3VtZW50RGF0YS50LmNoYXJDb2RlQXQoaSkgPT09IDEzKXtcclxuICAgICAgICAgICAgICAgIGxpbmVXaWR0aCA9IDA7XHJcbiAgICAgICAgICAgICAgICBuZXdMaW5lRmxhZyA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoZm9udE1hbmFnZXIuY2hhcnMpe1xyXG4gICAgICAgICAgICAgICAgY2hhckRhdGEgPSBmb250TWFuYWdlci5nZXRDaGFyRGF0YShkb2N1bWVudERhdGEudC5jaGFyQXQoaSksIGZvbnREYXRhLmZTdHlsZSwgZm9udERhdGEuZkZhbWlseSk7XHJcbiAgICAgICAgICAgICAgICBjTGVuZ3RoID0gbmV3TGluZUZsYWcgPyAwIDogY2hhckRhdGEudypkb2N1bWVudERhdGEucy8xMDA7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgLy90Q2FudmFzSGVscGVyLmZvbnQgPSBkb2N1bWVudERhdGEucyArICdweCAnKyBmb250RGF0YS5mRmFtaWx5O1xyXG4gICAgICAgICAgICAgICAgY0xlbmd0aCA9IGZvbnRNYW5hZ2VyLm1lYXN1cmVUZXh0KGRvY3VtZW50RGF0YS50LmNoYXJBdChpKSwgZG9jdW1lbnREYXRhLmYsIGRvY3VtZW50RGF0YS5zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihsaW5lV2lkdGggKyBjTGVuZ3RoID4gYm94V2lkdGggJiYgZG9jdW1lbnREYXRhLnQuY2hhckF0KGkpICE9PSAnICcpe1xyXG4gICAgICAgICAgICAgICAgaWYobGFzdFNwYWNlSW5kZXggPT09IC0xKXtcclxuICAgICAgICAgICAgICAgICAgICBsZW4gKz0gMTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaSA9IGxhc3RTcGFjZUluZGV4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnREYXRhLnQgPSBkb2N1bWVudERhdGEudC5zdWJzdHIoMCxpKSArIFwiXFxyXCIgKyBkb2N1bWVudERhdGEudC5zdWJzdHIoaSA9PT0gbGFzdFNwYWNlSW5kZXggPyBpICsgMSA6IGkpO1xyXG4gICAgICAgICAgICAgICAgbGFzdFNwYWNlSW5kZXggPSAtMTtcclxuICAgICAgICAgICAgICAgIGxpbmVXaWR0aCA9IDA7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIGxpbmVXaWR0aCArPSBjTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgbGluZVdpZHRoICs9IHRyYWNraW5nT2Zmc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxlbiA9IGRvY3VtZW50RGF0YS50Lmxlbmd0aDtcclxuICAgIH1cclxuICAgIGxpbmVXaWR0aCA9IC0gdHJhY2tpbmdPZmZzZXQ7XHJcbiAgICBjTGVuZ3RoID0gMDtcclxuICAgIHZhciB1bmNvbGxhcHNlZFNwYWNlcyA9IDA7XHJcbiAgICB2YXIgY3VycmVudENoYXI7XHJcbiAgICBmb3IgKGkgPSAwO2kgPCBsZW4gO2kgKz0gMSkge1xyXG4gICAgICAgIG5ld0xpbmVGbGFnID0gZmFsc2U7XHJcbiAgICAgICAgY3VycmVudENoYXIgPSBkb2N1bWVudERhdGEudC5jaGFyQXQoaSk7XHJcbiAgICAgICAgaWYoY3VycmVudENoYXIgPT09ICcgJyl7XHJcbiAgICAgICAgICAgIHZhbCA9ICdcXHUwMEEwJztcclxuICAgICAgICB9ZWxzZSBpZihjdXJyZW50Q2hhci5jaGFyQ29kZUF0KDApID09PSAxMyl7XHJcbiAgICAgICAgICAgIHVuY29sbGFwc2VkU3BhY2VzID0gMDtcclxuICAgICAgICAgICAgbGluZVdpZHRocy5wdXNoKGxpbmVXaWR0aCk7XHJcbiAgICAgICAgICAgIG1heExpbmVXaWR0aCA9IGxpbmVXaWR0aCA+IG1heExpbmVXaWR0aCA/IGxpbmVXaWR0aCA6IG1heExpbmVXaWR0aDtcclxuICAgICAgICAgICAgbGluZVdpZHRoID0gLSAyICogdHJhY2tpbmdPZmZzZXQ7XHJcbiAgICAgICAgICAgIHZhbCA9ICcnO1xyXG4gICAgICAgICAgICBuZXdMaW5lRmxhZyA9IHRydWU7XHJcbiAgICAgICAgICAgIGN1cnJlbnRMaW5lICs9IDE7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHZhbCA9IGRvY3VtZW50RGF0YS50LmNoYXJBdChpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoZm9udE1hbmFnZXIuY2hhcnMpe1xyXG4gICAgICAgICAgICBjaGFyRGF0YSA9IGZvbnRNYW5hZ2VyLmdldENoYXJEYXRhKGN1cnJlbnRDaGFyLCBmb250RGF0YS5mU3R5bGUsIGZvbnRNYW5hZ2VyLmdldEZvbnRCeU5hbWUoZG9jdW1lbnREYXRhLmYpLmZGYW1pbHkpO1xyXG4gICAgICAgICAgICBjTGVuZ3RoID0gbmV3TGluZUZsYWcgPyAwIDogY2hhckRhdGEudypkb2N1bWVudERhdGEucy8xMDA7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIC8vdmFyIGNoYXJXaWR0aCA9IGZvbnRNYW5hZ2VyLm1lYXN1cmVUZXh0KHZhbCwgZG9jdW1lbnREYXRhLmYsIGRvY3VtZW50RGF0YS5zKTtcclxuICAgICAgICAgICAgLy90Q2FudmFzSGVscGVyLmZvbnQgPSBkb2N1bWVudERhdGEucyArICdweCAnKyBmb250TWFuYWdlci5nZXRGb250QnlOYW1lKGRvY3VtZW50RGF0YS5mKS5mRmFtaWx5O1xyXG4gICAgICAgICAgICBjTGVuZ3RoID0gZm9udE1hbmFnZXIubWVhc3VyZVRleHQodmFsLCBkb2N1bWVudERhdGEuZiwgZG9jdW1lbnREYXRhLnMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy9cclxuICAgICAgICBpZihjdXJyZW50Q2hhciA9PT0gJyAnKXtcclxuICAgICAgICAgICAgdW5jb2xsYXBzZWRTcGFjZXMgKz0gY0xlbmd0aCArIHRyYWNraW5nT2Zmc2V0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxpbmVXaWR0aCArPSBjTGVuZ3RoICsgdHJhY2tpbmdPZmZzZXQgKyB1bmNvbGxhcHNlZFNwYWNlcztcclxuICAgICAgICAgICAgdW5jb2xsYXBzZWRTcGFjZXMgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXR0ZXJzLnB1c2goe2w6Y0xlbmd0aCxhbjpjTGVuZ3RoLGFkZDpjdXJyZW50U2l6ZSxuOm5ld0xpbmVGbGFnLCBhbkluZGV4ZXM6W10sIHZhbDogdmFsLCBsaW5lOiBjdXJyZW50TGluZX0pO1xyXG4gICAgICAgIGlmKGFuY2hvckdyb3VwaW5nID09IDIpe1xyXG4gICAgICAgICAgICBjdXJyZW50U2l6ZSArPSBjTGVuZ3RoO1xyXG4gICAgICAgICAgICBpZih2YWwgPT0gJycgfHwgdmFsID09ICdcXHUwMEEwJyB8fCBpID09IGxlbiAtIDEpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09ICcnIHx8IHZhbCA9PSAnXFx1MDBBMCcpe1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTaXplIC09IGNMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB3aGlsZShjdXJyZW50UG9zPD1pKXtcclxuICAgICAgICAgICAgICAgICAgICBsZXR0ZXJzW2N1cnJlbnRQb3NdLmFuID0gY3VycmVudFNpemU7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyc1tjdXJyZW50UG9zXS5pbmQgPSBpbmRleDtcclxuICAgICAgICAgICAgICAgICAgICBsZXR0ZXJzW2N1cnJlbnRQb3NdLmV4dHJhID0gY0xlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50UG9zICs9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpbmRleCArPSAxO1xyXG4gICAgICAgICAgICAgICAgY3VycmVudFNpemUgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2UgaWYoYW5jaG9yR3JvdXBpbmcgPT0gMyl7XHJcbiAgICAgICAgICAgIGN1cnJlbnRTaXplICs9IGNMZW5ndGg7XHJcbiAgICAgICAgICAgIGlmKHZhbCA9PSAnJyB8fCBpID09IGxlbiAtIDEpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09ICcnKXtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50U2l6ZSAtPSBjTGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgd2hpbGUoY3VycmVudFBvczw9aSl7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyc1tjdXJyZW50UG9zXS5hbiA9IGN1cnJlbnRTaXplO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldHRlcnNbY3VycmVudFBvc10uaW5kID0gaW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyc1tjdXJyZW50UG9zXS5leHRyYSA9IGNMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFBvcyArPSAxO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY3VycmVudFNpemUgPSAwO1xyXG4gICAgICAgICAgICAgICAgaW5kZXggKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBsZXR0ZXJzW2luZGV4XS5pbmQgPSBpbmRleDtcclxuICAgICAgICAgICAgbGV0dGVyc1tpbmRleF0uZXh0cmEgPSAwO1xyXG4gICAgICAgICAgICBpbmRleCArPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRvY3VtZW50RGF0YS5sID0gbGV0dGVycztcclxuICAgIG1heExpbmVXaWR0aCA9IGxpbmVXaWR0aCA+IG1heExpbmVXaWR0aCA/IGxpbmVXaWR0aCA6IG1heExpbmVXaWR0aDtcclxuICAgIGxpbmVXaWR0aHMucHVzaChsaW5lV2lkdGgpO1xyXG4gICAgaWYoZG9jdW1lbnREYXRhLnN6KXtcclxuICAgICAgICBkb2N1bWVudERhdGEuYm94V2lkdGggPSBkb2N1bWVudERhdGEuc3pbMF07XHJcbiAgICAgICAgZG9jdW1lbnREYXRhLmp1c3RpZnlPZmZzZXQgPSAwO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgZG9jdW1lbnREYXRhLmJveFdpZHRoID0gbWF4TGluZVdpZHRoO1xyXG4gICAgICAgIHN3aXRjaChkb2N1bWVudERhdGEuail7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50RGF0YS5qdXN0aWZ5T2Zmc2V0ID0gLSBkb2N1bWVudERhdGEuYm94V2lkdGg7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnREYXRhLmp1c3RpZnlPZmZzZXQgPSAtIGRvY3VtZW50RGF0YS5ib3hXaWR0aC8yO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudERhdGEuanVzdGlmeU9mZnNldCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZG9jdW1lbnREYXRhLmxpbmVXaWR0aHMgPSBsaW5lV2lkdGhzO1xyXG5cclxuICAgIHZhciBhbmltYXRvcnMgPSBkYXRhLmEsIGFuaW1hdG9yRGF0YSwgbGV0dGVyRGF0YTtcclxuICAgIGpMZW4gPSBhbmltYXRvcnMubGVuZ3RoO1xyXG4gICAgdmFyIGJhc2VkLCBpbmQsIGluZGV4ZXMgPSBbXTtcclxuICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgIGFuaW1hdG9yRGF0YSA9IGFuaW1hdG9yc1tqXTtcclxuICAgICAgICBpZihhbmltYXRvckRhdGEuYS5zYyl7XHJcbiAgICAgICAgICAgIGRvY3VtZW50RGF0YS5zdHJva2VDb2xvckFuaW0gPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhbmltYXRvckRhdGEuYS5zdyl7XHJcbiAgICAgICAgICAgIGRvY3VtZW50RGF0YS5zdHJva2VXaWR0aEFuaW0gPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhbmltYXRvckRhdGEuYS5mYyB8fCBhbmltYXRvckRhdGEuYS5maCB8fCBhbmltYXRvckRhdGEuYS5mcyB8fCBhbmltYXRvckRhdGEuYS5mYil7XHJcbiAgICAgICAgICAgIGRvY3VtZW50RGF0YS5maWxsQ29sb3JBbmltID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaW5kID0gMDtcclxuICAgICAgICBiYXNlZCA9IGFuaW1hdG9yRGF0YS5zLmI7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgbGV0dGVyRGF0YSA9IGxldHRlcnNbaV07XHJcbiAgICAgICAgICAgIGxldHRlckRhdGEuYW5JbmRleGVzW2pdID0gaW5kO1xyXG4gICAgICAgICAgICBpZigoYmFzZWQgPT0gMSAmJiBsZXR0ZXJEYXRhLnZhbCAhPSAnJykgfHwgKGJhc2VkID09IDIgJiYgbGV0dGVyRGF0YS52YWwgIT0gJycgJiYgbGV0dGVyRGF0YS52YWwgIT0gJ1xcdTAwQTAnKSB8fCAoYmFzZWQgPT0gMyAmJiAobGV0dGVyRGF0YS5uIHx8IGxldHRlckRhdGEudmFsID09ICdcXHUwMEEwJyB8fCBpID09IGxlbiAtIDEpKSB8fCAoYmFzZWQgPT0gNCAmJiAobGV0dGVyRGF0YS5uIHx8IGkgPT0gbGVuIC0gMSkpKXtcclxuICAgICAgICAgICAgICAgIGlmKGFuaW1hdG9yRGF0YS5zLnJuID09PSAxKXtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleGVzLnB1c2goaW5kKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGluZCArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRhdGEuYVtqXS5zLnRvdGFsQ2hhcnMgPSBpbmQ7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRJbmQgPSAtMSwgbmV3SW5kO1xyXG4gICAgICAgIGlmKGFuaW1hdG9yRGF0YS5zLnJuID09PSAxKXtcclxuICAgICAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpe1xyXG4gICAgICAgICAgICAgICAgbGV0dGVyRGF0YSA9IGxldHRlcnNbaV07XHJcbiAgICAgICAgICAgICAgICBpZihjdXJyZW50SW5kICE9IGxldHRlckRhdGEuYW5JbmRleGVzW2pdKXtcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kID0gbGV0dGVyRGF0YS5hbkluZGV4ZXNbal07XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3SW5kID0gaW5kZXhlcy5zcGxpY2UoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmluZGV4ZXMubGVuZ3RoKSwxKVswXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGxldHRlckRhdGEuYW5JbmRleGVzW2pdID0gbmV3SW5kO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZG9jdW1lbnREYXRhLnlPZmZzZXQgPSBkb2N1bWVudERhdGEubGggfHwgZG9jdW1lbnREYXRhLnMqMS4yO1xyXG4gICAgZG9jdW1lbnREYXRhLmxzID0gZG9jdW1lbnREYXRhLmxzIHx8IDA7XHJcbiAgICBkb2N1bWVudERhdGEuYXNjZW50ID0gZm9udERhdGEuYXNjZW50KmRvY3VtZW50RGF0YS5zLzEwMDtcclxufVxyXG5cclxuVGV4dFByb3BlcnR5LnByb3RvdHlwZS51cGRhdGVEb2N1bWVudERhdGEgPSBmdW5jdGlvbihuZXdEYXRhLCBpbmRleCkge1xyXG5cdGluZGV4ID0gaW5kZXggPT09IHVuZGVmaW5lZCA/IHRoaXMua2V5c0luZGV4IDogaW5kZXg7XHJcbiAgICB2YXIgZERhdGEgPSB0aGlzLmRhdGEuZC5rW2luZGV4XS5zO1xyXG4gICAgZERhdGEuX19jb21wbGV0ZSA9IGZhbHNlO1xyXG4gICAgZERhdGEudCA9IG5ld0RhdGEudDtcclxuICAgIHRoaXMua2V5c0luZGV4ID0gLTE7XHJcbiAgICB0aGlzLmZpcnN0RnJhbWUgPSB0cnVlO1xyXG4gICAgdGhpcy5nZXRWYWx1ZSgpO1xyXG59XHJcblxudmFyIHBvb2xpbmcgPSAoZnVuY3Rpb24oKXtcclxuXHJcblx0ZnVuY3Rpb24gZG91YmxlKGFycil7XHJcblx0XHRyZXR1cm4gYXJyLmNvbmNhdChBcnJheS5hcHBseShudWxsLHtsZW5ndGg6YXJyLmxlbmd0aH0pKVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIHtcclxuXHRcdGRvdWJsZTogZG91YmxlXHJcblx0fVxyXG59KCkpO1xudmFyIHBvaW50X3Bvb2wgPSAoZnVuY3Rpb24oKXtcclxuXHR2YXIgb2IgPSB7XHJcblx0XHRuZXdQb2ludDogbmV3UG9pbnQsXHJcblx0XHRyZWxlYXNlOiByZWxlYXNlXHJcblx0fVxyXG5cclxuXHR2YXIgX2xlbmd0aCA9IDA7XHJcblx0dmFyIF9tYXhMZW5ndGggPSA4O1xyXG5cdHZhciBwb29sID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOl9tYXhMZW5ndGh9KTtcclxuXHJcblx0ZnVuY3Rpb24gbmV3UG9pbnQoKXtcclxuXHRcdHZhciBwb2ludDtcclxuXHRcdGlmKF9sZW5ndGgpe1xyXG5cdFx0XHRfbGVuZ3RoIC09IDE7XHJcblx0XHRcdHBvaW50ID0gcG9vbFtfbGVuZ3RoXTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHBvaW50ID0gWzAuMSwwLjFdO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHBvaW50O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gcmVsZWFzZShwb2ludCkge1xyXG5cdFx0aWYoX2xlbmd0aCA9PT0gX21heExlbmd0aCkge1xyXG5cdFx0XHRwb29sID0gcG9vbGluZy5kb3VibGUocG9vbCk7XHJcblx0XHRcdF9tYXhMZW5ndGggPSBfbWF4TGVuZ3RoKjI7XHJcblx0XHR9XHJcblx0XHRwb29sW19sZW5ndGhdID0gcG9pbnQ7XHJcblx0XHRfbGVuZ3RoICs9IDE7XHJcblx0fVxyXG5cclxuXHJcblx0cmV0dXJuIG9iO1xyXG59KCkpO1xudmFyIHNoYXBlX3Bvb2wgPSAoZnVuY3Rpb24oKXtcclxuXHR2YXIgb2IgPSB7XHJcblx0XHRjbG9uZTogY2xvbmUsXHJcblx0XHRuZXdTaGFwZTogbmV3U2hhcGUsXHJcblx0XHRyZWxlYXNlOiByZWxlYXNlLFxyXG5cdFx0cmVsZWFzZUFycmF5OiByZWxlYXNlQXJyYXlcclxuXHR9XHJcblxyXG5cdHZhciBfbGVuZ3RoID0gMDtcclxuXHR2YXIgX21heExlbmd0aCA9IDQ7XHJcblx0dmFyIHBvb2wgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6X21heExlbmd0aH0pO1xyXG5cclxuXHRmdW5jdGlvbiBuZXdTaGFwZSgpe1xyXG5cdFx0dmFyIHNoYXBlUGF0aDtcclxuXHRcdGlmKF9sZW5ndGgpe1xyXG5cdFx0XHRfbGVuZ3RoIC09IDE7XHJcblx0XHRcdHNoYXBlUGF0aCA9IHBvb2xbX2xlbmd0aF07XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRzaGFwZVBhdGggPSBuZXcgU2hhcGVQYXRoKCk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gc2hhcGVQYXRoO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gcmVsZWFzZShzaGFwZVBhdGgpIHtcclxuXHRcdGlmKF9sZW5ndGggPT09IF9tYXhMZW5ndGgpIHtcclxuXHRcdFx0cG9vbCA9IHBvb2xpbmcuZG91YmxlKHBvb2wpO1xyXG5cdFx0XHRfbWF4TGVuZ3RoID0gX21heExlbmd0aCoyO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGxlbiA9IHNoYXBlUGF0aC5fbGVuZ3RoLCBpO1xyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuXHRcdFx0cG9pbnRfcG9vbC5yZWxlYXNlKHNoYXBlUGF0aC52W2ldKTtcclxuXHRcdFx0cG9pbnRfcG9vbC5yZWxlYXNlKHNoYXBlUGF0aC5pW2ldKTtcclxuXHRcdFx0cG9pbnRfcG9vbC5yZWxlYXNlKHNoYXBlUGF0aC5vW2ldKTtcclxuXHRcdFx0c2hhcGVQYXRoLnZbaV0gPSBudWxsO1xyXG5cdFx0XHRzaGFwZVBhdGguaVtpXSA9IG51bGw7XHJcblx0XHRcdHNoYXBlUGF0aC5vW2ldID0gbnVsbDtcclxuXHRcdH1cclxuXHRcdHNoYXBlUGF0aC5fbGVuZ3RoID0gMDtcclxuXHRcdHNoYXBlUGF0aC5jID0gZmFsc2U7XHJcblx0XHRwb29sW19sZW5ndGhdID0gc2hhcGVQYXRoO1xyXG5cdFx0X2xlbmd0aCArPSAxO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gcmVsZWFzZUFycmF5KHNoYXBlUGF0aHNDb2xsZWN0aW9uLCBsZW5ndGgpIHtcclxuXHRcdHdoaWxlKGxlbmd0aC0tKSB7XHJcblx0XHRcdHJlbGVhc2Uoc2hhcGVQYXRoc0NvbGxlY3Rpb25bbGVuZ3RoXSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjbG9uZShzaGFwZSwgdHJhbnNmb3JtKSB7XHJcblx0XHR2YXIgaSwgbGVuID0gc2hhcGUuX2xlbmd0aCA9PT0gdW5kZWZpbmVkID8gc2hhcGUudi5sZW5ndGggOiBzaGFwZS5fbGVuZ3RoO1xyXG5cdFx0dmFyIGNsb25lZCA9IG5ld1NoYXBlKCk7XHJcblx0XHRjbG9uZWQuc2V0TGVuZ3RoKGxlbik7XHJcblx0XHRjbG9uZWQuYyA9IHNoYXBlLmM7XHJcblxyXG5cdFx0dmFyIHB0O1xyXG5cdFx0XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG5cdFx0XHRpZih0cmFuc2Zvcm0pe1xyXG5cdFx0XHRcdHB0ID0gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KHNoYXBlLnZbaV1bMF0sc2hhcGUudltpXVsxXSwwLDIpO1xyXG5cdFx0XHRcdGNsb25lZC5zZXRYWUF0KHB0WzBdLHB0WzFdLCd2JyxpKTtcclxuXHRcdFx0XHRwb2ludF9wb29sLnJlbGVhc2UocHQpO1xyXG5cdFx0XHRcdHB0ID0gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KHNoYXBlLm9baV1bMF0sc2hhcGUub1tpXVsxXSwwLDIpO1xyXG5cdFx0XHRcdGNsb25lZC5zZXRYWUF0KHB0WzBdLHB0WzFdLCdvJyxpKTtcclxuXHRcdFx0XHRwb2ludF9wb29sLnJlbGVhc2UocHQpO1xyXG5cdFx0XHRcdHB0ID0gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KHNoYXBlLmlbaV1bMF0sc2hhcGUuaVtpXVsxXSwwLDIpO1xyXG5cdFx0XHRcdGNsb25lZC5zZXRYWUF0KHB0WzBdLHB0WzFdLCdpJyxpKTtcclxuXHRcdFx0XHRwb2ludF9wb29sLnJlbGVhc2UocHQpO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRjbG9uZWQuc2V0VHJpcGxlQXQoc2hhcGUudltpXVswXSxzaGFwZS52W2ldWzFdLHNoYXBlLm9baV1bMF0sc2hhcGUub1tpXVsxXSxzaGFwZS5pW2ldWzBdLHNoYXBlLmlbaV1bMV0sIGkpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gY2xvbmVkXHJcblx0fVxyXG5cclxuXHJcblx0cmV0dXJuIG9iO1xyXG59KCkpO1xudmFyIHNoYXBlQ29sbGVjdGlvbl9wb29sID0gKGZ1bmN0aW9uKCl7XHJcblx0dmFyIG9iID0ge1xyXG5cdFx0bmV3U2hhcGVDb2xsZWN0aW9uOiBuZXdTaGFwZUNvbGxlY3Rpb24sXHJcblx0XHRyZWxlYXNlOiByZWxlYXNlLFxyXG5cdFx0Y2xvbmU6IGNsb25lXHJcblx0fVxyXG5cclxuXHR2YXIgX2xlbmd0aCA9IDA7XHJcblx0dmFyIF9tYXhMZW5ndGggPSA0O1xyXG5cdHZhciBwb29sID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOl9tYXhMZW5ndGh9KTtcclxuXHJcblx0dmFyIGNvbnQgPSAwO1xyXG5cclxuXHRmdW5jdGlvbiBuZXdTaGFwZUNvbGxlY3Rpb24oKXtcclxuXHRcdHZhciBzaGFwZUNvbGxlY3Rpb247XHJcblx0XHRpZihfbGVuZ3RoKXtcclxuXHRcdFx0X2xlbmd0aCAtPSAxO1xyXG5cdFx0XHRzaGFwZUNvbGxlY3Rpb24gPSBwb29sW19sZW5ndGhdO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0c2hhcGVDb2xsZWN0aW9uID0gbmV3IFNoYXBlQ29sbGVjdGlvbigpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHNoYXBlQ29sbGVjdGlvbjtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHJlbGVhc2Uoc2hhcGVDb2xsZWN0aW9uKSB7XHJcblx0XHR2YXIgaSwgbGVuID0gc2hhcGVDb2xsZWN0aW9uLl9sZW5ndGg7XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG5cdFx0XHRzaGFwZV9wb29sLnJlbGVhc2Uoc2hhcGVDb2xsZWN0aW9uLnNoYXBlc1tpXSk7XHJcblx0XHR9XHJcblx0XHRzaGFwZUNvbGxlY3Rpb24uX2xlbmd0aCA9IDA7XHJcblxyXG5cdFx0aWYoX2xlbmd0aCA9PT0gX21heExlbmd0aCkge1xyXG5cdFx0XHRwb29sID0gcG9vbGluZy5kb3VibGUocG9vbCk7XHJcblx0XHRcdF9tYXhMZW5ndGggPSBfbWF4TGVuZ3RoKjI7XHJcblx0XHR9XHJcblx0XHRwb29sW19sZW5ndGhdID0gc2hhcGVDb2xsZWN0aW9uO1xyXG5cdFx0X2xlbmd0aCArPSAxO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY2xvbmUoc2hhcGVDb2xsZWN0aW9uLCBvcmlnaW5Db2xsZWN0aW9uKSB7XHJcblx0XHRyZWxlYXNlKHNoYXBlQ29sbGVjdGlvbik7XHJcblx0XHRpZihfbGVuZ3RoID09PSBfbWF4TGVuZ3RoKSB7XHJcblx0XHRcdHBvb2wgPSBwb29saW5nLmRvdWJsZShwb29sKTtcclxuXHRcdFx0X21heExlbmd0aCA9IF9tYXhMZW5ndGgqMjtcclxuXHRcdH1cclxuXHRcdHBvb2xbX2xlbmd0aF0gPSBzaGFwZUNvbGxlY3Rpb247XHJcblx0XHRfbGVuZ3RoICs9IDE7XHJcblx0fVxyXG5cclxuXHJcblx0cmV0dXJuIG9iO1xyXG59KCkpO1xuZnVuY3Rpb24gQmFzZVJlbmRlcmVyKCl7fVxyXG5CYXNlUmVuZGVyZXIucHJvdG90eXBlLmNoZWNrTGF5ZXJzID0gZnVuY3Rpb24obnVtKXtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmxheWVycy5sZW5ndGgsIGRhdGE7XHJcbiAgICB0aGlzLmNvbXBsZXRlTGF5ZXJzID0gdHJ1ZTtcclxuICAgIGZvciAoaSA9IGxlbiAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmVsZW1lbnRzW2ldKSB7XHJcbiAgICAgICAgICAgIGRhdGEgPSB0aGlzLmxheWVyc1tpXTtcclxuICAgICAgICAgICAgaWYoZGF0YS5pcCAtIGRhdGEuc3QgPD0gKG51bSAtIHRoaXMubGF5ZXJzW2ldLnN0KSAmJiBkYXRhLm9wIC0gZGF0YS5zdCA+IChudW0gLSB0aGlzLmxheWVyc1tpXS5zdCkpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRJdGVtKGkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29tcGxldGVMYXllcnMgPSB0aGlzLmVsZW1lbnRzW2ldID8gdGhpcy5jb21wbGV0ZUxheWVyczpmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMuY2hlY2tQZW5kaW5nRWxlbWVudHMoKTtcclxufTtcclxuXHJcbkJhc2VSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlSXRlbSA9IGZ1bmN0aW9uKGxheWVyKXtcclxuICAgIHN3aXRjaChsYXllci50eSl7XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVJbWFnZShsYXllcik7XHJcbiAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVDb21wKGxheWVyKTtcclxuICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNvbGlkKGxheWVyKTtcclxuICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNoYXBlKGxheWVyKTtcclxuICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVRleHQobGF5ZXIpO1xyXG4gICAgICAgIGNhc2UgMTM6XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZUNhbWVyYShsYXllcik7XHJcbiAgICAgICAgY2FzZSA5OTpcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5jcmVhdGVCYXNlKGxheWVyKTtcclxufTtcclxuXHJcbkJhc2VSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQ2FtZXJhID0gZnVuY3Rpb24oKXtcclxuICAgIHRocm93IG5ldyBFcnJvcignWW91XFwncmUgdXNpbmcgYSAzZCBjYW1lcmEuIFRyeSB0aGUgaHRtbCByZW5kZXJlci4nKTtcclxufVxyXG5cclxuQmFzZVJlbmRlcmVyLnByb3RvdHlwZS5idWlsZEFsbEl0ZW1zID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmxheWVycy5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMuYnVpbGRJdGVtKGkpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jaGVja1BlbmRpbmdFbGVtZW50cygpO1xyXG59O1xyXG5cclxuQmFzZVJlbmRlcmVyLnByb3RvdHlwZS5pbmNsdWRlTGF5ZXJzID0gZnVuY3Rpb24obmV3TGF5ZXJzKXtcclxuICAgIHRoaXMuY29tcGxldGVMYXllcnMgPSBmYWxzZTtcclxuICAgIHZhciBpLCBsZW4gPSBuZXdMYXllcnMubGVuZ3RoO1xyXG4gICAgdmFyIGosIGpMZW4gPSB0aGlzLmxheWVycy5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIGogPSAwO1xyXG4gICAgICAgIHdoaWxlKGo8akxlbil7XHJcbiAgICAgICAgICAgIGlmKHRoaXMubGF5ZXJzW2pdLmlkID09IG5ld0xheWVyc1tpXS5pZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxheWVyc1tqXSA9IG5ld0xheWVyc1tpXTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGogKz0gMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5CYXNlUmVuZGVyZXIucHJvdG90eXBlLnNldFByb2plY3RJbnRlcmZhY2UgPSBmdW5jdGlvbihwSW50ZXJmYWNlKXtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5wcm9qZWN0SW50ZXJmYWNlID0gcEludGVyZmFjZTtcclxufTtcclxuXHJcbkJhc2VSZW5kZXJlci5wcm90b3R5cGUuaW5pdEl0ZW1zID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKCF0aGlzLmdsb2JhbERhdGEucHJvZ3Jlc3NpdmVMb2FkKXtcclxuICAgICAgICB0aGlzLmJ1aWxkQWxsSXRlbXMoKTtcclxuICAgIH1cclxufTtcclxuQmFzZVJlbmRlcmVyLnByb3RvdHlwZS5idWlsZEVsZW1lbnRQYXJlbnRpbmcgPSBmdW5jdGlvbihlbGVtZW50LCBwYXJlbnROYW1lLCBoaWVyYXJjaHkpe1xyXG4gICAgaGllcmFyY2h5ID0gaGllcmFyY2h5IHx8IFtdO1xyXG4gICAgdmFyIGVsZW1lbnRzID0gdGhpcy5lbGVtZW50cztcclxuICAgIHZhciBsYXllcnMgPSB0aGlzLmxheWVycztcclxuICAgIHZhciBpPTAsIGxlbiA9IGxheWVycy5sZW5ndGg7XHJcbiAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgaWYobGF5ZXJzW2ldLmluZCA9PSBwYXJlbnROYW1lKXtcclxuICAgICAgICAgICAgaWYoIWVsZW1lbnRzW2ldIHx8IGVsZW1lbnRzW2ldID09PSB0cnVlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVpbGRJdGVtKGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGRQZW5kaW5nRWxlbWVudChlbGVtZW50KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKGxheWVyc1tpXS5wYXJlbnQgIT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgICAgICBoaWVyYXJjaHkucHVzaChlbGVtZW50c1tpXSk7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50c1tpXS5faXNQYXJlbnQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idWlsZEVsZW1lbnRQYXJlbnRpbmcoZWxlbWVudCxsYXllcnNbaV0ucGFyZW50LCBoaWVyYXJjaHkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaGllcmFyY2h5LnB1c2goZWxlbWVudHNbaV0pO1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudHNbaV0uX2lzUGFyZW50ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQuc2V0SGllcmFyY2h5KGhpZXJhcmNoeSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBpICs9IDE7XHJcbiAgICB9XHJcbn07XHJcblxyXG5CYXNlUmVuZGVyZXIucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCl7XHJcbiAgICB0aGlzLnBlbmRpbmdFbGVtZW50cy5wdXNoKGVsZW1lbnQpO1xyXG59O1xuZnVuY3Rpb24gU1ZHUmVuZGVyZXIoYW5pbWF0aW9uSXRlbSwgY29uZmlnKXtcclxuICAgIHRoaXMuYW5pbWF0aW9uSXRlbSA9IGFuaW1hdGlvbkl0ZW07XHJcbiAgICB0aGlzLmxheWVycyA9IG51bGw7XHJcbiAgICB0aGlzLnJlbmRlcmVkRnJhbWUgPSAtMTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YSA9IHtcclxuICAgICAgICBmcmFtZU51bTogLTFcclxuICAgIH07XHJcbiAgICB0aGlzLnJlbmRlckNvbmZpZyA9IHtcclxuICAgICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiAoY29uZmlnICYmIGNvbmZpZy5wcmVzZXJ2ZUFzcGVjdFJhdGlvKSB8fCAneE1pZFlNaWQgbWVldCcsXHJcbiAgICAgICAgcHJvZ3Jlc3NpdmVMb2FkOiAoY29uZmlnICYmIGNvbmZpZy5wcm9ncmVzc2l2ZUxvYWQpIHx8IGZhbHNlLFxyXG4gICAgICAgIGhpZGVPblRyYW5zcGFyZW50OiAoY29uZmlnICYmIGNvbmZpZy5oaWRlT25UcmFuc3BhcmVudCA9PT0gZmFsc2UpID8gZmFsc2UgOiB0cnVlLFxyXG4gICAgICAgIHZpZXdCb3hPbmx5OiAoY29uZmlnICYmIGNvbmZpZy52aWV3Qm94T25seSkgfHwgZmFsc2UsXHJcbiAgICAgICAgY2xhc3NOYW1lOiAoY29uZmlnICYmIGNvbmZpZy5jbGFzc05hbWUpIHx8ICcnXHJcbiAgICB9O1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnJlbmRlckNvbmZpZyA9IHRoaXMucmVuZGVyQ29uZmlnO1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5wZW5kaW5nRWxlbWVudHMgPSBbXTtcclxuICAgIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XHJcblxyXG59XHJcblxyXG5leHRlbmRQcm90b3R5cGUoQmFzZVJlbmRlcmVyLFNWR1JlbmRlcmVyKTtcclxuXHJcblNWR1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVCYXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgU1ZHQmFzZUVsZW1lbnQoZGF0YSwgdGhpcy5sYXllckVsZW1lbnQsdGhpcy5nbG9iYWxEYXRhLHRoaXMpO1xyXG59O1xyXG5cclxuU1ZHUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVNoYXBlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgSVNoYXBlRWxlbWVudChkYXRhLCB0aGlzLmxheWVyRWxlbWVudCx0aGlzLmdsb2JhbERhdGEsdGhpcyk7XHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlVGV4dCA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICByZXR1cm4gbmV3IFNWR1RleHRFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuXHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlSW1hZ2UgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgcmV0dXJuIG5ldyBJSW1hZ2VFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxufTtcclxuXHJcblNWR1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVDb21wID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgSUNvbXBFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuXHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU29saWQgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgcmV0dXJuIG5ldyBJU29saWRFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxufTtcclxuXHJcblNWR1JlbmRlcmVyLnByb3RvdHlwZS5jb25maWdBbmltYXRpb24gPSBmdW5jdGlvbihhbmltRGF0YSl7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnc3ZnJyk7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3htbG5zJywnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnKTtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgndmlld0JveCcsJzAgMCAnK2FuaW1EYXRhLncrJyAnK2FuaW1EYXRhLmgpO1xyXG4gICAgaWYoIXRoaXMucmVuZGVyQ29uZmlnLnZpZXdCb3hPbmx5KSB7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCd3aWR0aCcsYW5pbURhdGEudyk7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLGFuaW1EYXRhLmgpO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLndpZHRoID0gJzEwMCUnO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLmhlaWdodCA9ICcxMDAlJztcclxuICAgIH1cclxuICAgIGlmKHRoaXMucmVuZGVyQ29uZmlnLmNsYXNzTmFtZSkge1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCB0aGlzLnJlbmRlckNvbmZpZy5jbGFzc05hbWUpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdwcmVzZXJ2ZUFzcGVjdFJhdGlvJyx0aGlzLnJlbmRlckNvbmZpZy5wcmVzZXJ2ZUFzcGVjdFJhdGlvKTtcclxuICAgIC8vdGhpcy5sYXllckVsZW1lbnQuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZTNkKDAsMCwwKSc7XHJcbiAgICAvL3RoaXMubGF5ZXJFbGVtZW50LnN0eWxlLnRyYW5zZm9ybU9yaWdpbiA9IHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLm1velRyYW5zZm9ybU9yaWdpbiA9IHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLndlYmtpdFRyYW5zZm9ybU9yaWdpbiA9IHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlWyctd2Via2l0LXRyYW5zZm9ybSddID0gXCIwcHggMHB4IDBweFwiO1xyXG4gICAgdGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5sYXllckVsZW1lbnQpO1xyXG4gICAgLy9NYXNrIGFuaW1hdGlvblxyXG4gICAgdmFyIGRlZnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsICdkZWZzJyk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZGVmcyA9IGRlZnM7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudC5hcHBlbmRDaGlsZChkZWZzKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5nZXRBc3NldERhdGEgPSB0aGlzLmFuaW1hdGlvbkl0ZW0uZ2V0QXNzZXREYXRhLmJpbmQodGhpcy5hbmltYXRpb25JdGVtKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5nZXRBc3NldHNQYXRoID0gdGhpcy5hbmltYXRpb25JdGVtLmdldEFzc2V0c1BhdGguYmluZCh0aGlzLmFuaW1hdGlvbkl0ZW0pO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnByb2dyZXNzaXZlTG9hZCA9IHRoaXMucmVuZGVyQ29uZmlnLnByb2dyZXNzaXZlTG9hZDtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mcmFtZUlkID0gMDtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5ubSA9IGFuaW1EYXRhLm5tO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplID0ge1xyXG4gICAgICAgIHc6IGFuaW1EYXRhLncsXHJcbiAgICAgICAgaDogYW5pbURhdGEuaFxyXG4gICAgfTtcclxuICAgIHRoaXMuZGF0YSA9IGFuaW1EYXRhO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZyYW1lUmF0ZSA9IGFuaW1EYXRhLmZyO1xyXG4gICAgdmFyIG1hc2tFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCAnY2xpcFBhdGgnKTtcclxuICAgIHZhciByZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdyZWN0Jyk7XHJcbiAgICByZWN0LnNldEF0dHJpYnV0ZSgnd2lkdGgnLGFuaW1EYXRhLncpO1xyXG4gICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsYW5pbURhdGEuaCk7XHJcbiAgICByZWN0LnNldEF0dHJpYnV0ZSgneCcsMCk7XHJcbiAgICByZWN0LnNldEF0dHJpYnV0ZSgneScsMCk7XHJcbiAgICB2YXIgbWFza0lkID0gJ2FuaW1hdGlvbk1hc2tfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgbWFza0VsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsIG1hc2tJZCk7XHJcbiAgICBtYXNrRWxlbWVudC5hcHBlbmRDaGlsZChyZWN0KTtcclxuICAgIHZhciBtYXNrZWRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICBtYXNrZWRFbGVtZW50LnNldEF0dHJpYnV0ZShcImNsaXAtcGF0aFwiLCBcInVybChcIiArIGxvY2F0aW9uSHJlZiArIFwiI1wiK21hc2tJZCtcIilcIik7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudC5hcHBlbmRDaGlsZChtYXNrZWRFbGVtZW50KTtcclxuICAgIGRlZnMuYXBwZW5kQ2hpbGQobWFza0VsZW1lbnQpO1xyXG4gICAgdGhpcy5sYXllckVsZW1lbnQgPSBtYXNrZWRFbGVtZW50O1xyXG4gICAgdGhpcy5sYXllcnMgPSBhbmltRGF0YS5sYXllcnM7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIgPSBuZXcgRm9udE1hbmFnZXIoKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mb250TWFuYWdlci5hZGRDaGFycyhhbmltRGF0YS5jaGFycyk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuYWRkRm9udHMoYW5pbURhdGEuZm9udHMsZGVmcyk7XHJcbiAgICB0aGlzLmVsZW1lbnRzID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOmFuaW1EYXRhLmxheWVycy5sZW5ndGh9KTtcclxufTtcclxuXHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyLmlubmVySFRNTCA9ICcnO1xyXG4gICAgdGhpcy5sYXllckVsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmRlZnMgPSBudWxsO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMubGF5ZXJzID8gdGhpcy5sYXllcnMubGVuZ3RoIDogMDtcclxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgIGlmKHRoaXMuZWxlbWVudHNbaV0pe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmVsZW1lbnRzLmxlbmd0aCA9IDA7XHJcbiAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0gPSBudWxsO1xyXG59O1xyXG5cclxuU1ZHUmVuZGVyZXIucHJvdG90eXBlLnVwZGF0ZUNvbnRhaW5lclNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRJdGVtICA9IGZ1bmN0aW9uKHBvcyl7XHJcbiAgICB2YXIgZWxlbWVudHMgPSB0aGlzLmVsZW1lbnRzO1xyXG4gICAgaWYoZWxlbWVudHNbcG9zXSB8fCB0aGlzLmxheWVyc1twb3NdLnR5ID09IDk5KXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBlbGVtZW50c1twb3NdID0gdHJ1ZTtcclxuICAgIHZhciBlbGVtZW50ID0gdGhpcy5jcmVhdGVJdGVtKHRoaXMubGF5ZXJzW3Bvc10pO1xyXG5cclxuICAgIGVsZW1lbnRzW3Bvc10gPSBlbGVtZW50O1xyXG4gICAgaWYoZXhwcmVzc2lvbnNQbHVnaW4pe1xyXG4gICAgICAgIGlmKHRoaXMubGF5ZXJzW3Bvc10udHkgPT09IDApe1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEucHJvamVjdEludGVyZmFjZS5yZWdpc3RlckNvbXBvc2l0aW9uKGVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbGVtZW50LmluaXRFeHByZXNzaW9ucygpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hcHBlbmRFbGVtZW50SW5Qb3MoZWxlbWVudCxwb3MpO1xyXG4gICAgaWYodGhpcy5sYXllcnNbcG9zXS50dCl7XHJcbiAgICAgICAgaWYoIXRoaXMuZWxlbWVudHNbcG9zIC0gMV0gfHwgdGhpcy5lbGVtZW50c1twb3MgLSAxXSA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuYnVpbGRJdGVtKHBvcyAtIDEpO1xyXG4gICAgICAgICAgICB0aGlzLmFkZFBlbmRpbmdFbGVtZW50KGVsZW1lbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0TWF0dGUoZWxlbWVudHNbcG9zIC0gMV0ubGF5ZXJJZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuU1ZHUmVuZGVyZXIucHJvdG90eXBlLmNoZWNrUGVuZGluZ0VsZW1lbnRzICA9IGZ1bmN0aW9uKCl7XHJcbiAgICB3aGlsZSh0aGlzLnBlbmRpbmdFbGVtZW50cy5sZW5ndGgpe1xyXG4gICAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5wZW5kaW5nRWxlbWVudHMucG9wKCk7XHJcbiAgICAgICAgZWxlbWVudC5jaGVja1BhcmVudGluZygpO1xyXG4gICAgICAgIGlmKGVsZW1lbnQuZGF0YS50dCl7XHJcbiAgICAgICAgICAgIHZhciBpID0gMCwgbGVuID0gdGhpcy5lbGVtZW50cy5sZW5ndGg7XHJcbiAgICAgICAgICAgIHdoaWxlKGk8bGVuKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuZWxlbWVudHNbaV0gPT09IGVsZW1lbnQpe1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc2V0TWF0dGUodGhpcy5lbGVtZW50c1tpIC0gMV0ubGF5ZXJJZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihudW0pe1xyXG4gICAgaWYodGhpcy5yZW5kZXJlZEZyYW1lID09IG51bSB8fCB0aGlzLmRlc3Ryb3llZCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYobnVtID09PSBudWxsKXtcclxuICAgICAgICBudW0gPSB0aGlzLnJlbmRlcmVkRnJhbWU7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLnJlbmRlcmVkRnJhbWUgPSBudW07XHJcbiAgICB9XHJcbiAgICAvL2NsZWFyUG9pbnRzKCk7XHJcbiAgICAvKmNvbnNvbGUubG9nKCctLS0tLS0tJyk7XHJcbiAgICBjb25zb2xlLmxvZygnRlJBTUUgJyxudW0pOyovXHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZnJhbWVOdW0gPSBudW07XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZnJhbWVJZCArPSAxO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnByb2plY3RJbnRlcmZhY2UuY3VycmVudEZyYW1lID0gbnVtO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMubGF5ZXJzLmxlbmd0aDtcclxuICAgIGlmKCF0aGlzLmNvbXBsZXRlTGF5ZXJzKXtcclxuICAgICAgICB0aGlzLmNoZWNrTGF5ZXJzKG51bSk7XHJcbiAgICB9XHJcbiAgICBmb3IgKGkgPSBsZW4gLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgIGlmKHRoaXMuY29tcGxldGVMYXllcnMgfHwgdGhpcy5lbGVtZW50c1tpXSl7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbaV0ucHJlcGFyZUZyYW1lKG51bSAtIHRoaXMubGF5ZXJzW2ldLnN0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKGkgPSBsZW4gLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgIGlmKHRoaXMuY29tcGxldGVMYXllcnMgfHwgdGhpcy5lbGVtZW50c1tpXSl7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbaV0ucmVuZGVyRnJhbWUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5TVkdSZW5kZXJlci5wcm90b3R5cGUuYXBwZW5kRWxlbWVudEluUG9zID0gZnVuY3Rpb24oZWxlbWVudCwgcG9zKXtcclxuICAgIHZhciBuZXdFbGVtZW50ID0gZWxlbWVudC5nZXRCYXNlRWxlbWVudCgpO1xyXG4gICAgaWYoIW5ld0VsZW1lbnQpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBpID0gMDtcclxuICAgIHZhciBuZXh0RWxlbWVudDtcclxuICAgIHdoaWxlKGk8cG9zKXtcclxuICAgICAgICBpZih0aGlzLmVsZW1lbnRzW2ldICYmIHRoaXMuZWxlbWVudHNbaV0hPT0gdHJ1ZSAmJiB0aGlzLmVsZW1lbnRzW2ldLmdldEJhc2VFbGVtZW50KCkpe1xyXG4gICAgICAgICAgICBuZXh0RWxlbWVudCA9IHRoaXMuZWxlbWVudHNbaV0uZ2V0QmFzZUVsZW1lbnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSArPSAxO1xyXG4gICAgfVxyXG4gICAgaWYobmV4dEVsZW1lbnQpe1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50Lmluc2VydEJlZm9yZShuZXdFbGVtZW50LCBuZXh0RWxlbWVudCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKG5ld0VsZW1lbnQpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuU1ZHUmVuZGVyZXIucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5sYXllckVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxufTtcclxuXHJcblNWR1JlbmRlcmVyLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG59O1xyXG5cclxuU1ZHUmVuZGVyZXIucHJvdG90eXBlLnNlYXJjaEV4dHJhQ29tcG9zaXRpb25zID0gZnVuY3Rpb24oYXNzZXRzKXtcclxuICAgIHZhciBpLCBsZW4gPSBhc3NldHMubGVuZ3RoO1xyXG4gICAgdmFyIGZsb2F0aW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIGlmKGFzc2V0c1tpXS54dCl7XHJcbiAgICAgICAgICAgIHZhciBjb21wID0gdGhpcy5jcmVhdGVDb21wKGFzc2V0c1tpXSxmbG9hdGluZ0NvbnRhaW5lcix0aGlzLmdsb2JhbERhdGEuY29tcCxudWxsKTtcclxuICAgICAgICAgICAgY29tcC5pbml0RXhwcmVzc2lvbnMoKTtcclxuICAgICAgICAgICAgLy9jb21wLmNvbXBJbnRlcmZhY2UgPSBDb21wRXhwcmVzc2lvbkludGVyZmFjZShjb21wKTtcclxuICAgICAgICAgICAgLy9FeHByZXNzaW9ucy5hZGRMYXllcnNJbnRlcmZhY2UoY29tcC5lbGVtZW50cywgdGhpcy5nbG9iYWxEYXRhLnByb2plY3RJbnRlcmZhY2UpO1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEucHJvamVjdEludGVyZmFjZS5yZWdpc3RlckNvbXBvc2l0aW9uKGNvbXApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXG5mdW5jdGlvbiBNYXNrRWxlbWVudChkYXRhLGVsZW1lbnQsZ2xvYmFsRGF0YSkge1xyXG4gICAgdGhpcy5keW5hbWljUHJvcGVydGllcyA9IFtdO1xyXG4gICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEgPSBnbG9iYWxEYXRhO1xyXG4gICAgdGhpcy5zdG9yZWREYXRhID0gW107XHJcbiAgICB0aGlzLm1hc2tzUHJvcGVydGllcyA9IHRoaXMuZGF0YS5tYXNrc1Byb3BlcnRpZXM7XHJcbiAgICB0aGlzLnZpZXdEYXRhID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMubWFza3NQcm9wZXJ0aWVzLmxlbmd0aH0pO1xyXG4gICAgdGhpcy5tYXNrRWxlbWVudCA9IG51bGw7XHJcbiAgICB0aGlzLmZpcnN0RnJhbWUgPSB0cnVlO1xyXG4gICAgdmFyIGRlZnMgPSB0aGlzLmdsb2JhbERhdGEuZGVmcztcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLm1hc2tzUHJvcGVydGllcy5sZW5ndGg7XHJcblxyXG5cclxuICAgIHZhciBwYXRoLCBwcm9wZXJ0aWVzID0gdGhpcy5tYXNrc1Byb3BlcnRpZXM7XHJcbiAgICB2YXIgY291bnQgPSAwO1xyXG4gICAgdmFyIGN1cnJlbnRNYXNrcyA9IFtdO1xyXG4gICAgdmFyIGosIGpMZW47XHJcbiAgICB2YXIgbGF5ZXJJZCA9IHJhbmRvbVN0cmluZygxMCk7XHJcbiAgICB2YXIgcmVjdCwgZXhwYW5zb3IsIGZlTW9ycGgseDtcclxuICAgIHZhciBtYXNrVHlwZSA9ICdjbGlwUGF0aCcsIG1hc2tSZWYgPSAnY2xpcC1wYXRoJztcclxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG5cclxuICAgICAgICBpZigocHJvcGVydGllc1tpXS5tb2RlICE9PSAnYScgJiYgcHJvcGVydGllc1tpXS5tb2RlICE9PSAnbicpfHwgcHJvcGVydGllc1tpXS5pbnYgfHwgcHJvcGVydGllc1tpXS5vLmsgIT09IDEwMCl7XHJcbiAgICAgICAgICAgIG1hc2tUeXBlID0gJ21hc2snO1xyXG4gICAgICAgICAgICBtYXNrUmVmID0gJ21hc2snO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoKHByb3BlcnRpZXNbaV0ubW9kZSA9PSAncycgfHwgcHJvcGVydGllc1tpXS5tb2RlID09ICdpJykgJiYgY291bnQgPT0gMCl7XHJcbiAgICAgICAgICAgIHJlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsICdyZWN0Jyk7XHJcbiAgICAgICAgICAgIHJlY3Quc2V0QXR0cmlidXRlKCdmaWxsJywgJyNmZmZmZmYnKTtcclxuICAgICAgICAgICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgdGhpcy5lbGVtZW50LmNvbXAuZGF0YS53KTtcclxuICAgICAgICAgICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIHRoaXMuZWxlbWVudC5jb21wLmRhdGEuaCk7XHJcbiAgICAgICAgICAgIGN1cnJlbnRNYXNrcy5wdXNoKHJlY3QpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlY3QgPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywgJ3BhdGgnKTtcclxuICAgICAgICBpZihwcm9wZXJ0aWVzW2ldLm1vZGUgPT0gJ24nKSB7XHJcbiAgICAgICAgICAgIHRoaXMudmlld0RhdGFbaV0gPSB7XHJcbiAgICAgICAgICAgICAgICBvcDogUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcy5lbGVtZW50LHByb3BlcnRpZXNbaV0ubywwLDAuMDEsdGhpcy5keW5hbWljUHJvcGVydGllcyksXHJcbiAgICAgICAgICAgICAgICBwcm9wOiBTaGFwZVByb3BlcnR5RmFjdG9yeS5nZXRTaGFwZVByb3AodGhpcy5lbGVtZW50LHByb3BlcnRpZXNbaV0sMyx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLG51bGwpLFxyXG4gICAgICAgICAgICAgICAgZWxlbTogcGF0aFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBkZWZzLmFwcGVuZENoaWxkKHBhdGgpO1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY291bnQgKz0gMTtcclxuXHJcbiAgICAgICAgaWYocHJvcGVydGllc1tpXS5tb2RlID09ICdzJyl7XHJcbiAgICAgICAgICAgIHBhdGguc2V0QXR0cmlidXRlKCdmaWxsJywgJyMwMDAwMDAnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcGF0aC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnI2ZmZmZmZicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZSgnY2xpcC1ydWxlJywnbm9uemVybycpO1xyXG5cclxuICAgICAgICBpZihwcm9wZXJ0aWVzW2ldLnguayAhPT0gMCl7XHJcbiAgICAgICAgICAgIG1hc2tUeXBlID0gJ21hc2snO1xyXG4gICAgICAgICAgICBtYXNrUmVmID0gJ21hc2snO1xyXG4gICAgICAgICAgICB4ID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcy5lbGVtZW50LHByb3BlcnRpZXNbaV0ueCwwLG51bGwsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIHZhciBmaWx0ZXJJRCA9ICdmaV8nK3JhbmRvbVN0cmluZygxMCk7XHJcbiAgICAgICAgICAgIGV4cGFuc29yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmaWx0ZXInKTtcclxuICAgICAgICAgICAgZXhwYW5zb3Iuc2V0QXR0cmlidXRlKCdpZCcsZmlsdGVySUQpO1xyXG4gICAgICAgICAgICBmZU1vcnBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZU1vcnBob2xvZ3knKTtcclxuICAgICAgICAgICAgZmVNb3JwaC5zZXRBdHRyaWJ1dGUoJ29wZXJhdG9yJywnZGlsYXRlJyk7XHJcbiAgICAgICAgICAgIGZlTW9ycGguc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgICAgICAgICAgZmVNb3JwaC5zZXRBdHRyaWJ1dGUoJ3JhZGl1cycsJzAnKTtcclxuICAgICAgICAgICAgZXhwYW5zb3IuYXBwZW5kQ2hpbGQoZmVNb3JwaCk7XHJcbiAgICAgICAgICAgIGRlZnMuYXBwZW5kQ2hpbGQoZXhwYW5zb3IpO1xyXG4gICAgICAgICAgICBpZihwcm9wZXJ0aWVzW2ldLm1vZGUgPT0gJ3MnKXtcclxuICAgICAgICAgICAgICAgIHBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UnLCAnIzAwMDAwMCcpO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UnLCAnI2ZmZmZmZicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGZlTW9ycGggPSBudWxsO1xyXG4gICAgICAgICAgICB4ID0gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB0aGlzLnN0b3JlZERhdGFbaV0gPSB7XHJcbiAgICAgICAgICAgICBlbGVtOiBwYXRoLFxyXG4gICAgICAgICAgICAgeDogeCxcclxuICAgICAgICAgICAgIGV4cGFuOiBmZU1vcnBoLFxyXG4gICAgICAgICAgICBsYXN0UGF0aDogJycsXHJcbiAgICAgICAgICAgIGxhc3RPcGVyYXRvcjonJyxcclxuICAgICAgICAgICAgZmlsdGVySWQ6ZmlsdGVySUQsXHJcbiAgICAgICAgICAgIGxhc3RSYWRpdXM6MFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYocHJvcGVydGllc1tpXS5tb2RlID09ICdpJyl7XHJcbiAgICAgICAgICAgIGpMZW4gPSBjdXJyZW50TWFza3MubGVuZ3RoO1xyXG4gICAgICAgICAgICB2YXIgZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgIGcuYXBwZW5kQ2hpbGQoY3VycmVudE1hc2tzW2pdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnbWFzaycpO1xyXG4gICAgICAgICAgICBtYXNrLnNldEF0dHJpYnV0ZSgnbWFzay10eXBlJywnYWxwaGEnKTtcclxuICAgICAgICAgICAgbWFzay5zZXRBdHRyaWJ1dGUoJ2lkJyxsYXllcklkKydfJytjb3VudCk7XHJcbiAgICAgICAgICAgIG1hc2suYXBwZW5kQ2hpbGQocGF0aCk7XHJcbiAgICAgICAgICAgIGRlZnMuYXBwZW5kQ2hpbGQobWFzayk7XHJcbiAgICAgICAgICAgIGcuc2V0QXR0cmlidXRlKCdtYXNrJywndXJsKCcgKyBsb2NhdGlvbkhyZWYgKyAnIycrbGF5ZXJJZCsnXycrY291bnQrJyknKTtcclxuXHJcbiAgICAgICAgICAgIGN1cnJlbnRNYXNrcy5sZW5ndGggPSAwO1xyXG4gICAgICAgICAgICBjdXJyZW50TWFza3MucHVzaChnKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgY3VycmVudE1hc2tzLnB1c2gocGF0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHByb3BlcnRpZXNbaV0uaW52ICYmICF0aGlzLnNvbGlkUGF0aCl7XHJcbiAgICAgICAgICAgIHRoaXMuc29saWRQYXRoID0gdGhpcy5jcmVhdGVMYXllclNvbGlkUGF0aCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnZpZXdEYXRhW2ldID0ge1xyXG4gICAgICAgICAgICBlbGVtOiBwYXRoLFxyXG4gICAgICAgICAgICBsYXN0UGF0aDogJycsXHJcbiAgICAgICAgICAgIG9wOiBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLmVsZW1lbnQscHJvcGVydGllc1tpXS5vLDAsMC4wMSx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKSxcclxuICAgICAgICAgICAgcHJvcDpTaGFwZVByb3BlcnR5RmFjdG9yeS5nZXRTaGFwZVByb3AodGhpcy5lbGVtZW50LHByb3BlcnRpZXNbaV0sMyx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLG51bGwpXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZihyZWN0KXtcclxuICAgICAgICAgICAgdGhpcy52aWV3RGF0YVtpXS5pbnZSZWN0ID0gcmVjdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIXRoaXMudmlld0RhdGFbaV0ucHJvcC5rKXtcclxuICAgICAgICAgICAgdGhpcy5kcmF3UGF0aChwcm9wZXJ0aWVzW2ldLHRoaXMudmlld0RhdGFbaV0ucHJvcC52LHRoaXMudmlld0RhdGFbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm1hc2tFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCBtYXNrVHlwZSk7XHJcblxyXG4gICAgbGVuID0gY3VycmVudE1hc2tzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5tYXNrRWxlbWVudC5hcHBlbmRDaGlsZChjdXJyZW50TWFza3NbaV0pO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubWFza0VsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsIGxheWVySWQpO1xyXG4gICAgaWYoY291bnQgPiAwKXtcclxuICAgICAgICB0aGlzLmVsZW1lbnQubWFza2VkRWxlbWVudC5zZXRBdHRyaWJ1dGUobWFza1JlZiwgXCJ1cmwoXCIgKyBsb2NhdGlvbkhyZWYgKyBcIiNcIiArIGxheWVySWQgKyBcIilcIik7XHJcbiAgICB9XHJcblxyXG4gICAgZGVmcy5hcHBlbmRDaGlsZCh0aGlzLm1hc2tFbGVtZW50KTtcclxufTtcclxuXHJcbk1hc2tFbGVtZW50LnByb3RvdHlwZS5nZXRNYXNrUHJvcGVydHkgPSBmdW5jdGlvbihwb3Mpe1xyXG4gICAgcmV0dXJuIHRoaXMudmlld0RhdGFbcG9zXS5wcm9wO1xyXG59O1xyXG5cclxuTWFza0VsZW1lbnQucHJvdG90eXBlLnByZXBhcmVGcmFtZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0uZ2V0VmFsdWUoKTtcclxuXHJcbiAgICB9XHJcbn07XHJcblxyXG5NYXNrRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbiAoZmluYWxNYXQpIHtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLm1hc2tzUHJvcGVydGllcy5sZW5ndGg7XHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICBpZih0aGlzLnZpZXdEYXRhW2ldLnByb3AubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhd1BhdGgodGhpcy5tYXNrc1Byb3BlcnRpZXNbaV0sdGhpcy52aWV3RGF0YVtpXS5wcm9wLnYsdGhpcy52aWV3RGF0YVtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMudmlld0RhdGFbaV0ub3AubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgICAgIHRoaXMudmlld0RhdGFbaV0uZWxlbS5zZXRBdHRyaWJ1dGUoJ2ZpbGwtb3BhY2l0eScsdGhpcy52aWV3RGF0YVtpXS5vcC52KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5tYXNrc1Byb3BlcnRpZXNbaV0ubW9kZSAhPT0gJ24nKXtcclxuICAgICAgICAgICAgaWYodGhpcy52aWV3RGF0YVtpXS5pbnZSZWN0ICYmICh0aGlzLmVsZW1lbnQuZmluYWxUcmFuc2Zvcm0ubVByb3AubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSkpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy52aWV3RGF0YVtpXS5pbnZSZWN0LnNldEF0dHJpYnV0ZSgneCcsIC1maW5hbE1hdC5wcm9wc1sxMl0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52aWV3RGF0YVtpXS5pbnZSZWN0LnNldEF0dHJpYnV0ZSgneScsIC1maW5hbE1hdC5wcm9wc1sxM10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc3RvcmVkRGF0YVtpXS54ICYmICh0aGlzLnN0b3JlZERhdGFbaV0ueC5tZGYgfHwgdGhpcy5maXJzdEZyYW1lKSl7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmVNb3JwaCA9IHRoaXMuc3RvcmVkRGF0YVtpXS5leHBhbjtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuc3RvcmVkRGF0YVtpXS54LnYgPCAwKXtcclxuICAgICAgICAgICAgICAgICAgICBpZih0aGlzLnN0b3JlZERhdGFbaV0ubGFzdE9wZXJhdG9yICE9PSAnZXJvZGUnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdG9yZWREYXRhW2ldLmxhc3RPcGVyYXRvciA9ICdlcm9kZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RvcmVkRGF0YVtpXS5lbGVtLnNldEF0dHJpYnV0ZSgnZmlsdGVyJywndXJsKCcgKyBsb2NhdGlvbkhyZWYgKyAnIycrdGhpcy5zdG9yZWREYXRhW2ldLmZpbHRlcklkKycpJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGZlTW9ycGguc2V0QXR0cmlidXRlKCdyYWRpdXMnLC10aGlzLnN0b3JlZERhdGFbaV0ueC52KTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuc3RvcmVkRGF0YVtpXS5sYXN0T3BlcmF0b3IgIT09ICdkaWxhdGUnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdG9yZWREYXRhW2ldLmxhc3RPcGVyYXRvciA9ICdkaWxhdGUnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0b3JlZERhdGFbaV0uZWxlbS5zZXRBdHRyaWJ1dGUoJ2ZpbHRlcicsbnVsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RvcmVkRGF0YVtpXS5lbGVtLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLXdpZHRoJywgdGhpcy5zdG9yZWREYXRhW2ldLngudioyKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxufTtcclxuXHJcbk1hc2tFbGVtZW50LnByb3RvdHlwZS5nZXRNYXNrZWxlbWVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB0aGlzLm1hc2tFbGVtZW50O1xyXG59O1xyXG5cclxuTWFza0VsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUxheWVyU29saWRQYXRoID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBwYXRoID0gJ00wLDAgJztcclxuICAgIHBhdGggKz0gJyBoJyArIHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS53IDtcclxuICAgIHBhdGggKz0gJyB2JyArIHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS5oIDtcclxuICAgIHBhdGggKz0gJyBoLScgKyB0aGlzLmdsb2JhbERhdGEuY29tcFNpemUudyA7XHJcbiAgICBwYXRoICs9ICcgdi0nICsgdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLmggKyAnICc7XHJcbiAgICByZXR1cm4gcGF0aDtcclxufTtcclxuXHJcbk1hc2tFbGVtZW50LnByb3RvdHlwZS5kcmF3UGF0aCA9IGZ1bmN0aW9uKHBhdGhEYXRhLHBhdGhOb2Rlcyx2aWV3RGF0YSl7XHJcbiAgICB2YXIgcGF0aFN0cmluZyA9IFwiIE1cIitwYXRoTm9kZXMudlswXVswXSsnLCcrcGF0aE5vZGVzLnZbMF1bMV07XHJcbiAgICB2YXIgaSwgbGVuO1xyXG4gICAgbGVuID0gcGF0aE5vZGVzLl9sZW5ndGg7XHJcbiAgICBmb3IoaT0xO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIC8vcGF0aFN0cmluZyArPSBcIiBDXCIrcGF0aE5vZGVzLm9baS0xXVswXSsnLCcrcGF0aE5vZGVzLm9baS0xXVsxXSArIFwiIFwiK3BhdGhOb2Rlcy5pW2ldWzBdKycsJytwYXRoTm9kZXMuaVtpXVsxXSArIFwiIFwiK3BhdGhOb2Rlcy52W2ldWzBdKycsJytwYXRoTm9kZXMudltpXVsxXTtcclxuICAgICAgICBwYXRoU3RyaW5nICs9IFwiIENcIitibV9ybmQocGF0aE5vZGVzLm9baS0xXVswXSkrJywnK2JtX3JuZChwYXRoTm9kZXMub1tpLTFdWzFdKSArIFwiIFwiK2JtX3JuZChwYXRoTm9kZXMuaVtpXVswXSkrJywnK2JtX3JuZChwYXRoTm9kZXMuaVtpXVsxXSkgKyBcIiBcIitibV9ybmQocGF0aE5vZGVzLnZbaV1bMF0pKycsJytibV9ybmQocGF0aE5vZGVzLnZbaV1bMV0pO1xyXG4gICAgfVxyXG4gICAgICAgIC8vcGF0aFN0cmluZyArPSBcIiBDXCIrcGF0aE5vZGVzLm9baS0xXVswXSsnLCcrcGF0aE5vZGVzLm9baS0xXVsxXSArIFwiIFwiK3BhdGhOb2Rlcy5pWzBdWzBdKycsJytwYXRoTm9kZXMuaVswXVsxXSArIFwiIFwiK3BhdGhOb2Rlcy52WzBdWzBdKycsJytwYXRoTm9kZXMudlswXVsxXTtcclxuICAgIGlmKHBhdGhOb2Rlcy5jICYmIGxlbiA+IDEpe1xyXG4gICAgICAgIHBhdGhTdHJpbmcgKz0gXCIgQ1wiK2JtX3JuZChwYXRoTm9kZXMub1tpLTFdWzBdKSsnLCcrYm1fcm5kKHBhdGhOb2Rlcy5vW2ktMV1bMV0pICsgXCIgXCIrYm1fcm5kKHBhdGhOb2Rlcy5pWzBdWzBdKSsnLCcrYm1fcm5kKHBhdGhOb2Rlcy5pWzBdWzFdKSArIFwiIFwiK2JtX3JuZChwYXRoTm9kZXMudlswXVswXSkrJywnK2JtX3JuZChwYXRoTm9kZXMudlswXVsxXSk7XHJcbiAgICB9XHJcbiAgICAvL3BhdGhOb2Rlcy5fX3JlbmRlcmVkU3RyaW5nID0gcGF0aFN0cmluZztcclxuXHJcblxyXG4gICAgaWYodmlld0RhdGEubGFzdFBhdGggIT09IHBhdGhTdHJpbmcpe1xyXG4gICAgICAgIGlmKHZpZXdEYXRhLmVsZW0pe1xyXG4gICAgICAgICAgICBpZighcGF0aE5vZGVzLmMpe1xyXG4gICAgICAgICAgICAgICAgdmlld0RhdGEuZWxlbS5zZXRBdHRyaWJ1dGUoJ2QnLCcnKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYocGF0aERhdGEuaW52KXtcclxuICAgICAgICAgICAgICAgIHZpZXdEYXRhLmVsZW0uc2V0QXR0cmlidXRlKCdkJyx0aGlzLnNvbGlkUGF0aCArIHBhdGhTdHJpbmcpO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHZpZXdEYXRhLmVsZW0uc2V0QXR0cmlidXRlKCdkJyxwYXRoU3RyaW5nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2aWV3RGF0YS5sYXN0UGF0aCA9IHBhdGhTdHJpbmc7XHJcbiAgICB9XHJcbn07XHJcblxyXG5NYXNrRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhID0gbnVsbDtcclxuICAgIHRoaXMubWFza0VsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5kYXRhID0gbnVsbDtcclxuICAgIHRoaXMubWFza3NQcm9wZXJ0aWVzID0gbnVsbDtcclxufTtcbmZ1bmN0aW9uIEJhc2VFbGVtZW50KCl7XHJcbn07XHJcbkJhc2VFbGVtZW50LnByb3RvdHlwZS5jaGVja01hc2tzID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKCF0aGlzLmRhdGEuaGFzTWFzayl7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdmFyIGkgPSAwLCBsZW4gPSB0aGlzLmRhdGEubWFza3NQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIHdoaWxlKGk8bGVuKSB7XHJcbiAgICAgICAgaWYoKHRoaXMuZGF0YS5tYXNrc1Byb3BlcnRpZXNbaV0ubW9kZSAhPT0gJ24nICYmIHRoaXMuZGF0YS5tYXNrc1Byb3BlcnRpZXNbaV0uY2wgIT09IGZhbHNlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSArPSAxO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5CYXNlRWxlbWVudC5wcm90b3R5cGUuY2hlY2tQYXJlbnRpbmcgPSBmdW5jdGlvbigpe1xyXG4gICAgaWYodGhpcy5kYXRhLnBhcmVudCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICB0aGlzLmNvbXAuYnVpbGRFbGVtZW50UGFyZW50aW5nKHRoaXMsIHRoaXMuZGF0YS5wYXJlbnQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5CYXNlRWxlbWVudC5wcm90b3R5cGUucHJlcGFyZUZyYW1lID0gZnVuY3Rpb24obnVtKXtcclxuICAgIGlmKHRoaXMuZGF0YS5pcCAtIHRoaXMuZGF0YS5zdCA8PSBudW0gJiYgdGhpcy5kYXRhLm9wIC0gdGhpcy5kYXRhLnN0ID4gbnVtKVxyXG4gICAge1xyXG4gICAgICAgIGlmKHRoaXMuaXNWaXNpYmxlICE9PSB0cnVlKXtcclxuICAgICAgICAgICAgdGhpcy5lbGVtTWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLm1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuaXNWaXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5maXJzdEZyYW1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tYXNrTWFuYWdlci5maXJzdEZyYW1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1lbHNle1xyXG4gICAgICAgIGlmKHRoaXMuaXNWaXNpYmxlICE9PSBmYWxzZSl7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbU1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLmlzVmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgaWYodGhpcy5pc1Zpc2libGUgfHwgKHRoaXMuX2lzUGFyZW50ICYmIHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0udHlwZSA9PT0gJ3RyYW5zZm9ybScpKXtcclxuICAgICAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICBpZih0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLm1kZil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVsZW1NZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLm1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmRhdGEuaGFzTWFzayAmJiB0aGlzLmlzVmlzaWJsZSl7XHJcbiAgICAgICAgdGhpcy5tYXNrTWFuYWdlci5wcmVwYXJlRnJhbWUobnVtKnRoaXMuZGF0YS5zcik7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qIFRPRE8gY2hlY2sgdGhpc1xyXG4gICAgaWYodGhpcy5kYXRhLnN5KXtcclxuICAgICAgICBpZih0aGlzLmRhdGEuc3lbMF0ucmVuZGVyZWREYXRhW251bV0pe1xyXG4gICAgICAgICAgICBpZih0aGlzLmRhdGEuc3lbMF0ucmVuZGVyZWREYXRhW251bV0uYyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZlRmxvb2Quc2V0QXR0cmlidXRlKCdmbG9vZC1jb2xvcicsJ3JnYignK01hdGgucm91bmQodGhpcy5kYXRhLnN5WzBdLnJlbmRlcmVkRGF0YVtudW1dLmNbMF0pKycsJytNYXRoLnJvdW5kKHRoaXMuZGF0YS5zeVswXS5yZW5kZXJlZERhdGFbbnVtXS5jWzFdKSsnLCcrTWF0aC5yb3VuZCh0aGlzLmRhdGEuc3lbMF0ucmVuZGVyZWREYXRhW251bV0uY1syXSkrJyknKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLmRhdGEuc3lbMF0ucmVuZGVyZWREYXRhW251bV0ucyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZlTW9ycGguc2V0QXR0cmlidXRlKCdyYWRpdXMnLHRoaXMuZGF0YS5zeVswXS5yZW5kZXJlZERhdGFbbnVtXS5zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICovXHJcblxyXG5cclxuICAgIHRoaXMuY3VycmVudEZyYW1lTnVtID0gbnVtKnRoaXMuZGF0YS5zcjtcclxuICAgIHJldHVybiB0aGlzLmlzVmlzaWJsZTtcclxufTtcclxuXHJcbkJhc2VFbGVtZW50LnByb3RvdHlwZS5nbG9iYWxUb0xvY2FsID0gZnVuY3Rpb24ocHQpe1xyXG4gICAgdmFyIHRyYW5zZm9ybXMgPSBbXTtcclxuICAgIHRyYW5zZm9ybXMucHVzaCh0aGlzLmZpbmFsVHJhbnNmb3JtKTtcclxuICAgIHZhciBmbGFnID0gdHJ1ZTtcclxuICAgIHZhciBjb21wID0gdGhpcy5jb21wO1xyXG4gICAgd2hpbGUoZmxhZyl7XHJcbiAgICAgICAgaWYoY29tcC5maW5hbFRyYW5zZm9ybSl7XHJcbiAgICAgICAgICAgIGlmKGNvbXAuZGF0YS5oYXNNYXNrKXtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybXMuc3BsaWNlKDAsMCxjb21wLmZpbmFsVHJhbnNmb3JtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb21wID0gY29tcC5jb21wO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB2YXIgaSwgbGVuID0gdHJhbnNmb3Jtcy5sZW5ndGgscHROZXc7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHB0TmV3ID0gdHJhbnNmb3Jtc1tpXS5tYXQuYXBwbHlUb1BvaW50QXJyYXkoMCwwLDApO1xyXG4gICAgICAgIC8vcHROZXcgPSB0cmFuc2Zvcm1zW2ldLm1hdC5hcHBseVRvUG9pbnRBcnJheShwdFswXSxwdFsxXSxwdFsyXSk7XHJcbiAgICAgICAgcHQgPSBbcHRbMF0gLSBwdE5ld1swXSxwdFsxXSAtIHB0TmV3WzFdLDBdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHB0O1xyXG59O1xyXG5cclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLmluaXRFeHByZXNzaW9ucyA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmxheWVySW50ZXJmYWNlID0gTGF5ZXJFeHByZXNzaW9uSW50ZXJmYWNlKHRoaXMpO1xyXG4gICAgLy9sYXllcnNbaV0ubGF5ZXJJbnRlcmZhY2UgPSBMYXllckV4cHJlc3Npb25JbnRlcmZhY2UobGF5ZXJzW2ldKTtcclxuICAgIC8vbGF5ZXJzW2ldLmxheWVySW50ZXJmYWNlID0gTGF5ZXJFeHByZXNzaW9uSW50ZXJmYWNlKGxheWVyc1tpXSk7XHJcbiAgICBpZih0aGlzLmRhdGEuaGFzTWFzayl7XHJcbiAgICAgICAgdGhpcy5sYXllckludGVyZmFjZS5yZWdpc3Rlck1hc2tJbnRlcmZhY2UodGhpcy5tYXNrTWFuYWdlcik7XHJcbiAgICB9XHJcbiAgICB2YXIgZWZmZWN0c0ludGVyZmFjZSA9IEVmZmVjdHNFeHByZXNzaW9uSW50ZXJmYWNlLmNyZWF0ZUVmZmVjdHNJbnRlcmZhY2UodGhpcyx0aGlzLmxheWVySW50ZXJmYWNlKTtcclxuICAgIHRoaXMubGF5ZXJJbnRlcmZhY2UucmVnaXN0ZXJFZmZlY3RzSW50ZXJmYWNlKGVmZmVjdHNJbnRlcmZhY2UpO1xyXG5cclxuICAgIGlmKHRoaXMuZGF0YS50eSA9PT0gMCB8fCB0aGlzLmRhdGEueHQpe1xyXG4gICAgICAgIHRoaXMuY29tcEludGVyZmFjZSA9IENvbXBFeHByZXNzaW9uSW50ZXJmYWNlKHRoaXMpO1xyXG4gICAgfSBlbHNlIGlmKHRoaXMuZGF0YS50eSA9PT0gNCl7XHJcbiAgICAgICAgdGhpcy5sYXllckludGVyZmFjZS5zaGFwZUludGVyZmFjZSA9IFNoYXBlRXhwcmVzc2lvbkludGVyZmFjZS5jcmVhdGVTaGFwZUludGVyZmFjZSh0aGlzLnNoYXBlc0RhdGEsdGhpcy5pdGVtc0RhdGEsdGhpcy5sYXllckludGVyZmFjZSk7XHJcbiAgICB9IGVsc2UgaWYodGhpcy5kYXRhLnR5ID09PSA1KXtcclxuICAgICAgICB0aGlzLmxheWVySW50ZXJmYWNlLnRleHRJbnRlcmZhY2UgPSBUZXh0RXhwcmVzc2lvbkludGVyZmFjZSh0aGlzKTtcclxuICAgIH1cclxufVxyXG5cclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLnNldEJsZW5kTW9kZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgYmxlbmRNb2RlVmFsdWUgPSAnJztcclxuICAgIHN3aXRjaCh0aGlzLmRhdGEuYm0pe1xyXG4gICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnbXVsdGlwbHknO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIGJsZW5kTW9kZVZhbHVlID0gJ3NjcmVlbic7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnb3ZlcmxheSc7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgNDpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnZGFya2VuJztcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdsaWdodGVuJztcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSA2OlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdjb2xvci1kb2RnZSc7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgNzpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnY29sb3ItYnVybic7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgODpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnaGFyZC1saWdodCc7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgOTpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnc29mdC1saWdodCc7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMTA6XHJcbiAgICAgICAgICAgIGJsZW5kTW9kZVZhbHVlID0gJ2RpZmZlcmVuY2UnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDExOlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdleGNsdXNpb24nO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDEyOlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdodWUnO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDEzOlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdzYXR1cmF0aW9uJztcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAxNDpcclxuICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnY29sb3InO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDE1OlxyXG4gICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdsdW1pbm9zaXR5JztcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgICB2YXIgZWxlbSA9IHRoaXMuYmFzZUVsZW1lbnQgfHwgdGhpcy5sYXllckVsZW1lbnQ7XHJcblxyXG4gICAgZWxlbS5zdHlsZVsnbWl4LWJsZW5kLW1vZGUnXSA9IGJsZW5kTW9kZVZhbHVlO1xyXG59XHJcblxyXG5CYXNlRWxlbWVudC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZighdGhpcy5kYXRhLnNyKXtcclxuICAgICAgICB0aGlzLmRhdGEuc3IgPSAxO1xyXG4gICAgfVxyXG4gICAgdGhpcy5keW5hbWljUHJvcGVydGllcyA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMgfHwgW107XHJcbiAgICBpZih0aGlzLmRhdGEuZWYpe1xyXG4gICAgICAgIHRoaXMuZWZmZWN0cyA9IG5ldyBFZmZlY3RzTWFuYWdlcih0aGlzLmRhdGEsdGhpcyx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAvL3RoaXMuZWZmZWN0ID0gdGhpcy5lZmZlY3RzTWFuYWdlci5iaW5kKHRoaXMuZWZmZWN0c01hbmFnZXIpO1xyXG4gICAgfVxyXG4gICAgLy90aGlzLmVsZW1JbnRlcmZhY2UgPSBidWlsZExheWVyRXhwcmVzc2lvbkludGVyZmFjZSh0aGlzKTtcclxuICAgIHRoaXMuaGlkZGVuID0gZmFsc2U7XHJcbiAgICB0aGlzLmZpcnN0RnJhbWUgPSB0cnVlO1xyXG4gICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTtcclxuICAgIHRoaXMuX2lzUGFyZW50ID0gZmFsc2U7XHJcbiAgICB0aGlzLmN1cnJlbnRGcmFtZU51bSA9IC05OTk5OTtcclxuICAgIHRoaXMubGFzdE51bSA9IC05OTk5OTtcclxuICAgIGlmKHRoaXMuZGF0YS5rcyl7XHJcbiAgICAgICAgdGhpcy5maW5hbFRyYW5zZm9ybSA9IHtcclxuICAgICAgICAgICAgbVByb3A6IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsdGhpcy5kYXRhLmtzLDIsbnVsbCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKSxcclxuICAgICAgICAgICAgbWF0TWRmOiBmYWxzZSxcclxuICAgICAgICAgICAgb3BNZGY6IGZhbHNlLFxyXG4gICAgICAgICAgICBtYXQ6IG5ldyBNYXRyaXgoKSxcclxuICAgICAgICAgICAgb3BhY2l0eTogMVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYodGhpcy5kYXRhLmFvKXtcclxuICAgICAgICAgICAgdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC5hdXRvT3JpZW50ZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC5vO1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcDtcclxuICAgICAgICBpZih0aGlzLmRhdGEudHkgIT09IDExKXtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVFbGVtZW50cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLmRhdGEuaGFzTWFzayl7XHJcbiAgICAgICAgICAgIHRoaXMuYWRkTWFza3ModGhpcy5kYXRhKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmVsZW1NZGYgPSBmYWxzZTtcclxufTtcclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLmdldFR5cGUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuIHRoaXMudHlwZTtcclxufTtcclxuXHJcbkJhc2VFbGVtZW50LnByb3RvdHlwZS5yZXNldEhpZXJhcmNoeSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZighdGhpcy5oaWVyYXJjaHkpe1xyXG4gICAgICAgIHRoaXMuaGllcmFyY2h5ID0gW107XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLmhpZXJhcmNoeS5sZW5ndGggPSAwO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLmdldEhpZXJhcmNoeSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZighdGhpcy5oaWVyYXJjaHkpe1xyXG4gICAgICAgIHRoaXMuaGllcmFyY2h5ID0gW107XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5oaWVyYXJjaHk7XHJcbn07XHJcblxyXG5CYXNlRWxlbWVudC5wcm90b3R5cGUuc2V0SGllcmFyY2h5ID0gZnVuY3Rpb24oaGllcmFyY2h5KXtcclxuICAgIHRoaXMuaGllcmFyY2h5ID0gaGllcmFyY2h5O1xyXG59O1xyXG5cclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLmdldExheWVyU2l6ZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZih0aGlzLmRhdGEudHkgPT09IDUpe1xyXG4gICAgICAgIHJldHVybiB7dzp0aGlzLmRhdGEudGV4dERhdGEud2lkdGgsaDp0aGlzLmRhdGEudGV4dERhdGEuaGVpZ2h0fTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHJldHVybiB7dzp0aGlzLmRhdGEud2lkdGgsaDp0aGlzLmRhdGEuaGVpZ2h0fTtcclxuICAgIH1cclxufTtcclxuXHJcbkJhc2VFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24oKXtcclxuXHJcbn07XHJcblxyXG5CYXNlRWxlbWVudC5wcm90b3R5cGUuc291cmNlUmVjdEF0VGltZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHRvcDowLFxyXG4gICAgICAgIGxlZnQ6MCxcclxuICAgICAgICB3aWR0aDoxMDAsXHJcbiAgICAgICAgaGVpZ2h0OjEwMFxyXG4gICAgfVxyXG59O1xyXG5cclxuQmFzZUVsZW1lbnQucHJvdG90eXBlLm1IZWxwZXIgPSBuZXcgTWF0cml4KCk7XG5mdW5jdGlvbiBTVkdCYXNlRWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKXtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YSA9IGdsb2JhbERhdGE7XHJcbiAgICB0aGlzLmNvbXAgPSBjb21wO1xyXG4gICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIHRoaXMubWF0dGVFbGVtZW50ID0gbnVsbDtcclxuICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50ID0gbnVsbDtcclxuICAgIHRoaXMuaXNUcmFuc3BhcmVudCA9IGZhbHNlO1xyXG4gICAgdGhpcy5wYXJlbnRDb250YWluZXIgPSBwYXJlbnRDb250YWluZXI7XHJcbiAgICB0aGlzLmxheWVySWQgPSBwbGFjZWhvbGRlciA/IHBsYWNlaG9sZGVyLmxheWVySWQgOiAnbHlfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgdGhpcy5wbGFjZWhvbGRlciA9IHBsYWNlaG9sZGVyO1xyXG4gICAgdGhpcy5fc2l6ZUNoYW5nZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG59O1xyXG5cclxuY3JlYXRlRWxlbWVudChCYXNlRWxlbWVudCwgU1ZHQmFzZUVsZW1lbnQpO1xyXG5cclxuU1ZHQmFzZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICB0aGlzLnRyYW5zZm9ybWVkRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHRoaXMubWFza2VkRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgfVxyXG4gICAgdmFyIGxheWVyRWxlbWVudFBhcmVudCA9IG51bGw7XHJcbiAgICBpZih0aGlzLmRhdGEudGQpe1xyXG4gICAgICAgIGlmKHRoaXMuZGF0YS50ZCA9PSAzIHx8IHRoaXMuZGF0YS50ZCA9PSAxKXtcclxuICAgICAgICAgICAgdmFyIG1hc2tlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnbWFzaycpO1xyXG4gICAgICAgICAgICBtYXNrZXIuc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5sYXllcklkKTtcclxuICAgICAgICAgICAgbWFza2VyLnNldEF0dHJpYnV0ZSgnbWFzay10eXBlJyx0aGlzLmRhdGEudGQgPT0gMyA/ICdsdW1pbmFuY2UnOidhbHBoYScpO1xyXG4gICAgICAgICAgICBtYXNrZXIuYXBwZW5kQ2hpbGQodGhpcy5sYXllckVsZW1lbnQpO1xyXG4gICAgICAgICAgICBsYXllckVsZW1lbnRQYXJlbnQgPSBtYXNrZXI7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5kZWZzLmFwcGVuZENoaWxkKG1hc2tlcik7XHJcbiAgICAgICAgICAgIC8vLy8vLyBUaGlzIGlzIG9ubHkgZm9yIElFIGFuZCBFZGdlIHdoZW4gbWFzayBpZiBvZiB0eXBlIGFscGhhXHJcbiAgICAgICAgICAgIGlmKCFmZWF0dXJlU3VwcG9ydC5tYXNrVHlwZSAmJiB0aGlzLmRhdGEudGQgPT0gMSl7XHJcbiAgICAgICAgICAgICAgICBtYXNrZXIuc2V0QXR0cmlidXRlKCdtYXNrLXR5cGUnLCdsdW1pbmFuY2UnKTtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxJZCA9IHJhbmRvbVN0cmluZygxMCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsID0gZmlsdGVyc0ZhY3RvcnkuY3JlYXRlRmlsdGVyKGZpbElkKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5kZWZzLmFwcGVuZENoaWxkKGZpbCk7XHJcbiAgICAgICAgICAgICAgICBmaWwuYXBwZW5kQ2hpbGQoZmlsdGVyc0ZhY3RvcnkuY3JlYXRlQWxwaGFUb0x1bWluYW5jZUZpbHRlcigpKTtcclxuICAgICAgICAgICAgICAgIHZhciBnZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgICAgICAgICAgICAgZ2cuYXBwZW5kQ2hpbGQodGhpcy5sYXllckVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgbGF5ZXJFbGVtZW50UGFyZW50ID0gZ2c7XHJcbiAgICAgICAgICAgICAgICBtYXNrZXIuYXBwZW5kQ2hpbGQoZ2cpO1xyXG4gICAgICAgICAgICAgICAgZ2cuc2V0QXR0cmlidXRlKCdmaWx0ZXInLCd1cmwoJyArIGxvY2F0aW9uSHJlZiArICcjJytmaWxJZCsnKScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2UgaWYodGhpcy5kYXRhLnRkID09IDIpe1xyXG4gICAgICAgICAgICB2YXIgbWFza0dyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdtYXNrJyk7XHJcbiAgICAgICAgICAgIG1hc2tHcm91cC5zZXRBdHRyaWJ1dGUoJ2lkJyx0aGlzLmxheWVySWQpO1xyXG4gICAgICAgICAgICBtYXNrR3JvdXAuc2V0QXR0cmlidXRlKCdtYXNrLXR5cGUnLCdhbHBoYScpO1xyXG4gICAgICAgICAgICB2YXIgbWFza0dyb3VwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2cnKTtcclxuICAgICAgICAgICAgbWFza0dyb3VwLmFwcGVuZENoaWxkKG1hc2tHcm91cGVyKTtcclxuICAgICAgICAgICAgdmFyIGZpbElkID0gcmFuZG9tU3RyaW5nKDEwKTtcclxuICAgICAgICAgICAgdmFyIGZpbCA9IGZpbHRlcnNGYWN0b3J5LmNyZWF0ZUZpbHRlcihmaWxJZCk7XHJcbiAgICAgICAgICAgIC8vLy9cclxuXHJcbiAgICAgICAgICAgIHZhciBmZUNvbG9yTWF0cml4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUNvbG9yTWF0cml4Jyk7XHJcbiAgICAgICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCd0eXBlJywnbWF0cml4Jyk7XHJcbiAgICAgICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCdjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMnLCdzUkdCJyk7XHJcbiAgICAgICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCd2YWx1ZXMnLCcxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAxIDAgMCAwIDAgMCAtMSAxJyk7XHJcbiAgICAgICAgICAgIGZpbC5hcHBlbmRDaGlsZChmZUNvbG9yTWF0cml4KTtcclxuXHJcbiAgICAgICAgICAgIC8vLy9cclxuICAgICAgICAgICAgLyp2YXIgZmVDVHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlQ29tcG9uZW50VHJhbnNmZXInKTtcclxuICAgICAgICAgICAgZmVDVHIuc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgICAgICAgICAgZmlsLmFwcGVuZENoaWxkKGZlQ1RyKTtcclxuICAgICAgICAgICAgdmFyIGZlRnVuYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVGdW5jQScpO1xyXG4gICAgICAgICAgICBmZUZ1bmMuc2V0QXR0cmlidXRlKCd0eXBlJywndGFibGUnKTtcclxuICAgICAgICAgICAgZmVGdW5jLnNldEF0dHJpYnV0ZSgndGFibGVWYWx1ZXMnLCcxLjAgMC4wJyk7XHJcbiAgICAgICAgICAgIGZlQ1RyLmFwcGVuZENoaWxkKGZlRnVuYyk7Ki9cclxuICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmRlZnMuYXBwZW5kQ2hpbGQoZmlsKTtcclxuICAgICAgICAgICAgdmFyIGFscGhhUmVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywncmVjdCcpO1xyXG4gICAgICAgICAgICBhbHBoYVJlY3Quc2V0QXR0cmlidXRlKCd3aWR0aCcsdGhpcy5jb21wLmRhdGEudyk7XHJcbiAgICAgICAgICAgIGFscGhhUmVjdC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsdGhpcy5jb21wLmRhdGEuaCk7XHJcbiAgICAgICAgICAgIGFscGhhUmVjdC5zZXRBdHRyaWJ1dGUoJ3gnLCcwJyk7XHJcbiAgICAgICAgICAgIGFscGhhUmVjdC5zZXRBdHRyaWJ1dGUoJ3knLCcwJyk7XHJcbiAgICAgICAgICAgIGFscGhhUmVjdC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCcjZmZmZmZmJyk7XHJcbiAgICAgICAgICAgIGFscGhhUmVjdC5zZXRBdHRyaWJ1dGUoJ29wYWNpdHknLCcwJyk7XHJcbiAgICAgICAgICAgIG1hc2tHcm91cGVyLnNldEF0dHJpYnV0ZSgnZmlsdGVyJywndXJsKCcgKyBsb2NhdGlvbkhyZWYgKyAnIycrZmlsSWQrJyknKTtcclxuICAgICAgICAgICAgbWFza0dyb3VwZXIuYXBwZW5kQ2hpbGQoYWxwaGFSZWN0KTtcclxuICAgICAgICAgICAgbWFza0dyb3VwZXIuYXBwZW5kQ2hpbGQodGhpcy5sYXllckVsZW1lbnQpO1xyXG4gICAgICAgICAgICBsYXllckVsZW1lbnRQYXJlbnQgPSBtYXNrR3JvdXBlcjtcclxuICAgICAgICAgICAgaWYoIWZlYXR1cmVTdXBwb3J0Lm1hc2tUeXBlKXtcclxuICAgICAgICAgICAgICAgIG1hc2tHcm91cC5zZXRBdHRyaWJ1dGUoJ21hc2stdHlwZScsJ2x1bWluYW5jZScpO1xyXG4gICAgICAgICAgICAgICAgZmlsLmFwcGVuZENoaWxkKGZpbHRlcnNGYWN0b3J5LmNyZWF0ZUFscGhhVG9MdW1pbmFuY2VGaWx0ZXIoKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZ2cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2cnKTtcclxuICAgICAgICAgICAgICAgIG1hc2tHcm91cGVyLmFwcGVuZENoaWxkKGFscGhhUmVjdCk7XHJcbiAgICAgICAgICAgICAgICBnZy5hcHBlbmRDaGlsZCh0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICBsYXllckVsZW1lbnRQYXJlbnQgPSBnZztcclxuICAgICAgICAgICAgICAgIG1hc2tHcm91cGVyLmFwcGVuZENoaWxkKGdnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuZGVmcy5hcHBlbmRDaGlsZChtYXNrR3JvdXApO1xyXG4gICAgICAgIH1cclxuICAgIH1lbHNlIGlmKHRoaXMuZGF0YS5oYXNNYXNrIHx8IHRoaXMuZGF0YS50dCl7XHJcbiAgICAgICAgaWYodGhpcy5kYXRhLnR0KXtcclxuICAgICAgICAgICAgdGhpcy5tYXR0ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2cnKTtcclxuICAgICAgICAgICAgdGhpcy5tYXR0ZUVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5sYXllckVsZW1lbnQpO1xyXG4gICAgICAgICAgICBsYXllckVsZW1lbnRQYXJlbnQgPSB0aGlzLm1hdHRlRWxlbWVudDtcclxuICAgICAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IHRoaXMubWF0dGVFbGVtZW50O1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLmJhc2VFbGVtZW50ID0gdGhpcy5sYXllckVsZW1lbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgfVxyXG4gICAgaWYoKHRoaXMuZGF0YS5sbiB8fCB0aGlzLmRhdGEuY2wpICYmICh0aGlzLmRhdGEudHkgPT09IDQgfHwgdGhpcy5kYXRhLnR5ID09PSAwKSl7XHJcbiAgICAgICAgaWYodGhpcy5kYXRhLmxuKXtcclxuICAgICAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5kYXRhLmxuKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5kYXRhLmNsKXtcclxuICAgICAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsdGhpcy5kYXRhLmNsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmRhdGEudHkgPT09IDApe1xyXG4gICAgICAgICAgICB2YXIgY3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsICdjbGlwUGF0aCcpO1xyXG4gICAgICAgICAgICB2YXIgcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3BhdGgnKTtcclxuICAgICAgICAgICAgcHQuc2V0QXR0cmlidXRlKCdkJywnTTAsMCBMJyt0aGlzLmRhdGEudysnLDAnKycgTCcrdGhpcy5kYXRhLncrJywnK3RoaXMuZGF0YS5oKycgTDAsJyt0aGlzLmRhdGEuaCsneicpO1xyXG4gICAgICAgICAgICB2YXIgY2xpcElkID0gJ2NwXycrcmFuZG9tU3RyaW5nKDgpO1xyXG4gICAgICAgICAgICBjcC5zZXRBdHRyaWJ1dGUoJ2lkJyxjbGlwSWQpO1xyXG4gICAgICAgICAgICBjcC5hcHBlbmRDaGlsZChwdCk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5kZWZzLmFwcGVuZENoaWxkKGNwKTtcclxuICAgICAgICBpZih0aGlzLmNoZWNrTWFza3MoKSl7XHJcbiAgICAgICAgICAgIHZhciBjcEdyb3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICAgICAgICAgIGNwR3JvdXAuc2V0QXR0cmlidXRlKCdjbGlwLXBhdGgnLCd1cmwoJyArIGxvY2F0aW9uSHJlZiArICcjJytjbGlwSWQrJyknKTtcclxuICAgICAgICAgICAgY3BHcm91cC5hcHBlbmRDaGlsZCh0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50ID0gY3BHcm91cDtcclxuICAgICAgICAgICAgaWYobGF5ZXJFbGVtZW50UGFyZW50KXtcclxuICAgICAgICAgICAgICAgIGxheWVyRWxlbWVudFBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLnRyYW5zZm9ybWVkRWxlbWVudCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJhc2VFbGVtZW50ID0gdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsaXAtcGF0aCcsJ3VybCgnICsgbG9jYXRpb25IcmVmICsgJyMnK2NsaXBJZCsnKScpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZGF0YS5ibSAhPT0gMCl7XHJcbiAgICAgICAgdGhpcy5zZXRCbGVuZE1vZGUoKTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMubGF5ZXJFbGVtZW50ICE9PSB0aGlzLnBhcmVudENvbnRhaW5lcil7XHJcbiAgICAgICAgdGhpcy5wbGFjZWhvbGRlciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICAvKiBUb2RvIHBlcmZvcm1hbmNlIGtpbGxlclxyXG4gICAgaWYodGhpcy5kYXRhLnN5KXtcclxuICAgICAgICB2YXIgZmlsdGVySUQgPSAnc3RfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgICAgIHZhciBjID0gdGhpcy5kYXRhLnN5WzBdLmMuaztcclxuICAgICAgICB2YXIgciA9IHRoaXMuZGF0YS5zeVswXS5zLms7XHJcbiAgICAgICAgdmFyIGV4cGFuc29yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmaWx0ZXInKTtcclxuICAgICAgICBleHBhbnNvci5zZXRBdHRyaWJ1dGUoJ2lkJyxmaWx0ZXJJRCk7XHJcbiAgICAgICAgdmFyIGZlRmxvb2QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlRmxvb2QnKTtcclxuICAgICAgICB0aGlzLmZlRmxvb2QgPSBmZUZsb29kO1xyXG4gICAgICAgIGlmKCFjWzBdLmUpe1xyXG4gICAgICAgICAgICBmZUZsb29kLnNldEF0dHJpYnV0ZSgnZmxvb2QtY29sb3InLCdyZ2IoJytjWzBdKycsJytjWzFdKycsJytjWzJdKycpJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZlRmxvb2Quc2V0QXR0cmlidXRlKCdyZXN1bHQnLCdiYXNlJyk7XHJcbiAgICAgICAgZXhwYW5zb3IuYXBwZW5kQ2hpbGQoZmVGbG9vZCk7XHJcbiAgICAgICAgdmFyIGZlTW9ycGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlTW9ycGhvbG9neScpO1xyXG4gICAgICAgIGZlTW9ycGguc2V0QXR0cmlidXRlKCdvcGVyYXRvcicsJ2RpbGF0ZScpO1xyXG4gICAgICAgIGZlTW9ycGguc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgICAgICBmZU1vcnBoLnNldEF0dHJpYnV0ZSgncmVzdWx0JywnYmlnZ2VyJyk7XHJcbiAgICAgICAgdGhpcy5mZU1vcnBoID0gZmVNb3JwaDtcclxuICAgICAgICBpZighci5sZW5ndGgpe1xyXG4gICAgICAgICAgICBmZU1vcnBoLnNldEF0dHJpYnV0ZSgncmFkaXVzJyx0aGlzLmRhdGEuc3lbMF0ucy5rKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZXhwYW5zb3IuYXBwZW5kQ2hpbGQoZmVNb3JwaCk7XHJcbiAgICAgICAgdmFyIGZlQ29sb3JNYXRyaXggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlQ29sb3JNYXRyaXgnKTtcclxuICAgICAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgncmVzdWx0JywnbWFzaycpO1xyXG4gICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCdpbicsJ2JpZ2dlcicpO1xyXG4gICAgICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCd0eXBlJywnbWF0cml4Jyk7XHJcbiAgICAgICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlcycsJzAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDEgMCcpO1xyXG4gICAgICAgIGV4cGFuc29yLmFwcGVuZENoaWxkKGZlQ29sb3JNYXRyaXgpO1xyXG4gICAgICAgIHZhciBmZUNvbXBvc2l0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVDb21wb3NpdGUnKTtcclxuICAgICAgICBmZUNvbXBvc2l0ZS5zZXRBdHRyaWJ1dGUoJ3Jlc3VsdCcsJ2Ryb3AnKTtcclxuICAgICAgICBmZUNvbXBvc2l0ZS5zZXRBdHRyaWJ1dGUoJ2luJywnYmFzZScpO1xyXG4gICAgICAgIGZlQ29tcG9zaXRlLnNldEF0dHJpYnV0ZSgnaW4yJywnbWFzaycpO1xyXG4gICAgICAgIGZlQ29tcG9zaXRlLnNldEF0dHJpYnV0ZSgnb3BlcmF0b3InLCdpbicpO1xyXG4gICAgICAgIGV4cGFuc29yLmFwcGVuZENoaWxkKGZlQ29tcG9zaXRlKTtcclxuICAgICAgICB2YXIgZmVCbGVuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVCbGVuZCcpO1xyXG4gICAgICAgIGZlQmxlbmQuc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgICAgICBmZUJsZW5kLnNldEF0dHJpYnV0ZSgnaW4yJywnZHJvcCcpO1xyXG4gICAgICAgIGZlQmxlbmQuc2V0QXR0cmlidXRlKCdtb2RlJywnbm9ybWFsJyk7XHJcbiAgICAgICAgZXhwYW5zb3IuYXBwZW5kQ2hpbGQoZmVCbGVuZCk7XHJcbiAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmRlZnMuYXBwZW5kQ2hpbGQoZXhwYW5zb3IpO1xyXG4gICAgICAgIHZhciBjb250ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICAgICAgaWYodGhpcy5sYXllckVsZW1lbnQgPT09IHRoaXMucGFyZW50Q29udGFpbmVyKXtcclxuICAgICAgICAgICAgdGhpcy5sYXllckVsZW1lbnQgPSBjb250O1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb250LmFwcGVuZENoaWxkKHRoaXMubGF5ZXJFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29udC5zZXRBdHRyaWJ1dGUoJ2ZpbHRlcicsJ3VybCgjJytmaWx0ZXJJRCsnKScpO1xyXG4gICAgICAgIGlmKHRoaXMuZGF0YS50ZCl7XHJcbiAgICAgICAgICAgIGNvbnQuc2V0QXR0cmlidXRlKCdkYXRhLXRkJyx0aGlzLmRhdGEudGQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLmRhdGEudGQgPT0gMyl7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5kZWZzLmFwcGVuZENoaWxkKGNvbnQpO1xyXG4gICAgICAgIH1lbHNlIGlmKHRoaXMuZGF0YS50ZCA9PSAyKXtcclxuICAgICAgICAgICAgbWFza0dyb3VwZXIuYXBwZW5kQ2hpbGQoY29udCk7XHJcbiAgICAgICAgfWVsc2UgaWYodGhpcy5kYXRhLnRkID09IDEpe1xyXG4gICAgICAgICAgICBtYXNrZXIuYXBwZW5kQ2hpbGQoY29udCk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZGF0YS5oYXNNYXNrICYmIHRoaXMuZGF0YS50dCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1hdHRlRWxlbWVudC5hcHBlbmRDaGlsZChjb250KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZE5vZGVUb1BhcmVudChjb250KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0qL1xyXG4gICAgaWYodGhpcy5kYXRhLmVmKXtcclxuICAgICAgICB0aGlzLmVmZmVjdHNNYW5hZ2VyID0gbmV3IFNWR0VmZmVjdHModGhpcyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNoZWNrUGFyZW50aW5nKCk7XHJcbn07XHJcblxyXG5cclxuU1ZHQmFzZUVsZW1lbnQucHJvdG90eXBlLnNldEJsZW5kTW9kZSA9IEJhc2VFbGVtZW50LnByb3RvdHlwZS5zZXRCbGVuZE1vZGU7XHJcblxyXG5TVkdCYXNlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihwYXJlbnRUcmFuc2Zvcm0pe1xyXG4gICAgaWYodGhpcy5kYXRhLnR5ID09PSAzIHx8IHRoaXMuZGF0YS5oZCB8fCAhdGhpcy5pc1Zpc2libGUpe1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmxhc3ROdW0gPSB0aGlzLmN1cnJlbnRGcmFtZU51bTtcclxuICAgIHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BNZGYgPSB0aGlzLmZpcnN0RnJhbWUgfHwgdGhpcy5maW5hbFRyYW5zZm9ybS5vcC5tZGY7XHJcbiAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRoaXMuZmlyc3RGcmFtZSB8fCB0aGlzLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLm1kZjtcclxuICAgIHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BhY2l0eSA9IHRoaXMuZmluYWxUcmFuc2Zvcm0ub3AudjtcclxuXHJcbiAgICB2YXIgbWF0O1xyXG4gICAgdmFyIGZpbmFsTWF0ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tYXQ7XHJcblxyXG4gICAgaWYodGhpcy5oaWVyYXJjaHkpe1xyXG4gICAgICAgIHZhciBpID0gMCwgbGVuID0gdGhpcy5oaWVyYXJjaHkubGVuZ3RoO1xyXG4gICAgICAgIGlmKCF0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZikge1xyXG4gICAgICAgICAgICB3aGlsZShpIDwgbGVuKSB7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmhpZXJhcmNoeVtpXS5maW5hbFRyYW5zZm9ybS5tUHJvcC5tZGYpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYodGhpcy5maW5hbFRyYW5zZm9ybS5tYXRNZGYpIHtcclxuICAgICAgICAgICAgbWF0ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC52LnByb3BzO1xyXG4gICAgICAgICAgICBmaW5hbE1hdC5jbG9uZUZyb21Qcm9wcyhtYXQpO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgbWF0ID0gdGhpcy5oaWVyYXJjaHlbaV0uZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcztcclxuICAgICAgICAgICAgICAgIGZpbmFsTWF0LnRyYW5zZm9ybShtYXRbMF0sbWF0WzFdLG1hdFsyXSxtYXRbM10sbWF0WzRdLG1hdFs1XSxtYXRbNl0sbWF0WzddLG1hdFs4XSxtYXRbOV0sbWF0WzEwXSxtYXRbMTFdLG1hdFsxMl0sbWF0WzEzXSxtYXRbMTRdLG1hdFsxNV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfWVsc2UgaWYodGhpcy5pc1Zpc2libGUpe1xyXG4gICAgICAgIGZpbmFsTWF0ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC52O1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maW5hbFRyYW5zZm9ybS5tYXRNZGYgJiYgdGhpcy5sYXllckVsZW1lbnQpe1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50LnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJyxmaW5hbE1hdC50bzJkQ1NTKCkpO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maW5hbFRyYW5zZm9ybS5vcE1kZiAmJiB0aGlzLmxheWVyRWxlbWVudCl7XHJcbiAgICAgICAgaWYodGhpcy5maW5hbFRyYW5zZm9ybS5vcC52IDw9IDApIHtcclxuICAgICAgICAgICAgaWYoIXRoaXMuaXNUcmFuc3BhcmVudCAmJiB0aGlzLmdsb2JhbERhdGEucmVuZGVyQ29uZmlnLmhpZGVPblRyYW5zcGFyZW50KXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXNUcmFuc3BhcmVudCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZih0aGlzLmhpZGRlbiAmJiB0aGlzLmlzVHJhbnNwYXJlbnQpe1xyXG4gICAgICAgICAgICB0aGlzLmlzVHJhbnNwYXJlbnQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50LnNldEF0dHJpYnV0ZSgnb3BhY2l0eScsdGhpcy5maW5hbFRyYW5zZm9ybS5vcC52KTtcclxuICAgIH1cclxuXHJcbiAgICBpZih0aGlzLmRhdGEuaGFzTWFzayl7XHJcbiAgICAgICAgdGhpcy5tYXNrTWFuYWdlci5yZW5kZXJGcmFtZShmaW5hbE1hdCk7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmVmZmVjdHNNYW5hZ2VyKXtcclxuICAgICAgICB0aGlzLmVmZmVjdHNNYW5hZ2VyLnJlbmRlckZyYW1lKHRoaXMuZmlyc3RGcmFtZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5pc1Zpc2libGU7XHJcbn07XHJcblxyXG5TVkdCYXNlRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudCA9IG51bGw7XHJcbiAgICB0aGlzLnBhcmVudENvbnRhaW5lciA9IG51bGw7XHJcbiAgICBpZih0aGlzLm1hdHRlRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMubWF0dGVFbGVtZW50ID0gbnVsbDtcclxuICAgIH1cclxuICAgIGlmKHRoaXMubWFza01hbmFnZXIpIHtcclxuICAgICAgICB0aGlzLm1hc2tNYW5hZ2VyLmRlc3Ryb3koKTtcclxuICAgIH1cclxufTtcclxuXHJcblNWR0Jhc2VFbGVtZW50LnByb3RvdHlwZS5nZXRCYXNlRWxlbWVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gdGhpcy5iYXNlRWxlbWVudDtcclxufTtcclxuU1ZHQmFzZUVsZW1lbnQucHJvdG90eXBlLmFkZE1hc2tzID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB0aGlzLm1hc2tNYW5hZ2VyID0gbmV3IE1hc2tFbGVtZW50KGRhdGEsdGhpcyx0aGlzLmdsb2JhbERhdGEpO1xyXG59O1xyXG5cclxuU1ZHQmFzZUVsZW1lbnQucHJvdG90eXBlLnNldE1hdHRlID0gZnVuY3Rpb24oaWQpe1xyXG4gICAgaWYoIXRoaXMubWF0dGVFbGVtZW50KXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLm1hdHRlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJtYXNrXCIsIFwidXJsKFwiICsgbG9jYXRpb25IcmVmICsgXCIjXCIgKyBpZCArIFwiKVwiKTtcclxufTtcclxuXHJcblNWR0Jhc2VFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKCF0aGlzLmhpZGRlbil7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICB0aGlzLmhpZGRlbiA9IHRydWU7XHJcbiAgICB9XHJcbn07XHJcblxyXG5TVkdCYXNlRWxlbWVudC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZih0aGlzLmlzVmlzaWJsZSAmJiAhdGhpcy5pc1RyYW5zcGFyZW50KXtcclxuICAgICAgICB0aGlzLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgfVxyXG59O1xyXG5cbmZ1bmN0aW9uIElTaGFwZUVsZW1lbnQoZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcil7XHJcbiAgICB0aGlzLnNoYXBlcyA9IFtdO1xyXG4gICAgdGhpcy5zaGFwZXNEYXRhID0gZGF0YS5zaGFwZXM7XHJcbiAgICB0aGlzLnN0eWxlc0xpc3QgPSBbXTtcclxuICAgIHRoaXMuaXRlbXNEYXRhID0gW107XHJcbiAgICB0aGlzLnByZXZWaWV3RGF0YSA9IFtdO1xyXG4gICAgdGhpcy5zaGFwZU1vZGlmaWVycyA9IFtdO1xyXG4gICAgdGhpcy5wcm9jZXNzZWRFbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5fcGFyZW50LmNvbnN0cnVjdG9yLmNhbGwodGhpcyxkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKTtcclxufVxyXG5jcmVhdGVFbGVtZW50KFNWR0Jhc2VFbGVtZW50LCBJU2hhcGVFbGVtZW50KTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmlkZW50aXR5TWF0cml4ID0gbmV3IE1hdHJpeCgpO1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUubGNFbnVtID0ge1xyXG4gICAgJzEnOiAnYnV0dCcsXHJcbiAgICAnMic6ICdyb3VuZCcsXHJcbiAgICAnMyc6ICdzcXVhcmUnXHJcbn1cclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmxqRW51bSA9IHtcclxuICAgICcxJzogJ21pdGVyJyxcclxuICAgICcyJzogJ3JvdW5kJyxcclxuICAgICczJzogJ2J1dHQnXHJcbn1cclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLnNlYXJjaFByb2Nlc3NlZEVsZW1lbnQgPSBmdW5jdGlvbihlbGVtKXtcclxuICAgIHZhciBpID0gdGhpcy5wcm9jZXNzZWRFbGVtZW50cy5sZW5ndGg7XHJcbiAgICB3aGlsZShpKXtcclxuICAgICAgICBpIC09IDE7XHJcbiAgICAgICAgaWYodGhpcy5wcm9jZXNzZWRFbGVtZW50c1tpXS5lbGVtID09PSBlbGVtKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc2VkRWxlbWVudHNbaV0ucG9zO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiAwO1xyXG59O1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUuYWRkUHJvY2Vzc2VkRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW0sIHBvcyl7XHJcbiAgICB2YXIgaSA9IHRoaXMucHJvY2Vzc2VkRWxlbWVudHMubGVuZ3RoO1xyXG4gICAgd2hpbGUoaSl7XHJcbiAgICAgICAgaSAtPSAxO1xyXG4gICAgICAgIGlmKHRoaXMucHJvY2Vzc2VkRWxlbWVudHNbaV0uZWxlbSA9PT0gZWxlbSl7XHJcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkRWxlbWVudHNbaV0ucG9zID0gcG9zO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZihpID09PSAwKXtcclxuICAgICAgICB0aGlzLnByb2Nlc3NlZEVsZW1lbnRzLnB1c2goe1xyXG4gICAgICAgICAgICBlbGVtOiBlbGVtLFxyXG4gICAgICAgICAgICBwb3M6IHBvc1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn07XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5idWlsZEV4cHJlc3Npb25JbnRlcmZhY2UgPSBmdW5jdGlvbigpe307XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcbiAgICAvL1RPRE8gY2hlY2sgaWYgSSBjYW4gdXNlIHN5bWJvbCBzbyBpIGNhbiBzZXQgaXRzIHZpZXdCb3hcclxuICAgIHRoaXMuX3BhcmVudC5jcmVhdGVFbGVtZW50cy5jYWxsKHRoaXMpO1xyXG4gICAgdGhpcy5zZWFyY2hTaGFwZXModGhpcy5zaGFwZXNEYXRhLHRoaXMuaXRlbXNEYXRhLHRoaXMucHJldlZpZXdEYXRhLHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZHluYW1pY1Byb3BlcnRpZXMsIDAsIFtdLCB0cnVlKTtcclxuICAgIGlmKCF0aGlzLmRhdGEuaGQgfHwgdGhpcy5kYXRhLnRkKXtcclxuICAgICAgICBzdHlsZVVuc2VsZWN0YWJsZURpdih0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5zZXRHcmFkaWVudERhdGEgPSBmdW5jdGlvbihwYXRoRWxlbWVudCxhcnIsZGF0YSl7XHJcblxyXG4gICAgdmFyIGdyYWRpZW50SWQgPSAnZ3JfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgdmFyIGdmaWxsO1xyXG4gICAgaWYoYXJyLnQgPT09IDEpe1xyXG4gICAgICAgIGdmaWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdsaW5lYXJHcmFkaWVudCcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBnZmlsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywncmFkaWFsR3JhZGllbnQnKTtcclxuICAgIH1cclxuICAgIGdmaWxsLnNldEF0dHJpYnV0ZSgnaWQnLGdyYWRpZW50SWQpO1xyXG4gICAgZ2ZpbGwuc2V0QXR0cmlidXRlKCdzcHJlYWRNZXRob2QnLCdwYWQnKTtcclxuICAgIGdmaWxsLnNldEF0dHJpYnV0ZSgnZ3JhZGllbnRVbml0cycsJ3VzZXJTcGFjZU9uVXNlJyk7XHJcbiAgICB2YXIgc3RvcHMgPSBbXTtcclxuICAgIHZhciBzdG9wLCBqLCBqTGVuO1xyXG4gICAgakxlbiA9IGFyci5nLnAqNDtcclxuICAgIGZvcihqPTA7ajxqTGVuO2orPTQpe1xyXG4gICAgICAgIHN0b3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3N0b3AnKTtcclxuICAgICAgICBnZmlsbC5hcHBlbmRDaGlsZChzdG9wKTtcclxuICAgICAgICBzdG9wcy5wdXNoKHN0b3ApO1xyXG4gICAgfVxyXG4gICAgcGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCBhcnIudHkgPT09ICdnZicgPyAnZmlsbCc6J3N0cm9rZScsJ3VybCgjJytncmFkaWVudElkKycpJyk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZGVmcy5hcHBlbmRDaGlsZChnZmlsbCk7XHJcbiAgICBkYXRhLmdmID0gZ2ZpbGw7XHJcbiAgICBkYXRhLmNzdCA9IHN0b3BzO1xyXG59XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5zZXRHcmFkaWVudE9wYWNpdHkgPSBmdW5jdGlvbihhcnIsIGRhdGEsIHN0eWxlT2Ipe1xyXG4gICAgaWYoKGFyci5nLmsua1swXS5zICYmIGFyci5nLmsua1swXS5zLmxlbmd0aCA+IGFyci5nLnAqNCkgfHwgYXJyLmcuay5rLmxlbmd0aCA+IGFyci5nLnAqNCl7XHJcbiAgICAgICAgdmFyIG9wRmlsbDtcclxuICAgICAgICB2YXIgc3RvcCwgaiwgakxlbjtcclxuICAgICAgICB2YXIgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUyxcIm1hc2tcIik7XHJcbiAgICAgICAgdmFyIG1hc2tFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCAncGF0aCcpO1xyXG4gICAgICAgIG1hc2suYXBwZW5kQ2hpbGQobWFza0VsZW1lbnQpO1xyXG4gICAgICAgIHZhciBvcGFjaXR5SWQgPSAnb3BfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgICAgIHZhciBtYXNrSWQgPSAnbWtfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgICAgIG1hc2suc2V0QXR0cmlidXRlKCdpZCcsbWFza0lkKTtcclxuICAgICAgICBpZihhcnIudCA9PT0gMSl7XHJcbiAgICAgICAgICAgIG9wRmlsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnbGluZWFyR3JhZGllbnQnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBvcEZpbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3JhZGlhbEdyYWRpZW50Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG9wRmlsbC5zZXRBdHRyaWJ1dGUoJ2lkJyxvcGFjaXR5SWQpO1xyXG4gICAgICAgIG9wRmlsbC5zZXRBdHRyaWJ1dGUoJ3NwcmVhZE1ldGhvZCcsJ3BhZCcpO1xyXG4gICAgICAgIG9wRmlsbC5zZXRBdHRyaWJ1dGUoJ2dyYWRpZW50VW5pdHMnLCd1c2VyU3BhY2VPblVzZScpO1xyXG4gICAgICAgIGpMZW4gPSBhcnIuZy5rLmtbMF0ucyA/IGFyci5nLmsua1swXS5zLmxlbmd0aCA6IGFyci5nLmsuay5sZW5ndGg7XHJcbiAgICAgICAgdmFyIHN0b3BzID0gW107XHJcbiAgICAgICAgZm9yKGo9YXJyLmcucCo0O2o8akxlbjtqKz0yKXtcclxuICAgICAgICAgICAgc3RvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnc3RvcCcpO1xyXG4gICAgICAgICAgICBzdG9wLnNldEF0dHJpYnV0ZSgnc3RvcC1jb2xvcicsJ3JnYigyNTUsMjU1LDI1NSknKTtcclxuICAgICAgICAgICAgLy9zdG9wLnNldEF0dHJpYnV0ZSgnb2Zmc2V0JyxNYXRoLnJvdW5kKGFyci55W2pdWzBdKjEwMCkrJyUnKTtcclxuICAgICAgICAgICAgLy9zdG9wLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCdzdG9wLWNvbG9yOnJnYigyNTUsMjU1LDI1NSk7c3RvcC1vcGFjaXR5OicrYXJyLnlbal1bMV0pO1xyXG4gICAgICAgICAgICBvcEZpbGwuYXBwZW5kQ2hpbGQoc3RvcCk7XHJcbiAgICAgICAgICAgIHN0b3BzLnB1c2goc3RvcCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1hc2tFbGVtZW50LnNldEF0dHJpYnV0ZSggYXJyLnR5ID09PSAnZ2YnID8gJ2ZpbGwnOidzdHJva2UnLCd1cmwoIycrb3BhY2l0eUlkKycpJyk7XHJcbiAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmRlZnMuYXBwZW5kQ2hpbGQob3BGaWxsKTtcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEuZGVmcy5hcHBlbmRDaGlsZChtYXNrKTtcclxuICAgICAgICBkYXRhLm9mID0gb3BGaWxsO1xyXG4gICAgICAgIGRhdGEub3N0ID0gc3RvcHM7XHJcbiAgICAgICAgc3R5bGVPYi5tc0VsZW0gPSBtYXNrRWxlbWVudDtcclxuICAgICAgICByZXR1cm4gbWFza0lkO1xyXG4gICAgfVxyXG59O1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU3R5bGVFbGVtZW50ID0gZnVuY3Rpb24oZGF0YSwgbGV2ZWwsIGR5bmFtaWNQcm9wZXJ0aWVzKXtcclxuICAgIHZhciBlbGVtZW50RGF0YSA9IHtcclxuICAgIH07XHJcbiAgICB2YXIgc3R5bGVPYiA9IHtcclxuICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgIHR5cGU6IGRhdGEudHksXHJcbiAgICAgICAgZDogJycsXHJcbiAgICAgICAgbGQ6ICcnLFxyXG4gICAgICAgIGx2bDogbGV2ZWwsXHJcbiAgICAgICAgbWRmOiBmYWxzZSxcclxuICAgICAgICBjbG9zZWQ6IGZhbHNlXHJcbiAgICB9O1xyXG4gICAgdmFyIHBhdGhFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCBcInBhdGhcIik7XHJcbiAgICBlbGVtZW50RGF0YS5vID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcyxkYXRhLm8sMCwwLjAxLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIGlmKGRhdGEudHkgPT0gJ3N0JyB8fCBkYXRhLnR5ID09ICdncycpIHtcclxuICAgICAgICBwYXRoRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1saW5lY2FwJywgdGhpcy5sY0VudW1bZGF0YS5sY10gfHwgJ3JvdW5kJyk7XHJcbiAgICAgICAgLy8vL3BhdGhFbGVtZW50LnN0eWxlLnN0cm9rZUxpbmVjYXAgPSB0aGlzLmxjRW51bVtkYXRhLmxjXSB8fCAncm91bmQnO1xyXG4gICAgICAgIHBhdGhFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3Ryb2tlLWxpbmVqb2luJyx0aGlzLmxqRW51bVtkYXRhLmxqXSB8fCAncm91bmQnKTtcclxuICAgICAgICAvLy8vcGF0aEVsZW1lbnQuc3R5bGUuc3Ryb2tlTGluZWpvaW4gPSB0aGlzLmxqRW51bVtkYXRhLmxqXSB8fCAncm91bmQnO1xyXG4gICAgICAgIHBhdGhFbGVtZW50LnNldEF0dHJpYnV0ZSgnZmlsbC1vcGFjaXR5JywnMCcpO1xyXG4gICAgICAgIC8vLy9wYXRoRWxlbWVudC5zdHlsZS5maWxsT3BhY2l0eSA9IDA7XHJcbiAgICAgICAgaWYoZGF0YS5saiA9PSAxKSB7XHJcbiAgICAgICAgICAgIHBhdGhFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3Ryb2tlLW1pdGVybGltaXQnLGRhdGEubWwpO1xyXG4gICAgICAgICAgICAvLy8vcGF0aEVsZW1lbnQuc3R5bGUuc3Ryb2tlTWl0ZXJsaW1pdCA9IGRhdGEubWw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBlbGVtZW50RGF0YS53ID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcyxkYXRhLncsMCxudWxsLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICBpZihkYXRhLmQpe1xyXG4gICAgICAgICAgICB2YXIgZCA9IFByb3BlcnR5RmFjdG9yeS5nZXREYXNoUHJvcCh0aGlzLGRhdGEuZCwnc3ZnJyxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIGlmKCFkLmspe1xyXG4gICAgICAgICAgICAgICAgcGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHJva2UtZGFzaGFycmF5JywgZC5kYXNoYXJyYXkpO1xyXG4gICAgICAgICAgICAgICAgLy8vL3BhdGhFbGVtZW50LnN0eWxlLnN0cm9rZURhc2hhcnJheSA9IGQuZGFzaGFycmF5O1xyXG4gICAgICAgICAgICAgICAgcGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHJva2UtZGFzaG9mZnNldCcsIGQuZGFzaG9mZnNldCk7XHJcbiAgICAgICAgICAgICAgICAvLy8vcGF0aEVsZW1lbnQuc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IGQuZGFzaG9mZnNldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbGVtZW50RGF0YS5kID0gZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgaWYoZGF0YS50eSA9PSAnZmwnIHx8IGRhdGEudHkgPT0gJ3N0Jyl7XHJcbiAgICAgICAgZWxlbWVudERhdGEuYyA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsZGF0YS5jLDEsMjU1LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZWxlbWVudERhdGEuZyA9IFByb3BlcnR5RmFjdG9yeS5nZXRHcmFkaWVudFByb3AodGhpcyxkYXRhLmcsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIGlmKGRhdGEudCA9PSAyKXtcclxuICAgICAgICAgICAgZWxlbWVudERhdGEuaCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsZGF0YS5oLDAsMC4wMSxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIGVsZW1lbnREYXRhLmEgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLGRhdGEuYSwwLGRlZ1RvUmFkcyxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsZW1lbnREYXRhLnMgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLGRhdGEucywxLG51bGwsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIGVsZW1lbnREYXRhLmUgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLGRhdGEuZSwxLG51bGwsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgIHRoaXMuc2V0R3JhZGllbnREYXRhKHBhdGhFbGVtZW50LGRhdGEsZWxlbWVudERhdGEsIHN0eWxlT2IpO1xyXG4gICAgICAgIHZhciBtYXNrSWQgPSB0aGlzLnNldEdyYWRpZW50T3BhY2l0eShkYXRhLGVsZW1lbnREYXRhLCBzdHlsZU9iKTtcclxuICAgICAgICBpZihtYXNrSWQpe1xyXG4gICAgICAgICAgICBwYXRoRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21hc2snLCd1cmwoIycrbWFza0lkKycpJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxlbWVudERhdGEuZWxlbSA9IHBhdGhFbGVtZW50O1xyXG4gICAgLy9jb250YWluZXIuYXBwZW5kQ2hpbGQocGF0aEVsZW1lbnQpO1xyXG4gICAgaWYoZGF0YS5yID09PSAyKSB7XHJcbiAgICAgICAgcGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCdmaWxsLXJ1bGUnLCAnZXZlbm9kZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKGRhdGEubG4pe1xyXG4gICAgICAgIHBhdGhFbGVtZW50LnNldEF0dHJpYnV0ZSgnaWQnLGRhdGEubG4pO1xyXG4gICAgfVxyXG4gICAgaWYoZGF0YS5jbCl7XHJcbiAgICAgICAgcGF0aEVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsZGF0YS5jbCk7XHJcbiAgICB9XHJcbiAgICBzdHlsZU9iLnBFbGVtID0gcGF0aEVsZW1lbnQ7XHJcbiAgICB0aGlzLnN0eWxlc0xpc3QucHVzaChzdHlsZU9iKTtcclxuICAgIGVsZW1lbnREYXRhLnN0eWxlID0gc3R5bGVPYjtcclxuICAgIHJldHVybiBlbGVtZW50RGF0YTtcclxufVxyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlR3JvdXBFbGVtZW50ID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgdmFyIGVsZW1lbnREYXRhID0ge1xyXG4gICAgICAgIGl0OiBbXSxcclxuICAgICAgICBwcmV2Vmlld0RhdGE6IFtdXHJcbiAgICB9O1xyXG4gICAgdmFyIGcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2cnKTtcclxuICAgIGVsZW1lbnREYXRhLmdyID0gZztcclxuICAgIGlmKGRhdGEubG4pe1xyXG4gICAgICAgIGVsZW1lbnREYXRhLmdyLnNldEF0dHJpYnV0ZSgnaWQnLGRhdGEubG4pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVsZW1lbnREYXRhO1xyXG59XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVUcmFuc2Zvcm1FbGVtZW50ID0gZnVuY3Rpb24oZGF0YSwgZHluYW1pY1Byb3BlcnRpZXMpIHtcclxuICAgIHZhciBlbGVtZW50RGF0YSA9IHtcclxuICAgICAgICB0cmFuc2Zvcm0gOiB7XHJcbiAgICAgICAgICAgIG9wOiBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLGRhdGEubywwLDAuMDEsZHluYW1pY1Byb3BlcnRpZXMpLFxyXG4gICAgICAgICAgICBtUHJvcHM6IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsZGF0YSwyLG51bGwsZHluYW1pY1Byb3BlcnRpZXMpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbGVtZW50czogW11cclxuICAgIH07XHJcbiAgICByZXR1cm4gZWxlbWVudERhdGE7XHJcbn1cclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYXBlRWxlbWVudCA9IGZ1bmN0aW9uKGRhdGEsIG93blRyYW5zZm9ybWVycywgbGV2ZWwsIGR5bmFtaWNQcm9wZXJ0aWVzKSB7XHJcbiAgICB2YXIgZWxlbWVudERhdGEgPSB7XHJcbiAgICAgICAgZWxlbWVudHMgOiBbXSxcclxuICAgICAgICBjYWNoZXM6W10sXHJcbiAgICAgICAgc3R5bGVzIDogW10sXHJcbiAgICAgICAgdHJhbnNmb3JtZXJzOiBvd25UcmFuc2Zvcm1lcnMsXHJcbiAgICAgICAgbFN0cjogJydcclxuICAgIH07XHJcbiAgICB2YXIgdHkgPSA0O1xyXG4gICAgaWYoZGF0YS50eSA9PSAncmMnKXtcclxuICAgICAgICB0eSA9IDU7XHJcbiAgICB9ZWxzZSBpZihkYXRhLnR5ID09ICdlbCcpe1xyXG4gICAgICAgIHR5ID0gNjtcclxuICAgIH1lbHNlIGlmKGRhdGEudHkgPT0gJ3NyJyl7XHJcbiAgICAgICAgdHkgPSA3O1xyXG4gICAgfVxyXG4gICAgZWxlbWVudERhdGEuc2ggPSBTaGFwZVByb3BlcnR5RmFjdG9yeS5nZXRTaGFwZVByb3AodGhpcyxkYXRhLHR5LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIGVsZW1lbnREYXRhLmx2bCA9IGxldmVsO1xyXG4gICAgdGhpcy5zaGFwZXMucHVzaChlbGVtZW50RGF0YS5zaCk7XHJcbiAgICB0aGlzLmFkZFNoYXBlVG9Nb2RpZmllcnMoZWxlbWVudERhdGEpO1xyXG4gICAgcmV0dXJuIGVsZW1lbnREYXRhO1xyXG59XHJcblxyXG52YXIgY29udCA9IDA7XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5zZXRFbGVtZW50U3R5bGVzID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBqLCBqTGVuID0gdGhpcy5zdHlsZXNMaXN0Lmxlbmd0aDtcclxuICAgIHZhciBhcnIgPSBbXTtcclxuICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgIGlmKCF0aGlzLnN0eWxlc0xpc3Rbal0uY2xvc2VkKXtcclxuICAgICAgICAgICAgYXJyLnB1c2godGhpcy5zdHlsZXNMaXN0W2pdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXJyO1xyXG59XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZWxvYWRTaGFwZXMgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5maXJzdEZyYW1lID0gdHJ1ZTtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLml0ZW1zRGF0YS5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMucHJldlZpZXdEYXRhW2ldID0gdGhpcy5pdGVtc0RhdGFbaV07XHJcbiAgICB9XHJcbiAgICB0aGlzLnNlYXJjaFNoYXBlcyh0aGlzLnNoYXBlc0RhdGEsdGhpcy5pdGVtc0RhdGEsdGhpcy5wcmV2Vmlld0RhdGEsdGhpcy5sYXllckVsZW1lbnQsdGhpcy5keW5hbWljUHJvcGVydGllcywgMCwgW10sIHRydWUpO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLmdldFZhbHVlKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnJlbmRlck1vZGlmaWVycygpO1xyXG59XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5zZWFyY2hTaGFwZXMgPSBmdW5jdGlvbihhcnIsaXRlbXNEYXRhLHByZXZWaWV3RGF0YSxjb250YWluZXIsZHluYW1pY1Byb3BlcnRpZXMsIGxldmVsLCB0cmFuc2Zvcm1lcnMsIHJlbmRlcil7XHJcbiAgICB2YXIgb3duVHJhbnNmb3JtZXJzID0gW10uY29uY2F0KHRyYW5zZm9ybWVycyk7XHJcbiAgICB2YXIgaSwgbGVuID0gYXJyLmxlbmd0aCAtIDE7XHJcbiAgICB2YXIgaiwgakxlbjtcclxuICAgIHZhciBvd25TdHlsZXMgPSBbXSwgb3duTW9kaWZpZXJzID0gW10sIHN0eWxlT2IsIGN1cnJlbnRUcmFuc2Zvcm0sIG1vZGlmaWVyLCBwcm9jZXNzZWRQb3M7XHJcbiAgICBmb3IoaT1sZW47aT49MDtpLT0xKXtcclxuICAgICAgICBwcm9jZXNzZWRQb3MgPSB0aGlzLnNlYXJjaFByb2Nlc3NlZEVsZW1lbnQoYXJyW2ldKTtcclxuICAgICAgICBpZighcHJvY2Vzc2VkUG9zKXtcclxuICAgICAgICAgICAgYXJyW2ldLl9yZW5kZXIgPSByZW5kZXI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gcHJldlZpZXdEYXRhW3Byb2Nlc3NlZFBvcyAtIDFdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhcnJbaV0udHkgPT0gJ2ZsJyB8fCBhcnJbaV0udHkgPT0gJ3N0JyB8fCBhcnJbaV0udHkgPT0gJ2dmJyB8fCBhcnJbaV0udHkgPT0gJ2dzJyl7XHJcbiAgICAgICAgICAgIGlmKCFwcm9jZXNzZWRQb3Mpe1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gdGhpcy5jcmVhdGVTdHlsZUVsZW1lbnQoYXJyW2ldLCBsZXZlbCwgZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldLnN0eWxlLmNsb3NlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGFycltpXS5fcmVuZGVyKXtcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChpdGVtc0RhdGFbaV0uZWxlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3duU3R5bGVzLnB1c2goaXRlbXNEYXRhW2ldLnN0eWxlKTtcclxuICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ2dyJyl7XHJcbiAgICAgICAgICAgIGlmKCFwcm9jZXNzZWRQb3Mpe1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gdGhpcy5jcmVhdGVHcm91cEVsZW1lbnQoYXJyW2ldKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGpMZW4gPSBpdGVtc0RhdGFbaV0uaXQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldLnByZXZWaWV3RGF0YVtqXSA9IGl0ZW1zRGF0YVtpXS5pdFtqXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaFNoYXBlcyhhcnJbaV0uaXQsaXRlbXNEYXRhW2ldLml0LGl0ZW1zRGF0YVtpXS5wcmV2Vmlld0RhdGEsaXRlbXNEYXRhW2ldLmdyLGR5bmFtaWNQcm9wZXJ0aWVzLCBsZXZlbCArIDEsIG93blRyYW5zZm9ybWVycywgcmVuZGVyKTtcclxuICAgICAgICAgICAgaWYoYXJyW2ldLl9yZW5kZXIpe1xyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1zRGF0YVtpXS5ncik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ3RyJyl7XHJcbiAgICAgICAgICAgIGlmKCFwcm9jZXNzZWRQb3Mpe1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gdGhpcy5jcmVhdGVUcmFuc2Zvcm1FbGVtZW50KGFycltpXSwgZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnJlbnRUcmFuc2Zvcm0gPSBpdGVtc0RhdGFbaV0udHJhbnNmb3JtO1xyXG4gICAgICAgICAgICBvd25UcmFuc2Zvcm1lcnMucHVzaChjdXJyZW50VHJhbnNmb3JtKTtcclxuICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ3NoJyB8fCBhcnJbaV0udHkgPT0gJ3JjJyB8fCBhcnJbaV0udHkgPT0gJ2VsJyB8fCBhcnJbaV0udHkgPT0gJ3NyJyl7XHJcbiAgICAgICAgICAgIGlmKCFwcm9jZXNzZWRQb3Mpe1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gdGhpcy5jcmVhdGVTaGFwZUVsZW1lbnQoYXJyW2ldLCBvd25UcmFuc2Zvcm1lcnMsIGxldmVsLCBkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaXRlbXNEYXRhW2ldLmVsZW1lbnRzID0gdGhpcy5zZXRFbGVtZW50U3R5bGVzKCk7XHJcblxyXG4gICAgICAgIH1lbHNlIGlmKGFycltpXS50eSA9PSAndG0nIHx8IGFycltpXS50eSA9PSAncmQnIHx8IGFycltpXS50eSA9PSAnbXMnKXtcclxuICAgICAgICAgICAgaWYoIXByb2Nlc3NlZFBvcyl7XHJcbiAgICAgICAgICAgICAgICBtb2RpZmllciA9IFNoYXBlTW9kaWZpZXJzLmdldE1vZGlmaWVyKGFycltpXS50eSk7XHJcbiAgICAgICAgICAgICAgICBtb2RpZmllci5pbml0KHRoaXMsYXJyW2ldLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIGl0ZW1zRGF0YVtpXSA9IG1vZGlmaWVyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaGFwZU1vZGlmaWVycy5wdXNoKG1vZGlmaWVyKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG1vZGlmaWVyID0gaXRlbXNEYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXIuY2xvc2VkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3duTW9kaWZpZXJzLnB1c2gobW9kaWZpZXIpO1xyXG4gICAgICAgIH1lbHNlIGlmKGFycltpXS50eSA9PSAncnAnKXtcclxuICAgICAgICAgICAgaWYoIXByb2Nlc3NlZFBvcyl7XHJcbiAgICAgICAgICAgICAgICBtb2RpZmllciA9IFNoYXBlTW9kaWZpZXJzLmdldE1vZGlmaWVyKGFycltpXS50eSk7XHJcbiAgICAgICAgICAgICAgICBpdGVtc0RhdGFbaV0gPSBtb2RpZmllcjtcclxuICAgICAgICAgICAgICAgIG1vZGlmaWVyLmluaXQodGhpcyxhcnIsaSxpdGVtc0RhdGEsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaGFwZU1vZGlmaWVycy5wdXNoKG1vZGlmaWVyKTtcclxuICAgICAgICAgICAgICAgIHJlbmRlciA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIG1vZGlmaWVyID0gaXRlbXNEYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXIuY2xvc2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvd25Nb2RpZmllcnMucHVzaChtb2RpZmllcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYWRkUHJvY2Vzc2VkRWxlbWVudChhcnJbaV0sIGkgKyAxKTtcclxuICAgIH1cclxuICAgIGxlbiA9IG93blN0eWxlcy5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIG93blN0eWxlc1tpXS5jbG9zZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgbGVuID0gb3duTW9kaWZpZXJzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgb3duTW9kaWZpZXJzW2ldLmNsb3NlZCA9IHRydWU7XHJcbiAgICB9XHJcbn07XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5hZGRTaGFwZVRvTW9kaWZpZXJzID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuc2hhcGVNb2RpZmllcnMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLnNoYXBlTW9kaWZpZXJzW2ldLmFkZFNoYXBlKGRhdGEpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyTW9kaWZpZXJzID0gZnVuY3Rpb24oKSB7XHJcbiAgICBpZighdGhpcy5zaGFwZU1vZGlmaWVycy5sZW5ndGgpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLnNoYXBlcy5sZW5ndGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMuc2hhcGVzW2ldLnJlc2V0KCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGxlbiA9IHRoaXMuc2hhcGVNb2RpZmllcnMubGVuZ3RoO1xyXG5cclxuICAgIGZvcihpPWxlbi0xO2k+PTA7aS09MSl7XHJcbiAgICAgICAgdGhpcy5zaGFwZU1vZGlmaWVyc1tpXS5wcm9jZXNzU2hhcGVzKHRoaXMuZmlyc3RGcmFtZSk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICAvL3RoaXMucmVsb2FkU2hhcGVzKCk7XHJcbiAgICB2YXIgcmVuZGVyUGFyZW50ID0gdGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcyxwYXJlbnRNYXRyaXgpO1xyXG4gICAgaWYocmVuZGVyUGFyZW50PT09ZmFsc2Upe1xyXG4gICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuaGlkZGVuKXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgICB0aGlzLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJNb2RpZmllcnMoKTtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLnN0eWxlc0xpc3QubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLnN0eWxlc0xpc3RbaV0uZCA9ICcnO1xyXG4gICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5tZGYgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMucmVuZGVyU2hhcGUodGhpcy5zaGFwZXNEYXRhLHRoaXMuaXRlbXNEYXRhLCBudWxsKTtcclxuXHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICBpZiAodGhpcy5zdHlsZXNMaXN0W2ldLmxkID09PSAnMCcpIHtcclxuICAgICAgICAgICAgdGhpcy5zdHlsZXNMaXN0W2ldLmxkID0gJzEnO1xyXG4gICAgICAgICAgICB0aGlzLnN0eWxlc0xpc3RbaV0ucEVsZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgICAgIC8vdGhpcy5zdHlsZXNMaXN0W2ldLnBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLnN0eWxlc0xpc3RbaV0ucEVsZW0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5zdHlsZXNMaXN0W2ldLm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zdHlsZXNMaXN0W2ldLnBFbGVtLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuc3R5bGVzTGlzdFtpXS5kKTtcclxuICAgICAgICAgICAgaWYodGhpcy5zdHlsZXNMaXN0W2ldLm1zRWxlbSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0eWxlc0xpc3RbaV0ubXNFbGVtLnNldEF0dHJpYnV0ZSgnZCcsIHRoaXMuc3R5bGVzTGlzdFtpXS5kKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICh0aGlzLmZpcnN0RnJhbWUpIHtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxufTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbigpe1xyXG4gICAgaWYoIXRoaXMuaGlkZGVuKXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSB0aGlzLnN0eWxlc0xpc3QubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPWxlbi0xO2k+PTA7aS09MSl7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc3R5bGVzTGlzdFtpXS5sZCAhPT0gJzAnKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5sZCA9ICcwJztcclxuICAgICAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5wRWxlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zdHlsZXNMaXN0W2ldLnBFbGVtLnBhcmVudE5vZGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5wYXJlbnQgPSB0aGlzLnN0eWxlc0xpc3RbaV0ucEVsZW0ucGFyZW50Tm9kZTtcclxuICAgICAgICAgICAgICAgICAgICAvL3RoaXMuc3R5bGVzTGlzdFtpXS5wRWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuc3R5bGVzTGlzdFtpXS5wRWxlbSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5oaWRkZW4gPSB0cnVlO1xyXG4gICAgfVxyXG59O1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyU2hhcGUgPSBmdW5jdGlvbihpdGVtcyxkYXRhLCBjb250YWluZXIpe1xyXG4gICAgdmFyIGksIGxlbiA9IGl0ZW1zLmxlbmd0aCAtIDE7XHJcbiAgICB2YXIgdHk7XHJcbiAgICBmb3IoaT1sZW47aT49MDtpLT0xKXtcclxuICAgICAgICB0eSA9IGl0ZW1zW2ldLnR5O1xyXG4gICAgICAgIGlmKHR5ID09ICd0cicpe1xyXG4gICAgICAgICAgICBpZih0aGlzLmZpcnN0RnJhbWUgfHwgZGF0YVtpXS50cmFuc2Zvcm0ub3AubWRmICYmIGNvbnRhaW5lcil7XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKCdvcGFjaXR5JyxkYXRhW2ldLnRyYW5zZm9ybS5vcC52KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLmZpcnN0RnJhbWUgfHwgZGF0YVtpXS50cmFuc2Zvcm0ubVByb3BzLm1kZiAmJiBjb250YWluZXIpe1xyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJyxkYXRhW2ldLnRyYW5zZm9ybS5tUHJvcHMudi50bzJkQ1NTKCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2UgaWYodHkgPT0gJ3NoJyB8fCB0eSA9PSAnZWwnIHx8IHR5ID09ICdyYycgfHwgdHkgPT0gJ3NyJyl7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyUGF0aChpdGVtc1tpXSxkYXRhW2ldKTtcclxuICAgICAgICB9ZWxzZSBpZih0eSA9PSAnZmwnKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJGaWxsKGl0ZW1zW2ldLGRhdGFbaV0pO1xyXG4gICAgICAgIH1lbHNlIGlmKHR5ID09ICdnZicpe1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlckdyYWRpZW50KGl0ZW1zW2ldLGRhdGFbaV0pO1xyXG4gICAgICAgIH1lbHNlIGlmKHR5ID09ICdncycpe1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlckdyYWRpZW50KGl0ZW1zW2ldLGRhdGFbaV0pO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlclN0cm9rZShpdGVtc1tpXSxkYXRhW2ldKTtcclxuICAgICAgICB9ZWxzZSBpZih0eSA9PSAnc3QnKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJTdHJva2UoaXRlbXNbaV0sZGF0YVtpXSk7XHJcbiAgICAgICAgfWVsc2UgaWYodHkgPT0gJ2dyJyl7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyU2hhcGUoaXRlbXNbaV0uaXQsZGF0YVtpXS5pdCwgZGF0YVtpXS5ncik7XHJcbiAgICAgICAgfWVsc2UgaWYodHkgPT0gJ3RtJyl7XHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmJ1aWxkU2hhcGVTdHJpbmcgPSBmdW5jdGlvbihwYXRoTm9kZXMsIGxlbmd0aCwgY2xvc2VkLCBtYXQpIHtcclxuICAgIHZhciBpLCBzaGFwZVN0cmluZyA9ICcnO1xyXG4gICAgZm9yKGkgPSAxOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcclxuICAgICAgICBpZiAoaSA9PT0gMSkge1xyXG4gICAgICAgICAgICBzaGFwZVN0cmluZyArPSBcIiBNXCIgKyBtYXQuYXBwbHlUb1BvaW50U3RyaW5naWZpZWQocGF0aE5vZGVzLnZbMF1bMF0sIHBhdGhOb2Rlcy52WzBdWzFdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2hhcGVTdHJpbmcgKz0gXCIgQ1wiICsgbWF0LmFwcGx5VG9Qb2ludFN0cmluZ2lmaWVkKHBhdGhOb2Rlcy5vW2kgLSAxXVswXSwgcGF0aE5vZGVzLm9baSAtIDFdWzFdKSArIFwiIFwiICsgbWF0LmFwcGx5VG9Qb2ludFN0cmluZ2lmaWVkKHBhdGhOb2Rlcy5pW2ldWzBdLCBwYXRoTm9kZXMuaVtpXVsxXSkgKyBcIiBcIiArIG1hdC5hcHBseVRvUG9pbnRTdHJpbmdpZmllZChwYXRoTm9kZXMudltpXVswXSwgcGF0aE5vZGVzLnZbaV1bMV0pO1xyXG4gICAgfVxyXG4gICAgaWYgKGxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgIHNoYXBlU3RyaW5nICs9IFwiIE1cIiArIG1hdC5hcHBseVRvUG9pbnRTdHJpbmdpZmllZChwYXRoTm9kZXMudlswXVswXSwgcGF0aE5vZGVzLnZbMF1bMV0pO1xyXG4gICAgfVxyXG4gICAgaWYgKGNsb3NlZCAmJiBsZW5ndGgpIHtcclxuICAgICAgICBzaGFwZVN0cmluZyArPSBcIiBDXCIgKyBtYXQuYXBwbHlUb1BvaW50U3RyaW5naWZpZWQocGF0aE5vZGVzLm9baSAtIDFdWzBdLCBwYXRoTm9kZXMub1tpIC0gMV1bMV0pICsgXCIgXCIgKyBtYXQuYXBwbHlUb1BvaW50U3RyaW5naWZpZWQocGF0aE5vZGVzLmlbMF1bMF0sIHBhdGhOb2Rlcy5pWzBdWzFdKSArIFwiIFwiICsgbWF0LmFwcGx5VG9Qb2ludFN0cmluZ2lmaWVkKHBhdGhOb2Rlcy52WzBdWzBdLCBwYXRoTm9kZXMudlswXVsxXSk7XHJcbiAgICAgICAgc2hhcGVTdHJpbmcgKz0gJ3onO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNoYXBlU3RyaW5nO1xyXG59O1xyXG5cclxuSVNoYXBlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyUGF0aCA9IGZ1bmN0aW9uKHBhdGhEYXRhLGl0ZW1EYXRhKXtcclxuICAgIHZhciBsZW4sIGksIGosIGpMZW4scGF0aFN0cmluZ1RyYW5zZm9ybWVkLHJlZHJhdyxwYXRoTm9kZXMsbCwgbExlbiA9IGl0ZW1EYXRhLmVsZW1lbnRzLmxlbmd0aDtcclxuICAgIHZhciBsdmwgPSBpdGVtRGF0YS5sdmw7XHJcbiAgICBpZighcGF0aERhdGEuX3JlbmRlcil7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yKGw9MDtsPGxMZW47bCs9MSl7XHJcbiAgICAgICAgaWYoaXRlbURhdGEuZWxlbWVudHNbbF0uZGF0YS5fcmVuZGVyKXtcclxuICAgICAgICAgICAgcmVkcmF3ID0gaXRlbURhdGEuc2gubWRmIHx8IHRoaXMuZmlyc3RGcmFtZTtcclxuICAgICAgICAgICAgcGF0aFN0cmluZ1RyYW5zZm9ybWVkID0gJ00wIDAnO1xyXG4gICAgICAgICAgICB2YXIgcGF0aHMgPSBpdGVtRGF0YS5zaC5wYXRocztcclxuICAgICAgICAgICAgakxlbiA9IHBhdGhzLl9sZW5ndGg7XHJcbiAgICAgICAgICAgIGlmKGl0ZW1EYXRhLmVsZW1lbnRzW2xdLmx2bCA8IGx2bCl7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWF0ID0gdGhpcy5tSGVscGVyLnJlc2V0KCksIHByb3BzO1xyXG4gICAgICAgICAgICAgICAgdmFyIGl0ZXJhdGlvbnMgPSBsdmwgLSBpdGVtRGF0YS5lbGVtZW50c1tsXS5sdmw7XHJcbiAgICAgICAgICAgICAgICB2YXIgayA9IGl0ZW1EYXRhLnRyYW5zZm9ybWVycy5sZW5ndGgtMTtcclxuICAgICAgICAgICAgICAgIHdoaWxlKGl0ZXJhdGlvbnMgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVkcmF3ID0gaXRlbURhdGEudHJhbnNmb3JtZXJzW2tdLm1Qcm9wcy5tZGYgfHwgcmVkcmF3O1xyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzID0gaXRlbURhdGEudHJhbnNmb3JtZXJzW2tdLm1Qcm9wcy52LnByb3BzO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hdC50cmFuc2Zvcm0ocHJvcHNbMF0scHJvcHNbMV0scHJvcHNbMl0scHJvcHNbM10scHJvcHNbNF0scHJvcHNbNV0scHJvcHNbNl0scHJvcHNbN10scHJvcHNbOF0scHJvcHNbOV0scHJvcHNbMTBdLHByb3BzWzExXSxwcm9wc1sxMl0scHJvcHNbMTNdLHByb3BzWzE0XSxwcm9wc1sxNV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZXJhdGlvbnMgLS07XHJcbiAgICAgICAgICAgICAgICAgICAgayAtLTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHJlZHJhdyl7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhOb2RlcyA9IHBhdGhzLnNoYXBlc1tqXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYocGF0aE5vZGVzICYmIHBhdGhOb2Rlcy5fbGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZCArPSB0aGlzLmJ1aWxkU2hhcGVTdHJpbmcocGF0aE5vZGVzLCBwYXRoTm9kZXMuX2xlbmd0aCwgcGF0aE5vZGVzLmMsIG1hdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbURhdGEuY2FjaGVzW2xdID0gcGF0aFN0cmluZ1RyYW5zZm9ybWVkO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBwYXRoU3RyaW5nVHJhbnNmb3JtZWQgPSBpdGVtRGF0YS5jYWNoZXNbbF07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZihyZWRyYXcpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoTm9kZXMgPSBwYXRocy5zaGFwZXNbal07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHBhdGhOb2RlcyAmJiBwYXRoTm9kZXMuX2xlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoU3RyaW5nVHJhbnNmb3JtZWQgKz0gdGhpcy5idWlsZFNoYXBlU3RyaW5nKHBhdGhOb2RlcywgcGF0aE5vZGVzLl9sZW5ndGgsIHBhdGhOb2Rlcy5jLCB0aGlzLmlkZW50aXR5TWF0cml4KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpdGVtRGF0YS5jYWNoZXNbbF0gPSBwYXRoU3RyaW5nVHJhbnNmb3JtZWQ7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZCA9IGl0ZW1EYXRhLmNhY2hlc1tsXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpdGVtRGF0YS5lbGVtZW50c1tsXS5kICs9IHBhdGhTdHJpbmdUcmFuc2Zvcm1lZDtcclxuICAgICAgICAgICAgaXRlbURhdGEuZWxlbWVudHNbbF0ubWRmID0gcmVkcmF3IHx8IGl0ZW1EYXRhLmVsZW1lbnRzW2xdLm1kZjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpdGVtRGF0YS5lbGVtZW50c1tsXS5tZGYgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZpbGwgPSBmdW5jdGlvbihzdHlsZURhdGEsaXRlbURhdGEpe1xyXG4gICAgdmFyIHN0eWxlRWxlbSA9IGl0ZW1EYXRhLnN0eWxlO1xyXG5cclxuICAgIGlmKGl0ZW1EYXRhLmMubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgc3R5bGVFbGVtLnBFbGVtLnNldEF0dHJpYnV0ZSgnZmlsbCcsJ3JnYignK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlswXSkrJywnK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlsxXSkrJywnK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlsyXSkrJyknKTtcclxuICAgICAgICAvLy8vc3R5bGVFbGVtLnBFbGVtLnN0eWxlLmZpbGwgPSAncmdiKCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzBdKSsnLCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzFdKSsnLCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzJdKSsnKSc7XHJcbiAgICB9XHJcbiAgICBpZihpdGVtRGF0YS5vLm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHN0eWxlRWxlbS5wRWxlbS5zZXRBdHRyaWJ1dGUoJ2ZpbGwtb3BhY2l0eScsaXRlbURhdGEuby52KTtcclxuICAgIH1cclxufTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlckdyYWRpZW50ID0gZnVuY3Rpb24oc3R5bGVEYXRhLGl0ZW1EYXRhKXtcclxuICAgIHZhciBnZmlsbCA9IGl0ZW1EYXRhLmdmO1xyXG4gICAgdmFyIG9wRmlsbCA9IGl0ZW1EYXRhLm9mO1xyXG4gICAgdmFyIHB0MSA9IGl0ZW1EYXRhLnMudixwdDIgPSBpdGVtRGF0YS5lLnY7XHJcblxyXG4gICAgaWYoaXRlbURhdGEuby5tZGYgfHwgdGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB2YXIgYXR0ciA9IHN0eWxlRGF0YS50eSA9PT0gJ2dmJyA/ICdmaWxsLW9wYWNpdHknOidzdHJva2Utb3BhY2l0eSc7XHJcbiAgICAgICAgaXRlbURhdGEuZWxlbS5zZXRBdHRyaWJ1dGUoYXR0cixpdGVtRGF0YS5vLnYpO1xyXG4gICAgfVxyXG4gICAgLy9jbGlwcGVkRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RyYW5zZm9ybScsJ21hdHJpeCgxLDAsMCwxLC0xMDAsMCknKTtcclxuICAgIGlmKGl0ZW1EYXRhLnMubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgdmFyIGF0dHIxID0gc3R5bGVEYXRhLnQgPT09IDEgPyAneDEnOidjeCc7XHJcbiAgICAgICAgdmFyIGF0dHIyID0gYXR0cjEgPT09ICd4MScgPyAneTEnOidjeSc7XHJcbiAgICAgICAgZ2ZpbGwuc2V0QXR0cmlidXRlKGF0dHIxLHB0MVswXSk7XHJcbiAgICAgICAgZ2ZpbGwuc2V0QXR0cmlidXRlKGF0dHIyLHB0MVsxXSk7XHJcbiAgICAgICAgaWYob3BGaWxsKXtcclxuICAgICAgICAgICAgb3BGaWxsLnNldEF0dHJpYnV0ZShhdHRyMSxwdDFbMF0pO1xyXG4gICAgICAgICAgICBvcEZpbGwuc2V0QXR0cmlidXRlKGF0dHIyLHB0MVsxXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdmFyIHN0b3BzLCBpLCBsZW4sIHN0b3A7XHJcbiAgICBpZihpdGVtRGF0YS5nLmNtZGYgfHwgdGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICBzdG9wcyA9IGl0ZW1EYXRhLmNzdDtcclxuICAgICAgICB2YXIgY1ZhbHVlcyA9IGl0ZW1EYXRhLmcuYztcclxuICAgICAgICBsZW4gPSBzdG9wcy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgc3RvcCA9IHN0b3BzW2ldO1xyXG4gICAgICAgICAgICBzdG9wLnNldEF0dHJpYnV0ZSgnb2Zmc2V0JyxjVmFsdWVzW2kqNF0rJyUnKTtcclxuICAgICAgICAgICAgc3RvcC5zZXRBdHRyaWJ1dGUoJ3N0b3AtY29sb3InLCdyZ2IoJytjVmFsdWVzW2kqNCsxXSsnLCcrY1ZhbHVlc1tpKjQrMl0rJywnK2NWYWx1ZXNbaSo0KzNdKycpJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYob3BGaWxsICYmIChpdGVtRGF0YS5nLm9tZGYgfHwgdGhpcy5maXJzdEZyYW1lKSl7XHJcbiAgICAgICAgc3RvcHMgPSBpdGVtRGF0YS5vc3Q7XHJcbiAgICAgICAgdmFyIG9WYWx1ZXMgPSBpdGVtRGF0YS5nLm87XHJcbiAgICAgICAgbGVuID0gc3RvcHMubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHN0b3AgPSBzdG9wc1tpXTtcclxuICAgICAgICAgICAgc3RvcC5zZXRBdHRyaWJ1dGUoJ29mZnNldCcsb1ZhbHVlc1tpKjJdKyclJyk7XHJcbiAgICAgICAgICAgIHN0b3Auc2V0QXR0cmlidXRlKCdzdG9wLW9wYWNpdHknLG9WYWx1ZXNbaSoyKzFdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZihzdHlsZURhdGEudCA9PT0gMSl7XHJcbiAgICAgICAgaWYoaXRlbURhdGEuZS5tZGYgIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgICAgIGdmaWxsLnNldEF0dHJpYnV0ZSgneDInLHB0MlswXSk7XHJcbiAgICAgICAgICAgIGdmaWxsLnNldEF0dHJpYnV0ZSgneTInLHB0MlsxXSk7XHJcbiAgICAgICAgICAgIGlmKG9wRmlsbCl7XHJcbiAgICAgICAgICAgICAgICBvcEZpbGwuc2V0QXR0cmlidXRlKCd4MicscHQyWzBdKTtcclxuICAgICAgICAgICAgICAgIG9wRmlsbC5zZXRBdHRyaWJ1dGUoJ3kyJyxwdDJbMV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgcmFkO1xyXG4gICAgICAgIGlmKGl0ZW1EYXRhLnMubWRmIHx8IGl0ZW1EYXRhLmUubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgICAgIHJhZCA9IE1hdGguc3FydChNYXRoLnBvdyhwdDFbMF0tcHQyWzBdLDIpK01hdGgucG93KHB0MVsxXS1wdDJbMV0sMikpO1xyXG4gICAgICAgICAgICBnZmlsbC5zZXRBdHRyaWJ1dGUoJ3InLHJhZCk7XHJcbiAgICAgICAgICAgIGlmKG9wRmlsbCl7XHJcbiAgICAgICAgICAgICAgICBvcEZpbGwuc2V0QXR0cmlidXRlKCdyJyxyYWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGl0ZW1EYXRhLmUubWRmIHx8IGl0ZW1EYXRhLmgubWRmIHx8IGl0ZW1EYXRhLmEubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgICAgIGlmKCFyYWQpe1xyXG4gICAgICAgICAgICAgICAgcmFkID0gTWF0aC5zcXJ0KE1hdGgucG93KHB0MVswXS1wdDJbMF0sMikrTWF0aC5wb3cocHQxWzFdLXB0MlsxXSwyKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGFuZyA9IE1hdGguYXRhbjIocHQyWzFdLXB0MVsxXSwgcHQyWzBdLXB0MVswXSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgcGVyY2VudCA9IGl0ZW1EYXRhLmgudiA+PSAxID8gMC45OSA6IGl0ZW1EYXRhLmgudiA8PSAtMSA/IC0wLjk5Oml0ZW1EYXRhLmgudjtcclxuICAgICAgICAgICAgdmFyIGRpc3QgPSByYWQqcGVyY2VudDtcclxuICAgICAgICAgICAgdmFyIHggPSBNYXRoLmNvcyhhbmcgKyBpdGVtRGF0YS5hLnYpKmRpc3QgKyBwdDFbMF07XHJcbiAgICAgICAgICAgIHZhciB5ID0gTWF0aC5zaW4oYW5nICsgaXRlbURhdGEuYS52KSpkaXN0ICsgcHQxWzFdO1xyXG4gICAgICAgICAgICBnZmlsbC5zZXRBdHRyaWJ1dGUoJ2Z4Jyx4KTtcclxuICAgICAgICAgICAgZ2ZpbGwuc2V0QXR0cmlidXRlKCdmeScseSk7XHJcbiAgICAgICAgICAgIGlmKG9wRmlsbCl7XHJcbiAgICAgICAgICAgICAgICBvcEZpbGwuc2V0QXR0cmlidXRlKCdmeCcseCk7XHJcbiAgICAgICAgICAgICAgICBvcEZpbGwuc2V0QXR0cmlidXRlKCdmeScseSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy9nZmlsbC5zZXRBdHRyaWJ1dGUoJ2Z5JywnMjAwJyk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5JU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJTdHJva2UgPSBmdW5jdGlvbihzdHlsZURhdGEsaXRlbURhdGEpe1xyXG4gICAgdmFyIHN0eWxlRWxlbSA9IGl0ZW1EYXRhLnN0eWxlO1xyXG4gICAgLy9UT0RPIGZpeCBkYXNoZXNcclxuICAgIHZhciBkID0gaXRlbURhdGEuZDtcclxuICAgIHZhciBkYXNoYXJyYXksZGFzaG9mZnNldDtcclxuICAgIGlmKGQgJiYgZC5rICYmIChkLm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpKXtcclxuICAgICAgICBzdHlsZUVsZW0ucEVsZW0uc2V0QXR0cmlidXRlKCdzdHJva2UtZGFzaGFycmF5JywgZC5kYXNoYXJyYXkpO1xyXG4gICAgICAgIC8vLy9zdHlsZUVsZW0ucEVsZW0uc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gZC5kYXNoYXJyYXk7XHJcbiAgICAgICAgc3R5bGVFbGVtLnBFbGVtLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLWRhc2hvZmZzZXQnLCBkLmRhc2hvZmZzZXQpO1xyXG4gICAgICAgIC8vLy9zdHlsZUVsZW0ucEVsZW0uc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IGQuZGFzaG9mZnNldDtcclxuICAgIH1cclxuICAgIGlmKGl0ZW1EYXRhLmMgJiYgKGl0ZW1EYXRhLmMubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSkpe1xyXG4gICAgICAgIHN0eWxlRWxlbS5wRWxlbS5zZXRBdHRyaWJ1dGUoJ3N0cm9rZScsJ3JnYignK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlswXSkrJywnK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlsxXSkrJywnK2JtX2Zsb29yKGl0ZW1EYXRhLmMudlsyXSkrJyknKTtcclxuICAgICAgICAvLy8vc3R5bGVFbGVtLnBFbGVtLnN0eWxlLnN0cm9rZSA9ICdyZ2IoJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMF0pKycsJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMV0pKycsJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMl0pKycpJztcclxuICAgIH1cclxuICAgIGlmKGl0ZW1EYXRhLm8ubWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgc3R5bGVFbGVtLnBFbGVtLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLW9wYWNpdHknLGl0ZW1EYXRhLm8udik7XHJcbiAgICB9XHJcbiAgICBpZihpdGVtRGF0YS53Lm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHN0eWxlRWxlbS5wRWxlbS5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsaXRlbURhdGEudy52KTtcclxuICAgICAgICBpZihzdHlsZUVsZW0ubXNFbGVtKXtcclxuICAgICAgICAgICAgc3R5bGVFbGVtLm1zRWxlbS5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsaXRlbURhdGEudy52KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8vL3N0eWxlRWxlbS5wRWxlbS5zdHlsZS5zdHJva2VXaWR0aCA9IGl0ZW1EYXRhLncudjtcclxuICAgIH1cclxufTtcclxuXHJcbklTaGFwZUVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5fcGFyZW50LmRlc3Ryb3kuY2FsbCh0aGlzLl9wYXJlbnQpO1xyXG4gICAgdGhpcy5zaGFwZURhdGEgPSBudWxsO1xyXG4gICAgdGhpcy5pdGVtc0RhdGEgPSBudWxsO1xyXG4gICAgdGhpcy5wYXJlbnRDb250YWluZXIgPSBudWxsO1xyXG4gICAgdGhpcy5wbGFjZWhvbGRlciA9IG51bGw7XHJcbn07XHJcblxuZnVuY3Rpb24gSVRleHRFbGVtZW50KGRhdGEsIGFuaW1hdGlvbkl0ZW0scGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEpe1xyXG59XHJcbklUZXh0RWxlbWVudC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmxldHRlcnNDaGFuZ2VkRmxhZyA9IHRydWU7XHJcbiAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gdGhpcy5keW5hbWljUHJvcGVydGllcyB8fCBbXTtcclxuICAgIHRoaXMudGV4dEFuaW1hdG9yID0gbmV3IFRleHRBbmltYXRvclByb3BlcnR5KHRoaXMuZGF0YS50LCB0aGlzLnJlbmRlclR5cGUsIHRoaXMpO1xyXG4gICAgdGhpcy50ZXh0UHJvcGVydHkgPSBuZXcgVGV4dFByb3BlcnR5KHRoaXMsIHRoaXMuZGF0YS50LCB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIHRoaXMuX3BhcmVudC5pbml0LmNhbGwodGhpcyk7XHJcbiAgICB0aGlzLnRleHRBbmltYXRvci5zZWFyY2hQcm9wZXJ0aWVzKHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG59O1xyXG5cclxuSVRleHRFbGVtZW50LnByb3RvdHlwZS5wcmVwYXJlRnJhbWUgPSBmdW5jdGlvbihudW0pIHtcclxuICAgIHRoaXMuX3BhcmVudC5wcmVwYXJlRnJhbWUuY2FsbCh0aGlzLCBudW0pO1xyXG4gICAgaWYodGhpcy50ZXh0UHJvcGVydHkubWRmIHx8IHRoaXMudGV4dFByb3BlcnR5LmZpcnN0RnJhbWUpIHtcclxuICAgICAgICB0aGlzLmJ1aWxkTmV3VGV4dCgpO1xyXG4gICAgICAgIHRoaXMudGV4dFByb3BlcnR5LmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuSVRleHRFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVQYXRoU2hhcGUgPSBmdW5jdGlvbihtYXRyaXhIZWxwZXIsIHNoYXBlcykge1xyXG4gICAgdmFyIGosakxlbiA9IHNoYXBlcy5sZW5ndGg7XHJcbiAgICB2YXIgaywga0xlbiwgcGF0aE5vZGVzO1xyXG4gICAgdmFyIHNoYXBlU3RyID0gJyc7XHJcbiAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICBwYXRoTm9kZXMgPSBzaGFwZXNbal0ua3MuaztcclxuICAgICAgICBzaGFwZVN0ciArPSB0aGlzLmJ1aWxkU2hhcGVTdHJpbmcocGF0aE5vZGVzLCBwYXRoTm9kZXMuaS5sZW5ndGgsIHRydWUsIG1hdHJpeEhlbHBlcik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2hhcGVTdHI7XHJcbn07XHJcblxyXG5JVGV4dEVsZW1lbnQucHJvdG90eXBlLnVwZGF0ZURvY3VtZW50RGF0YSA9IGZ1bmN0aW9uKG5ld0RhdGEsIGluZGV4KSB7XHJcbiAgICB0aGlzLnRleHRQcm9wZXJ0eS51cGRhdGVEb2N1bWVudERhdGEobmV3RGF0YSwgaW5kZXgpO1xyXG59XHJcblxyXG5JVGV4dEVsZW1lbnQucHJvdG90eXBlLmFwcGx5VGV4dFByb3BlcnRpZXNUb01hdHJpeCA9IGZ1bmN0aW9uKGRvY3VtZW50RGF0YSwgbWF0cml4SGVscGVyLCBsaW5lTnVtYmVyLCB4UG9zLCB5UG9zKSB7XHJcbiAgICBpZihkb2N1bWVudERhdGEucHMpe1xyXG4gICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoZG9jdW1lbnREYXRhLnBzWzBdLGRvY3VtZW50RGF0YS5wc1sxXSArIGRvY3VtZW50RGF0YS5hc2NlbnQsMCk7XHJcbiAgICB9XHJcbiAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKDAsLWRvY3VtZW50RGF0YS5scywwKTtcclxuICAgIHN3aXRjaChkb2N1bWVudERhdGEuail7XHJcbiAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBtYXRyaXhIZWxwZXIudHJhbnNsYXRlKGRvY3VtZW50RGF0YS5qdXN0aWZ5T2Zmc2V0ICsgKGRvY3VtZW50RGF0YS5ib3hXaWR0aCAtIGRvY3VtZW50RGF0YS5saW5lV2lkdGhzW2xpbmVOdW1iZXJdKSwwLDApO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIG1hdHJpeEhlbHBlci50cmFuc2xhdGUoZG9jdW1lbnREYXRhLmp1c3RpZnlPZmZzZXQgKyAoZG9jdW1lbnREYXRhLmJveFdpZHRoIC0gZG9jdW1lbnREYXRhLmxpbmVXaWR0aHNbbGluZU51bWJlcl0gKS8yLDAsMCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgbWF0cml4SGVscGVyLnRyYW5zbGF0ZSh4UG9zLCB5UG9zLCAwKTtcclxufVxyXG5cclxuSVRleHRFbGVtZW50LnByb3RvdHlwZS5idWlsZENvbG9yID0gZnVuY3Rpb24oY29sb3JEYXRhKSB7XHJcbiAgICByZXR1cm4gJ3JnYignICsgTWF0aC5yb3VuZChjb2xvckRhdGFbMF0qMjU1KSArICcsJyArIE1hdGgucm91bmQoY29sb3JEYXRhWzFdKjI1NSkgKyAnLCcgKyBNYXRoLnJvdW5kKGNvbG9yRGF0YVsyXSoyNTUpICsgJyknO1xyXG59XHJcblxyXG5JVGV4dEVsZW1lbnQucHJvdG90eXBlLmJ1aWxkU2hhcGVTdHJpbmcgPSBJU2hhcGVFbGVtZW50LnByb3RvdHlwZS5idWlsZFNoYXBlU3RyaW5nO1xyXG5cclxuSVRleHRFbGVtZW50LnByb3RvdHlwZS5lbXB0eVByb3AgPSBuZXcgTGV0dGVyUHJvcHMoKTtcclxuXHJcbklUZXh0RWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLl9wYXJlbnQuZGVzdHJveS5jYWxsKHRoaXMuX3BhcmVudCk7XHJcbn07XG5mdW5jdGlvbiBTVkdUZXh0RWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKXtcclxuICAgIHRoaXMudGV4dFNwYW5zID0gW107XHJcbiAgICB0aGlzLnJlbmRlclR5cGUgPSAnc3ZnJztcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcik7XHJcbn1cclxuY3JlYXRlRWxlbWVudChTVkdCYXNlRWxlbWVudCwgU1ZHVGV4dEVsZW1lbnQpO1xyXG5cclxuZXh0ZW5kUHJvdG90eXBlKElUZXh0RWxlbWVudCwgU1ZHVGV4dEVsZW1lbnQpO1xyXG5cclxuU1ZHVGV4dEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuXHJcbiAgICB0aGlzLl9wYXJlbnQuY3JlYXRlRWxlbWVudHMuY2FsbCh0aGlzKTtcclxuXHJcblxyXG4gICAgaWYodGhpcy5kYXRhLmxuKXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2lkJyx0aGlzLmRhdGEubG4pO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5kYXRhLmNsKXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJyx0aGlzLmRhdGEuY2wpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGF0YS5zaW5nbGVTaGFwZSAmJiAhdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmNoYXJzKSB7XHJcbiAgICAgICAgdGhpcy50ZXh0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCd0ZXh0Jyk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5TVkdUZXh0RWxlbWVudC5wcm90b3R5cGUuYnVpbGROZXdUZXh0ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBpLCBsZW47XHJcblxyXG4gICAgdmFyIGRvY3VtZW50RGF0YSA9IHRoaXMudGV4dFByb3BlcnR5LmN1cnJlbnREYXRhO1xyXG4gICAgdGhpcy5yZW5kZXJlZExldHRlcnMgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6ZG9jdW1lbnREYXRhID8gZG9jdW1lbnREYXRhLmwubGVuZ3RoIDogMH0pO1xyXG4gICAgaWYoZG9jdW1lbnREYXRhLmZjKSB7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdmaWxsJywgdGhpcy5idWlsZENvbG9yKGRvY3VtZW50RGF0YS5mYykpO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdmaWxsJywgJ3JnYmEoMCwwLDAsMCknKTtcclxuICAgIH1cclxuICAgIGlmKGRvY3VtZW50RGF0YS5zYyl7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHJva2UnLCB0aGlzLmJ1aWxkQ29sb3IoZG9jdW1lbnREYXRhLnNjKSk7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLCBkb2N1bWVudERhdGEuc3cpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdmb250LXNpemUnLCBkb2N1bWVudERhdGEucyk7XHJcbiAgICB2YXIgZm9udERhdGEgPSB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuZ2V0Rm9udEJ5TmFtZShkb2N1bWVudERhdGEuZik7XHJcbiAgICBpZihmb250RGF0YS5mQ2xhc3Mpe1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgnY2xhc3MnLGZvbnREYXRhLmZDbGFzcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgnZm9udC1mYW1pbHknLCBmb250RGF0YS5mRmFtaWx5KTtcclxuICAgICAgICB2YXIgZldlaWdodCA9IGRvY3VtZW50RGF0YS5mV2VpZ2h0LCBmU3R5bGUgPSBkb2N1bWVudERhdGEuZlN0eWxlO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgnZm9udC1zdHlsZScsIGZTdHlsZSk7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdmb250LXdlaWdodCcsIGZXZWlnaHQpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBsZXR0ZXJzID0gZG9jdW1lbnREYXRhLmwgfHwgW107XHJcbiAgICB2YXIgdXNlc0dseXBocyA9IHRoaXMuZ2xvYmFsRGF0YS5mb250TWFuYWdlci5jaGFycztcclxuICAgIGxlbiA9IGxldHRlcnMubGVuZ3RoO1xyXG4gICAgaWYoIWxlbil7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdmFyIHRTcGFuO1xyXG4gICAgdmFyIG1hdHJpeEhlbHBlciA9IHRoaXMubUhlbHBlcjtcclxuICAgIHZhciBzaGFwZXMsIHNoYXBlU3RyID0gJycsIHNpbmdsZVNoYXBlID0gdGhpcy5kYXRhLnNpbmdsZVNoYXBlO1xyXG4gICAgdmFyIHhQb3MgPSAwLCB5UG9zID0gMCwgZmlyc3RMaW5lID0gdHJ1ZTtcclxuICAgIHZhciB0cmFja2luZ09mZnNldCA9IGRvY3VtZW50RGF0YS50ci8xMDAwKmRvY3VtZW50RGF0YS5zO1xyXG4gICAgaWYoc2luZ2xlU2hhcGUgJiYgIXVzZXNHbHlwaHMpIHtcclxuICAgICAgICB2YXIgdEVsZW1lbnQgPSB0aGlzLnRleHRDb250YWluZXI7XHJcbiAgICAgICAgdmFyIGp1c3RpZnkgPSAnJztcclxuICAgICAgICBzd2l0Y2goZG9jdW1lbnREYXRhLmopIHtcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAganVzdGlmeSA9ICdlbmQnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIGp1c3RpZnkgPSAnbWlkZGxlJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5ID0gJ3N0YXJ0JztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RleHQtYW5jaG9yJyxqdXN0aWZ5KTtcclxuICAgICAgICB0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2xldHRlci1zcGFjaW5nJyx0cmFja2luZ09mZnNldCk7XHJcbiAgICAgICAgdmFyIHRleHRDb250ZW50ID0gZG9jdW1lbnREYXRhLnQuc3BsaXQoU3RyaW5nLmZyb21DaGFyQ29kZSgxMykpO1xyXG4gICAgICAgIGxlbiA9IHRleHRDb250ZW50Lmxlbmd0aDtcclxuICAgICAgICB2YXIgeVBvcyA9IGRvY3VtZW50RGF0YS5wcyA/IGRvY3VtZW50RGF0YS5wc1sxXSArIGRvY3VtZW50RGF0YS5hc2NlbnQgOiAwO1xyXG4gICAgICAgIGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgdFNwYW4gPSB0aGlzLnRleHRTcGFuc1tpXSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3RzcGFuJyk7XHJcbiAgICAgICAgICAgIHRTcGFuLnRleHRDb250ZW50ID0gdGV4dENvbnRlbnRbaV07XHJcbiAgICAgICAgICAgIHRTcGFuLnNldEF0dHJpYnV0ZSgneCcsIDApO1xyXG4gICAgICAgICAgICB0U3Bhbi5zZXRBdHRyaWJ1dGUoJ3knLCB5UG9zKTtcclxuICAgICAgICAgICAgdFNwYW4uc3R5bGUuZGlzcGxheSA9ICdpbmhlcml0JztcclxuICAgICAgICAgICAgdEVsZW1lbnQuYXBwZW5kQ2hpbGQodFNwYW4pO1xyXG4gICAgICAgICAgICB0aGlzLnRleHRTcGFuc1tpXSA9IHRTcGFuO1xyXG4gICAgICAgICAgICB5UG9zICs9IGRvY3VtZW50RGF0YS5saDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuYXBwZW5kQ2hpbGQodEVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgY2FjaGVkU3BhbnNMZW5ndGggPSB0aGlzLnRleHRTcGFucy5sZW5ndGg7XHJcbiAgICAgICAgdmFyIHNoYXBlRGF0YSwgY2hhckRhdGE7XHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgIGlmKCF1c2VzR2x5cGhzIHx8ICFzaW5nbGVTaGFwZSB8fCBpID09PSAwKXtcclxuICAgICAgICAgICAgICAgIHRTcGFuID0gY2FjaGVkU3BhbnNMZW5ndGggPiBpID8gdGhpcy50ZXh0U3BhbnNbaV0gOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsdXNlc0dseXBocz8ncGF0aCc6J3RleHQnKTtcclxuICAgICAgICAgICAgICAgIGlmIChjYWNoZWRTcGFuc0xlbmd0aCA8PSBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdFNwYW4uc2V0QXR0cmlidXRlKCdzdHJva2UtbGluZWNhcCcsICdidXR0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdFNwYW4uc2V0QXR0cmlidXRlKCdzdHJva2UtbGluZWpvaW4nLCdyb3VuZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRTcGFuLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLW1pdGVybGltaXQnLCc0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0U3BhbnNbaV0gPSB0U3BhbjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5hcHBlbmRDaGlsZCh0U3Bhbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0U3Bhbi5zdHlsZS5kaXNwbGF5ID0gJ2luaGVyaXQnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBtYXRyaXhIZWxwZXIucmVzZXQoKTtcclxuICAgICAgICAgICAgaWYodXNlc0dseXBocykge1xyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnNjYWxlKGRvY3VtZW50RGF0YS5zIC8gMTAwLCBkb2N1bWVudERhdGEucyAvIDEwMCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2luZ2xlU2hhcGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZihsZXR0ZXJzW2ldLm4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeFBvcyA9IC10cmFja2luZ09mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeVBvcyArPSBkb2N1bWVudERhdGEueU9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeVBvcyArPSBmaXJzdExpbmUgPyAxIDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RMaW5lID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlUZXh0UHJvcGVydGllc1RvTWF0cml4KGRvY3VtZW50RGF0YSwgbWF0cml4SGVscGVyLCBsZXR0ZXJzW2ldLmxpbmUsIHhQb3MsIHlQb3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIHhQb3MgKz0gbGV0dGVyc1tpXS5sIHx8IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgLy94UG9zICs9IGxldHRlcnNbaV0udmFsID09PSAnICcgPyAwIDogdHJhY2tpbmdPZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgeFBvcyArPSB0cmFja2luZ09mZnNldDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNoYXJEYXRhID0gdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmdldENoYXJEYXRhKGRvY3VtZW50RGF0YS50LmNoYXJBdChpKSwgZm9udERhdGEuZlN0eWxlLCB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuZ2V0Rm9udEJ5TmFtZShkb2N1bWVudERhdGEuZikuZkZhbWlseSk7XHJcbiAgICAgICAgICAgICAgICBzaGFwZURhdGEgPSBjaGFyRGF0YSAmJiBjaGFyRGF0YS5kYXRhIHx8IHt9O1xyXG4gICAgICAgICAgICAgICAgc2hhcGVzID0gc2hhcGVEYXRhLnNoYXBlcyA/IHNoYXBlRGF0YS5zaGFwZXNbMF0uaXQgOiBbXTtcclxuICAgICAgICAgICAgICAgIGlmKCFzaW5nbGVTaGFwZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdFNwYW4uc2V0QXR0cmlidXRlKCdkJyx0aGlzLmNyZWF0ZVBhdGhTaGFwZShtYXRyaXhIZWxwZXIsc2hhcGVzKSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHNoYXBlU3RyICs9IHRoaXMuY3JlYXRlUGF0aFNoYXBlKG1hdHJpeEhlbHBlcixzaGFwZXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdFNwYW4udGV4dENvbnRlbnQgPSBsZXR0ZXJzW2ldLnZhbDtcclxuICAgICAgICAgICAgICAgIHRTcGFuLnNldEF0dHJpYnV0ZU5TKFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsIFwieG1sOnNwYWNlXCIsXCJwcmVzZXJ2ZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc2luZ2xlU2hhcGUpIHtcclxuICAgICAgICAgICAgdFNwYW4uc2V0QXR0cmlidXRlKCdkJyxzaGFwZVN0cik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgd2hpbGUgKGkgPCB0aGlzLnRleHRTcGFucy5sZW5ndGgpe1xyXG4gICAgICAgIHRoaXMudGV4dFNwYW5zW2ldLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgaSArPSAxO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0aGlzLl9zaXplQ2hhbmdlZCA9IHRydWU7XHJcbn1cclxuXHJcblNWR1RleHRFbGVtZW50LnByb3RvdHlwZS5zb3VyY2VSZWN0QXRUaW1lID0gZnVuY3Rpb24odGltZSl7XHJcbiAgICB0aGlzLnByZXBhcmVGcmFtZSh0aGlzLmNvbXAucmVuZGVyZWRGcmFtZSAtIHRoaXMuZGF0YS5zdCk7XHJcbiAgICB0aGlzLnJlbmRlckxldHRlcnMoKTtcclxuICAgIGlmKHRoaXMuX3NpemVDaGFuZ2VkKXtcclxuICAgICAgICB0aGlzLl9zaXplQ2hhbmdlZCA9IGZhbHNlO1xyXG4gICAgICAgIHZhciB0ZXh0Qm94ID0gdGhpcy5sYXllckVsZW1lbnQuZ2V0QkJveCgpO1xyXG4gICAgICAgIHRoaXMuYmJveCA9IHtcclxuICAgICAgICAgICAgdG9wOiB0ZXh0Qm94LnksXHJcbiAgICAgICAgICAgIGxlZnQ6IHRleHRCb3gueCxcclxuICAgICAgICAgICAgd2lkdGg6IHRleHRCb3gud2lkdGgsXHJcbiAgICAgICAgICAgIGhlaWdodDogdGV4dEJveC5oZWlnaHRcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5iYm94O1xyXG59XHJcblxyXG5TVkdUZXh0RWxlbWVudC5wcm90b3R5cGUucmVuZGVyTGV0dGVycyA9IGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgaWYoIXRoaXMuZGF0YS5zaW5nbGVTaGFwZSl7XHJcbiAgICAgICAgdGhpcy50ZXh0QW5pbWF0b3IuZ2V0TWVhc3VyZXModGhpcy50ZXh0UHJvcGVydHkuY3VycmVudERhdGEsIHRoaXMubGV0dGVyc0NoYW5nZWRGbGFnKTtcclxuICAgICAgICBpZih0aGlzLmxldHRlcnNDaGFuZ2VkRmxhZyB8fCB0aGlzLnRleHRBbmltYXRvci5sZXR0ZXJzQ2hhbmdlZEZsYWcpe1xyXG4gICAgICAgICAgICB0aGlzLl9zaXplQ2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHZhciAgaSxsZW47XHJcbiAgICAgICAgICAgIHZhciByZW5kZXJlZExldHRlcnMgPSB0aGlzLnRleHRBbmltYXRvci5yZW5kZXJlZExldHRlcnM7XHJcblxyXG4gICAgICAgICAgICB2YXIgbGV0dGVycyA9IHRoaXMudGV4dFByb3BlcnR5LmN1cnJlbnREYXRhLmw7XHJcblxyXG4gICAgICAgICAgICBsZW4gPSBsZXR0ZXJzLmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIHJlbmRlcmVkTGV0dGVyLCB0ZXh0U3BhbjtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGxldHRlcnNbaV0ubil7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlZExldHRlciA9IHJlbmRlcmVkTGV0dGVyc1tpXTtcclxuICAgICAgICAgICAgICAgIHRleHRTcGFuID0gdGhpcy50ZXh0U3BhbnNbaV07XHJcbiAgICAgICAgICAgICAgICBpZihyZW5kZXJlZExldHRlci5tZGYubSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHRTcGFuLnNldEF0dHJpYnV0ZSgndHJhbnNmb3JtJyxyZW5kZXJlZExldHRlci5tKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyLm1kZi5vKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dFNwYW4uc2V0QXR0cmlidXRlKCdvcGFjaXR5JyxyZW5kZXJlZExldHRlci5vKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyLm1kZi5zdyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dFNwYW4uc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLHJlbmRlcmVkTGV0dGVyLnN3KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyLm1kZi5zYyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dFNwYW4uc2V0QXR0cmlidXRlKCdzdHJva2UnLHJlbmRlcmVkTGV0dGVyLnNjKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyLm1kZi5mYyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dFNwYW4uc2V0QXR0cmlidXRlKCdmaWxsJyxyZW5kZXJlZExldHRlci5mYyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblNWR1RleHRFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcblxyXG4gICAgdmFyIHJlbmRlclBhcmVudCA9IHRoaXMuX3BhcmVudC5yZW5kZXJGcmFtZS5jYWxsKHRoaXMscGFyZW50TWF0cml4KTtcclxuICAgIGlmKHJlbmRlclBhcmVudD09PWZhbHNlKXtcclxuICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmhpZGRlbil7XHJcbiAgICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmZpcnN0RnJhbWUpIHtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMucmVuZGVyTGV0dGVycygpO1xyXG59XG5mdW5jdGlvbiBTVkdUaW50RmlsdGVyKGZpbHRlciwgZmlsdGVyTWFuYWdlcil7XHJcbiAgICB0aGlzLmZpbHRlck1hbmFnZXIgPSBmaWx0ZXJNYW5hZ2VyO1xyXG4gICAgdmFyIGZlQ29sb3JNYXRyaXggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlQ29sb3JNYXRyaXgnKTtcclxuICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCd0eXBlJywnbWF0cml4Jyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgnY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzJywnbGluZWFyUkdCJyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgndmFsdWVzJywnMC4zMzMzIDAuMzMzMyAwLjMzMzMgMCAwIDAuMzMzMyAwLjMzMzMgMC4zMzMzIDAgMCAwLjMzMzMgMC4zMzMzIDAuMzMzMyAwIDAgMCAwIDAgMSAwJyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgncmVzdWx0JywnZjEnKTtcclxuICAgIGZpbHRlci5hcHBlbmRDaGlsZChmZUNvbG9yTWF0cml4KTtcclxuICAgIGZlQ29sb3JNYXRyaXggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlQ29sb3JNYXRyaXgnKTtcclxuICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCd0eXBlJywnbWF0cml4Jyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgnY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzJywnc1JHQicpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlcycsJzEgMCAwIDAgMCAwIDEgMCAwIDAgMCAwIDEgMCAwIDAgMCAwIDEgMCcpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3Jlc3VsdCcsJ2YyJyk7XHJcbiAgICBmaWx0ZXIuYXBwZW5kQ2hpbGQoZmVDb2xvck1hdHJpeCk7XHJcbiAgICB0aGlzLm1hdHJpeEZpbHRlciA9IGZlQ29sb3JNYXRyaXg7XHJcbiAgICBpZihmaWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzJdLnAudiAhPT0gMTAwIHx8IGZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMl0ucC5rKXtcclxuICAgICAgICB2YXIgZmVNZXJnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVNZXJnZScpO1xyXG4gICAgICAgIGZpbHRlci5hcHBlbmRDaGlsZChmZU1lcmdlKTtcclxuICAgICAgICB2YXIgZmVNZXJnZU5vZGU7XHJcbiAgICAgICAgZmVNZXJnZU5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlTWVyZ2VOb2RlJyk7XHJcbiAgICAgICAgZmVNZXJnZU5vZGUuc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgICAgICBmZU1lcmdlLmFwcGVuZENoaWxkKGZlTWVyZ2VOb2RlKTtcclxuICAgICAgICBmZU1lcmdlTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVNZXJnZU5vZGUnKTtcclxuICAgICAgICBmZU1lcmdlTm9kZS5zZXRBdHRyaWJ1dGUoJ2luJywnZjInKTtcclxuICAgICAgICBmZU1lcmdlLmFwcGVuZENoaWxkKGZlTWVyZ2VOb2RlKTtcclxuICAgIH1cclxufVxyXG5cclxuU1ZHVGludEZpbHRlci5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmb3JjZVJlbmRlcil7XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmKXtcclxuICAgICAgICB2YXIgY29sb3JCbGFjayA9IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1swXS5wLnY7XHJcbiAgICAgICAgdmFyIGNvbG9yV2hpdGUgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMV0ucC52O1xyXG4gICAgICAgIHZhciBvcGFjaXR5ID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzJdLnAudi8xMDA7XHJcbiAgICAgICAgdGhpcy5tYXRyaXhGaWx0ZXIuc2V0QXR0cmlidXRlKCd2YWx1ZXMnLChjb2xvcldoaXRlWzBdLSBjb2xvckJsYWNrWzBdKSsnIDAgMCAwICcrIGNvbG9yQmxhY2tbMF0gKycgJysgKGNvbG9yV2hpdGVbMV0tIGNvbG9yQmxhY2tbMV0pICsnIDAgMCAwICcrIGNvbG9yQmxhY2tbMV0gKycgJysgKGNvbG9yV2hpdGVbMl0tIGNvbG9yQmxhY2tbMl0pICsnIDAgMCAwICcrIGNvbG9yQmxhY2tbMl0gKycgMCAwIDAgJyArIG9wYWNpdHkgKyAnIDAnKTtcclxuICAgIH1cclxufTtcbmZ1bmN0aW9uIFNWR0ZpbGxGaWx0ZXIoZmlsdGVyLCBmaWx0ZXJNYW5hZ2VyKXtcclxuICAgIHRoaXMuZmlsdGVyTWFuYWdlciA9IGZpbHRlck1hbmFnZXI7XHJcbiAgICB2YXIgZmVDb2xvck1hdHJpeCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVDb2xvck1hdHJpeCcpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCdtYXRyaXgnKTtcclxuICAgIGZlQ29sb3JNYXRyaXguc2V0QXR0cmlidXRlKCdjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMnLCdzUkdCJyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgndmFsdWVzJywnMSAwIDAgMCAwIDAgMSAwIDAgMCAwIDAgMSAwIDAgMCAwIDAgMSAwJyk7XHJcbiAgICBmaWx0ZXIuYXBwZW5kQ2hpbGQoZmVDb2xvck1hdHJpeCk7XHJcbiAgICB0aGlzLm1hdHJpeEZpbHRlciA9IGZlQ29sb3JNYXRyaXg7XHJcbn1cclxuU1ZHRmlsbEZpbHRlci5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmb3JjZVJlbmRlcil7XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmKXtcclxuICAgICAgICB2YXIgY29sb3IgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMl0ucC52O1xyXG4gICAgICAgIHZhciBvcGFjaXR5ID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzZdLnAudjtcclxuICAgICAgICB0aGlzLm1hdHJpeEZpbHRlci5zZXRBdHRyaWJ1dGUoJ3ZhbHVlcycsJzAgMCAwIDAgJytjb2xvclswXSsnIDAgMCAwIDAgJytjb2xvclsxXSsnIDAgMCAwIDAgJytjb2xvclsyXSsnIDAgMCAwICcrb3BhY2l0eSsnIDAnKTtcclxuICAgIH1cclxufTtcbmZ1bmN0aW9uIFNWR1N0cm9rZUVmZmVjdChlbGVtLCBmaWx0ZXJNYW5hZ2VyKXtcclxuICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuZmlsdGVyTWFuYWdlciA9IGZpbHRlck1hbmFnZXI7XHJcbiAgICB0aGlzLmVsZW0gPSBlbGVtO1xyXG4gICAgdGhpcy5wYXRocyA9IFtdO1xyXG59XHJcblxyXG5TVkdTdHJva2VFZmZlY3QucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBlbGVtQ2hpbGRyZW4gPSB0aGlzLmVsZW0ubGF5ZXJFbGVtZW50LmNoaWxkcmVuIHx8IHRoaXMuZWxlbS5sYXllckVsZW1lbnQuY2hpbGROb2RlcztcclxuICAgIHZhciBwYXRoLGdyb3VwUGF0aCwgaSwgbGVuO1xyXG4gICAgaWYodGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzFdLnAudiA9PT0gMSl7XHJcbiAgICAgICAgbGVuID0gdGhpcy5lbGVtLm1hc2tNYW5hZ2VyLm1hc2tzUHJvcGVydGllcy5sZW5ndGg7XHJcbiAgICAgICAgaSA9IDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGkgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMF0ucC52IC0gMTtcclxuICAgICAgICBsZW4gPSBpICsgMTtcclxuICAgIH1cclxuICAgIGdyb3VwUGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpOyBcclxuICAgIGdyb3VwUGF0aC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCdub25lJyk7XHJcbiAgICBncm91cFBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UtbGluZWNhcCcsJ3JvdW5kJyk7XHJcbiAgICBncm91cFBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UtZGFzaG9mZnNldCcsMSk7XHJcbiAgICBmb3IoaTtpPGxlbjtpKz0xKXtcclxuICAgICAgICBwYXRoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdwYXRoJyk7XHJcbiAgICAgICAgZ3JvdXBQYXRoLmFwcGVuZENoaWxkKHBhdGgpO1xyXG4gICAgICAgIHRoaXMucGF0aHMucHVzaCh7cDpwYXRoLG06aX0pO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzEwXS5wLnYgPT09IDMpe1xyXG4gICAgICAgIHZhciBtYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdtYXNrJyk7XHJcbiAgICAgICAgdmFyIGlkID0gJ3N0bXNfJyArIHJhbmRvbVN0cmluZygxMCk7XHJcbiAgICAgICAgbWFzay5zZXRBdHRyaWJ1dGUoJ2lkJyxpZCk7XHJcbiAgICAgICAgbWFzay5zZXRBdHRyaWJ1dGUoJ21hc2stdHlwZScsJ2FscGhhJyk7XHJcbiAgICAgICAgbWFzay5hcHBlbmRDaGlsZChncm91cFBhdGgpO1xyXG4gICAgICAgIHRoaXMuZWxlbS5nbG9iYWxEYXRhLmRlZnMuYXBwZW5kQ2hpbGQobWFzayk7XHJcbiAgICAgICAgdmFyIGcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2cnKTtcclxuICAgICAgICBnLnNldEF0dHJpYnV0ZSgnbWFzaycsJ3VybCgnICsgbG9jYXRpb25IcmVmICsgJyMnK2lkKycpJyk7XHJcbiAgICAgICAgaWYoZWxlbUNoaWxkcmVuWzBdKXtcclxuICAgICAgICAgICAgZy5hcHBlbmRDaGlsZChlbGVtQ2hpbGRyZW5bMF0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVsZW0ubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKGcpO1xyXG4gICAgICAgIHRoaXMubWFza2VyID0gbWFzaztcclxuICAgICAgICBncm91cFBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UnLCcjZmZmJyk7XHJcbiAgICB9IGVsc2UgaWYodGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzEwXS5wLnYgPT09IDEgfHwgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzEwXS5wLnYgPT09IDIpe1xyXG4gICAgICAgIGlmKHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1sxMF0ucC52ID09PSAyKXtcclxuICAgICAgICAgICAgdmFyIGVsZW1DaGlsZHJlbiA9IHRoaXMuZWxlbS5sYXllckVsZW1lbnQuY2hpbGRyZW4gfHwgdGhpcy5lbGVtLmxheWVyRWxlbWVudC5jaGlsZE5vZGVzO1xyXG4gICAgICAgICAgICB3aGlsZShlbGVtQ2hpbGRyZW4ubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWxlbS5sYXllckVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbUNoaWxkcmVuWzBdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVsZW0ubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKGdyb3VwUGF0aCk7XHJcbiAgICAgICAgdGhpcy5lbGVtLmxheWVyRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ21hc2snKTtcclxuICAgICAgICBncm91cFBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UnLCcjZmZmJyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmluaXRpYWxpemVkID0gdHJ1ZTtcclxuICAgIHRoaXMucGF0aE1hc2tlciA9IGdyb3VwUGF0aDtcclxufVxyXG5cclxuU1ZHU3Ryb2tlRWZmZWN0LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKGZvcmNlUmVuZGVyKXtcclxuICAgIGlmKCF0aGlzLmluaXRpYWxpemVkKXtcclxuICAgICAgICB0aGlzLmluaXRpYWxpemUoKTtcclxuICAgIH1cclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLnBhdGhzLmxlbmd0aDtcclxuICAgIHZhciBtYXNrLCBwYXRoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBtYXNrID0gdGhpcy5lbGVtLm1hc2tNYW5hZ2VyLnZpZXdEYXRhW3RoaXMucGF0aHNbaV0ubV07XHJcbiAgICAgICAgcGF0aCA9IHRoaXMucGF0aHNbaV0ucDtcclxuICAgICAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmIHx8IG1hc2sucHJvcC5tZGYpe1xyXG4gICAgICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZSgnZCcsbWFzay5sYXN0UGF0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGZvcmNlUmVuZGVyIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s5XS5wLm1kZiB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNF0ucC5tZGYgfHwgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzddLnAubWRmIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s4XS5wLm1kZiB8fCBtYXNrLnByb3AubWRmKXtcclxuICAgICAgICAgICAgdmFyIGRhc2hhcnJheVZhbHVlO1xyXG4gICAgICAgICAgICBpZih0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbN10ucC52ICE9PSAwIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s4XS5wLnYgIT09IDEwMCl7XHJcbiAgICAgICAgICAgICAgICB2YXIgcyA9IE1hdGgubWluKHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s3XS5wLnYsdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzhdLnAudikvMTAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSBNYXRoLm1heCh0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbN10ucC52LHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s4XS5wLnYpLzEwMDtcclxuICAgICAgICAgICAgICAgIHZhciBsID0gcGF0aC5nZXRUb3RhbExlbmd0aCgpO1xyXG4gICAgICAgICAgICAgICAgZGFzaGFycmF5VmFsdWUgPSAnMCAwIDAgJyArIGwqcyArICcgJztcclxuICAgICAgICAgICAgICAgIHZhciBsaW5lTGVuZ3RoID0gbCooZS1zKTtcclxuICAgICAgICAgICAgICAgIHZhciBzZWdtZW50ID0gMSt0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNF0ucC52KjIqdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzldLnAudi8xMDA7XHJcbiAgICAgICAgICAgICAgICB2YXIgdW5pdHMgPSBNYXRoLmZsb29yKGxpbmVMZW5ndGgvc2VnbWVudCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgajtcclxuICAgICAgICAgICAgICAgIGZvcihqPTA7ajx1bml0cztqKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICBkYXNoYXJyYXlWYWx1ZSArPSAnMSAnICsgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzRdLnAudioyKnRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s5XS5wLnYvMTAwICsgJyAnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGFzaGFycmF5VmFsdWUgKz0gJzAgJyArIGwqMTAgKyAnIDAgMCc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkYXNoYXJyYXlWYWx1ZSA9ICcxICcgKyB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNF0ucC52KjIqdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzldLnAudi8xMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcGF0aC5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1kYXNoYXJyYXknLGRhc2hhcnJheVZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNF0ucC5tZGYpe1xyXG4gICAgICAgIHRoaXMucGF0aE1hc2tlci5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS13aWR0aCcsdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzRdLnAudioyKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYoZm9yY2VSZW5kZXIgfHwgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzZdLnAubWRmKXtcclxuICAgICAgICB0aGlzLnBhdGhNYXNrZXIuc2V0QXR0cmlidXRlKCdvcGFjaXR5Jyx0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNl0ucC52KTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1sxMF0ucC52ID09PSAxIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1sxMF0ucC52ID09PSAyKXtcclxuICAgICAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbM10ucC5tZGYpe1xyXG4gICAgICAgICAgICB2YXIgY29sb3IgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbM10ucC52O1xyXG4gICAgICAgICAgICB0aGlzLnBhdGhNYXNrZXIuc2V0QXR0cmlidXRlKCdzdHJva2UnLCdyZ2IoJytibV9mbG9vcihjb2xvclswXSoyNTUpKycsJytibV9mbG9vcihjb2xvclsxXSoyNTUpKycsJytibV9mbG9vcihjb2xvclsyXSoyNTUpKycpJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xuZnVuY3Rpb24gU1ZHVHJpdG9uZUZpbHRlcihmaWx0ZXIsIGZpbHRlck1hbmFnZXIpe1xyXG4gICAgdGhpcy5maWx0ZXJNYW5hZ2VyID0gZmlsdGVyTWFuYWdlcjtcclxuICAgIHZhciBmZUNvbG9yTWF0cml4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUNvbG9yTWF0cml4Jyk7XHJcbiAgICBmZUNvbG9yTWF0cml4LnNldEF0dHJpYnV0ZSgndHlwZScsJ21hdHJpeCcpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ2NvbG9yLWludGVycG9sYXRpb24tZmlsdGVycycsJ2xpbmVhclJHQicpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlcycsJzAuMzMzMyAwLjMzMzMgMC4zMzMzIDAgMCAwLjMzMzMgMC4zMzMzIDAuMzMzMyAwIDAgMC4zMzMzIDAuMzMzMyAwLjMzMzMgMCAwIDAgMCAwIDEgMCcpO1xyXG4gICAgZmVDb2xvck1hdHJpeC5zZXRBdHRyaWJ1dGUoJ3Jlc3VsdCcsJ2YxJyk7XHJcbiAgICBmaWx0ZXIuYXBwZW5kQ2hpbGQoZmVDb2xvck1hdHJpeCk7XHJcbiAgICB2YXIgZmVDb21wb25lbnRUcmFuc2ZlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVDb21wb25lbnRUcmFuc2ZlcicpO1xyXG4gICAgZmVDb21wb25lbnRUcmFuc2Zlci5zZXRBdHRyaWJ1dGUoJ2NvbG9yLWludGVycG9sYXRpb24tZmlsdGVycycsJ3NSR0InKTtcclxuICAgIGZpbHRlci5hcHBlbmRDaGlsZChmZUNvbXBvbmVudFRyYW5zZmVyKTtcclxuICAgIHRoaXMubWF0cml4RmlsdGVyID0gZmVDb21wb25lbnRUcmFuc2ZlcjtcclxuICAgIHZhciBmZUZ1bmNSID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUZ1bmNSJyk7XHJcbiAgICBmZUZ1bmNSLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RhYmxlJyk7XHJcbiAgICBmZUNvbXBvbmVudFRyYW5zZmVyLmFwcGVuZENoaWxkKGZlRnVuY1IpO1xyXG4gICAgdGhpcy5mZUZ1bmNSID0gZmVGdW5jUjtcclxuICAgIHZhciBmZUZ1bmNHID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUZ1bmNHJyk7XHJcbiAgICBmZUZ1bmNHLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RhYmxlJyk7XHJcbiAgICBmZUNvbXBvbmVudFRyYW5zZmVyLmFwcGVuZENoaWxkKGZlRnVuY0cpO1xyXG4gICAgdGhpcy5mZUZ1bmNHID0gZmVGdW5jRztcclxuICAgIHZhciBmZUZ1bmNCID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUZ1bmNCJyk7XHJcbiAgICBmZUZ1bmNCLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RhYmxlJyk7XHJcbiAgICBmZUNvbXBvbmVudFRyYW5zZmVyLmFwcGVuZENoaWxkKGZlRnVuY0IpO1xyXG4gICAgdGhpcy5mZUZ1bmNCID0gZmVGdW5jQjtcclxufVxyXG5cclxuU1ZHVHJpdG9uZUZpbHRlci5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmb3JjZVJlbmRlcil7XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmKXtcclxuICAgICAgICB2YXIgY29sb3IxID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzBdLnAudjtcclxuICAgICAgICB2YXIgY29sb3IyID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzFdLnAudjtcclxuICAgICAgICB2YXIgY29sb3IzID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzJdLnAudjtcclxuICAgICAgICB2YXIgdGFibGVSID0gY29sb3IzWzBdICsgJyAnICsgY29sb3IyWzBdICsgJyAnICsgY29sb3IxWzBdXHJcbiAgICAgICAgdmFyIHRhYmxlRyA9IGNvbG9yM1sxXSArICcgJyArIGNvbG9yMlsxXSArICcgJyArIGNvbG9yMVsxXVxyXG4gICAgICAgIHZhciB0YWJsZUIgPSBjb2xvcjNbMl0gKyAnICcgKyBjb2xvcjJbMl0gKyAnICcgKyBjb2xvcjFbMl1cclxuICAgICAgICB0aGlzLmZlRnVuY1Iuc2V0QXR0cmlidXRlKCd0YWJsZVZhbHVlcycsIHRhYmxlUik7XHJcbiAgICAgICAgdGhpcy5mZUZ1bmNHLnNldEF0dHJpYnV0ZSgndGFibGVWYWx1ZXMnLCB0YWJsZUcpO1xyXG4gICAgICAgIHRoaXMuZmVGdW5jQi5zZXRBdHRyaWJ1dGUoJ3RhYmxlVmFsdWVzJywgdGFibGVCKTtcclxuICAgICAgICAvL3ZhciBvcGFjaXR5ID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzJdLnAudi8xMDA7XHJcbiAgICAgICAgLy90aGlzLm1hdHJpeEZpbHRlci5zZXRBdHRyaWJ1dGUoJ3ZhbHVlcycsKGNvbG9yV2hpdGVbMF0tIGNvbG9yQmxhY2tbMF0pKycgMCAwIDAgJysgY29sb3JCbGFja1swXSArJyAnKyAoY29sb3JXaGl0ZVsxXS0gY29sb3JCbGFja1sxXSkgKycgMCAwIDAgJysgY29sb3JCbGFja1sxXSArJyAnKyAoY29sb3JXaGl0ZVsyXS0gY29sb3JCbGFja1syXSkgKycgMCAwIDAgJysgY29sb3JCbGFja1syXSArJyAwIDAgMCAnICsgb3BhY2l0eSArICcgMCcpO1xyXG4gICAgfVxyXG59O1xuZnVuY3Rpb24gU1ZHUHJvTGV2ZWxzRmlsdGVyKGZpbHRlciwgZmlsdGVyTWFuYWdlcil7XHJcbiAgICB0aGlzLmZpbHRlck1hbmFnZXIgPSBmaWx0ZXJNYW5hZ2VyO1xyXG4gICAgdmFyIGVmZmVjdEVsZW1lbnRzID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzO1xyXG4gICAgdmFyIGZlQ29tcG9uZW50VHJhbnNmZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlQ29tcG9uZW50VHJhbnNmZXInKTtcclxuICAgIHZhciBmZUZ1bmNSLCBmZUZ1bmNHLCBmZUZ1bmNCO1xyXG4gICAgXHJcbiAgICBpZihlZmZlY3RFbGVtZW50c1s5XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbOV0ucC52ICE9PSAwIHx8IGVmZmVjdEVsZW1lbnRzWzEwXS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMTBdLnAudiAhPT0gMSB8fCBlZmZlY3RFbGVtZW50c1sxMV0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzExXS5wLnYgIT09IDEgfHwgZWZmZWN0RWxlbWVudHNbMTJdLnAuayB8fCBlZmZlY3RFbGVtZW50c1sxMl0ucC52ICE9PSAwIHx8IGVmZmVjdEVsZW1lbnRzWzEzXS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMTNdLnAudiAhPT0gMSl7XHJcbiAgICAgICAgdGhpcy5mZUZ1bmNSID0gdGhpcy5jcmVhdGVGZUZ1bmMoJ2ZlRnVuY1InLCBmZUNvbXBvbmVudFRyYW5zZmVyKTtcclxuICAgIH1cclxuICAgIGlmKGVmZmVjdEVsZW1lbnRzWzE2XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMTZdLnAudiAhPT0gMCB8fCBlZmZlY3RFbGVtZW50c1sxN10ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzE3XS5wLnYgIT09IDEgfHwgZWZmZWN0RWxlbWVudHNbMThdLnAuayB8fCBlZmZlY3RFbGVtZW50c1sxOF0ucC52ICE9PSAxIHx8IGVmZmVjdEVsZW1lbnRzWzE5XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMTldLnAudiAhPT0gMCB8fCBlZmZlY3RFbGVtZW50c1syMF0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzIwXS5wLnYgIT09IDEpe1xyXG4gICAgICAgIHRoaXMuZmVGdW5jRyA9IHRoaXMuY3JlYXRlRmVGdW5jKCdmZUZ1bmNHJywgZmVDb21wb25lbnRUcmFuc2Zlcik7XHJcbiAgICB9XHJcbiAgICBpZihlZmZlY3RFbGVtZW50c1syM10ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzIzXS5wLnYgIT09IDAgfHwgZWZmZWN0RWxlbWVudHNbMjRdLnAuayB8fCBlZmZlY3RFbGVtZW50c1syNF0ucC52ICE9PSAxIHx8IGVmZmVjdEVsZW1lbnRzWzI1XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMjVdLnAudiAhPT0gMSB8fCBlZmZlY3RFbGVtZW50c1syNl0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzI2XS5wLnYgIT09IDAgfHwgZWZmZWN0RWxlbWVudHNbMjddLnAuayB8fCBlZmZlY3RFbGVtZW50c1syN10ucC52ICE9PSAxKXtcclxuICAgICAgICB0aGlzLmZlRnVuY0IgPSB0aGlzLmNyZWF0ZUZlRnVuYygnZmVGdW5jQicsIGZlQ29tcG9uZW50VHJhbnNmZXIpO1xyXG4gICAgfVxyXG4gICAgaWYoZWZmZWN0RWxlbWVudHNbMzBdLnAuayB8fCBlZmZlY3RFbGVtZW50c1szMF0ucC52ICE9PSAwIHx8IGVmZmVjdEVsZW1lbnRzWzMxXS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMzFdLnAudiAhPT0gMSB8fCBlZmZlY3RFbGVtZW50c1szMl0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzMyXS5wLnYgIT09IDEgfHwgZWZmZWN0RWxlbWVudHNbMzNdLnAuayB8fCBlZmZlY3RFbGVtZW50c1szM10ucC52ICE9PSAwIHx8IGVmZmVjdEVsZW1lbnRzWzM0XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbMzRdLnAudiAhPT0gMSl7XHJcbiAgICAgICAgdGhpcy5mZUZ1bmNBID0gdGhpcy5jcmVhdGVGZUZ1bmMoJ2ZlRnVuY0EnLCBmZUNvbXBvbmVudFRyYW5zZmVyKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYodGhpcy5mZUZ1bmNSIHx8IHRoaXMuZmVGdW5jRyB8fCB0aGlzLmZlRnVuY0IgfHwgdGhpcy5mZUZ1bmNBKXtcclxuICAgICAgICBmZUNvbXBvbmVudFRyYW5zZmVyLnNldEF0dHJpYnV0ZSgnY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzJywnc1JHQicpO1xyXG4gICAgICAgIGZpbHRlci5hcHBlbmRDaGlsZChmZUNvbXBvbmVudFRyYW5zZmVyKTtcclxuICAgICAgICBmZUNvbXBvbmVudFRyYW5zZmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUNvbXBvbmVudFRyYW5zZmVyJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoZWZmZWN0RWxlbWVudHNbMl0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzJdLnAudiAhPT0gMCB8fCBlZmZlY3RFbGVtZW50c1szXS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbM10ucC52ICE9PSAxIHx8IGVmZmVjdEVsZW1lbnRzWzRdLnAuayB8fCBlZmZlY3RFbGVtZW50c1s0XS5wLnYgIT09IDEgfHwgZWZmZWN0RWxlbWVudHNbNV0ucC5rIHx8IGVmZmVjdEVsZW1lbnRzWzVdLnAudiAhPT0gMCB8fCBlZmZlY3RFbGVtZW50c1s2XS5wLmsgfHwgZWZmZWN0RWxlbWVudHNbNl0ucC52ICE9PSAxKXtcclxuXHJcbiAgICAgICAgZmVDb21wb25lbnRUcmFuc2Zlci5zZXRBdHRyaWJ1dGUoJ2NvbG9yLWludGVycG9sYXRpb24tZmlsdGVycycsJ3NSR0InKTtcclxuICAgICAgICBmaWx0ZXIuYXBwZW5kQ2hpbGQoZmVDb21wb25lbnRUcmFuc2Zlcik7XHJcbiAgICAgICAgdGhpcy5mZUZ1bmNSQ29tcG9zZWQgPSB0aGlzLmNyZWF0ZUZlRnVuYygnZmVGdW5jUicsIGZlQ29tcG9uZW50VHJhbnNmZXIpO1xyXG4gICAgICAgIHRoaXMuZmVGdW5jR0NvbXBvc2VkID0gdGhpcy5jcmVhdGVGZUZ1bmMoJ2ZlRnVuY0cnLCBmZUNvbXBvbmVudFRyYW5zZmVyKTtcclxuICAgICAgICB0aGlzLmZlRnVuY0JDb21wb3NlZCA9IHRoaXMuY3JlYXRlRmVGdW5jKCdmZUZ1bmNCJywgZmVDb21wb25lbnRUcmFuc2Zlcik7XHJcbiAgICB9XHJcbn1cclxuXHJcblNWR1Byb0xldmVsc0ZpbHRlci5wcm90b3R5cGUuY3JlYXRlRmVGdW5jID0gZnVuY3Rpb24odHlwZSwgZmVDb21wb25lbnRUcmFuc2Zlcikge1xyXG4gICAgdmFyIGZlRnVuYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUyx0eXBlKTtcclxuICAgIGZlRnVuYy5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCd0YWJsZScpO1xyXG4gICAgZmVDb21wb25lbnRUcmFuc2Zlci5hcHBlbmRDaGlsZChmZUZ1bmMpO1xyXG4gICAgcmV0dXJuIGZlRnVuYztcclxufTtcclxuXHJcblNWR1Byb0xldmVsc0ZpbHRlci5wcm90b3R5cGUuZ2V0VGFibGVWYWx1ZSA9IGZ1bmN0aW9uKGlucHV0QmxhY2ssIGlucHV0V2hpdGUsIGdhbW1hLCBvdXRwdXRCbGFjaywgb3V0cHV0V2hpdGUpIHtcclxuICAgIHZhciBjbnQgPSAwO1xyXG4gICAgdmFyIHNlZ21lbnRzID0gMjU2O1xyXG4gICAgdmFyIHBlcmM7XHJcbiAgICB2YXIgbWluID0gTWF0aC5taW4oaW5wdXRCbGFjaywgaW5wdXRXaGl0ZSk7XHJcbiAgICB2YXIgbWF4ID0gTWF0aC5tYXgoaW5wdXRCbGFjaywgaW5wdXRXaGl0ZSk7XHJcbiAgICB2YXIgdGFibGUgPSBBcnJheS5jYWxsKG51bGwse2xlbmd0aDpzZWdtZW50c30pO1xyXG4gICAgdmFyIGNvbG9yVmFsdWU7XHJcbiAgICB2YXIgcG9zID0gMDtcclxuICAgIHZhciBvdXRwdXREZWx0YSA9IG91dHB1dFdoaXRlIC0gb3V0cHV0QmxhY2s7IFxyXG4gICAgdmFyIGlucHV0RGVsdGEgPSBpbnB1dFdoaXRlIC0gaW5wdXRCbGFjazsgXHJcbiAgICB3aGlsZShjbnQgPD0gMjU2KSB7XHJcbiAgICAgICAgcGVyYyA9IGNudC8yNTY7XHJcbiAgICAgICAgaWYocGVyYyA8PSBtaW4pe1xyXG4gICAgICAgICAgICBjb2xvclZhbHVlID0gaW5wdXREZWx0YSA8IDAgPyBvdXRwdXRXaGl0ZSA6IG91dHB1dEJsYWNrO1xyXG4gICAgICAgIH0gZWxzZSBpZihwZXJjID49IG1heCl7XHJcbiAgICAgICAgICAgIGNvbG9yVmFsdWUgPSBpbnB1dERlbHRhIDwgMCA/IG91dHB1dEJsYWNrIDogb3V0cHV0V2hpdGU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29sb3JWYWx1ZSA9IChvdXRwdXRCbGFjayArIG91dHB1dERlbHRhICogTWF0aC5wb3coKHBlcmMgLSBpbnB1dEJsYWNrKSAvIGlucHV0RGVsdGEsIDEgLyBnYW1tYSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0YWJsZVtwb3MrK10gPSBjb2xvclZhbHVlO1xyXG4gICAgICAgIGNudCArPSAyNTYvKHNlZ21lbnRzLTEpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRhYmxlLmpvaW4oJyAnKTtcclxufTtcclxuXHJcblNWR1Byb0xldmVsc0ZpbHRlci5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmb3JjZVJlbmRlcil7XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmKXtcclxuICAgICAgICB2YXIgdmFsLCBjbnQsIHBlcmMsIGJlemllcjtcclxuICAgICAgICB2YXIgZWZmZWN0RWxlbWVudHMgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHM7XHJcbiAgICAgICAgaWYodGhpcy5mZUZ1bmNSQ29tcG9zZWQgJiYgKGZvcmNlUmVuZGVyIHx8IGVmZmVjdEVsZW1lbnRzWzJdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzNdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzRdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzVdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzZdLnAubWRmKSl7XHJcbiAgICAgICAgICAgIHZhbCA9IHRoaXMuZ2V0VGFibGVWYWx1ZShlZmZlY3RFbGVtZW50c1syXS5wLnYsZWZmZWN0RWxlbWVudHNbM10ucC52LGVmZmVjdEVsZW1lbnRzWzRdLnAudixlZmZlY3RFbGVtZW50c1s1XS5wLnYsZWZmZWN0RWxlbWVudHNbNl0ucC52KTtcclxuICAgICAgICAgICAgdGhpcy5mZUZ1bmNSQ29tcG9zZWQuc2V0QXR0cmlidXRlKCd0YWJsZVZhbHVlcycsdmFsKTtcclxuICAgICAgICAgICAgdGhpcy5mZUZ1bmNHQ29tcG9zZWQuc2V0QXR0cmlidXRlKCd0YWJsZVZhbHVlcycsdmFsKTtcclxuICAgICAgICAgICAgdGhpcy5mZUZ1bmNCQ29tcG9zZWQuc2V0QXR0cmlidXRlKCd0YWJsZVZhbHVlcycsdmFsKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHRoaXMuZmVGdW5jUiAmJiAoZm9yY2VSZW5kZXIgfHwgZWZmZWN0RWxlbWVudHNbOV0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMTBdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzExXS5wLm1kZiB8fCBlZmZlY3RFbGVtZW50c1sxMl0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMTNdLnAubWRmKSl7XHJcbiAgICAgICAgICAgIHZhbCA9IHRoaXMuZ2V0VGFibGVWYWx1ZShlZmZlY3RFbGVtZW50c1s5XS5wLnYsZWZmZWN0RWxlbWVudHNbMTBdLnAudixlZmZlY3RFbGVtZW50c1sxMV0ucC52LGVmZmVjdEVsZW1lbnRzWzEyXS5wLnYsZWZmZWN0RWxlbWVudHNbMTNdLnAudik7XHJcbiAgICAgICAgICAgIHRoaXMuZmVGdW5jUi5zZXRBdHRyaWJ1dGUoJ3RhYmxlVmFsdWVzJyx2YWwpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYodGhpcy5mZUZ1bmNHICYmIChmb3JjZVJlbmRlciB8fCBlZmZlY3RFbGVtZW50c1sxNl0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMTddLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzE4XS5wLm1kZiB8fCBlZmZlY3RFbGVtZW50c1sxOV0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMjBdLnAubWRmKSl7XHJcbiAgICAgICAgICAgIHZhbCA9IHRoaXMuZ2V0VGFibGVWYWx1ZShlZmZlY3RFbGVtZW50c1sxNl0ucC52LGVmZmVjdEVsZW1lbnRzWzE3XS5wLnYsZWZmZWN0RWxlbWVudHNbMThdLnAudixlZmZlY3RFbGVtZW50c1sxOV0ucC52LGVmZmVjdEVsZW1lbnRzWzIwXS5wLnYpO1xyXG4gICAgICAgICAgICB0aGlzLmZlRnVuY0cuc2V0QXR0cmlidXRlKCd0YWJsZVZhbHVlcycsdmFsKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHRoaXMuZmVGdW5jQiAmJiAoZm9yY2VSZW5kZXIgfHwgZWZmZWN0RWxlbWVudHNbMjNdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzI0XS5wLm1kZiB8fCBlZmZlY3RFbGVtZW50c1syNV0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMjZdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzI3XS5wLm1kZikpe1xyXG4gICAgICAgICAgICB2YWwgPSB0aGlzLmdldFRhYmxlVmFsdWUoZWZmZWN0RWxlbWVudHNbMjNdLnAudixlZmZlY3RFbGVtZW50c1syNF0ucC52LGVmZmVjdEVsZW1lbnRzWzI1XS5wLnYsZWZmZWN0RWxlbWVudHNbMjZdLnAudixlZmZlY3RFbGVtZW50c1syN10ucC52KTtcclxuICAgICAgICAgICAgdGhpcy5mZUZ1bmNCLnNldEF0dHJpYnV0ZSgndGFibGVWYWx1ZXMnLHZhbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZih0aGlzLmZlRnVuY0EgJiYgKGZvcmNlUmVuZGVyIHx8IGVmZmVjdEVsZW1lbnRzWzMwXS5wLm1kZiB8fCBlZmZlY3RFbGVtZW50c1szMV0ucC5tZGYgfHwgZWZmZWN0RWxlbWVudHNbMzJdLnAubWRmIHx8IGVmZmVjdEVsZW1lbnRzWzMzXS5wLm1kZiB8fCBlZmZlY3RFbGVtZW50c1szNF0ucC5tZGYpKXtcclxuICAgICAgICAgICAgdmFsID0gdGhpcy5nZXRUYWJsZVZhbHVlKGVmZmVjdEVsZW1lbnRzWzMwXS5wLnYsZWZmZWN0RWxlbWVudHNbMzFdLnAudixlZmZlY3RFbGVtZW50c1szMl0ucC52LGVmZmVjdEVsZW1lbnRzWzMzXS5wLnYsZWZmZWN0RWxlbWVudHNbMzRdLnAudik7XHJcbiAgICAgICAgICAgIHRoaXMuZmVGdW5jQS5zZXRBdHRyaWJ1dGUoJ3RhYmxlVmFsdWVzJyx2YWwpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxufTtcbmZ1bmN0aW9uIFNWR0Ryb3BTaGFkb3dFZmZlY3QoZmlsdGVyLCBmaWx0ZXJNYW5hZ2VyKXtcclxuICAgIC8qPGZlR2F1c3NpYW5CbHVyIGluPVwiU291cmNlQWxwaGFcIiBzdGREZXZpYXRpb249XCIzXCIvPiA8IS0tIHN0ZERldmlhdGlvbiBpcyBob3cgbXVjaCB0byBibHVyIC0tPlxyXG4gIDxmZU9mZnNldCBkeD1cIjJcIiBkeT1cIjJcIiByZXN1bHQ9XCJvZmZzZXRibHVyXCIvPiA8IS0tIGhvdyBtdWNoIHRvIG9mZnNldCAtLT5cclxuICA8ZmVNZXJnZT4gXHJcbiAgICA8ZmVNZXJnZU5vZGUvPiA8IS0tIHRoaXMgY29udGFpbnMgdGhlIG9mZnNldCBibHVycmVkIGltYWdlIC0tPlxyXG4gICAgPGZlTWVyZ2VOb2RlIGluPVwiU291cmNlR3JhcGhpY1wiLz4gPCEtLSB0aGlzIGNvbnRhaW5zIHRoZSBlbGVtZW50IHRoYXQgdGhlIGZpbHRlciBpcyBhcHBsaWVkIHRvIC0tPlxyXG4gIDwvZmVNZXJnZT4qL1xyXG4gIC8qPGZlRmxvb2QgZmxvb2QtY29sb3I9XCIjM0Q0NTc0XCIgZmxvb2Qtb3BhY2l0eT1cIjAuNVwiIHJlc3VsdD1cIm9mZnNldENvbG9yXCIvPiovXHJcbiAgICBmaWx0ZXIuc2V0QXR0cmlidXRlKCd4JywnLTEwMCUnKTtcclxuICAgIGZpbHRlci5zZXRBdHRyaWJ1dGUoJ3knLCctMTAwJScpO1xyXG4gICAgZmlsdGVyLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCc0MDAlJyk7XHJcbiAgICBmaWx0ZXIuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCc0MDAlJyk7XHJcbiAgICB0aGlzLmZpbHRlck1hbmFnZXIgPSBmaWx0ZXJNYW5hZ2VyO1xyXG5cclxuICAgIHZhciBmZUdhdXNzaWFuQmx1ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVHYXVzc2lhbkJsdXInKTtcclxuICAgIGZlR2F1c3NpYW5CbHVyLnNldEF0dHJpYnV0ZSgnaW4nLCdTb3VyY2VBbHBoYScpO1xyXG4gICAgZmVHYXVzc2lhbkJsdXIuc2V0QXR0cmlidXRlKCdyZXN1bHQnLCdkcm9wX3NoYWRvd18xJyk7XHJcbiAgICBmZUdhdXNzaWFuQmx1ci5zZXRBdHRyaWJ1dGUoJ3N0ZERldmlhdGlvbicsJzAnKTtcclxuICAgIHRoaXMuZmVHYXVzc2lhbkJsdXIgPSBmZUdhdXNzaWFuQmx1cjtcclxuICAgIGZpbHRlci5hcHBlbmRDaGlsZChmZUdhdXNzaWFuQmx1cik7XHJcblxyXG4gICAgdmFyIGZlT2Zmc2V0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZU9mZnNldCcpO1xyXG4gICAgZmVPZmZzZXQuc2V0QXR0cmlidXRlKCdkeCcsJzI1Jyk7XHJcbiAgICBmZU9mZnNldC5zZXRBdHRyaWJ1dGUoJ2R5JywnMCcpO1xyXG4gICAgZmVPZmZzZXQuc2V0QXR0cmlidXRlKCdpbicsJ2Ryb3Bfc2hhZG93XzEnKTtcclxuICAgIGZlT2Zmc2V0LnNldEF0dHJpYnV0ZSgncmVzdWx0JywnZHJvcF9zaGFkb3dfMicpO1xyXG4gICAgdGhpcy5mZU9mZnNldCA9IGZlT2Zmc2V0O1xyXG4gICAgZmlsdGVyLmFwcGVuZENoaWxkKGZlT2Zmc2V0KTtcclxuICAgIHZhciBmZUZsb29kID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZUZsb29kJyk7XHJcbiAgICBmZUZsb29kLnNldEF0dHJpYnV0ZSgnZmxvb2QtY29sb3InLCcjMDBmZjAwJyk7XHJcbiAgICBmZUZsb29kLnNldEF0dHJpYnV0ZSgnZmxvb2Qtb3BhY2l0eScsJzEnKTtcclxuICAgIGZlRmxvb2Quc2V0QXR0cmlidXRlKCdyZXN1bHQnLCdkcm9wX3NoYWRvd18zJyk7XHJcbiAgICB0aGlzLmZlRmxvb2QgPSBmZUZsb29kO1xyXG4gICAgZmlsdGVyLmFwcGVuZENoaWxkKGZlRmxvb2QpO1xyXG5cclxuICAgIHZhciBmZUNvbXBvc2l0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVDb21wb3NpdGUnKTtcclxuICAgIGZlQ29tcG9zaXRlLnNldEF0dHJpYnV0ZSgnaW4nLCdkcm9wX3NoYWRvd18zJyk7XHJcbiAgICBmZUNvbXBvc2l0ZS5zZXRBdHRyaWJ1dGUoJ2luMicsJ2Ryb3Bfc2hhZG93XzInKTtcclxuICAgIGZlQ29tcG9zaXRlLnNldEF0dHJpYnV0ZSgnb3BlcmF0b3InLCdpbicpO1xyXG4gICAgZmVDb21wb3NpdGUuc2V0QXR0cmlidXRlKCdyZXN1bHQnLCdkcm9wX3NoYWRvd180Jyk7XHJcbiAgICBmaWx0ZXIuYXBwZW5kQ2hpbGQoZmVDb21wb3NpdGUpO1xyXG5cclxuXHJcbiAgICB2YXIgZmVNZXJnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZmVNZXJnZScpO1xyXG4gICAgZmlsdGVyLmFwcGVuZENoaWxkKGZlTWVyZ2UpO1xyXG4gICAgdmFyIGZlTWVyZ2VOb2RlO1xyXG4gICAgZmVNZXJnZU5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2ZlTWVyZ2VOb2RlJyk7XHJcbiAgICBmZU1lcmdlLmFwcGVuZENoaWxkKGZlTWVyZ2VOb2RlKTtcclxuICAgIGZlTWVyZ2VOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdmZU1lcmdlTm9kZScpO1xyXG4gICAgZmVNZXJnZU5vZGUuc2V0QXR0cmlidXRlKCdpbicsJ1NvdXJjZUdyYXBoaWMnKTtcclxuICAgIHRoaXMuZmVNZXJnZU5vZGUgPSBmZU1lcmdlTm9kZTtcclxuICAgIHRoaXMuZmVNZXJnZSA9IGZlTWVyZ2U7XHJcbiAgICB0aGlzLm9yaWdpbmFsTm9kZUFkZGVkID0gZmFsc2U7XHJcbiAgICBmZU1lcmdlLmFwcGVuZENoaWxkKGZlTWVyZ2VOb2RlKTtcclxufVxyXG5cclxuU1ZHRHJvcFNoYWRvd0VmZmVjdC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmb3JjZVJlbmRlcil7XHJcbiAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIubWRmKXtcclxuICAgICAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNF0ucC5tZGYpe1xyXG4gICAgICAgICAgICB0aGlzLmZlR2F1c3NpYW5CbHVyLnNldEF0dHJpYnV0ZSgnc3RkRGV2aWF0aW9uJywgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzRdLnAudiAvIDQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMF0ucC5tZGYpe1xyXG4gICAgICAgICAgICB2YXIgY29sID0gdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzBdLnAudjtcclxuICAgICAgICAgICAgdGhpcy5mZUZsb29kLnNldEF0dHJpYnV0ZSgnZmxvb2QtY29sb3InLHJnYlRvSGV4KE1hdGgucm91bmQoY29sWzBdKjI1NSksTWF0aC5yb3VuZChjb2xbMV0qMjU1KSxNYXRoLnJvdW5kKGNvbFsyXSoyNTUpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGZvcmNlUmVuZGVyIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1sxXS5wLm1kZil7XHJcbiAgICAgICAgICAgIHRoaXMuZmVGbG9vZC5zZXRBdHRyaWJ1dGUoJ2Zsb29kLW9wYWNpdHknLHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1sxXS5wLnYvMjU1KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoZm9yY2VSZW5kZXIgfHwgdGhpcy5maWx0ZXJNYW5hZ2VyLmVmZmVjdEVsZW1lbnRzWzJdLnAubWRmIHx8IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1szXS5wLm1kZil7XHJcbiAgICAgICAgICAgIHZhciBkaXN0YW5jZSA9IHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1szXS5wLnZcclxuICAgICAgICAgICAgdmFyIGFuZ2xlID0gKHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1syXS5wLnYgLSA5MCkgKiBkZWdUb1JhZHNcclxuICAgICAgICAgICAgdmFyIHggPSBkaXN0YW5jZSAqIE1hdGguY29zKGFuZ2xlKVxyXG4gICAgICAgICAgICB2YXIgeSA9IGRpc3RhbmNlICogTWF0aC5zaW4oYW5nbGUpXHJcbiAgICAgICAgICAgIHRoaXMuZmVPZmZzZXQuc2V0QXR0cmlidXRlKCdkeCcsIHgpO1xyXG4gICAgICAgICAgICB0aGlzLmZlT2Zmc2V0LnNldEF0dHJpYnV0ZSgnZHknLCB5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLyppZihmb3JjZVJlbmRlciB8fCB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNV0ucC5tZGYpe1xyXG4gICAgICAgICAgICBpZih0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbNV0ucC52ID09PSAxICYmIHRoaXMub3JpZ2luYWxOb2RlQWRkZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmVNZXJnZS5yZW1vdmVDaGlsZCh0aGlzLmZlTWVyZ2VOb2RlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMub3JpZ2luYWxOb2RlQWRkZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmKHRoaXMuZmlsdGVyTWFuYWdlci5lZmZlY3RFbGVtZW50c1s1XS5wLnYgPT09IDAgJiYgIXRoaXMub3JpZ2luYWxOb2RlQWRkZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmVNZXJnZS5hcHBlbmRDaGlsZCh0aGlzLmZlTWVyZ2VOb2RlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMub3JpZ2luYWxOb2RlQWRkZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSovXHJcbiAgICB9XHJcbn07XG5mdW5jdGlvbiBTVkdNYXR0ZTNFZmZlY3QoZmlsdGVyRWxlbSwgZmlsdGVyTWFuYWdlciwgZWxlbSl7XHJcbiAgICB0aGlzLmluaXRpYWxpemVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmZpbHRlck1hbmFnZXIgPSBmaWx0ZXJNYW5hZ2VyO1xyXG4gICAgdGhpcy5maWx0ZXJFbGVtID0gZmlsdGVyRWxlbTtcclxuICAgIHRoaXMuZWxlbSA9IGVsZW07XHJcbiAgICBlbGVtLm1hdHRlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgZWxlbS5tYXR0ZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbS5sYXllckVsZW1lbnQpO1xyXG4gICAgZWxlbS5tYXR0ZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbS50cmFuc2Zvcm1lZEVsZW1lbnQpO1xyXG4gICAgZWxlbS5iYXNlRWxlbWVudCA9IGVsZW0ubWF0dGVFbGVtZW50O1xyXG59XHJcblxyXG5TVkdNYXR0ZTNFZmZlY3QucHJvdG90eXBlLnNldEVsZW1lbnRBc01hc2sgPSBmdW5jdGlvbihlbGVtLCBtYXNrKSB7XHJcbiAgICB2YXIgbWFza2VyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdtYXNrJyk7XHJcbiAgICBtYXNrZXIuc2V0QXR0cmlidXRlKCdpZCcsbWFzay5sYXllcklkKTtcclxuICAgIG1hc2tlci5zZXRBdHRyaWJ1dGUoJ21hc2stdHlwZScsJ2FscGhhJyk7XHJcbiAgICBtYXNrZXIuYXBwZW5kQ2hpbGQobWFzay5sYXllckVsZW1lbnQpO1xyXG4gICAgZWxlbS5zZXRNYXR0ZShtYXNrLmxheWVySWQpO1xyXG4gICAgbWFzay5kYXRhLmhkID0gZmFsc2U7XHJcbiAgICB2YXIgZGVmcyA9IGVsZW0uZ2xvYmFsRGF0YS5kZWZzO1xyXG4gICAgZGVmcy5hcHBlbmRDaGlsZChtYXNrZXIpO1xyXG59XHJcblxyXG5TVkdNYXR0ZTNFZmZlY3QucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbigpIHtcclxuICAgIHZhciBpbmQgPSB0aGlzLmZpbHRlck1hbmFnZXIuZWZmZWN0RWxlbWVudHNbMF0ucC52O1xyXG4gICAgdmFyIGkgPSAwLCBsZW4gPSB0aGlzLmVsZW0uY29tcC5lbGVtZW50cy5sZW5ndGg7XHJcbiAgICB3aGlsZShpIDwgbGVuKSB7XHJcbiAgICBcdGlmKHRoaXMuZWxlbS5jb21wLmVsZW1lbnRzW2ldLmRhdGEuaW5kID09PSBpbmQpIHtcclxuICAgIFx0XHR0aGlzLnNldEVsZW1lbnRBc01hc2sodGhpcy5lbGVtLCB0aGlzLmVsZW0uY29tcC5lbGVtZW50c1tpXSk7XHJcbiAgICBcdH1cclxuICAgIFx0aSArPSAxO1xyXG4gICAgfVxyXG4gICAgdGhpcy5pbml0aWFsaXplZCA9IHRydWU7XHJcbn1cclxuXHJcblNWR01hdHRlM0VmZmVjdC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbigpIHtcclxuXHRpZighdGhpcy5pbml0aWFsaXplZCkge1xyXG5cdFx0dGhpcy5pbml0aWFsaXplKCk7XHJcblx0fVxyXG59XG5mdW5jdGlvbiBTVkdFZmZlY3RzKGVsZW0pe1xyXG4gICAgdmFyIGksIGxlbiA9IGVsZW0uZGF0YS5lZi5sZW5ndGg7XHJcbiAgICB2YXIgZmlsSWQgPSByYW5kb21TdHJpbmcoMTApO1xyXG4gICAgdmFyIGZpbCA9IGZpbHRlcnNGYWN0b3J5LmNyZWF0ZUZpbHRlcihmaWxJZCk7XHJcbiAgICB2YXIgY291bnQgPSAwO1xyXG4gICAgdGhpcy5maWx0ZXJzID0gW107XHJcbiAgICB2YXIgZmlsdGVyTWFuYWdlcjtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgaWYoZWxlbS5kYXRhLmVmW2ldLnR5ID09PSAyMCl7XHJcbiAgICAgICAgICAgIGNvdW50ICs9IDE7XHJcbiAgICAgICAgICAgIGZpbHRlck1hbmFnZXIgPSBuZXcgU1ZHVGludEZpbHRlcihmaWwsIGVsZW0uZWZmZWN0cy5lZmZlY3RFbGVtZW50c1tpXSk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVycy5wdXNoKGZpbHRlck1hbmFnZXIpO1xyXG4gICAgICAgIH1lbHNlIGlmKGVsZW0uZGF0YS5lZltpXS50eSA9PT0gMjEpe1xyXG4gICAgICAgICAgICBjb3VudCArPSAxO1xyXG4gICAgICAgICAgICBmaWx0ZXJNYW5hZ2VyID0gbmV3IFNWR0ZpbGxGaWx0ZXIoZmlsLCBlbGVtLmVmZmVjdHMuZWZmZWN0RWxlbWVudHNbaV0pO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlcnMucHVzaChmaWx0ZXJNYW5hZ2VyKTtcclxuICAgICAgICB9ZWxzZSBpZihlbGVtLmRhdGEuZWZbaV0udHkgPT09IDIyKXtcclxuICAgICAgICAgICAgZmlsdGVyTWFuYWdlciA9IG5ldyBTVkdTdHJva2VFZmZlY3QoZWxlbSwgZWxlbS5lZmZlY3RzLmVmZmVjdEVsZW1lbnRzW2ldKTtcclxuICAgICAgICAgICAgdGhpcy5maWx0ZXJzLnB1c2goZmlsdGVyTWFuYWdlcik7XHJcbiAgICAgICAgfWVsc2UgaWYoZWxlbS5kYXRhLmVmW2ldLnR5ID09PSAyMyl7XHJcbiAgICAgICAgICAgIGNvdW50ICs9IDE7XHJcbiAgICAgICAgICAgIGZpbHRlck1hbmFnZXIgPSBuZXcgU1ZHVHJpdG9uZUZpbHRlcihmaWwsIGVsZW0uZWZmZWN0cy5lZmZlY3RFbGVtZW50c1tpXSk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVycy5wdXNoKGZpbHRlck1hbmFnZXIpO1xyXG4gICAgICAgIH1lbHNlIGlmKGVsZW0uZGF0YS5lZltpXS50eSA9PT0gMjQpe1xyXG4gICAgICAgICAgICBjb3VudCArPSAxO1xyXG4gICAgICAgICAgICBmaWx0ZXJNYW5hZ2VyID0gbmV3IFNWR1Byb0xldmVsc0ZpbHRlcihmaWwsIGVsZW0uZWZmZWN0cy5lZmZlY3RFbGVtZW50c1tpXSk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVycy5wdXNoKGZpbHRlck1hbmFnZXIpO1xyXG4gICAgICAgIH1lbHNlIGlmKGVsZW0uZGF0YS5lZltpXS50eSA9PT0gMjUpe1xyXG4gICAgICAgICAgICBjb3VudCArPSAxO1xyXG4gICAgICAgICAgICBmaWx0ZXJNYW5hZ2VyID0gbmV3IFNWR0Ryb3BTaGFkb3dFZmZlY3QoZmlsLCBlbGVtLmVmZmVjdHMuZWZmZWN0RWxlbWVudHNbaV0pO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlcnMucHVzaChmaWx0ZXJNYW5hZ2VyKTtcclxuICAgICAgICB9ZWxzZSBpZihlbGVtLmRhdGEuZWZbaV0udHkgPT09IDI4KXtcclxuICAgICAgICAgICAgLy9jb3VudCArPSAxO1xyXG4gICAgICAgICAgICBmaWx0ZXJNYW5hZ2VyID0gbmV3IFNWR01hdHRlM0VmZmVjdChmaWwsIGVsZW0uZWZmZWN0cy5lZmZlY3RFbGVtZW50c1tpXSwgZWxlbSk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVycy5wdXNoKGZpbHRlck1hbmFnZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKGNvdW50KXtcclxuICAgICAgICBlbGVtLmdsb2JhbERhdGEuZGVmcy5hcHBlbmRDaGlsZChmaWwpO1xyXG4gICAgICAgIGVsZW0ubGF5ZXJFbGVtZW50LnNldEF0dHJpYnV0ZSgnZmlsdGVyJywndXJsKCcgKyBsb2NhdGlvbkhyZWYgKyAnIycrZmlsSWQrJyknKTtcclxuICAgIH1cclxufVxyXG5cclxuU1ZHRWZmZWN0cy5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihmaXJzdEZyYW1lKXtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmZpbHRlcnMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLmZpbHRlcnNbaV0ucmVuZGVyRnJhbWUoZmlyc3RGcmFtZSk7XHJcbiAgICB9XHJcbn07XG5mdW5jdGlvbiBJQ29tcEVsZW1lbnQoZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcil7XHJcbiAgICB0aGlzLl9wYXJlbnQuY29uc3RydWN0b3IuY2FsbCh0aGlzLGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpO1xyXG4gICAgdGhpcy5sYXllcnMgPSBkYXRhLmxheWVycztcclxuICAgIHRoaXMuc3VwcG9ydHMzZCA9IHRydWU7XHJcbiAgICB0aGlzLmNvbXBsZXRlTGF5ZXJzID0gZmFsc2U7XHJcbiAgICB0aGlzLnBlbmRpbmdFbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IHRoaXMubGF5ZXJzID8gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMubGF5ZXJzLmxlbmd0aH0pIDogW107XHJcbiAgICBpZih0aGlzLmRhdGEudG0pe1xyXG4gICAgICAgIHRoaXMudG0gPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLHRoaXMuZGF0YS50bSwwLGdsb2JhbERhdGEuZnJhbWVSYXRlLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5kYXRhLnh0KXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgICAgIHRoaXMuYnVpbGRBbGxJdGVtcygpO1xyXG4gICAgfSBlbHNlIGlmKCFnbG9iYWxEYXRhLnByb2dyZXNzaXZlTG9hZCl7XHJcbiAgICAgICAgdGhpcy5idWlsZEFsbEl0ZW1zKCk7XHJcbiAgICB9XHJcbn1cclxuY3JlYXRlRWxlbWVudChTVkdCYXNlRWxlbWVudCwgSUNvbXBFbGVtZW50KTtcclxuXHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZighdGhpcy5oaWRkZW4pe1xyXG4gICAgICAgIHRoaXMuX3BhcmVudC5oaWRlLmNhbGwodGhpcyk7XHJcbiAgICAgICAgdmFyIGksbGVuID0gdGhpcy5lbGVtZW50cy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKCBpID0gMDsgaSA8IGxlbjsgaSs9MSApe1xyXG4gICAgICAgICAgICBpZih0aGlzLmVsZW1lbnRzW2ldKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbaV0uaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5wcmVwYXJlRnJhbWUgPSBmdW5jdGlvbihudW0pe1xyXG4gICAgdGhpcy5fcGFyZW50LnByZXBhcmVGcmFtZS5jYWxsKHRoaXMsbnVtKTtcclxuICAgIGlmKHRoaXMuaXNWaXNpYmxlPT09ZmFsc2UgJiYgIXRoaXMuZGF0YS54dCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHRoaXMudG0pe1xyXG4gICAgICAgIHZhciB0aW1lUmVtYXBwZWQgPSB0aGlzLnRtLnY7XHJcbiAgICAgICAgaWYodGltZVJlbWFwcGVkID09PSB0aGlzLmRhdGEub3Ape1xyXG4gICAgICAgICAgICB0aW1lUmVtYXBwZWQgPSB0aGlzLmRhdGEub3AgLSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlbmRlcmVkRnJhbWUgPSB0aW1lUmVtYXBwZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMucmVuZGVyZWRGcmFtZSA9IG51bS90aGlzLmRhdGEuc3I7XHJcbiAgICB9XHJcbiAgICB2YXIgaSxsZW4gPSB0aGlzLmVsZW1lbnRzLmxlbmd0aDtcclxuICAgIGlmKCF0aGlzLmNvbXBsZXRlTGF5ZXJzKXtcclxuICAgICAgICB0aGlzLmNoZWNrTGF5ZXJzKHRoaXMucmVuZGVyZWRGcmFtZSk7XHJcbiAgICB9XHJcbiAgICBmb3IoIGkgPSAwOyBpIDwgbGVuOyBpKz0xICl7XHJcbiAgICAgICAgaWYodGhpcy5jb21wbGV0ZUxheWVycyB8fCB0aGlzLmVsZW1lbnRzW2ldKXtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50c1tpXS5wcmVwYXJlRnJhbWUodGhpcy5yZW5kZXJlZEZyYW1lIC0gdGhpcy5sYXllcnNbaV0uc3QpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihwYXJlbnRNYXRyaXgpe1xyXG4gICAgdmFyIHJlbmRlclBhcmVudCA9IHRoaXMuX3BhcmVudC5yZW5kZXJGcmFtZS5jYWxsKHRoaXMscGFyZW50TWF0cml4KTtcclxuICAgIHZhciBpLGxlbiA9IHRoaXMubGF5ZXJzLmxlbmd0aDtcclxuICAgIGlmKHJlbmRlclBhcmVudD09PWZhbHNlKXtcclxuICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgaWYodGhpcy5oaWRkZW4pIHtcclxuICAgICAgICB0aGlzLnNob3coKTtcclxuICAgIH1cclxuICAgIGZvciggaSA9IDA7IGkgPCBsZW47IGkrPTEgKXtcclxuICAgICAgICBpZih0aGlzLmNvbXBsZXRlTGF5ZXJzIHx8IHRoaXMuZWxlbWVudHNbaV0pe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLnJlbmRlckZyYW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxufTtcclxuXHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUuc2V0RWxlbWVudHMgPSBmdW5jdGlvbihlbGVtcyl7XHJcbiAgICB0aGlzLmVsZW1lbnRzID0gZWxlbXM7XHJcbn07XHJcblxyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmdldEVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiB0aGlzLmVsZW1lbnRzO1xyXG59O1xyXG5cclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMuX3BhcmVudC5kZXN0cm95LmNhbGwodGhpcy5fcGFyZW50KTtcclxuICAgIHZhciBpLGxlbiA9IHRoaXMubGF5ZXJzLmxlbmd0aDtcclxuICAgIGZvciggaSA9IDA7IGkgPCBsZW47IGkrPTEgKXtcclxuICAgICAgICBpZih0aGlzLmVsZW1lbnRzW2ldKXtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50c1tpXS5kZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5jaGVja0xheWVycyA9IFNWR1JlbmRlcmVyLnByb3RvdHlwZS5jaGVja0xheWVycztcclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5idWlsZEl0ZW0gPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRJdGVtO1xyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmJ1aWxkQWxsSXRlbXMgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRBbGxJdGVtcztcclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5idWlsZEVsZW1lbnRQYXJlbnRpbmcgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRFbGVtZW50UGFyZW50aW5nO1xyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUl0ZW0gPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlSXRlbTtcclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVJbWFnZSA9IFNWR1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVJbWFnZTtcclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVDb21wID0gU1ZHUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZUNvbXA7XHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU29saWQgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU29saWQ7XHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhcGUgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU2hhcGU7XHJcbklDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlVGV4dCA9IFNWR1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVUZXh0O1xyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUJhc2UgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQmFzZTtcclxuSUNvbXBFbGVtZW50LnByb3RvdHlwZS5hcHBlbmRFbGVtZW50SW5Qb3MgPSBTVkdSZW5kZXJlci5wcm90b3R5cGUuYXBwZW5kRWxlbWVudEluUG9zO1xyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmNoZWNrUGVuZGluZ0VsZW1lbnRzID0gU1ZHUmVuZGVyZXIucHJvdG90eXBlLmNoZWNrUGVuZGluZ0VsZW1lbnRzO1xyXG5JQ29tcEVsZW1lbnQucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50ID0gU1ZHUmVuZGVyZXIucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50O1xuZnVuY3Rpb24gSUltYWdlRWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAscGxhY2Vob2xkZXIpe1xyXG4gICAgdGhpcy5hc3NldERhdGEgPSBnbG9iYWxEYXRhLmdldEFzc2V0RGF0YShkYXRhLnJlZklkKTtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLHBsYWNlaG9sZGVyKTtcclxufVxyXG5jcmVhdGVFbGVtZW50KFNWR0Jhc2VFbGVtZW50LCBJSW1hZ2VFbGVtZW50KTtcclxuXHJcbklJbWFnZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuXHJcbiAgICB2YXIgYXNzZXRQYXRoID0gdGhpcy5nbG9iYWxEYXRhLmdldEFzc2V0c1BhdGgodGhpcy5hc3NldERhdGEpO1xyXG5cclxuICAgIHRoaXMuX3BhcmVudC5jcmVhdGVFbGVtZW50cy5jYWxsKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW5uZXJFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdpbWFnZScpO1xyXG4gICAgdGhpcy5pbm5lckVsZW0uc2V0QXR0cmlidXRlKCd3aWR0aCcsdGhpcy5hc3NldERhdGEudytcInB4XCIpO1xyXG4gICAgdGhpcy5pbm5lckVsZW0uc2V0QXR0cmlidXRlKCdoZWlnaHQnLHRoaXMuYXNzZXREYXRhLmgrXCJweFwiKTtcclxuICAgIHRoaXMuaW5uZXJFbGVtLnNldEF0dHJpYnV0ZSgncHJlc2VydmVBc3BlY3RSYXRpbycsJ3hNaWRZTWlkIHNsaWNlJyk7XHJcbiAgICB0aGlzLmlubmVyRWxlbS5zZXRBdHRyaWJ1dGVOUygnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsJ2hyZWYnLGFzc2V0UGF0aCk7XHJcbiAgICB0aGlzLm1hc2tlZEVsZW1lbnQgPSB0aGlzLmlubmVyRWxlbTtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuaW5uZXJFbGVtKTtcclxuICAgIGlmKHRoaXMuZGF0YS5sbil7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5kYXRhLmxuKTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZGF0YS5jbCl7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsdGhpcy5kYXRhLmNsKTtcclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5JSW1hZ2VFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICB2YXIgcmVuZGVyUGFyZW50ID0gdGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcyxwYXJlbnRNYXRyaXgpO1xyXG4gICAgaWYocmVuZGVyUGFyZW50PT09ZmFsc2Upe1xyXG4gICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuaGlkZGVuKXtcclxuICAgICAgICB0aGlzLnNob3coKTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgdGhpcy5maXJzdEZyYW1lID0gZmFsc2U7XHJcbiAgICB9XHJcbn07XHJcblxyXG5JSW1hZ2VFbGVtZW50LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMuX3BhcmVudC5kZXN0cm95LmNhbGwodGhpcy5fcGFyZW50KTtcclxuICAgIHRoaXMuaW5uZXJFbGVtID0gIG51bGw7XHJcbn07XG5mdW5jdGlvbiBJU29saWRFbGVtZW50KGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpe1xyXG4gICAgdGhpcy5fcGFyZW50LmNvbnN0cnVjdG9yLmNhbGwodGhpcyxkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKTtcclxufVxyXG5jcmVhdGVFbGVtZW50KFNWR0Jhc2VFbGVtZW50LCBJU29saWRFbGVtZW50KTtcclxuXHJcbklTb2xpZEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMuX3BhcmVudC5jcmVhdGVFbGVtZW50cy5jYWxsKHRoaXMpO1xyXG5cclxuICAgIHZhciByZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdyZWN0Jyk7XHJcbiAgICAvLy8vcmVjdC5zdHlsZS53aWR0aCA9IHRoaXMuZGF0YS5zdztcclxuICAgIC8vLy9yZWN0LnN0eWxlLmhlaWdodCA9IHRoaXMuZGF0YS5zaDtcclxuICAgIC8vLy9yZWN0LnN0eWxlLmZpbGwgPSB0aGlzLmRhdGEuc2M7XHJcbiAgICByZWN0LnNldEF0dHJpYnV0ZSgnd2lkdGgnLHRoaXMuZGF0YS5zdyk7XHJcbiAgICByZWN0LnNldEF0dHJpYnV0ZSgnaGVpZ2h0Jyx0aGlzLmRhdGEuc2gpO1xyXG4gICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLHRoaXMuZGF0YS5zYyk7XHJcbiAgICB0aGlzLmxheWVyRWxlbWVudC5hcHBlbmRDaGlsZChyZWN0KTtcclxuICAgIHRoaXMuaW5uZXJFbGVtID0gcmVjdDtcclxuICAgIGlmKHRoaXMuZGF0YS5sbil7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5kYXRhLmxuKTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZGF0YS5jbCl7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsdGhpcy5kYXRhLmNsKTtcclxuICAgIH1cclxufTtcclxuXHJcbklTb2xpZEVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZyYW1lID0gSUltYWdlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWU7XHJcbklTb2xpZEVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBJSW1hZ2VFbGVtZW50LnByb3RvdHlwZS5kZXN0cm95O1xyXG5cbnZhciBhbmltYXRpb25NYW5hZ2VyID0gKGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgbW9kdWxlT2IgPSB7fTtcclxuICAgIHZhciByZWdpc3RlcmVkQW5pbWF0aW9ucyA9IFtdO1xyXG4gICAgdmFyIGluaXRUaW1lID0gMDtcclxuICAgIHZhciBsZW4gPSAwO1xyXG4gICAgdmFyIGlkbGVkID0gdHJ1ZTtcclxuICAgIHZhciBwbGF5aW5nQW5pbWF0aW9uc051bSA9IDA7XHJcblxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlRWxlbWVudChldil7XHJcbiAgICAgICAgdmFyIGkgPSAwO1xyXG4gICAgICAgIHZhciBhbmltSXRlbSA9IGV2LnRhcmdldDtcclxuICAgICAgICB3aGlsZShpPGxlbikge1xyXG4gICAgICAgICAgICBpZiAocmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uID09PSBhbmltSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnMuc3BsaWNlKGksIDEpO1xyXG4gICAgICAgICAgICAgICAgaSAtPSAxO1xyXG4gICAgICAgICAgICAgICAgbGVuIC09IDE7XHJcbiAgICAgICAgICAgICAgICBpZighYW5pbUl0ZW0uaXNQYXVzZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgIHN1YnRyYWN0UGxheWluZ0NvdW50KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZWdpc3RlckFuaW1hdGlvbihlbGVtZW50LCBhbmltYXRpb25EYXRhKXtcclxuICAgICAgICBpZighZWxlbWVudCl7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaT0wO1xyXG4gICAgICAgIHdoaWxlKGk8bGVuKXtcclxuICAgICAgICAgICAgaWYocmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uZWxlbSA9PSBlbGVtZW50ICYmIHJlZ2lzdGVyZWRBbmltYXRpb25zW2ldLmVsZW0gIT09IG51bGwgKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZWdpc3RlcmVkQW5pbWF0aW9uc1tpXS5hbmltYXRpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSs9MTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGFuaW1JdGVtID0gbmV3IEFuaW1hdGlvbkl0ZW0oKTtcclxuICAgICAgICBzZXR1cEFuaW1hdGlvbihhbmltSXRlbSwgZWxlbWVudCk7XHJcbiAgICAgICAgYW5pbUl0ZW0uc2V0RGF0YShlbGVtZW50LCBhbmltYXRpb25EYXRhKTtcclxuICAgICAgICByZXR1cm4gYW5pbUl0ZW07XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYWRkUGxheWluZ0NvdW50KCl7XHJcbiAgICAgICAgcGxheWluZ0FuaW1hdGlvbnNOdW0gKz0gMTtcclxuICAgICAgICBhY3RpdmF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHN1YnRyYWN0UGxheWluZ0NvdW50KCl7XHJcbiAgICAgICAgcGxheWluZ0FuaW1hdGlvbnNOdW0gLT0gMTtcclxuICAgICAgICBpZihwbGF5aW5nQW5pbWF0aW9uc051bSA9PT0gMCl7XHJcbiAgICAgICAgICAgIGlkbGVkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0dXBBbmltYXRpb24oYW5pbUl0ZW0sIGVsZW1lbnQpe1xyXG4gICAgICAgIGFuaW1JdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2Rlc3Ryb3knLHJlbW92ZUVsZW1lbnQpO1xyXG4gICAgICAgIGFuaW1JdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ19hY3RpdmUnLGFkZFBsYXlpbmdDb3VudCk7XHJcbiAgICAgICAgYW5pbUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignX2lkbGUnLHN1YnRyYWN0UGxheWluZ0NvdW50KTtcclxuICAgICAgICByZWdpc3RlcmVkQW5pbWF0aW9ucy5wdXNoKHtlbGVtOiBlbGVtZW50LGFuaW1hdGlvbjphbmltSXRlbX0pO1xyXG4gICAgICAgIGxlbiArPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvYWRBbmltYXRpb24ocGFyYW1zKXtcclxuICAgICAgICB2YXIgYW5pbUl0ZW0gPSBuZXcgQW5pbWF0aW9uSXRlbSgpO1xyXG4gICAgICAgIHNldHVwQW5pbWF0aW9uKGFuaW1JdGVtLCBudWxsKTtcclxuICAgICAgICBhbmltSXRlbS5zZXRQYXJhbXMocGFyYW1zKTtcclxuICAgICAgICByZXR1cm4gYW5pbUl0ZW07XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIHNldFNwZWVkKHZhbCxhbmltYXRpb24pe1xyXG4gICAgICAgIHZhciBpO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHJlZ2lzdGVyZWRBbmltYXRpb25zW2ldLmFuaW1hdGlvbi5zZXRTcGVlZCh2YWwsIGFuaW1hdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNldERpcmVjdGlvbih2YWwsIGFuaW1hdGlvbil7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uLnNldERpcmVjdGlvbih2YWwsIGFuaW1hdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHBsYXkoYW5pbWF0aW9uKXtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICByZWdpc3RlcmVkQW5pbWF0aW9uc1tpXS5hbmltYXRpb24ucGxheShhbmltYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBtb3ZlRnJhbWUgKHZhbHVlLCBhbmltYXRpb24pIHtcclxuICAgICAgICBpbml0VGltZSA9IERhdGUubm93KCk7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uLm1vdmVGcmFtZSh2YWx1ZSxhbmltYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZXN1bWUobm93VGltZSkge1xyXG5cclxuICAgICAgICB2YXIgZWxhcHNlZFRpbWUgPSBub3dUaW1lIC0gaW5pdFRpbWU7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uLmFkdmFuY2VUaW1lKGVsYXBzZWRUaW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaW5pdFRpbWUgPSBub3dUaW1lO1xyXG4gICAgICAgIGlmKCFpZGxlZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc3VtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGZpcnN0KG5vd1RpbWUpe1xyXG4gICAgICAgIGluaXRUaW1lID0gbm93VGltZTtcclxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc3VtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcGF1c2UoYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uLnBhdXNlKGFuaW1hdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdvVG9BbmRTdG9wKHZhbHVlLGlzRnJhbWUsYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgdmFyIGk7XHJcbiAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgcmVnaXN0ZXJlZEFuaW1hdGlvbnNbaV0uYW5pbWF0aW9uLmdvVG9BbmRTdG9wKHZhbHVlLGlzRnJhbWUsYW5pbWF0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc3RvcChhbmltYXRpb24pIHtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICByZWdpc3RlcmVkQW5pbWF0aW9uc1tpXS5hbmltYXRpb24uc3RvcChhbmltYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0b2dnbGVQYXVzZShhbmltYXRpb24pIHtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICByZWdpc3RlcmVkQW5pbWF0aW9uc1tpXS5hbmltYXRpb24udG9nZ2xlUGF1c2UoYW5pbWF0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGVzdHJveShhbmltYXRpb24pIHtcclxuICAgICAgICB2YXIgaTtcclxuICAgICAgICBmb3IoaT0obGVuLTEpO2k+PTA7aS09MSl7XHJcbiAgICAgICAgICAgIHJlZ2lzdGVyZWRBbmltYXRpb25zW2ldLmFuaW1hdGlvbi5kZXN0cm95KGFuaW1hdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlYXJjaEFuaW1hdGlvbnMoYW5pbWF0aW9uRGF0YSwgc3RhbmRhbG9uZSwgcmVuZGVyZXIpe1xyXG4gICAgICAgIHZhciBhbmltRWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdib2R5bW92aW4nKTtcclxuICAgICAgICB2YXIgaSwgbGVuID0gYW5pbUVsZW1lbnRzLmxlbmd0aDtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBpZihyZW5kZXJlcil7XHJcbiAgICAgICAgICAgICAgICBhbmltRWxlbWVudHNbaV0uc2V0QXR0cmlidXRlKCdkYXRhLWJtLXR5cGUnLHJlbmRlcmVyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZWdpc3RlckFuaW1hdGlvbihhbmltRWxlbWVudHNbaV0sIGFuaW1hdGlvbkRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihzdGFuZGFsb25lICYmIGxlbiA9PT0gMCl7XHJcbiAgICAgICAgICAgIGlmKCFyZW5kZXJlcil7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJlciA9ICdzdmcnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTtcclxuICAgICAgICAgICAgYm9keS5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICAgICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBkaXYuc3R5bGUud2lkdGggPSAnMTAwJSc7XHJcbiAgICAgICAgICAgIGRpdi5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XHJcbiAgICAgICAgICAgIGRpdi5zZXRBdHRyaWJ1dGUoJ2RhdGEtYm0tdHlwZScscmVuZGVyZXIpO1xyXG4gICAgICAgICAgICBib2R5LmFwcGVuZENoaWxkKGRpdik7XHJcbiAgICAgICAgICAgIHJlZ2lzdGVyQW5pbWF0aW9uKGRpdiwgYW5pbWF0aW9uRGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlc2l6ZSgpe1xyXG4gICAgICAgIHZhciBpO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHJlZ2lzdGVyZWRBbmltYXRpb25zW2ldLmFuaW1hdGlvbi5yZXNpemUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc3RhcnQoKXtcclxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZpcnN0KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpe1xyXG4gICAgICAgIGlmKGlkbGVkKXtcclxuICAgICAgICAgICAgaWRsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmaXJzdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vc3RhcnQoKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KHN0YXJ0LDApO1xyXG5cclxuICAgIG1vZHVsZU9iLnJlZ2lzdGVyQW5pbWF0aW9uID0gcmVnaXN0ZXJBbmltYXRpb247XHJcbiAgICBtb2R1bGVPYi5sb2FkQW5pbWF0aW9uID0gbG9hZEFuaW1hdGlvbjtcclxuICAgIG1vZHVsZU9iLnNldFNwZWVkID0gc2V0U3BlZWQ7XHJcbiAgICBtb2R1bGVPYi5zZXREaXJlY3Rpb24gPSBzZXREaXJlY3Rpb247XHJcbiAgICBtb2R1bGVPYi5wbGF5ID0gcGxheTtcclxuICAgIG1vZHVsZU9iLm1vdmVGcmFtZSA9IG1vdmVGcmFtZTtcclxuICAgIG1vZHVsZU9iLnBhdXNlID0gcGF1c2U7XHJcbiAgICBtb2R1bGVPYi5zdG9wID0gc3RvcDtcclxuICAgIG1vZHVsZU9iLnRvZ2dsZVBhdXNlID0gdG9nZ2xlUGF1c2U7XHJcbiAgICBtb2R1bGVPYi5zZWFyY2hBbmltYXRpb25zID0gc2VhcmNoQW5pbWF0aW9ucztcclxuICAgIG1vZHVsZU9iLnJlc2l6ZSA9IHJlc2l6ZTtcclxuICAgIG1vZHVsZU9iLnN0YXJ0ID0gc3RhcnQ7XHJcbiAgICBtb2R1bGVPYi5nb1RvQW5kU3RvcCA9IGdvVG9BbmRTdG9wO1xyXG4gICAgbW9kdWxlT2IuZGVzdHJveSA9IGRlc3Ryb3k7XHJcbiAgICByZXR1cm4gbW9kdWxlT2I7XHJcbn0oKSk7XHJcblxudmFyIEFuaW1hdGlvbkl0ZW0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLl9jYnMgPSBbXTtcclxuICAgIHRoaXMubmFtZSA9ICcnO1xyXG4gICAgdGhpcy5wYXRoID0gJyc7XHJcbiAgICB0aGlzLmlzTG9hZGVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmN1cnJlbnRGcmFtZSA9IDA7XHJcbiAgICB0aGlzLmN1cnJlbnRSYXdGcmFtZSA9IDA7XHJcbiAgICB0aGlzLnRvdGFsRnJhbWVzID0gMDtcclxuICAgIHRoaXMuZnJhbWVSYXRlID0gMDtcclxuICAgIHRoaXMuZnJhbWVNdWx0ID0gMDtcclxuICAgIHRoaXMucGxheVNwZWVkID0gMTtcclxuICAgIHRoaXMucGxheURpcmVjdGlvbiA9IDE7XHJcbiAgICB0aGlzLnBlbmRpbmdFbGVtZW50cyA9IDA7XHJcbiAgICB0aGlzLnBsYXlDb3VudCA9IDA7XHJcbiAgICB0aGlzLnByZXJlbmRlckZyYW1lc0ZsYWcgPSB0cnVlO1xyXG4gICAgdGhpcy5hbmltYXRpb25EYXRhID0ge307XHJcbiAgICB0aGlzLmxheWVycyA9IFtdO1xyXG4gICAgdGhpcy5hc3NldHMgPSBbXTtcclxuICAgIHRoaXMuaXNQYXVzZWQgPSB0cnVlO1xyXG4gICAgdGhpcy5hdXRvcGxheSA9IGZhbHNlO1xyXG4gICAgdGhpcy5sb29wID0gdHJ1ZTtcclxuICAgIHRoaXMucmVuZGVyZXIgPSBudWxsO1xyXG4gICAgdGhpcy5hbmltYXRpb25JRCA9IHJhbmRvbVN0cmluZygxMCk7XHJcbiAgICB0aGlzLnNjYWxlTW9kZSA9ICdmaXQnO1xyXG4gICAgdGhpcy5hc3NldHNQYXRoID0gJyc7XHJcbiAgICB0aGlzLnRpbWVDb21wbGV0ZWQgPSAwO1xyXG4gICAgdGhpcy5zZWdtZW50UG9zID0gMDtcclxuICAgIHRoaXMuc3ViZnJhbWVFbmFibGVkID0gc3ViZnJhbWVFbmFibGVkO1xyXG4gICAgdGhpcy5zZWdtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5wZW5kaW5nU2VnbWVudCA9IGZhbHNlO1xyXG4gICAgdGhpcy5faWRsZSA9IHRydWU7XHJcbiAgICB0aGlzLnByb2plY3RJbnRlcmZhY2UgPSBQcm9qZWN0SW50ZXJmYWNlKCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5zZXRQYXJhbXMgPSBmdW5jdGlvbihwYXJhbXMpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGlmKHBhcmFtcy5jb250ZXh0KXtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBwYXJhbXMuY29udGV4dDtcclxuICAgIH1cclxuICAgIGlmKHBhcmFtcy53cmFwcGVyIHx8IHBhcmFtcy5jb250YWluZXIpe1xyXG4gICAgICAgIHRoaXMud3JhcHBlciA9IHBhcmFtcy53cmFwcGVyIHx8IHBhcmFtcy5jb250YWluZXI7XHJcbiAgICB9XHJcbiAgICB2YXIgYW5pbVR5cGUgPSBwYXJhbXMuYW5pbVR5cGUgPyBwYXJhbXMuYW5pbVR5cGUgOiBwYXJhbXMucmVuZGVyZXIgPyBwYXJhbXMucmVuZGVyZXIgOiAnc3ZnJztcclxuICAgIHN3aXRjaChhbmltVHlwZSl7XHJcbiAgICAgICAgY2FzZSAnY2FudmFzJzpcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBDYW52YXNSZW5kZXJlcih0aGlzLCBwYXJhbXMucmVuZGVyZXJTZXR0aW5ncyk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3N2Zyc6XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgU1ZHUmVuZGVyZXIodGhpcywgcGFyYW1zLnJlbmRlcmVyU2V0dGluZ3MpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdoeWJyaWQnOlxyXG4gICAgICAgIGNhc2UgJ2h0bWwnOlxyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgSHlicmlkUmVuZGVyZXIodGhpcywgcGFyYW1zLnJlbmRlcmVyU2V0dGluZ3MpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgIH1cclxuICAgIHRoaXMucmVuZGVyZXIuc2V0UHJvamVjdEludGVyZmFjZSh0aGlzLnByb2plY3RJbnRlcmZhY2UpO1xyXG4gICAgdGhpcy5hbmltVHlwZSA9IGFuaW1UeXBlO1xyXG5cclxuICAgIGlmKHBhcmFtcy5sb29wID09PSAnJyB8fCBwYXJhbXMubG9vcCA9PT0gbnVsbCl7XHJcbiAgICB9ZWxzZSBpZihwYXJhbXMubG9vcCA9PT0gZmFsc2Upe1xyXG4gICAgICAgIHRoaXMubG9vcCA9IGZhbHNlO1xyXG4gICAgfWVsc2UgaWYocGFyYW1zLmxvb3AgPT09IHRydWUpe1xyXG4gICAgICAgIHRoaXMubG9vcCA9IHRydWU7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLmxvb3AgPSBwYXJzZUludChwYXJhbXMubG9vcCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmF1dG9wbGF5ID0gJ2F1dG9wbGF5JyBpbiBwYXJhbXMgPyBwYXJhbXMuYXV0b3BsYXkgOiB0cnVlO1xyXG4gICAgdGhpcy5uYW1lID0gcGFyYW1zLm5hbWUgPyBwYXJhbXMubmFtZSA6ICAnJztcclxuICAgIHRoaXMucHJlcmVuZGVyRnJhbWVzRmxhZyA9ICdwcmVyZW5kZXInIGluIHBhcmFtcyA/IHBhcmFtcy5wcmVyZW5kZXIgOiB0cnVlO1xyXG4gICAgdGhpcy5hdXRvbG9hZFNlZ21lbnRzID0gcGFyYW1zLmhhc093blByb3BlcnR5KCdhdXRvbG9hZFNlZ21lbnRzJykgPyBwYXJhbXMuYXV0b2xvYWRTZWdtZW50cyA6ICB0cnVlO1xyXG4gICAgaWYocGFyYW1zLmFuaW1hdGlvbkRhdGEpe1xyXG4gICAgICAgIHNlbGYuY29uZmlnQW5pbWF0aW9uKHBhcmFtcy5hbmltYXRpb25EYXRhKTtcclxuICAgIH1lbHNlIGlmKHBhcmFtcy5wYXRoKXtcclxuICAgICAgICBpZihwYXJhbXMucGF0aC5zdWJzdHIoLTQpICE9ICdqc29uJyl7XHJcbiAgICAgICAgICAgIGlmIChwYXJhbXMucGF0aC5zdWJzdHIoLTEsIDEpICE9ICcvJykge1xyXG4gICAgICAgICAgICAgICAgcGFyYW1zLnBhdGggKz0gJy8nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHBhcmFtcy5wYXRoICs9ICdkYXRhLmpzb24nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgICAgIGlmKHBhcmFtcy5wYXRoLmxhc3RJbmRleE9mKCdcXFxcJykgIT0gLTEpe1xyXG4gICAgICAgICAgICB0aGlzLnBhdGggPSBwYXJhbXMucGF0aC5zdWJzdHIoMCxwYXJhbXMucGF0aC5sYXN0SW5kZXhPZignXFxcXCcpKzEpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLnBhdGggPSBwYXJhbXMucGF0aC5zdWJzdHIoMCxwYXJhbXMucGF0aC5sYXN0SW5kZXhPZignLycpKzEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFzc2V0c1BhdGggPSBwYXJhbXMuYXNzZXRzUGF0aDtcclxuICAgICAgICB0aGlzLmZpbGVOYW1lID0gcGFyYW1zLnBhdGguc3Vic3RyKHBhcmFtcy5wYXRoLmxhc3RJbmRleE9mKCcvJykrMSk7XHJcbiAgICAgICAgdGhpcy5maWxlTmFtZSA9IHRoaXMuZmlsZU5hbWUuc3Vic3RyKDAsdGhpcy5maWxlTmFtZS5sYXN0SW5kZXhPZignLmpzb24nKSk7XHJcbiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHBhcmFtcy5wYXRoLCB0cnVlKTtcclxuICAgICAgICB4aHIuc2VuZCgpO1xyXG4gICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PSA0KSB7XHJcbiAgICAgICAgICAgICAgICBpZih4aHIuc3RhdHVzID09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jb25maWdBbmltYXRpb24oSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY29uZmlnQW5pbWF0aW9uKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9Y2F0Y2goZXJyKXtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUuc2V0RGF0YSA9IGZ1bmN0aW9uICh3cmFwcGVyLCBhbmltYXRpb25EYXRhKSB7XHJcbiAgICB2YXIgcGFyYW1zID0ge1xyXG4gICAgICAgIHdyYXBwZXI6IHdyYXBwZXIsXHJcbiAgICAgICAgYW5pbWF0aW9uRGF0YTogYW5pbWF0aW9uRGF0YSA/ICh0eXBlb2YgYW5pbWF0aW9uRGF0YSAgPT09IFwib2JqZWN0XCIpID8gYW5pbWF0aW9uRGF0YSA6IEpTT04ucGFyc2UoYW5pbWF0aW9uRGF0YSkgOiBudWxsXHJcbiAgICB9O1xyXG4gICAgdmFyIHdyYXBwZXJBdHRyaWJ1dGVzID0gd3JhcHBlci5hdHRyaWJ1dGVzO1xyXG5cclxuICAgIHBhcmFtcy5wYXRoID0gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLWFuaW1hdGlvbi1wYXRoJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYW5pbWF0aW9uLXBhdGgnKS52YWx1ZSA6IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1ibS1wYXRoJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tcGF0aCcpLnZhbHVlIDogIHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnYm0tcGF0aCcpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1wYXRoJykudmFsdWUgOiAnJztcclxuICAgIHBhcmFtcy5hbmltVHlwZSA9IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1hbmltLXR5cGUnKSA/IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1hbmltLXR5cGUnKS52YWx1ZSA6IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1ibS10eXBlJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tdHlwZScpLnZhbHVlIDogd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS10eXBlJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2JtLXR5cGUnKS52YWx1ZSA6ICB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tcmVuZGVyZXInKSA/IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1ibS1yZW5kZXJlcicpLnZhbHVlIDogd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1yZW5kZXJlcicpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1yZW5kZXJlcicpLnZhbHVlIDogJ2NhbnZhcyc7XHJcblxyXG4gICAgdmFyIGxvb3AgPSB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYW5pbS1sb29wJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYW5pbS1sb29wJykudmFsdWUgOiAgd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLWJtLWxvb3AnKSA/IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1ibS1sb29wJykudmFsdWUgOiAgd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1sb29wJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2JtLWxvb3AnKS52YWx1ZSA6ICcnO1xyXG4gICAgaWYobG9vcCA9PT0gJycpe1xyXG4gICAgfWVsc2UgaWYobG9vcCA9PT0gJ2ZhbHNlJyl7XHJcbiAgICAgICAgcGFyYW1zLmxvb3AgPSBmYWxzZTtcclxuICAgIH1lbHNlIGlmKGxvb3AgPT09ICd0cnVlJyl7XHJcbiAgICAgICAgcGFyYW1zLmxvb3AgPSB0cnVlO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgcGFyYW1zLmxvb3AgPSBwYXJzZUludChsb29wKTtcclxuICAgIH1cclxuICAgIHZhciBhdXRvcGxheSA9IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1hbmltLWF1dG9wbGF5JykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYW5pbS1hdXRvcGxheScpLnZhbHVlIDogIHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnZGF0YS1ibS1hdXRvcGxheScpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLWJtLWF1dG9wbGF5JykudmFsdWUgOiAgd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1hdXRvcGxheScpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1hdXRvcGxheScpLnZhbHVlIDogdHJ1ZTtcclxuICAgIHBhcmFtcy5hdXRvcGxheSA9IGF1dG9wbGF5ICE9PSBcImZhbHNlXCI7XHJcblxyXG4gICAgcGFyYW1zLm5hbWUgPSB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtbmFtZScpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLW5hbWUnKS52YWx1ZSA6ICB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tbmFtZScpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLWJtLW5hbWUnKS52YWx1ZSA6IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnYm0tbmFtZScpID8gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1uYW1lJykudmFsdWUgOiAgJyc7XHJcbiAgICB2YXIgcHJlcmVuZGVyID0gd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdkYXRhLWFuaW0tcHJlcmVuZGVyJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYW5pbS1wcmVyZW5kZXInKS52YWx1ZSA6ICB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tcHJlcmVuZGVyJykgPyB3cmFwcGVyQXR0cmlidXRlcy5nZXROYW1lZEl0ZW0oJ2RhdGEtYm0tcHJlcmVuZGVyJykudmFsdWUgOiAgd3JhcHBlckF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCdibS1wcmVyZW5kZXInKSA/IHdyYXBwZXJBdHRyaWJ1dGVzLmdldE5hbWVkSXRlbSgnYm0tcHJlcmVuZGVyJykudmFsdWUgOiAnJztcclxuXHJcbiAgICBpZihwcmVyZW5kZXIgPT09ICdmYWxzZScpe1xyXG4gICAgICAgIHBhcmFtcy5wcmVyZW5kZXIgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMuc2V0UGFyYW1zKHBhcmFtcyk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5pbmNsdWRlTGF5ZXJzID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgaWYoZGF0YS5vcCA+IHRoaXMuYW5pbWF0aW9uRGF0YS5vcCl7XHJcbiAgICAgICAgdGhpcy5hbmltYXRpb25EYXRhLm9wID0gZGF0YS5vcDtcclxuICAgICAgICB0aGlzLnRvdGFsRnJhbWVzID0gTWF0aC5mbG9vcihkYXRhLm9wIC0gdGhpcy5hbmltYXRpb25EYXRhLmlwKTtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkRhdGEudGYgPSB0aGlzLnRvdGFsRnJhbWVzO1xyXG4gICAgfVxyXG4gICAgdmFyIGxheWVycyA9IHRoaXMuYW5pbWF0aW9uRGF0YS5sYXllcnM7XHJcbiAgICB2YXIgaSwgbGVuID0gbGF5ZXJzLmxlbmd0aDtcclxuICAgIHZhciBuZXdMYXllcnMgPSBkYXRhLmxheWVycztcclxuICAgIHZhciBqLCBqTGVuID0gbmV3TGF5ZXJzLmxlbmd0aDtcclxuICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgIGkgPSAwO1xyXG4gICAgICAgIHdoaWxlKGk8bGVuKXtcclxuICAgICAgICAgICAgaWYobGF5ZXJzW2ldLmlkID09IG5ld0xheWVyc1tqXS5pZCl7XHJcbiAgICAgICAgICAgICAgICBsYXllcnNbaV0gPSBuZXdMYXllcnNbal07XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYoZGF0YS5jaGFycyB8fCBkYXRhLmZvbnRzKXtcclxuICAgICAgICB0aGlzLnJlbmRlcmVyLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuYWRkQ2hhcnMoZGF0YS5jaGFycyk7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmFkZEZvbnRzKGRhdGEuZm9udHMsIHRoaXMucmVuZGVyZXIuZ2xvYmFsRGF0YS5kZWZzKTtcclxuICAgIH1cclxuICAgIGlmKGRhdGEuYXNzZXRzKXtcclxuICAgICAgICBsZW4gPSBkYXRhLmFzc2V0cy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpe1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbkRhdGEuYXNzZXRzLnB1c2goZGF0YS5hc3NldHNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vdGhpcy50b3RhbEZyYW1lcyA9IDUwO1xyXG4gICAgLy90aGlzLmFuaW1hdGlvbkRhdGEudGYgPSA1MDtcclxuICAgIHRoaXMuYW5pbWF0aW9uRGF0YS5fX2NvbXBsZXRlID0gZmFsc2U7XHJcbiAgICBkYXRhTWFuYWdlci5jb21wbGV0ZURhdGEodGhpcy5hbmltYXRpb25EYXRhLHRoaXMucmVuZGVyZXIuZ2xvYmFsRGF0YS5mb250TWFuYWdlcik7XHJcbiAgICB0aGlzLnJlbmRlcmVyLmluY2x1ZGVMYXllcnMoZGF0YS5sYXllcnMpO1xyXG4gICAgaWYoZXhwcmVzc2lvbnNQbHVnaW4pe1xyXG4gICAgICAgIGV4cHJlc3Npb25zUGx1Z2luLmluaXRFeHByZXNzaW9ucyh0aGlzKTtcclxuICAgIH1cclxuICAgIHRoaXMucmVuZGVyZXIucmVuZGVyRnJhbWUobnVsbCk7XHJcbiAgICB0aGlzLmxvYWROZXh0U2VnbWVudCgpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUubG9hZE5leHRTZWdtZW50ID0gZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgc2VnbWVudHMgPSB0aGlzLmFuaW1hdGlvbkRhdGEuc2VnbWVudHM7XHJcbiAgICBpZighc2VnbWVudHMgfHwgc2VnbWVudHMubGVuZ3RoID09PSAwIHx8ICF0aGlzLmF1dG9sb2FkU2VnbWVudHMpe1xyXG4gICAgICAgIHRoaXMudHJpZ2dlcignZGF0YV9yZWFkeScpO1xyXG4gICAgICAgIHRoaXMudGltZUNvbXBsZXRlZCA9IHRoaXMuYW5pbWF0aW9uRGF0YS50ZjtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgc2VnbWVudCA9IHNlZ21lbnRzLnNoaWZ0KCk7XHJcbiAgICB0aGlzLnRpbWVDb21wbGV0ZWQgPSBzZWdtZW50LnRpbWUgKiB0aGlzLmZyYW1lUmF0ZTtcclxuICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBzZWdtZW50UGF0aCA9IHRoaXMucGF0aCt0aGlzLmZpbGVOYW1lKydfJyArIHRoaXMuc2VnbWVudFBvcyArICcuanNvbic7XHJcbiAgICB0aGlzLnNlZ21lbnRQb3MgKz0gMTtcclxuICAgIHhoci5vcGVuKCdHRVQnLCBzZWdtZW50UGF0aCwgdHJ1ZSk7XHJcbiAgICB4aHIuc2VuZCgpO1xyXG4gICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT0gNCkge1xyXG4gICAgICAgICAgICBpZih4aHIuc3RhdHVzID09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICBzZWxmLmluY2x1ZGVMYXllcnMoSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5pbmNsdWRlTGF5ZXJzKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICAgIH1jYXRjaChlcnIpe1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmxvYWRTZWdtZW50cyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIHNlZ21lbnRzID0gdGhpcy5hbmltYXRpb25EYXRhLnNlZ21lbnRzO1xyXG4gICAgaWYoIXNlZ21lbnRzKSB7XHJcbiAgICAgICAgdGhpcy50aW1lQ29tcGxldGVkID0gdGhpcy5hbmltYXRpb25EYXRhLnRmO1xyXG4gICAgfVxyXG4gICAgdGhpcy5sb2FkTmV4dFNlZ21lbnQoKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmNvbmZpZ0FuaW1hdGlvbiA9IGZ1bmN0aW9uIChhbmltRGF0YSkge1xyXG4gICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgIGlmKHRoaXMucmVuZGVyZXIgJiYgdGhpcy5yZW5kZXJlci5kZXN0cm95ZWQpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8vY29uc29sZS5sb2coSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhbmltRGF0YSkpKTtcclxuICAgIC8vYW5pbURhdGEudyA9IE1hdGgucm91bmQoYW5pbURhdGEudy9ibGl0dGVyKTtcclxuICAgIC8vYW5pbURhdGEuaCA9IE1hdGgucm91bmQoYW5pbURhdGEuaC9ibGl0dGVyKTtcclxuICAgIHRoaXMuYW5pbWF0aW9uRGF0YSA9IGFuaW1EYXRhO1xyXG4gICAgdGhpcy50b3RhbEZyYW1lcyA9IE1hdGguZmxvb3IodGhpcy5hbmltYXRpb25EYXRhLm9wIC0gdGhpcy5hbmltYXRpb25EYXRhLmlwKTtcclxuICAgIHRoaXMuYW5pbWF0aW9uRGF0YS50ZiA9IHRoaXMudG90YWxGcmFtZXM7XHJcbiAgICB0aGlzLnJlbmRlcmVyLmNvbmZpZ0FuaW1hdGlvbihhbmltRGF0YSk7XHJcbiAgICBpZighYW5pbURhdGEuYXNzZXRzKXtcclxuICAgICAgICBhbmltRGF0YS5hc3NldHMgPSBbXTtcclxuICAgIH1cclxuICAgIGlmKGFuaW1EYXRhLmNvbXBzKSB7XHJcbiAgICAgICAgYW5pbURhdGEuYXNzZXRzID0gYW5pbURhdGEuYXNzZXRzLmNvbmNhdChhbmltRGF0YS5jb21wcyk7XHJcbiAgICAgICAgYW5pbURhdGEuY29tcHMgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJlci5zZWFyY2hFeHRyYUNvbXBvc2l0aW9ucyhhbmltRGF0YS5hc3NldHMpO1xyXG5cclxuICAgIHRoaXMubGF5ZXJzID0gdGhpcy5hbmltYXRpb25EYXRhLmxheWVycztcclxuICAgIHRoaXMuYXNzZXRzID0gdGhpcy5hbmltYXRpb25EYXRhLmFzc2V0cztcclxuICAgIHRoaXMuZnJhbWVSYXRlID0gdGhpcy5hbmltYXRpb25EYXRhLmZyO1xyXG4gICAgdGhpcy5maXJzdEZyYW1lID0gTWF0aC5yb3VuZCh0aGlzLmFuaW1hdGlvbkRhdGEuaXApO1xyXG4gICAgdGhpcy5mcmFtZU11bHQgPSB0aGlzLmFuaW1hdGlvbkRhdGEuZnIgLyAxMDAwO1xyXG4gICAgdGhpcy50cmlnZ2VyKCdjb25maWdfcmVhZHknKTtcclxuICAgIHRoaXMuaW1hZ2VQcmVsb2FkZXIgPSBuZXcgSW1hZ2VQcmVsb2FkZXIoKTtcclxuICAgIHRoaXMuaW1hZ2VQcmVsb2FkZXIuc2V0QXNzZXRzUGF0aCh0aGlzLmFzc2V0c1BhdGgpO1xyXG4gICAgdGhpcy5pbWFnZVByZWxvYWRlci5zZXRQYXRoKHRoaXMucGF0aCk7XHJcbiAgICB0aGlzLmltYWdlUHJlbG9hZGVyLmxvYWRBc3NldHMoYW5pbURhdGEuYXNzZXRzLCBmdW5jdGlvbihlcnIpIHtcclxuICAgICAgICBpZighZXJyKSB7XHJcbiAgICAgICAgICAgIF90aGlzLnRyaWdnZXIoJ2xvYWRlZF9pbWFnZXMnKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMubG9hZFNlZ21lbnRzKCk7XHJcbiAgICB0aGlzLnVwZGFGcmFtZU1vZGlmaWVyKCk7XHJcbiAgICBpZih0aGlzLnJlbmRlcmVyLmdsb2JhbERhdGEuZm9udE1hbmFnZXIpe1xyXG4gICAgICAgIHRoaXMud2FpdEZvckZvbnRzTG9hZGVkKCk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBkYXRhTWFuYWdlci5jb21wbGV0ZURhdGEodGhpcy5hbmltYXRpb25EYXRhLHRoaXMucmVuZGVyZXIuZ2xvYmFsRGF0YS5mb250TWFuYWdlcik7XHJcbiAgICAgICAgdGhpcy5jaGVja0xvYWRlZCgpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUud2FpdEZvckZvbnRzTG9hZGVkID0gKGZ1bmN0aW9uKCl7XHJcbiAgICBmdW5jdGlvbiBjaGVja0ZvbnRzTG9hZGVkKCl7XHJcbiAgICAgICAgaWYodGhpcy5yZW5kZXJlci5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmxvYWRlZCl7XHJcbiAgICAgICAgICAgIGRhdGFNYW5hZ2VyLmNvbXBsZXRlRGF0YSh0aGlzLmFuaW1hdGlvbkRhdGEsdGhpcy5yZW5kZXJlci5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyKTtcclxuICAgICAgICAgICAgLy90aGlzLnJlbmRlcmVyLmJ1aWxkSXRlbXModGhpcy5hbmltYXRpb25EYXRhLmxheWVycyk7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tMb2FkZWQoKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgc2V0VGltZW91dChjaGVja0ZvbnRzTG9hZGVkLmJpbmQodGhpcyksMjApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24oKXtcclxuICAgICAgICBjaGVja0ZvbnRzTG9hZGVkLmJpbmQodGhpcykoKTtcclxuICAgIH1cclxufSgpKTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5wZW5kaW5nRWxlbWVudHMgKz0gMTtcclxufVxyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUuZWxlbWVudExvYWRlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMucGVuZGluZ0VsZW1lbnRzLS07XHJcbiAgICB0aGlzLmNoZWNrTG9hZGVkKCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5jaGVja0xvYWRlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICh0aGlzLnBlbmRpbmdFbGVtZW50cyA9PT0gMCkge1xyXG4gICAgICAgIGlmKGV4cHJlc3Npb25zUGx1Z2luKXtcclxuICAgICAgICAgICAgZXhwcmVzc2lvbnNQbHVnaW4uaW5pdEV4cHJlc3Npb25zKHRoaXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlbmRlcmVyLmluaXRJdGVtcygpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgdGhpcy50cmlnZ2VyKCdET01Mb2FkZWQnKTtcclxuICAgICAgICB9LmJpbmQodGhpcyksMCk7XHJcbiAgICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5nb3RvRnJhbWUoKTtcclxuICAgICAgICBpZih0aGlzLmF1dG9wbGF5KXtcclxuICAgICAgICAgICAgdGhpcy5wbGF5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5yZW5kZXJlci51cGRhdGVDb250YWluZXJTaXplKCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5zZXRTdWJmcmFtZSA9IGZ1bmN0aW9uKGZsYWcpe1xyXG4gICAgdGhpcy5zdWJmcmFtZUVuYWJsZWQgPSBmbGFnID8gdHJ1ZSA6IGZhbHNlO1xyXG59XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5nb3RvRnJhbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZih0aGlzLnN1YmZyYW1lRW5hYmxlZCl7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50RnJhbWUgPSB0aGlzLmN1cnJlbnRSYXdGcmFtZTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMuY3VycmVudEZyYW1lID0gTWF0aC5mbG9vcih0aGlzLmN1cnJlbnRSYXdGcmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYodGhpcy50aW1lQ29tcGxldGVkICE9PSB0aGlzLnRvdGFsRnJhbWVzICYmIHRoaXMuY3VycmVudEZyYW1lID4gdGhpcy50aW1lQ29tcGxldGVkKXtcclxuICAgICAgICB0aGlzLmN1cnJlbnRGcmFtZSA9IHRoaXMudGltZUNvbXBsZXRlZDtcclxuICAgIH1cclxuICAgIHRoaXMudHJpZ2dlcignZW50ZXJGcmFtZScpO1xyXG4gICAgdGhpcy5yZW5kZXJGcmFtZSgpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZih0aGlzLmlzTG9hZGVkID09PSBmYWxzZSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgLy9jb25zb2xlLmxvZygndGhpcy5jdXJyZW50RnJhbWU6Jyx0aGlzLmN1cnJlbnRGcmFtZSArIHRoaXMuZmlyc3RGcmFtZSk7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlckZyYW1lKHRoaXMuY3VycmVudEZyYW1lICsgdGhpcy5maXJzdEZyYW1lKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gICAgaWYobmFtZSAmJiB0aGlzLm5hbWUgIT0gbmFtZSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5pc1BhdXNlZCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy5pc1BhdXNlZCA9IGZhbHNlO1xyXG4gICAgICAgIGlmKHRoaXMuX2lkbGUpe1xyXG4gICAgICAgICAgICB0aGlzLl9pZGxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignX2FjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICAgIGlmKG5hbWUgJiYgdGhpcy5uYW1lICE9IG5hbWUpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuaXNQYXVzZWQgPT09IGZhbHNlKXtcclxuICAgICAgICB0aGlzLmlzUGF1c2VkID0gdHJ1ZTtcclxuICAgICAgICBpZighdGhpcy5wZW5kaW5nU2VnbWVudCl7XHJcbiAgICAgICAgICAgIHRoaXMuX2lkbGUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ19pZGxlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUudG9nZ2xlUGF1c2UgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gICAgaWYobmFtZSAmJiB0aGlzLm5hbWUgIT0gbmFtZSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5pc1BhdXNlZCA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy5wbGF5KCk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLnBhdXNlKCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICAgIGlmKG5hbWUgJiYgdGhpcy5uYW1lICE9IG5hbWUpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMucGF1c2UoKTtcclxuICAgIHRoaXMuY3VycmVudEZyYW1lID0gdGhpcy5jdXJyZW50UmF3RnJhbWUgPSAwO1xyXG4gICAgdGhpcy5wbGF5Q291bnQgPSAwO1xyXG4gICAgdGhpcy5nb3RvRnJhbWUoKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmdvVG9BbmRTdG9wID0gZnVuY3Rpb24gKHZhbHVlLCBpc0ZyYW1lLCBuYW1lKSB7XHJcbiAgICBpZihuYW1lICYmIHRoaXMubmFtZSAhPSBuYW1lKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZihpc0ZyYW1lKXtcclxuICAgICAgICB0aGlzLnNldEN1cnJlbnRSYXdGcmFtZVZhbHVlKHZhbHVlKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMuc2V0Q3VycmVudFJhd0ZyYW1lVmFsdWUodmFsdWUgKiB0aGlzLmZyYW1lTW9kaWZpZXIpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5wYXVzZSgpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUuZ29Ub0FuZFBsYXkgPSBmdW5jdGlvbiAodmFsdWUsIGlzRnJhbWUsIG5hbWUpIHtcclxuICAgIHRoaXMuZ29Ub0FuZFN0b3AodmFsdWUsIGlzRnJhbWUsIG5hbWUpO1xyXG4gICAgdGhpcy5wbGF5KCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5hZHZhbmNlVGltZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgaWYodGhpcy5wZW5kaW5nU2VnbWVudCl7XHJcbiAgICAgICAgdGhpcy5wZW5kaW5nU2VnbWVudCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYWRqdXN0U2VnbWVudCh0aGlzLnNlZ21lbnRzLnNoaWZ0KCkpO1xyXG4gICAgICAgIGlmKHRoaXMuaXNQYXVzZWQpe1xyXG4gICAgICAgICAgICB0aGlzLnBsYXkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuaXNQYXVzZWQgPT09IHRydWUgfHwgdGhpcy5pc0xvYWRlZCA9PT0gZmFsc2UpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnNldEN1cnJlbnRSYXdGcmFtZVZhbHVlKHRoaXMuY3VycmVudFJhd0ZyYW1lICsgdmFsdWUgKiB0aGlzLmZyYW1lTW9kaWZpZXIpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUudXBkYXRlQW5pbWF0aW9uID0gZnVuY3Rpb24gKHBlcmMpIHtcclxuICAgIHRoaXMuc2V0Q3VycmVudFJhd0ZyYW1lVmFsdWUodGhpcy50b3RhbEZyYW1lcyAqIHBlcmMpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUubW92ZUZyYW1lID0gZnVuY3Rpb24gKHZhbHVlLCBuYW1lKSB7XHJcbiAgICBpZihuYW1lICYmIHRoaXMubmFtZSAhPSBuYW1lKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnNldEN1cnJlbnRSYXdGcmFtZVZhbHVlKHRoaXMuY3VycmVudFJhd0ZyYW1lK3ZhbHVlKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmFkanVzdFNlZ21lbnQgPSBmdW5jdGlvbihhcnIpe1xyXG4gICAgdGhpcy5wbGF5Q291bnQgPSAwO1xyXG4gICAgaWYoYXJyWzFdIDwgYXJyWzBdKXtcclxuICAgICAgICBpZih0aGlzLmZyYW1lTW9kaWZpZXIgPiAwKXtcclxuICAgICAgICAgICAgaWYodGhpcy5wbGF5U3BlZWQgPCAwKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3BlZWQoLXRoaXMucGxheVNwZWVkKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0RGlyZWN0aW9uKC0xKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRvdGFsRnJhbWVzID0gYXJyWzBdIC0gYXJyWzFdO1xyXG4gICAgICAgIHRoaXMuZmlyc3RGcmFtZSA9IGFyclsxXTtcclxuICAgICAgICB0aGlzLnNldEN1cnJlbnRSYXdGcmFtZVZhbHVlKHRoaXMudG90YWxGcmFtZXMgLSAwLjAxKTtcclxuICAgIH0gZWxzZSBpZihhcnJbMV0gPiBhcnJbMF0pe1xyXG4gICAgICAgIGlmKHRoaXMuZnJhbWVNb2RpZmllciA8IDApe1xyXG4gICAgICAgICAgICBpZih0aGlzLnBsYXlTcGVlZCA8IDApe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTcGVlZCgtdGhpcy5wbGF5U3BlZWQpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXREaXJlY3Rpb24oMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy50b3RhbEZyYW1lcyA9IGFyclsxXSAtIGFyclswXTtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBhcnJbMF07XHJcbiAgICAgICAgdGhpcy5zZXRDdXJyZW50UmF3RnJhbWVWYWx1ZSgwKTtcclxuICAgIH1cclxuICAgIHRoaXMudHJpZ2dlcignc2VnbWVudFN0YXJ0Jyk7XHJcbn07XHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnNldFNlZ21lbnQgPSBmdW5jdGlvbiAoaW5pdCxlbmQpIHtcclxuICAgIHZhciBwZW5kaW5nRnJhbWUgPSAtMTtcclxuICAgIGlmKHRoaXMuaXNQYXVzZWQpIHtcclxuICAgICAgICBpZiAodGhpcy5jdXJyZW50UmF3RnJhbWUgKyB0aGlzLmZpcnN0RnJhbWUgPCBpbml0KSB7XHJcbiAgICAgICAgICAgIHBlbmRpbmdGcmFtZSA9IGluaXQ7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnRSYXdGcmFtZSArIHRoaXMuZmlyc3RGcmFtZSA+IGVuZCkge1xyXG4gICAgICAgICAgICBwZW5kaW5nRnJhbWUgPSBlbmQgLSBpbml0IC0gMC4wMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5maXJzdEZyYW1lID0gaW5pdDtcclxuICAgIHRoaXMudG90YWxGcmFtZXMgPSBlbmQgLSBpbml0O1xyXG4gICAgaWYocGVuZGluZ0ZyYW1lICE9PSAtMSkge1xyXG4gICAgICAgIHRoaXMuZ29Ub0FuZFN0b3AocGVuZGluZ0ZyYW1lLHRydWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5wbGF5U2VnbWVudHMgPSBmdW5jdGlvbiAoYXJyLGZvcmNlRmxhZykge1xyXG4gICAgaWYodHlwZW9mIGFyclswXSA9PT0gJ29iamVjdCcpe1xyXG4gICAgICAgIHZhciBpLCBsZW4gPSBhcnIubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHRoaXMuc2VnbWVudHMucHVzaChhcnJbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMuc2VnbWVudHMucHVzaChhcnIpO1xyXG4gICAgfVxyXG4gICAgaWYoZm9yY2VGbGFnKXtcclxuICAgICAgICB0aGlzLmFkanVzdFNlZ21lbnQodGhpcy5zZWdtZW50cy5zaGlmdCgpKTtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuaXNQYXVzZWQpe1xyXG4gICAgICAgIHRoaXMucGxheSgpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUucmVzZXRTZWdtZW50cyA9IGZ1bmN0aW9uIChmb3JjZUZsYWcpIHtcclxuICAgIHRoaXMuc2VnbWVudHMubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuc2VnbWVudHMucHVzaChbdGhpcy5hbmltYXRpb25EYXRhLmlwKnRoaXMuZnJhbWVSYXRlLE1hdGguZmxvb3IodGhpcy5hbmltYXRpb25EYXRhLm9wIC0gdGhpcy5hbmltYXRpb25EYXRhLmlwK3RoaXMuYW5pbWF0aW9uRGF0YS5pcCp0aGlzLmZyYW1lUmF0ZSldKTtcclxuICAgIGlmKGZvcmNlRmxhZyl7XHJcbiAgICAgICAgdGhpcy5hZGp1c3RTZWdtZW50KHRoaXMuc2VnbWVudHMuc2hpZnQoKSk7XHJcbiAgICB9XHJcbn07XHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmNoZWNrU2VnbWVudHMgPSBmdW5jdGlvbigpe1xyXG4gICAgaWYodGhpcy5zZWdtZW50cy5sZW5ndGgpe1xyXG4gICAgICAgIHRoaXMucGVuZGluZ1NlZ21lbnQgPSB0cnVlO1xyXG4gICAgfVxyXG59XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gICAgaWYobmFtZSAmJiB0aGlzLm5hbWUgIT0gbmFtZSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJlci5kZXN0cm95KCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKG5hbWUpIHtcclxuICAgIGlmKChuYW1lICYmIHRoaXMubmFtZSAhPSBuYW1lKSB8fCAodGhpcy5yZW5kZXJlciAmJiB0aGlzLnJlbmRlcmVyLmRlc3Ryb3llZCkpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMucmVuZGVyZXIuZGVzdHJveSgpO1xyXG4gICAgdGhpcy50cmlnZ2VyKCdkZXN0cm95Jyk7XHJcbiAgICB0aGlzLl9jYnMgPSBudWxsO1xyXG4gICAgdGhpcy5vbkVudGVyRnJhbWUgPSB0aGlzLm9uTG9vcENvbXBsZXRlID0gdGhpcy5vbkNvbXBsZXRlID0gdGhpcy5vblNlZ21lbnRTdGFydCA9IHRoaXMub25EZXN0cm95ID0gbnVsbDtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnNldEN1cnJlbnRSYXdGcmFtZVZhbHVlID0gZnVuY3Rpb24odmFsdWUpe1xyXG4gICAgdGhpcy5jdXJyZW50UmF3RnJhbWUgPSB2YWx1ZTtcclxuICAgIC8vY29uc29sZS5sb2codGhpcy50b3RhbEZyYW1lcyk7XHJcbiAgICBpZiAodGhpcy5jdXJyZW50UmF3RnJhbWUgPj0gdGhpcy50b3RhbEZyYW1lcykge1xyXG4gICAgICAgIHRoaXMuY2hlY2tTZWdtZW50cygpO1xyXG4gICAgICAgIGlmKHRoaXMubG9vcCA9PT0gZmFsc2Upe1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRSYXdGcmFtZSA9IHRoaXMudG90YWxGcmFtZXMgLSAwLjAxO1xyXG4gICAgICAgICAgICB0aGlzLmdvdG9GcmFtZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnBhdXNlKCk7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignY29tcGxldGUnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2xvb3BDb21wbGV0ZScpO1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlDb3VudCArPSAxO1xyXG4gICAgICAgICAgICBpZigodGhpcy5sb29wICE9PSB0cnVlICYmIHRoaXMucGxheUNvdW50ID09IHRoaXMubG9vcCkgfHwgdGhpcy5wZW5kaW5nU2VnbWVudCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRSYXdGcmFtZSA9IHRoaXMudG90YWxGcmFtZXMgLSAwLjAxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nb3RvRnJhbWUoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlcignY29tcGxldGUnKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFJhd0ZyYW1lID0gdGhpcy5jdXJyZW50UmF3RnJhbWUgJSB0aGlzLnRvdGFsRnJhbWVzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnRSYXdGcmFtZSA8IDApIHtcclxuICAgICAgICB0aGlzLmNoZWNrU2VnbWVudHMoKTtcclxuICAgICAgICB0aGlzLnBsYXlDb3VudCAtPSAxO1xyXG4gICAgICAgIGlmKHRoaXMucGxheUNvdW50IDwgMCl7XHJcbiAgICAgICAgICAgIHRoaXMucGxheUNvdW50ID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5sb29wID09PSBmYWxzZSAgfHwgdGhpcy5wZW5kaW5nU2VnbWVudCl7XHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFJhd0ZyYW1lID0gMDtcclxuICAgICAgICAgICAgdGhpcy5nb3RvRnJhbWUoKTtcclxuICAgICAgICAgICAgdGhpcy5wYXVzZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2NvbXBsZXRlJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy50cmlnZ2VyKCdsb29wQ29tcGxldGUnKTtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50UmF3RnJhbWUgPSAodGhpcy50b3RhbEZyYW1lcyArIHRoaXMuY3VycmVudFJhd0ZyYW1lKSAlIHRoaXMudG90YWxGcmFtZXM7XHJcbiAgICAgICAgICAgIHRoaXMuZ290b0ZyYW1lKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5nb3RvRnJhbWUoKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnNldFNwZWVkID0gZnVuY3Rpb24gKHZhbCkge1xyXG4gICAgdGhpcy5wbGF5U3BlZWQgPSB2YWw7XHJcbiAgICB0aGlzLnVwZGFGcmFtZU1vZGlmaWVyKCk7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5zZXREaXJlY3Rpb24gPSBmdW5jdGlvbiAodmFsKSB7XHJcbiAgICB0aGlzLnBsYXlEaXJlY3Rpb24gPSB2YWwgPCAwID8gLTEgOiAxO1xyXG4gICAgdGhpcy51cGRhRnJhbWVNb2RpZmllcigpO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUudXBkYUZyYW1lTW9kaWZpZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLmZyYW1lTW9kaWZpZXIgPSB0aGlzLmZyYW1lTXVsdCAqIHRoaXMucGxheVNwZWVkICogdGhpcy5wbGF5RGlyZWN0aW9uO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUuZ2V0UGF0aCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB0aGlzLnBhdGg7XHJcbn07XHJcblxyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS5nZXRBc3NldHNQYXRoID0gZnVuY3Rpb24gKGFzc2V0RGF0YSkge1xyXG4gICAgdmFyIHBhdGggPSAnJztcclxuICAgIGlmKHRoaXMuYXNzZXRzUGF0aCl7XHJcbiAgICAgICAgdmFyIGltYWdlUGF0aCA9IGFzc2V0RGF0YS5wO1xyXG4gICAgICAgIGlmKGltYWdlUGF0aC5pbmRleE9mKCdpbWFnZXMvJykgIT09IC0xKXtcclxuICAgICAgICAgICAgaW1hZ2VQYXRoID0gaW1hZ2VQYXRoLnNwbGl0KCcvJylbMV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBhdGggPSB0aGlzLmFzc2V0c1BhdGggKyBpbWFnZVBhdGg7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHBhdGggPSB0aGlzLnBhdGg7XHJcbiAgICAgICAgcGF0aCArPSBhc3NldERhdGEudSA/IGFzc2V0RGF0YS51IDogJyc7XHJcbiAgICAgICAgcGF0aCArPSBhc3NldERhdGEucDtcclxuICAgIH1cclxuICAgIHJldHVybiBwYXRoO1xyXG59O1xyXG5cclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUuZ2V0QXNzZXREYXRhID0gZnVuY3Rpb24gKGlkKSB7XHJcbiAgICB2YXIgaSA9IDAsIGxlbiA9IHRoaXMuYXNzZXRzLmxlbmd0aDtcclxuICAgIHdoaWxlIChpIDwgbGVuKSB7XHJcbiAgICAgICAgaWYoaWQgPT0gdGhpcy5hc3NldHNbaV0uaWQpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hc3NldHNbaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGkgKz0gMTtcclxuICAgIH1cclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLnJlbmRlcmVyLmhpZGUoKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnNob3coKTtcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmdldEFzc2V0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB0aGlzLmFzc2V0cztcclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLnRyaWdnZXIgPSBmdW5jdGlvbihuYW1lKXtcclxuICAgIGlmKHRoaXMuX2NicyAmJiB0aGlzLl9jYnNbbmFtZV0pe1xyXG4gICAgICAgIHN3aXRjaChuYW1lKXtcclxuICAgICAgICAgICAgY2FzZSAnZW50ZXJGcmFtZSc6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXJFdmVudChuYW1lLG5ldyBCTUVudGVyRnJhbWVFdmVudChuYW1lLHRoaXMuY3VycmVudEZyYW1lLHRoaXMudG90YWxGcmFtZXMsdGhpcy5mcmFtZU11bHQpKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdsb29wQ29tcGxldGUnOlxyXG4gICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQobmFtZSxuZXcgQk1Db21wbGV0ZUxvb3BFdmVudChuYW1lLHRoaXMubG9vcCx0aGlzLnBsYXlDb3VudCx0aGlzLmZyYW1lTXVsdCkpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2NvbXBsZXRlJzpcclxuICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KG5hbWUsbmV3IEJNQ29tcGxldGVFdmVudChuYW1lLHRoaXMuZnJhbWVNdWx0KSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnc2VnbWVudFN0YXJ0JzpcclxuICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KG5hbWUsbmV3IEJNU2VnbWVudFN0YXJ0RXZlbnQobmFtZSx0aGlzLmZpcnN0RnJhbWUsdGhpcy50b3RhbEZyYW1lcykpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgJ2Rlc3Ryb3knOlxyXG4gICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQobmFtZSxuZXcgQk1EZXN0cm95RXZlbnQobmFtZSx0aGlzKSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KG5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKG5hbWUgPT09ICdlbnRlckZyYW1lJyAmJiB0aGlzLm9uRW50ZXJGcmFtZSl7XHJcbiAgICAgICAgdGhpcy5vbkVudGVyRnJhbWUuY2FsbCh0aGlzLG5ldyBCTUVudGVyRnJhbWVFdmVudChuYW1lLHRoaXMuY3VycmVudEZyYW1lLHRoaXMudG90YWxGcmFtZXMsdGhpcy5mcmFtZU11bHQpKTtcclxuICAgIH1cclxuICAgIGlmKG5hbWUgPT09ICdsb29wQ29tcGxldGUnICYmIHRoaXMub25Mb29wQ29tcGxldGUpe1xyXG4gICAgICAgIHRoaXMub25Mb29wQ29tcGxldGUuY2FsbCh0aGlzLG5ldyBCTUNvbXBsZXRlTG9vcEV2ZW50KG5hbWUsdGhpcy5sb29wLHRoaXMucGxheUNvdW50LHRoaXMuZnJhbWVNdWx0KSk7XHJcbiAgICB9XHJcbiAgICBpZihuYW1lID09PSAnY29tcGxldGUnICYmIHRoaXMub25Db21wbGV0ZSl7XHJcbiAgICAgICAgdGhpcy5vbkNvbXBsZXRlLmNhbGwodGhpcyxuZXcgQk1Db21wbGV0ZUV2ZW50KG5hbWUsdGhpcy5mcmFtZU11bHQpKTtcclxuICAgIH1cclxuICAgIGlmKG5hbWUgPT09ICdzZWdtZW50U3RhcnQnICYmIHRoaXMub25TZWdtZW50U3RhcnQpe1xyXG4gICAgICAgIHRoaXMub25TZWdtZW50U3RhcnQuY2FsbCh0aGlzLG5ldyBCTVNlZ21lbnRTdGFydEV2ZW50KG5hbWUsdGhpcy5maXJzdEZyYW1lLHRoaXMudG90YWxGcmFtZXMpKTtcclxuICAgIH1cclxuICAgIGlmKG5hbWUgPT09ICdkZXN0cm95JyAmJiB0aGlzLm9uRGVzdHJveSl7XHJcbiAgICAgICAgdGhpcy5vbkRlc3Ryb3kuY2FsbCh0aGlzLG5ldyBCTURlc3Ryb3lFdmVudChuYW1lLHRoaXMpKTtcclxuICAgIH1cclxufTtcclxuXHJcbkFuaW1hdGlvbkl0ZW0ucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBfYWRkRXZlbnRMaXN0ZW5lcjtcclxuQW5pbWF0aW9uSXRlbS5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IF9yZW1vdmVFdmVudExpc3RlbmVyO1xyXG5BbmltYXRpb25JdGVtLnByb3RvdHlwZS50cmlnZ2VyRXZlbnQgPSBfdHJpZ2dlckV2ZW50O1xyXG5cbmZ1bmN0aW9uIENhbnZhc1JlbmRlcmVyKGFuaW1hdGlvbkl0ZW0sIGNvbmZpZyl7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0gPSBhbmltYXRpb25JdGVtO1xyXG4gICAgdGhpcy5yZW5kZXJDb25maWcgPSB7XHJcbiAgICAgICAgY2xlYXJDYW52YXM6IChjb25maWcgJiYgY29uZmlnLmNsZWFyQ2FudmFzICE9PSB1bmRlZmluZWQpID8gY29uZmlnLmNsZWFyQ2FudmFzIDogdHJ1ZSxcclxuICAgICAgICBjb250ZXh0OiAoY29uZmlnICYmIGNvbmZpZy5jb250ZXh0KSB8fCBudWxsLFxyXG4gICAgICAgIHByb2dyZXNzaXZlTG9hZDogKGNvbmZpZyAmJiBjb25maWcucHJvZ3Jlc3NpdmVMb2FkKSB8fCBmYWxzZSxcclxuICAgICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiAoY29uZmlnICYmIGNvbmZpZy5wcmVzZXJ2ZUFzcGVjdFJhdGlvKSB8fCAneE1pZFlNaWQgbWVldCcsXHJcbiAgICAgICAgY2xhc3NOYW1lOiAoY29uZmlnICYmIGNvbmZpZy5jbGFzc05hbWUpIHx8ICcnXHJcbiAgICB9O1xyXG4gICAgdGhpcy5yZW5kZXJDb25maWcuZHByID0gKGNvbmZpZyAmJiBjb25maWcuZHByKSB8fCAxO1xyXG4gICAgaWYgKHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyKSB7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJDb25maWcuZHByID0gKGNvbmZpZyAmJiBjb25maWcuZHByKSB8fCB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxO1xyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJlZEZyYW1lID0gLTE7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEgPSB7XHJcbiAgICAgICAgZnJhbWVOdW06IC0xXHJcbiAgICB9O1xyXG4gICAgdGhpcy5jb250ZXh0RGF0YSA9IHtcclxuICAgICAgICBzYXZlZCA6IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDoxNX0pLFxyXG4gICAgICAgIHNhdmVkT3A6IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDoxNX0pLFxyXG4gICAgICAgIGNBcnJQb3MgOiAwLFxyXG4gICAgICAgIGNUciA6IG5ldyBNYXRyaXgoKSxcclxuICAgICAgICBjTyA6IDFcclxuICAgIH07XHJcbiAgICB2YXIgaSwgbGVuID0gMTU7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIHRoaXMuY29udGV4dERhdGEuc2F2ZWRbaV0gPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6MTZ9KTtcclxuICAgIH1cclxuICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcclxuICAgIHRoaXMucGVuZGluZ0VsZW1lbnRzID0gW107XHJcbiAgICB0aGlzLnRyYW5zZm9ybU1hdCA9IG5ldyBNYXRyaXgoKTtcclxuICAgIHRoaXMuY29tcGxldGVMYXllcnMgPSBmYWxzZTtcclxufVxyXG5leHRlbmRQcm90b3R5cGUoQmFzZVJlbmRlcmVyLENhbnZhc1JlbmRlcmVyKTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVCYXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZCYXNlRWxlbWVudChkYXRhLCB0aGlzLCB0aGlzLmdsb2JhbERhdGEpO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVNoYXBlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZTaGFwZUVsZW1lbnQoZGF0YSwgdGhpcywgdGhpcy5nbG9iYWxEYXRhKTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVUZXh0ID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZUZXh0RWxlbWVudChkYXRhLCB0aGlzLCB0aGlzLmdsb2JhbERhdGEpO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZUltYWdlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZJbWFnZUVsZW1lbnQoZGF0YSwgdGhpcywgdGhpcy5nbG9iYWxEYXRhKTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVDb21wID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZDb21wRWxlbWVudChkYXRhLCB0aGlzLCB0aGlzLmdsb2JhbERhdGEpO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVNvbGlkID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgQ1ZTb2xpZEVsZW1lbnQoZGF0YSwgdGhpcywgdGhpcy5nbG9iYWxEYXRhKTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jdHhUcmFuc2Zvcm0gPSBmdW5jdGlvbihwcm9wcyl7XHJcbiAgICBpZihwcm9wc1swXSA9PT0gMSAmJiBwcm9wc1sxXSA9PT0gMCAmJiBwcm9wc1s0XSA9PT0gMCAmJiBwcm9wc1s1XSA9PT0gMSAmJiBwcm9wc1sxMl0gPT09IDAgJiYgcHJvcHNbMTNdID09PSAwKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZighdGhpcy5yZW5kZXJDb25maWcuY2xlYXJDYW52YXMpe1xyXG4gICAgICAgIHRoaXMuY2FudmFzQ29udGV4dC50cmFuc2Zvcm0ocHJvcHNbMF0scHJvcHNbMV0scHJvcHNbNF0scHJvcHNbNV0scHJvcHNbMTJdLHByb3BzWzEzXSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy50cmFuc2Zvcm1NYXQuY2xvbmVGcm9tUHJvcHMocHJvcHMpO1xyXG4gICAgdGhpcy50cmFuc2Zvcm1NYXQudHJhbnNmb3JtKHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzBdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzFdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzJdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzNdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzRdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzVdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzZdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzddLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzhdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzldLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzEwXSx0aGlzLmNvbnRleHREYXRhLmNUci5wcm9wc1sxMV0sdGhpcy5jb250ZXh0RGF0YS5jVHIucHJvcHNbMTJdLHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzWzEzXSx0aGlzLmNvbnRleHREYXRhLmNUci5wcm9wc1sxNF0sdGhpcy5jb250ZXh0RGF0YS5jVHIucHJvcHNbMTVdKVxyXG4gICAgLy90aGlzLmNvbnRleHREYXRhLmNUci50cmFuc2Zvcm0ocHJvcHNbMF0scHJvcHNbMV0scHJvcHNbMl0scHJvcHNbM10scHJvcHNbNF0scHJvcHNbNV0scHJvcHNbNl0scHJvcHNbN10scHJvcHNbOF0scHJvcHNbOV0scHJvcHNbMTBdLHByb3BzWzExXSxwcm9wc1sxMl0scHJvcHNbMTNdLHByb3BzWzE0XSxwcm9wc1sxNV0pO1xyXG4gICAgdGhpcy5jb250ZXh0RGF0YS5jVHIuY2xvbmVGcm9tUHJvcHModGhpcy50cmFuc2Zvcm1NYXQucHJvcHMpO1xyXG4gICAgdmFyIHRyUHJvcHMgPSB0aGlzLmNvbnRleHREYXRhLmNUci5wcm9wcztcclxuICAgIHRoaXMuY2FudmFzQ29udGV4dC5zZXRUcmFuc2Zvcm0odHJQcm9wc1swXSx0clByb3BzWzFdLHRyUHJvcHNbNF0sdHJQcm9wc1s1XSx0clByb3BzWzEyXSx0clByb3BzWzEzXSk7XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3R4T3BhY2l0eSA9IGZ1bmN0aW9uKG9wKXtcclxuICAgIGlmKG9wID09PSAxKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZighdGhpcy5yZW5kZXJDb25maWcuY2xlYXJDYW52YXMpe1xyXG4gICAgICAgIHRoaXMuY2FudmFzQ29udGV4dC5nbG9iYWxBbHBoYSAqPSBvcCA8IDAgPyAwIDogb3A7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jb250ZXh0RGF0YS5jTyAqPSBvcCA8IDAgPyAwIDogb3A7XHJcbiAgICB0aGlzLmNhbnZhc0NvbnRleHQuZ2xvYmFsQWxwaGEgPSB0aGlzLmNvbnRleHREYXRhLmNPO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKCF0aGlzLnJlbmRlckNvbmZpZy5jbGVhckNhbnZhcyl7XHJcbiAgICAgICAgdGhpcy5jYW52YXNDb250ZXh0LnJlc3RvcmUoKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLmNvbnRleHREYXRhLmNBcnJQb3MgPSAwO1xyXG4gICAgdGhpcy5jb250ZXh0RGF0YS5jVHIucmVzZXQoKTtcclxuICAgIHRoaXMuY29udGV4dERhdGEuY08gPSAxO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLnNhdmUgPSBmdW5jdGlvbihhY3Rpb25GbGFnKXtcclxuICAgIGlmKCF0aGlzLnJlbmRlckNvbmZpZy5jbGVhckNhbnZhcyl7XHJcbiAgICAgICAgdGhpcy5jYW52YXNDb250ZXh0LnNhdmUoKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZihhY3Rpb25GbGFnKXtcclxuICAgICAgICB0aGlzLmNhbnZhc0NvbnRleHQuc2F2ZSgpO1xyXG4gICAgfVxyXG4gICAgdmFyIHByb3BzID0gdGhpcy5jb250ZXh0RGF0YS5jVHIucHJvcHM7XHJcbiAgICBpZih0aGlzLmNvbnRleHREYXRhLnNhdmVkW3RoaXMuY29udGV4dERhdGEuY0FyclBvc10gPT09IG51bGwgfHwgdGhpcy5jb250ZXh0RGF0YS5zYXZlZFt0aGlzLmNvbnRleHREYXRhLmNBcnJQb3NdID09PSB1bmRlZmluZWQpe1xyXG4gICAgICAgIHRoaXMuY29udGV4dERhdGEuc2F2ZWRbdGhpcy5jb250ZXh0RGF0YS5jQXJyUG9zXSA9IG5ldyBBcnJheSgxNik7XHJcbiAgICB9XHJcbiAgICB2YXIgaSxhcnIgPSB0aGlzLmNvbnRleHREYXRhLnNhdmVkW3RoaXMuY29udGV4dERhdGEuY0FyclBvc107XHJcbiAgICBmb3IoaT0wO2k8MTY7aSs9MSl7XHJcbiAgICAgICAgYXJyW2ldID0gcHJvcHNbaV07XHJcbiAgICB9XHJcbiAgICB0aGlzLmNvbnRleHREYXRhLnNhdmVkT3BbdGhpcy5jb250ZXh0RGF0YS5jQXJyUG9zXSA9IHRoaXMuY29udGV4dERhdGEuY087XHJcbiAgICB0aGlzLmNvbnRleHREYXRhLmNBcnJQb3MgKz0gMTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5yZXN0b3JlID0gZnVuY3Rpb24oYWN0aW9uRmxhZyl7XHJcbiAgICBpZighdGhpcy5yZW5kZXJDb25maWcuY2xlYXJDYW52YXMpe1xyXG4gICAgICAgIHRoaXMuY2FudmFzQ29udGV4dC5yZXN0b3JlKCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYoYWN0aW9uRmxhZyl7XHJcbiAgICAgICAgdGhpcy5jYW52YXNDb250ZXh0LnJlc3RvcmUoKTtcclxuICAgIH1cclxuICAgIHRoaXMuY29udGV4dERhdGEuY0FyclBvcyAtPSAxO1xyXG4gICAgdmFyIHBvcHBlZCA9IHRoaXMuY29udGV4dERhdGEuc2F2ZWRbdGhpcy5jb250ZXh0RGF0YS5jQXJyUG9zXTtcclxuICAgIHZhciBpLGFyciA9IHRoaXMuY29udGV4dERhdGEuY1RyLnByb3BzO1xyXG4gICAgZm9yKGk9MDtpPDE2O2krPTEpe1xyXG4gICAgICAgIGFycltpXSA9IHBvcHBlZFtpXTtcclxuICAgIH1cclxuICAgIHRoaXMuY2FudmFzQ29udGV4dC5zZXRUcmFuc2Zvcm0ocG9wcGVkWzBdLHBvcHBlZFsxXSxwb3BwZWRbNF0scG9wcGVkWzVdLHBvcHBlZFsxMl0scG9wcGVkWzEzXSk7XHJcbiAgICBwb3BwZWQgPSB0aGlzLmNvbnRleHREYXRhLnNhdmVkT3BbdGhpcy5jb250ZXh0RGF0YS5jQXJyUG9zXTtcclxuICAgIHRoaXMuY29udGV4dERhdGEuY08gPSBwb3BwZWQ7XHJcbiAgICB0aGlzLmNhbnZhc0NvbnRleHQuZ2xvYmFsQWxwaGEgPSBwb3BwZWQ7XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY29uZmlnQW5pbWF0aW9uID0gZnVuY3Rpb24oYW5pbURhdGEpe1xyXG4gICAgaWYodGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIpe1xyXG4gICAgICAgIHRoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLnN0eWxlLndpZHRoID0gJzEwMCUnO1xyXG4gICAgICAgIHRoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xyXG4gICAgICAgIC8vdGhpcy5hbmltYXRpb25JdGVtLmNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlM2QoMCwwLDApJztcclxuICAgICAgICAvL3RoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ3RyYW5zbGF0ZTNkKDAsMCwwKSc7XHJcbiAgICAgICAgdGhpcy5hbmltYXRpb25JdGVtLmNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm1PcmlnaW4gPSB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLnN0eWxlLm1velRyYW5zZm9ybU9yaWdpbiA9IHRoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIuc3R5bGUud2Via2l0VHJhbnNmb3JtT3JpZ2luID0gdGhpcy5hbmltYXRpb25JdGVtLmNvbnRhaW5lci5zdHlsZVsnLXdlYmtpdC10cmFuc2Zvcm0nXSA9IFwiMHB4IDBweCAwcHhcIjtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkl0ZW0ud3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyKTtcclxuICAgICAgICB0aGlzLmNhbnZhc0NvbnRleHQgPSB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAgICAgaWYodGhpcy5yZW5kZXJDb25maWcuY2xhc3NOYW1lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsIHRoaXMucmVuZGVyQ29uZmlnLmNsYXNzTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdGhpcy5jYW52YXNDb250ZXh0ID0gdGhpcy5yZW5kZXJDb25maWcuY29udGV4dDtcclxuICAgIH1cclxuICAgIHRoaXMuZGF0YSA9IGFuaW1EYXRhO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQgPSB0aGlzLmNhbnZhc0NvbnRleHQ7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIgPSB0aGlzO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmlzRGFzaGVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEudG90YWxGcmFtZXMgPSBNYXRoLmZsb29yKGFuaW1EYXRhLnRmKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5jb21wV2lkdGggPSBhbmltRGF0YS53O1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmNvbXBIZWlnaHQgPSBhbmltRGF0YS5oO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZyYW1lUmF0ZSA9IGFuaW1EYXRhLmZyO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZyYW1lSWQgPSAwO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplID0ge1xyXG4gICAgICAgIHc6IGFuaW1EYXRhLncsXHJcbiAgICAgICAgaDogYW5pbURhdGEuaFxyXG4gICAgfTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5wcm9ncmVzc2l2ZUxvYWQgPSB0aGlzLnJlbmRlckNvbmZpZy5wcm9ncmVzc2l2ZUxvYWQ7XHJcbiAgICB0aGlzLmxheWVycyA9IGFuaW1EYXRhLmxheWVycztcclxuICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzID0ge307XHJcbiAgICB0aGlzLnRyYW5zZm9ybUNhbnZhcy53ID0gYW5pbURhdGEudztcclxuICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzLmggPSBhbmltRGF0YS5oO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyID0gbmV3IEZvbnRNYW5hZ2VyKCk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuYWRkQ2hhcnMoYW5pbURhdGEuY2hhcnMpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmFkZEZvbnRzKGFuaW1EYXRhLmZvbnRzLGRvY3VtZW50LmJvZHkpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmdldEFzc2V0RGF0YSA9IHRoaXMuYW5pbWF0aW9uSXRlbS5nZXRBc3NldERhdGEuYmluZCh0aGlzLmFuaW1hdGlvbkl0ZW0pO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmdldEFzc2V0c1BhdGggPSB0aGlzLmFuaW1hdGlvbkl0ZW0uZ2V0QXNzZXRzUGF0aC5iaW5kKHRoaXMuYW5pbWF0aW9uSXRlbSk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZWxlbWVudExvYWRlZCA9IHRoaXMuYW5pbWF0aW9uSXRlbS5lbGVtZW50TG9hZGVkLmJpbmQodGhpcy5hbmltYXRpb25JdGVtKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5hZGRQZW5kaW5nRWxlbWVudCA9IHRoaXMuYW5pbWF0aW9uSXRlbS5hZGRQZW5kaW5nRWxlbWVudC5iaW5kKHRoaXMuYW5pbWF0aW9uSXRlbSk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEudHJhbnNmb3JtQ2FudmFzID0gdGhpcy50cmFuc2Zvcm1DYW52YXM7XHJcbiAgICB0aGlzLmVsZW1lbnRzID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOmFuaW1EYXRhLmxheWVycy5sZW5ndGh9KTtcclxuXHJcbiAgICB0aGlzLnVwZGF0ZUNvbnRhaW5lclNpemUoKTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS51cGRhdGVDb250YWluZXJTaXplID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGVsZW1lbnRXaWR0aCxlbGVtZW50SGVpZ2h0O1xyXG4gICAgaWYodGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIgJiYgdGhpcy5hbmltYXRpb25JdGVtLmNvbnRhaW5lcil7XHJcbiAgICAgICAgZWxlbWVudFdpZHRoID0gdGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAgZWxlbWVudEhlaWdodCA9IHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyLm9mZnNldEhlaWdodDtcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLnNldEF0dHJpYnV0ZSgnd2lkdGgnLGVsZW1lbnRXaWR0aCAqIHRoaXMucmVuZGVyQ29uZmlnLmRwciApO1xyXG4gICAgICAgIHRoaXMuYW5pbWF0aW9uSXRlbS5jb250YWluZXIuc2V0QXR0cmlidXRlKCdoZWlnaHQnLGVsZW1lbnRIZWlnaHQgKiB0aGlzLnJlbmRlckNvbmZpZy5kcHIpO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgZWxlbWVudFdpZHRoID0gdGhpcy5jYW52YXNDb250ZXh0LmNhbnZhcy53aWR0aCAqIHRoaXMucmVuZGVyQ29uZmlnLmRwcjtcclxuICAgICAgICBlbGVtZW50SGVpZ2h0ID0gdGhpcy5jYW52YXNDb250ZXh0LmNhbnZhcy5oZWlnaHQgKiB0aGlzLnJlbmRlckNvbmZpZy5kcHI7XHJcbiAgICB9XHJcbiAgICB2YXIgZWxlbWVudFJlbCxhbmltYXRpb25SZWw7XHJcbiAgICBpZih0aGlzLnJlbmRlckNvbmZpZy5wcmVzZXJ2ZUFzcGVjdFJhdGlvLmluZGV4T2YoJ21lZXQnKSAhPT0gLTEgfHwgdGhpcy5yZW5kZXJDb25maWcucHJlc2VydmVBc3BlY3RSYXRpby5pbmRleE9mKCdzbGljZScpICE9PSAtMSl7XHJcbiAgICAgICAgdmFyIHBhciA9IHRoaXMucmVuZGVyQ29uZmlnLnByZXNlcnZlQXNwZWN0UmF0aW8uc3BsaXQoJyAnKTtcclxuICAgICAgICB2YXIgZmlsbFR5cGUgPSBwYXJbMV0gfHwgJ21lZXQnO1xyXG4gICAgICAgIHZhciBwb3MgPSBwYXJbMF0gfHwgJ3hNaWRZTWlkJztcclxuICAgICAgICB2YXIgeFBvcyA9IHBvcy5zdWJzdHIoMCw0KTtcclxuICAgICAgICB2YXIgeVBvcyA9IHBvcy5zdWJzdHIoNCk7XHJcbiAgICAgICAgZWxlbWVudFJlbCA9IGVsZW1lbnRXaWR0aC9lbGVtZW50SGVpZ2h0O1xyXG4gICAgICAgIGFuaW1hdGlvblJlbCA9IHRoaXMudHJhbnNmb3JtQ2FudmFzLncvdGhpcy50cmFuc2Zvcm1DYW52YXMuaDtcclxuICAgICAgICBpZihhbmltYXRpb25SZWw+ZWxlbWVudFJlbCAmJiBmaWxsVHlwZSA9PT0gJ21lZXQnIHx8IGFuaW1hdGlvblJlbDxlbGVtZW50UmVsICYmIGZpbGxUeXBlID09PSAnc2xpY2UnKXtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3ggPSBlbGVtZW50V2lkdGgvKHRoaXMudHJhbnNmb3JtQ2FudmFzLncvdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3kgPSBlbGVtZW50V2lkdGgvKHRoaXMudHJhbnNmb3JtQ2FudmFzLncvdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3ggPSBlbGVtZW50SGVpZ2h0Lyh0aGlzLnRyYW5zZm9ybUNhbnZhcy5oIC8gdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3kgPSBlbGVtZW50SGVpZ2h0Lyh0aGlzLnRyYW5zZm9ybUNhbnZhcy5oIC8gdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHhQb3MgPT09ICd4TWlkJyAmJiAoKGFuaW1hdGlvblJlbDxlbGVtZW50UmVsICYmIGZpbGxUeXBlPT09J21lZXQnKSB8fCAoYW5pbWF0aW9uUmVsPmVsZW1lbnRSZWwgJiYgZmlsbFR5cGUgPT09ICdzbGljZScpKSl7XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzLnR4ID0gKGVsZW1lbnRXaWR0aC10aGlzLnRyYW5zZm9ybUNhbnZhcy53KihlbGVtZW50SGVpZ2h0L3RoaXMudHJhbnNmb3JtQ2FudmFzLmgpKS8yKnRoaXMucmVuZGVyQ29uZmlnLmRwcjtcclxuICAgICAgICB9IGVsc2UgaWYoeFBvcyA9PT0gJ3hNYXgnICYmICgoYW5pbWF0aW9uUmVsPGVsZW1lbnRSZWwgJiYgZmlsbFR5cGU9PT0nbWVldCcpIHx8IChhbmltYXRpb25SZWw+ZWxlbWVudFJlbCAmJiBmaWxsVHlwZSA9PT0gJ3NsaWNlJykpKXtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMudHggPSAoZWxlbWVudFdpZHRoLXRoaXMudHJhbnNmb3JtQ2FudmFzLncqKGVsZW1lbnRIZWlnaHQvdGhpcy50cmFuc2Zvcm1DYW52YXMuaCkpKnRoaXMucmVuZGVyQ29uZmlnLmRwcjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybUNhbnZhcy50eCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHlQb3MgPT09ICdZTWlkJyAmJiAoKGFuaW1hdGlvblJlbD5lbGVtZW50UmVsICYmIGZpbGxUeXBlPT09J21lZXQnKSB8fCAoYW5pbWF0aW9uUmVsPGVsZW1lbnRSZWwgJiYgZmlsbFR5cGUgPT09ICdzbGljZScpKSl7XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzLnR5ID0gKChlbGVtZW50SGVpZ2h0LXRoaXMudHJhbnNmb3JtQ2FudmFzLmgqKGVsZW1lbnRXaWR0aC90aGlzLnRyYW5zZm9ybUNhbnZhcy53KSkvMikqdGhpcy5yZW5kZXJDb25maWcuZHByO1xyXG4gICAgICAgIH0gZWxzZSBpZih5UG9zID09PSAnWU1heCcgJiYgKChhbmltYXRpb25SZWw+ZWxlbWVudFJlbCAmJiBmaWxsVHlwZT09PSdtZWV0JykgfHwgKGFuaW1hdGlvblJlbDxlbGVtZW50UmVsICYmIGZpbGxUeXBlID09PSAnc2xpY2UnKSkpe1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybUNhbnZhcy50eSA9ICgoZWxlbWVudEhlaWdodC10aGlzLnRyYW5zZm9ybUNhbnZhcy5oKihlbGVtZW50V2lkdGgvdGhpcy50cmFuc2Zvcm1DYW52YXMudykpKSp0aGlzLnJlbmRlckNvbmZpZy5kcHI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMudHkgPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9ZWxzZSBpZih0aGlzLnJlbmRlckNvbmZpZy5wcmVzZXJ2ZUFzcGVjdFJhdGlvID09ICdub25lJyl7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3ggPSBlbGVtZW50V2lkdGgvKHRoaXMudHJhbnNmb3JtQ2FudmFzLncvdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICB0aGlzLnRyYW5zZm9ybUNhbnZhcy5zeSA9IGVsZW1lbnRIZWlnaHQvKHRoaXMudHJhbnNmb3JtQ2FudmFzLmgvdGhpcy5yZW5kZXJDb25maWcuZHByKTtcclxuICAgICAgICB0aGlzLnRyYW5zZm9ybUNhbnZhcy50eCA9IDA7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMudHkgPSAwO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3ggPSB0aGlzLnJlbmRlckNvbmZpZy5kcHI7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMuc3kgPSB0aGlzLnJlbmRlckNvbmZpZy5kcHI7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1DYW52YXMudHggPSAwO1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzLnR5ID0gMDtcclxuICAgIH1cclxuICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzLnByb3BzID0gW3RoaXMudHJhbnNmb3JtQ2FudmFzLnN4LDAsMCwwLDAsdGhpcy50cmFuc2Zvcm1DYW52YXMuc3ksMCwwLDAsMCwxLDAsdGhpcy50cmFuc2Zvcm1DYW52YXMudHgsdGhpcy50cmFuc2Zvcm1DYW52YXMudHksMCwxXTtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmVsZW1lbnRzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgaWYodGhpcy5lbGVtZW50c1tpXSAmJiB0aGlzLmVsZW1lbnRzW2ldLmRhdGEudHkgPT09IDApe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLnJlc2l6ZSh0aGlzLmdsb2JhbERhdGEudHJhbnNmb3JtQ2FudmFzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmKHRoaXMucmVuZGVyQ29uZmlnLmNsZWFyQ2FudmFzKSB7XHJcbiAgICAgICAgdGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIuaW5uZXJIVE1MID0gJyc7XHJcbiAgICB9XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5sYXllcnMgPyB0aGlzLmxheWVycy5sZW5ndGggOiAwO1xyXG4gICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyBpLT0xKSB7XHJcbiAgICAgICAgaWYodGhpcy5lbGVtZW50c1tpXSkge1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmVsZW1lbnRzLmxlbmd0aCA9IDA7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuY2FudmFzQ29udGV4dCA9IG51bGw7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyID0gbnVsbDtcclxuICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKG51bSl7XHJcbiAgICBpZigodGhpcy5yZW5kZXJlZEZyYW1lID09IG51bSAmJiB0aGlzLnJlbmRlckNvbmZpZy5jbGVhckNhbnZhcyA9PT0gdHJ1ZSkgfHwgdGhpcy5kZXN0cm95ZWQgfHwgbnVtID09PSBudWxsKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnJlbmRlcmVkRnJhbWUgPSBudW07XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZnJhbWVOdW0gPSBudW0gLSB0aGlzLmFuaW1hdGlvbkl0ZW0uZmlyc3RGcmFtZTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mcmFtZUlkICs9IDE7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEucHJvamVjdEludGVyZmFjZS5jdXJyZW50RnJhbWUgPSBudW07XHJcbiAgICBpZih0aGlzLnJlbmRlckNvbmZpZy5jbGVhckNhbnZhcyA9PT0gdHJ1ZSl7XHJcbiAgICAgICAgdGhpcy5yZXNldCgpO1xyXG4gICAgICAgIHRoaXMuY2FudmFzQ29udGV4dC5zYXZlKCk7XHJcbiAgICAgICAgLy90aGlzLmNhbnZhc0NvbnRleHQuY2FudmFzLndpZHRoID0gdGhpcy5jYW52YXNDb250ZXh0LmNhbnZhcy53aWR0aDtcclxuICAgICAgICB0aGlzLmNhbnZhc0NvbnRleHQuY2xlYXJSZWN0KHRoaXMudHJhbnNmb3JtQ2FudmFzLnR4LCB0aGlzLnRyYW5zZm9ybUNhbnZhcy50eSwgdGhpcy50cmFuc2Zvcm1DYW52YXMudyp0aGlzLnRyYW5zZm9ybUNhbnZhcy5zeCwgdGhpcy50cmFuc2Zvcm1DYW52YXMuaCp0aGlzLnRyYW5zZm9ybUNhbnZhcy5zeSk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICB0aGlzLnNhdmUoKTtcclxuICAgIH1cclxuICAgIHRoaXMuY3R4VHJhbnNmb3JtKHRoaXMudHJhbnNmb3JtQ2FudmFzLnByb3BzKTtcclxuICAgIHRoaXMuY2FudmFzQ29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgIHRoaXMuY2FudmFzQ29udGV4dC5yZWN0KDAsMCx0aGlzLnRyYW5zZm9ybUNhbnZhcy53LHRoaXMudHJhbnNmb3JtQ2FudmFzLmgpO1xyXG4gICAgdGhpcy5jYW52YXNDb250ZXh0LmNsb3NlUGF0aCgpO1xyXG4gICAgdGhpcy5jYW52YXNDb250ZXh0LmNsaXAoKTtcclxuXHJcbiAgICAvL2NvbnNvbGUubG9nKCctLS0tLS0tLScpO1xyXG4gICAgLy9jb25zb2xlLmxvZygnTkVXOiAnLG51bSk7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5sYXllcnMubGVuZ3RoO1xyXG4gICAgaWYoIXRoaXMuY29tcGxldGVMYXllcnMpe1xyXG4gICAgICAgIHRoaXMuY2hlY2tMYXllcnMobnVtKTtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICBpZih0aGlzLmNvbXBsZXRlTGF5ZXJzIHx8IHRoaXMuZWxlbWVudHNbaV0pe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLnByZXBhcmVGcmFtZShudW0gLSB0aGlzLmxheWVyc1tpXS5zdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyBpLT0xKSB7XHJcbiAgICAgICAgaWYodGhpcy5jb21wbGV0ZUxheWVycyB8fCB0aGlzLmVsZW1lbnRzW2ldKXtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50c1tpXS5yZW5kZXJGcmFtZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKHRoaXMucmVuZGVyQ29uZmlnLmNsZWFyQ2FudmFzICE9PSB0cnVlKXtcclxuICAgICAgICB0aGlzLnJlc3RvcmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5jYW52YXNDb250ZXh0LnJlc3RvcmUoKTtcclxuICAgIH1cclxufTtcclxuXHJcbkNhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5idWlsZEl0ZW0gPSBmdW5jdGlvbihwb3Mpe1xyXG4gICAgdmFyIGVsZW1lbnRzID0gdGhpcy5lbGVtZW50cztcclxuICAgIGlmKGVsZW1lbnRzW3Bvc10gfHwgdGhpcy5sYXllcnNbcG9zXS50eSA9PSA5OSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzLmNyZWF0ZUl0ZW0odGhpcy5sYXllcnNbcG9zXSwgdGhpcyx0aGlzLmdsb2JhbERhdGEpO1xyXG4gICAgZWxlbWVudHNbcG9zXSA9IGVsZW1lbnQ7XHJcbiAgICBlbGVtZW50LmluaXRFeHByZXNzaW9ucygpO1xyXG4gICAgaWYodGhpcy5sYXllcnNbcG9zXS50eSA9PT0gMCl7XHJcbiAgICAgICAgZWxlbWVudC5yZXNpemUodGhpcy5nbG9iYWxEYXRhLnRyYW5zZm9ybUNhbnZhcyk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY2hlY2tQZW5kaW5nRWxlbWVudHMgID0gZnVuY3Rpb24oKXtcclxuICAgIHdoaWxlKHRoaXMucGVuZGluZ0VsZW1lbnRzLmxlbmd0aCl7XHJcbiAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLnBlbmRpbmdFbGVtZW50cy5wb3AoKTtcclxuICAgICAgICBlbGVtZW50LmNoZWNrUGFyZW50aW5nKCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbn07XHJcblxyXG5DYW52YXNSZW5kZXJlci5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0uY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG59O1xyXG5cclxuQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLnNlYXJjaEV4dHJhQ29tcG9zaXRpb25zID0gZnVuY3Rpb24oYXNzZXRzKXtcclxuICAgIHZhciBpLCBsZW4gPSBhc3NldHMubGVuZ3RoO1xyXG4gICAgdmFyIGZsb2F0aW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIGlmKGFzc2V0c1tpXS54dCl7XHJcbiAgICAgICAgICAgIHZhciBjb21wID0gdGhpcy5jcmVhdGVDb21wKGFzc2V0c1tpXSx0aGlzLmdsb2JhbERhdGEuY29tcCx0aGlzLmdsb2JhbERhdGEpO1xyXG4gICAgICAgICAgICBjb21wLmluaXRFeHByZXNzaW9ucygpO1xyXG4gICAgICAgICAgICAvL2NvbXAuY29tcEludGVyZmFjZSA9IENvbXBFeHByZXNzaW9uSW50ZXJmYWNlKGNvbXApO1xyXG4gICAgICAgICAgICAvL0V4cHJlc3Npb25zLmFkZExheWVyc0ludGVyZmFjZShjb21wLmVsZW1lbnRzLCB0aGlzLmdsb2JhbERhdGEucHJvamVjdEludGVyZmFjZSk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5wcm9qZWN0SW50ZXJmYWNlLnJlZ2lzdGVyQ29tcG9zaXRpb24oY29tcCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cbmZ1bmN0aW9uIEh5YnJpZFJlbmRlcmVyKGFuaW1hdGlvbkl0ZW0sIGNvbmZpZyl7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0gPSBhbmltYXRpb25JdGVtO1xyXG4gICAgdGhpcy5sYXllcnMgPSBudWxsO1xyXG4gICAgdGhpcy5yZW5kZXJlZEZyYW1lID0gLTE7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEgPSB7XHJcbiAgICAgICAgZnJhbWVOdW06IC0xXHJcbiAgICB9O1xyXG4gICAgdGhpcy5yZW5kZXJDb25maWcgPSB7XHJcbiAgICAgICAgY2xhc3NOYW1lOiAoY29uZmlnICYmIGNvbmZpZy5jbGFzc05hbWUpIHx8ICcnXHJcbiAgICB9O1xyXG4gICAgdGhpcy5wZW5kaW5nRWxlbWVudHMgPSBbXTtcclxuICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcclxuICAgIHRoaXMudGhyZWVERWxlbWVudHMgPSBbXTtcclxuICAgIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmNhbWVyYSA9IG51bGw7XHJcbiAgICB0aGlzLnN1cHBvcnRzM2QgPSB0cnVlO1xyXG5cclxufVxyXG5cclxuZXh0ZW5kUHJvdG90eXBlKEJhc2VSZW5kZXJlcixIeWJyaWRSZW5kZXJlcik7XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRJdGVtID0gU1ZHUmVuZGVyZXIucHJvdG90eXBlLmJ1aWxkSXRlbTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jaGVja1BlbmRpbmdFbGVtZW50cyAgPSBmdW5jdGlvbigpe1xyXG4gICAgd2hpbGUodGhpcy5wZW5kaW5nRWxlbWVudHMubGVuZ3RoKXtcclxuICAgICAgICB2YXIgZWxlbWVudCA9IHRoaXMucGVuZGluZ0VsZW1lbnRzLnBvcCgpO1xyXG4gICAgICAgIGVsZW1lbnQuY2hlY2tQYXJlbnRpbmcoKTtcclxuICAgIH1cclxufTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5hcHBlbmRFbGVtZW50SW5Qb3MgPSBmdW5jdGlvbihlbGVtZW50LCBwb3Mpe1xyXG4gICAgdmFyIG5ld0RPTUVsZW1lbnQgPSBlbGVtZW50LmdldEJhc2VFbGVtZW50KCk7XHJcbiAgICBpZighbmV3RE9NRWxlbWVudCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdmFyIGxheWVyID0gdGhpcy5sYXllcnNbcG9zXTtcclxuICAgIGlmKCFsYXllci5kZGQgfHwgIXRoaXMuc3VwcG9ydHMzZCl7XHJcbiAgICAgICAgdmFyIGkgPSAwO1xyXG4gICAgICAgIHZhciBuZXh0RE9NRWxlbWVudCwgbmV4dExheWVyO1xyXG4gICAgICAgIHdoaWxlKGk8cG9zKXtcclxuICAgICAgICAgICAgaWYodGhpcy5lbGVtZW50c1tpXSAmJiB0aGlzLmVsZW1lbnRzW2ldIT09IHRydWUgJiYgdGhpcy5lbGVtZW50c1tpXS5nZXRCYXNlRWxlbWVudCl7XHJcbiAgICAgICAgICAgICAgICBuZXh0TGF5ZXIgPSB0aGlzLmVsZW1lbnRzW2ldO1xyXG4gICAgICAgICAgICAgICAgbmV4dERPTUVsZW1lbnQgPSB0aGlzLmxheWVyc1tpXS5kZGQgPyB0aGlzLmdldFRocmVlRENvbnRhaW5lckJ5UG9zKGkpIDogbmV4dExheWVyLmdldEJhc2VFbGVtZW50KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihuZXh0RE9NRWxlbWVudCl7XHJcbiAgICAgICAgICAgIGlmKCFsYXllci5kZGQgfHwgIXRoaXMuc3VwcG9ydHMzZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5pbnNlcnRCZWZvcmUobmV3RE9NRWxlbWVudCwgbmV4dERPTUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYoIWxheWVyLmRkZCB8fCAhdGhpcy5zdXBwb3J0czNkKXtcclxuICAgICAgICAgICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKG5ld0RPTUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmFkZFRvM2RDb250YWluZXIobmV3RE9NRWxlbWVudCxwb3MpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVCYXNlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgU1ZHQmFzZUVsZW1lbnQoZGF0YSwgdGhpcy5sYXllckVsZW1lbnQsdGhpcy5nbG9iYWxEYXRhLHRoaXMpO1xyXG59O1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVNoYXBlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIGlmKCF0aGlzLnN1cHBvcnRzM2Qpe1xyXG4gICAgICAgIHJldHVybiBuZXcgSVNoYXBlRWxlbWVudChkYXRhLCB0aGlzLmxheWVyRWxlbWVudCx0aGlzLmdsb2JhbERhdGEsdGhpcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IEhTaGFwZUVsZW1lbnQoZGF0YSwgdGhpcy5sYXllckVsZW1lbnQsdGhpcy5nbG9iYWxEYXRhLHRoaXMpO1xyXG59O1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVRleHQgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgaWYoIXRoaXMuc3VwcG9ydHMzZCl7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTVkdUZXh0RWxlbWVudChkYXRhLCB0aGlzLmxheWVyRWxlbWVudCx0aGlzLmdsb2JhbERhdGEsdGhpcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3IEhUZXh0RWxlbWVudChkYXRhLCB0aGlzLmxheWVyRWxlbWVudCx0aGlzLmdsb2JhbERhdGEsdGhpcyk7XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQ2FtZXJhID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHRoaXMuY2FtZXJhID0gbmV3IEhDYW1lcmFFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuICAgIHJldHVybiB0aGlzLmNhbWVyYTtcclxufTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVJbWFnZSA9IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICBpZighdGhpcy5zdXBwb3J0czNkKXtcclxuICAgICAgICByZXR1cm4gbmV3IElJbWFnZUVsZW1lbnQoZGF0YSwgdGhpcy5sYXllckVsZW1lbnQsdGhpcy5nbG9iYWxEYXRhLHRoaXMpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBISW1hZ2VFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxufTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVDb21wID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIGlmKCF0aGlzLnN1cHBvcnRzM2Qpe1xyXG4gICAgICAgIHJldHVybiBuZXcgSUNvbXBFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgSENvbXBFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuXHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU29saWQgPSBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgaWYoIXRoaXMuc3VwcG9ydHMzZCl7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBJU29saWRFbGVtZW50KGRhdGEsIHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZ2xvYmFsRGF0YSx0aGlzKTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXcgSFNvbGlkRWxlbWVudChkYXRhLCB0aGlzLmxheWVyRWxlbWVudCx0aGlzLmdsb2JhbERhdGEsdGhpcyk7XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuZ2V0VGhyZWVEQ29udGFpbmVyQnlQb3MgPSBmdW5jdGlvbihwb3Mpe1xyXG4gICAgdmFyIGkgPSAwLCBsZW4gPSB0aGlzLnRocmVlREVsZW1lbnRzLmxlbmd0aDtcclxuICAgIHdoaWxlKGk8bGVuKSB7XHJcbiAgICAgICAgaWYodGhpcy50aHJlZURFbGVtZW50c1tpXS5zdGFydFBvcyA8PSBwb3MgJiYgdGhpcy50aHJlZURFbGVtZW50c1tpXS5lbmRQb3MgPj0gcG9zKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRocmVlREVsZW1lbnRzW2ldLnBlcnNwZWN0aXZlRWxlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSArPSAxO1xyXG4gICAgfVxyXG59XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlVGhyZWVEQ29udGFpbmVyID0gZnVuY3Rpb24ocG9zKXtcclxuICAgIHZhciBwZXJzcGVjdGl2ZUVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHN0eWxlRGl2KHBlcnNwZWN0aXZlRWxlbSk7XHJcbiAgICBwZXJzcGVjdGl2ZUVsZW0uc3R5bGUud2lkdGggPSB0aGlzLmdsb2JhbERhdGEuY29tcFNpemUudysncHgnO1xyXG4gICAgcGVyc3BlY3RpdmVFbGVtLnN0eWxlLmhlaWdodCA9IHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS5oKydweCc7XHJcbiAgICBwZXJzcGVjdGl2ZUVsZW0uc3R5bGUudHJhbnNmb3JtT3JpZ2luID0gcGVyc3BlY3RpdmVFbGVtLnN0eWxlLm1velRyYW5zZm9ybU9yaWdpbiA9IHBlcnNwZWN0aXZlRWxlbS5zdHlsZS53ZWJraXRUcmFuc2Zvcm1PcmlnaW4gPSBcIjUwJSA1MCVcIjtcclxuICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHN0eWxlRGl2KGNvbnRhaW5lcik7XHJcbiAgICBjb250YWluZXIuc3R5bGUudHJhbnNmb3JtID0gY29udGFpbmVyLnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9ICdtYXRyaXgzZCgxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxKSc7XHJcbiAgICBwZXJzcGVjdGl2ZUVsZW0uYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcclxuICAgIHRoaXMucmVzaXplckVsZW0uYXBwZW5kQ2hpbGQocGVyc3BlY3RpdmVFbGVtKTtcclxuICAgIHZhciB0aHJlZURDb250YWluZXJEYXRhID0ge1xyXG4gICAgICAgIGNvbnRhaW5lcjpjb250YWluZXIsXHJcbiAgICAgICAgcGVyc3BlY3RpdmVFbGVtOnBlcnNwZWN0aXZlRWxlbSxcclxuICAgICAgICBzdGFydFBvczogcG9zLFxyXG4gICAgICAgIGVuZFBvczogcG9zXHJcbiAgICB9O1xyXG4gICAgdGhpcy50aHJlZURFbGVtZW50cy5wdXNoKHRocmVlRENvbnRhaW5lckRhdGEpO1xyXG4gICAgcmV0dXJuIHRocmVlRENvbnRhaW5lckRhdGE7XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYnVpbGQzZENvbnRhaW5lcnMgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMubGF5ZXJzLmxlbmd0aDtcclxuICAgIHZhciBsYXN0VGhyZWVEQ29udGFpbmVyRGF0YTtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgaWYodGhpcy5sYXllcnNbaV0uZGRkKXtcclxuICAgICAgICAgICAgaWYoIWxhc3RUaHJlZURDb250YWluZXJEYXRhKXtcclxuICAgICAgICAgICAgICAgIGxhc3RUaHJlZURDb250YWluZXJEYXRhID0gdGhpcy5jcmVhdGVUaHJlZURDb250YWluZXIoaSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGFzdFRocmVlRENvbnRhaW5lckRhdGEuZW5kUG9zID0gTWF0aC5tYXgobGFzdFRocmVlRENvbnRhaW5lckRhdGEuZW5kUG9zLGkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxhc3RUaHJlZURDb250YWluZXJEYXRhID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYWRkVG8zZENvbnRhaW5lciA9IGZ1bmN0aW9uKGVsZW0scG9zKXtcclxuICAgIHZhciBpID0gMCwgbGVuID0gdGhpcy50aHJlZURFbGVtZW50cy5sZW5ndGg7XHJcbiAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgaWYocG9zIDw9IHRoaXMudGhyZWVERWxlbWVudHNbaV0uZW5kUG9zKXtcclxuICAgICAgICAgICAgdmFyIGogPSB0aGlzLnRocmVlREVsZW1lbnRzW2ldLnN0YXJ0UG9zO1xyXG4gICAgICAgICAgICB2YXIgbmV4dEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIHdoaWxlKGo8cG9zKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuZWxlbWVudHNbal0gJiYgdGhpcy5lbGVtZW50c1tqXS5nZXRCYXNlRWxlbWVudCl7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV4dEVsZW1lbnQgPSB0aGlzLmVsZW1lbnRzW2pdLmdldEJhc2VFbGVtZW50KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBqICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYobmV4dEVsZW1lbnQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy50aHJlZURFbGVtZW50c1tpXS5jb250YWluZXIuaW5zZXJ0QmVmb3JlKGVsZW0sIG5leHRFbGVtZW50KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGhyZWVERWxlbWVudHNbaV0uY29udGFpbmVyLmFwcGVuZENoaWxkKGVsZW0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpICs9IDE7XHJcbiAgICB9XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY29uZmlnQW5pbWF0aW9uID0gZnVuY3Rpb24oYW5pbURhdGEpe1xyXG4gICAgdmFyIHJlc2l6ZXJFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB2YXIgd3JhcHBlciA9IHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyO1xyXG4gICAgcmVzaXplckVsZW0uc3R5bGUud2lkdGggPSBhbmltRGF0YS53KydweCc7XHJcbiAgICByZXNpemVyRWxlbS5zdHlsZS5oZWlnaHQgPSBhbmltRGF0YS5oKydweCc7XHJcbiAgICB0aGlzLnJlc2l6ZXJFbGVtID0gcmVzaXplckVsZW07XHJcbiAgICBzdHlsZURpdihyZXNpemVyRWxlbSk7XHJcbiAgICByZXNpemVyRWxlbS5zdHlsZS50cmFuc2Zvcm1TdHlsZSA9IHJlc2l6ZXJFbGVtLnN0eWxlLndlYmtpdFRyYW5zZm9ybVN0eWxlID0gcmVzaXplckVsZW0uc3R5bGUubW96VHJhbnNmb3JtU3R5bGUgPSBcImZsYXRcIjtcclxuICAgIGlmKHRoaXMucmVuZGVyQ29uZmlnLmNsYXNzTmFtZSkge1xyXG4gICAgICB3cmFwcGVyLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCB0aGlzLnJlbmRlckNvbmZpZy5jbGFzc05hbWUpO1xyXG4gICAgfVxyXG4gICAgd3JhcHBlci5hcHBlbmRDaGlsZChyZXNpemVyRWxlbSk7XHJcblxyXG4gICAgcmVzaXplckVsZW0uc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcclxuICAgIHZhciBzdmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3N2ZycpO1xyXG4gICAgc3ZnLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCcxJyk7XHJcbiAgICBzdmcuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCcxJyk7XHJcbiAgICBzdHlsZURpdihzdmcpO1xyXG4gICAgdGhpcy5yZXNpemVyRWxlbS5hcHBlbmRDaGlsZChzdmcpO1xyXG4gICAgdmFyIGRlZnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ2RlZnMnKTtcclxuICAgIHN2Zy5hcHBlbmRDaGlsZChkZWZzKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5kZWZzID0gZGVmcztcclxuICAgIHRoaXMuZGF0YSA9IGFuaW1EYXRhO1xyXG4gICAgLy9NYXNrIGFuaW1hdGlvblxyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmdldEFzc2V0RGF0YSA9IHRoaXMuYW5pbWF0aW9uSXRlbS5nZXRBc3NldERhdGEuYmluZCh0aGlzLmFuaW1hdGlvbkl0ZW0pO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmdldEFzc2V0c1BhdGggPSB0aGlzLmFuaW1hdGlvbkl0ZW0uZ2V0QXNzZXRzUGF0aC5iaW5kKHRoaXMuYW5pbWF0aW9uSXRlbSk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZWxlbWVudExvYWRlZCA9IHRoaXMuYW5pbWF0aW9uSXRlbS5lbGVtZW50TG9hZGVkLmJpbmQodGhpcy5hbmltYXRpb25JdGVtKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mcmFtZUlkID0gMDtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZSA9IHtcclxuICAgICAgICB3OiBhbmltRGF0YS53LFxyXG4gICAgICAgIGg6IGFuaW1EYXRhLmhcclxuICAgIH07XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZnJhbWVSYXRlID0gYW5pbURhdGEuZnI7XHJcbiAgICB0aGlzLmxheWVycyA9IGFuaW1EYXRhLmxheWVycztcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mb250TWFuYWdlciA9IG5ldyBGb250TWFuYWdlcigpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmFkZENoYXJzKGFuaW1EYXRhLmNoYXJzKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5mb250TWFuYWdlci5hZGRGb250cyhhbmltRGF0YS5mb250cyxzdmcpO1xyXG4gICAgdGhpcy5sYXllckVsZW1lbnQgPSB0aGlzLnJlc2l6ZXJFbGVtO1xyXG4gICAgdGhpcy5idWlsZDNkQ29udGFpbmVycygpO1xyXG4gICAgdGhpcy51cGRhdGVDb250YWluZXJTaXplKCk7XHJcbn07XHJcblxyXG5IeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyLmlubmVySFRNTCA9ICcnO1xyXG4gICAgdGhpcy5hbmltYXRpb25JdGVtLmNvbnRhaW5lciA9IG51bGw7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZGVmcyA9IG51bGw7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5sYXllcnMgPyB0aGlzLmxheWVycy5sZW5ndGggOiAwO1xyXG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50c1tpXS5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmVsZW1lbnRzLmxlbmd0aCA9IDA7XHJcbiAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XHJcbiAgICB0aGlzLmFuaW1hdGlvbkl0ZW0gPSBudWxsO1xyXG59O1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLnVwZGF0ZUNvbnRhaW5lclNpemUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZWxlbWVudFdpZHRoID0gdGhpcy5hbmltYXRpb25JdGVtLndyYXBwZXIub2Zmc2V0V2lkdGg7XHJcbiAgICB2YXIgZWxlbWVudEhlaWdodCA9IHRoaXMuYW5pbWF0aW9uSXRlbS53cmFwcGVyLm9mZnNldEhlaWdodDtcclxuICAgIHZhciBlbGVtZW50UmVsID0gZWxlbWVudFdpZHRoL2VsZW1lbnRIZWlnaHQ7XHJcbiAgICB2YXIgYW5pbWF0aW9uUmVsID0gdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLncvdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLmg7XHJcbiAgICB2YXIgc3gsc3ksdHgsdHk7XHJcbiAgICBpZihhbmltYXRpb25SZWw+ZWxlbWVudFJlbCl7XHJcbiAgICAgICAgc3ggPSBlbGVtZW50V2lkdGgvKHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS53KTtcclxuICAgICAgICBzeSA9IGVsZW1lbnRXaWR0aC8odGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLncpO1xyXG4gICAgICAgIHR4ID0gMDtcclxuICAgICAgICB0eSA9ICgoZWxlbWVudEhlaWdodC10aGlzLmdsb2JhbERhdGEuY29tcFNpemUuaCooZWxlbWVudFdpZHRoL3RoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS53KSkvMik7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBzeCA9IGVsZW1lbnRIZWlnaHQvKHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS5oKTtcclxuICAgICAgICBzeSA9IGVsZW1lbnRIZWlnaHQvKHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS5oKTtcclxuICAgICAgICB0eCA9IChlbGVtZW50V2lkdGgtdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLncqKGVsZW1lbnRIZWlnaHQvdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLmgpKS8yO1xyXG4gICAgICAgIHR5ID0gMDtcclxuICAgIH1cclxuICAgIHRoaXMucmVzaXplckVsZW0uc3R5bGUudHJhbnNmb3JtID0gdGhpcy5yZXNpemVyRWxlbS5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSAnbWF0cml4M2QoJyArIHN4ICsgJywwLDAsMCwwLCcrc3krJywwLDAsMCwwLDEsMCwnK3R4KycsJyt0eSsnLDAsMSknO1xyXG59O1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLnJlbmRlckZyYW1lID0gU1ZHUmVuZGVyZXIucHJvdG90eXBlLnJlbmRlckZyYW1lO1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5yZXNpemVyRWxlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG59O1xyXG5cclxuSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5yZXNpemVyRWxlbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxufTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5pbml0SXRlbXMgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5idWlsZEFsbEl0ZW1zKCk7XHJcbiAgICBpZih0aGlzLmNhbWVyYSl7XHJcbiAgICAgICAgdGhpcy5jYW1lcmEuc2V0dXAoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIGNXaWR0aCA9IHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS53O1xyXG4gICAgICAgIHZhciBjSGVpZ2h0ID0gdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLmg7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMudGhyZWVERWxlbWVudHMubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHRoaXMudGhyZWVERWxlbWVudHNbaV0ucGVyc3BlY3RpdmVFbGVtLnN0eWxlLnBlcnNwZWN0aXZlID0gdGhpcy50aHJlZURFbGVtZW50c1tpXS5wZXJzcGVjdGl2ZUVsZW0uc3R5bGUud2Via2l0UGVyc3BlY3RpdmUgPSBNYXRoLnNxcnQoTWF0aC5wb3coY1dpZHRoLDIpICsgTWF0aC5wb3coY0hlaWdodCwyKSkgKyAncHgnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbkh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5zZWFyY2hFeHRyYUNvbXBvc2l0aW9ucyA9IGZ1bmN0aW9uKGFzc2V0cyl7XHJcbiAgICB2YXIgaSwgbGVuID0gYXNzZXRzLmxlbmd0aDtcclxuICAgIHZhciBmbG9hdGluZ0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBpZihhc3NldHNbaV0ueHQpe1xyXG4gICAgICAgICAgICB2YXIgY29tcCA9IHRoaXMuY3JlYXRlQ29tcChhc3NldHNbaV0sZmxvYXRpbmdDb250YWluZXIsdGhpcy5nbG9iYWxEYXRhLmNvbXAsbnVsbCk7XHJcbiAgICAgICAgICAgIGNvbXAuaW5pdEV4cHJlc3Npb25zKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5wcm9qZWN0SW50ZXJmYWNlLnJlZ2lzdGVyQ29tcG9zaXRpb24oY29tcCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cbmZ1bmN0aW9uIENWQmFzZUVsZW1lbnQoZGF0YSwgY29tcCxnbG9iYWxEYXRhKXtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YSA9IGdsb2JhbERhdGE7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgdGhpcy5jb21wID0gY29tcDtcclxuICAgIHRoaXMuY2FudmFzQ29udGV4dCA9IGdsb2JhbERhdGEuY2FudmFzQ29udGV4dDtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG59XHJcblxyXG5jcmVhdGVFbGVtZW50KEJhc2VFbGVtZW50LCBDVkJhc2VFbGVtZW50KTtcclxuXHJcbkNWQmFzZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24oKXtcclxuICAgIHRoaXMuY2hlY2tQYXJlbnRpbmcoKTtcclxufTtcclxuXHJcbkNWQmFzZUVsZW1lbnQucHJvdG90eXBlLmNoZWNrQmxlbmRNb2RlID0gZnVuY3Rpb24oZ2xvYmFsRGF0YSl7XHJcbiAgICBpZihnbG9iYWxEYXRhLmJsZW5kTW9kZSAhPT0gdGhpcy5kYXRhLmJtKSB7XHJcbiAgICAgICAgZ2xvYmFsRGF0YS5ibGVuZE1vZGUgPSB0aGlzLmRhdGEuYm07XHJcblxyXG4gICAgICAgIHZhciBibGVuZE1vZGVWYWx1ZSA9ICcnO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5kYXRhLmJtKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGJsZW5kTW9kZVZhbHVlID0gJ25vcm1hbCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnbXVsdGlwbHknO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIGJsZW5kTW9kZVZhbHVlID0gJ3NjcmVlbic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnb3ZlcmxheSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnZGFya2VuJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdsaWdodGVuJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDY6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdjb2xvci1kb2RnZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA3OlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnY29sb3ItYnVybic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA4OlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnaGFyZC1saWdodCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSA5OlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnc29mdC1saWdodCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAxMDpcclxuICAgICAgICAgICAgICAgIGJsZW5kTW9kZVZhbHVlID0gJ2RpZmZlcmVuY2UnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTE6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdleGNsdXNpb24nO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTI6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdodWUnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTM6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdzYXR1cmF0aW9uJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDE0OlxyXG4gICAgICAgICAgICAgICAgYmxlbmRNb2RlVmFsdWUgPSAnY29sb3InO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTU6XHJcbiAgICAgICAgICAgICAgICBibGVuZE1vZGVWYWx1ZSA9ICdsdW1pbm9zaXR5JztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBnbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gYmxlbmRNb2RlVmFsdWU7XHJcbiAgICB9XHJcbn07XHJcblxyXG5cclxuQ1ZCYXNlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihwYXJlbnRUcmFuc2Zvcm0pe1xyXG4gICAgaWYodGhpcy5kYXRhLnR5ID09PSAzKXtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAgICAgdGhpcy5jaGVja0JsZW5kTW9kZSh0aGlzLmRhdGEudHkgPT09IDA/dGhpcy5wYXJlbnRHbG9iYWxEYXRhOnRoaXMuZ2xvYmFsRGF0YSk7XHJcblxyXG4gICAgaWYoIXRoaXMuaXNWaXNpYmxlKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5pc1Zpc2libGU7XHJcbiAgICB9XHJcbiAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wTWRmID0gdGhpcy5maW5hbFRyYW5zZm9ybS5vcC5tZGY7XHJcbiAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRoaXMuZmluYWxUcmFuc2Zvcm0ubVByb3AubWRmO1xyXG4gICAgdGhpcy5maW5hbFRyYW5zZm9ybS5vcGFjaXR5ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5vcC52O1xyXG5cclxuICAgIHZhciBtYXQ7XHJcbiAgICB2YXIgZmluYWxNYXQgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdDtcclxuXHJcbiAgICBpZih0aGlzLmhpZXJhcmNoeSl7XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuaGllcmFyY2h5Lmxlbmd0aDtcclxuICAgICAgICBtYXQgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLnYucHJvcHM7XHJcbiAgICAgICAgZmluYWxNYXQuY2xvbmVGcm9tUHJvcHMobWF0KTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRoaXMuaGllcmFyY2h5W2ldLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLm1kZiA/IHRydWUgOiB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZjtcclxuICAgICAgICAgICAgbWF0ID0gdGhpcy5oaWVyYXJjaHlbaV0uZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcztcclxuICAgICAgICAgICAgZmluYWxNYXQudHJhbnNmb3JtKG1hdFswXSxtYXRbMV0sbWF0WzJdLG1hdFszXSxtYXRbNF0sbWF0WzVdLG1hdFs2XSxtYXRbN10sbWF0WzhdLG1hdFs5XSxtYXRbMTBdLG1hdFsxMV0sbWF0WzEyXSxtYXRbMTNdLG1hdFsxNF0sbWF0WzE1XSk7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgaWYoIXBhcmVudFRyYW5zZm9ybSl7XHJcbiAgICAgICAgICAgIGZpbmFsTWF0LmNsb25lRnJvbVByb3BzKHRoaXMuZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcyk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIG1hdCA9IHRoaXMuZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcztcclxuICAgICAgICAgICAgZmluYWxNYXQuY2xvbmVGcm9tUHJvcHMobWF0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYocGFyZW50VHJhbnNmb3JtKXtcclxuICAgICAgICBtYXQgPSBwYXJlbnRUcmFuc2Zvcm0ubWF0LnByb3BzO1xyXG4gICAgICAgIGZpbmFsTWF0LnRyYW5zZm9ybShtYXRbMF0sbWF0WzFdLG1hdFsyXSxtYXRbM10sbWF0WzRdLG1hdFs1XSxtYXRbNl0sbWF0WzddLG1hdFs4XSxtYXRbOV0sbWF0WzEwXSxtYXRbMTFdLG1hdFsxMl0sbWF0WzEzXSxtYXRbMTRdLG1hdFsxNV0pO1xyXG4gICAgICAgIHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BhY2l0eSAqPSBwYXJlbnRUcmFuc2Zvcm0ub3BhY2l0eTtcclxuICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wTWRmID0gcGFyZW50VHJhbnNmb3JtLm9wTWRmID8gdHJ1ZSA6IHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BNZGY7XHJcbiAgICAgICAgdGhpcy5maW5hbFRyYW5zZm9ybS5tYXRNZGYgPSBwYXJlbnRUcmFuc2Zvcm0ubWF0TWRmID8gdHJ1ZSA6IHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0TWRmXHJcbiAgICB9XHJcblxyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5zYXZlKHRydWUpO1xyXG4gICAgICAgIHRoaXMubWFza01hbmFnZXIucmVuZGVyRnJhbWUodGhpcy5kYXRhLnR5ID09PSAwP251bGw6ZmluYWxNYXQpO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5kYXRhLmhkKXtcclxuICAgICAgICB0aGlzLmlzVmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuaXNWaXNpYmxlO1xyXG5cclxufTtcclxuXHJcbkNWQmFzZUVsZW1lbnQucHJvdG90eXBlLmFkZE1hc2tzID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB0aGlzLm1hc2tNYW5hZ2VyID0gbmV3IENWTWFza0VsZW1lbnQoZGF0YSx0aGlzLHRoaXMuZ2xvYmFsRGF0YSk7XHJcbn07XHJcblxyXG5cclxuQ1ZCYXNlRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmNhbnZhc0NvbnRleHQgPSBudWxsO1xyXG4gICAgdGhpcy5kYXRhID0gbnVsbDtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YSA9IG51bGw7XHJcbiAgICBpZih0aGlzLm1hc2tNYW5hZ2VyKSB7XHJcbiAgICAgICAgdGhpcy5tYXNrTWFuYWdlci5kZXN0cm95KCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5DVkJhc2VFbGVtZW50LnByb3RvdHlwZS5tSGVscGVyID0gbmV3IE1hdHJpeCgpO1xyXG5cbmZ1bmN0aW9uIENWQ29tcEVsZW1lbnQoZGF0YSwgY29tcCxnbG9iYWxEYXRhKXtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSwgY29tcCxnbG9iYWxEYXRhKTtcclxuICAgIHZhciBjb21wR2xvYmFsRGF0YSA9IHt9O1xyXG4gICAgZm9yKHZhciBzIGluIGdsb2JhbERhdGEpe1xyXG4gICAgICAgIGlmKGdsb2JhbERhdGEuaGFzT3duUHJvcGVydHkocykpe1xyXG4gICAgICAgICAgICBjb21wR2xvYmFsRGF0YVtzXSA9IGdsb2JhbERhdGFbc107XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY29tcEdsb2JhbERhdGEucmVuZGVyZXIgPSB0aGlzO1xyXG4gICAgY29tcEdsb2JhbERhdGEuY29tcEhlaWdodCA9IHRoaXMuZGF0YS5oO1xyXG4gICAgY29tcEdsb2JhbERhdGEuY29tcFdpZHRoID0gdGhpcy5kYXRhLnc7XHJcbiAgICB0aGlzLnJlbmRlckNvbmZpZyA9IHtcclxuICAgICAgICBjbGVhckNhbnZhczogdHJ1ZVxyXG4gICAgfTtcclxuICAgIHRoaXMuY29udGV4dERhdGEgPSB7XHJcbiAgICAgICAgc2F2ZWQgOiBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6MTV9KSxcclxuICAgICAgICBzYXZlZE9wOiBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6MTV9KSxcclxuICAgICAgICBjQXJyUG9zIDogMCxcclxuICAgICAgICBjVHIgOiBuZXcgTWF0cml4KCksXHJcbiAgICAgICAgY08gOiAxXHJcbiAgICB9O1xyXG4gICAgdGhpcy5jb21wbGV0ZUxheWVycyA9IGZhbHNlO1xyXG4gICAgdmFyIGksIGxlbiA9IDE1O1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLmNvbnRleHREYXRhLnNhdmVkW2ldID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOjE2fSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnRyYW5zZm9ybU1hdCA9IG5ldyBNYXRyaXgoKTtcclxuICAgIHRoaXMucGFyZW50R2xvYmFsRGF0YSA9IHRoaXMuZ2xvYmFsRGF0YTtcclxuICAgIHZhciBjdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4gICAgLy9kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGN2KTtcclxuICAgIGNvbXBHbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQgPSBjdi5nZXRDb250ZXh0KCcyZCcpO1xyXG4gICAgdGhpcy5jYW52YXNDb250ZXh0ID0gY29tcEdsb2JhbERhdGEuY2FudmFzQ29udGV4dDtcclxuICAgIGN2LndpZHRoID0gdGhpcy5kYXRhLnc7XHJcbiAgICBjdi5oZWlnaHQgPSB0aGlzLmRhdGEuaDtcclxuICAgIHRoaXMuY2FudmFzID0gY3Y7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEgPSBjb21wR2xvYmFsRGF0YTtcclxuICAgIHRoaXMubGF5ZXJzID0gZGF0YS5sYXllcnM7XHJcbiAgICB0aGlzLnBlbmRpbmdFbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDp0aGlzLmxheWVycy5sZW5ndGh9KTtcclxuICAgIGlmKHRoaXMuZGF0YS50bSl7XHJcbiAgICAgICAgdGhpcy50bSA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsdGhpcy5kYXRhLnRtLDAsZ2xvYmFsRGF0YS5mcmFtZVJhdGUsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmRhdGEueHQgfHwgIWdsb2JhbERhdGEucHJvZ3Jlc3NpdmVMb2FkKXtcclxuICAgICAgICB0aGlzLmJ1aWxkQWxsSXRlbXMoKTtcclxuICAgIH1cclxufVxyXG5jcmVhdGVFbGVtZW50KENWQmFzZUVsZW1lbnQsIENWQ29tcEVsZW1lbnQpO1xyXG5cclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuY3R4VHJhbnNmb3JtID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmN0eFRyYW5zZm9ybTtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuY3R4T3BhY2l0eSA9IENhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jdHhPcGFjaXR5O1xyXG5DVkNvbXBFbGVtZW50LnByb3RvdHlwZS5zYXZlID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLnNhdmU7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLnJlc3RvcmUgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUucmVzdG9yZTtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUucmVzZXQgPSAgZnVuY3Rpb24oKXtcclxuICAgIHRoaXMuY29udGV4dERhdGEuY0FyclBvcyA9IDA7XHJcbiAgICB0aGlzLmNvbnRleHREYXRhLmNUci5yZXNldCgpO1xyXG4gICAgdGhpcy5jb250ZXh0RGF0YS5jTyA9IDE7XHJcbn07XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uKHRyYW5zZm9ybUNhbnZhcyl7XHJcbiAgICB2YXIgbWF4U2NhbGUgPSBNYXRoLm1heCh0cmFuc2Zvcm1DYW52YXMuc3gsdHJhbnNmb3JtQ2FudmFzLnN5KTtcclxuICAgIHRoaXMuY2FudmFzLndpZHRoID0gdGhpcy5kYXRhLncqbWF4U2NhbGU7XHJcbiAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmRhdGEuaCptYXhTY2FsZTtcclxuICAgIHRoaXMudHJhbnNmb3JtQ2FudmFzID0ge1xyXG4gICAgICAgIHNjOm1heFNjYWxlLFxyXG4gICAgICAgIHc6dGhpcy5kYXRhLncqbWF4U2NhbGUsXHJcbiAgICAgICAgaDp0aGlzLmRhdGEuaCptYXhTY2FsZSxcclxuICAgICAgICBwcm9wczpbbWF4U2NhbGUsMCwwLDAsMCxtYXhTY2FsZSwwLDAsMCwwLDEsMCwwLDAsMCwxXVxyXG4gICAgfVxyXG4gICAgdmFyIGksbGVuID0gdGhpcy5lbGVtZW50cy5sZW5ndGg7XHJcbiAgICBmb3IoIGkgPSAwOyBpIDwgbGVuOyBpKz0xICl7XHJcbiAgICAgICAgaWYodGhpcy5lbGVtZW50c1tpXSAmJiB0aGlzLmVsZW1lbnRzW2ldLmRhdGEudHkgPT09IDApe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLnJlc2l6ZSh0cmFuc2Zvcm1DYW52YXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuXHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLnByZXBhcmVGcmFtZSA9IGZ1bmN0aW9uKG51bSl7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEuZnJhbWVJZCA9IHRoaXMucGFyZW50R2xvYmFsRGF0YS5mcmFtZUlkO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLm1kZiA9IGZhbHNlO1xyXG4gICAgdGhpcy5fcGFyZW50LnByZXBhcmVGcmFtZS5jYWxsKHRoaXMsbnVtKTtcclxuICAgIGlmKHRoaXMuaXNWaXNpYmxlPT09ZmFsc2UgJiYgIXRoaXMuZGF0YS54dCl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdmFyIHRpbWVSZW1hcHBlZCA9IG51bTtcclxuICAgIGlmKHRoaXMudG0pe1xyXG4gICAgICAgIHRpbWVSZW1hcHBlZCA9IHRoaXMudG0udjtcclxuICAgICAgICBpZih0aW1lUmVtYXBwZWQgPT09IHRoaXMuZGF0YS5vcCl7XHJcbiAgICAgICAgICAgIHRpbWVSZW1hcHBlZCA9IHRoaXMuZGF0YS5vcCAtIDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJlZEZyYW1lID0gdGltZVJlbWFwcGVkL3RoaXMuZGF0YS5zcjtcclxuICAgIHZhciBpLGxlbiA9IHRoaXMuZWxlbWVudHMubGVuZ3RoO1xyXG5cclxuICAgIGlmKCF0aGlzLmNvbXBsZXRlTGF5ZXJzKXtcclxuICAgICAgICB0aGlzLmNoZWNrTGF5ZXJzKG51bSk7XHJcbiAgICB9XHJcblxyXG4gICAgZm9yKCBpID0gMDsgaSA8IGxlbjsgaSs9MSApe1xyXG4gICAgICAgIGlmKHRoaXMuY29tcGxldGVMYXllcnMgfHwgdGhpcy5lbGVtZW50c1tpXSl7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHNbaV0ucHJlcGFyZUZyYW1lKHRpbWVSZW1hcHBlZC90aGlzLmRhdGEuc3IgLSB0aGlzLmxheWVyc1tpXS5zdCk7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZWxlbWVudHNbaV0uZGF0YS50eSA9PT0gMCAmJiB0aGlzLmVsZW1lbnRzW2ldLmdsb2JhbERhdGEubWRmKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYodGhpcy5nbG9iYWxEYXRhLm1kZiAmJiAhdGhpcy5kYXRhLnh0KXtcclxuICAgICAgICB0aGlzLmNhbnZhc0NvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHRoaXMuZGF0YS53LCB0aGlzLmRhdGEuaCk7XHJcbiAgICAgICAgdGhpcy5jdHhUcmFuc2Zvcm0odGhpcy50cmFuc2Zvcm1DYW52YXMucHJvcHMpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihwYXJlbnRNYXRyaXgpe1xyXG4gICAgaWYodGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcyxwYXJlbnRNYXRyaXgpPT09ZmFsc2Upe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZ2xvYmFsRGF0YS5tZGYpe1xyXG4gICAgICAgIHZhciBpLGxlbiA9IHRoaXMubGF5ZXJzLmxlbmd0aDtcclxuICAgICAgICBmb3IoIGkgPSBsZW4gLSAxOyBpID49IDA7IGkgLT0gMSApe1xyXG4gICAgICAgICAgICBpZih0aGlzLmNvbXBsZXRlTGF5ZXJzIHx8IHRoaXMuZWxlbWVudHNbaV0pe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1tpXS5yZW5kZXJGcmFtZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5yZXN0b3JlKHRydWUpO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMucGFyZW50R2xvYmFsRGF0YS5yZW5kZXJlci5zYXZlKCk7XHJcbiAgICB0aGlzLnBhcmVudEdsb2JhbERhdGEucmVuZGVyZXIuY3R4VHJhbnNmb3JtKHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0LnByb3BzKTtcclxuICAgIHRoaXMucGFyZW50R2xvYmFsRGF0YS5yZW5kZXJlci5jdHhPcGFjaXR5KHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BhY2l0eSk7XHJcbiAgICB0aGlzLnBhcmVudEdsb2JhbERhdGEucmVuZGVyZXIuY2FudmFzQ29udGV4dC5kcmF3SW1hZ2UodGhpcy5jYW52YXMsMCwwLHRoaXMuZGF0YS53LHRoaXMuZGF0YS5oKTtcclxuICAgIHRoaXMucGFyZW50R2xvYmFsRGF0YS5yZW5kZXJlci5yZXN0b3JlKCk7XHJcblxyXG4gICAgaWYodGhpcy5nbG9iYWxEYXRhLm1kZil7XHJcbiAgICAgICAgdGhpcy5yZXNldCgpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuc2V0RWxlbWVudHMgPSBmdW5jdGlvbihlbGVtcyl7XHJcbiAgICB0aGlzLmVsZW1lbnRzID0gZWxlbXM7XHJcbn07XHJcblxyXG5DVkNvbXBFbGVtZW50LnByb3RvdHlwZS5nZXRFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50cztcclxufTtcclxuXHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIGksbGVuID0gdGhpcy5sYXllcnMubGVuZ3RoO1xyXG4gICAgZm9yKCBpID0gbGVuIC0gMTsgaSA+PSAwOyBpIC09IDEgKXtcclxuICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICAgIHRoaXMubGF5ZXJzID0gbnVsbDtcclxuICAgIHRoaXMuZWxlbWVudHMgPSBudWxsO1xyXG4gICAgdGhpcy5fcGFyZW50LmRlc3Ryb3kuY2FsbCh0aGlzLl9wYXJlbnQpO1xyXG59O1xyXG5DVkNvbXBFbGVtZW50LnByb3RvdHlwZS5jaGVja0xheWVycyA9IENhbnZhc1JlbmRlcmVyLnByb3RvdHlwZS5jaGVja0xheWVycztcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuYnVpbGRJdGVtID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmJ1aWxkSXRlbTtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuY2hlY2tQZW5kaW5nRWxlbWVudHMgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY2hlY2tQZW5kaW5nRWxlbWVudHM7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50ID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmFkZFBlbmRpbmdFbGVtZW50O1xyXG5DVkNvbXBFbGVtZW50LnByb3RvdHlwZS5idWlsZEFsbEl0ZW1zID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmJ1aWxkQWxsSXRlbXM7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUl0ZW0gPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlSXRlbTtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlSW1hZ2UgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlSW1hZ2U7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUNvbXAgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQ29tcDtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU29saWQgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU29saWQ7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYXBlID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVNoYXBlO1xyXG5DVkNvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVUZXh0ID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZVRleHQ7XHJcbkNWQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUJhc2UgPSBDYW52YXNSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQmFzZTtcclxuQ1ZDb21wRWxlbWVudC5wcm90b3R5cGUuYnVpbGRFbGVtZW50UGFyZW50aW5nID0gQ2FudmFzUmVuZGVyZXIucHJvdG90eXBlLmJ1aWxkRWxlbWVudFBhcmVudGluZztcbmZ1bmN0aW9uIENWSW1hZ2VFbGVtZW50KGRhdGEsIGNvbXAsZ2xvYmFsRGF0YSl7XHJcbiAgICB0aGlzLmFzc2V0RGF0YSA9IGdsb2JhbERhdGEuZ2V0QXNzZXREYXRhKGRhdGEucmVmSWQpO1xyXG4gICAgdGhpcy5fcGFyZW50LmNvbnN0cnVjdG9yLmNhbGwodGhpcyxkYXRhLCBjb21wLGdsb2JhbERhdGEpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLmFkZFBlbmRpbmdFbGVtZW50KCk7XHJcbn1cclxuY3JlYXRlRWxlbWVudChDVkJhc2VFbGVtZW50LCBDVkltYWdlRWxlbWVudCk7XHJcblxyXG5DVkltYWdlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIGltYWdlTG9hZGVkID0gZnVuY3Rpb24oKXtcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEuZWxlbWVudExvYWRlZCgpO1xyXG4gICAgICAgIGlmKHRoaXMuYXNzZXREYXRhLncgIT09IHRoaXMuaW1nLndpZHRoIHx8IHRoaXMuYXNzZXREYXRhLmggIT09IHRoaXMuaW1nLmhlaWdodCl7XHJcbiAgICAgICAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuICAgICAgICAgICAgY2FudmFzLndpZHRoID0gdGhpcy5hc3NldERhdGEudztcclxuICAgICAgICAgICAgY2FudmFzLmhlaWdodCA9IHRoaXMuYXNzZXREYXRhLmg7XHJcbiAgICAgICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBpbWdXID0gdGhpcy5pbWcud2lkdGg7XHJcbiAgICAgICAgICAgIHZhciBpbWdIID0gdGhpcy5pbWcuaGVpZ2h0O1xyXG4gICAgICAgICAgICB2YXIgaW1nUmVsID0gaW1nVyAvIGltZ0g7XHJcbiAgICAgICAgICAgIHZhciBjYW52YXNSZWwgPSB0aGlzLmFzc2V0RGF0YS53L3RoaXMuYXNzZXREYXRhLmg7XHJcbiAgICAgICAgICAgIHZhciB3aWR0aENyb3AsIGhlaWdodENyb3A7XHJcbiAgICAgICAgICAgIGlmKGltZ1JlbD5jYW52YXNSZWwpe1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0Q3JvcCA9IGltZ0g7XHJcbiAgICAgICAgICAgICAgICB3aWR0aENyb3AgPSBoZWlnaHRDcm9wKmNhbnZhc1JlbDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoQ3JvcCA9IGltZ1c7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHRDcm9wID0gd2lkdGhDcm9wL2NhbnZhc1JlbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1nLChpbWdXLXdpZHRoQ3JvcCkvMiwoaW1nSC1oZWlnaHRDcm9wKS8yLHdpZHRoQ3JvcCxoZWlnaHRDcm9wLDAsMCx0aGlzLmFzc2V0RGF0YS53LHRoaXMuYXNzZXREYXRhLmgpO1xyXG4gICAgICAgICAgICB0aGlzLmltZyA9IGNhbnZhcztcclxuICAgICAgICB9XHJcbiAgICB9LmJpbmQodGhpcyk7XHJcbiAgICB2YXIgaW1hZ2VGYWlsZWQgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuZmFpbGVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEuZWxlbWVudExvYWRlZCgpO1xyXG4gICAgfS5iaW5kKHRoaXMpO1xyXG5cclxuICAgIHRoaXMuaW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgaW1hZ2VMb2FkZWQsIGZhbHNlKTtcclxuICAgIHRoaXMuaW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgaW1hZ2VGYWlsZWQsIGZhbHNlKTtcclxuICAgIHZhciBhc3NldFBhdGggPSB0aGlzLmdsb2JhbERhdGEuZ2V0QXNzZXRzUGF0aCh0aGlzLmFzc2V0RGF0YSk7XHJcbiAgICB0aGlzLmltZy5zcmMgPSBhc3NldFBhdGg7XHJcblxyXG4gICAgdGhpcy5fcGFyZW50LmNyZWF0ZUVsZW1lbnRzLmNhbGwodGhpcyk7XHJcblxyXG59O1xyXG5cclxuQ1ZJbWFnZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZyYW1lID0gZnVuY3Rpb24ocGFyZW50TWF0cml4KXtcclxuICAgIGlmKHRoaXMuZmFpbGVkKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLl9wYXJlbnQucmVuZGVyRnJhbWUuY2FsbCh0aGlzLHBhcmVudE1hdHJpeCk9PT1mYWxzZSl7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdmFyIGN0eCA9IHRoaXMuY2FudmFzQ29udGV4dDtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5zYXZlKCk7XHJcbiAgICB2YXIgZmluYWxNYXQgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdC5wcm9wcztcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5jdHhUcmFuc2Zvcm0oZmluYWxNYXQpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnJlbmRlcmVyLmN0eE9wYWNpdHkodGhpcy5maW5hbFRyYW5zZm9ybS5vcGFjaXR5KTtcclxuICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5pbWcsMCwwKTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5yZXN0b3JlKHRoaXMuZGF0YS5oYXNNYXNrKTtcclxuICAgIGlmKHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgdGhpcy5maXJzdEZyYW1lID0gZmFsc2U7XHJcbiAgICB9XHJcbn07XHJcblxyXG5DVkltYWdlRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmltZyA9IG51bGw7XHJcbiAgICB0aGlzLl9wYXJlbnQuZGVzdHJveS5jYWxsKHRoaXMuX3BhcmVudCk7XHJcbn07XG5cclxuZnVuY3Rpb24gQ1ZNYXNrRWxlbWVudChkYXRhLGVsZW1lbnQpe1xyXG4gICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gW107XHJcbiAgICB0aGlzLm1hc2tzUHJvcGVydGllcyA9IHRoaXMuZGF0YS5tYXNrc1Byb3BlcnRpZXM7XHJcbiAgICB0aGlzLnZpZXdEYXRhID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMubWFza3NQcm9wZXJ0aWVzLmxlbmd0aH0pO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMubWFza3NQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgIHRoaXMudmlld0RhdGFbaV0gPSBTaGFwZVByb3BlcnR5RmFjdG9yeS5nZXRTaGFwZVByb3AodGhpcy5lbGVtZW50LHRoaXMubWFza3NQcm9wZXJ0aWVzW2ldLDMsdGhpcy5keW5hbWljUHJvcGVydGllcyxudWxsKTtcclxuICAgIH1cclxufVxyXG5cclxuQ1ZNYXNrRWxlbWVudC5wcm90b3R5cGUucHJlcGFyZUZyYW1lID0gZnVuY3Rpb24obnVtKXtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZShudW0pO1xyXG4gICAgICAgIGlmKHRoaXMuZHluYW1pY1Byb3BlcnRpZXNbaV0ubWRmKXtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50Lmdsb2JhbERhdGEubWRmID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblxyXG5DVk1hc2tFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uICh0cmFuc2Zvcm0pIHtcclxuICAgIHZhciBjdHggPSB0aGlzLmVsZW1lbnQuY2FudmFzQ29udGV4dDtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmRhdGEubWFza3NQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIHZhciBwdCxwdDIscHQzLGRhdGEsIGhhc01hc2tzID0gZmFsc2U7XHJcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICBpZih0aGlzLm1hc2tzUHJvcGVydGllc1tpXS5tb2RlID09PSAnbicpe1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoaGFzTWFza3MgPT09IGZhbHNlKXtcclxuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICBoYXNNYXNrcyA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm1hc2tzUHJvcGVydGllc1tpXS5pbnYpIHtcclxuICAgICAgICAgICAgY3R4Lm1vdmVUbygwLCAwKTtcclxuICAgICAgICAgICAgY3R4LmxpbmVUbyh0aGlzLmVsZW1lbnQuZ2xvYmFsRGF0YS5jb21wV2lkdGgsIDApO1xyXG4gICAgICAgICAgICBjdHgubGluZVRvKHRoaXMuZWxlbWVudC5nbG9iYWxEYXRhLmNvbXBXaWR0aCwgdGhpcy5lbGVtZW50Lmdsb2JhbERhdGEuY29tcEhlaWdodCk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8oMCwgdGhpcy5lbGVtZW50Lmdsb2JhbERhdGEuY29tcEhlaWdodCk7XHJcbiAgICAgICAgICAgIGN0eC5saW5lVG8oMCwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRhdGEgPSB0aGlzLnZpZXdEYXRhW2ldLnY7XHJcbiAgICAgICAgcHQgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0uYXBwbHlUb1BvaW50QXJyYXkoZGF0YS52WzBdWzBdLGRhdGEudlswXVsxXSwwKTpkYXRhLnZbMF07XHJcbiAgICAgICAgY3R4Lm1vdmVUbyhwdFswXSwgcHRbMV0pO1xyXG4gICAgICAgIHZhciBqLCBqTGVuID0gZGF0YS5fbGVuZ3RoO1xyXG4gICAgICAgIGZvciAoaiA9IDE7IGogPCBqTGVuOyBqKyspIHtcclxuICAgICAgICAgICAgcHQgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0uYXBwbHlUb1BvaW50QXJyYXkoZGF0YS5vW2ogLSAxXVswXSxkYXRhLm9baiAtIDFdWzFdLDApIDogZGF0YS5vW2ogLSAxXTtcclxuICAgICAgICAgICAgcHQyID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KGRhdGEuaVtqXVswXSxkYXRhLmlbal1bMV0sMCkgOiBkYXRhLmlbal07XHJcbiAgICAgICAgICAgIHB0MyA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybS5hcHBseVRvUG9pbnRBcnJheShkYXRhLnZbal1bMF0sZGF0YS52W2pdWzFdLDApIDogZGF0YS52W2pdO1xyXG4gICAgICAgICAgICBjdHguYmV6aWVyQ3VydmVUbyhwdFswXSwgcHRbMV0sIHB0MlswXSwgcHQyWzFdLCBwdDNbMF0sIHB0M1sxXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHB0ID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KGRhdGEub1tqIC0gMV1bMF0sZGF0YS5vW2ogLSAxXVsxXSwwKSA6IGRhdGEub1tqIC0gMV07XHJcbiAgICAgICAgcHQyID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KGRhdGEuaVswXVswXSxkYXRhLmlbMF1bMV0sMCkgOiBkYXRhLmlbMF07XHJcbiAgICAgICAgcHQzID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtLmFwcGx5VG9Qb2ludEFycmF5KGRhdGEudlswXVswXSxkYXRhLnZbMF1bMV0sMCkgOiBkYXRhLnZbMF07XHJcbiAgICAgICAgY3R4LmJlemllckN1cnZlVG8ocHRbMF0sIHB0WzFdLCBwdDJbMF0sIHB0MlsxXSwgcHQzWzBdLCBwdDNbMV0pO1xyXG4gICAgfVxyXG4gICAgaWYoaGFzTWFza3Mpe1xyXG4gICAgICAgIGN0eC5jbGlwKCk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5DVk1hc2tFbGVtZW50LnByb3RvdHlwZS5nZXRNYXNrUHJvcGVydHkgPSBNYXNrRWxlbWVudC5wcm90b3R5cGUuZ2V0TWFza1Byb3BlcnR5O1xyXG5cclxuQ1ZNYXNrRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xyXG59O1xuZnVuY3Rpb24gQ1ZTaGFwZUVsZW1lbnQoZGF0YSwgY29tcCxnbG9iYWxEYXRhKXtcclxuICAgIHRoaXMuc2hhcGVzID0gW107XHJcbiAgICB0aGlzLnNoYXBlc0RhdGEgPSBkYXRhLnNoYXBlcztcclxuICAgIHRoaXMuc3R5bGVzTGlzdCA9IFtdO1xyXG4gICAgdGhpcy5pdGVtc0RhdGEgPSBbXTtcclxuICAgIHRoaXMucHJldlZpZXdEYXRhID0gW107XHJcbiAgICB0aGlzLnNoYXBlTW9kaWZpZXJzID0gW107XHJcbiAgICB0aGlzLnByb2Nlc3NlZEVsZW1lbnRzID0gW107XHJcbiAgICB0aGlzLl9wYXJlbnQuY29uc3RydWN0b3IuY2FsbCh0aGlzLGRhdGEsIGNvbXAsZ2xvYmFsRGF0YSk7XHJcbn1cclxuY3JlYXRlRWxlbWVudChDVkJhc2VFbGVtZW50LCBDVlNoYXBlRWxlbWVudCk7XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUudHJhbnNmb3JtSGVscGVyID0ge29wYWNpdHk6MSxtYXQ6bmV3IE1hdHJpeCgpLG1hdE1kZjpmYWxzZSxvcE1kZjpmYWxzZX07XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuZGFzaFJlc2V0dGVyID0gW107XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG5cclxuICAgIHRoaXMuX3BhcmVudC5jcmVhdGVFbGVtZW50cy5jYWxsKHRoaXMpO1xyXG4gICAgdGhpcy5zZWFyY2hTaGFwZXModGhpcy5zaGFwZXNEYXRhLHRoaXMuaXRlbXNEYXRhLHRoaXMucHJldlZpZXdEYXRhLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMsIHRydWUpO1xyXG59O1xyXG5cclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVN0eWxlRWxlbWVudCA9IGZ1bmN0aW9uKGRhdGEsIGR5bmFtaWNQcm9wZXJ0aWVzKXtcclxuICAgIHZhciBzdHlsZUVsZW0gPSB7XHJcbiAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICB0eXBlOiBkYXRhLnR5LFxyXG4gICAgICAgIGVsZW1lbnRzOiBbXVxyXG4gICAgfTtcclxuICAgIHZhciBlbGVtZW50RGF0YSA9IHt9O1xyXG4gICAgaWYoZGF0YS50eSA9PSAnZmwnIHx8IGRhdGEudHkgPT0gJ3N0Jyl7XHJcbiAgICAgICAgZWxlbWVudERhdGEuYyA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsZGF0YS5jLDEsMjU1LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICBpZighZWxlbWVudERhdGEuYy5rKXtcclxuICAgICAgICAgICAgc3R5bGVFbGVtLmNvID0gJ3JnYignK2JtX2Zsb29yKGVsZW1lbnREYXRhLmMudlswXSkrJywnK2JtX2Zsb29yKGVsZW1lbnREYXRhLmMudlsxXSkrJywnK2JtX2Zsb29yKGVsZW1lbnREYXRhLmMudlsyXSkrJyknO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsZW1lbnREYXRhLm8gPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcCh0aGlzLGRhdGEubywwLDAuMDEsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgaWYoZGF0YS50eSA9PSAnc3QnKSB7XHJcbiAgICAgICAgc3R5bGVFbGVtLmxjID0gdGhpcy5sY0VudW1bZGF0YS5sY10gfHwgJ3JvdW5kJztcclxuICAgICAgICBzdHlsZUVsZW0ubGogPSB0aGlzLmxqRW51bVtkYXRhLmxqXSB8fCAncm91bmQnO1xyXG4gICAgICAgIGlmKGRhdGEubGogPT0gMSkge1xyXG4gICAgICAgICAgICBzdHlsZUVsZW0ubWwgPSBkYXRhLm1sO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbGVtZW50RGF0YS53ID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcyxkYXRhLncsMCxudWxsLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICBpZighZWxlbWVudERhdGEudy5rKXtcclxuICAgICAgICAgICAgc3R5bGVFbGVtLndpID0gZWxlbWVudERhdGEudy52O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihkYXRhLmQpe1xyXG4gICAgICAgICAgICB2YXIgZCA9IFByb3BlcnR5RmFjdG9yeS5nZXREYXNoUHJvcCh0aGlzLGRhdGEuZCwnY2FudmFzJyxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgIGVsZW1lbnREYXRhLmQgPSBkO1xyXG4gICAgICAgICAgICBpZighZWxlbWVudERhdGEuZC5rKXtcclxuICAgICAgICAgICAgICAgIHN0eWxlRWxlbS5kYSA9IGVsZW1lbnREYXRhLmQuZGFzaGFycmF5O1xyXG4gICAgICAgICAgICAgICAgc3R5bGVFbGVtLmRvID0gZWxlbWVudERhdGEuZC5kYXNob2Zmc2V0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgIHN0eWxlRWxlbS5yID0gZGF0YS5yID09PSAyID8gJ2V2ZW5vZGQnIDogJ25vbnplcm8nO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zdHlsZXNMaXN0LnB1c2goc3R5bGVFbGVtKTtcclxuICAgIGVsZW1lbnREYXRhLnN0eWxlID0gc3R5bGVFbGVtO1xyXG4gICAgcmV0dXJuIGVsZW1lbnREYXRhO1xyXG59XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlR3JvdXBFbGVtZW50ID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgdmFyIGVsZW1lbnREYXRhID0ge1xyXG4gICAgICAgIGl0OiBbXSxcclxuICAgICAgICBwcmV2Vmlld0RhdGE6IFtdXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGVsZW1lbnREYXRhO1xyXG59XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlVHJhbnNmb3JtRWxlbWVudCA9IGZ1bmN0aW9uKGRhdGEsIGR5bmFtaWNQcm9wZXJ0aWVzKSB7XHJcbiAgICB2YXIgZWxlbWVudERhdGEgPSB7XHJcbiAgICAgICAgdHJhbnNmb3JtIDoge1xyXG4gICAgICAgICAgICBtYXQ6IG5ldyBNYXRyaXgoKSxcclxuICAgICAgICAgICAgb3BhY2l0eTogMSxcclxuICAgICAgICAgICAgbWF0TWRmOmZhbHNlLFxyXG4gICAgICAgICAgICBvcE1kZjpmYWxzZSxcclxuICAgICAgICAgICAgb3A6IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsZGF0YS5vLDAsMC4wMSxkeW5hbWljUHJvcGVydGllcyksXHJcbiAgICAgICAgICAgIG1Qcm9wczogUHJvcGVydHlGYWN0b3J5LmdldFByb3AodGhpcyxkYXRhLDIsbnVsbCxkeW5hbWljUHJvcGVydGllcylcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVsZW1lbnRzOiBbXVxyXG4gICAgfTtcclxuICAgIHJldHVybiBlbGVtZW50RGF0YTtcclxufVxyXG5cclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYXBlRWxlbWVudCA9IGZ1bmN0aW9uKGRhdGEsIGR5bmFtaWNQcm9wZXJ0aWVzKSB7XHJcbiAgICB2YXIgZWxlbWVudERhdGEgPSB7XHJcbiAgICAgICAgbm9kZXM6W10sXHJcbiAgICAgICAgdHJOb2RlczpbXSxcclxuICAgICAgICB0cjpbMCwwLDAsMCwwLDBdXHJcbiAgICB9O1xyXG4gICAgdmFyIHR5ID0gNDtcclxuICAgIGlmKGRhdGEudHkgPT0gJ3JjJyl7XHJcbiAgICAgICAgdHkgPSA1O1xyXG4gICAgfWVsc2UgaWYoZGF0YS50eSA9PSAnZWwnKXtcclxuICAgICAgICB0eSA9IDY7XHJcbiAgICB9ZWxzZSBpZihkYXRhLnR5ID09ICdzcicpe1xyXG4gICAgICAgIHR5ID0gNztcclxuICAgIH1cclxuICAgIGVsZW1lbnREYXRhLnNoID0gU2hhcGVQcm9wZXJ0eUZhY3RvcnkuZ2V0U2hhcGVQcm9wKHRoaXMsZGF0YSx0eSxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB0aGlzLnNoYXBlcy5wdXNoKGVsZW1lbnREYXRhLnNoKTtcclxuICAgIHRoaXMuYWRkU2hhcGVUb01vZGlmaWVycyhlbGVtZW50RGF0YSk7XHJcbiAgICBqTGVuID0gdGhpcy5zdHlsZXNMaXN0Lmxlbmd0aDtcclxuICAgIHZhciBoYXNTdHJva2VzID0gZmFsc2UsIGhhc0ZpbGxzID0gZmFsc2U7XHJcbiAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICBpZighdGhpcy5zdHlsZXNMaXN0W2pdLmNsb3NlZCl7XHJcbiAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtqXS5lbGVtZW50cy5wdXNoKGVsZW1lbnREYXRhKTtcclxuICAgICAgICAgICAgaWYodGhpcy5zdHlsZXNMaXN0W2pdLnR5cGUgPT09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgaGFzU3Ryb2tlcyA9IHRydWU7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgaGFzRmlsbHMgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxlbWVudERhdGEuc3QgPSBoYXNTdHJva2VzO1xyXG4gICAgZWxlbWVudERhdGEuZmwgPSBoYXNGaWxscztcclxuICAgIHJldHVybiBlbGVtZW50RGF0YTtcclxufVxyXG5cclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbG9hZFNoYXBlcyA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLmZpcnN0RnJhbWUgPSB0cnVlO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuaXRlbXNEYXRhLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5wcmV2Vmlld0RhdGFbaV0gPSB0aGlzLml0ZW1zRGF0YVtpXTtcclxuICAgIH1cclxuICAgIHRoaXMuc2VhcmNoU2hhcGVzKHRoaXMuc2hhcGVzRGF0YSx0aGlzLml0ZW1zRGF0YSx0aGlzLnByZXZWaWV3RGF0YSx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLCB0cnVlKTtcclxuICAgIHZhciBpLCBsZW4gPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdGhpcy5keW5hbWljUHJvcGVydGllc1tpXS5nZXRWYWx1ZSgpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5yZW5kZXJNb2RpZmllcnMoKTtcclxufVxyXG5cclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLnNlYXJjaFNoYXBlcyA9IGZ1bmN0aW9uKGFycixpdGVtc0RhdGEsIHByZXZWaWV3RGF0YSxkeW5hbWljUHJvcGVydGllcywgcmVuZGVyKXtcclxuICAgIHZhciBpLCBsZW4gPSBhcnIubGVuZ3RoIC0gMTtcclxuICAgIHZhciBqLCBqTGVuO1xyXG4gICAgdmFyIG93bkFycmF5cyA9IFtdLCBvd25Nb2RpZmllcnMgPSBbXSwgcHJvY2Vzc2VkUG9zO1xyXG4gICAgZm9yKGk9bGVuO2k+PTA7aS09MSl7XHJcbiAgICAgICAgcHJvY2Vzc2VkUG9zID0gdGhpcy5zZWFyY2hQcm9jZXNzZWRFbGVtZW50KGFycltpXSk7XHJcbiAgICAgICAgaWYoIXByb2Nlc3NlZFBvcyl7XHJcbiAgICAgICAgICAgIGFycltpXS5fcmVuZGVyID0gcmVuZGVyO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGl0ZW1zRGF0YVtpXSA9IHByZXZWaWV3RGF0YVtwcm9jZXNzZWRQb3MgLSAxXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoYXJyW2ldLnR5ID09ICdmbCcgfHwgYXJyW2ldLnR5ID09ICdzdCcpe1xyXG4gICAgICAgICAgICBpZighcHJvY2Vzc2VkUG9zKXtcclxuICAgICAgICAgICAgICAgIGl0ZW1zRGF0YVtpXSA9IHRoaXMuY3JlYXRlU3R5bGVFbGVtZW50KGFycltpXSwgZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldLnN0eWxlLmNsb3NlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBvd25BcnJheXMucHVzaChpdGVtc0RhdGFbaV0uc3R5bGUpO1xyXG4gICAgICAgIH1lbHNlIGlmKGFycltpXS50eSA9PSAnZ3InKXtcclxuICAgICAgICAgICAgaWYoIXByb2Nlc3NlZFBvcyl7XHJcbiAgICAgICAgICAgICAgICBpdGVtc0RhdGFbaV0gPSB0aGlzLmNyZWF0ZUdyb3VwRWxlbWVudChhcnJbaV0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgakxlbiA9IGl0ZW1zRGF0YVtpXS5pdC5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtc0RhdGFbaV0ucHJldlZpZXdEYXRhW2pdID0gaXRlbXNEYXRhW2ldLml0W2pdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc2VhcmNoU2hhcGVzKGFycltpXS5pdCxpdGVtc0RhdGFbaV0uaXQsaXRlbXNEYXRhW2ldLnByZXZWaWV3RGF0YSxkeW5hbWljUHJvcGVydGllcywgcmVuZGVyKTtcclxuICAgICAgICB9ZWxzZSBpZihhcnJbaV0udHkgPT0gJ3RyJyl7XHJcbiAgICAgICAgICAgIGlmKCFwcm9jZXNzZWRQb3Mpe1xyXG4gICAgICAgICAgICAgICAgaXRlbXNEYXRhW2ldID0gdGhpcy5jcmVhdGVUcmFuc2Zvcm1FbGVtZW50KGFycltpXSwgZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2UgaWYoYXJyW2ldLnR5ID09ICdzaCcgfHwgYXJyW2ldLnR5ID09ICdyYycgfHwgYXJyW2ldLnR5ID09ICdlbCcgfHwgYXJyW2ldLnR5ID09ICdzcicpe1xyXG4gICAgICAgICAgICBpZighcHJvY2Vzc2VkUG9zKXtcclxuICAgICAgICAgICAgICAgIGl0ZW1zRGF0YVtpXSA9IHRoaXMuY3JlYXRlU2hhcGVFbGVtZW50KGFycltpXSwgZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1lbHNlIGlmKGFycltpXS50eSA9PSAndG0nIHx8IGFycltpXS50eSA9PSAncmQnKXtcclxuICAgICAgICAgICAgaWYoIXByb2Nlc3NlZFBvcyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgbW9kaWZpZXIgPSBTaGFwZU1vZGlmaWVycy5nZXRNb2RpZmllcihhcnJbaV0udHkpO1xyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXIuaW5pdCh0aGlzLGFycltpXSxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICBpdGVtc0RhdGFbaV0gPSBtb2RpZmllcjtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hhcGVNb2RpZmllcnMucHVzaChtb2RpZmllcik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBtb2RpZmllciA9IGl0ZW1zRGF0YVtpXTtcclxuICAgICAgICAgICAgICAgIG1vZGlmaWVyLmNsb3NlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG93bk1vZGlmaWVycy5wdXNoKG1vZGlmaWVyKTtcclxuICAgICAgICB9IGVsc2UgaWYoYXJyW2ldLnR5ID09ICdycCcpe1xyXG4gICAgICAgICAgICBpZighcHJvY2Vzc2VkUG9zKXtcclxuICAgICAgICAgICAgICAgIG1vZGlmaWVyID0gU2hhcGVNb2RpZmllcnMuZ2V0TW9kaWZpZXIoYXJyW2ldLnR5KTtcclxuICAgICAgICAgICAgICAgIGl0ZW1zRGF0YVtpXSA9IG1vZGlmaWVyO1xyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXIuaW5pdCh0aGlzLGFycixpLGl0ZW1zRGF0YSxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNoYXBlTW9kaWZpZXJzLnB1c2gobW9kaWZpZXIpO1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXIgPSBpdGVtc0RhdGFbaV07XHJcbiAgICAgICAgICAgICAgICBtb2RpZmllci5jbG9zZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG93bk1vZGlmaWVycy5wdXNoKG1vZGlmaWVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hZGRQcm9jZXNzZWRFbGVtZW50KGFycltpXSwgaSArIDEpO1xyXG4gICAgfVxyXG4gICAgbGVuID0gb3duQXJyYXlzLmxlbmd0aDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgb3duQXJyYXlzW2ldLmNsb3NlZCA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBsZW4gPSBvd25Nb2RpZmllcnMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBvd25Nb2RpZmllcnNbaV0uY2xvc2VkID0gdHJ1ZTtcclxuICAgIH1cclxufTtcclxuXHJcbkNWU2hhcGVFbGVtZW50LnByb3RvdHlwZS5hZGRTaGFwZVRvTW9kaWZpZXJzID0gSVNoYXBlRWxlbWVudC5wcm90b3R5cGUuYWRkU2hhcGVUb01vZGlmaWVycztcclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlck1vZGlmaWVycyA9IElTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlck1vZGlmaWVycztcclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLmxjRW51bSA9IElTaGFwZUVsZW1lbnQucHJvdG90eXBlLmxjRW51bTtcclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLmxqRW51bSA9IElTaGFwZUVsZW1lbnQucHJvdG90eXBlLmxqRW51bTtcclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLnNlYXJjaFByb2Nlc3NlZEVsZW1lbnQgPSBJU2hhcGVFbGVtZW50LnByb3RvdHlwZS5zZWFyY2hQcm9jZXNzZWRFbGVtZW50O1xyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuYWRkUHJvY2Vzc2VkRWxlbWVudCA9IElTaGFwZUVsZW1lbnQucHJvdG90eXBlLmFkZFByb2Nlc3NlZEVsZW1lbnQ7XHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbihwYXJlbnRNYXRyaXgpe1xyXG4gICAgaWYodGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcywgcGFyZW50TWF0cml4KT09PWZhbHNlKXtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLnRyYW5zZm9ybUhlbHBlci5tYXQucmVzZXQoKTtcclxuICAgIHRoaXMudHJhbnNmb3JtSGVscGVyLm9wYWNpdHkgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wYWNpdHk7XHJcbiAgICB0aGlzLnRyYW5zZm9ybUhlbHBlci5tYXRNZGYgPSBmYWxzZTtcclxuICAgIHRoaXMudHJhbnNmb3JtSGVscGVyLm9wTWRmID0gdGhpcy5maW5hbFRyYW5zZm9ybS5vcE1kZjtcclxuICAgIHRoaXMucmVuZGVyTW9kaWZpZXJzKCk7XHJcbiAgICB0aGlzLnJlbmRlclNoYXBlKHRoaXMudHJhbnNmb3JtSGVscGVyLG51bGwsbnVsbCx0cnVlKTtcclxuICAgIGlmKHRoaXMuZGF0YS5oYXNNYXNrKXtcclxuICAgICAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIucmVzdG9yZSh0cnVlKTtcclxuICAgIH1cclxufTtcclxuXHJcbkNWU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJTaGFwZSA9IGZ1bmN0aW9uKHBhcmVudFRyYW5zZm9ybSxpdGVtcyxkYXRhLGlzTWFpbil7XHJcbiAgICB2YXIgaSwgbGVuO1xyXG4gICAgaWYoIWl0ZW1zKXtcclxuICAgICAgICBpdGVtcyA9IHRoaXMuc2hhcGVzRGF0YTtcclxuICAgICAgICBsZW4gPSB0aGlzLnN0eWxlc0xpc3QubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5kID0gJyc7XHJcbiAgICAgICAgICAgIHRoaXMuc3R5bGVzTGlzdFtpXS5tZGYgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZighZGF0YSl7XHJcbiAgICAgICAgZGF0YSA9IHRoaXMuaXRlbXNEYXRhO1xyXG4gICAgfVxyXG4gICAgLy8vXHJcbiAgICAvLy9cclxuICAgIGxlbiA9IGl0ZW1zLmxlbmd0aCAtIDE7XHJcbiAgICB2YXIgZ3JvdXBUcmFuc2Zvcm0sZ3JvdXBNYXRyaXg7XHJcbiAgICBncm91cFRyYW5zZm9ybSA9IHBhcmVudFRyYW5zZm9ybTtcclxuICAgIGZvcihpPWxlbjtpPj0wO2ktPTEpe1xyXG4gICAgICAgIGlmKGl0ZW1zW2ldLnR5ID09ICd0cicpe1xyXG4gICAgICAgICAgICBncm91cFRyYW5zZm9ybSA9IGRhdGFbaV0udHJhbnNmb3JtO1xyXG4gICAgICAgICAgICB2YXIgbXRBcnIgPSBkYXRhW2ldLnRyYW5zZm9ybS5tUHJvcHMudi5wcm9wcztcclxuICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ubWF0TWRmID0gZ3JvdXBUcmFuc2Zvcm0ubVByb3BzLm1kZjtcclxuICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ub3BNZGYgPSBncm91cFRyYW5zZm9ybS5vcC5tZGY7XHJcbiAgICAgICAgICAgIGdyb3VwTWF0cml4ID0gZ3JvdXBUcmFuc2Zvcm0ubWF0O1xyXG4gICAgICAgICAgICBncm91cE1hdHJpeC5jbG9uZUZyb21Qcm9wcyhtdEFycik7XHJcbiAgICAgICAgICAgIGlmKHBhcmVudFRyYW5zZm9ybSl7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvcHMgPSBwYXJlbnRUcmFuc2Zvcm0ubWF0LnByb3BzO1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ub3BhY2l0eSA9IHBhcmVudFRyYW5zZm9ybS5vcGFjaXR5O1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ub3BhY2l0eSAqPSBkYXRhW2ldLnRyYW5zZm9ybS5vcC52O1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ubWF0TWRmID0gcGFyZW50VHJhbnNmb3JtLm1hdE1kZiA/IHRydWUgOiBncm91cFRyYW5zZm9ybS5tYXRNZGY7XHJcbiAgICAgICAgICAgICAgICBncm91cFRyYW5zZm9ybS5vcE1kZiA9IHBhcmVudFRyYW5zZm9ybS5vcE1kZiA/IHRydWUgOiBncm91cFRyYW5zZm9ybS5vcE1kZjtcclxuICAgICAgICAgICAgICAgIGdyb3VwTWF0cml4LnRyYW5zZm9ybShwcm9wc1swXSxwcm9wc1sxXSxwcm9wc1syXSxwcm9wc1szXSxwcm9wc1s0XSxwcm9wc1s1XSxwcm9wc1s2XSxwcm9wc1s3XSxwcm9wc1s4XSxwcm9wc1s5XSxwcm9wc1sxMF0scHJvcHNbMTFdLHByb3BzWzEyXSxwcm9wc1sxM10scHJvcHNbMTRdLHByb3BzWzE1XSk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgZ3JvdXBUcmFuc2Zvcm0ub3BhY2l0eSA9IGdyb3VwVHJhbnNmb3JtLm9wLm87XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ZWxzZSBpZihpdGVtc1tpXS50eSA9PSAnc2gnIHx8IGl0ZW1zW2ldLnR5ID09ICdlbCcgfHwgaXRlbXNbaV0udHkgPT0gJ3JjJyB8fCBpdGVtc1tpXS50eSA9PSAnc3InKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJQYXRoKGl0ZW1zW2ldLGRhdGFbaV0sZ3JvdXBUcmFuc2Zvcm0pO1xyXG4gICAgICAgIH1lbHNlIGlmKGl0ZW1zW2ldLnR5ID09ICdmbCcpe1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlckZpbGwoaXRlbXNbaV0sZGF0YVtpXSxncm91cFRyYW5zZm9ybSk7XHJcbiAgICAgICAgfWVsc2UgaWYoaXRlbXNbaV0udHkgPT0gJ3N0Jyl7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyU3Ryb2tlKGl0ZW1zW2ldLGRhdGFbaV0sZ3JvdXBUcmFuc2Zvcm0pO1xyXG4gICAgICAgIH1lbHNlIGlmKGl0ZW1zW2ldLnR5ID09ICdncicpe1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlclNoYXBlKGdyb3VwVHJhbnNmb3JtLGl0ZW1zW2ldLml0LGRhdGFbaV0uaXQpO1xyXG4gICAgICAgIH1lbHNlIGlmKGl0ZW1zW2ldLnR5ID09ICd0bScpe1xyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKCFpc01haW4pe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxlbiA9IHRoaXMuc3R5bGVzTGlzdC5sZW5ndGg7XHJcbiAgICB2YXIgaiwgakxlbiwgaywga0xlbixlbGVtcyxub2RlcywgcmVuZGVyZXIgPSB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIsIGN0eCA9IHRoaXMuZ2xvYmFsRGF0YS5jYW52YXNDb250ZXh0LCB0eXBlO1xyXG4gICAgcmVuZGVyZXIuc2F2ZSgpO1xyXG4gICAgcmVuZGVyZXIuY3R4VHJhbnNmb3JtKHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0LnByb3BzKTtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgdHlwZSA9IHRoaXMuc3R5bGVzTGlzdFtpXS50eXBlO1xyXG4gICAgICAgIGlmKCh0eXBlID09PSAnc3QnICYmIHRoaXMuc3R5bGVzTGlzdFtpXS53aSA9PT0gMCkgfHwgIXRoaXMuc3R5bGVzTGlzdFtpXS5kYXRhLl9yZW5kZXIpe1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVuZGVyZXIuc2F2ZSgpO1xyXG4gICAgICAgIGVsZW1zID0gdGhpcy5zdHlsZXNMaXN0W2ldLmVsZW1lbnRzO1xyXG4gICAgICAgIGlmKHR5cGUgPT09ICdzdCcpe1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnN0eWxlc0xpc3RbaV0uY287XHJcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSB0aGlzLnN0eWxlc0xpc3RbaV0ud2k7XHJcbiAgICAgICAgICAgIGN0eC5saW5lQ2FwID0gdGhpcy5zdHlsZXNMaXN0W2ldLmxjO1xyXG4gICAgICAgICAgICBjdHgubGluZUpvaW4gPSB0aGlzLnN0eWxlc0xpc3RbaV0ubGo7XHJcbiAgICAgICAgICAgIGN0eC5taXRlckxpbWl0ID0gdGhpcy5zdHlsZXNMaXN0W2ldLm1sIHx8IDA7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnN0eWxlc0xpc3RbaV0uY287XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlbmRlcmVyLmN0eE9wYWNpdHkodGhpcy5zdHlsZXNMaXN0W2ldLmNvT3ApO1xyXG4gICAgICAgIGlmKHR5cGUgIT09ICdzdCcpe1xyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGpMZW4gPSBlbGVtcy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSl7XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5zdHlsZXNMaXN0W2ldLmRhKXtcclxuICAgICAgICAgICAgICAgICAgICBjdHguc2V0TGluZURhc2godGhpcy5zdHlsZXNMaXN0W2ldLmRhKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgubGluZURhc2hPZmZzZXQgPSB0aGlzLnN0eWxlc0xpc3RbaV0uZG87XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmlzRGFzaGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMuZ2xvYmFsRGF0YS5pc0Rhc2hlZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LnNldExpbmVEYXNoKHRoaXMuZGFzaFJlc2V0dGVyKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuaXNEYXNoZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBub2RlcyA9IGVsZW1zW2pdLnRyTm9kZXM7XHJcbiAgICAgICAgICAgIGtMZW4gPSBub2Rlcy5sZW5ndGg7XHJcblxyXG4gICAgICAgICAgICBmb3Ioaz0wO2s8a0xlbjtrKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKG5vZGVzW2tdLnQgPT0gJ20nKXtcclxuICAgICAgICAgICAgICAgICAgICBjdHgubW92ZVRvKG5vZGVzW2tdLnBbMF0sbm9kZXNba10ucFsxXSk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZSBpZihub2Rlc1trXS50ID09ICdjJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmJlemllckN1cnZlVG8obm9kZXNba10ucDFbMF0sbm9kZXNba10ucDFbMV0sbm9kZXNba10ucDJbMF0sbm9kZXNba10ucDJbMV0sbm9kZXNba10ucDNbMF0sbm9kZXNba10ucDNbMV0pO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHR5cGUgIT09ICdzdCcpe1xyXG4gICAgICAgICAgICBjdHguZmlsbCh0aGlzLnN0eWxlc0xpc3RbaV0ucik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlbmRlcmVyLnJlc3RvcmUoKTtcclxuICAgIH1cclxuICAgIHJlbmRlcmVyLnJlc3RvcmUoKTtcclxuICAgIGlmKHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgdGhpcy5maXJzdEZyYW1lID0gZmFsc2U7XHJcbiAgICB9XHJcbn07XHJcbkNWU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJQYXRoID0gZnVuY3Rpb24ocGF0aERhdGEsaXRlbURhdGEsZ3JvdXBUcmFuc2Zvcm0pe1xyXG4gICAgdmFyIGxlbiwgaSwgaixqTGVuO1xyXG4gICAgdmFyIHJlZHJhdyA9IGdyb3VwVHJhbnNmb3JtLm1hdE1kZiB8fCBpdGVtRGF0YS5zaC5tZGYgfHwgdGhpcy5maXJzdEZyYW1lO1xyXG4gICAgaWYocmVkcmF3KSB7XHJcbiAgICAgICAgdmFyIHBhdGhzID0gaXRlbURhdGEuc2gucGF0aHMsIGdyb3VwVHJhbnNmb3JtTWF0ID0gZ3JvdXBUcmFuc2Zvcm0ubWF0O1xyXG4gICAgICAgIGpMZW4gPSBwYXRocy5fbGVuZ3RoO1xyXG4gICAgICAgIHZhciBwYXRoU3RyaW5nVHJhbnNmb3JtZWQgPSBpdGVtRGF0YS50ck5vZGVzO1xyXG4gICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZC5sZW5ndGggPSAwO1xyXG4gICAgICAgIGZvcihqPTA7ajxqTGVuO2orPTEpe1xyXG4gICAgICAgICAgICB2YXIgcGF0aE5vZGVzID0gcGF0aHMuc2hhcGVzW2pdO1xyXG4gICAgICAgICAgICBpZihwYXRoTm9kZXMgJiYgcGF0aE5vZGVzLnYpe1xyXG4gICAgICAgICAgICAgICAgbGVuID0gcGF0aE5vZGVzLl9sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAxOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQ6ICdtJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHA6IGdyb3VwVHJhbnNmb3JtTWF0LmFwcGx5VG9Qb2ludEFycmF5KHBhdGhOb2Rlcy52WzBdWzBdLCBwYXRoTm9kZXMudlswXVsxXSwgMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdDogJ2MnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwMTogZ3JvdXBUcmFuc2Zvcm1NYXQuYXBwbHlUb1BvaW50QXJyYXkocGF0aE5vZGVzLm9baSAtIDFdWzBdLCBwYXRoTm9kZXMub1tpIC0gMV1bMV0sIDApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwMjogZ3JvdXBUcmFuc2Zvcm1NYXQuYXBwbHlUb1BvaW50QXJyYXkocGF0aE5vZGVzLmlbaV1bMF0sIHBhdGhOb2Rlcy5pW2ldWzFdLCAwKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcDM6IGdyb3VwVHJhbnNmb3JtTWF0LmFwcGx5VG9Qb2ludEFycmF5KHBhdGhOb2Rlcy52W2ldWzBdLCBwYXRoTm9kZXMudltpXVsxXSwgMClcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChsZW4gPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdDogJ20nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwOiBncm91cFRyYW5zZm9ybU1hdC5hcHBseVRvUG9pbnRBcnJheShwYXRoTm9kZXMudlswXVswXSwgcGF0aE5vZGVzLnZbMF1bMV0sIDApXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAocGF0aE5vZGVzLmMgJiYgbGVuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aFN0cmluZ1RyYW5zZm9ybWVkLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0OiAnYycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHAxOiBncm91cFRyYW5zZm9ybU1hdC5hcHBseVRvUG9pbnRBcnJheShwYXRoTm9kZXMub1tpIC0gMV1bMF0sIHBhdGhOb2Rlcy5vW2kgLSAxXVsxXSwgMCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHAyOiBncm91cFRyYW5zZm9ybU1hdC5hcHBseVRvUG9pbnRBcnJheShwYXRoTm9kZXMuaVswXVswXSwgcGF0aE5vZGVzLmlbMF1bMV0sIDApLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwMzogZ3JvdXBUcmFuc2Zvcm1NYXQuYXBwbHlUb1BvaW50QXJyYXkocGF0aE5vZGVzLnZbMF1bMF0sIHBhdGhOb2Rlcy52WzBdWzFdLCAwKVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhTdHJpbmdUcmFuc2Zvcm1lZC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdDogJ3onXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpdGVtRGF0YS5sU3RyID0gcGF0aFN0cmluZ1RyYW5zZm9ybWVkO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGl0ZW1EYXRhLnN0KSB7XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCAxNjsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtRGF0YS50cltpXSA9IGdyb3VwVHJhbnNmb3JtLm1hdC5wcm9wc1tpXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpdGVtRGF0YS50ck5vZGVzID0gcGF0aFN0cmluZ1RyYW5zZm9ybWVkO1xyXG5cclxuICAgIH1cclxufTtcclxuXHJcblxyXG5cclxuQ1ZTaGFwZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZpbGwgPSBmdW5jdGlvbihzdHlsZURhdGEsaXRlbURhdGEsIGdyb3VwVHJhbnNmb3JtKXtcclxuICAgIHZhciBzdHlsZUVsZW0gPSBpdGVtRGF0YS5zdHlsZTtcclxuXHJcbiAgICBpZihpdGVtRGF0YS5jLm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHN0eWxlRWxlbS5jbyA9ICdyZ2IoJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMF0pKycsJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMV0pKycsJytibV9mbG9vcihpdGVtRGF0YS5jLnZbMl0pKycpJztcclxuICAgIH1cclxuICAgIGlmKGl0ZW1EYXRhLm8ubWRmIHx8IGdyb3VwVHJhbnNmb3JtLm9wTWRmIHx8IHRoaXMuZmlyc3RGcmFtZSl7XHJcbiAgICAgICAgc3R5bGVFbGVtLmNvT3AgPSBpdGVtRGF0YS5vLnYqZ3JvdXBUcmFuc2Zvcm0ub3BhY2l0eTtcclxuICAgIH1cclxufTtcclxuXHJcbkNWU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJTdHJva2UgPSBmdW5jdGlvbihzdHlsZURhdGEsaXRlbURhdGEsIGdyb3VwVHJhbnNmb3JtKXtcclxuICAgIHZhciBzdHlsZUVsZW0gPSBpdGVtRGF0YS5zdHlsZTtcclxuICAgIC8vVE9ETyBmaXggZGFzaGVzXHJcbiAgICB2YXIgZCA9IGl0ZW1EYXRhLmQ7XHJcbiAgICB2YXIgZGFzaGFycmF5LGRhc2hvZmZzZXQ7XHJcbiAgICBpZihkICYmIChkLm1kZiAgfHwgdGhpcy5maXJzdEZyYW1lKSl7XHJcbiAgICAgICAgc3R5bGVFbGVtLmRhID0gZC5kYXNoYXJyYXk7XHJcbiAgICAgICAgc3R5bGVFbGVtLmRvID0gZC5kYXNob2Zmc2V0O1xyXG4gICAgfVxyXG4gICAgaWYoaXRlbURhdGEuYy5tZGYgfHwgdGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICBzdHlsZUVsZW0uY28gPSAncmdiKCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzBdKSsnLCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzFdKSsnLCcrYm1fZmxvb3IoaXRlbURhdGEuYy52WzJdKSsnKSc7XHJcbiAgICB9XHJcbiAgICBpZihpdGVtRGF0YS5vLm1kZiB8fCBncm91cFRyYW5zZm9ybS5vcE1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHN0eWxlRWxlbS5jb09wID0gaXRlbURhdGEuby52Kmdyb3VwVHJhbnNmb3JtLm9wYWNpdHk7XHJcbiAgICB9XHJcbiAgICBpZihpdGVtRGF0YS53Lm1kZiB8fCB0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHN0eWxlRWxlbS53aSA9IGl0ZW1EYXRhLncudjtcclxuICAgIH1cclxufTtcclxuXHJcblxyXG5DVlNoYXBlRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLnNoYXBlc0RhdGEgPSBudWxsO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhID0gbnVsbDtcclxuICAgIHRoaXMuY2FudmFzQ29udGV4dCA9IG51bGw7XHJcbiAgICB0aGlzLnN0eWxlc0xpc3QubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuaXRlbURhdGEubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuX3BhcmVudC5kZXN0cm95LmNhbGwodGhpcy5fcGFyZW50KTtcclxufTtcclxuXHJcblxuZnVuY3Rpb24gQ1ZTb2xpZEVsZW1lbnQoZGF0YSwgY29tcCxnbG9iYWxEYXRhKXtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSwgY29tcCxnbG9iYWxEYXRhKTtcclxufVxyXG5jcmVhdGVFbGVtZW50KENWQmFzZUVsZW1lbnQsIENWU29saWRFbGVtZW50KTtcclxuXHJcbkNWU29saWRFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICBpZih0aGlzLl9wYXJlbnQucmVuZGVyRnJhbWUuY2FsbCh0aGlzLCBwYXJlbnRNYXRyaXgpPT09ZmFsc2Upe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBjdHggPSB0aGlzLmNhbnZhc0NvbnRleHQ7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuc2F2ZSgpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnJlbmRlcmVyLmN0eFRyYW5zZm9ybSh0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdC5wcm9wcyk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuY3R4T3BhY2l0eSh0aGlzLmZpbmFsVHJhbnNmb3JtLm9wYWNpdHkpO1xyXG4gICAgY3R4LmZpbGxTdHlsZT10aGlzLmRhdGEuc2M7XHJcbiAgICBjdHguZmlsbFJlY3QoMCwwLHRoaXMuZGF0YS5zdyx0aGlzLmRhdGEuc2gpO1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhLnJlbmRlcmVyLnJlc3RvcmUodGhpcy5kYXRhLmhhc01hc2spO1xyXG4gICAgaWYodGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxufTtcbmZ1bmN0aW9uIENWVGV4dEVsZW1lbnQoZGF0YSwgY29tcCwgZ2xvYmFsRGF0YSl7XHJcbiAgICB0aGlzLnRleHRTcGFucyA9IFtdO1xyXG4gICAgdGhpcy55T2Zmc2V0ID0gMDtcclxuICAgIHRoaXMuZmlsbENvbG9yQW5pbSA9IGZhbHNlO1xyXG4gICAgdGhpcy5zdHJva2VDb2xvckFuaW0gPSBmYWxzZTtcclxuICAgIHRoaXMuc3Ryb2tlV2lkdGhBbmltID0gZmFsc2U7XHJcbiAgICB0aGlzLnN0cm9rZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5maWxsID0gZmFsc2U7XHJcbiAgICB0aGlzLmp1c3RpZnlPZmZzZXQgPSAwO1xyXG4gICAgdGhpcy5jdXJyZW50UmVuZGVyID0gbnVsbDtcclxuICAgIHRoaXMucmVuZGVyVHlwZSA9ICdjYW52YXMnO1xyXG4gICAgdGhpcy52YWx1ZXMgPSB7XHJcbiAgICAgICAgZmlsbDogJ3JnYmEoMCwwLDAsMCknLFxyXG4gICAgICAgIHN0cm9rZTogJ3JnYmEoMCwwLDAsMCknLFxyXG4gICAgICAgIHNXaWR0aDogMCxcclxuICAgICAgICBmVmFsdWU6ICcnXHJcbiAgICB9XHJcbiAgICB0aGlzLl9wYXJlbnQuY29uc3RydWN0b3IuY2FsbCh0aGlzLGRhdGEsY29tcCwgZ2xvYmFsRGF0YSk7XHJcbn1cclxuY3JlYXRlRWxlbWVudChDVkJhc2VFbGVtZW50LCBDVlRleHRFbGVtZW50KTtcclxuXHJcbmV4dGVuZFByb3RvdHlwZShJVGV4dEVsZW1lbnQsIENWVGV4dEVsZW1lbnQpO1xyXG5cclxuQ1ZUZXh0RWxlbWVudC5wcm90b3R5cGUudEhlbHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpLmdldENvbnRleHQoJzJkJyk7XHJcblxyXG5DVlRleHRFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgdGhpcy5fcGFyZW50LmNyZWF0ZUVsZW1lbnRzLmNhbGwodGhpcyk7XHJcbiAgICAvL2NvbnNvbGUubG9nKCd0aGlzLmRhdGE6ICcsdGhpcy5kYXRhKTtcclxuXHJcbn07XHJcblxyXG5DVlRleHRFbGVtZW50LnByb3RvdHlwZS5idWlsZE5ld1RleHQgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIGRvY3VtZW50RGF0YSA9IHRoaXMudGV4dFByb3BlcnR5LmN1cnJlbnREYXRhO1xyXG4gICAgdGhpcy5yZW5kZXJlZExldHRlcnMgPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6ZG9jdW1lbnREYXRhLmwgPyBkb2N1bWVudERhdGEubC5sZW5ndGggOiAwfSk7XHJcblxyXG4gICAgdmFyIGhhc0ZpbGwgPSBmYWxzZTtcclxuICAgIGlmKGRvY3VtZW50RGF0YS5mYykge1xyXG4gICAgICAgIGhhc0ZpbGwgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudmFsdWVzLmZpbGwgPSB0aGlzLmJ1aWxkQ29sb3IoZG9jdW1lbnREYXRhLmZjKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMudmFsdWVzLmZpbGwgPSAncmdiYSgwLDAsMCwwKSc7XHJcbiAgICB9XHJcbiAgICB0aGlzLmZpbGwgPSBoYXNGaWxsO1xyXG4gICAgdmFyIGhhc1N0cm9rZSA9IGZhbHNlO1xyXG4gICAgaWYoZG9jdW1lbnREYXRhLnNjKXtcclxuICAgICAgICBoYXNTdHJva2UgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudmFsdWVzLnN0cm9rZSA9IHRoaXMuYnVpbGRDb2xvcihkb2N1bWVudERhdGEuc2MpO1xyXG4gICAgICAgIHRoaXMudmFsdWVzLnNXaWR0aCA9IGRvY3VtZW50RGF0YS5zdztcclxuICAgIH1cclxuICAgIHZhciBmb250RGF0YSA9IHRoaXMuZ2xvYmFsRGF0YS5mb250TWFuYWdlci5nZXRGb250QnlOYW1lKGRvY3VtZW50RGF0YS5mKTtcclxuICAgIHZhciBpLCBsZW47XHJcbiAgICB2YXIgbGV0dGVycyA9IGRvY3VtZW50RGF0YS5sO1xyXG4gICAgdmFyIG1hdHJpeEhlbHBlciA9IHRoaXMubUhlbHBlcjtcclxuICAgIHRoaXMuc3Ryb2tlID0gaGFzU3Ryb2tlO1xyXG4gICAgdGhpcy52YWx1ZXMuZlZhbHVlID0gZG9jdW1lbnREYXRhLnMgKyAncHggJysgdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmdldEZvbnRCeU5hbWUoZG9jdW1lbnREYXRhLmYpLmZGYW1pbHk7XHJcbiAgICBsZW4gPSBkb2N1bWVudERhdGEudC5sZW5ndGg7XHJcbiAgICAvL3RoaXMudEhlbHBlci5mb250ID0gdGhpcy52YWx1ZXMuZlZhbHVlO1xyXG4gICAgdmFyIGNoYXJEYXRhLCBzaGFwZURhdGEsIGssIGtMZW4sIHNoYXBlcywgaiwgakxlbiwgcGF0aE5vZGVzLCBjb21tYW5kcywgcGF0aEFyciwgc2luZ2xlU2hhcGUgPSB0aGlzLmRhdGEuc2luZ2xlU2hhcGU7XHJcbiAgICB2YXIgdHJhY2tpbmdPZmZzZXQgPSBkb2N1bWVudERhdGEudHIvMTAwMCpkb2N1bWVudERhdGEucztcclxuICAgIHZhciB4UG9zID0gMCwgeVBvcyA9IDAsIGZpcnN0TGluZSA9IHRydWU7XHJcbiAgICB2YXIgY250ID0gMDtcclxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG4gICAgICAgIGNoYXJEYXRhID0gdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmdldENoYXJEYXRhKGRvY3VtZW50RGF0YS50LmNoYXJBdChpKSwgZm9udERhdGEuZlN0eWxlLCB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuZ2V0Rm9udEJ5TmFtZShkb2N1bWVudERhdGEuZikuZkZhbWlseSk7XHJcbiAgICAgICAgc2hhcGVEYXRhID0gY2hhckRhdGEgJiYgY2hhckRhdGEuZGF0YSB8fCB7fTtcclxuICAgICAgICBtYXRyaXhIZWxwZXIucmVzZXQoKTtcclxuICAgICAgICBpZihzaW5nbGVTaGFwZSAmJiBsZXR0ZXJzW2ldLm4pIHtcclxuICAgICAgICAgICAgeFBvcyA9IC10cmFja2luZ09mZnNldDtcclxuICAgICAgICAgICAgeVBvcyArPSBkb2N1bWVudERhdGEueU9mZnNldDtcclxuICAgICAgICAgICAgeVBvcyArPSBmaXJzdExpbmUgPyAxIDogMDtcclxuICAgICAgICAgICAgZmlyc3RMaW5lID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzaGFwZXMgPSBzaGFwZURhdGEuc2hhcGVzID8gc2hhcGVEYXRhLnNoYXBlc1swXS5pdCA6IFtdO1xyXG4gICAgICAgIGpMZW4gPSBzaGFwZXMubGVuZ3RoO1xyXG4gICAgICAgIG1hdHJpeEhlbHBlci5zY2FsZShkb2N1bWVudERhdGEucy8xMDAsZG9jdW1lbnREYXRhLnMvMTAwKTtcclxuICAgICAgICBpZihzaW5nbGVTaGFwZSl7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwbHlUZXh0UHJvcGVydGllc1RvTWF0cml4KGRvY3VtZW50RGF0YSwgbWF0cml4SGVscGVyLCBsZXR0ZXJzW2ldLmxpbmUsIHhQb3MsIHlQb3MpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb21tYW5kcyA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpqTGVufSlcclxuICAgICAgICBmb3Ioaj0wO2o8akxlbjtqKz0xKXtcclxuICAgICAgICAgICAga0xlbiA9IHNoYXBlc1tqXS5rcy5rLmkubGVuZ3RoO1xyXG4gICAgICAgICAgICBwYXRoTm9kZXMgPSBzaGFwZXNbal0ua3MuaztcclxuICAgICAgICAgICAgcGF0aEFyciA9IFtdO1xyXG4gICAgICAgICAgICBmb3Ioaz0xO2s8a0xlbjtrKz0xKXtcclxuICAgICAgICAgICAgICAgIGlmKGs9PTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdGhBcnIucHVzaChtYXRyaXhIZWxwZXIuYXBwbHlUb1gocGF0aE5vZGVzLnZbMF1bMF0scGF0aE5vZGVzLnZbMF1bMV0sMCksbWF0cml4SGVscGVyLmFwcGx5VG9ZKHBhdGhOb2Rlcy52WzBdWzBdLHBhdGhOb2Rlcy52WzBdWzFdLDApKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHBhdGhBcnIucHVzaChtYXRyaXhIZWxwZXIuYXBwbHlUb1gocGF0aE5vZGVzLm9bay0xXVswXSxwYXRoTm9kZXMub1trLTFdWzFdLDApLG1hdHJpeEhlbHBlci5hcHBseVRvWShwYXRoTm9kZXMub1trLTFdWzBdLHBhdGhOb2Rlcy5vW2stMV1bMV0sMCksbWF0cml4SGVscGVyLmFwcGx5VG9YKHBhdGhOb2Rlcy5pW2tdWzBdLHBhdGhOb2Rlcy5pW2tdWzFdLDApLG1hdHJpeEhlbHBlci5hcHBseVRvWShwYXRoTm9kZXMuaVtrXVswXSxwYXRoTm9kZXMuaVtrXVsxXSwwKSxtYXRyaXhIZWxwZXIuYXBwbHlUb1gocGF0aE5vZGVzLnZba11bMF0scGF0aE5vZGVzLnZba11bMV0sMCksbWF0cml4SGVscGVyLmFwcGx5VG9ZKHBhdGhOb2Rlcy52W2tdWzBdLHBhdGhOb2Rlcy52W2tdWzFdLDApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBwYXRoQXJyLnB1c2gobWF0cml4SGVscGVyLmFwcGx5VG9YKHBhdGhOb2Rlcy5vW2stMV1bMF0scGF0aE5vZGVzLm9bay0xXVsxXSwwKSxtYXRyaXhIZWxwZXIuYXBwbHlUb1kocGF0aE5vZGVzLm9bay0xXVswXSxwYXRoTm9kZXMub1trLTFdWzFdLDApLG1hdHJpeEhlbHBlci5hcHBseVRvWChwYXRoTm9kZXMuaVswXVswXSxwYXRoTm9kZXMuaVswXVsxXSwwKSxtYXRyaXhIZWxwZXIuYXBwbHlUb1kocGF0aE5vZGVzLmlbMF1bMF0scGF0aE5vZGVzLmlbMF1bMV0sMCksbWF0cml4SGVscGVyLmFwcGx5VG9YKHBhdGhOb2Rlcy52WzBdWzBdLHBhdGhOb2Rlcy52WzBdWzFdLDApLG1hdHJpeEhlbHBlci5hcHBseVRvWShwYXRoTm9kZXMudlswXVswXSxwYXRoTm9kZXMudlswXVsxXSwwKSk7XHJcbiAgICAgICAgICAgIGNvbW1hbmRzW2pdID0gcGF0aEFycjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoc2luZ2xlU2hhcGUpe1xyXG4gICAgICAgICAgICB4UG9zICs9IGxldHRlcnNbaV0ubDtcclxuICAgICAgICAgICAgeFBvcyArPSB0cmFja2luZ09mZnNldDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy50ZXh0U3BhbnNbY250XSl7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFNwYW5zW2NudF0uZWxlbSA9IGNvbW1hbmRzO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFNwYW5zW2NudF0gPSB7ZWxlbTogY29tbWFuZHN9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjbnQgKz0xO1xyXG4gICAgfVxyXG59XHJcblxyXG5DVlRleHRFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICBpZih0aGlzLl9wYXJlbnQucmVuZGVyRnJhbWUuY2FsbCh0aGlzLCBwYXJlbnRNYXRyaXgpPT09ZmFsc2Upe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciBjdHggPSB0aGlzLmNhbnZhc0NvbnRleHQ7XHJcbiAgICB2YXIgZmluYWxNYXQgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdC5wcm9wcztcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5zYXZlKCk7XHJcbiAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuY3R4VHJhbnNmb3JtKGZpbmFsTWF0KTtcclxuICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5jdHhPcGFjaXR5KHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BhY2l0eSk7XHJcbiAgICBjdHguZm9udCA9IHRoaXMudmFsdWVzLmZWYWx1ZTtcclxuICAgIGN0eC5saW5lQ2FwID0gJ2J1dHQnO1xyXG4gICAgY3R4LmxpbmVKb2luID0gJ21pdGVyJztcclxuICAgIGN0eC5taXRlckxpbWl0ID0gNDtcclxuXHJcbiAgICBpZighdGhpcy5kYXRhLnNpbmdsZVNoYXBlKXtcclxuICAgICAgICB0aGlzLnRleHRBbmltYXRvci5nZXRNZWFzdXJlcyh0aGlzLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YSwgdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWcpO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciAgaSxsZW4sIGosIGpMZW4sIGssIGtMZW47XHJcbiAgICB2YXIgcmVuZGVyZWRMZXR0ZXJzID0gdGhpcy50ZXh0QW5pbWF0b3IucmVuZGVyZWRMZXR0ZXJzO1xyXG5cclxuICAgIHZhciBsZXR0ZXJzID0gdGhpcy50ZXh0UHJvcGVydHkuY3VycmVudERhdGEubDtcclxuXHJcbiAgICBsZW4gPSBsZXR0ZXJzLmxlbmd0aDtcclxuICAgIHZhciByZW5kZXJlZExldHRlcjtcclxuICAgIHZhciBsYXN0RmlsbCA9IG51bGwsIGxhc3RTdHJva2UgPSBudWxsLCBsYXN0U3Ryb2tlVyA9IG51bGwsIGNvbW1hbmRzLCBwYXRoQXJyO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBpZihsZXR0ZXJzW2ldLm4pe1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVuZGVyZWRMZXR0ZXIgPSByZW5kZXJlZExldHRlcnNbaV07XHJcbiAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXIpe1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuc2F2ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuY3R4VHJhbnNmb3JtKHJlbmRlcmVkTGV0dGVyLnApO1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIuY3R4T3BhY2l0eShyZW5kZXJlZExldHRlci5vKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5maWxsKXtcclxuICAgICAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXIgJiYgcmVuZGVyZWRMZXR0ZXIuZmMpe1xyXG4gICAgICAgICAgICAgICAgaWYobGFzdEZpbGwgIT09IHJlbmRlcmVkTGV0dGVyLmZjKXtcclxuICAgICAgICAgICAgICAgICAgICBsYXN0RmlsbCA9IHJlbmRlcmVkTGV0dGVyLmZjO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSByZW5kZXJlZExldHRlci5mYztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfWVsc2UgaWYobGFzdEZpbGwgIT09IHRoaXMudmFsdWVzLmZpbGwpe1xyXG4gICAgICAgICAgICAgICAgbGFzdEZpbGwgPSB0aGlzLnZhbHVlcy5maWxsO1xyXG4gICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMudmFsdWVzLmZpbGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29tbWFuZHMgPSB0aGlzLnRleHRTcGFuc1tpXS5lbGVtO1xyXG4gICAgICAgICAgICBqTGVuID0gY29tbWFuZHMubGVuZ3RoO1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuY2FudmFzQ29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSkge1xyXG4gICAgICAgICAgICAgICAgcGF0aEFyciA9IGNvbW1hbmRzW2pdO1xyXG4gICAgICAgICAgICAgICAga0xlbiA9IHBhdGhBcnIubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQubW92ZVRvKHBhdGhBcnJbMF0sIHBhdGhBcnJbMV0pO1xyXG4gICAgICAgICAgICAgICAgZm9yIChrID0gMjsgayA8IGtMZW47IGsgKz0gNikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5jYW52YXNDb250ZXh0LmJlemllckN1cnZlVG8ocGF0aEFycltrXSwgcGF0aEFycltrICsgMV0sIHBhdGhBcnJbayArIDJdLCBwYXRoQXJyW2sgKyAzXSwgcGF0aEFycltrICsgNF0sIHBhdGhBcnJbayArIDVdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuY2FudmFzQ29udGV4dC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQuZmlsbCgpO1xyXG4gICAgICAgICAgICAvLy9jdHguZmlsbFRleHQodGhpcy50ZXh0U3BhbnNbaV0udmFsLDAsMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuc3Ryb2tlKXtcclxuICAgICAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXIgJiYgcmVuZGVyZWRMZXR0ZXIuc3cpe1xyXG4gICAgICAgICAgICAgICAgaWYobGFzdFN0cm9rZVcgIT09IHJlbmRlcmVkTGV0dGVyLnN3KXtcclxuICAgICAgICAgICAgICAgICAgICBsYXN0U3Ryb2tlVyA9IHJlbmRlcmVkTGV0dGVyLnN3O1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSByZW5kZXJlZExldHRlci5zdztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfWVsc2UgaWYobGFzdFN0cm9rZVcgIT09IHRoaXMudmFsdWVzLnNXaWR0aCl7XHJcbiAgICAgICAgICAgICAgICBsYXN0U3Ryb2tlVyA9IHRoaXMudmFsdWVzLnNXaWR0aDtcclxuICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSB0aGlzLnZhbHVlcy5zV2lkdGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXIgJiYgcmVuZGVyZWRMZXR0ZXIuc2Mpe1xyXG4gICAgICAgICAgICAgICAgaWYobGFzdFN0cm9rZSAhPT0gcmVuZGVyZWRMZXR0ZXIuc2Mpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxhc3RTdHJva2UgPSByZW5kZXJlZExldHRlci5zYztcclxuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSByZW5kZXJlZExldHRlci5zYztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfWVsc2UgaWYobGFzdFN0cm9rZSAhPT0gdGhpcy52YWx1ZXMuc3Ryb2tlKXtcclxuICAgICAgICAgICAgICAgIGxhc3RTdHJva2UgPSB0aGlzLnZhbHVlcy5zdHJva2U7XHJcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnZhbHVlcy5zdHJva2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29tbWFuZHMgPSB0aGlzLnRleHRTcGFuc1tpXS5lbGVtO1xyXG4gICAgICAgICAgICBqTGVuID0gY29tbWFuZHMubGVuZ3RoO1xyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuY2FudmFzQ29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgZm9yKGo9MDtqPGpMZW47ais9MSkge1xyXG4gICAgICAgICAgICAgICAgcGF0aEFyciA9IGNvbW1hbmRzW2pdO1xyXG4gICAgICAgICAgICAgICAga0xlbiA9IHBhdGhBcnIubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQubW92ZVRvKHBhdGhBcnJbMF0sIHBhdGhBcnJbMV0pO1xyXG4gICAgICAgICAgICAgICAgZm9yIChrID0gMjsgayA8IGtMZW47IGsgKz0gNikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5jYW52YXNDb250ZXh0LmJlemllckN1cnZlVG8ocGF0aEFycltrXSwgcGF0aEFycltrICsgMV0sIHBhdGhBcnJbayArIDJdLCBwYXRoQXJyW2sgKyAzXSwgcGF0aEFycltrICsgNF0sIHBhdGhBcnJbayArIDVdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmdsb2JhbERhdGEuY2FudmFzQ29udGV4dC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgdGhpcy5nbG9iYWxEYXRhLmNhbnZhc0NvbnRleHQuc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgIC8vL2N0eC5zdHJva2VUZXh0KGxldHRlcnNbaV0udmFsLDAsMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsRGF0YS5yZW5kZXJlci5yZXN0b3JlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyppZih0aGlzLmRhdGEuaGFzTWFzayl7XHJcbiAgICAgdGhpcy5nbG9iYWxEYXRhLnJlbmRlcmVyLnJlc3RvcmUodHJ1ZSk7XHJcbiAgICAgfSovXHJcbiAgICB0aGlzLmdsb2JhbERhdGEucmVuZGVyZXIucmVzdG9yZSh0aGlzLmRhdGEuaGFzTWFzayk7XHJcbiAgICBpZih0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHRoaXMuZmlyc3RGcmFtZSA9IGZhbHNlO1xyXG4gICAgfVxyXG59O1xuZnVuY3Rpb24gSEJhc2VFbGVtZW50KGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpe1xyXG4gICAgdGhpcy5nbG9iYWxEYXRhID0gZ2xvYmFsRGF0YTtcclxuICAgIHRoaXMuY29tcCA9IGNvbXA7XHJcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgdGhpcy5tYXR0ZUVsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5wYXJlbnRDb250YWluZXIgPSBwYXJlbnRDb250YWluZXI7XHJcbiAgICB0aGlzLmxheWVySWQgPSBwbGFjZWhvbGRlciA/IHBsYWNlaG9sZGVyLmxheWVySWQgOiAnbHlfJytyYW5kb21TdHJpbmcoMTApO1xyXG4gICAgdGhpcy5wbGFjZWhvbGRlciA9IHBsYWNlaG9sZGVyO1xyXG4gICAgdGhpcy5pbml0KCk7XHJcbn07XHJcblxyXG5jcmVhdGVFbGVtZW50KEJhc2VFbGVtZW50LCBIQmFzZUVsZW1lbnQpO1xyXG5IQmFzZUVsZW1lbnQucHJvdG90eXBlLmNoZWNrQmxlbmRNb2RlID0gZnVuY3Rpb24oKXtcclxuXHJcbn07XHJcbkhCYXNlRWxlbWVudC5wcm90b3R5cGUuc2V0QmxlbmRNb2RlID0gQmFzZUVsZW1lbnQucHJvdG90eXBlLnNldEJsZW5kTW9kZTtcclxuXHJcbi8qSEJhc2VFbGVtZW50LnByb3RvdHlwZS5hcHBlbmROb2RlVG9QYXJlbnQgPSBmdW5jdGlvbihub2RlKSB7XHJcbiAgICBpZih0aGlzLmRhdGEuaGQpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMucGxhY2Vob2xkZXIpe1xyXG4gICAgICAgIHZhciBnID0gdGhpcy5wbGFjZWhvbGRlci5waEVsZW1lbnQ7XHJcbiAgICAgICAgZy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBnKTtcclxuICAgICAgICAvL2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMucGFyZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKG5vZGUpO1xyXG4gICAgfVxyXG59OyovXHJcblxyXG5cclxuSEJhc2VFbGVtZW50LnByb3RvdHlwZS5nZXRCYXNlRWxlbWVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gdGhpcy5iYXNlRWxlbWVudDtcclxufTtcclxuXHJcbkhCYXNlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdzdmcnKTtcclxuICAgICAgICBzdHlsZURpdih0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICAgICAgLy90aGlzLmFwcGVuZE5vZGVUb1BhcmVudCh0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgICAgIHRoaXMubWFza2VkRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQgPSB0aGlzLnBhcmVudENvbnRhaW5lcjtcclxuICAgIH1cclxuICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50ID0gdGhpcy5sYXllckVsZW1lbnQ7XHJcbiAgICBpZih0aGlzLmRhdGEubG4gJiYgKHRoaXMuZGF0YS50eSA9PT0gNCB8fCB0aGlzLmRhdGEudHkgPT09IDApKXtcclxuICAgICAgICBpZih0aGlzLmxheWVyRWxlbWVudCA9PT0gdGhpcy5wYXJlbnRDb250YWluZXIpe1xyXG4gICAgICAgICAgICB0aGlzLmxheWVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgICAgICAgICAvL3RoaXMuYXBwZW5kTm9kZVRvUGFyZW50KHRoaXMubGF5ZXJFbGVtZW50KTtcclxuICAgICAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IHRoaXMubGF5ZXJFbGVtZW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2lkJyx0aGlzLmRhdGEubG4pO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zZXRCbGVuZE1vZGUoKTtcclxuICAgIGlmKHRoaXMubGF5ZXJFbGVtZW50ICE9PSB0aGlzLnBhcmVudENvbnRhaW5lcil7XHJcbiAgICAgICAgdGhpcy5wbGFjZWhvbGRlciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNoZWNrUGFyZW50aW5nKCk7XHJcbn07XHJcblxyXG5IQmFzZUVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZyYW1lID0gZnVuY3Rpb24ocGFyZW50VHJhbnNmb3JtKXtcclxuICAgIGlmKHRoaXMuZGF0YS50eSA9PT0gMyl7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHRoaXMuY3VycmVudEZyYW1lTnVtID09PSB0aGlzLmxhc3ROdW0gfHwgIXRoaXMuaXNWaXNpYmxlKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5pc1Zpc2libGU7XHJcbiAgICB9XHJcbiAgICB0aGlzLmxhc3ROdW0gPSB0aGlzLmN1cnJlbnRGcmFtZU51bTtcclxuXHJcbiAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wTWRmID0gdGhpcy5maW5hbFRyYW5zZm9ybS5vcC5tZGY7XHJcbiAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRoaXMuZmluYWxUcmFuc2Zvcm0ubVByb3AubWRmO1xyXG4gICAgdGhpcy5maW5hbFRyYW5zZm9ybS5vcGFjaXR5ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5vcC52O1xyXG4gICAgaWYodGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wTWRmID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIG1hdDtcclxuICAgIHZhciBmaW5hbE1hdCA9IHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0O1xyXG5cclxuICAgIGlmKHRoaXMuaGllcmFyY2h5KXtcclxuICAgICAgICB2YXIgaSwgbGVuID0gdGhpcy5oaWVyYXJjaHkubGVuZ3RoO1xyXG5cclxuICAgICAgICBtYXQgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLnYucHJvcHM7XHJcbiAgICAgICAgZmluYWxNYXQuY2xvbmVGcm9tUHJvcHMobWF0KTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZiA9IHRoaXMuaGllcmFyY2h5W2ldLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLm1kZiA/IHRydWUgOiB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZjtcclxuICAgICAgICAgICAgbWF0ID0gdGhpcy5oaWVyYXJjaHlbaV0uZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcztcclxuICAgICAgICAgICAgZmluYWxNYXQudHJhbnNmb3JtKG1hdFswXSxtYXRbMV0sbWF0WzJdLG1hdFszXSxtYXRbNF0sbWF0WzVdLG1hdFs2XSxtYXRbN10sbWF0WzhdLG1hdFs5XSxtYXRbMTBdLG1hdFsxMV0sbWF0WzEyXSxtYXRbMTNdLG1hdFsxNF0sbWF0WzE1XSk7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgaWYodGhpcy5pc1Zpc2libGUgJiYgdGhpcy5maW5hbFRyYW5zZm9ybS5tYXRNZGYpe1xyXG4gICAgICAgICAgICBpZighcGFyZW50VHJhbnNmb3JtKXtcclxuICAgICAgICAgICAgICAgIGZpbmFsTWF0LmNsb25lRnJvbVByb3BzKHRoaXMuZmluYWxUcmFuc2Zvcm0ubVByb3Audi5wcm9wcyk7XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgbWF0ID0gdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC52LnByb3BzO1xyXG4gICAgICAgICAgICAgICAgZmluYWxNYXQuY2xvbmVGcm9tUHJvcHMobWF0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKHRoaXMuZGF0YS5oYXNNYXNrKXtcclxuICAgICAgICB0aGlzLm1hc2tNYW5hZ2VyLnJlbmRlckZyYW1lKGZpbmFsTWF0KTtcclxuICAgIH1cclxuXHJcbiAgICBpZihwYXJlbnRUcmFuc2Zvcm0pe1xyXG4gICAgICAgIG1hdCA9IHBhcmVudFRyYW5zZm9ybS5tYXQucHJvcHM7XHJcbiAgICAgICAgZmluYWxNYXQuY2xvbmVGcm9tUHJvcHMobWF0KTtcclxuICAgICAgICB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wYWNpdHkgKj0gcGFyZW50VHJhbnNmb3JtLm9wYWNpdHk7XHJcbiAgICAgICAgdGhpcy5maW5hbFRyYW5zZm9ybS5vcE1kZiA9IHBhcmVudFRyYW5zZm9ybS5vcE1kZiA/IHRydWUgOiB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wTWRmO1xyXG4gICAgICAgIHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0TWRmID0gcGFyZW50VHJhbnNmb3JtLm1hdE1kZiA/IHRydWUgOiB0aGlzLmZpbmFsVHJhbnNmb3JtLm1hdE1kZlxyXG4gICAgfVxyXG5cclxuICAgIGlmKHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0TWRmKXtcclxuICAgICAgICB0aGlzLnRyYW5zZm9ybWVkRWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSB0aGlzLnRyYW5zZm9ybWVkRWxlbWVudC5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSBmaW5hbE1hdC50b0NTUygpO1xyXG4gICAgICAgIHRoaXMuZmluYWxNYXQgPSBmaW5hbE1hdDtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuZmluYWxUcmFuc2Zvcm0ub3BNZGYpe1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50LnN0eWxlLm9wYWNpdHkgPSB0aGlzLmZpbmFsVHJhbnNmb3JtLm9wYWNpdHk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5pc1Zpc2libGU7XHJcbn07XHJcblxyXG5IQmFzZUVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5sYXllckVsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBudWxsO1xyXG4gICAgdGhpcy5wYXJlbnRDb250YWluZXIgPSBudWxsO1xyXG4gICAgaWYodGhpcy5tYXR0ZUVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLm1hdHRlRWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLm1hc2tNYW5hZ2VyKSB7XHJcbiAgICAgICAgdGhpcy5tYXNrTWFuYWdlci5kZXN0cm95KCk7XHJcbiAgICAgICAgdGhpcy5tYXNrTWFuYWdlciA9IG51bGw7XHJcbiAgICB9XHJcbn07XHJcblxyXG5IQmFzZUVsZW1lbnQucHJvdG90eXBlLmdldERvbUVsZW1lbnQgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuIHRoaXMubGF5ZXJFbGVtZW50O1xyXG59O1xyXG5IQmFzZUVsZW1lbnQucHJvdG90eXBlLmFkZE1hc2tzID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB0aGlzLm1hc2tNYW5hZ2VyID0gbmV3IE1hc2tFbGVtZW50KGRhdGEsdGhpcyx0aGlzLmdsb2JhbERhdGEpO1xyXG59O1xyXG5cclxuSEJhc2VFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24oKXtcclxufTtcclxuXHJcbkhCYXNlRWxlbWVudC5wcm90b3R5cGUuc2V0TWF0dGUgPSBmdW5jdGlvbigpe1xyXG5cclxufVxyXG5cclxuSEJhc2VFbGVtZW50LnByb3RvdHlwZS5idWlsZEVsZW1lbnRQYXJlbnRpbmcgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRFbGVtZW50UGFyZW50aW5nO1xuZnVuY3Rpb24gSFNvbGlkRWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKXtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcik7XHJcbn1cclxuY3JlYXRlRWxlbWVudChIQmFzZUVsZW1lbnQsIEhTb2xpZEVsZW1lbnQpO1xyXG5cclxuSFNvbGlkRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIHBhcmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc3R5bGVEaXYocGFyZW50KTtcclxuICAgIHZhciBjb250ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdzdmcnKTtcclxuICAgIHN0eWxlRGl2KGNvbnQpO1xyXG4gICAgY29udC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJyx0aGlzLmRhdGEuc3cpO1xyXG4gICAgY29udC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsdGhpcy5kYXRhLnNoKTtcclxuICAgIHBhcmVudC5hcHBlbmRDaGlsZChjb250KTtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gcGFyZW50O1xyXG4gICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBwYXJlbnQ7XHJcbiAgICAvL3RoaXMuYXBwZW5kTm9kZVRvUGFyZW50KHBhcmVudCk7XHJcbiAgICB0aGlzLmJhc2VFbGVtZW50ID0gcGFyZW50O1xyXG4gICAgdGhpcy5pbm5lckVsZW0gPSBwYXJlbnQ7XHJcbiAgICBpZih0aGlzLmRhdGEubG4pe1xyXG4gICAgICAgIHRoaXMuaW5uZXJFbGVtLnNldEF0dHJpYnV0ZSgnaWQnLHRoaXMuZGF0YS5sbik7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmRhdGEuYm0gIT09IDApe1xyXG4gICAgICAgIHRoaXMuc2V0QmxlbmRNb2RlKCk7XHJcbiAgICB9XHJcbiAgICB2YXIgcmVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywncmVjdCcpO1xyXG4gICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJyx0aGlzLmRhdGEuc3cpO1xyXG4gICAgcmVjdC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsdGhpcy5kYXRhLnNoKTtcclxuICAgIHJlY3Quc2V0QXR0cmlidXRlKCdmaWxsJyx0aGlzLmRhdGEuc2MpO1xyXG4gICAgY29udC5hcHBlbmRDaGlsZChyZWN0KTtcclxuICAgIGlmKHRoaXMuZGF0YS5oYXNNYXNrKXtcclxuICAgICAgICB0aGlzLm1hc2tlZEVsZW1lbnQgPSByZWN0O1xyXG4gICAgfVxyXG4gICAgdGhpcy5jaGVja1BhcmVudGluZygpO1xyXG59O1xyXG5cclxuXHJcblxyXG5IU29saWRFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gU1ZHQmFzZUVsZW1lbnQucHJvdG90eXBlLmhpZGU7XHJcbkhTb2xpZEVsZW1lbnQucHJvdG90eXBlLnNob3cgPSBTVkdCYXNlRWxlbWVudC5wcm90b3R5cGUuc2hvdztcclxuSFNvbGlkRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBJSW1hZ2VFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZTtcclxuSFNvbGlkRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IElJbWFnZUVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3k7XG5mdW5jdGlvbiBIQ29tcEVsZW1lbnQoZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcil7XHJcbiAgICB0aGlzLl9wYXJlbnQuY29uc3RydWN0b3IuY2FsbCh0aGlzLGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpO1xyXG4gICAgdGhpcy5sYXllcnMgPSBkYXRhLmxheWVycztcclxuICAgIHRoaXMuc3VwcG9ydHMzZCA9IHRydWU7XHJcbiAgICB0aGlzLmNvbXBsZXRlTGF5ZXJzID0gZmFsc2U7XHJcbiAgICB0aGlzLnBlbmRpbmdFbGVtZW50cyA9IFtdO1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDp0aGlzLmxheWVycy5sZW5ndGh9KTtcclxuICAgIGlmKHRoaXMuZGF0YS50bSl7XHJcbiAgICAgICAgdGhpcy50bSA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKHRoaXMsdGhpcy5kYXRhLnRtLDAsZ2xvYmFsRGF0YS5mcmFtZVJhdGUsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmRhdGEuaGFzTWFzaykge1xyXG4gICAgICAgIHRoaXMuc3VwcG9ydHMzZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWYodGhpcy5kYXRhLnh0KXtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5idWlsZEFsbEl0ZW1zKCk7XHJcblxyXG59XHJcbmNyZWF0ZUVsZW1lbnQoSEJhc2VFbGVtZW50LCBIQ29tcEVsZW1lbnQpO1xyXG5cclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgZGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc3R5bGVEaXYoZGl2RWxlbWVudCk7XHJcbiAgICBpZih0aGlzLmRhdGEubG4pe1xyXG4gICAgICAgIGRpdkVsZW1lbnQuc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5kYXRhLmxuKTtcclxuICAgIH1cclxuICAgIGRpdkVsZW1lbnQuc3R5bGUuY2xpcCA9ICdyZWN0KDBweCwgJyt0aGlzLmRhdGEudysncHgsICcrdGhpcy5kYXRhLmgrJ3B4LCAwcHgpJztcclxuICAgIGlmKHRoaXMuZGF0YS5oYXNNYXNrKXtcclxuICAgICAgICB2YXIgY29tcFN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnc3ZnJyk7XHJcbiAgICAgICAgc3R5bGVEaXYoY29tcFN2Zyk7XHJcbiAgICAgICAgY29tcFN2Zy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJyx0aGlzLmRhdGEudyk7XHJcbiAgICAgICAgY29tcFN2Zy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsdGhpcy5kYXRhLmgpO1xyXG4gICAgICAgIHZhciBnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICAgICAgY29tcFN2Zy5hcHBlbmRDaGlsZChnKTtcclxuICAgICAgICBkaXZFbGVtZW50LmFwcGVuZENoaWxkKGNvbXBTdmcpO1xyXG4gICAgICAgIHRoaXMubWFza2VkRWxlbWVudCA9IGc7XHJcbiAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IGRpdkVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQgPSBnO1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50ID0gZGl2RWxlbWVudDtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gZGl2RWxlbWVudDtcclxuICAgICAgICB0aGlzLmJhc2VFbGVtZW50ID0gdGhpcy5sYXllckVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBkaXZFbGVtZW50O1xyXG4gICAgfVxyXG4gICAgLy90aGlzLmFwcGVuZE5vZGVUb1BhcmVudCh0aGlzLmxheWVyRWxlbWVudCk7XHJcbiAgICB0aGlzLmNoZWNrUGFyZW50aW5nKCk7XHJcbn07XHJcblxyXG5IQ29tcEVsZW1lbnQucHJvdG90eXBlLmhpZGUgPSBJQ29tcEVsZW1lbnQucHJvdG90eXBlLmhpZGU7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUucHJlcGFyZUZyYW1lID0gSUNvbXBFbGVtZW50LnByb3RvdHlwZS5wcmVwYXJlRnJhbWU7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuc2V0RWxlbWVudHMgPSBJQ29tcEVsZW1lbnQucHJvdG90eXBlLnNldEVsZW1lbnRzO1xyXG5IQ29tcEVsZW1lbnQucHJvdG90eXBlLmdldEVsZW1lbnRzID0gSUNvbXBFbGVtZW50LnByb3RvdHlwZS5nZXRFbGVtZW50cztcclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5kZXN0cm95ID0gSUNvbXBFbGVtZW50LnByb3RvdHlwZS5kZXN0cm95O1xyXG5cclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICB2YXIgcmVuZGVyUGFyZW50ID0gdGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcyxwYXJlbnRNYXRyaXgpO1xyXG4gICAgdmFyIGksbGVuID0gdGhpcy5sYXllcnMubGVuZ3RoO1xyXG4gICAgaWYocmVuZGVyUGFyZW50PT09ZmFsc2Upe1xyXG4gICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmhpZGRlbiA9IGZhbHNlO1xyXG5cclxuICAgIGZvciggaSA9IDA7IGkgPCBsZW47IGkrPTEgKXtcclxuICAgICAgICBpZih0aGlzLmNvbXBsZXRlTGF5ZXJzIHx8IHRoaXMuZWxlbWVudHNbaV0pe1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2ldLnJlbmRlckZyYW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYodGhpcy5maXJzdEZyYW1lKXtcclxuICAgICAgICB0aGlzLmZpcnN0RnJhbWUgPSBmYWxzZTtcclxuICAgIH1cclxufTtcclxuXHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuY2hlY2tMYXllcnMgPSBCYXNlUmVuZGVyZXIucHJvdG90eXBlLmNoZWNrTGF5ZXJzO1xyXG5IQ29tcEVsZW1lbnQucHJvdG90eXBlLmJ1aWxkSXRlbSA9IEh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5idWlsZEl0ZW07XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuY2hlY2tQZW5kaW5nRWxlbWVudHMgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY2hlY2tQZW5kaW5nRWxlbWVudHM7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuYWRkUGVuZGluZ0VsZW1lbnQgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYWRkUGVuZGluZ0VsZW1lbnQ7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuYnVpbGRBbGxJdGVtcyA9IEJhc2VSZW5kZXJlci5wcm90b3R5cGUuYnVpbGRBbGxJdGVtcztcclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVJdGVtID0gSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZUl0ZW07XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuYnVpbGRFbGVtZW50UGFyZW50aW5nID0gSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmJ1aWxkRWxlbWVudFBhcmVudGluZztcclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVJbWFnZSA9IEh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVJbWFnZTtcclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVDb21wID0gSHlicmlkUmVuZGVyZXIucHJvdG90eXBlLmNyZWF0ZUNvbXA7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU29saWQgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU29saWQ7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhcGUgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlU2hhcGU7XHJcbkhDb21wRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlVGV4dCA9IEh5YnJpZFJlbmRlcmVyLnByb3RvdHlwZS5jcmVhdGVUZXh0O1xyXG5IQ29tcEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZUJhc2UgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuY3JlYXRlQmFzZTtcclxuSENvbXBFbGVtZW50LnByb3RvdHlwZS5hcHBlbmRFbGVtZW50SW5Qb3MgPSBIeWJyaWRSZW5kZXJlci5wcm90b3R5cGUuYXBwZW5kRWxlbWVudEluUG9zO1xuZnVuY3Rpb24gSFNoYXBlRWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKXtcclxuICAgIHRoaXMuc2hhcGVzID0gW107XHJcbiAgICB0aGlzLnNoYXBlc0RhdGEgPSBkYXRhLnNoYXBlcztcclxuICAgIHRoaXMuc3R5bGVzTGlzdCA9IFtdO1xyXG4gICAgdGhpcy5pdGVtc0RhdGEgPSBbXTtcclxuICAgIHRoaXMucHJldlZpZXdEYXRhID0gW107XHJcbiAgICB0aGlzLnNoYXBlTW9kaWZpZXJzID0gW107XHJcbiAgICB0aGlzLnByb2Nlc3NlZEVsZW1lbnRzID0gW107XHJcbiAgICB0aGlzLl9wYXJlbnQuY29uc3RydWN0b3IuY2FsbCh0aGlzLGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpO1xyXG4gICAgdGhpcy5jdXJyZW50QkJveCA9IHtcclxuICAgICAgICB4Ojk5OTk5OSxcclxuICAgICAgICB5OiAtOTk5OTk5LFxyXG4gICAgICAgIGg6IDAsXHJcbiAgICAgICAgdzogMFxyXG4gICAgfTtcclxufVxyXG5jcmVhdGVFbGVtZW50KEhCYXNlRWxlbWVudCwgSFNoYXBlRWxlbWVudCk7XHJcbnZhciBwYXJlbnQgPSBIU2hhcGVFbGVtZW50LnByb3RvdHlwZS5fcGFyZW50O1xyXG5leHRlbmRQcm90b3R5cGUoSVNoYXBlRWxlbWVudCwgSFNoYXBlRWxlbWVudCk7XHJcbkhTaGFwZUVsZW1lbnQucHJvdG90eXBlLl9wYXJlbnQgPSBwYXJlbnQ7XHJcbkhTaGFwZUVsZW1lbnQucHJvdG90eXBlLl9yZW5kZXJTaGFwZUZyYW1lID0gSFNoYXBlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWU7XHJcblxyXG5IU2hhcGVFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgcGFyZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBzdHlsZURpdihwYXJlbnQpO1xyXG4gICAgdmFyIGNvbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoc3ZnTlMsJ3N2ZycpO1xyXG4gICAgc3R5bGVEaXYoY29udCk7XHJcbiAgICB2YXIgc2l6ZSA9IHRoaXMuY29tcC5kYXRhID8gdGhpcy5jb21wLmRhdGEgOiB0aGlzLmdsb2JhbERhdGEuY29tcFNpemU7XHJcbiAgICBjb250LnNldEF0dHJpYnV0ZSgnd2lkdGgnLHNpemUudyk7XHJcbiAgICBjb250LnNldEF0dHJpYnV0ZSgnaGVpZ2h0JyxzaXplLmgpO1xyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHZhciBnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICAgICAgcGFyZW50LmFwcGVuZENoaWxkKGNvbnQpO1xyXG4gICAgICAgIGNvbnQuYXBwZW5kQ2hpbGQoZyk7XHJcbiAgICAgICAgdGhpcy5tYXNrZWRFbGVtZW50ID0gZztcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudCA9IGc7XHJcbiAgICAgICAgdGhpcy5zaGFwZXNDb250YWluZXIgPSBnO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgcGFyZW50LmFwcGVuZENoaWxkKGNvbnQpO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gY29udDtcclxuICAgICAgICB0aGlzLnNoYXBlc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnZycpO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuc2hhcGVzQ29udGFpbmVyKTtcclxuICAgIH1cclxuICAgIGlmKCF0aGlzLmRhdGEuaGQpe1xyXG4gICAgICAgIC8vdGhpcy5wYXJlbnRDb250YWluZXIuYXBwZW5kQ2hpbGQocGFyZW50KTtcclxuICAgICAgICB0aGlzLmJhc2VFbGVtZW50ID0gcGFyZW50O1xyXG4gICAgfVxyXG4gICAgdGhpcy5pbm5lckVsZW0gPSBwYXJlbnQ7XHJcbiAgICBpZih0aGlzLmRhdGEubG4pe1xyXG4gICAgICAgIHRoaXMuaW5uZXJFbGVtLnNldEF0dHJpYnV0ZSgnaWQnLHRoaXMuZGF0YS5sbik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5zZWFyY2hTaGFwZXModGhpcy5zaGFwZXNEYXRhLHRoaXMuaXRlbXNEYXRhLHRoaXMucHJldlZpZXdEYXRhLHRoaXMubGF5ZXJFbGVtZW50LHRoaXMuZHluYW1pY1Byb3BlcnRpZXMsMCwgW10sIHRydWUpO1xyXG4gICAgdGhpcy5idWlsZEV4cHJlc3Npb25JbnRlcmZhY2UoKTtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gcGFyZW50O1xyXG4gICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBwYXJlbnQ7XHJcbiAgICB0aGlzLnNoYXBlQ29udCA9IGNvbnQ7XHJcbiAgICBpZih0aGlzLmRhdGEuYm0gIT09IDApe1xyXG4gICAgICAgIHRoaXMuc2V0QmxlbmRNb2RlKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNoZWNrUGFyZW50aW5nKCk7XHJcbn07XHJcblxyXG5IU2hhcGVFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZSA9IGZ1bmN0aW9uKHBhcmVudE1hdHJpeCl7XHJcbiAgICB2YXIgZmlyc3RGcmFtZSA9IHRoaXMuZmlyc3RGcmFtZTtcclxuICAgIHRoaXMuX3JlbmRlclNoYXBlRnJhbWUoKTtcclxuXHJcbiAgICBpZih0aGlzLmlzVmlzaWJsZSAmJiAodGhpcy5lbGVtTWRmIHx8IGZpcnN0RnJhbWUpKXtcclxuICAgICAgICB2YXIgYm91bmRpbmdCb3ggPSB0aGlzLnNoYXBlQ29udC5nZXRCQm94KCk7XHJcbiAgICAgICAgdmFyIGNoYW5nZWQgPSBmYWxzZTtcclxuICAgICAgICBpZih0aGlzLmN1cnJlbnRCQm94LncgIT09IGJvdW5kaW5nQm94LndpZHRoKXtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC53ID0gYm91bmRpbmdCb3gud2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXMuc2hhcGVDb250LnNldEF0dHJpYnV0ZSgnd2lkdGgnLGJvdW5kaW5nQm94LndpZHRoKTtcclxuICAgICAgICAgICAgY2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuY3VycmVudEJCb3guaCAhPT0gYm91bmRpbmdCb3guaGVpZ2h0KXtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC5oID0gYm91bmRpbmdCb3guaGVpZ2h0O1xyXG4gICAgICAgICAgICB0aGlzLnNoYXBlQ29udC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsYm91bmRpbmdCb3guaGVpZ2h0KTtcclxuICAgICAgICAgICAgY2hhbmdlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGNoYW5nZWQgIHx8IHRoaXMuY3VycmVudEJCb3gueCAhPT0gYm91bmRpbmdCb3gueCAgfHwgdGhpcy5jdXJyZW50QkJveC55ICE9PSBib3VuZGluZ0JveC55KXtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC53ID0gYm91bmRpbmdCb3gud2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEJCb3guaCA9IGJvdW5kaW5nQm94LmhlaWdodDtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC54ID0gYm91bmRpbmdCb3gueDtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC55ID0gYm91bmRpbmdCb3gueTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2hhcGVDb250LnNldEF0dHJpYnV0ZSgndmlld0JveCcsdGhpcy5jdXJyZW50QkJveC54KycgJyt0aGlzLmN1cnJlbnRCQm94LnkrJyAnK3RoaXMuY3VycmVudEJCb3gudysnICcrdGhpcy5jdXJyZW50QkJveC5oKTtcclxuICAgICAgICAgICAgdGhpcy5zaGFwZUNvbnQuc3R5bGUudHJhbnNmb3JtID0gdGhpcy5zaGFwZUNvbnQuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgdGhpcy5jdXJyZW50QkJveC54ICsgJ3B4LCcgKyB0aGlzLmN1cnJlbnRCQm94LnkgKyAncHgpJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59O1xuZnVuY3Rpb24gSFRleHRFbGVtZW50KGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpe1xyXG4gICAgdGhpcy50ZXh0U3BhbnMgPSBbXTtcclxuICAgIHRoaXMudGV4dFBhdGhzID0gW107XHJcbiAgICB0aGlzLmN1cnJlbnRCQm94ID0ge1xyXG4gICAgICAgIHg6OTk5OTk5LFxyXG4gICAgICAgIHk6IC05OTk5OTksXHJcbiAgICAgICAgaDogMCxcclxuICAgICAgICB3OiAwXHJcbiAgICB9XHJcbiAgICB0aGlzLnJlbmRlclR5cGUgPSAnc3ZnJztcclxuICAgIHRoaXMuaXNNYXNrZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcik7XHJcblxyXG59XHJcbmNyZWF0ZUVsZW1lbnQoSEJhc2VFbGVtZW50LCBIVGV4dEVsZW1lbnQpO1xyXG5cclxuZXh0ZW5kUHJvdG90eXBlKElUZXh0RWxlbWVudCwgSFRleHRFbGVtZW50KTtcclxuXHJcbkhUZXh0RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5pc01hc2tlZCA9IHRoaXMuY2hlY2tNYXNrcygpO1xyXG4gICAgdmFyIHBhcmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgc3R5bGVEaXYocGFyZW50KTtcclxuICAgIHRoaXMubGF5ZXJFbGVtZW50ID0gcGFyZW50O1xyXG4gICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBwYXJlbnQ7XHJcbiAgICBpZih0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICB0aGlzLnJlbmRlclR5cGUgPSAnc3ZnJztcclxuICAgICAgICB2YXIgY29udCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnc3ZnJyk7XHJcbiAgICAgICAgc3R5bGVEaXYoY29udCk7XHJcbiAgICAgICAgdGhpcy5jb250ID0gY29udDtcclxuICAgICAgICB0aGlzLmNvbXBXID0gdGhpcy5jb21wLmRhdGEudztcclxuICAgICAgICB0aGlzLmNvbXBIID0gdGhpcy5jb21wLmRhdGEuaDtcclxuICAgICAgICBjb250LnNldEF0dHJpYnV0ZSgnd2lkdGgnLHRoaXMuY29tcFcpO1xyXG4gICAgICAgIGNvbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLHRoaXMuY29tcEgpO1xyXG4gICAgICAgIHZhciBnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdnJyk7XHJcbiAgICAgICAgY29udC5hcHBlbmRDaGlsZChnKTtcclxuICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoY29udCk7XHJcbiAgICAgICAgdGhpcy5tYXNrZWRFbGVtZW50ID0gZztcclxuICAgICAgICB0aGlzLmlubmVyRWxlbSA9IGc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMucmVuZGVyVHlwZSA9ICdodG1sJztcclxuICAgICAgICB0aGlzLmlubmVyRWxlbSA9IHBhcmVudDtcclxuICAgIH1cclxuICAgIHRoaXMuYmFzZUVsZW1lbnQgPSBwYXJlbnQ7XHJcblxyXG4gICAgdGhpcy5jaGVja1BhcmVudGluZygpO1xyXG5cclxufTtcclxuXHJcbkhUZXh0RWxlbWVudC5wcm90b3R5cGUuYnVpbGROZXdUZXh0ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBkb2N1bWVudERhdGEgPSB0aGlzLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YTtcclxuICAgIHRoaXMucmVuZGVyZWRMZXR0ZXJzID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnRoaXMudGV4dFByb3BlcnR5LmN1cnJlbnREYXRhLmwgPyB0aGlzLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YS5sLmxlbmd0aCA6IDB9KTtcclxuICAgIHZhciBpbm5lckVsZW1TdHlsZSA9IHRoaXMuaW5uZXJFbGVtLnN0eWxlO1xyXG4gICAgaW5uZXJFbGVtU3R5bGUuY29sb3IgPSBpbm5lckVsZW1TdHlsZS5maWxsID0gZG9jdW1lbnREYXRhLmZjID8gdGhpcy5idWlsZENvbG9yKGRvY3VtZW50RGF0YS5mYykgOiAncmdiYSgwLDAsMCwwKSc7XHJcbiAgICBpZihkb2N1bWVudERhdGEuc2Mpe1xyXG4gICAgICAgIGlubmVyRWxlbVN0eWxlLnN0cm9rZSA9IHRoaXMuYnVpbGRDb2xvcihkb2N1bWVudERhdGEuc2MpO1xyXG4gICAgICAgIGlubmVyRWxlbVN0eWxlLnN0cm9rZVdpZHRoID0gZG9jdW1lbnREYXRhLnN3KydweCc7XHJcbiAgICB9XHJcbiAgICB2YXIgZm9udERhdGEgPSB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuZ2V0Rm9udEJ5TmFtZShkb2N1bWVudERhdGEuZik7XHJcbiAgICBpZighdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmNoYXJzKXtcclxuICAgICAgICBpbm5lckVsZW1TdHlsZS5mb250U2l6ZSA9IGRvY3VtZW50RGF0YS5zKydweCc7XHJcbiAgICAgICAgaW5uZXJFbGVtU3R5bGUubGluZUhlaWdodCA9IGRvY3VtZW50RGF0YS5zKydweCc7XHJcbiAgICAgICAgaWYoZm9udERhdGEuZkNsYXNzKXtcclxuICAgICAgICAgICAgdGhpcy5pbm5lckVsZW0uY2xhc3NOYW1lID0gZm9udERhdGEuZkNsYXNzO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlubmVyRWxlbVN0eWxlLmZvbnRGYW1pbHkgPSBmb250RGF0YS5mRmFtaWx5O1xyXG4gICAgICAgICAgICB2YXIgZldlaWdodCA9IGRvY3VtZW50RGF0YS5mV2VpZ2h0LCBmU3R5bGUgPSBkb2N1bWVudERhdGEuZlN0eWxlO1xyXG4gICAgICAgICAgICBpbm5lckVsZW1TdHlsZS5mb250U3R5bGUgPSBmU3R5bGU7XHJcbiAgICAgICAgICAgIGlubmVyRWxlbVN0eWxlLmZvbnRXZWlnaHQgPSBmV2VpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHZhciBpLCBsZW47XHJcblxyXG4gICAgdmFyIGxldHRlcnMgPSBkb2N1bWVudERhdGEubDtcclxuICAgIGxlbiA9IGxldHRlcnMubGVuZ3RoO1xyXG4gICAgdmFyIHRTcGFuLHRQYXJlbnQsdENvbnQ7XHJcbiAgICB2YXIgbWF0cml4SGVscGVyID0gdGhpcy5tSGVscGVyO1xyXG4gICAgdmFyIHNoYXBlcywgc2hhcGVTdHIgPSAnJztcclxuICAgIHZhciBjbnQgPSAwO1xyXG4gICAgZm9yIChpID0gMDtpIDwgbGVuIDtpICs9IDEpIHtcclxuICAgICAgICBpZih0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuY2hhcnMpe1xyXG4gICAgICAgICAgICBpZighdGhpcy50ZXh0UGF0aHNbY250XSl7XHJcbiAgICAgICAgICAgICAgICB0U3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywncGF0aCcpO1xyXG4gICAgICAgICAgICAgICAgdFNwYW4uc2V0QXR0cmlidXRlKCdzdHJva2UtbGluZWNhcCcsICdidXR0Jyk7XHJcbiAgICAgICAgICAgICAgICB0U3Bhbi5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1saW5lam9pbicsJ3JvdW5kJyk7XHJcbiAgICAgICAgICAgICAgICB0U3Bhbi5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1taXRlcmxpbWl0JywnNCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdFNwYW4gPSB0aGlzLnRleHRQYXRoc1tjbnRdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMudGV4dFNwYW5zW2NudF0pe1xyXG4gICAgICAgICAgICAgICAgICAgIHRQYXJlbnQgPSB0aGlzLnRleHRTcGFuc1tjbnRdO1xyXG4gICAgICAgICAgICAgICAgICAgIHRDb250ID0gdFBhcmVudC5jaGlsZHJlblswXTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRQYXJlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICB0Q29udCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnc3ZnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuYXBwZW5kQ2hpbGQodFNwYW4pO1xyXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlRGl2KHRQYXJlbnQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMudGV4dFNwYW5zW2NudF0pe1xyXG4gICAgICAgICAgICAgICAgICAgIHRQYXJlbnQgPSB0aGlzLnRleHRTcGFuc1tjbnRdO1xyXG4gICAgICAgICAgICAgICAgICAgIHRTcGFuID0gdGhpcy50ZXh0UGF0aHNbY250XTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdFBhcmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZURpdih0UGFyZW50KTtcclxuICAgICAgICAgICAgICAgICAgICB0U3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZURpdih0U3Bhbik7XHJcbiAgICAgICAgICAgICAgICAgICAgdFBhcmVudC5hcHBlbmRDaGlsZCh0U3Bhbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0U3BhbiA9IHRoaXMudGV4dFBhdGhzW2NudF0gPyB0aGlzLnRleHRQYXRoc1tjbnRdIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCd0ZXh0Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy90U3Bhbi5zZXRBdHRyaWJ1dGUoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XHJcbiAgICAgICAgaWYodGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmNoYXJzKXtcclxuICAgICAgICAgICAgdmFyIGNoYXJEYXRhID0gdGhpcy5nbG9iYWxEYXRhLmZvbnRNYW5hZ2VyLmdldENoYXJEYXRhKGRvY3VtZW50RGF0YS50LmNoYXJBdChpKSwgZm9udERhdGEuZlN0eWxlLCB0aGlzLmdsb2JhbERhdGEuZm9udE1hbmFnZXIuZ2V0Rm9udEJ5TmFtZShkb2N1bWVudERhdGEuZikuZkZhbWlseSk7XHJcbiAgICAgICAgICAgIHZhciBzaGFwZURhdGE7XHJcbiAgICAgICAgICAgIGlmKGNoYXJEYXRhKXtcclxuICAgICAgICAgICAgICAgIHNoYXBlRGF0YSA9IGNoYXJEYXRhLmRhdGE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzaGFwZURhdGEgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1hdHJpeEhlbHBlci5yZXNldCgpO1xyXG4gICAgICAgICAgICBpZihzaGFwZURhdGEgJiYgc2hhcGVEYXRhLnNoYXBlcyl7XHJcbiAgICAgICAgICAgICAgICBzaGFwZXMgPSBzaGFwZURhdGEuc2hhcGVzWzBdLml0O1xyXG4gICAgICAgICAgICAgICAgbWF0cml4SGVscGVyLnNjYWxlKGRvY3VtZW50RGF0YS5zLzEwMCxkb2N1bWVudERhdGEucy8xMDApO1xyXG4gICAgICAgICAgICAgICAgc2hhcGVTdHIgPSB0aGlzLmNyZWF0ZVBhdGhTaGFwZShtYXRyaXhIZWxwZXIsc2hhcGVzKTtcclxuICAgICAgICAgICAgICAgIHRTcGFuLnNldEF0dHJpYnV0ZSgnZCcsc2hhcGVTdHIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRQYXJlbnQpO1xyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGVEYXRhICYmIHNoYXBlRGF0YS5zaGFwZXMpe1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodENvbnQpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgYm91bmRpbmdCb3ggPSB0Q29udC5nZXRCQm94KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuc2V0QXR0cmlidXRlKCd3aWR0aCcsYm91bmRpbmdCb3gud2lkdGggKyAyKTtcclxuICAgICAgICAgICAgICAgICAgICB0Q29udC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsYm91bmRpbmdCb3guaGVpZ2h0ICsgMik7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywoYm91bmRpbmdCb3gueC0xKSsnICcrIChib3VuZGluZ0JveC55LTEpKycgJysgKGJvdW5kaW5nQm94LndpZHRoKzIpKycgJysgKGJvdW5kaW5nQm94LmhlaWdodCsyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuc3R5bGUudHJhbnNmb3JtID0gdENvbnQuc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgKGJvdW5kaW5nQm94LngtMSkgKyAncHgsJyArIChib3VuZGluZ0JveC55LTEpICsgJ3B4KSc7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGxldHRlcnNbaV0ueU9mZnNldCA9IGJvdW5kaW5nQm94LnktMTtcclxuICAgICAgICAgICAgICAgICAgICB0UGFyZW50LmFwcGVuZENoaWxkKHRDb250KTtcclxuXHJcbiAgICAgICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuc2V0QXR0cmlidXRlKCd3aWR0aCcsMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdENvbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRTcGFuKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0U3Bhbi50ZXh0Q29udGVudCA9IGxldHRlcnNbaV0udmFsO1xyXG4gICAgICAgICAgICB0U3Bhbi5zZXRBdHRyaWJ1dGVOUyhcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCBcInhtbDpzcGFjZVwiLFwicHJlc2VydmVcIik7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRQYXJlbnQpO1xyXG4gICAgICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgICAgIHRTcGFuLnN0eWxlLnRyYW5zZm9ybSA9IHRTcGFuLnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9ICd0cmFuc2xhdGUzZCgwLCcrIC1kb2N1bWVudERhdGEucy8xLjIrJ3B4LDApJztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJFbGVtLmFwcGVuZENoaWxkKHRTcGFuKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvL1xyXG4gICAgICAgIGlmKCF0aGlzLmlzTWFza2VkKXtcclxuICAgICAgICAgICAgdGhpcy50ZXh0U3BhbnNbY250XSA9IHRQYXJlbnQ7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFNwYW5zW2NudF0gPSB0U3BhbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy50ZXh0U3BhbnNbY250XS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgICB0aGlzLnRleHRQYXRoc1tjbnRdID0gdFNwYW47XHJcbiAgICAgICAgY250ICs9IDE7XHJcbiAgICB9XHJcbiAgICB3aGlsZShjbnQgPCB0aGlzLnRleHRTcGFucy5sZW5ndGgpe1xyXG4gICAgICAgIHRoaXMudGV4dFNwYW5zW2NudF0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBjbnQgKz0gMTtcclxuICAgIH1cclxufVxyXG5cclxuSFRleHRFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gU1ZHVGV4dEVsZW1lbnQucHJvdG90eXBlLmhpZGU7XHJcblxyXG5IVGV4dEVsZW1lbnQucHJvdG90eXBlLnJlbmRlckZyYW1lID0gZnVuY3Rpb24ocGFyZW50TWF0cml4KXtcclxuXHJcbiAgICB2YXIgcmVuZGVyUGFyZW50ID0gdGhpcy5fcGFyZW50LnJlbmRlckZyYW1lLmNhbGwodGhpcyxwYXJlbnRNYXRyaXgpO1xyXG4gICAgaWYocmVuZGVyUGFyZW50PT09ZmFsc2Upe1xyXG4gICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmKHRoaXMuaGlkZGVuKXtcclxuICAgICAgICB0aGlzLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuaW5uZXJFbGVtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIHRoaXMubGF5ZXJFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHRoaXMuZGF0YS5zaW5nbGVTaGFwZSl7XHJcbiAgICAgICAgaWYoIXRoaXMuZmlyc3RGcmFtZSAmJiAhdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWcpe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gVG9kbyBCZW5jaG1hcmsgaWYgdXNpbmcgdGhpcyBpcyBiZXR0ZXIgdGhhbiBnZXRCQm94XHJcbiAgICAgICAgICAgICBpZih0aGlzLmlzTWFza2VkICYmIHRoaXMuZmluYWxUcmFuc2Zvcm0ubWF0TWRmKXtcclxuICAgICAgICAgICAgICAgICB0aGlzLmNvbnQuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywtdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC5wLnZbMF0rJyAnKyAtdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC5wLnZbMV0rJyAnK3RoaXMuY29tcFcrJyAnK3RoaXMuY29tcEgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250LnN0eWxlLnRyYW5zZm9ybSA9IHRoaXMuY29udC5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSAndHJhbnNsYXRlKCcgKyAtdGhpcy5maW5hbFRyYW5zZm9ybS5tUHJvcC5wLnZbMF0gKyAncHgsJyArIC10aGlzLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLnAudlsxXSArICdweCknO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRleHRBbmltYXRvci5nZXRNZWFzdXJlcyh0aGlzLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YSwgdGhpcy5sZXR0ZXJzQ2hhbmdlZEZsYWcpO1xyXG4gICAgaWYoIXRoaXMubGV0dGVyc0NoYW5nZWRGbGFnICYmICF0aGlzLnRleHRBbmltYXRvci5sZXR0ZXJzQ2hhbmdlZEZsYWcpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHZhciAgaSxsZW4sIGNvdW50ID0gMDtcclxuICAgIHZhciByZW5kZXJlZExldHRlcnMgPSB0aGlzLnRleHRBbmltYXRvci5yZW5kZXJlZExldHRlcnM7XHJcblxyXG4gICAgdmFyIGxldHRlcnMgPSB0aGlzLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YS5sO1xyXG5cclxuICAgIGxlbiA9IGxldHRlcnMubGVuZ3RoO1xyXG4gICAgdmFyIHJlbmRlcmVkTGV0dGVyLCB0ZXh0U3BhbiwgdGV4dFBhdGg7XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgIGlmKGxldHRlcnNbaV0ubil7XHJcbiAgICAgICAgICAgIGNvdW50ICs9IDE7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZXh0U3BhbiA9IHRoaXMudGV4dFNwYW5zW2ldO1xyXG4gICAgICAgIHRleHRQYXRoID0gdGhpcy50ZXh0UGF0aHNbaV07XHJcbiAgICAgICAgcmVuZGVyZWRMZXR0ZXIgPSByZW5kZXJlZExldHRlcnNbY291bnRdO1xyXG4gICAgICAgIGNvdW50ICs9IDE7XHJcbiAgICAgICAgaWYoIXRoaXMuaXNNYXNrZWQpe1xyXG4gICAgICAgICAgICB0ZXh0U3Bhbi5zdHlsZS50cmFuc2Zvcm0gPSB0ZXh0U3Bhbi5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSByZW5kZXJlZExldHRlci5tO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0ZXh0U3Bhbi5zZXRBdHRyaWJ1dGUoJ3RyYW5zZm9ybScscmVuZGVyZWRMZXR0ZXIubSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vLy90ZXh0U3Bhbi5zZXRBdHRyaWJ1dGUoJ29wYWNpdHknLHJlbmRlcmVkTGV0dGVyLm8pO1xyXG4gICAgICAgIHRleHRTcGFuLnN0eWxlLm9wYWNpdHkgPSByZW5kZXJlZExldHRlci5vO1xyXG4gICAgICAgIGlmKHJlbmRlcmVkTGV0dGVyLnN3KXtcclxuICAgICAgICAgICAgdGV4dFBhdGguc2V0QXR0cmlidXRlKCdzdHJva2Utd2lkdGgnLHJlbmRlcmVkTGV0dGVyLnN3KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYocmVuZGVyZWRMZXR0ZXIuc2Mpe1xyXG4gICAgICAgICAgICB0ZXh0UGF0aC5zZXRBdHRyaWJ1dGUoJ3N0cm9rZScscmVuZGVyZWRMZXR0ZXIuc2MpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihyZW5kZXJlZExldHRlci5mYyl7XHJcbiAgICAgICAgICAgIHRleHRQYXRoLnNldEF0dHJpYnV0ZSgnZmlsbCcscmVuZGVyZWRMZXR0ZXIuZmMpO1xyXG4gICAgICAgICAgICB0ZXh0UGF0aC5zdHlsZS5jb2xvciA9IHJlbmRlcmVkTGV0dGVyLmZjO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKHRoaXMuaXNWaXNpYmxlICYmICh0aGlzLmVsZW1NZGYgfHwgdGhpcy5maXJzdEZyYW1lKSl7XHJcbiAgICAgICAgaWYodGhpcy5pbm5lckVsZW0uZ2V0QkJveCl7XHJcbiAgICAgICAgICAgIHZhciBib3VuZGluZ0JveCA9IHRoaXMuaW5uZXJFbGVtLmdldEJCb3goKTtcclxuXHJcbiAgICAgICAgICAgIGlmKHRoaXMuY3VycmVudEJCb3gudyAhPT0gYm91bmRpbmdCb3gud2lkdGgpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50QkJveC53ID0gYm91bmRpbmdCb3gud2lkdGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnQuc2V0QXR0cmlidXRlKCd3aWR0aCcsYm91bmRpbmdCb3gud2lkdGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRoaXMuY3VycmVudEJCb3guaCAhPT0gYm91bmRpbmdCb3guaGVpZ2h0KXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEJCb3guaCA9IGJvdW5kaW5nQm94LmhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udC5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsYm91bmRpbmdCb3guaGVpZ2h0KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdmFyIG1hcmdpbiA9IDE7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuY3VycmVudEJCb3gudyAhPT0gKGJvdW5kaW5nQm94LndpZHRoICsgbWFyZ2luKjIpIHx8IHRoaXMuY3VycmVudEJCb3guaCAhPT0gKGJvdW5kaW5nQm94LmhlaWdodCArIG1hcmdpbioyKSAgfHwgdGhpcy5jdXJyZW50QkJveC54ICE9PSAoYm91bmRpbmdCb3gueCAtIG1hcmdpbikgIHx8IHRoaXMuY3VycmVudEJCb3gueSAhPT0gKGJvdW5kaW5nQm94LnkgLSBtYXJnaW4pKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEJCb3gudyA9IGJvdW5kaW5nQm94LndpZHRoICsgbWFyZ2luKjI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRCQm94LmggPSBib3VuZGluZ0JveC5oZWlnaHQgKyBtYXJnaW4qMjtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEJCb3gueCA9IGJvdW5kaW5nQm94LnggLSBtYXJnaW47XHJcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRCQm94LnkgPSBib3VuZGluZ0JveC55IC0gbWFyZ2luO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuY29udC5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLHRoaXMuY3VycmVudEJCb3gueCsnICcrdGhpcy5jdXJyZW50QkJveC55KycgJyt0aGlzLmN1cnJlbnRCQm94LncrJyAnK3RoaXMuY3VycmVudEJCb3guaCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnQuc3R5bGUudHJhbnNmb3JtID0gdGhpcy5jb250LnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9ICd0cmFuc2xhdGUoJyArIHRoaXMuY3VycmVudEJCb3gueCArICdweCwnICsgdGhpcy5jdXJyZW50QkJveC55ICsgJ3B4KSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZih0aGlzLmZpcnN0RnJhbWUpe1xyXG4gICAgICAgIHRoaXMuZmlyc3RGcmFtZSA9IGZhbHNlO1xyXG4gICAgfVxyXG59XG5mdW5jdGlvbiBISW1hZ2VFbGVtZW50KGRhdGEscGFyZW50Q29udGFpbmVyLGdsb2JhbERhdGEsY29tcCwgcGxhY2Vob2xkZXIpe1xyXG4gICAgdGhpcy5hc3NldERhdGEgPSBnbG9iYWxEYXRhLmdldEFzc2V0RGF0YShkYXRhLnJlZklkKTtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcik7XHJcbn1cclxuY3JlYXRlRWxlbWVudChIQmFzZUVsZW1lbnQsIEhJbWFnZUVsZW1lbnQpO1xyXG5cclxuSEltYWdlRWxlbWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudHMgPSBmdW5jdGlvbigpe1xyXG5cclxuICAgIHZhciBhc3NldFBhdGggPSB0aGlzLmdsb2JhbERhdGEuZ2V0QXNzZXRzUGF0aCh0aGlzLmFzc2V0RGF0YSk7XHJcbiAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7XHJcblxyXG4gICAgaWYodGhpcy5kYXRhLmhhc01hc2spe1xyXG4gICAgICAgIHZhciBwYXJlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBzdHlsZURpdihwYXJlbnQpO1xyXG4gICAgICAgIHZhciBjb250ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHN2Z05TLCdzdmcnKTtcclxuICAgICAgICBzdHlsZURpdihjb250KTtcclxuICAgICAgICBjb250LnNldEF0dHJpYnV0ZSgnd2lkdGgnLHRoaXMuYXNzZXREYXRhLncpO1xyXG4gICAgICAgIGNvbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLHRoaXMuYXNzZXREYXRhLmgpO1xyXG4gICAgICAgIHBhcmVudC5hcHBlbmRDaGlsZChjb250KTtcclxuICAgICAgICB0aGlzLmltYWdlRWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhzdmdOUywnaW1hZ2UnKTtcclxuICAgICAgICB0aGlzLmltYWdlRWxlbS5zZXRBdHRyaWJ1dGUoJ3dpZHRoJyx0aGlzLmFzc2V0RGF0YS53K1wicHhcIik7XHJcbiAgICAgICAgdGhpcy5pbWFnZUVsZW0uc2V0QXR0cmlidXRlKCdoZWlnaHQnLHRoaXMuYXNzZXREYXRhLmgrXCJweFwiKTtcclxuICAgICAgICB0aGlzLmltYWdlRWxlbS5zZXRBdHRyaWJ1dGVOUygnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycsJ2hyZWYnLGFzc2V0UGF0aCk7XHJcbiAgICAgICAgY29udC5hcHBlbmRDaGlsZCh0aGlzLmltYWdlRWxlbSk7XHJcbiAgICAgICAgdGhpcy5sYXllckVsZW1lbnQgPSBwYXJlbnQ7XHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1lZEVsZW1lbnQgPSBwYXJlbnQ7XHJcbiAgICAgICAgdGhpcy5iYXNlRWxlbWVudCA9IHBhcmVudDtcclxuICAgICAgICB0aGlzLmlubmVyRWxlbSA9IHBhcmVudDtcclxuICAgICAgICB0aGlzLm1hc2tlZEVsZW1lbnQgPSB0aGlzLmltYWdlRWxlbTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc3R5bGVEaXYoaW1nKTtcclxuICAgICAgICB0aGlzLmxheWVyRWxlbWVudCA9IGltZztcclxuICAgICAgICB0aGlzLmJhc2VFbGVtZW50ID0gaW1nO1xyXG4gICAgICAgIHRoaXMuaW5uZXJFbGVtID0gaW1nO1xyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtZWRFbGVtZW50ID0gaW1nO1xyXG4gICAgfVxyXG4gICAgaW1nLnNyYyA9IGFzc2V0UGF0aDtcclxuICAgIGlmKHRoaXMuZGF0YS5sbil7XHJcbiAgICAgICAgdGhpcy5pbm5lckVsZW0uc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5kYXRhLmxuKTtcclxuICAgIH1cclxuICAgIHRoaXMuY2hlY2tQYXJlbnRpbmcoKTtcclxufTtcclxuXHJcbkhJbWFnZUVsZW1lbnQucHJvdG90eXBlLnNob3cgPSBIU29saWRFbGVtZW50LnByb3RvdHlwZS5zaG93O1xyXG5ISW1hZ2VFbGVtZW50LnByb3RvdHlwZS5oaWRlID0gSFNvbGlkRWxlbWVudC5wcm90b3R5cGUuaGlkZTtcclxuSEltYWdlRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBIU29saWRFbGVtZW50LnByb3RvdHlwZS5yZW5kZXJGcmFtZTtcclxuSEltYWdlRWxlbWVudC5wcm90b3R5cGUuZGVzdHJveSA9IEhTb2xpZEVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3k7XG5mdW5jdGlvbiBIQ2FtZXJhRWxlbWVudChkYXRhLHBhcmVudENvbnRhaW5lcixnbG9iYWxEYXRhLGNvbXAsIHBsYWNlaG9sZGVyKXtcclxuICAgIHRoaXMuX3BhcmVudC5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsZGF0YSxwYXJlbnRDb250YWluZXIsZ2xvYmFsRGF0YSxjb21wLCBwbGFjZWhvbGRlcik7XHJcbiAgICB2YXIgZ2V0UHJvcCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wO1xyXG4gICAgdGhpcy5wZSA9IGdldFByb3AodGhpcyxkYXRhLnBlLDAsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIGlmKGRhdGEua3MucC5zKXtcclxuICAgICAgICB0aGlzLnB4ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucC54LDEsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB0aGlzLnB5ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucC55LDEsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB0aGlzLnB6ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucC56LDEsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRoaXMucCA9IGdldFByb3AodGhpcyxkYXRhLmtzLnAsMSwwLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgfVxyXG4gICAgaWYoZGF0YS5rcy5hKXtcclxuICAgICAgICB0aGlzLmEgPSBnZXRQcm9wKHRoaXMsZGF0YS5rcy5hLDEsMCx0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgIH1cclxuICAgIGlmKGRhdGEua3Mub3Iuay5sZW5ndGggJiYgZGF0YS5rcy5vci5rWzBdLnRvKXtcclxuICAgICAgICB2YXIgaSxsZW4gPSBkYXRhLmtzLm9yLmsubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIGRhdGEua3Mub3Iua1tpXS50byA9IG51bGw7XHJcbiAgICAgICAgICAgIGRhdGEua3Mub3Iua1tpXS50aSA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5vciA9IGdldFByb3AodGhpcyxkYXRhLmtzLm9yLDEsZGVnVG9SYWRzLHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgdGhpcy5vci5zaCA9IHRydWU7XHJcbiAgICB0aGlzLnJ4ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucngsMCxkZWdUb1JhZHMsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB0aGlzLnJ5ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucnksMCxkZWdUb1JhZHMsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB0aGlzLnJ6ID0gZ2V0UHJvcCh0aGlzLGRhdGEua3MucnosMCxkZWdUb1JhZHMsdGhpcy5keW5hbWljUHJvcGVydGllcyk7XHJcbiAgICB0aGlzLm1hdCA9IG5ldyBNYXRyaXgoKTtcclxufVxyXG5jcmVhdGVFbGVtZW50KEhCYXNlRWxlbWVudCwgSENhbWVyYUVsZW1lbnQpO1xyXG5cclxuSENhbWVyYUVsZW1lbnQucHJvdG90eXBlLnNldHVwID0gZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgaSwgbGVuID0gdGhpcy5jb21wLnRocmVlREVsZW1lbnRzLmxlbmd0aCwgY29tcDtcclxuICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgLy9bcGVyc3BlY3RpdmVFbGVtLGNvbnRhaW5lcl1cclxuICAgICAgICBjb21wID0gdGhpcy5jb21wLnRocmVlREVsZW1lbnRzW2ldO1xyXG4gICAgICAgIGNvbXAucGVyc3BlY3RpdmVFbGVtLnN0eWxlLnBlcnNwZWN0aXZlID0gY29tcC5wZXJzcGVjdGl2ZUVsZW0uc3R5bGUud2Via2l0UGVyc3BlY3RpdmUgPSB0aGlzLnBlLnYrJ3B4JztcclxuICAgICAgICBjb21wLmNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm1PcmlnaW4gPSBjb21wLmNvbnRhaW5lci5zdHlsZS5tb3pUcmFuc2Zvcm1PcmlnaW4gPSBjb21wLmNvbnRhaW5lci5zdHlsZS53ZWJraXRUcmFuc2Zvcm1PcmlnaW4gPSBcIjBweCAwcHggMHB4XCI7XHJcbiAgICAgICAgY29tcC5wZXJzcGVjdGl2ZUVsZW0uc3R5bGUudHJhbnNmb3JtID0gY29tcC5wZXJzcGVjdGl2ZUVsZW0uc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ21hdHJpeDNkKDEsMCwwLDAsMCwxLDAsMCwwLDAsMSwwLDAsMCwwLDEpJztcclxuICAgIH1cclxufTtcclxuXHJcbkhDYW1lcmFFbGVtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cyA9IGZ1bmN0aW9uKCl7XHJcbn07XHJcblxyXG5IQ2FtZXJhRWxlbWVudC5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uKCl7XHJcbn07XHJcblxyXG5IQ2FtZXJhRWxlbWVudC5wcm90b3R5cGUucmVuZGVyRnJhbWUgPSBmdW5jdGlvbigpe1xyXG4gICAgdmFyIG1kZiA9IHRoaXMuZmlyc3RGcmFtZTtcclxuICAgIHZhciBpLCBsZW47XHJcbiAgICBpZih0aGlzLmhpZXJhcmNoeSl7XHJcbiAgICAgICAgbGVuID0gdGhpcy5oaWVyYXJjaHkubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIG1kZiA9IHRoaXMuaGllcmFyY2h5W2ldLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLm1kZiA/IHRydWUgOiBtZGY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYobWRmIHx8ICh0aGlzLnAgJiYgdGhpcy5wLm1kZikgfHwgKHRoaXMucHggJiYgKHRoaXMucHgubWRmIHx8IHRoaXMucHkubWRmIHx8IHRoaXMucHoubWRmKSkgfHwgdGhpcy5yeC5tZGYgfHwgdGhpcy5yeS5tZGYgfHwgdGhpcy5yei5tZGYgfHwgdGhpcy5vci5tZGYgfHwgKHRoaXMuYSAmJiB0aGlzLmEubWRmKSkge1xyXG4gICAgICAgIHRoaXMubWF0LnJlc2V0KCk7XHJcblxyXG4gICAgICAgIGlmKHRoaXMucCl7XHJcbiAgICAgICAgICAgIHRoaXMubWF0LnRyYW5zbGF0ZSgtdGhpcy5wLnZbMF0sLXRoaXMucC52WzFdLHRoaXMucC52WzJdKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy5tYXQudHJhbnNsYXRlKC10aGlzLnB4LnYsLXRoaXMucHkudix0aGlzLnB6LnYpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLmEpe1xyXG4gICAgICAgICAgICB2YXIgZGlmZlZlY3RvciA9IFt0aGlzLnAudlswXS10aGlzLmEudlswXSx0aGlzLnAudlsxXS10aGlzLmEudlsxXSx0aGlzLnAudlsyXS10aGlzLmEudlsyXV07XHJcbiAgICAgICAgICAgIHZhciBtYWcgPSBNYXRoLnNxcnQoTWF0aC5wb3coZGlmZlZlY3RvclswXSwyKStNYXRoLnBvdyhkaWZmVmVjdG9yWzFdLDIpK01hdGgucG93KGRpZmZWZWN0b3JbMl0sMikpO1xyXG4gICAgICAgICAgICAvL3ZhciBsb29rRGlyID0gZ2V0Tm9ybWFsaXplZFBvaW50KGdldERpZmZWZWN0b3IodGhpcy5hLnYsdGhpcy5wLnYpKTtcclxuICAgICAgICAgICAgdmFyIGxvb2tEaXIgPSBbZGlmZlZlY3RvclswXS9tYWcsZGlmZlZlY3RvclsxXS9tYWcsZGlmZlZlY3RvclsyXS9tYWddO1xyXG4gICAgICAgICAgICB2YXIgbG9va0xlbmd0aE9uWFogPSBNYXRoLnNxcnQoIGxvb2tEaXJbMl0qbG9va0RpclsyXSArIGxvb2tEaXJbMF0qbG9va0RpclswXSApO1xyXG4gICAgICAgICAgICB2YXIgbV9yb3RhdGlvblggPSAoTWF0aC5hdGFuMiggbG9va0RpclsxXSwgbG9va0xlbmd0aE9uWFogKSk7XHJcbiAgICAgICAgICAgIHZhciBtX3JvdGF0aW9uWSA9IChNYXRoLmF0YW4yKCBsb29rRGlyWzBdLCAtbG9va0RpclsyXSkpO1xyXG4gICAgICAgICAgICB0aGlzLm1hdC5yb3RhdGVZKG1fcm90YXRpb25ZKS5yb3RhdGVYKC1tX3JvdGF0aW9uWCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1hdC5yb3RhdGVYKC10aGlzLnJ4LnYpLnJvdGF0ZVkoLXRoaXMucnkudikucm90YXRlWih0aGlzLnJ6LnYpO1xyXG4gICAgICAgIHRoaXMubWF0LnJvdGF0ZVgoLXRoaXMub3IudlswXSkucm90YXRlWSgtdGhpcy5vci52WzFdKS5yb3RhdGVaKHRoaXMub3IudlsyXSk7XHJcbiAgICAgICAgdGhpcy5tYXQudHJhbnNsYXRlKHRoaXMuZ2xvYmFsRGF0YS5jb21wU2l6ZS53LzIsdGhpcy5nbG9iYWxEYXRhLmNvbXBTaXplLmgvMiwwKTtcclxuICAgICAgICB0aGlzLm1hdC50cmFuc2xhdGUoMCwwLHRoaXMucGUudik7XHJcbiAgICAgICAgaWYodGhpcy5oaWVyYXJjaHkpe1xyXG4gICAgICAgICAgICB2YXIgbWF0O1xyXG4gICAgICAgICAgICBsZW4gPSB0aGlzLmhpZXJhcmNoeS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICBtYXQgPSB0aGlzLmhpZXJhcmNoeVtpXS5maW5hbFRyYW5zZm9ybS5tUHJvcC5pdi5wcm9wcztcclxuICAgICAgICAgICAgICAgIHRoaXMubWF0LnRyYW5zZm9ybShtYXRbMF0sbWF0WzFdLG1hdFsyXSxtYXRbM10sbWF0WzRdLG1hdFs1XSxtYXRbNl0sbWF0WzddLG1hdFs4XSxtYXRbOV0sbWF0WzEwXSxtYXRbMTFdLC1tYXRbMTJdLC1tYXRbMTNdLG1hdFsxNF0sbWF0WzE1XSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGVuID0gdGhpcy5jb21wLnRocmVlREVsZW1lbnRzLmxlbmd0aDtcclxuICAgICAgICB2YXIgY29tcDtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBjb21wID0gdGhpcy5jb21wLnRocmVlREVsZW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBjb21wLmNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSBjb21wLmNvbnRhaW5lci5zdHlsZS53ZWJraXRUcmFuc2Zvcm0gPSB0aGlzLm1hdC50b0NTUygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMuZmlyc3RGcmFtZSA9IGZhbHNlO1xyXG59O1xyXG5cclxuSENhbWVyYUVsZW1lbnQucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpe1xyXG59O1xudmFyIEV4cHJlc3Npb25zID0gKGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgb2IgPSB7fTtcclxuICAgIG9iLmluaXRFeHByZXNzaW9ucyA9IGluaXRFeHByZXNzaW9ucztcclxuXHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdEV4cHJlc3Npb25zKGFuaW1hdGlvbil7XHJcbiAgICAgICAgYW5pbWF0aW9uLnJlbmRlcmVyLmNvbXBJbnRlcmZhY2UgPSBDb21wRXhwcmVzc2lvbkludGVyZmFjZShhbmltYXRpb24ucmVuZGVyZXIpO1xyXG4gICAgICAgIGFuaW1hdGlvbi5yZW5kZXJlci5nbG9iYWxEYXRhLnByb2plY3RJbnRlcmZhY2UucmVnaXN0ZXJDb21wb3NpdGlvbihhbmltYXRpb24ucmVuZGVyZXIpO1xyXG4gICAgfVxyXG4gICByZXR1cm4gb2I7XHJcbn0oKSk7XHJcblxyXG5leHByZXNzaW9uc1BsdWdpbiA9IEV4cHJlc3Npb25zO1xyXG5cbihmdW5jdGlvbiBhZGRQcm9wZXJ0eURlY29yYXRvcigpIHtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXRTdGF0aWNWYWx1ZUF0VGltZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wdjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBsb29wT3V0KHR5cGUsZHVyYXRpb24sZHVyYXRpb25GbGFnKXtcclxuICAgICAgICBpZighdGhpcy5rIHx8ICF0aGlzLmtleWZyYW1lcyl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnB2O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY3VycmVudEZyYW1lID0gdGhpcy5jb21wLnJlbmRlcmVkRnJhbWU7XHJcbiAgICAgICAgdmFyIGtleWZyYW1lcyA9IHRoaXMua2V5ZnJhbWVzO1xyXG4gICAgICAgIHZhciBsYXN0S2V5RnJhbWUgPSBrZXlmcmFtZXNba2V5ZnJhbWVzLmxlbmd0aCAtIDFdLnQ7XHJcbiAgICAgICAgaWYoY3VycmVudEZyYW1lPD1sYXN0S2V5RnJhbWUpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wdjtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdmFyIGN5Y2xlRHVyYXRpb24sIGZpcnN0S2V5RnJhbWU7XHJcbiAgICAgICAgICAgIGlmKCFkdXJhdGlvbkZsYWcpe1xyXG4gICAgICAgICAgICAgICAgaWYoIWR1cmF0aW9uIHx8IGR1cmF0aW9uID4ga2V5ZnJhbWVzLmxlbmd0aCAtIDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uID0ga2V5ZnJhbWVzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmaXJzdEtleUZyYW1lID0ga2V5ZnJhbWVzW2tleWZyYW1lcy5sZW5ndGggLSAxIC0gZHVyYXRpb25dLnQ7XHJcbiAgICAgICAgICAgICAgICBjeWNsZUR1cmF0aW9uID0gbGFzdEtleUZyYW1lIC0gZmlyc3RLZXlGcmFtZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmKCFkdXJhdGlvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgY3ljbGVEdXJhdGlvbiA9IE1hdGgubWF4KDAsbGFzdEtleUZyYW1lIC0gdGhpcy5lbGVtLmRhdGEuaXApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjeWNsZUR1cmF0aW9uID0gTWF0aC5hYnMobGFzdEtleUZyYW1lIC0gZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlKmR1cmF0aW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZpcnN0S2V5RnJhbWUgPSBsYXN0S2V5RnJhbWUgLSBjeWNsZUR1cmF0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBvZmZzZXRUaW1lID0gdGhpcy5vZmZzZXRUaW1lIHx8IDA7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4sIHJldDtcclxuICAgICAgICAgICAgaWYodHlwZS50b0xvd2VyQ2FzZSgpID09PSAncGluZ3BvbmcnKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXRlcmF0aW9ucyA9IE1hdGguZmxvb3IoKGN1cnJlbnRGcmFtZSAtIGZpcnN0S2V5RnJhbWUpL2N5Y2xlRHVyYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgaWYoaXRlcmF0aW9ucyAlIDIgIT09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFZhbHVlQXRUaW1lKCgoY3ljbGVEdXJhdGlvbiAtIChjdXJyZW50RnJhbWUgLSBmaXJzdEtleUZyYW1lKSAlIGN5Y2xlRHVyYXRpb24gKyAgZmlyc3RLZXlGcmFtZSkgLSBvZmZzZXRUaW1lKSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZih0eXBlID09PSAnb2Zmc2V0Jyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5pdFYgPSB0aGlzLmdldFZhbHVlQXRUaW1lKGZpcnN0S2V5RnJhbWUgLyB0aGlzLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIDApO1xyXG4gICAgICAgICAgICAgICAgdmFyIGVuZFYgPSB0aGlzLmdldFZhbHVlQXRUaW1lKGxhc3RLZXlGcmFtZSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudCA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUoKChjdXJyZW50RnJhbWUgLSBmaXJzdEtleUZyYW1lKSAlIGN5Y2xlRHVyYXRpb24gKyAgZmlyc3RLZXlGcmFtZSkgLyB0aGlzLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIDApO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlcGVhdHMgPSBNYXRoLmZsb29yKChjdXJyZW50RnJhbWUgLSBmaXJzdEtleUZyYW1lKS9jeWNsZUR1cmF0aW9uKTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMucHYubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICByZXQgPSBuZXcgQXJyYXkoaW5pdFYubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBsZW4gPSByZXQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldFtpXSA9IChlbmRWW2ldLWluaXRWW2ldKSpyZXBlYXRzICsgY3VycmVudFtpXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiAoZW5kVi1pbml0VikqcmVwZWF0cyArIGN1cnJlbnQ7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZih0eXBlID09PSAnY29udGludWUnKXtcclxuICAgICAgICAgICAgICAgIHZhciBsYXN0VmFsdWUgPSB0aGlzLmdldFZhbHVlQXRUaW1lKGxhc3RLZXlGcmFtZSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbmV4dExhc3RWYWx1ZSA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUoKGxhc3RLZXlGcmFtZSAtIDAuMDAxKSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnB2Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0ID0gbmV3IEFycmF5KGxhc3RWYWx1ZS5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlbiA9IHJldC5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0W2ldID0gbGFzdFZhbHVlW2ldICsgKGxhc3RWYWx1ZVtpXS1uZXh0TGFzdFZhbHVlW2ldKSooKGN1cnJlbnRGcmFtZSAtIGxhc3RLZXlGcmFtZSkvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSkvMC4wMDA1O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhc3RWYWx1ZSArIChsYXN0VmFsdWUtbmV4dExhc3RWYWx1ZSkqKCgoY3VycmVudEZyYW1lIC0gbGFzdEtleUZyYW1lKSkvMC4wMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFZhbHVlQXRUaW1lKCgoKGN1cnJlbnRGcmFtZSAtIGZpcnN0S2V5RnJhbWUpICUgY3ljbGVEdXJhdGlvbiArICBmaXJzdEtleUZyYW1lKSAtIG9mZnNldFRpbWUpIC8gdGhpcy5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlLCAwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbG9vcEluKHR5cGUsZHVyYXRpb24sIGR1cmF0aW9uRmxhZykge1xyXG4gICAgICAgIGlmKCF0aGlzLmspe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wdjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGN1cnJlbnRGcmFtZSA9IHRpbWUqZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgIHZhciBrZXlmcmFtZXMgPSB0aGlzLmtleWZyYW1lcztcclxuICAgICAgICB2YXIgZmlyc3RLZXlGcmFtZSA9IGtleWZyYW1lc1swXS50O1xyXG4gICAgICAgIHZhciBvZmZzZXRUaW1lID0gdGhpcy5vZmZzZXRUaW1lIHx8IDA7XHJcbiAgICAgICAgaWYoY3VycmVudEZyYW1lPj1maXJzdEtleUZyYW1lKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHY7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHZhciBjeWNsZUR1cmF0aW9uLCBsYXN0S2V5RnJhbWU7XHJcbiAgICAgICAgICAgIGlmKCFkdXJhdGlvbkZsYWcpe1xyXG4gICAgICAgICAgICAgICAgaWYoIWR1cmF0aW9uIHx8IGR1cmF0aW9uID4ga2V5ZnJhbWVzLmxlbmd0aCAtIDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uID0ga2V5ZnJhbWVzLmxlbmd0aCAtIDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsYXN0S2V5RnJhbWUgPSBrZXlmcmFtZXNbZHVyYXRpb25dLnQ7XHJcbiAgICAgICAgICAgICAgICBjeWNsZUR1cmF0aW9uID0gbGFzdEtleUZyYW1lIC0gZmlyc3RLZXlGcmFtZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmKCFkdXJhdGlvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgY3ljbGVEdXJhdGlvbiA9IE1hdGgubWF4KDAsdGhpcy5lbGVtLmRhdGEub3AgLSBmaXJzdEtleUZyYW1lKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY3ljbGVEdXJhdGlvbiA9IE1hdGguYWJzKGVsZW0uY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSpkdXJhdGlvbik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsYXN0S2V5RnJhbWUgPSBmaXJzdEtleUZyYW1lICsgY3ljbGVEdXJhdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgaSwgbGVuLCByZXQ7XHJcbiAgICAgICAgICAgIGlmKHR5cGUgPT09ICdwaW5ncG9uZycpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVyYXRpb25zID0gTWF0aC5mbG9vcigoZmlyc3RLZXlGcmFtZSAtIGN1cnJlbnRGcmFtZSkvY3ljbGVEdXJhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBpZihpdGVyYXRpb25zICUgMiA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWVBdFRpbWUoKCgoZmlyc3RLZXlGcmFtZSAtIGN1cnJlbnRGcmFtZSklY3ljbGVEdXJhdGlvbiArICBmaXJzdEtleUZyYW1lKSAtIG9mZnNldFRpbWUpIC8gdGhpcy5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlLCAwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmKHR5cGUgPT09ICdvZmZzZXQnKXtcclxuICAgICAgICAgICAgICAgIHZhciBpbml0ViA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUoZmlyc3RLZXlGcmFtZSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kViA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUobGFzdEtleUZyYW1lIC8gdGhpcy5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlLCAwKTtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gdGhpcy5nZXRWYWx1ZUF0VGltZSgoY3ljbGVEdXJhdGlvbiAtIChmaXJzdEtleUZyYW1lIC0gY3VycmVudEZyYW1lKSVjeWNsZUR1cmF0aW9uICsgIGZpcnN0S2V5RnJhbWUpIC8gdGhpcy5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlLCAwKTtcclxuICAgICAgICAgICAgICAgIHZhciByZXBlYXRzID0gTWF0aC5mbG9vcigoZmlyc3RLZXlGcmFtZSAtIGN1cnJlbnRGcmFtZSkvY3ljbGVEdXJhdGlvbikrMTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMucHYubGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICByZXQgPSBuZXcgQXJyYXkoaW5pdFYubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBsZW4gPSByZXQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldFtpXSA9IGN1cnJlbnRbaV0tKGVuZFZbaV0taW5pdFZbaV0pKnJlcGVhdHM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudC0oZW5kVi1pbml0VikqcmVwZWF0cztcclxuICAgICAgICAgICAgfSBlbHNlIGlmKHR5cGUgPT09ICdjb250aW51ZScpe1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpcnN0VmFsdWUgPSB0aGlzLmdldFZhbHVlQXRUaW1lKGZpcnN0S2V5RnJhbWUgLyB0aGlzLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIDApO1xyXG4gICAgICAgICAgICAgICAgdmFyIG5leHRGaXJzdFZhbHVlID0gdGhpcy5nZXRWYWx1ZUF0VGltZSgoZmlyc3RLZXlGcmFtZSArIDAuMDAxKSAvIHRoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZSwgMCk7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnB2Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0ID0gbmV3IEFycmF5KGZpcnN0VmFsdWUubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgICAgICBsZW4gPSByZXQubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldFtpXSA9IGZpcnN0VmFsdWVbaV0gKyAoZmlyc3RWYWx1ZVtpXS1uZXh0Rmlyc3RWYWx1ZVtpXSkqKGZpcnN0S2V5RnJhbWUgLSBjdXJyZW50RnJhbWUpLzAuMDAxO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpcnN0VmFsdWUgKyAoZmlyc3RWYWx1ZS1uZXh0Rmlyc3RWYWx1ZSkqKGZpcnN0S2V5RnJhbWUgLSBjdXJyZW50RnJhbWUpLzAuMDAxO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZUF0VGltZSgoKGN5Y2xlRHVyYXRpb24gLSAoZmlyc3RLZXlGcmFtZSAtIGN1cnJlbnRGcmFtZSkgJSBjeWNsZUR1cmF0aW9uICsgIGZpcnN0S2V5RnJhbWUpIC0gb2Zmc2V0VGltZSkgLyB0aGlzLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGUsIDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRWYWx1ZUF0VGltZShmcmFtZU51bSkge1xyXG4gICAgICAgIGlmKCF0aGlzLl9jYWNoaW5nQXRUaW1lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhY2hpbmdBdFRpbWUgPSB7bGFzdFZhbHVlOi05OTk5OSxsYXN0SW5kZXg6MH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ3RoaXMuX2NhY2hpbmdBdFRpbWUnLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuX2NhY2hpbmdBdFRpbWUpKSlcclxuICAgICAgICBpZihmcmFtZU51bSAhPT0gdGhpcy5fY2FjaGluZ0F0VGltZS5sYXN0RnJhbWUpIHtcclxuICAgICAgICAgICAgZnJhbWVOdW0gKj0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgICAgICBmcmFtZU51bSAtPSB0aGlzLm9mZnNldFRpbWU7XHJcbiAgICAgICAgICAgIHZhciBpID0gdGhpcy5fY2FjaGluZy5sYXN0RnJhbWUgPCBmcmFtZU51bSA/IHRoaXMuX2NhY2hpbmcubGFzdEluZGV4IDogMDtcclxuICAgICAgICAgICAgdmFyIGludGVycG9sYXRpb25SZXN1bHQgPSB0aGlzLmludGVycG9sYXRlVmFsdWUoZnJhbWVOdW0sIGksIHRoaXMucHYsIHRoaXMuX2NhY2hpbmdBdFRpbWUpO1xyXG4gICAgICAgICAgICB0aGlzLl9jYWNoaW5nQXRUaW1lLmxhc3RJbmRleCA9IGludGVycG9sYXRpb25SZXN1bHQuaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhY2hpbmdBdFRpbWUudmFsdWUgPSBpbnRlcnBvbGF0aW9uUmVzdWx0LnZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLl9jYWNoaW5nQXRUaW1lLmxhc3RGcmFtZSA9IGZyYW1lTnVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5fY2FjaGluZ0F0VGltZS52YWx1ZTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0VmVsb2NpdHlBdFRpbWUoZnJhbWVOdW0pIHtcclxuICAgICAgICBpZih0aGlzLnZlbCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZGVsdGEgPSAtMC4wMTtcclxuICAgICAgICAvL2ZyYW1lTnVtICs9IHRoaXMuZWxlbS5kYXRhLnN0O1xyXG4gICAgICAgIHZhciB2MSA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUoZnJhbWVOdW0pO1xyXG4gICAgICAgIHZhciB2MiA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUoZnJhbWVOdW0gKyBkZWx0YSk7XHJcbiAgICAgICAgdmFyIHZlbG9jaXR5O1xyXG4gICAgICAgIGlmKHYxLmxlbmd0aCl7XHJcbiAgICAgICAgICAgIHZlbG9jaXR5ID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnYxLmxlbmd0aH0pO1xyXG4gICAgICAgICAgICB2YXIgaTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPHYxLmxlbmd0aDtpKz0xKXtcclxuICAgICAgICAgICAgICAgIC8vcmVtb3ZpbmcgZnJhbWVSYXRlXHJcbiAgICAgICAgICAgICAgICAvL2lmIG5lZWRlZCwgZG9uJ3QgYWRkIGl0IGhlcmVcclxuICAgICAgICAgICAgICAgIC8vdmVsb2NpdHlbaV0gPSB0aGlzLmVsZW0uZ2xvYmFsRGF0YS5mcmFtZVJhdGUqKCh2MltpXSAtIHYxW2ldKS9kZWx0YSk7XHJcbiAgICAgICAgICAgICAgICB2ZWxvY2l0eVtpXSA9ICh2MltpXSAtIHYxW2ldKS9kZWx0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHZlbG9jaXR5ID0gKHYyIC0gdjEpL2RlbHRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdmVsb2NpdHk7XHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIHNldEdyb3VwUHJvcGVydHkocHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgdGhpcy5wcm9wZXJ0eUdyb3VwID0gcHJvcGVydHlHcm91cDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZWFyY2hFeHByZXNzaW9ucyhlbGVtLGRhdGEscHJvcCl7XHJcbiAgICAgICAgaWYoZGF0YS54KXtcclxuICAgICAgICAgICAgcHJvcC5rID0gdHJ1ZTtcclxuICAgICAgICAgICAgcHJvcC54ID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYocHJvcC5nZXRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgcHJvcC5nZXRQcmVWYWx1ZSA9IHByb3AuZ2V0VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcHJvcC5nZXRWYWx1ZSA9IEV4cHJlc3Npb25NYW5hZ2VyLmluaXRpYXRlRXhwcmVzc2lvbi5iaW5kKHByb3ApKGVsZW0sZGF0YSxwcm9wKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0VHJhbnNmb3JtVmFsdWVBdFRpbWUodGltZSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd0aW1lOicsIHRpbWUpXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0VHJhbnNmb3JtU3RhdGljVmFsdWVBdFRpbWUodGltZSkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICB2YXIgVGV4dEV4cHJlc3Npb25TZWxlY3RvclByb3AgPSAoZnVuY3Rpb24oKXtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0VmFsdWVQcm94eShpbmRleCx0b3RhbCl7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dEluZGV4ID0gaW5kZXgrMTtcclxuICAgICAgICAgICAgdGhpcy50ZXh0VG90YWwgPSB0b3RhbDtcclxuICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy52O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIFRleHRFeHByZXNzaW9uU2VsZWN0b3JQcm9wKGVsZW0sZGF0YSl7XHJcbiAgICAgICAgICAgIHRoaXMucHYgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbSA9IGVsZW07XHJcbiAgICAgICAgICAgIHRoaXMubXVsdCA9IC4wMTtcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gJ3RleHRTZWxlY3Rvcic7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFRvdGFsID0gZGF0YS50b3RhbENoYXJzO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdG9yVmFsdWUgPSAxMDA7XHJcbiAgICAgICAgICAgIHRoaXMubGFzdFZhbHVlID0gWzEsMSwxXTtcclxuICAgICAgICAgICAgc2VhcmNoRXhwcmVzc2lvbnMuYmluZCh0aGlzKShlbGVtLGRhdGEsdGhpcyk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0TXVsdCA9IGdldFZhbHVlUHJveHk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VmVsb2NpdHlBdFRpbWUgPSBnZXRWZWxvY2l0eUF0VGltZTtcclxuICAgICAgICAgICAgaWYodGhpcy5rZil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdldFZhbHVlQXRUaW1lID0gZ2V0VmFsdWVBdFRpbWUuYmluZCh0aGlzKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0VmFsdWVBdFRpbWUgPSBnZXRTdGF0aWNWYWx1ZUF0VGltZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuc2V0R3JvdXBQcm9wZXJ0eSA9IHNldEdyb3VwUHJvcGVydHk7XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcblxyXG4gICAgdmFyIHByb3BlcnR5R2V0UHJvcCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wO1xyXG4gICAgUHJvcGVydHlGYWN0b3J5LmdldFByb3AgPSBmdW5jdGlvbihlbGVtLGRhdGEsdHlwZSwgbXVsdCwgYXJyKXtcclxuICAgICAgICB2YXIgcHJvcCA9IHByb3BlcnR5R2V0UHJvcChlbGVtLGRhdGEsdHlwZSwgbXVsdCwgYXJyKTtcclxuICAgICAgICAvL3Byb3AuZ2V0VmVsb2NpdHlBdFRpbWUgPSBnZXRWZWxvY2l0eUF0VGltZTtcclxuICAgICAgICAvL3Byb3AubG9vcE91dCA9IGxvb3BPdXQ7XHJcbiAgICAgICAgLy9wcm9wLmxvb3BJbiA9IGxvb3BJbjtcclxuICAgICAgICBpZih0eXBlID09PSAyKSB7XHJcbiAgICAgICAgICAgIGlmKHByb3AuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBwcm9wLmdldFZhbHVlQXRUaW1lID0gZ2V0VHJhbnNmb3JtVmFsdWVBdFRpbWUuYmluZChwcm9wKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHByb3AuZ2V0VmFsdWVBdFRpbWUgPSBnZXRUcmFuc2Zvcm1TdGF0aWNWYWx1ZUF0VGltZS5iaW5kKHByb3ApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYocHJvcC5rZil7XHJcbiAgICAgICAgICAgICAgICBwcm9wLmdldFZhbHVlQXRUaW1lID0gZ2V0VmFsdWVBdFRpbWUuYmluZChwcm9wKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHByb3AuZ2V0VmFsdWVBdFRpbWUgPSBnZXRTdGF0aWNWYWx1ZUF0VGltZS5iaW5kKHByb3ApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByb3Auc2V0R3JvdXBQcm9wZXJ0eSA9IHNldEdyb3VwUHJvcGVydHk7XHJcbiAgICAgICAgcHJvcC5sb29wT3V0ID0gbG9vcE91dDtcclxuICAgICAgICBwcm9wLmxvb3BJbiA9IGxvb3BJbjtcclxuICAgICAgICBwcm9wLmdldFZlbG9jaXR5QXRUaW1lID0gZ2V0VmVsb2NpdHlBdFRpbWU7XHJcbiAgICAgICAgcHJvcC5udW1LZXlzID0gZGF0YS5hID09PSAxID8gZGF0YS5rLmxlbmd0aCA6IDA7XHJcbiAgICAgICAgdmFyIGlzQWRkZWQgPSBwcm9wLms7XHJcbiAgICAgICAgaWYoZGF0YS5peCAhPT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3AsJ3Byb3BlcnR5SW5kZXgnLHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5peDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgc2VhcmNoRXhwcmVzc2lvbnMoZWxlbSxkYXRhLHByb3ApO1xyXG4gICAgICAgIGlmKCFpc0FkZGVkICYmIHByb3AueCl7XHJcbiAgICAgICAgICAgIGFyci5wdXNoKHByb3ApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHByb3A7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0U2hhcGVWYWx1ZUF0VGltZShmcmFtZU51bSkge1xyXG4gICAgICAgIGlmICghdGhpcy5fc2hhcGVWYWx1ZUF0VGltZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9sYXN0SW5kZXhBdFRpbWUgPSAwO1xyXG4gICAgICAgICAgICB0aGlzLl9sYXN0VGltZUF0VGltZSA9IC05OTk5OTk7XHJcbiAgICAgICAgICAgIHRoaXMuX3NoYXBlVmFsdWVBdFRpbWUgPSBzaGFwZV9wb29sLmNsb25lKHRoaXMucHYpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihmcmFtZU51bSAhPT0gdGhpcy5fbGFzdFRpbWVBdFRpbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGFzdFRpbWVBdFRpbWUgPSBmcmFtZU51bTtcclxuICAgICAgICAgICAgZnJhbWVOdW0gKj0gdGhpcy5lbGVtLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgICAgICB2YXIgaW50ZXJwb2xhdGlvblJlc3VsdCA9IHRoaXMuaW50ZXJwb2xhdGVTaGFwZShmcmFtZU51bSwgdGhpcy5fbGFzdEluZGV4QXRUaW1lLCB0aGlzLl9zaGFwZVZhbHVlQXRUaW1lLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2xhc3RJbmRleEF0VGltZSA9IGludGVycG9sYXRpb25SZXN1bHQuaXRlcmF0aW9uSW5kZXg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaGFwZVZhbHVlQXRUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbiA9IFNoYXBlUHJvcGVydHlGYWN0b3J5LmdldENvbnN0cnVjdG9yRnVuY3Rpb24oKTtcclxuICAgIHZhciBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbiA9IFNoYXBlUHJvcGVydHlGYWN0b3J5LmdldEtleWZyYW1lZENvbnN0cnVjdG9yRnVuY3Rpb24oKTtcclxuXHJcbiAgICBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUudmVydGljZXMgPSBmdW5jdGlvbihwcm9wLCB0aW1lKXtcclxuICAgICAgICB2YXIgc2hhcGVQYXRoID0gdGhpcy52O1xyXG4gICAgICAgIGlmKHRpbWUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBzaGFwZVBhdGggPSB0aGlzLmdldFZhbHVlQXRUaW1lKHRpbWUsIDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaSwgbGVuID0gc2hhcGVQYXRoLl9sZW5ndGg7XHJcbiAgICAgICAgdmFyIHZlcnRpY2VzID0gc2hhcGVQYXRoW3Byb3BdO1xyXG4gICAgICAgIHZhciBwb2ludHMgPSBzaGFwZVBhdGgudjtcclxuICAgICAgICB2YXIgYXJyID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOmxlbn0pXHJcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgaWYocHJvcCA9PT0gJ2knIHx8IHByb3AgPT09ICdvJykge1xyXG4gICAgICAgICAgICAgICAgYXJyW2ldID0gW3ZlcnRpY2VzW2ldWzBdIC0gcG9pbnRzW2ldWzBdLCB2ZXJ0aWNlc1tpXVsxXSAtIHBvaW50c1tpXVsxXV1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IFt2ZXJ0aWNlc1tpXVswXSwgdmVydGljZXNbaV1bMV1dXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhcnI7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnBvaW50cyA9IGZ1bmN0aW9uKHRpbWUpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZlcnRpY2VzKCd2JywgdGltZSk7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLmluVGFuZ2VudHMgPSBmdW5jdGlvbih0aW1lKXtcclxuICAgICAgICByZXR1cm4gdGhpcy52ZXJ0aWNlcygnaScsIHRpbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIFNoYXBlUHJvcGVydHlDb25zdHJ1Y3RvckZ1bmN0aW9uLnByb3RvdHlwZS5vdXRUYW5nZW50cyA9IGZ1bmN0aW9uKHRpbWUpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZlcnRpY2VzKCdvJywgdGltZSk7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLmlzQ2xvc2VkID0gZnVuY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gdGhpcy52LmM7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnBvaW50T25QYXRoID0gZnVuY3Rpb24ocGVyYywgdGltZSl7XHJcbiAgICAgICAgdmFyIHNoYXBlUGF0aCA9IHRoaXMudjtcclxuICAgICAgICBpZih0aW1lICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgc2hhcGVQYXRoID0gdGhpcy5nZXRWYWx1ZUF0VGltZSh0aW1lLCAwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIXRoaXMuX3NlZ21lbnRzTGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NlZ21lbnRzTGVuZ3RoID0gYmV6LmdldFNlZ21lbnRzTGVuZ3RoKHNoYXBlUGF0aCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc2VnbWVudHNMZW5ndGggPSB0aGlzLl9zZWdtZW50c0xlbmd0aDtcclxuICAgICAgICB2YXIgbGVuZ3RocyA9IHNlZ21lbnRzTGVuZ3RoLmxlbmd0aHM7XHJcbiAgICAgICAgdmFyIGxlbmd0aFBvcyA9IHNlZ21lbnRzTGVuZ3RoLnRvdGFsTGVuZ3RoICogcGVyYztcclxuICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IGxlbmd0aHMubGVuZ3RoO1xyXG4gICAgICAgIHZhciBqID0gMCwgakxlbjtcclxuICAgICAgICB2YXIgYWNjdW11bGF0ZWRMZW5ndGggPSAwO1xyXG4gICAgICAgIHZhciBzZWdtZW50cztcclxuICAgICAgICB3aGlsZShpIDwgbGVuKSB7XHJcbiAgICAgICAgICAgIGlmKGFjY3VtdWxhdGVkTGVuZ3RoICsgbGVuZ3Roc1tpXS5hZGRlZExlbmd0aCA+IGxlbmd0aFBvcykge1xyXG4gICAgICAgICAgICAgICAgc2VnbWVudHMgPSBsZW5ndGhzW2ldLnNlZ21lbnRzO1xyXG4gICAgICAgICAgICAgICAgdmFyIGluaXRJbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW5kSW5kZXggPSAoc2hhcGVQYXRoLmMgJiYgaSA9PT0gbGVuIC0gMSkgPyAwIDogaSArIDE7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VnbWVudFBlcmMgPSAobGVuZ3RoUG9zIC0gYWNjdW11bGF0ZWRMZW5ndGgpL2xlbmd0aHNbaV0uYWRkZWRMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHQgPSBiZXouZ2V0UG9pbnRJblNlZ21lbnQoc2hhcGVQYXRoLnZbaW5pdEluZGV4XSwgc2hhcGVQYXRoLnZbZW5kSW5kZXhdLCBzaGFwZVBhdGgub1tpbml0SW5kZXhdLCBzaGFwZVBhdGguaVtlbmRJbmRleF0sIHNlZ21lbnRQZXJjLCBsZW5ndGhzW2ldKVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhY2N1bXVsYXRlZExlbmd0aCArPSBsZW5ndGhzW2ldLmFkZGVkTGVuZ3RoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIXB0KXtcclxuICAgICAgICAgICAgcHQgPSBzaGFwZVBhdGguYyA/IFtzaGFwZVBhdGgudlswXVswXSxzaGFwZVBhdGgudlswXVsxXV06W3NoYXBlUGF0aC52W3NoYXBlUGF0aC5fbGVuZ3RoLTFdWzBdLHNoYXBlUGF0aC52W3NoYXBlUGF0aC5fbGVuZ3RoLTFdWzFdXVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcHQ7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnZlY3Rvck9uUGF0aCA9IGZ1bmN0aW9uKHBlcmMsIHRpbWUsIHZlY3RvclR5cGUpe1xyXG4gICAgICAgIC8vcGVyYyBkb2Vzbid0IHVzZSB0cmlwbGUgZXF1YWxpdHkgYmVjYXVzZSBjYW4gYmUgYSBOdW1iZXIgb2JqZWN0LCBub3QgYSBwcmltaXRpdmUuXHJcbiAgICAgICAgcGVyYyA9IHBlcmMgPT0gMSA/IHRoaXMudi5jID8gMCA6IDAuOTk5IDogcGVyYztcclxuICAgICAgICB2YXIgcHQxID0gdGhpcy5wb2ludE9uUGF0aChwZXJjLCB0aW1lKTtcclxuICAgICAgICB2YXIgcHQyID0gdGhpcy5wb2ludE9uUGF0aChwZXJjICsgMC4wMDEsIHRpbWUpO1xyXG4gICAgICAgIHZhciB4TGVuZ3RoID0gcHQyWzBdIC0gcHQxWzBdO1xyXG4gICAgICAgIHZhciB5TGVuZ3RoID0gcHQyWzFdIC0gcHQxWzFdO1xyXG4gICAgICAgIHZhciBtYWduaXR1ZGUgPSBNYXRoLnNxcnQoTWF0aC5wb3coeExlbmd0aCwyKSArIE1hdGgucG93KHlMZW5ndGgsMikpO1xyXG4gICAgICAgIHZhciB1bml0VmVjdG9yID0gdmVjdG9yVHlwZSA9PT0gJ3RhbmdlbnQnID8gW3hMZW5ndGgvbWFnbml0dWRlLCB5TGVuZ3RoL21hZ25pdHVkZV0gOiBbLXlMZW5ndGgvbWFnbml0dWRlLCB4TGVuZ3RoL21hZ25pdHVkZV07XHJcbiAgICAgICAgcmV0dXJuIHVuaXRWZWN0b3I7XHJcbiAgICB9XHJcblxyXG4gICAgU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnRhbmdlbnRPblBhdGggPSBmdW5jdGlvbihwZXJjLCB0aW1lKXtcclxuICAgICAgICByZXR1cm4gdGhpcy52ZWN0b3JPblBhdGgocGVyYywgdGltZSwgJ3RhbmdlbnQnKTtcclxuICAgIH1cclxuXHJcbiAgICBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUubm9ybWFsT25QYXRoID0gZnVuY3Rpb24ocGVyYywgdGltZSl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmVjdG9yT25QYXRoKHBlcmMsIHRpbWUsICdub3JtYWwnKTtcclxuICAgIH1cclxuXHJcbiAgICBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUuc2V0R3JvdXBQcm9wZXJ0eSA9IHNldEdyb3VwUHJvcGVydHk7XHJcbiAgICBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUuZ2V0VmFsdWVBdFRpbWUgPSBnZXRTdGF0aWNWYWx1ZUF0VGltZTtcclxuXHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUudmVydGljZXMgPSBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUudmVydGljZXM7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUucG9pbnRzID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnBvaW50cztcclxuICAgIEtleWZyYW1lZFNoYXBlUHJvcGVydHlDb25zdHJ1Y3RvckZ1bmN0aW9uLnByb3RvdHlwZS5pblRhbmdlbnRzID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLmluVGFuZ2VudHM7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUub3V0VGFuZ2VudHMgPSBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUub3V0VGFuZ2VudHM7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUuaXNDbG9zZWQgPSBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUuaXNDbG9zZWQ7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUucG9pbnRPblBhdGggPSBTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUucG9pbnRPblBhdGg7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUudmVjdG9yT25QYXRoID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnZlY3Rvck9uUGF0aDtcclxuICAgIEtleWZyYW1lZFNoYXBlUHJvcGVydHlDb25zdHJ1Y3RvckZ1bmN0aW9uLnByb3RvdHlwZS50YW5nZW50T25QYXRoID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnRhbmdlbnRPblBhdGg7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUubm9ybWFsT25QYXRoID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLm5vcm1hbE9uUGF0aDtcclxuICAgIEtleWZyYW1lZFNoYXBlUHJvcGVydHlDb25zdHJ1Y3RvckZ1bmN0aW9uLnByb3RvdHlwZS5zZXRHcm91cFByb3BlcnR5ID0gU2hhcGVQcm9wZXJ0eUNvbnN0cnVjdG9yRnVuY3Rpb24ucHJvdG90eXBlLnNldEdyb3VwUHJvcGVydHk7XHJcbiAgICBLZXlmcmFtZWRTaGFwZVByb3BlcnR5Q29uc3RydWN0b3JGdW5jdGlvbi5wcm90b3R5cGUuZ2V0VmFsdWVBdFRpbWUgPSBnZXRTaGFwZVZhbHVlQXRUaW1lO1xyXG5cclxuICAgIHZhciBwcm9wZXJ0eUdldFNoYXBlUHJvcCA9IFNoYXBlUHJvcGVydHlGYWN0b3J5LmdldFNoYXBlUHJvcDtcclxuICAgIFNoYXBlUHJvcGVydHlGYWN0b3J5LmdldFNoYXBlUHJvcCA9IGZ1bmN0aW9uKGVsZW0sZGF0YSx0eXBlLCBhcnIsIHRyaW1zKXtcclxuICAgICAgICB2YXIgcHJvcCA9IHByb3BlcnR5R2V0U2hhcGVQcm9wKGVsZW0sZGF0YSx0eXBlLCBhcnIsIHRyaW1zKTtcclxuICAgICAgICB2YXIgaXNBZGRlZCA9IHByb3AuaztcclxuICAgICAgICBpZihkYXRhLml4ICE9PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvcCwncHJvcGVydHlJbmRleCcse1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLml4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0eXBlID09PSAzKXtcclxuICAgICAgICAgICAgc2VhcmNoRXhwcmVzc2lvbnMoZWxlbSxkYXRhLnB0LHByb3ApO1xyXG4gICAgICAgIH0gZWxzZSBpZih0eXBlID09PSA0KXtcclxuICAgICAgICAgICAgc2VhcmNoRXhwcmVzc2lvbnMoZWxlbSxkYXRhLmtzLHByb3ApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZighaXNBZGRlZCAmJiBwcm9wLngpe1xyXG4gICAgICAgICAgICBhcnIucHVzaChwcm9wKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHByb3A7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHByb3BlcnR5R2V0VGV4dFByb3AgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0VGV4dFNlbGVjdG9yUHJvcDtcclxuICAgIFByb3BlcnR5RmFjdG9yeS5nZXRUZXh0U2VsZWN0b3JQcm9wID0gZnVuY3Rpb24oZWxlbSwgZGF0YSxhcnIpe1xyXG4gICAgICAgIGlmKGRhdGEudCA9PT0gMSl7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgVGV4dEV4cHJlc3Npb25TZWxlY3RvclByb3AoZWxlbSwgZGF0YSxhcnIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eUdldFRleHRQcm9wKGVsZW0sZGF0YSxhcnIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSgpKTtcbihmdW5jdGlvbiBhZGRUZXh0UHJvcGVydHlEZWNvcmF0b3IoKSB7XHJcblxyXG4gICAgZnVuY3Rpb24gc2VhcmNoRXhwcmVzc2lvbnMoKXtcclxuICAgICAgICBpZih0aGlzLmRhdGEuZC54KXtcclxuICAgICAgICAgICAgdGhpcy5jb21wID0gdGhpcy5lbGVtLmNvbXA7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZ2V0VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0UHJlVmFsdWUgPSB0aGlzLmdldFZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY2FsY3VsYXRlRXhwcmVzc2lvbiA9IEV4cHJlc3Npb25NYW5hZ2VyLmluaXRpYXRlRXhwcmVzc2lvbi5iaW5kKHRoaXMpKHRoaXMuZWxlbSx0aGlzLmRhdGEuZCx0aGlzKTtcclxuICAgICAgICAgICAgdGhpcy5nZXRWYWx1ZSA9IHRoaXMuZ2V0RXhwcmVzc2lvblZhbHVlO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIFRleHRQcm9wZXJ0eS5wcm90b3R5cGUuc2VhcmNoUHJvcGVydHkgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMua2YgPSB0aGlzLnNlYXJjaEV4cHJlc3Npb25zKCkgfHwgdGhpcy5kYXRhLmQuay5sZW5ndGggPiAxO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmtmO1xyXG4gICAgfVxyXG5cclxuICAgIFRleHRQcm9wZXJ0eS5wcm90b3R5cGUuZ2V0RXhwcmVzc2lvblZhbHVlID0gZnVuY3Rpb24obnVtKXtcclxuICAgICAgICB0aGlzLmNhbGN1bGF0ZUV4cHJlc3Npb24oKTtcclxuICAgICAgICBpZih0aGlzLm1kZikge1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnREYXRhLnQgPSB0aGlzLnYudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5jb21wbGV0ZVRleHREYXRhKHRoaXMuY3VycmVudERhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBUZXh0UHJvcGVydHkucHJvdG90eXBlLnNlYXJjaEV4cHJlc3Npb25zID0gc2VhcmNoRXhwcmVzc2lvbnM7XHJcbiAgICBcclxufSgpKTtcbnZhciBFeHByZXNzaW9uTWFuYWdlciA9IChmdW5jdGlvbigpe1xyXG4gICAgdmFyIG9iID0ge307XHJcbiAgICB2YXIgTWF0aCA9IEJNTWF0aDtcclxuICAgIHZhciB3aW5kb3cgPSBudWxsO1xyXG4gICAgdmFyIGRvY3VtZW50ID0gbnVsbDtcclxuXHJcbiAgICBmdW5jdGlvbiBkdXBsaWNhdGVQcm9wZXJ0eVZhbHVlKHZhbHVlLCBtdWx0KXtcclxuICAgICAgICBtdWx0ID0gbXVsdCB8fCAxO1xyXG5cclxuICAgICAgICBpZih0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICB8fCB2YWx1ZSBpbnN0YW5jZW9mIE51bWJlcil7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSptdWx0O1xyXG4gICAgICAgIH1lbHNlIGlmKHZhbHVlLmkpe1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB2YXIgYXJyID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOnZhbHVlLmxlbmd0aH0pO1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gdmFsdWUubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgYXJyW2ldPXZhbHVlW2ldKm11bHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGFycjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2hhcGVzRXF1YWwoc2hhcGUxLCBzaGFwZTIpIHtcclxuICAgICAgICBpZihzaGFwZTEuX2xlbmd0aCAhPT0gc2hhcGUyLl9sZW5ndGggfHwgc2hhcGUxLmMgIT09IHNoYXBlMi5jKXtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaSwgbGVuID0gc2hhcGUxLl9sZW5ndGg7XHJcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgaWYoc2hhcGUxLnZbaV1bMF0gIT09IHNoYXBlMi52W2ldWzBdIHx8IHNoYXBlMS52W2ldWzFdICE9PSBzaGFwZTIudltpXVsxXVxyXG4gICAgICAgICAgICAgICAgfHwgc2hhcGUxLm9baV1bMF0gIT09IHNoYXBlMi5vW2ldWzBdIHx8IHNoYXBlMS5vW2ldWzFdICE9PSBzaGFwZTIub1tpXVsxXVxyXG4gICAgICAgICAgICAgICAgfHwgc2hhcGUxLmlbaV1bMF0gIT09IHNoYXBlMi5pW2ldWzBdIHx8IHNoYXBlMS5pW2ldWzFdICE9PSBzaGFwZTIuaVtpXVsxXSl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gJGJtX25lZyhhKXtcclxuICAgICAgICB2YXIgdE9mQSA9IHR5cGVvZiBhO1xyXG4gICAgICAgIGlmKHRPZkEgPT09ICdudW1iZXInIHx8IHRPZkEgPT09ICdib29sZWFuJyAgfHwgYSBpbnN0YW5jZW9mIE51bWJlciApe1xyXG4gICAgICAgICAgICByZXR1cm4gLWE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGEuY29uc3RydWN0b3IgPT09IEFycmF5KXtcclxuICAgICAgICAgICAgdmFyIGksIGxlbkEgPSBhLmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIHJldEFyciA9IFtdO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuQTtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHJldEFycltpXSA9IC1hW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXRBcnI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHN1bShhLGIpIHtcclxuICAgICAgICB2YXIgdE9mQSA9IHR5cGVvZiBhO1xyXG4gICAgICAgIHZhciB0T2ZCID0gdHlwZW9mIGI7XHJcbiAgICAgICAgaWYodE9mQSA9PT0gJ3N0cmluZycgfHwgdE9mQiA9PT0gJ3N0cmluZycpe1xyXG4gICAgICAgICAgICByZXR1cm4gYSArIGI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCh0T2ZBID09PSAnbnVtYmVyJyB8fCB0T2ZBID09PSAnYm9vbGVhbicgfHwgdE9mQSA9PT0gJ3N0cmluZycgfHwgYSBpbnN0YW5jZW9mIE51bWJlcikgJiYgKHRPZkIgPT09ICdudW1iZXInIHx8IHRPZkIgPT09ICdib29sZWFuJyB8fCB0T2ZCID09PSAnc3RyaW5nJyAgfHwgYiBpbnN0YW5jZW9mIE51bWJlcikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGEgKyBiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhLmNvbnN0cnVjdG9yID09PSBBcnJheSAmJiAodE9mQiA9PT0gJ251bWJlcicgfHwgdE9mQiA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkIgPT09ICdzdHJpbmcnIHx8IGIgaW5zdGFuY2VvZiBOdW1iZXIgKSl7XHJcbiAgICAgICAgICAgIGFbMF0gPSBhWzBdICsgYjtcclxuICAgICAgICAgICAgcmV0dXJuIGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCh0T2ZBID09PSAnbnVtYmVyJyB8fCB0T2ZBID09PSAnYm9vbGVhbicgfHwgdE9mQSA9PT0gJ3N0cmluZycgfHwgYSBpbnN0YW5jZW9mIE51bWJlciApICYmIGIuY29uc3RydWN0b3IgPT09IEFycmF5KXtcclxuICAgICAgICAgICAgYlswXSA9IGEgKyBiWzBdO1xyXG4gICAgICAgICAgICByZXR1cm4gYjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoYS5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgJiYgYi5jb25zdHJ1Y3RvciA9PT0gQXJyYXkpe1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIGkgPSAwLCBsZW5BID0gYS5sZW5ndGgsIGxlbkIgPSBiLmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIHJldEFyciA9IFtdO1xyXG4gICAgICAgICAgICB3aGlsZShpPGxlbkEgfHwgaSA8IGxlbkIpe1xyXG4gICAgICAgICAgICAgICAgaWYoKHR5cGVvZiBhW2ldID09PSAnbnVtYmVyJyB8fCBhW2ldIGluc3RhbmNlb2YgTnVtYmVyKSAmJiAodHlwZW9mIGJbaV0gPT09ICdudW1iZXInIHx8IGJbaV0gaW5zdGFuY2VvZiBOdW1iZXIpKXtcclxuICAgICAgICAgICAgICAgICAgICByZXRBcnJbaV0gPSBhW2ldICsgYltpXTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHJldEFycltpXSA9IGJbaV0gPT0gdW5kZWZpbmVkID8gYVtpXSA6IGFbaV0gfHwgYltpXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gcmV0QXJyO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIHZhciBhZGQgPSBzdW07XHJcblxyXG4gICAgZnVuY3Rpb24gc3ViKGEsYikge1xyXG4gICAgICAgIHZhciB0T2ZBID0gdHlwZW9mIGE7XHJcbiAgICAgICAgdmFyIHRPZkIgPSB0eXBlb2YgYjtcclxuICAgICAgICBpZigodE9mQSA9PT0gJ251bWJlcicgfHwgdE9mQSA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkEgPT09ICdzdHJpbmcnIHx8IGEgaW5zdGFuY2VvZiBOdW1iZXIgKSAmJiAodE9mQiA9PT0gJ251bWJlcicgfHwgdE9mQiA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkIgPT09ICdzdHJpbmcnIHx8IGIgaW5zdGFuY2VvZiBOdW1iZXIgKSkge1xyXG4gICAgICAgICAgICBpZih0T2ZBID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICAgICAgYSA9IHBhcnNlSW50KGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRPZkIgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICBiID0gcGFyc2VJbnQoYik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGEgLSBiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiggYS5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgJiYgKHRPZkIgPT09ICdudW1iZXInIHx8IHRPZkIgPT09ICdib29sZWFuJyB8fCB0T2ZCID09PSAnc3RyaW5nJyB8fCBiIGluc3RhbmNlb2YgTnVtYmVyICkpe1xyXG4gICAgICAgICAgICBhWzBdID0gYVswXSAtIGI7XHJcbiAgICAgICAgICAgIHJldHVybiBhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZigodE9mQSA9PT0gJ251bWJlcicgfHwgdE9mQSA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkEgPT09ICdzdHJpbmcnIHx8IGEgaW5zdGFuY2VvZiBOdW1iZXIgKSAmJiAgYi5jb25zdHJ1Y3RvciA9PT0gQXJyYXkpe1xyXG4gICAgICAgICAgICBiWzBdID0gYSAtIGJbMF07XHJcbiAgICAgICAgICAgIHJldHVybiBiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihhLmNvbnN0cnVjdG9yID09PSBBcnJheSAmJiBiLmNvbnN0cnVjdG9yID09PSBBcnJheSl7XHJcbiAgICAgICAgICAgIHZhciBpID0gMCwgbGVuQSA9IGEubGVuZ3RoLCBsZW5CID0gYi5sZW5ndGg7XHJcbiAgICAgICAgICAgIHZhciByZXRBcnIgPSBbXTtcclxuICAgICAgICAgICAgd2hpbGUoaTxsZW5BIHx8IGkgPCBsZW5CKXtcclxuICAgICAgICAgICAgICAgIGlmKCh0eXBlb2YgYVtpXSA9PT0gJ251bWJlcicgfHwgYVtpXSBpbnN0YW5jZW9mIE51bWJlcikgJiYgdHlwZW9mICh0eXBlb2YgYltpXSA9PT0gJ251bWJlcicgfHwgYltpXSBpbnN0YW5jZW9mIE51bWJlcikpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldEFycltpXSA9IGFbaV0gLSBiW2ldO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0QXJyW2ldID0gYltpXSA9PSB1bmRlZmluZWQgPyBhW2ldIDogYVtpXSB8fCBiW2ldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaSArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXRBcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG11bChhLGIpIHtcclxuICAgICAgICB2YXIgdE9mQSA9IHR5cGVvZiBhO1xyXG4gICAgICAgIHZhciB0T2ZCID0gdHlwZW9mIGI7XHJcbiAgICAgICAgdmFyIGFycjtcclxuICAgICAgICBpZigodE9mQSA9PT0gJ251bWJlcicgfHwgdE9mQSA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkEgPT09ICdzdHJpbmcnIHx8IGEgaW5zdGFuY2VvZiBOdW1iZXIgKSAmJiAodE9mQiA9PT0gJ251bWJlcicgfHwgdE9mQiA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkIgPT09ICdzdHJpbmcnIHx8IGIgaW5zdGFuY2VvZiBOdW1iZXIgKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYSAqIGI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgaSwgbGVuO1xyXG4gICAgICAgIGlmKGEuY29uc3RydWN0b3IgPT09IEFycmF5ICYmICh0T2ZCID09PSAnbnVtYmVyJyB8fCB0T2ZCID09PSAnYm9vbGVhbicgfHwgdE9mQiA9PT0gJ3N0cmluZycgfHwgYiBpbnN0YW5jZW9mIE51bWJlciApKXtcclxuICAgICAgICAgICAgbGVuID0gYS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGFyciA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpsZW59KTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IGFbaV0gKiBiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCh0T2ZBID09PSAnbnVtYmVyJyB8fCB0T2ZBID09PSAnYm9vbGVhbicgfHwgdE9mQSA9PT0gJ3N0cmluZycgfHwgYSBpbnN0YW5jZW9mIE51bWJlciApICYmIGIuY29uc3RydWN0b3IgPT09IEFycmF5KXtcclxuICAgICAgICAgICAgbGVuID0gYi5sZW5ndGg7XHJcbiAgICAgICAgICAgIGFyciA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpsZW59KTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IGEgKiBiW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGRpdihhLGIpIHtcclxuICAgICAgICB2YXIgdE9mQSA9IHR5cGVvZiBhO1xyXG4gICAgICAgIHZhciB0T2ZCID0gdHlwZW9mIGI7XHJcbiAgICAgICAgdmFyIGFycjtcclxuICAgICAgICBpZigodE9mQSA9PT0gJ251bWJlcicgfHwgdE9mQSA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkEgPT09ICdzdHJpbmcnIHx8IGEgaW5zdGFuY2VvZiBOdW1iZXIgKSAmJiAodE9mQiA9PT0gJ251bWJlcicgfHwgdE9mQiA9PT0gJ2Jvb2xlYW4nIHx8IHRPZkIgPT09ICdzdHJpbmcnIHx8IGIgaW5zdGFuY2VvZiBOdW1iZXIgKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYSAvIGI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBpLCBsZW47XHJcbiAgICAgICAgaWYoYS5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgJiYgKHRPZkIgPT09ICdudW1iZXInIHx8IHRPZkIgPT09ICdib29sZWFuJyB8fCB0T2ZCID09PSAnc3RyaW5nJyB8fCBiIGluc3RhbmNlb2YgTnVtYmVyICApKXtcclxuICAgICAgICAgICAgbGVuID0gYS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGFyciA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpsZW59KTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IGFbaV0gLyBiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCh0T2ZBID09PSAnbnVtYmVyJyB8fCB0T2ZBID09PSAnYm9vbGVhbicgfHwgdE9mQSA9PT0gJ3N0cmluZycgfHwgYSBpbnN0YW5jZW9mIE51bWJlciApICYmIGIuY29uc3RydWN0b3IgPT09IEFycmF5KXtcclxuICAgICAgICAgICAgbGVuID0gYi5sZW5ndGg7XHJcbiAgICAgICAgICAgIGFyciA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpsZW59KTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IGEgLyBiW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gbW9kKGEsYikge1xyXG4gICAgICAgIGlmKHR5cGVvZiBhID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBhID0gcGFyc2VJbnQoYSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHR5cGVvZiBiID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBiID0gcGFyc2VJbnQoYik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhICUgYjtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjbGFtcChudW0sIG1pbiwgbWF4KSB7XHJcbiAgICAgICAgaWYobWluID4gbWF4KXtcclxuICAgICAgICAgICAgdmFyIG1tID0gbWF4O1xyXG4gICAgICAgICAgICBtYXggPSBtaW47XHJcbiAgICAgICAgICAgIG1pbiA9IG1tO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobnVtLCBtaW4pLCBtYXgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJhZGlhbnNUb0RlZ3JlZXModmFsKSB7XHJcbiAgICAgICAgcmV0dXJuIHZhbC9kZWdUb1JhZHM7XHJcbiAgICB9XHJcbiAgICB2YXIgcmFkaWFuc190b19kZWdyZWVzID0gcmFkaWFuc1RvRGVncmVlcztcclxuXHJcbiAgICBmdW5jdGlvbiBkZWdyZWVzVG9SYWRpYW5zKHZhbCkge1xyXG4gICAgICAgIHJldHVybiB2YWwqZGVnVG9SYWRzO1xyXG4gICAgfVxyXG4gICAgdmFyIGRlZ3JlZXNfdG9fcmFkaWFucyA9IHJhZGlhbnNUb0RlZ3JlZXM7XHJcblxyXG4gICAgdmFyIGhlbHBlckxlbmd0aEFycmF5ID0gWzAsMCwwLDAsMCwwXTtcclxuXHJcbiAgICBmdW5jdGlvbiBsZW5ndGgoYXJyMSxhcnIyKXtcclxuICAgICAgICBpZih0eXBlb2YgYXJyMSA9PT0gJ251bWJlcicgfHwgYXJyMSBpbnN0YW5jZW9mIE51bWJlcil7XHJcbiAgICAgICAgICAgIGFycjIgPSBhcnIyIHx8IDA7XHJcbiAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyhhcnIxIC0gYXJyMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKCFhcnIyKXtcclxuICAgICAgICAgICAgYXJyMiA9IGhlbHBlckxlbmd0aEFycmF5O1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaSxsZW4gPSBNYXRoLm1pbihhcnIxLmxlbmd0aCxhcnIyLmxlbmd0aCk7XHJcbiAgICAgICAgdmFyIGFkZGVkTGVuZ3RoID0gMDtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBhZGRlZExlbmd0aCArPSBNYXRoLnBvdyhhcnIyW2ldLWFycjFbaV0sMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBNYXRoLnNxcnQoYWRkZWRMZW5ndGgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIG5vcm1hbGl6ZSh2ZWMpe1xyXG4gICAgICAgIHJldHVybiBkaXYodmVjLCBsZW5ndGgodmVjKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmdiVG9Ic2wodmFsKXtcclxuICAgICAgICB2YXIgciA9IHZhbFswXTsgdmFyIGcgPSB2YWxbMV07IHZhciBiID0gdmFsWzJdO1xyXG4gICAgICAgIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKSwgbWluID0gTWF0aC5taW4ociwgZywgYik7XHJcbiAgICAgICAgdmFyIGgsIHMsIGwgPSAobWF4ICsgbWluKSAvIDI7XHJcblxyXG4gICAgICAgIGlmKG1heCA9PSBtaW4pe1xyXG4gICAgICAgICAgICBoID0gcyA9IDA7IC8vIGFjaHJvbWF0aWNcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdmFyIGQgPSBtYXggLSBtaW47XHJcbiAgICAgICAgICAgIHMgPSBsID4gMC41ID8gZCAvICgyIC0gbWF4IC0gbWluKSA6IGQgLyAobWF4ICsgbWluKTtcclxuICAgICAgICAgICAgc3dpdGNoKG1heCl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIHI6IGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIGc6IGggPSAoYiAtIHIpIC8gZCArIDI7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBiOiBoID0gKHIgLSBnKSAvIGQgKyA0OyBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBoIC89IDY7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gW2gsIHMsIGwsdmFsWzNdXTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGhzbFRvUmdiKHZhbCl7XHJcbiAgICAgICAgdmFyIGggPSB2YWxbMF07XHJcbiAgICAgICAgdmFyIHMgPSB2YWxbMV07XHJcbiAgICAgICAgdmFyIGwgPSB2YWxbMl07XHJcblxyXG4gICAgICAgIHZhciByLCBnLCBiO1xyXG5cclxuICAgICAgICBpZihzID09IDApe1xyXG4gICAgICAgICAgICByID0gZyA9IGIgPSBsOyAvLyBhY2hyb21hdGljXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGh1ZTJyZ2IocCwgcSwgdCl7XHJcbiAgICAgICAgICAgICAgICBpZih0IDwgMCkgdCArPSAxO1xyXG4gICAgICAgICAgICAgICAgaWYodCA+IDEpIHQgLT0gMTtcclxuICAgICAgICAgICAgICAgIGlmKHQgPCAxLzYpIHJldHVybiBwICsgKHEgLSBwKSAqIDYgKiB0O1xyXG4gICAgICAgICAgICAgICAgaWYodCA8IDEvMikgcmV0dXJuIHE7XHJcbiAgICAgICAgICAgICAgICBpZih0IDwgMi8zKSByZXR1cm4gcCArIChxIC0gcCkgKiAoMi8zIC0gdCkgKiA2O1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcclxuICAgICAgICAgICAgdmFyIHAgPSAyICogbCAtIHE7XHJcbiAgICAgICAgICAgIHIgPSBodWUycmdiKHAsIHEsIGggKyAxLzMpO1xyXG4gICAgICAgICAgICBnID0gaHVlMnJnYihwLCBxLCBoKTtcclxuICAgICAgICAgICAgYiA9IGh1ZTJyZ2IocCwgcSwgaCAtIDEvMyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gW3IsIGcgLCBiLCB2YWxbM11dO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxpbmVhcih0LCB0TWluLCB0TWF4LCB2YWx1ZTEsIHZhbHVlMil7XHJcbiAgICAgICAgaWYodmFsdWUxID09PSB1bmRlZmluZWQgfHwgdmFsdWUyID09PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICByZXR1cm4gbGluZWFyKHQsMCwxLHRNaW4sdE1heCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHQgPD0gdE1pbikge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUxO1xyXG4gICAgICAgIH1lbHNlIGlmKHQgPj0gdE1heCl7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBwZXJjID0gdE1heCA9PT0gdE1pbiA/IDAgOiAodC10TWluKS8odE1heC10TWluKTtcclxuICAgICAgICBpZighdmFsdWUxLmxlbmd0aCl7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTEgKyAodmFsdWUyLXZhbHVlMSkqcGVyYztcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHZhbHVlMS5sZW5ndGg7XHJcbiAgICAgICAgdmFyIGFyciA9IEFycmF5LmFwcGx5KCBudWxsLCB7IGxlbmd0aDogbGVuIH0gKTtcclxuICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICBhcnJbaV0gPSB2YWx1ZTFbaV0gKyAodmFsdWUyW2ldLXZhbHVlMVtpXSkqcGVyYztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFycjtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHJhbmRvbShtaW4sbWF4KXtcclxuICAgICAgICBpZihtYXggPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIGlmKG1pbiA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICAgIG1pbiA9IDA7XHJcbiAgICAgICAgICAgICAgICBtYXggPSAxO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbWF4ID0gbWluO1xyXG4gICAgICAgICAgICAgICAgbWluID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKG1heC5sZW5ndGgpe1xyXG4gICAgICAgICAgICB2YXIgaSwgbGVuID0gbWF4Lmxlbmd0aDtcclxuICAgICAgICAgICAgaWYoIW1pbil7XHJcbiAgICAgICAgICAgICAgICBtaW4gPSBBcnJheS5hcHBseShudWxsLHtsZW5ndGg6bGVufSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGFyciA9IEFycmF5LmFwcGx5KG51bGwse2xlbmd0aDpsZW59KTtcclxuICAgICAgICAgICAgdmFyIHJuZCA9IEJNTWF0aC5yYW5kb20oKTtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIGFycltpXSA9IG1pbltpXSArIHJuZCoobWF4W2ldLW1pbltpXSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihtaW4gPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIG1pbiA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBybmRtID0gQk1NYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgIHJldHVybiBtaW4gKyBybmRtKihtYXgtbWluKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjcmVhdGVQYXRoKHBvaW50cywgaW5UYW5nZW50cywgb3V0VGFuZ2VudHMsIGNsb3NlZCkge1xyXG4gICAgICAgIGluVGFuZ2VudHMgPSBpblRhbmdlbnRzICYmIGluVGFuZ2VudHMubGVuZ3RoID8gaW5UYW5nZW50cyA6IHBvaW50cztcclxuICAgICAgICBvdXRUYW5nZW50cyA9IG91dFRhbmdlbnRzICYmIG91dFRhbmdlbnRzLmxlbmd0aCA/IG91dFRhbmdlbnRzIDogcG9pbnRzO1xyXG4gICAgICAgIHZhciBwYXRoID0gc2hhcGVfcG9vbC5uZXdTaGFwZSgpO1xyXG4gICAgICAgIHZhciBsZW4gPSBwb2ludHMubGVuZ3RoO1xyXG4gICAgICAgIHBhdGguc2V0UGF0aERhdGEoY2xvc2VkLCBsZW4pO1xyXG4gICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgIHBhdGguc2V0VHJpcGxlQXQocG9pbnRzW2ldWzBdLHBvaW50c1tpXVsxXSxvdXRUYW5nZW50c1tpXVswXSArIHBvaW50c1tpXVswXSxvdXRUYW5nZW50c1tpXVsxXSArIHBvaW50c1tpXVsxXSxpblRhbmdlbnRzW2ldWzBdICsgcG9pbnRzW2ldWzBdLGluVGFuZ2VudHNbaV1bMV0gKyBwb2ludHNbaV1bMV0saSx0cnVlKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGF0aFxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRpYXRlRXhwcmVzc2lvbihlbGVtLGRhdGEscHJvcGVydHkpe1xyXG4gICAgICAgIHZhciB2YWwgPSBkYXRhLng7XHJcbiAgICAgICAgdmFyIG5lZWRzVmVsb2NpdHkgPSAvdmVsb2NpdHkoPyFbXFx3XFxkXSkvLnRlc3QodmFsKTtcclxuICAgICAgICB2YXIgX25lZWRzUmFuZG9tID0gdmFsLmluZGV4T2YoJ3JhbmRvbScpICE9PSAtMTtcclxuICAgICAgICB2YXIgZWxlbVR5cGUgPSBlbGVtLmRhdGEudHk7XHJcbiAgICAgICAgdmFyIHRyYW5zZm9ybSxjb250ZW50LGVmZmVjdDtcclxuICAgICAgICB2YXIgdGhpc0NvbXAgPSBlbGVtLmNvbXA7XHJcbiAgICAgICAgdmFyIHRoaXNQcm9wZXJ0eSA9IHByb3BlcnR5O1xyXG4gICAgICAgIGVsZW0uY29tcC5mcmFtZUR1cmF0aW9uID0gMS9lbGVtLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGU7XHJcbiAgICAgICAgdmFyIGluUG9pbnQgPSBlbGVtLmRhdGEuaXAvZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgIHZhciBvdXRQb2ludCA9IGVsZW0uZGF0YS5vcC9lbGVtLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGU7XHJcbiAgICAgICAgdmFyIHdpZHRoID0gZWxlbS5kYXRhLnN3ID8gZWxlbS5kYXRhLnN3IDogMDtcclxuICAgICAgICB2YXIgaGVpZ2h0ID0gZWxlbS5kYXRhLnNoID8gZWxlbS5kYXRhLnNoIDogMDtcclxuICAgICAgICB2YXIgbG9vcEluLCBsb29wX2luLCBsb29wT3V0LCBsb29wX291dDtcclxuICAgICAgICB2YXIgdG9Xb3JsZCxmcm9tV29ybGQsZnJvbUNvbXAsZnJvbUNvbXBUb1N1cmZhY2UsYW5jaG9yUG9pbnQsdGhpc0xheWVyLHRoaXNDb21wLG1hc2ssdmFsdWVBdFRpbWUsdmVsb2NpdHlBdFRpbWU7XHJcbiAgICAgICAgdmFyIGZuID0gbmV3IEZ1bmN0aW9uKCk7XHJcbiAgICAgICAgLy92YXIgZm5TdHIgPSAndmFyIGZuID0gZnVuY3Rpb24oKXsnK3ZhbCsnO3RoaXMudiA9ICRibV9ydDt9JztcclxuICAgICAgICAvL2V2YWwoZm5TdHIpO1xyXG5cclxuICAgICAgICB2YXIgZm4gPSBldmFsKCdbZnVuY3Rpb24oKXsnICsgdmFsKyc7aWYoJGJtX3J0Ll9fc2hhcGVPYmplY3Qpe3RoaXMudj1zaGFwZV9wb29sLmNsb25lKCRibV9ydC52KTt9ZWxzZXt0aGlzLnY9JGJtX3J0O319JyArICddJylbMF07XHJcbiAgICAgICAgdmFyIGJpbmRlZEZuID0gZm4uYmluZCh0aGlzKTtcclxuICAgICAgICB2YXIgbnVtS2V5cyA9IHByb3BlcnR5LmtmID8gZGF0YS5rLmxlbmd0aCA6IDA7XHJcblxyXG4gICAgICAgIHZhciB3aWdnbGUgPSBmdW5jdGlvbiB3aWdnbGUoZnJlcSxhbXApe1xyXG4gICAgICAgICAgICB2YXIgaSxqLCBsZW4gPSB0aGlzLnB2Lmxlbmd0aCA/IHRoaXMucHYubGVuZ3RoIDogMTtcclxuICAgICAgICAgICAgdmFyIGFkZGVkQW1wcyA9IEFycmF5LmFwcGx5KG51bGwse2xlbjpsZW59KTtcclxuICAgICAgICAgICAgZm9yKGo9MDtqPGxlbjtqKz0xKXtcclxuICAgICAgICAgICAgICAgIGFkZGVkQW1wc1tqXSA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnJlcSA9IDU7XHJcbiAgICAgICAgICAgIHZhciBpdGVyYXRpb25zID0gTWF0aC5mbG9vcih0aW1lKmZyZXEpO1xyXG4gICAgICAgICAgICBpID0gMDtcclxuICAgICAgICAgICAgaiA9IDA7XHJcbiAgICAgICAgICAgIHdoaWxlKGk8aXRlcmF0aW9ucyl7XHJcbiAgICAgICAgICAgICAgICAvL3ZhciBybmQgPSBCTU1hdGgucmFuZG9tKCk7XHJcbiAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8bGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGFkZGVkQW1wc1tqXSArPSAtYW1wICsgYW1wKjIqQk1NYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vYWRkZWRBbXBzW2pdICs9IC1hbXAgKyBhbXAqMipybmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy92YXIgcm5kMiA9IEJNTWF0aC5yYW5kb20oKTtcclxuICAgICAgICAgICAgdmFyIHBlcmlvZHMgPSB0aW1lKmZyZXE7XHJcbiAgICAgICAgICAgIHZhciBwZXJjID0gcGVyaW9kcyAtIE1hdGguZmxvb3IocGVyaW9kcyk7XHJcbiAgICAgICAgICAgIHZhciBhcnIgPSBBcnJheS5hcHBseSh7bGVuZ3RoOmxlbn0pO1xyXG4gICAgICAgICAgICBpZihsZW4+MSl7XHJcbiAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8bGVuO2orPTEpe1xyXG4gICAgICAgICAgICAgICAgICAgIGFycltqXSA9IHRoaXMucHZbal0gKyBhZGRlZEFtcHNbal0gKyAoLWFtcCArIGFtcCoyKkJNTWF0aC5yYW5kb20oKSkqcGVyYztcclxuICAgICAgICAgICAgICAgICAgICAvL2FycltqXSA9IHRoaXMucHZbal0gKyBhZGRlZEFtcHNbal0gKyAoLWFtcCArIGFtcCoyKnJuZCkqcGVyYztcclxuICAgICAgICAgICAgICAgICAgICAvL2FycltpXSA9IHRoaXMucHZbaV0gKyBhZGRlZEFtcCArIGFtcDEqcGVyYyArIGFtcDIqKDEtcGVyYyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHYgKyBhZGRlZEFtcHNbMF0gKyAoLWFtcCArIGFtcCoyKkJNTWF0aC5yYW5kb20oKSkqcGVyYztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0uYmluZCh0aGlzKTtcclxuXHJcbiAgICAgICAgaWYodGhpc1Byb3BlcnR5Lmxvb3BJbikge1xyXG4gICAgICAgICAgICBsb29wSW4gPSB0aGlzUHJvcGVydHkubG9vcEluLmJpbmQodGhpc1Byb3BlcnR5KTtcclxuICAgICAgICAgICAgbG9vcF9pbiA9IGxvb3BJbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHRoaXNQcm9wZXJ0eS5sb29wT3V0KSB7XHJcbiAgICAgICAgICAgIGxvb3BPdXQgPSB0aGlzUHJvcGVydHkubG9vcE91dC5iaW5kKHRoaXNQcm9wZXJ0eSk7XHJcbiAgICAgICAgICAgIGxvb3Bfb3V0ID0gbG9vcE91dDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBsb29wSW5EdXJhdGlvbiA9IGZ1bmN0aW9uIGxvb3BJbkR1cmF0aW9uKHR5cGUsZHVyYXRpb24pe1xyXG4gICAgICAgICAgICByZXR1cm4gbG9vcEluKHR5cGUsZHVyYXRpb24sdHJ1ZSk7XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpO1xyXG5cclxuICAgICAgICB2YXIgbG9vcE91dER1cmF0aW9uID0gZnVuY3Rpb24gbG9vcE91dER1cmF0aW9uKHR5cGUsZHVyYXRpb24pe1xyXG4gICAgICAgICAgICByZXR1cm4gbG9vcE91dCh0eXBlLGR1cmF0aW9uLHRydWUpO1xyXG4gICAgICAgIH0uYmluZCh0aGlzKTtcclxuXHJcbiAgICAgICAgaWYodGhpcy5nZXRWYWx1ZUF0VGltZSkge1xyXG4gICAgICAgICAgICB2YWx1ZUF0VGltZSA9IHRoaXMuZ2V0VmFsdWVBdFRpbWUuYmluZCh0aGlzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKHRoaXMuZ2V0VmVsb2NpdHlBdFRpbWUpIHtcclxuICAgICAgICAgICAgdmVsb2NpdHlBdFRpbWUgPSB0aGlzLmdldFZlbG9jaXR5QXRUaW1lLmJpbmQodGhpcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgY29tcCA9IGVsZW0uY29tcC5nbG9iYWxEYXRhLnByb2plY3RJbnRlcmZhY2UuYmluZChlbGVtLmNvbXAuZ2xvYmFsRGF0YS5wcm9qZWN0SW50ZXJmYWNlKTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gbG9va0F0KGVsZW0xLGVsZW0yKXtcclxuICAgICAgICAgICAgdmFyIGZWZWMgPSBbZWxlbTJbMF0tZWxlbTFbMF0sZWxlbTJbMV0tZWxlbTFbMV0sZWxlbTJbMl0tZWxlbTFbMl1dO1xyXG4gICAgICAgICAgICB2YXIgcGl0Y2ggPSBNYXRoLmF0YW4yKGZWZWNbMF0sTWF0aC5zcXJ0KGZWZWNbMV0qZlZlY1sxXStmVmVjWzJdKmZWZWNbMl0pKS9kZWdUb1JhZHM7XHJcbiAgICAgICAgICAgIHZhciB5YXcgPSAtTWF0aC5hdGFuMihmVmVjWzFdLGZWZWNbMl0pL2RlZ1RvUmFkcztcclxuICAgICAgICAgICAgcmV0dXJuIFt5YXcscGl0Y2gsMF07XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZWFzZU91dCh0LCB2YWwxLCB2YWwyKXtcclxuICAgICAgICAgICAgcmV0dXJuIC0odmFsMi12YWwxKSAqIHQqKHQtMikgKyB2YWwxO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIG5lYXJlc3RLZXkodGltZSl7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4gPSBkYXRhLmsubGVuZ3RoLGluZGV4LGtleVRpbWU7XHJcbiAgICAgICAgICAgIGlmKCFkYXRhLmsubGVuZ3RoIHx8IHR5cGVvZihkYXRhLmtbMF0pID09PSAnbnVtYmVyJyl7XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICBrZXlUaW1lID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGluZGV4ID0gLTE7XHJcbiAgICAgICAgICAgICAgICB0aW1lICo9IGVsZW0uY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZTtcclxuICAgICAgICAgICAgICAgIGlmICh0aW1lIDwgZGF0YS5rWzBdLnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleCA9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAga2V5VGltZSA9IGRhdGEua1swXS50O1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IoaT0wO2k8bGVuLTE7aSs9MSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRpbWUgPT09IGRhdGEua1tpXS50KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlUaW1lID0gZGF0YS5rW2ldLnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYodGltZT5kYXRhLmtbaV0udCAmJiB0aW1lPGRhdGEua1tpKzFdLnQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGltZS1kYXRhLmtbaV0udCA+IGRhdGEua1tpKzFdLnQgLSB0aW1lKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVRpbWUgPSBkYXRhLmtbaSsxXS50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVRpbWUgPSBkYXRhLmtbaV0udDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGluZGV4ID09PSAtMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleVRpbWUgPSBkYXRhLmtbaV0udDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgb2IgPSB7fTtcclxuICAgICAgICAgICAgb2IuaW5kZXggPSBpbmRleDtcclxuICAgICAgICAgICAgb2IudGltZSA9IGtleVRpbWUvZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgICAgICByZXR1cm4gb2I7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24ga2V5KGluZCl7XHJcbiAgICAgICAgICAgIHZhciBvYiwgaSwgbGVuO1xyXG4gICAgICAgICAgICBpZighZGF0YS5rLmxlbmd0aCB8fCB0eXBlb2YoZGF0YS5rWzBdKSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgcHJvcGVydHkgaGFzIG5vIGtleWZyYW1lIGF0IGluZGV4ICcgKyBpbmQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGluZCAtPSAxO1xyXG4gICAgICAgICAgICBvYiA9IHtcclxuICAgICAgICAgICAgICAgIHRpbWU6IGRhdGEua1tpbmRdLnQvZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHZhciBhcnI7XHJcbiAgICAgICAgICAgIGlmKGluZCA9PT0gZGF0YS5rLmxlbmd0aCAtIDEgJiYgIWRhdGEua1tpbmRdLmgpe1xyXG4gICAgICAgICAgICAgICAgYXJyID0gZGF0YS5rW2luZC0xXS5lO1xyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIGFyciA9IGRhdGEua1tpbmRdLnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGVuID0gYXJyLmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIG9iW2ldID0gYXJyW2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBvYjtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBmcmFtZXNUb1RpbWUoZnJhbWVzLGZwcyl7XHJcbiAgICAgICAgICAgIGlmKCFmcHMpe1xyXG4gICAgICAgICAgICAgICAgZnBzID0gZWxlbS5jb21wLmdsb2JhbERhdGEuZnJhbWVSYXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmcmFtZXMvZnBzO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHRpbWVUb0ZyYW1lcyh0LGZwcyl7XHJcbiAgICAgICAgICAgIGlmKCF0ICYmIHQgIT09IDApe1xyXG4gICAgICAgICAgICAgICAgdCA9IHRpbWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoIWZwcyl7XHJcbiAgICAgICAgICAgICAgICBmcHMgPSBlbGVtLmNvbXAuZ2xvYmFsRGF0YS5mcmFtZVJhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHQqZnBzO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNlZWRSYW5kb20oc2VlZCl7XHJcbiAgICAgICAgICAgIEJNTWF0aC5zZWVkcmFuZG9tKHJhbmRTZWVkICsgc2VlZCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gc291cmNlUmVjdEF0VGltZSgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGVsZW0uc291cmNlUmVjdEF0VGltZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHRpbWUsdmVsb2NpdHksIHZhbHVlLHRleHRJbmRleCx0ZXh0VG90YWwsc2VsZWN0b3JWYWx1ZTtcclxuICAgICAgICB2YXIgaW5kZXggPSBlbGVtLmRhdGEuaW5kO1xyXG4gICAgICAgIHZhciBoYXNQYXJlbnQgPSAhIShlbGVtLmhpZXJhcmNoeSAmJiBlbGVtLmhpZXJhcmNoeS5sZW5ndGgpO1xyXG4gICAgICAgIHZhciBwYXJlbnQ7XHJcbiAgICAgICAgdmFyIHJhbmRTZWVkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEwMDAwMDApO1xyXG4gICAgICAgIGZ1bmN0aW9uIGV4ZWN1dGVFeHByZXNzaW9uKCl7XHJcbiAgICAgICAgICAgIGlmKF9uZWVkc1JhbmRvbSl7XHJcbiAgICAgICAgICAgICAgICBzZWVkUmFuZG9tKHJhbmRTZWVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLmZyYW1lRXhwcmVzc2lvbklkID09PSBlbGVtLmdsb2JhbERhdGEuZnJhbWVJZCAmJiB0aGlzLnR5cGUgIT09ICd0ZXh0U2VsZWN0b3InKXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLmxvY2spe1xyXG4gICAgICAgICAgICAgICAgdGhpcy52ID0gZHVwbGljYXRlUHJvcGVydHlWYWx1ZSh0aGlzLnB2LHRoaXMubXVsdCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZih0aGlzLnR5cGUgPT09ICd0ZXh0U2VsZWN0b3InKXtcclxuICAgICAgICAgICAgICAgIHRleHRJbmRleCA9IHRoaXMudGV4dEluZGV4O1xyXG4gICAgICAgICAgICAgICAgdGV4dFRvdGFsID0gdGhpcy50ZXh0VG90YWw7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvclZhbHVlID0gdGhpcy5zZWxlY3RvclZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKCF0aGlzTGF5ZXIpe1xyXG4gICAgICAgICAgICAgICAgdGhpc0xheWVyID0gZWxlbS5sYXllckludGVyZmFjZTtcclxuICAgICAgICAgICAgICAgIHRoaXNDb21wID0gZWxlbS5jb21wLmNvbXBJbnRlcmZhY2U7XHJcbiAgICAgICAgICAgICAgICB0b1dvcmxkID0gdGhpc0xheWVyLnRvV29ybGQuYmluZCh0aGlzTGF5ZXIpO1xyXG4gICAgICAgICAgICAgICAgZnJvbVdvcmxkID0gdGhpc0xheWVyLmZyb21Xb3JsZC5iaW5kKHRoaXNMYXllcik7XHJcbiAgICAgICAgICAgICAgICBmcm9tQ29tcCA9IHRoaXNMYXllci5mcm9tQ29tcC5iaW5kKHRoaXNMYXllcik7XHJcbiAgICAgICAgICAgICAgICBtYXNrID0gdGhpc0xheWVyLm1hc2sgPyB0aGlzTGF5ZXIubWFzay5iaW5kKHRoaXNMYXllcik6bnVsbDtcclxuICAgICAgICAgICAgICAgIGZyb21Db21wVG9TdXJmYWNlID0gZnJvbUNvbXA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYoIXRyYW5zZm9ybSl7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0gPSBlbGVtLmxheWVySW50ZXJmYWNlKFwiQURCRSBUcmFuc2Zvcm0gR3JvdXBcIik7XHJcbiAgICAgICAgICAgICAgICBhbmNob3JQb2ludCA9IHRyYW5zZm9ybS5hbmNob3JQb2ludDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYoZWxlbVR5cGUgPT09IDQgJiYgIWNvbnRlbnQpe1xyXG4gICAgICAgICAgICAgICAgY29udGVudCA9IHRoaXNMYXllcihcIkFEQkUgUm9vdCBWZWN0b3JzIEdyb3VwXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKCFlZmZlY3Qpe1xyXG4gICAgICAgICAgICAgICAgZWZmZWN0ID0gdGhpc0xheWVyKDQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGhhc1BhcmVudCA9ICEhKGVsZW0uaGllcmFyY2h5ICYmIGVsZW0uaGllcmFyY2h5Lmxlbmd0aCk7XHJcbiAgICAgICAgICAgIGlmKGhhc1BhcmVudCAmJiAhcGFyZW50KXtcclxuICAgICAgICAgICAgICAgIHBhcmVudCA9IGVsZW0uaGllcmFyY2h5WzBdLmxheWVySW50ZXJmYWNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubG9jayA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuZ2V0UHJlVmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRQcmVWYWx1ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhbHVlID0gdGhpcy5wdjtcclxuICAgICAgICAgICAgdGltZSA9IHRoaXMuY29tcC5yZW5kZXJlZEZyYW1lL3RoaXMuY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZTtcclxuICAgICAgICAgICAgaWYobmVlZHNWZWxvY2l0eSl7XHJcbiAgICAgICAgICAgICAgICB2ZWxvY2l0eSA9IHZlbG9jaXR5QXRUaW1lKHRpbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJpbmRlZEZuKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZnJhbWVFeHByZXNzaW9uSWQgPSBlbGVtLmdsb2JhbERhdGEuZnJhbWVJZDtcclxuICAgICAgICAgICAgdmFyIGksbGVuO1xyXG4gICAgICAgICAgICBpZih0aGlzLm11bHQpe1xyXG4gICAgICAgICAgICAgICAgaWYodHlwZW9mIHRoaXMudiA9PT0gJ251bWJlcicgfHwgdGhpcy52IGluc3RhbmNlb2YgTnVtYmVyIHx8IHRoaXMudiBpbnN0YW5jZW9mIFN0cmluZyB8fCB0eXBlb2YgdGhpcy52ID09PSAnc3RyaW5nJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52ICo9IHRoaXMubXVsdDtcclxuICAgICAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMudi5sZW5ndGggPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudiA9IHRoaXMudlswXSAqIHRoaXMubXVsdDtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIGxlbiA9IHRoaXMudi5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYodmFsdWUgPT09IHRoaXMudil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudiA9IGxlbiA9PT0gMiA/IFt2YWx1ZVswXSx2YWx1ZVsxXV0gOiBbdmFsdWVbMF0sdmFsdWVbMV0sdmFsdWVbMl1dO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudltpXSAqPSB0aGlzLm11bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHRoaXMudi5sZW5ndGggPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy52ID0gdGhpcy52WzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHR5cGVvZiB0aGlzLnYgPT09ICdudW1iZXInIHx8IHRoaXMudiBpbnN0YW5jZW9mIE51bWJlciB8fCB0aGlzLnYgaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIHRoaXMudiA9PT0gJ3N0cmluZycpe1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5sYXN0VmFsdWUgIT09IHRoaXMudil7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0VmFsdWUgPSB0aGlzLnY7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZGYgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZSBpZiggdGhpcy52Ll9sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgaWYoIXNoYXBlc0VxdWFsKHRoaXMudix0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uLnNoYXBlc1swXSkpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uLnJlbGVhc2VTaGFwZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2FsU2hhcGVDb2xsZWN0aW9uLmFkZFNoYXBlKHNoYXBlX3Bvb2wuY2xvbmUodGhpcy52KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgbGVuID0gdGhpcy52Lmxlbmd0aDtcclxuICAgICAgICAgICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSArPSAxKXtcclxuICAgICAgICAgICAgICAgICAgICBpZih0aGlzLnZbaV0gIT09IHRoaXMubGFzdFZhbHVlW2ldKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0VmFsdWVbaV0gPSB0aGlzLnZbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWRmID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5sb2NrID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBleGVjdXRlRXhwcmVzc2lvbjtcclxuICAgIH07XHJcblxyXG4gICAgb2IuaW5pdGlhdGVFeHByZXNzaW9uID0gaW5pdGlhdGVFeHByZXNzaW9uO1xyXG4gICAgcmV0dXJuIG9iO1xyXG59KCkpO1xudmFyIFNoYXBlRXhwcmVzc2lvbkludGVyZmFjZSA9IChmdW5jdGlvbigpe1xyXG4gICAgdmFyIG9iID0ge1xyXG4gICAgICAgIGNyZWF0ZVNoYXBlSW50ZXJmYWNlOmNyZWF0ZVNoYXBlSW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZUdyb3VwSW50ZXJmYWNlOmNyZWF0ZUdyb3VwSW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZVRyaW1JbnRlcmZhY2U6Y3JlYXRlVHJpbUludGVyZmFjZSxcclxuICAgICAgICBjcmVhdGVTdHJva2VJbnRlcmZhY2U6Y3JlYXRlU3Ryb2tlSW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZVRyYW5zZm9ybUludGVyZmFjZTpjcmVhdGVUcmFuc2Zvcm1JbnRlcmZhY2UsXHJcbiAgICAgICAgY3JlYXRlRWxsaXBzZUludGVyZmFjZTpjcmVhdGVFbGxpcHNlSW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZVN0YXJJbnRlcmZhY2U6Y3JlYXRlU3RhckludGVyZmFjZSxcclxuICAgICAgICBjcmVhdGVSZWN0SW50ZXJmYWNlOmNyZWF0ZVJlY3RJbnRlcmZhY2UsXHJcbiAgICAgICAgY3JlYXRlUm91bmRlZEludGVyZmFjZTpjcmVhdGVSb3VuZGVkSW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZVJlcGF0ZWFySW50ZXJmYWNlOmNyZWF0ZVJlcGF0ZWFySW50ZXJmYWNlLFxyXG4gICAgICAgIGNyZWF0ZVBhdGhJbnRlcmZhY2U6Y3JlYXRlUGF0aEludGVyZmFjZSxcclxuICAgICAgICBjcmVhdGVGaWxsSW50ZXJmYWNlOmNyZWF0ZUZpbGxJbnRlcmZhY2VcclxuICAgIH07XHJcbiAgICBmdW5jdGlvbiBjcmVhdGVTaGFwZUludGVyZmFjZShzaGFwZXMsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICByZXR1cm4gc2hhcGVJbnRlcmZhY2VGYWN0b3J5KHNoYXBlcyx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlR3JvdXBJbnRlcmZhY2Uoc2hhcGVzLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgcmV0dXJuIGdyb3VwSW50ZXJmYWNlRmFjdG9yeShzaGFwZXMsdmlldyxwcm9wZXJ0eUdyb3VwKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGNyZWF0ZUZpbGxJbnRlcmZhY2Uoc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICByZXR1cm4gZmlsbEludGVyZmFjZUZhY3Rvcnkoc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGNyZWF0ZVN0cm9rZUludGVyZmFjZShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgIHJldHVybiBzdHJva2VJbnRlcmZhY2VGYWN0b3J5KHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBjcmVhdGVUcmltSW50ZXJmYWNlKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgcmV0dXJuIHRyaW1JbnRlcmZhY2VGYWN0b3J5KHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBjcmVhdGVUcmFuc2Zvcm1JbnRlcmZhY2Uoc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtSW50ZXJmYWNlRmFjdG9yeShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlRWxsaXBzZUludGVyZmFjZShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgIHJldHVybiBlbGxpcHNlSW50ZXJmYWNlRmFjdG9yeShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlU3RhckludGVyZmFjZShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgIHJldHVybiBzdGFySW50ZXJmYWNlRmFjdG9yeShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlUmVjdEludGVyZmFjZShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgIHJldHVybiByZWN0SW50ZXJmYWNlRmFjdG9yeShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlUm91bmRlZEludGVyZmFjZShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgIHJldHVybiByb3VuZGVkSW50ZXJmYWNlRmFjdG9yeShzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gY3JlYXRlUmVwYXRlYXJJbnRlcmZhY2Uoc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICByZXR1cm4gcmVwZWF0ZXJJbnRlcmZhY2VGYWN0b3J5KHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBjcmVhdGVQYXRoSW50ZXJmYWNlKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgcmV0dXJuIHBhdGhJbnRlcmZhY2VGYWN0b3J5KHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaXRlcmF0ZUVsZW1lbnRzKHNoYXBlcyx2aWV3LCBwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IHNoYXBlcyA/IHNoYXBlcy5sZW5ndGggOiAwO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIGlmKHNoYXBlc1tpXS50eSA9PSAnZ3InKXtcclxuICAgICAgICAgICAgICAgIGFyci5wdXNoKFNoYXBlRXhwcmVzc2lvbkludGVyZmFjZS5jcmVhdGVHcm91cEludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHNoYXBlc1tpXS50eSA9PSAnZmwnKXtcclxuICAgICAgICAgICAgICAgIGFyci5wdXNoKFNoYXBlRXhwcmVzc2lvbkludGVyZmFjZS5jcmVhdGVGaWxsSW50ZXJmYWNlKHNoYXBlc1tpXSx2aWV3W2ldLHByb3BlcnR5R3JvdXApKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoc2hhcGVzW2ldLnR5ID09ICdzdCcpe1xyXG4gICAgICAgICAgICAgICAgYXJyLnB1c2goU2hhcGVFeHByZXNzaW9uSW50ZXJmYWNlLmNyZWF0ZVN0cm9rZUludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKHNoYXBlc1tpXS50eSA9PSAndG0nKXtcclxuICAgICAgICAgICAgICAgIGFyci5wdXNoKFNoYXBlRXhwcmVzc2lvbkludGVyZmFjZS5jcmVhdGVUcmltSW50ZXJmYWNlKHNoYXBlc1tpXSx2aWV3W2ldLHByb3BlcnR5R3JvdXApKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoc2hhcGVzW2ldLnR5ID09ICd0cicpe1xyXG4gICAgICAgICAgICAgICAgLy9hcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlVHJhbnNmb3JtSW50ZXJmYWNlKHNoYXBlc1tpXSx2aWV3W2ldLHByb3BlcnR5R3JvdXApKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYoc2hhcGVzW2ldLnR5ID09ICdlbCcpe1xyXG4gICAgICAgICAgICAgICAgYXJyLnB1c2goU2hhcGVFeHByZXNzaW9uSW50ZXJmYWNlLmNyZWF0ZUVsbGlwc2VJbnRlcmZhY2Uoc2hhcGVzW2ldLHZpZXdbaV0scHJvcGVydHlHcm91cCkpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZihzaGFwZXNbaV0udHkgPT0gJ3NyJyl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlU3RhckludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihzaGFwZXNbaV0udHkgPT0gJ3NoJyl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlUGF0aEludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihzaGFwZXNbaV0udHkgPT0gJ3JjJyl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlUmVjdEludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihzaGFwZXNbaV0udHkgPT0gJ3JkJyl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlUm91bmRlZEludGVyZmFjZShzaGFwZXNbaV0sdmlld1tpXSxwcm9wZXJ0eUdyb3VwKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZihzaGFwZXNbaV0udHkgPT0gJ3JwJyl7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlUmVwYXRlYXJJbnRlcmZhY2Uoc2hhcGVzW2ldLHZpZXdbaV0scHJvcGVydHlHcm91cCkpO1xyXG4gICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHNoYXBlc1tpXS50eSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFycjtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgc2hhcGVJbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlcyx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgICAgICB2YXIgaW50ZXJmYWNlcztcclxuICAgICAgICAgICAgZnVuY3Rpb24gX2ludGVyZmFjZUZ1bmN0aW9uKHZhbHVlKXtcclxuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VzW3ZhbHVlLTFdO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IGludGVyZmFjZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlKGk8bGVuKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoaW50ZXJmYWNlc1tpXS5fbmFtZSA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZXNbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaSs9MTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgX2ludGVyZmFjZUZ1bmN0aW9uLnByb3BlcnR5R3JvdXAgPSBwcm9wZXJ0eUdyb3VwO1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VzID0gaXRlcmF0ZUVsZW1lbnRzKHNoYXBlcywgdmlldywgX2ludGVyZmFjZUZ1bmN0aW9uKTtcclxuICAgICAgICAgICAgcmV0dXJuIF9pbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIHZhciBjb250ZW50c0ludGVyZmFjZUZhY3RvcnkgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgIHJldHVybiBmdW5jdGlvbihzaGFwZSx2aWV3LCBwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICAgICB2YXIgaW50ZXJmYWNlcztcclxuICAgICAgICAgICB2YXIgaW50ZXJmYWNlRnVuY3Rpb24gPSBmdW5jdGlvbiBfaW50ZXJmYWNlRnVuY3Rpb24odmFsdWUpe1xyXG4gICAgICAgICAgICAgICB2YXIgaSA9IDAsIGxlbiA9IGludGVyZmFjZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUoaTxsZW4pe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGludGVyZmFjZXNbaV0uX25hbWUgPT09IHZhbHVlIHx8IGludGVyZmFjZXNbaV0ubW4gPT09IHZhbHVlIHx8IGludGVyZmFjZXNbaV0ucHJvcGVydHlJbmRleCA9PT0gdmFsdWUgfHwgaW50ZXJmYWNlc1tpXS5peCA9PT0gdmFsdWUgfHwgaW50ZXJmYWNlc1tpXS5pbmQgPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaSs9MTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZXNbdmFsdWUtMV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfTtcclxuICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5wcm9wZXJ0eUdyb3VwID0gZnVuY3Rpb24odmFsKXtcclxuICAgICAgICAgICAgICAgaWYodmFsID09PSAxKXtcclxuICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXAodmFsLTEpO1xyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfTtcclxuICAgICAgICAgICBpbnRlcmZhY2VzID0gaXRlcmF0ZUVsZW1lbnRzKHNoYXBlLml0LCB2aWV3Lml0LCBpbnRlcmZhY2VGdW5jdGlvbi5wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5udW1Qcm9wZXJ0aWVzID0gaW50ZXJmYWNlcy5sZW5ndGg7XHJcbiAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLmNpeDtcclxuXHJcbiAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICB2YXIgZ3JvdXBJbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlLHZpZXcsIHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgICAgICB2YXIgaW50ZXJmYWNlRnVuY3Rpb24gPSBmdW5jdGlvbiBfaW50ZXJmYWNlRnVuY3Rpb24odmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoKHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdBREJFIFZlY3RvcnMgR3JvdXAnOlxyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0NvbnRlbnRzJzpcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5jb250ZW50O1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ0FEQkUgVmVjdG9yIFRyYW5zZm9ybSBHcm91cCc6XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi50cmFuc2Zvcm07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlHcm91cCA9IGZ1bmN0aW9uKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCh2YWwtMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gY29udGVudHNJbnRlcmZhY2VGYWN0b3J5KHNoYXBlLHZpZXcsaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHZhciB0cmFuc2Zvcm1JbnRlcmZhY2UgPSBTaGFwZUV4cHJlc3Npb25JbnRlcmZhY2UuY3JlYXRlVHJhbnNmb3JtSW50ZXJmYWNlKHNoYXBlLml0W3NoYXBlLml0Lmxlbmd0aCAtIDFdLHZpZXcuaXRbdmlldy5pdC5sZW5ndGggLSAxXSxpbnRlcmZhY2VGdW5jdGlvbi5wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24uY29udGVudCA9IGNvbnRlbnQ7XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLnRyYW5zZm9ybSA9IHRyYW5zZm9ybUludGVyZmFjZTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnX25hbWUnLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNoYXBlLm5tO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy9pbnRlcmZhY2VGdW5jdGlvbi5jb250ZW50ID0gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLm51bVByb3BlcnRpZXMgPSBzaGFwZS5ucDtcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5ubSA9IHNoYXBlLm5tO1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5tbiA9IHNoYXBlLm1uO1xyXG4gICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICB2YXIgZmlsbEludGVyZmFjZUZhY3RvcnkgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGludGVyZmFjZUZ1bmN0aW9uKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT09ICdDb2xvcicgfHwgdmFsID09PSAnY29sb3InKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uY29sb3I7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYodmFsID09PSAnT3BhY2l0eScgfHwgdmFsID09PSAnb3BhY2l0eScpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5vcGFjaXR5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ2NvbG9yJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodmlldy5jLCAxIC8gdmlldy5jLm11bHQsICdjb2xvcicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnb3BhY2l0eScsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcubywgMTAwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ19uYW1lJywgeyB2YWx1ZTogc2hhcGUubm0gfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ21uJywgeyB2YWx1ZTogc2hhcGUubW4gfSk7XHJcblxyXG4gICAgICAgICAgICB2aWV3LmMuc2V0R3JvdXBQcm9wZXJ0eShwcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgdmlldy5vLnNldEdyb3VwUHJvcGVydHkocHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIHZhciBzdHJva2VJbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9wcm9wZXJ0eUdyb3VwKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvYjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCh2YWwtMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9kYXNoUHJvcGVydHlHcm91cCh2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09PSAxKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGFzaE9iO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfcHJvcGVydHlHcm91cCh2YWwtMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFkZFByb3BlcnR5VG9EYXNoT2IoaSkge1xyXG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGRhc2hPYiwgc2hhcGUuZFtpXS5ubSwge1xyXG4gICAgICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh2aWV3LmQuZGF0YVByb3BzW2ldLnApXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IHNoYXBlLmQgPyBzaGFwZS5kLmxlbmd0aCA6IDA7XHJcbiAgICAgICAgICAgIHZhciBkYXNoT2IgPSB7fVxyXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgICAgIGFkZFByb3BlcnR5VG9EYXNoT2IoaSk7XHJcbiAgICAgICAgICAgICAgICB2aWV3LmQuZGF0YVByb3BzW2ldLnAuc2V0R3JvdXBQcm9wZXJ0eShfZGFzaFByb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBmdW5jdGlvbiBpbnRlcmZhY2VGdW5jdGlvbih2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09PSAnQ29sb3InIHx8IHZhbCA9PT0gJ2NvbG9yJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLmNvbG9yO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKHZhbCA9PT0gJ09wYWNpdHknIHx8IHZhbCA9PT0gJ29wYWNpdHknKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24ub3BhY2l0eTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZih2YWwgPT09ICdTdHJva2UgV2lkdGgnIHx8IHZhbCA9PT0gJ3N0cm9rZSB3aWR0aCcpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5zdHJva2VXaWR0aDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdjb2xvcicsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcuYywgMSAvIHZpZXcuYy5tdWx0LCAnY29sb3InKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ29wYWNpdHknLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh2aWV3Lm8sIDEwMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdzdHJva2VXaWR0aCcsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcudyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdkYXNoJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXNoT2I7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdfbmFtZScsIHsgdmFsdWU6IHNoYXBlLm5tIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdtbicsIHsgdmFsdWU6IHNoYXBlLm1uIH0pO1xyXG5cclxuICAgICAgICAgICAgdmlldy5jLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB2aWV3Lm8uc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHZpZXcudy5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIHRyaW1JbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9wcm9wZXJ0eUdyb3VwKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCgtLXZhbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG5cclxuICAgICAgICAgICAgdmlldy5zLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB2aWV3LmUuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHZpZXcuby5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGludGVyZmFjZUZ1bmN0aW9uKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT09IHNoYXBlLmUuaXggfHwgdmFsID09PSAnRW5kJyB8fCB2YWwgPT09ICdlbmQnKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uZW5kO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodmFsID09PSBzaGFwZS5zLml4KXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uc3RhcnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT09IHNoYXBlLm8uaXgpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5vZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdzdGFydCcsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcucywgMSAvIHZpZXcucy5tdWx0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ2VuZCcsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcuZSwgMSAvIHZpZXcuZS5tdWx0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ29mZnNldCcsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcubyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdfbmFtZScsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2hhcGUubm07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5tbiA9IHNoYXBlLm1uO1xyXG4gICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICB2YXIgdHJhbnNmb3JtSW50ZXJmYWNlRmFjdG9yeSA9IChmdW5jdGlvbigpe1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBfcHJvcGVydHlHcm91cCh2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXAoLS12YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5vLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB2aWV3LnRyYW5zZm9ybS5tUHJvcHMucC5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgdmlldy50cmFuc2Zvcm0ubVByb3BzLmEuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5zLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB2aWV3LnRyYW5zZm9ybS5tUHJvcHMuci5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgaWYodmlldy50cmFuc2Zvcm0ubVByb3BzLnNrKXtcclxuICAgICAgICAgICAgICAgIHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5zay5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgICAgIHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5zYS5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2aWV3LnRyYW5zZm9ybS5vcC5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGludGVyZmFjZUZ1bmN0aW9uKHZhbHVlKXtcclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLmEuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uYW5jaG9yUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZS5vLml4ID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLm9wYWNpdHk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZS5wLml4ID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUuci5peCA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5yb3RhdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLnMuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uc2NhbGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZS5zayAmJiBzaGFwZS5zay5peCA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5za2V3O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUuc2EgJiYgc2hhcGUuc2EuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uc2tld0F4aXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2YWx1ZSA9PT0gJ09wYWNpdHknKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLm9wYWNpdHk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2YWx1ZSA9PT0gJ1Bvc2l0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5wb3NpdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHZhbHVlID09PSAnQW5jaG9yIFBvaW50Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5hbmNob3JQb2ludDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHZhbHVlID09PSAnU2NhbGUnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnNjYWxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYodmFsdWUgPT09ICdSb3RhdGlvbicgfHwgdmFsdWUgPT09ICdBREJFIFZlY3RvciBSb3RhdGlvbicpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24ucm90YXRpb247XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2YWx1ZSA9PT0gJ1NrZXcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnNrZXc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZih2YWx1ZSA9PT0gJ1NrZXcgQXhpcycpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uc2tld0F4aXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ29wYWNpdHknLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh2aWV3LnRyYW5zZm9ybS5tUHJvcHMubywgMS92aWV3LnRyYW5zZm9ybS5tUHJvcHMuby5tdWx0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3Bvc2l0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodmlldy50cmFuc2Zvcm0ubVByb3BzLnApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnYW5jaG9yUG9pbnQnLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZSh2aWV3LnRyYW5zZm9ybS5tUHJvcHMuYSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB2YXIgc2NhbGVBcnJheSA9IFtdO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdzY2FsZScsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5zLCAxIC8gdmlldy50cmFuc2Zvcm0ubVByb3BzLnMubXVsdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdyb3RhdGlvbicsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHZpZXcudHJhbnNmb3JtLm1Qcm9wcy5yLCAxIC8gdmlldy50cmFuc2Zvcm0ubVByb3BzLnIubXVsdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdza2V3Jywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodmlldy50cmFuc2Zvcm0ubVByb3BzLnNrKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3NrZXdBeGlzJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUodmlldy50cmFuc2Zvcm0ubVByb3BzLnNhKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ19uYW1lJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzaGFwZS5ubTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLnR5ID0gJ3RyJztcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ubW4gPSBzaGFwZS5tbjtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIGVsbGlwc2VJbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9wcm9wZXJ0eUdyb3VwKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCgtLXZhbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG4gICAgICAgICAgICB2YXIgcHJvcCA9IHZpZXcuc2gudHkgPT09ICd0bScgPyB2aWV3LnNoLnByb3AgOiB2aWV3LnNoO1xyXG4gICAgICAgICAgICBwcm9wLnMuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHByb3AucC5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgZnVuY3Rpb24gaW50ZXJmYWNlRnVuY3Rpb24odmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUucC5peCA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5wb3NpdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLnMuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uc2l6ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdzaXplJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3Bvc2l0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5wKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ19uYW1lJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzaGFwZS5ubTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLm1uID0gc2hhcGUubW47XHJcbiAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG5cclxuICAgIHZhciBzdGFySW50ZXJmYWNlRmFjdG9yeSA9IChmdW5jdGlvbigpe1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBfcHJvcGVydHlHcm91cCh2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXAoLS12YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBwcm9wID0gdmlldy5zaC50eSA9PT0gJ3RtJyA/IHZpZXcuc2gucHJvcCA6IHZpZXcuc2g7XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLnByb3BlcnR5SW5kZXggPSBzaGFwZS5peDtcclxuICAgICAgICAgICAgcHJvcC5vci5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgcHJvcC5vcy5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgcHJvcC5wdC5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgcHJvcC5wLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICBwcm9wLnIuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIGlmKHNoYXBlLmlyKXtcclxuICAgICAgICAgICAgICAgIHByb3AuaXIuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgICAgICBwcm9wLmlzLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBmdW5jdGlvbiBpbnRlcmZhY2VGdW5jdGlvbih2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZS5wLml4ID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUuci5peCA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5yb3RhdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLnB0Lml4ID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnBvaW50cztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLm9yLml4ID09PSB2YWx1ZSB8fCAnQURCRSBWZWN0b3IgU3RhciBPdXRlciBSYWRpdXMnID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLm91dGVyUmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUub3MuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24ub3V0ZXJSb3VuZG5lc3M7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZihzaGFwZS5pciAmJiAoc2hhcGUuaXIuaXggPT09IHZhbHVlIHx8ICdBREJFIFZlY3RvciBTdGFyIElubmVyIFJhZGl1cycgPT09IHZhbHVlKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLmlubmVyUmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUuaXMgJiYgc2hhcGUuaXMuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24uaW5uZXJSb3VuZG5lc3M7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3Bvc2l0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5wKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3JvdGF0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5yLCAxIC8gcHJvcC5yLm11bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAncG9pbnRzJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5wdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdvdXRlclJhZGl1cycsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHByb3Aub3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnb3V0ZXJSb3VuZG5lc3MnLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEV4cHJlc3Npb25WYWx1ZShwcm9wLm9zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ2lubmVyUmFkaXVzJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKCFwcm9wLmlyKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5pcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdpbm5lclJvdW5kbmVzcycsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICBpZighcHJvcC5pcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHByb3AuaXMsIDEgLyBwcm9wLmlzLm11bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnX25hbWUnLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNoYXBlLm5tO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ubW4gPSBzaGFwZS5tbjtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIHJlY3RJbnRlcmZhY2VGYWN0b3J5ID0gKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNoYXBlLHZpZXcscHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIF9wcm9wZXJ0eUdyb3VwKHZhbCl7XHJcbiAgICAgICAgICAgICAgICBpZih2YWwgPT0gMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCgtLXZhbCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHByb3AgPSB2aWV3LnNoLnR5ID09PSAndG0nID8gdmlldy5zaC5wcm9wIDogdmlldy5zaDtcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG4gICAgICAgICAgICBwcm9wLnAuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHByb3Aucy5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuICAgICAgICAgICAgcHJvcC5yLnNldEdyb3VwUHJvcGVydHkoX3Byb3BlcnR5R3JvdXApO1xyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gaW50ZXJmYWNlRnVuY3Rpb24odmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUucC5peCA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5wb3NpdGlvbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLnIuaXggPT09IHZhbHVlKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24ucm91bmRuZXNzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoc2hhcGUucy5peCA9PT0gdmFsdWUgfHwgdmFsdWUgPT09ICdTaXplJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnNpemU7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3Bvc2l0aW9uJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5wKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3JvdW5kbmVzcycsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHByb3Aucik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdzaXplJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdfbmFtZScsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2hhcGUubm07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5tbiA9IHNoYXBlLm1uO1xyXG4gICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICB2YXIgcm91bmRlZEludGVyZmFjZUZhY3RvcnkgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICAgICAgZnVuY3Rpb24gX3Byb3BlcnR5R3JvdXAodmFsKXtcclxuICAgICAgICAgICAgICAgIGlmKHZhbCA9PSAxKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eUdyb3VwKC0tdmFsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcHJvcCA9IHZpZXc7XHJcbiAgICAgICAgICAgIGludGVyZmFjZUZ1bmN0aW9uLnByb3BlcnR5SW5kZXggPSBzaGFwZS5peDtcclxuICAgICAgICAgICAgcHJvcC5yZC5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGludGVyZmFjZUZ1bmN0aW9uKHZhbHVlKXtcclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLnIuaXggPT09IHZhbHVlIHx8ICdSb3VuZCBDb3JuZXJzIDEnID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLnJhZGl1cztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAncmFkaXVzJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5yZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnX25hbWUnLCB7XHJcbiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNoYXBlLm5tO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ubW4gPSBzaGFwZS5tbjtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG4gICAgdmFyIHJlcGVhdGVySW50ZXJmYWNlRmFjdG9yeSA9IChmdW5jdGlvbigpe1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihzaGFwZSx2aWV3LHByb3BlcnR5R3JvdXApe1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBfcHJvcGVydHlHcm91cCh2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXAoLS12YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBwcm9wID0gdmlldztcclxuICAgICAgICAgICAgaW50ZXJmYWNlRnVuY3Rpb24ucHJvcGVydHlJbmRleCA9IHNoYXBlLml4O1xyXG4gICAgICAgICAgICBwcm9wLmMuc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcbiAgICAgICAgICAgIHByb3Auby5zZXRHcm91cFByb3BlcnR5KF9wcm9wZXJ0eUdyb3VwKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGludGVyZmFjZUZ1bmN0aW9uKHZhbHVlKXtcclxuICAgICAgICAgICAgICAgIGlmKHNoYXBlLmMuaXggPT09IHZhbHVlIHx8ICdDb3BpZXMnID09PSB2YWx1ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uLmNvcGllcztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihzaGFwZS5vLml4ID09PSB2YWx1ZSB8fCAnT2Zmc2V0JyA9PT0gdmFsdWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbi5vZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ2NvcGllcycsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRXhwcmVzc2lvblZhbHVlKHByb3AuYyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnb2Zmc2V0Jywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUocHJvcC5vKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW50ZXJmYWNlRnVuY3Rpb24sICdfbmFtZScsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2hhcGUubm07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpbnRlcmZhY2VGdW5jdGlvbi5tbiA9IHNoYXBlLm1uO1xyXG4gICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuXHJcbiAgICB2YXIgcGF0aEludGVyZmFjZUZhY3RvcnkgPSAoZnVuY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oc2hhcGUsdmlldyxwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICAgICAgdmFyIHByb3AgPSB2aWV3LnNoO1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBfcHJvcGVydHlHcm91cCh2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09IDEpe1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbnRlcmZhY2VGdW5jdGlvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXAoLS12YWwpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHByb3Auc2V0R3JvdXBQcm9wZXJ0eShfcHJvcGVydHlHcm91cCk7XHJcblxyXG4gICAgICAgICAgICBmdW5jdGlvbiBpbnRlcmZhY2VGdW5jdGlvbih2YWwpe1xyXG4gICAgICAgICAgICAgICAgaWYodmFsID09PSAnU2hhcGUnIHx8IHZhbCA9PT0gJ3NoYXBlJyB8fCB2YWwgPT09ICdQYXRoJyB8fCB2YWwgPT09ICdwYXRoJyB8fCB2YWwgPT09ICdBREJFIFZlY3RvciBTaGFwZScgfHwgdmFsID09PSAyKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJmYWNlRnVuY3Rpb24ucGF0aDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAncGF0aCcsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihwcm9wLmspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wLmdldFZhbHVlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vcmV0dXJuIHNoYXBlX3Bvb2wuY2xvbmUocHJvcC52KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbnRlcmZhY2VGdW5jdGlvbiwgJ3NoYXBlJywge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHByb3Auayl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3AuZ2V0VmFsdWUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3A7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9yZXR1cm4gc2hhcGVfcG9vbC5jbG9uZShwcm9wLnYpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnX25hbWUnLCB7IHZhbHVlOiBzaGFwZS5ubSB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnaXgnLCB7IHZhbHVlOiBzaGFwZS5peCB9KTtcclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGludGVyZmFjZUZ1bmN0aW9uLCAnbW4nLCB7IHZhbHVlOiBzaGFwZS5tbiB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcblxyXG5cclxuICAgIHJldHVybiBvYjtcclxufSgpKVxyXG5cbnZhciBUZXh0RXhwcmVzc2lvbkludGVyZmFjZSA9IChmdW5jdGlvbigpe1xyXG5cdHJldHVybiBmdW5jdGlvbihlbGVtKXtcclxuICAgICAgICB2YXIgX3ByZXZWYWx1ZSwgX3NvdXJjZVRleHQ7XHJcbiAgICAgICAgZnVuY3Rpb24gX3RoaXNMYXllckZ1bmN0aW9uKCl7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwic291cmNlVGV4dFwiLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJpbmdWYWx1ZSA9IGVsZW0udGV4dFByb3BlcnR5LmN1cnJlbnREYXRhLnQ7XHJcbiAgICAgICAgICAgICAgICBpZihlbGVtLnRleHRQcm9wZXJ0eS5jdXJyZW50RGF0YS50ICE9PSBfcHJldlZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbS50ZXh0UHJvcGVydHkuY3VycmVudERhdGEudCA9IF9wcmV2VmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgX3NvdXJjZVRleHQgPSBuZXcgU3RyaW5nKHN0cmluZ1ZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICAvL0lmIHN0cmluZ1ZhbHVlIGlzIGFuIGVtcHR5IHN0cmluZywgZXZhbCByZXR1cm5zIHVuZGVmaW5lZCwgc28gaXQgaGFzIHRvIGJlIHJldHVybmVkIGFzIGEgU3RyaW5nIHByaW1pdGl2ZVxyXG4gICAgICAgICAgICAgICAgICAgIF9zb3VyY2VUZXh0LnZhbHVlID0gc3RyaW5nVmFsdWUgPyBzdHJpbmdWYWx1ZSA6IG5ldyBTdHJpbmcoc3RyaW5nVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIF9zb3VyY2VUZXh0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzTGF5ZXJGdW5jdGlvbjtcclxuICAgIH1cclxufSgpKVxudmFyIExheWVyRXhwcmVzc2lvbkludGVyZmFjZSA9IChmdW5jdGlvbiAoKXtcclxuICAgIGZ1bmN0aW9uIHRvV29ybGQoYXJyLCB0aW1lKXtcclxuICAgICAgICB2YXIgdG9Xb3JsZE1hdCA9IG5ldyBNYXRyaXgoKTtcclxuICAgICAgICB0b1dvcmxkTWF0LnJlc2V0KCk7XHJcbiAgICAgICAgdmFyIHRyYW5zZm9ybU1hdDtcclxuICAgICAgICBpZih0aW1lKSB7XHJcbiAgICAgICAgICAgIC8vVG9kbyBpbXBsZW1lbnQgdmFsdWUgYXQgdGltZSBvbiB0cmFuc2Zvcm0gcHJvcGVydGllc1xyXG4gICAgICAgICAgICAvL3RyYW5zZm9ybU1hdCA9IHRoaXMuX2VsZW0uZmluYWxUcmFuc2Zvcm0ubVByb3AuZ2V0VmFsdWVBdFRpbWUodGltZSk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybU1hdCA9IHRoaXMuX2VsZW0uZmluYWxUcmFuc2Zvcm0ubVByb3A7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtTWF0ID0gdGhpcy5fZWxlbS5maW5hbFRyYW5zZm9ybS5tUHJvcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdHJhbnNmb3JtTWF0LmFwcGx5VG9NYXRyaXgodG9Xb3JsZE1hdCk7XHJcbiAgICAgICAgaWYodGhpcy5fZWxlbS5oaWVyYXJjaHkgJiYgdGhpcy5fZWxlbS5oaWVyYXJjaHkubGVuZ3RoKXtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuX2VsZW0uaGllcmFyY2h5Lmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VsZW0uaGllcmFyY2h5W2ldLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLmFwcGx5VG9NYXRyaXgodG9Xb3JsZE1hdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRvV29ybGRNYXQuYXBwbHlUb1BvaW50QXJyYXkoYXJyWzBdLGFyclsxXSxhcnJbMl18fDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdG9Xb3JsZE1hdC5hcHBseVRvUG9pbnRBcnJheShhcnJbMF0sYXJyWzFdLGFyclsyXXx8MCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBmcm9tV29ybGQoYXJyLCB0aW1lKXtcclxuICAgICAgICB2YXIgdG9Xb3JsZE1hdCA9IG5ldyBNYXRyaXgoKTtcclxuICAgICAgICB0b1dvcmxkTWF0LnJlc2V0KCk7XHJcbiAgICAgICAgdmFyIHRyYW5zZm9ybU1hdDtcclxuICAgICAgICBpZih0aW1lKSB7XHJcbiAgICAgICAgICAgIC8vVG9kbyBpbXBsZW1lbnQgdmFsdWUgYXQgdGltZSBvbiB0cmFuc2Zvcm0gcHJvcGVydGllc1xyXG4gICAgICAgICAgICAvL3RyYW5zZm9ybU1hdCA9IHRoaXMuX2VsZW0uZmluYWxUcmFuc2Zvcm0ubVByb3AuZ2V0VmFsdWVBdFRpbWUodGltZSk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybU1hdCA9IHRoaXMuX2VsZW0uZmluYWxUcmFuc2Zvcm0ubVByb3A7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtTWF0ID0gdGhpcy5fZWxlbS5maW5hbFRyYW5zZm9ybS5tUHJvcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdHJhbnNmb3JtTWF0LmFwcGx5VG9NYXRyaXgodG9Xb3JsZE1hdCk7XHJcbiAgICAgICAgaWYodGhpcy5fZWxlbS5oaWVyYXJjaHkgJiYgdGhpcy5fZWxlbS5oaWVyYXJjaHkubGVuZ3RoKXtcclxuICAgICAgICAgICAgdmFyIGksIGxlbiA9IHRoaXMuX2VsZW0uaGllcmFyY2h5Lmxlbmd0aDtcclxuICAgICAgICAgICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VsZW0uaGllcmFyY2h5W2ldLmZpbmFsVHJhbnNmb3JtLm1Qcm9wLmFwcGx5VG9NYXRyaXgodG9Xb3JsZE1hdCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRvV29ybGRNYXQuaW52ZXJzZVBvaW50KGFycik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0b1dvcmxkTWF0LmludmVyc2VQb2ludChhcnIpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gZnJvbUNvbXAoYXJyKXtcclxuICAgICAgICB2YXIgdG9Xb3JsZE1hdCA9IG5ldyBNYXRyaXgoKTtcclxuICAgICAgICB0b1dvcmxkTWF0LnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5fZWxlbS5maW5hbFRyYW5zZm9ybS5tUHJvcC5hcHBseVRvTWF0cml4KHRvV29ybGRNYXQpO1xyXG4gICAgICAgIGlmKHRoaXMuX2VsZW0uaGllcmFyY2h5ICYmIHRoaXMuX2VsZW0uaGllcmFyY2h5Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4gPSB0aGlzLl9lbGVtLmhpZXJhcmNoeS5sZW5ndGg7XHJcbiAgICAgICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbGVtLmhpZXJhcmNoeVtpXS5maW5hbFRyYW5zZm9ybS5tUHJvcC5hcHBseVRvTWF0cml4KHRvV29ybGRNYXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0b1dvcmxkTWF0LmludmVyc2VQb2ludChhcnIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdG9Xb3JsZE1hdC5pbnZlcnNlUG9pbnQoYXJyKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGVsZW0pe1xyXG5cclxuICAgICAgICB2YXIgdHJhbnNmb3JtSW50ZXJmYWNlID0gVHJhbnNmb3JtRXhwcmVzc2lvbkludGVyZmFjZShlbGVtLnRyYW5zZm9ybSk7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIF9yZWdpc3Rlck1hc2tJbnRlcmZhY2UobWFza01hbmFnZXIpe1xyXG4gICAgICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24ubWFzayA9IG5ldyBNYXNrTWFuYWdlckludGVyZmFjZShtYXNrTWFuYWdlciwgZWxlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIF9yZWdpc3RlckVmZmVjdHNJbnRlcmZhY2UoZWZmZWN0cyl7XHJcbiAgICAgICAgICAgIF90aGlzTGF5ZXJGdW5jdGlvbi5lZmZlY3QgPSBlZmZlY3RzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gX3RoaXNMYXllckZ1bmN0aW9uKG5hbWUpe1xyXG4gICAgICAgICAgICBzd2l0Y2gobmFtZSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiQURCRSBSb290IFZlY3RvcnMgR3JvdXBcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJDb250ZW50c1wiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpc0xheWVyRnVuY3Rpb24uc2hhcGVJbnRlcmZhY2U7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICBjYXNlIDY6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiVHJhbnNmb3JtXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwidHJhbnNmb3JtXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiQURCRSBUcmFuc2Zvcm0gR3JvdXBcIjpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtSW50ZXJmYWNlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIkFEQkUgRWZmZWN0IFBhcmFkZVwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpc0xheWVyRnVuY3Rpb24uZWZmZWN0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF90aGlzTGF5ZXJGdW5jdGlvbi50b1dvcmxkID0gdG9Xb3JsZDtcclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24uZnJvbVdvcmxkID0gZnJvbVdvcmxkO1xyXG4gICAgICAgIF90aGlzTGF5ZXJGdW5jdGlvbi50b0NvbXAgPSB0b1dvcmxkO1xyXG4gICAgICAgIF90aGlzTGF5ZXJGdW5jdGlvbi5mcm9tQ29tcCA9IGZyb21Db21wO1xyXG4gICAgICAgIF90aGlzTGF5ZXJGdW5jdGlvbi5zb3VyY2VSZWN0QXRUaW1lID0gZWxlbS5zb3VyY2VSZWN0QXRUaW1lLmJpbmQoZWxlbSk7XHJcbiAgICAgICAgX3RoaXNMYXllckZ1bmN0aW9uLl9lbGVtID0gZWxlbTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXNMYXllckZ1bmN0aW9uLCAnaGFzUGFyZW50Jywge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gISFlbGVtLmhpZXJhcmNoeTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sICdwYXJlbnQnLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtLmhpZXJhcmNoeVswXS5sYXllckludGVyZmFjZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwicm90YXRpb25cIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtSW50ZXJmYWNlLnJvdGF0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJzY2FsZVwiLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybUludGVyZmFjZS5zY2FsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXNMYXllckZ1bmN0aW9uLCBcInBvc2l0aW9uXCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtSW50ZXJmYWNlLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwiYW5jaG9yUG9pbnRcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm1JbnRlcmZhY2UuYW5jaG9yUG9pbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJ0cmFuc2Zvcm1cIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm1JbnRlcmZhY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJ3aWR0aFwiLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYoZWxlbS5kYXRhLnR5ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uZGF0YS53XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwiaGVpZ2h0XCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZihlbGVtLmRhdGEudHkgPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbS5kYXRhLmhcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiAxMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJzb3VyY2VcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtLmRhdGEucmVmSWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJpbmRleFwiLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uZGF0YS5pbmQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJfbmFtZVwiLCB7IHZhbHVlOmVsZW0uZGF0YS5ubSB9KTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXNMYXllckZ1bmN0aW9uLCBcImNvbnRlbnRcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXNMYXllckZ1bmN0aW9uLnNoYXBlSW50ZXJmYWNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwiYWN0aXZlXCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW0uaXNWaXNpYmxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0xheWVyRnVuY3Rpb24sIFwidGV4dFwiLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpc0xheWVyRnVuY3Rpb24udGV4dEludGVyZmFjZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24ucmVnaXN0ZXJNYXNrSW50ZXJmYWNlID0gX3JlZ2lzdGVyTWFza0ludGVyZmFjZTtcclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24ucmVnaXN0ZXJFZmZlY3RzSW50ZXJmYWNlID0gX3JlZ2lzdGVyRWZmZWN0c0ludGVyZmFjZTtcclxuICAgICAgICByZXR1cm4gX3RoaXNMYXllckZ1bmN0aW9uO1xyXG4gICAgfVxyXG59KCkpO1xyXG5cbnZhciBDb21wRXhwcmVzc2lvbkludGVyZmFjZSA9IChmdW5jdGlvbiAoKXtcclxuICAgIHJldHVybiBmdW5jdGlvbihjb21wKXtcclxuICAgICAgICBmdW5jdGlvbiBfdGhpc0xheWVyRnVuY3Rpb24obmFtZSl7XHJcbiAgICAgICAgICAgIHZhciBpPTAsIGxlbiA9IGNvbXAubGF5ZXJzLmxlbmd0aDtcclxuICAgICAgICAgICAgd2hpbGUoaTxsZW4pe1xyXG4gICAgICAgICAgICAgICAgaWYoY29tcC5sYXllcnNbaV0ubm0gPT09IG5hbWUgfHwgY29tcC5sYXllcnNbaV0uaW5kID09PSBuYW1lKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tcC5lbGVtZW50c1tpXS5sYXllckludGVyZmFjZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4ge2FjdGl2ZTpmYWxzZX1cclxuICAgICAgICB9XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzTGF5ZXJGdW5jdGlvbiwgXCJfbmFtZVwiLCB7IHZhbHVlOmNvbXAuZGF0YS5ubSB9KTtcclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24ubGF5ZXIgPSBfdGhpc0xheWVyRnVuY3Rpb247XHJcbiAgICAgICAgX3RoaXNMYXllckZ1bmN0aW9uLnBpeGVsQXNwZWN0ID0gMTtcclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24uaGVpZ2h0ID0gY29tcC5nbG9iYWxEYXRhLmNvbXBTaXplLmg7XHJcbiAgICAgICAgX3RoaXNMYXllckZ1bmN0aW9uLndpZHRoID0gY29tcC5nbG9iYWxEYXRhLmNvbXBTaXplLnc7XHJcbiAgICAgICAgX3RoaXNMYXllckZ1bmN0aW9uLnBpeGVsQXNwZWN0ID0gMTtcclxuICAgICAgICBfdGhpc0xheWVyRnVuY3Rpb24uZnJhbWVEdXJhdGlvbiA9IDEvY29tcC5nbG9iYWxEYXRhLmZyYW1lUmF0ZTtcclxuICAgICAgICByZXR1cm4gX3RoaXNMYXllckZ1bmN0aW9uO1xyXG4gICAgfVxyXG59KCkpO1xudmFyIFRyYW5zZm9ybUV4cHJlc3Npb25JbnRlcmZhY2UgPSAoZnVuY3Rpb24gKCl7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24odHJhbnNmb3JtKXtcclxuICAgICAgICBmdW5jdGlvbiBfdGhpc0Z1bmN0aW9uKG5hbWUpe1xyXG4gICAgICAgICAgICBzd2l0Y2gobmFtZSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwic2NhbGVcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJTY2FsZVwiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIkFEQkUgU2NhbGVcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgNjpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXNGdW5jdGlvbi5zY2FsZTtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJyb3RhdGlvblwiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIlJvdGF0aW9uXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiQURCRSBSb3RhdGlvblwiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIkFEQkUgUm90YXRlIFpcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgMTA6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzRnVuY3Rpb24ucm90YXRpb247XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwicG9zaXRpb25cIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJQb3NpdGlvblwiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIkFEQkUgUG9zaXRpb25cIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImFuY2hvclBvaW50XCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiQW5jaG9yUG9pbnRcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJBbmNob3IgUG9pbnRcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJBREJFIEFuY2hvclBvaW50XCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzRnVuY3Rpb24uYW5jaG9yUG9pbnQ7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwib3BhY2l0eVwiOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIk9wYWNpdHlcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgMTE6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzRnVuY3Rpb24ub3BhY2l0eTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzRnVuY3Rpb24sIFwicm90YXRpb25cIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnJvdGF0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzRnVuY3Rpb24sIFwic2NhbGVcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0uc2NhbGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzRnVuY3Rpb24sIFwicG9zaXRpb25cIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ucG9zaXRpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzRnVuY3Rpb24sIFwieFBvc2l0aW9uXCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnhQb3NpdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXNGdW5jdGlvbiwgXCJ5UG9zaXRpb25cIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ueVBvc2l0aW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0Z1bmN0aW9uLCBcImFuY2hvclBvaW50XCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLmFuY2hvclBvaW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfdGhpc0Z1bmN0aW9uLCBcIm9wYWNpdHlcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ub3BhY2l0eTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoX3RoaXNGdW5jdGlvbiwgXCJza2V3XCIsIHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnNrZXc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KF90aGlzRnVuY3Rpb24sIFwic2tld0F4aXNcIiwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0uc2tld0F4aXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIF90aGlzRnVuY3Rpb247XHJcbiAgICB9XHJcbn0oKSk7XG52YXIgUHJvamVjdEludGVyZmFjZSA9IChmdW5jdGlvbiAoKXtcclxuXHJcbiAgICBmdW5jdGlvbiByZWdpc3RlckNvbXBvc2l0aW9uKGNvbXApe1xyXG4gICAgICAgIHRoaXMuY29tcG9zaXRpb25zLnB1c2goY29tcCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgZnVuY3Rpb24gX3RoaXNQcm9qZWN0RnVuY3Rpb24obmFtZSl7XHJcbiAgICAgICAgICAgIHZhciBpID0gMCwgbGVuID0gdGhpcy5jb21wb3NpdGlvbnMubGVuZ3RoO1xyXG4gICAgICAgICAgICB3aGlsZShpPGxlbil7XHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLmNvbXBvc2l0aW9uc1tpXS5kYXRhICYmIHRoaXMuY29tcG9zaXRpb25zW2ldLmRhdGEubm0gPT09IG5hbWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuY29tcG9zaXRpb25zW2ldLnByZXBhcmVGcmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbXBvc2l0aW9uc1tpXS5wcmVwYXJlRnJhbWUodGhpcy5jdXJyZW50RnJhbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb21wb3NpdGlvbnNbaV0uY29tcEludGVyZmFjZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGkrPTE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIF90aGlzUHJvamVjdEZ1bmN0aW9uLmNvbXBvc2l0aW9ucyA9IFtdO1xyXG4gICAgICAgIF90aGlzUHJvamVjdEZ1bmN0aW9uLmN1cnJlbnRGcmFtZSA9IDA7XHJcblxyXG4gICAgICAgIF90aGlzUHJvamVjdEZ1bmN0aW9uLnJlZ2lzdGVyQ29tcG9zaXRpb24gPSByZWdpc3RlckNvbXBvc2l0aW9uO1xyXG5cclxuXHJcblxyXG4gICAgICAgIHJldHVybiBfdGhpc1Byb2plY3RGdW5jdGlvbjtcclxuICAgIH1cclxufSgpKTtcbnZhciBFZmZlY3RzRXhwcmVzc2lvbkludGVyZmFjZSA9IChmdW5jdGlvbiAoKXtcclxuICAgIHZhciBvYiA9IHtcclxuICAgICAgICBjcmVhdGVFZmZlY3RzSW50ZXJmYWNlOiBjcmVhdGVFZmZlY3RzSW50ZXJmYWNlXHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGNyZWF0ZUVmZmVjdHNJbnRlcmZhY2UoZWxlbSwgcHJvcGVydHlHcm91cCl7XHJcbiAgICAgICAgaWYoZWxlbS5lZmZlY3RzKXtcclxuXHJcbiAgICAgICAgICAgIHZhciBlZmZlY3RFbGVtZW50cyA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgZWZmZWN0c0RhdGEgPSBlbGVtLmRhdGEuZWY7XHJcbiAgICAgICAgICAgIHZhciBpLCBsZW4gPSBlbGVtLmVmZmVjdHMuZWZmZWN0RWxlbWVudHMubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3IoaT0wO2k8bGVuO2krPTEpe1xyXG4gICAgICAgICAgICAgICAgZWZmZWN0RWxlbWVudHMucHVzaChjcmVhdGVHcm91cEludGVyZmFjZShlZmZlY3RzRGF0YVtpXSxlbGVtLmVmZmVjdHMuZWZmZWN0RWxlbWVudHNbaV0scHJvcGVydHlHcm91cCxlbGVtKSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihuYW1lKXtcclxuICAgICAgICAgICAgICAgIHZhciBlZmZlY3RzID0gZWxlbS5kYXRhLmVmLCBpID0gMCwgbGVuID0gZWZmZWN0cy5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB3aGlsZShpPGxlbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKG5hbWUgPT09IGVmZmVjdHNbaV0ubm0gfHwgbmFtZSA9PT0gZWZmZWN0c1tpXS5tbiB8fCBuYW1lID09PSBlZmZlY3RzW2ldLml4KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVmZmVjdEVsZW1lbnRzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpICs9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY3JlYXRlR3JvdXBJbnRlcmZhY2UoZGF0YSxlbGVtZW50cywgcHJvcGVydHlHcm91cCwgZWxlbSl7XHJcbiAgICAgICAgdmFyIGVmZmVjdEVsZW1lbnRzID0gW107XHJcbiAgICAgICAgdmFyIGksIGxlbiA9IGRhdGEuZWYubGVuZ3RoO1xyXG4gICAgICAgIGZvcihpPTA7aTxsZW47aSs9MSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZWZbaV0udHkgPT09IDUpe1xyXG4gICAgICAgICAgICAgICAgZWZmZWN0RWxlbWVudHMucHVzaChjcmVhdGVHcm91cEludGVyZmFjZShkYXRhLmVmW2ldLGVsZW1lbnRzLmVmZmVjdEVsZW1lbnRzW2ldLGVsZW1lbnRzLmVmZmVjdEVsZW1lbnRzW2ldLnByb3BlcnR5R3JvdXAsIGVsZW0pKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVmZmVjdEVsZW1lbnRzLnB1c2goY3JlYXRlVmFsdWVJbnRlcmZhY2UoZWxlbWVudHMuZWZmZWN0RWxlbWVudHNbaV0sZGF0YS5lZltpXS50eSwgZWxlbSwgX3Byb3BlcnR5R3JvdXApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gX3Byb3BlcnR5R3JvdXAodmFsKSB7XHJcbiAgICAgICAgICAgIGlmKHZhbCA9PT0gMSl7XHJcbiAgICAgICAgICAgICAgIHJldHVybiBncm91cEludGVyZmFjZTtcclxuICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlHcm91cCh2YWwtMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBncm91cEludGVyZmFjZSA9IGZ1bmN0aW9uKG5hbWUpe1xyXG4gICAgICAgICAgICB2YXIgZWZmZWN0cyA9IGRhdGEuZWYsIGkgPSAwLCBsZW4gPSBlZmZlY3RzLmxlbmd0aDtcclxuICAgICAgICAgICAgd2hpbGUoaTxsZW4pIHtcclxuICAgICAgICAgICAgICAgIGlmKG5hbWUgPT09IGVmZmVjdHNbaV0ubm0gfHwgbmFtZSA9PT0gZWZmZWN0c1tpXS5tbiB8fCBuYW1lID09PSBlZmZlY3RzW2ldLml4KXtcclxuICAgICAgICAgICAgICAgICAgICBpZihlZmZlY3RzW2ldLnR5ID09PSA1KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVmZmVjdEVsZW1lbnRzW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlZmZlY3RFbGVtZW50c1tpXSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZWZmZWN0RWxlbWVudHNbMF0oKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGdyb3VwSW50ZXJmYWNlLnByb3BlcnR5R3JvdXAgPSBfcHJvcGVydHlHcm91cDtcclxuXHJcbiAgICAgICAgaWYoZGF0YS5tbiA9PT0gJ0FEQkUgQ29sb3IgQ29udHJvbCcpe1xyXG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ3JvdXBJbnRlcmZhY2UsICdjb2xvcicsIHtcclxuICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWZmZWN0RWxlbWVudHNbMF0oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShncm91cEludGVyZmFjZSwgJ251bVByb3BlcnRpZXMnLCB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLm5wO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZ3JvdXBJbnRlcmZhY2UuYWN0aXZlID0gZGF0YS5lbiAhPT0gMDtcclxuICAgICAgICByZXR1cm4gZ3JvdXBJbnRlcmZhY2VcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjcmVhdGVWYWx1ZUludGVyZmFjZShlbGVtZW50LCB0eXBlLCBlbGVtLCBwcm9wZXJ0eUdyb3VwKXtcclxuICAgICAgICBmdW5jdGlvbiBpbnRlcmZhY2VGdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBpZih0eXBlID09PSAxMCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZWxlbS5jb21wLmNvbXBJbnRlcmZhY2UoZWxlbWVudC5wLnYpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBFeHByZXNzaW9uVmFsdWUoZWxlbWVudC5wKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKGVsZW1lbnQucC5zZXRHcm91cFByb3BlcnR5KSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQucC5zZXRHcm91cFByb3BlcnR5KHByb3BlcnR5R3JvdXApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGludGVyZmFjZUZ1bmN0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBvYjtcclxuXHJcbn0oKSk7XG52YXIgTWFza01hbmFnZXJJbnRlcmZhY2UgPSAoZnVuY3Rpb24oKXtcclxuXHJcblx0ZnVuY3Rpb24gTWFza0ludGVyZmFjZShtYXNrLCBkYXRhKXtcclxuXHRcdHRoaXMuX21hc2sgPSBtYXNrO1xyXG5cdFx0dGhpcy5fZGF0YSA9IGRhdGE7XHJcblx0fVxyXG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYXNrSW50ZXJmYWNlLnByb3RvdHlwZSwgJ21hc2tQYXRoJywge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuX21hc2sucHJvcC5rKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXNrLnByb3AuZ2V0VmFsdWUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9tYXNrLnByb3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcblx0dmFyIE1hc2tNYW5hZ2VyID0gZnVuY3Rpb24obWFza01hbmFnZXIsIGVsZW0pe1xyXG5cdFx0dmFyIF9tYXNrTWFuYWdlciA9IG1hc2tNYW5hZ2VyO1xyXG5cdFx0dmFyIF9lbGVtID0gZWxlbTtcclxuXHRcdHZhciBfbWFza3NJbnRlcmZhY2VzID0gQXJyYXkuYXBwbHkobnVsbCx7bGVuZ3RoOiBtYXNrTWFuYWdlci52aWV3RGF0YS5sZW5ndGh9KTtcclxuXHRcdHZhciBpLCBsZW4gPSBtYXNrTWFuYWdlci52aWV3RGF0YS5sZW5ndGg7XHJcblx0XHRmb3IoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG5cdFx0XHRfbWFza3NJbnRlcmZhY2VzW2ldID0gbmV3IE1hc2tJbnRlcmZhY2UobWFza01hbmFnZXIudmlld0RhdGFbaV0sIG1hc2tNYW5hZ2VyLm1hc2tzUHJvcGVydGllc1tpXSk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIG1hc2tGdW5jdGlvbiA9IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHRpID0gMDtcclxuXHRcdCAgICB3aGlsZShpPGxlbil7XHJcblx0XHQgICAgICAgIGlmKG1hc2tNYW5hZ2VyLm1hc2tzUHJvcGVydGllc1tpXS5ubSA9PT0gbmFtZSl7XHJcblx0XHQgICAgICAgICAgICByZXR1cm4gX21hc2tzSW50ZXJmYWNlc1tpXTtcclxuXHRcdCAgICAgICAgfVxyXG5cdFx0ICAgICAgICBpICs9IDE7XHJcblx0XHQgICAgfVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIG1hc2tGdW5jdGlvblxyXG5cdH1cclxuXHRyZXR1cm4gTWFza01hbmFnZXJcclxufSgpKVxyXG5cclxuXG52YXIgRXhwcmVzc2lvblZhbHVlID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiBmdW5jdGlvbihlbGVtZW50UHJvcCwgbXVsdCwgdHlwZSkge1xyXG4gICAgICAgIHZhciBleHByZXNzaW9uVmFsdWUsIGFycmF5VmFsdWU7XHJcblxyXG5cdFx0aWYgKGVsZW1lbnRQcm9wLmspIHtcclxuICAgICAgICAgICAgZWxlbWVudFByb3AuZ2V0VmFsdWUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGksIGxlbiwgYXJyVmFsdWU7XHJcbiAgICAgICAgaWYgKHR5cGUpIHtcclxuICAgICAgICBcdGlmKHR5cGUgPT09ICdjb2xvcicpIHtcclxuICAgICAgICBcdFx0bGVuID0gNDtcclxuXHRcdCAgICAgICAgZXhwcmVzc2lvblZhbHVlID0gQXJyYXkuYXBwbHkobnVsbCwge2xlbmd0aDogbGVufSk7XHJcblx0XHQgICAgICAgIGFyclZhbHVlID0gQXJyYXkuYXBwbHkobnVsbCwge2xlbmd0aDogbGVufSk7XHJcblx0XHQgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkge1xyXG5cdFx0ICAgICAgICAgICAgZXhwcmVzc2lvblZhbHVlW2ldID0gYXJyVmFsdWVbaV0gPSAobXVsdCAmJiBpIDwgMykgPyBlbGVtZW50UHJvcC52W2ldICogbXVsdCA6IDE7XHJcblx0XHQgICAgICAgIH1cclxuXHQgICAgICAgIFx0ZXhwcmVzc2lvblZhbHVlLnZhbHVlID0gYXJyVmFsdWU7XHJcbiAgICAgICAgXHR9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZWxlbWVudFByb3AudiA9PT0gJ251bWJlcicgfHwgZWxlbWVudFByb3AudiBpbnN0YW5jZW9mIE51bWJlcil7XHJcbiAgICAgICAgICAgIGV4cHJlc3Npb25WYWx1ZSA9IG11bHQgPyBuZXcgTnVtYmVyKGVsZW1lbnRQcm9wLnYgKiBtdWx0KSA6IG5ldyBOdW1iZXIoZWxlbWVudFByb3Audik7XHJcbiAgICAgICAgICAgIGV4cHJlc3Npb25WYWx1ZS52YWx1ZSA9IG11bHQgPyBlbGVtZW50UHJvcC52ICogbXVsdCA6IGVsZW1lbnRQcm9wLnY7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICBcdGxlbiA9IGVsZW1lbnRQcm9wLnYubGVuZ3RoO1xyXG5cdCAgICAgICAgZXhwcmVzc2lvblZhbHVlID0gQXJyYXkuYXBwbHkobnVsbCwge2xlbmd0aDogbGVufSk7XHJcblx0ICAgICAgICBhcnJWYWx1ZSA9IEFycmF5LmFwcGx5KG51bGwsIHtsZW5ndGg6IGxlbn0pO1xyXG5cdCAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XHJcblx0ICAgICAgICAgICAgZXhwcmVzc2lvblZhbHVlW2ldID0gYXJyVmFsdWVbaV0gPSBtdWx0ID8gZWxlbWVudFByb3AudltpXSAqIG11bHQgOiBlbGVtZW50UHJvcC52W2ldO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICAgICAgZXhwcmVzc2lvblZhbHVlLnZhbHVlID0gYXJyVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGV4cHJlc3Npb25WYWx1ZS5udW1LZXlzID0gZWxlbWVudFByb3Aua2V5ZnJhbWVzID8gZWxlbWVudFByb3Aua2V5ZnJhbWVzLmxlbmd0aCA6IDA7XHJcbiAgICAgICAgZXhwcmVzc2lvblZhbHVlLmtleSA9IGZ1bmN0aW9uKHBvcykge1xyXG4gICAgICAgICAgICBpZiAoIWV4cHJlc3Npb25WYWx1ZS5udW1LZXlzKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50UHJvcC5rZXlmcmFtZXNbcG9zLTFdLnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIGV4cHJlc3Npb25WYWx1ZS52YWx1ZUF0VGltZSA9IGVsZW1lbnRQcm9wLmdldFZhbHVlQXRUaW1lO1xyXG4gICAgICAgIGV4cHJlc3Npb25WYWx1ZS5wcm9wZXJ0eUdyb3VwID0gZWxlbWVudFByb3AucHJvcGVydHlHcm91cDtcclxuICAgICAgICByZXR1cm4gZXhwcmVzc2lvblZhbHVlO1xyXG5cdH1cclxufSgpKVxuZnVuY3Rpb24gU2xpZGVyRWZmZWN0KGRhdGEsZWxlbSwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdGhpcy5wID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnYsMCwwLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxufVxyXG5mdW5jdGlvbiBBbmdsZUVmZmVjdChkYXRhLGVsZW0sIGR5bmFtaWNQcm9wZXJ0aWVzKXtcclxuICAgIHRoaXMucCA9IFByb3BlcnR5RmFjdG9yeS5nZXRQcm9wKGVsZW0sZGF0YS52LDAsMCxkeW5hbWljUHJvcGVydGllcyk7XHJcbn1cclxuZnVuY3Rpb24gQ29sb3JFZmZlY3QoZGF0YSxlbGVtLCBkeW5hbWljUHJvcGVydGllcyl7XHJcbiAgICB0aGlzLnAgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEudiwxLDAsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG59XHJcbmZ1bmN0aW9uIFBvaW50RWZmZWN0KGRhdGEsZWxlbSwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdGhpcy5wID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnYsMSwwLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxufVxyXG5mdW5jdGlvbiBMYXllckluZGV4RWZmZWN0KGRhdGEsZWxlbSwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdGhpcy5wID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnYsMCwwLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxufVxyXG5mdW5jdGlvbiBNYXNrSW5kZXhFZmZlY3QoZGF0YSxlbGVtLCBkeW5hbWljUHJvcGVydGllcyl7XHJcbiAgICB0aGlzLnAgPSBQcm9wZXJ0eUZhY3RvcnkuZ2V0UHJvcChlbGVtLGRhdGEudiwwLDAsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG59XHJcbmZ1bmN0aW9uIENoZWNrYm94RWZmZWN0KGRhdGEsZWxlbSwgZHluYW1pY1Byb3BlcnRpZXMpe1xyXG4gICAgdGhpcy5wID0gUHJvcGVydHlGYWN0b3J5LmdldFByb3AoZWxlbSxkYXRhLnYsMCwwLGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxufVxyXG5mdW5jdGlvbiBOb1ZhbHVlRWZmZWN0KCl7XHJcbiAgICB0aGlzLnAgPSB7fTtcclxufVxuZnVuY3Rpb24gRWZmZWN0c01hbmFnZXIoZGF0YSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKXtcclxuICAgIHZhciBlZmZlY3RzID0gZGF0YS5lZjtcclxuICAgIHRoaXMuZWZmZWN0RWxlbWVudHMgPSBbXTtcclxuICAgIHZhciBpLGxlbiA9IGVmZmVjdHMubGVuZ3RoO1xyXG4gICAgdmFyIGVmZmVjdEl0ZW07XHJcbiAgICBmb3IoaT0wO2k8bGVuO2krKykge1xyXG4gICAgICAgIGVmZmVjdEl0ZW0gPSBuZXcgR3JvdXBFZmZlY3QoZWZmZWN0c1tpXSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICB0aGlzLmVmZmVjdEVsZW1lbnRzLnB1c2goZWZmZWN0SXRlbSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEdyb3VwRWZmZWN0KGRhdGEsZWxlbWVudCxkeW5hbWljUHJvcGVydGllcyl7XHJcbiAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzID0gW107XHJcbiAgICB0aGlzLmluaXQoZGF0YSxlbGVtZW50LHRoaXMuZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgaWYodGhpcy5keW5hbWljUHJvcGVydGllcy5sZW5ndGgpe1xyXG4gICAgICAgIGR5bmFtaWNQcm9wZXJ0aWVzLnB1c2godGhpcyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkdyb3VwRWZmZWN0LnByb3RvdHlwZS5nZXRWYWx1ZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuZHluYW1pY1Byb3BlcnRpZXMubGVuZ3RoO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLmdldFZhbHVlKCk7XHJcbiAgICAgICAgdGhpcy5tZGYgPSB0aGlzLmR5bmFtaWNQcm9wZXJ0aWVzW2ldLm1kZiA/IHRydWUgOiB0aGlzLm1kZjtcclxuICAgIH1cclxufTtcclxuXHJcbkdyb3VwRWZmZWN0LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24oZGF0YSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKXtcclxuICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICB0aGlzLm1kZiA9IGZhbHNlO1xyXG4gICAgdGhpcy5lZmZlY3RFbGVtZW50cyA9IFtdO1xyXG4gICAgdmFyIGksIGxlbiA9IHRoaXMuZGF0YS5lZi5sZW5ndGg7XHJcbiAgICB2YXIgZWZmLCBlZmZlY3RzID0gdGhpcy5kYXRhLmVmO1xyXG4gICAgZm9yKGk9MDtpPGxlbjtpKz0xKXtcclxuICAgICAgICBzd2l0Y2goZWZmZWN0c1tpXS50eSl7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGVmZiA9IG5ldyBTbGlkZXJFZmZlY3QoZWZmZWN0c1tpXSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWZmZWN0RWxlbWVudHMucHVzaChlZmYpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIGVmZiA9IG5ldyBBbmdsZUVmZmVjdChlZmZlY3RzW2ldLGVsZW1lbnQsZHluYW1pY1Byb3BlcnRpZXMpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lZmZlY3RFbGVtZW50cy5wdXNoKGVmZik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgZWZmID0gbmV3IENvbG9yRWZmZWN0KGVmZmVjdHNbaV0sZWxlbWVudCxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVmZmVjdEVsZW1lbnRzLnB1c2goZWZmKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAgICAgICBlZmYgPSBuZXcgUG9pbnRFZmZlY3QoZWZmZWN0c1tpXSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWZmZWN0RWxlbWVudHMucHVzaChlZmYpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNDpcclxuICAgICAgICAgICAgY2FzZSA3OlxyXG4gICAgICAgICAgICAgICAgZWZmID0gbmV3IENoZWNrYm94RWZmZWN0KGVmZmVjdHNbaV0sZWxlbWVudCxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVmZmVjdEVsZW1lbnRzLnB1c2goZWZmKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDEwOlxyXG4gICAgICAgICAgICAgICAgZWZmID0gbmV3IExheWVySW5kZXhFZmZlY3QoZWZmZWN0c1tpXSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWZmZWN0RWxlbWVudHMucHVzaChlZmYpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTE6XHJcbiAgICAgICAgICAgICAgICBlZmYgPSBuZXcgTWFza0luZGV4RWZmZWN0KGVmZmVjdHNbaV0sZWxlbWVudCxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVmZmVjdEVsZW1lbnRzLnB1c2goZWZmKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgICAgICBlZmYgPSBuZXcgRWZmZWN0c01hbmFnZXIoZWZmZWN0c1tpXSxlbGVtZW50LGR5bmFtaWNQcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWZmZWN0RWxlbWVudHMucHVzaChlZmYpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgNjpcclxuICAgICAgICAgICAgICAgIGVmZiA9IG5ldyBOb1ZhbHVlRWZmZWN0KGVmZmVjdHNbaV0sZWxlbWVudCxkeW5hbWljUHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVmZmVjdEVsZW1lbnRzLnB1c2goZWZmKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuICAgIHZhciBib2R5bW92aW5qcyA9IHt9O1xyXG5cclxuICAgIGZ1bmN0aW9uIHNldExvY2F0aW9uSHJlZiAoaHJlZikge1xyXG4gICAgICAgIGxvY2F0aW9uSHJlZiA9IGhyZWY7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBwbGF5KGFuaW1hdGlvbil7XHJcbiAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5wbGF5KGFuaW1hdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcGF1c2UoYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5wYXVzZShhbmltYXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHRvZ2dsZVBhdXNlKGFuaW1hdGlvbikge1xyXG4gICAgICAgIGFuaW1hdGlvbk1hbmFnZXIudG9nZ2xlUGF1c2UoYW5pbWF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZXRTcGVlZCh2YWx1ZSwgYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5zZXRTcGVlZCh2YWx1ZSwgYW5pbWF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzZXREaXJlY3Rpb24odmFsdWUsIGFuaW1hdGlvbikge1xyXG4gICAgICAgIGFuaW1hdGlvbk1hbmFnZXIuc2V0RGlyZWN0aW9uKHZhbHVlLCBhbmltYXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHN0b3AoYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5zdG9wKGFuaW1hdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbW92ZUZyYW1lKHZhbHVlKSB7XHJcbiAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5tb3ZlRnJhbWUodmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNlYXJjaEFuaW1hdGlvbnMoKSB7XHJcbiAgICAgICAgaWYgKHN0YW5kYWxvbmUgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uTWFuYWdlci5zZWFyY2hBbmltYXRpb25zKGFuaW1hdGlvbkRhdGEsIHN0YW5kYWxvbmUsIHJlbmRlcmVyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhbmltYXRpb25NYW5hZ2VyLnNlYXJjaEFuaW1hdGlvbnMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVnaXN0ZXJBbmltYXRpb24oZWxlbSkge1xyXG4gICAgICAgIHJldHVybiBhbmltYXRpb25NYW5hZ2VyLnJlZ2lzdGVyQW5pbWF0aW9uKGVsZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlc2l6ZSgpIHtcclxuICAgICAgICBhbmltYXRpb25NYW5hZ2VyLnJlc2l6ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHN0YXJ0KCkge1xyXG4gICAgICAgIGFuaW1hdGlvbk1hbmFnZXIuc3RhcnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnb1RvQW5kU3RvcCh2YWwsIGlzRnJhbWUsIGFuaW1hdGlvbikge1xyXG4gICAgICAgIGFuaW1hdGlvbk1hbmFnZXIuZ29Ub0FuZFN0b3AodmFsLCBpc0ZyYW1lLCBhbmltYXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNldFN1YmZyYW1lUmVuZGVyaW5nKGZsYWcpIHtcclxuICAgICAgICBzdWJmcmFtZUVuYWJsZWQgPSBmbGFnO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvYWRBbmltYXRpb24ocGFyYW1zKSB7XHJcbiAgICAgICAgaWYgKHN0YW5kYWxvbmUgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgcGFyYW1zLmFuaW1hdGlvbkRhdGEgPSBKU09OLnBhcnNlKGFuaW1hdGlvbkRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTWFuYWdlci5sb2FkQW5pbWF0aW9uKHBhcmFtcyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGVzdHJveShhbmltYXRpb24pIHtcclxuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTWFuYWdlci5kZXN0cm95KGFuaW1hdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0UXVhbGl0eSh2YWx1ZSkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ2hpZ2gnOlxyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDdXJ2ZVNlZ21lbnRzID0gMjAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnbWVkaXVtJzpcclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q3VydmVTZWdtZW50cyA9IDUwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnbG93JzpcclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q3VydmVTZWdtZW50cyA9IDEwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICghaXNOYU4odmFsdWUpICYmIHZhbHVlID4gMSkge1xyXG4gICAgICAgICAgICBkZWZhdWx0Q3VydmVTZWdtZW50cyA9IHZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZGVmYXVsdEN1cnZlU2VnbWVudHMgPj0gNTApIHtcclxuICAgICAgICAgICAgcm91bmRWYWx1ZXMoZmFsc2UpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJvdW5kVmFsdWVzKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBpbkJyb3dzZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluc3RhbGxQbHVnaW4odHlwZSwgcGx1Z2luKSB7XHJcbiAgICAgICAgaWYgKHR5cGUgPT09ICdleHByZXNzaW9ucycpIHtcclxuICAgICAgICAgICAgZXhwcmVzc2lvbnNQbHVnaW4gPSBwbHVnaW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldEZhY3RvcnkobmFtZSkge1xyXG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwicHJvcGVydHlGYWN0b3J5XCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvcGVydHlGYWN0b3J5O1xyXG4gICAgICAgICAgICBjYXNlIFwic2hhcGVQcm9wZXJ0eUZhY3RvcnlcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTaGFwZVByb3BlcnR5RmFjdG9yeTtcclxuICAgICAgICAgICAgY2FzZSBcIm1hdHJpeFwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdHJpeDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBib2R5bW92aW5qcy5wbGF5ID0gcGxheTtcclxuICAgIGJvZHltb3ZpbmpzLnBhdXNlID0gcGF1c2U7XHJcbiAgICBib2R5bW92aW5qcy5zZXRMb2NhdGlvbkhyZWYgPSBzZXRMb2NhdGlvbkhyZWY7XHJcbiAgICBib2R5bW92aW5qcy50b2dnbGVQYXVzZSA9IHRvZ2dsZVBhdXNlO1xyXG4gICAgYm9keW1vdmluanMuc2V0U3BlZWQgPSBzZXRTcGVlZDtcclxuICAgIGJvZHltb3ZpbmpzLnNldERpcmVjdGlvbiA9IHNldERpcmVjdGlvbjtcclxuICAgIGJvZHltb3ZpbmpzLnN0b3AgPSBzdG9wO1xyXG4gICAgYm9keW1vdmluanMubW92ZUZyYW1lID0gbW92ZUZyYW1lO1xyXG4gICAgYm9keW1vdmluanMuc2VhcmNoQW5pbWF0aW9ucyA9IHNlYXJjaEFuaW1hdGlvbnM7XHJcbiAgICBib2R5bW92aW5qcy5yZWdpc3RlckFuaW1hdGlvbiA9IHJlZ2lzdGVyQW5pbWF0aW9uO1xyXG4gICAgYm9keW1vdmluanMubG9hZEFuaW1hdGlvbiA9IGxvYWRBbmltYXRpb247XHJcbiAgICBib2R5bW92aW5qcy5zZXRTdWJmcmFtZVJlbmRlcmluZyA9IHNldFN1YmZyYW1lUmVuZGVyaW5nO1xyXG4gICAgYm9keW1vdmluanMucmVzaXplID0gcmVzaXplO1xyXG4gICAgYm9keW1vdmluanMuc3RhcnQgPSBzdGFydDtcclxuICAgIGJvZHltb3ZpbmpzLmdvVG9BbmRTdG9wID0gZ29Ub0FuZFN0b3A7XHJcbiAgICBib2R5bW92aW5qcy5kZXN0cm95ID0gZGVzdHJveTtcclxuICAgIGJvZHltb3ZpbmpzLnNldFF1YWxpdHkgPSBzZXRRdWFsaXR5O1xyXG4gICAgYm9keW1vdmluanMuaW5Ccm93c2VyID0gaW5Ccm93c2VyO1xyXG4gICAgYm9keW1vdmluanMuaW5zdGFsbFBsdWdpbiA9IGluc3RhbGxQbHVnaW47XHJcbiAgICBib2R5bW92aW5qcy5fX2dldEZhY3RvcnkgPSBnZXRGYWN0b3J5O1xyXG4gICAgYm9keW1vdmluanMudmVyc2lvbiA9ICc0LjEzLjAnO1xyXG5cclxuICAgIGZ1bmN0aW9uIGNoZWNrUmVhZHkoKSB7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKHJlYWR5U3RhdGVDaGVja0ludGVydmFsKTtcclxuICAgICAgICAgICAgc2VhcmNoQW5pbWF0aW9ucygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRRdWVyeVZhcmlhYmxlKHZhcmlhYmxlKSB7XHJcbiAgICAgICAgdmFyIHZhcnMgPSBxdWVyeVN0cmluZy5zcGxpdCgnJicpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgcGFpciA9IHZhcnNbaV0uc3BsaXQoJz0nKTtcclxuICAgICAgICAgICAgaWYgKGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKSA9PSB2YXJpYWJsZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHZhciBzdGFuZGFsb25lID0gJ19fW1NUQU5EQUxPTkVdX18nO1xyXG4gICAgdmFyIGFuaW1hdGlvbkRhdGEgPSAnX19bQU5JTUFUSU9OREFUQV1fXyc7XHJcbiAgICB2YXIgcmVuZGVyZXIgPSAnJztcclxuICAgIGlmIChzdGFuZGFsb25lKSB7XHJcbiAgICAgICAgdmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0Jyk7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gc2NyaXB0cy5sZW5ndGggLSAxO1xyXG4gICAgICAgIHZhciBteVNjcmlwdCA9IHNjcmlwdHNbaW5kZXhdIHx8IHtcclxuICAgICAgICAgICAgc3JjOiAnJ1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIHF1ZXJ5U3RyaW5nID0gbXlTY3JpcHQuc3JjLnJlcGxhY2UoL15bXlxcP10rXFw/Py8sICcnKTtcclxuICAgICAgICByZW5kZXJlciA9IGdldFF1ZXJ5VmFyaWFibGUoJ3JlbmRlcmVyJyk7XHJcbiAgICB9XHJcbiAgICB2YXIgcmVhZHlTdGF0ZUNoZWNrSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChjaGVja1JlYWR5LCAxMDApO1xyXG4gICAgcmV0dXJuIGJvZHltb3ZpbmpzO1xyXG59KSk7XG59LHt9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8qISBIYW1tZXIuSlMgLSB2Mi4wLjcgLSAyMDE2LTA0LTIyXG4gKiBodHRwOi8vaGFtbWVyanMuZ2l0aHViLmlvL1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNiBKb3JpayBUYW5nZWxkZXI7XG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgKi9cbihmdW5jdGlvbih3aW5kb3csIGRvY3VtZW50LCBleHBvcnROYW1lLCB1bmRlZmluZWQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG52YXIgVkVORE9SX1BSRUZJWEVTID0gWycnLCAnd2Via2l0JywgJ01veicsICdNUycsICdtcycsICdvJ107XG52YXIgVEVTVF9FTEVNRU5UID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbnZhciBUWVBFX0ZVTkNUSU9OID0gJ2Z1bmN0aW9uJztcblxudmFyIHJvdW5kID0gTWF0aC5yb3VuZDtcbnZhciBhYnMgPSBNYXRoLmFicztcbnZhciBub3cgPSBEYXRlLm5vdztcblxuLyoqXG4gKiBzZXQgYSB0aW1lb3V0IHdpdGggYSBnaXZlbiBzY29wZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEBwYXJhbSB7TnVtYmVyfSB0aW1lb3V0XG4gKiBAcGFyYW0ge09iamVjdH0gY29udGV4dFxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZnVuY3Rpb24gc2V0VGltZW91dENvbnRleHQoZm4sIHRpbWVvdXQsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gc2V0VGltZW91dChiaW5kRm4oZm4sIGNvbnRleHQpLCB0aW1lb3V0KTtcbn1cblxuLyoqXG4gKiBpZiB0aGUgYXJndW1lbnQgaXMgYW4gYXJyYXksIHdlIHdhbnQgdG8gZXhlY3V0ZSB0aGUgZm4gb24gZWFjaCBlbnRyeVxuICogaWYgaXQgYWludCBhbiBhcnJheSB3ZSBkb24ndCB3YW50IHRvIGRvIGEgdGhpbmcuXG4gKiB0aGlzIGlzIHVzZWQgYnkgYWxsIHRoZSBtZXRob2RzIHRoYXQgYWNjZXB0IGEgc2luZ2xlIGFuZCBhcnJheSBhcmd1bWVudC5cbiAqIEBwYXJhbSB7KnxBcnJheX0gYXJnXG4gKiBAcGFyYW0ge1N0cmluZ30gZm5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbY29udGV4dF1cbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBpbnZva2VBcnJheUFyZyhhcmcsIGZuLCBjb250ZXh0KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuICAgICAgICBlYWNoKGFyZywgY29udGV4dFtmbl0sIGNvbnRleHQpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIHdhbGsgb2JqZWN0cyBhbmQgYXJyYXlzXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRvclxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHRcbiAqL1xuZnVuY3Rpb24gZWFjaChvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7XG4gICAgdmFyIGk7XG5cbiAgICBpZiAoIW9iaikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKG9iai5mb3JFYWNoKSB7XG4gICAgICAgIG9iai5mb3JFYWNoKGl0ZXJhdG9yLCBjb250ZXh0KTtcbiAgICB9IGVsc2UgaWYgKG9iai5sZW5ndGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBvYmoubGVuZ3RoKSB7XG4gICAgICAgICAgICBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoaSBpbiBvYmopIHtcbiAgICAgICAgICAgIG9iai5oYXNPd25Qcm9wZXJ0eShpKSAmJiBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiB3cmFwIGEgbWV0aG9kIHdpdGggYSBkZXByZWNhdGlvbiB3YXJuaW5nIGFuZCBzdGFjayB0cmFjZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gbWV0aG9kXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2VcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBuZXcgZnVuY3Rpb24gd3JhcHBpbmcgdGhlIHN1cHBsaWVkIG1ldGhvZC5cbiAqL1xuZnVuY3Rpb24gZGVwcmVjYXRlKG1ldGhvZCwgbmFtZSwgbWVzc2FnZSkge1xuICAgIHZhciBkZXByZWNhdGlvbk1lc3NhZ2UgPSAnREVQUkVDQVRFRCBNRVRIT0Q6ICcgKyBuYW1lICsgJ1xcbicgKyBtZXNzYWdlICsgJyBBVCBcXG4nO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGUgPSBuZXcgRXJyb3IoJ2dldC1zdGFjay10cmFjZScpO1xuICAgICAgICB2YXIgc3RhY2sgPSBlICYmIGUuc3RhY2sgPyBlLnN0YWNrLnJlcGxhY2UoL15bXlxcKF0rP1tcXG4kXS9nbSwgJycpXG4gICAgICAgICAgICAucmVwbGFjZSgvXlxccythdFxccysvZ20sICcnKVxuICAgICAgICAgICAgLnJlcGxhY2UoL15PYmplY3QuPGFub255bW91cz5cXHMqXFwoL2dtLCAne2Fub255bW91c30oKUAnKSA6ICdVbmtub3duIFN0YWNrIFRyYWNlJztcblxuICAgICAgICB2YXIgbG9nID0gd2luZG93LmNvbnNvbGUgJiYgKHdpbmRvdy5jb25zb2xlLndhcm4gfHwgd2luZG93LmNvbnNvbGUubG9nKTtcbiAgICAgICAgaWYgKGxvZykge1xuICAgICAgICAgICAgbG9nLmNhbGwod2luZG93LmNvbnNvbGUsIGRlcHJlY2F0aW9uTWVzc2FnZSwgc3RhY2spO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9O1xufVxuXG4vKipcbiAqIGV4dGVuZCBvYmplY3QuXG4gKiBtZWFucyB0aGF0IHByb3BlcnRpZXMgaW4gZGVzdCB3aWxsIGJlIG92ZXJ3cml0dGVuIGJ5IHRoZSBvbmVzIGluIHNyYy5cbiAqIEBwYXJhbSB7T2JqZWN0fSB0YXJnZXRcbiAqIEBwYXJhbSB7Li4uT2JqZWN0fSBvYmplY3RzX3RvX2Fzc2lnblxuICogQHJldHVybnMge09iamVjdH0gdGFyZ2V0XG4gKi9cbnZhciBhc3NpZ247XG5pZiAodHlwZW9mIE9iamVjdC5hc3NpZ24gIT09ICdmdW5jdGlvbicpIHtcbiAgICBhc3NpZ24gPSBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0KSB7XG4gICAgICAgIGlmICh0YXJnZXQgPT09IHVuZGVmaW5lZCB8fCB0YXJnZXQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG91dHB1dCA9IE9iamVjdCh0YXJnZXQpO1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDE7IGluZGV4IDwgYXJndW1lbnRzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpbmRleF07XG4gICAgICAgICAgICBpZiAoc291cmNlICE9PSB1bmRlZmluZWQgJiYgc291cmNlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgbmV4dEtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShuZXh0S2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W25leHRLZXldID0gc291cmNlW25leHRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfTtcbn0gZWxzZSB7XG4gICAgYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcbn1cblxuLyoqXG4gKiBleHRlbmQgb2JqZWN0LlxuICogbWVhbnMgdGhhdCBwcm9wZXJ0aWVzIGluIGRlc3Qgd2lsbCBiZSBvdmVyd3JpdHRlbiBieSB0aGUgb25lcyBpbiBzcmMuXG4gKiBAcGFyYW0ge09iamVjdH0gZGVzdFxuICogQHBhcmFtIHtPYmplY3R9IHNyY1xuICogQHBhcmFtIHtCb29sZWFufSBbbWVyZ2U9ZmFsc2VdXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBkZXN0XG4gKi9cbnZhciBleHRlbmQgPSBkZXByZWNhdGUoZnVuY3Rpb24gZXh0ZW5kKGRlc3QsIHNyYywgbWVyZ2UpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHNyYyk7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwga2V5cy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKCFtZXJnZSB8fCAobWVyZ2UgJiYgZGVzdFtrZXlzW2ldXSA9PT0gdW5kZWZpbmVkKSkge1xuICAgICAgICAgICAgZGVzdFtrZXlzW2ldXSA9IHNyY1trZXlzW2ldXTtcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiBkZXN0O1xufSwgJ2V4dGVuZCcsICdVc2UgYGFzc2lnbmAuJyk7XG5cbi8qKlxuICogbWVyZ2UgdGhlIHZhbHVlcyBmcm9tIHNyYyBpbiB0aGUgZGVzdC5cbiAqIG1lYW5zIHRoYXQgcHJvcGVydGllcyB0aGF0IGV4aXN0IGluIGRlc3Qgd2lsbCBub3QgYmUgb3ZlcndyaXR0ZW4gYnkgc3JjXG4gKiBAcGFyYW0ge09iamVjdH0gZGVzdFxuICogQHBhcmFtIHtPYmplY3R9IHNyY1xuICogQHJldHVybnMge09iamVjdH0gZGVzdFxuICovXG52YXIgbWVyZ2UgPSBkZXByZWNhdGUoZnVuY3Rpb24gbWVyZ2UoZGVzdCwgc3JjKSB7XG4gICAgcmV0dXJuIGV4dGVuZChkZXN0LCBzcmMsIHRydWUpO1xufSwgJ21lcmdlJywgJ1VzZSBgYXNzaWduYC4nKTtcblxuLyoqXG4gKiBzaW1wbGUgY2xhc3MgaW5oZXJpdGFuY2VcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNoaWxkXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBiYXNlXG4gKiBAcGFyYW0ge09iamVjdH0gW3Byb3BlcnRpZXNdXG4gKi9cbmZ1bmN0aW9uIGluaGVyaXQoY2hpbGQsIGJhc2UsIHByb3BlcnRpZXMpIHtcbiAgICB2YXIgYmFzZVAgPSBiYXNlLnByb3RvdHlwZSxcbiAgICAgICAgY2hpbGRQO1xuXG4gICAgY2hpbGRQID0gY2hpbGQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShiYXNlUCk7XG4gICAgY2hpbGRQLmNvbnN0cnVjdG9yID0gY2hpbGQ7XG4gICAgY2hpbGRQLl9zdXBlciA9IGJhc2VQO1xuXG4gICAgaWYgKHByb3BlcnRpZXMpIHtcbiAgICAgICAgYXNzaWduKGNoaWxkUCwgcHJvcGVydGllcyk7XG4gICAgfVxufVxuXG4vKipcbiAqIHNpbXBsZSBmdW5jdGlvbiBiaW5kXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHRcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZnVuY3Rpb24gYmluZEZuKGZuLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGJvdW5kRm4oKSB7XG4gICAgICAgIHJldHVybiBmbi5hcHBseShjb250ZXh0LCBhcmd1bWVudHMpO1xuICAgIH07XG59XG5cbi8qKlxuICogbGV0IGEgYm9vbGVhbiB2YWx1ZSBhbHNvIGJlIGEgZnVuY3Rpb24gdGhhdCBtdXN0IHJldHVybiBhIGJvb2xlYW5cbiAqIHRoaXMgZmlyc3QgaXRlbSBpbiBhcmdzIHdpbGwgYmUgdXNlZCBhcyB0aGUgY29udGV4dFxuICogQHBhcmFtIHtCb29sZWFufEZ1bmN0aW9ufSB2YWxcbiAqIEBwYXJhbSB7QXJyYXl9IFthcmdzXVxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGJvb2xPckZuKHZhbCwgYXJncykge1xuICAgIGlmICh0eXBlb2YgdmFsID09IFRZUEVfRlVOQ1RJT04pIHtcbiAgICAgICAgcmV0dXJuIHZhbC5hcHBseShhcmdzID8gYXJnc1swXSB8fCB1bmRlZmluZWQgOiB1bmRlZmluZWQsIGFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsO1xufVxuXG4vKipcbiAqIHVzZSB0aGUgdmFsMiB3aGVuIHZhbDEgaXMgdW5kZWZpbmVkXG4gKiBAcGFyYW0geyp9IHZhbDFcbiAqIEBwYXJhbSB7Kn0gdmFsMlxuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGlmVW5kZWZpbmVkKHZhbDEsIHZhbDIpIHtcbiAgICByZXR1cm4gKHZhbDEgPT09IHVuZGVmaW5lZCkgPyB2YWwyIDogdmFsMTtcbn1cblxuLyoqXG4gKiBhZGRFdmVudExpc3RlbmVyIHdpdGggbXVsdGlwbGUgZXZlbnRzIGF0IG9uY2VcbiAqIEBwYXJhbSB7RXZlbnRUYXJnZXR9IHRhcmdldFxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gKi9cbmZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXJzKHRhcmdldCwgdHlwZXMsIGhhbmRsZXIpIHtcbiAgICBlYWNoKHNwbGl0U3RyKHR5cGVzKSwgZnVuY3Rpb24odHlwZSkge1xuICAgICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyLCBmYWxzZSk7XG4gICAgfSk7XG59XG5cbi8qKlxuICogcmVtb3ZlRXZlbnRMaXN0ZW5lciB3aXRoIG11bHRpcGxlIGV2ZW50cyBhdCBvbmNlXG4gKiBAcGFyYW0ge0V2ZW50VGFyZ2V0fSB0YXJnZXRcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICovXG5mdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVycyh0YXJnZXQsIHR5cGVzLCBoYW5kbGVyKSB7XG4gICAgZWFjaChzcGxpdFN0cih0eXBlcyksIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciwgZmFsc2UpO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIGZpbmQgaWYgYSBub2RlIGlzIGluIHRoZSBnaXZlbiBwYXJlbnRcbiAqIEBtZXRob2QgaGFzUGFyZW50XG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwYXJlbnRcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGZvdW5kXG4gKi9cbmZ1bmN0aW9uIGhhc1BhcmVudChub2RlLCBwYXJlbnQpIHtcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICBpZiAobm9kZSA9PSBwYXJlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBzbWFsbCBpbmRleE9mIHdyYXBwZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBmaW5kXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gZm91bmRcbiAqL1xuZnVuY3Rpb24gaW5TdHIoc3RyLCBmaW5kKSB7XG4gICAgcmV0dXJuIHN0ci5pbmRleE9mKGZpbmQpID4gLTE7XG59XG5cbi8qKlxuICogc3BsaXQgc3RyaW5nIG9uIHdoaXRlc3BhY2VcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtBcnJheX0gd29yZHNcbiAqL1xuZnVuY3Rpb24gc3BsaXRTdHIoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50cmltKCkuc3BsaXQoL1xccysvZyk7XG59XG5cbi8qKlxuICogZmluZCBpZiBhIGFycmF5IGNvbnRhaW5zIHRoZSBvYmplY3QgdXNpbmcgaW5kZXhPZiBvciBhIHNpbXBsZSBwb2x5RmlsbFxuICogQHBhcmFtIHtBcnJheX0gc3JjXG4gKiBAcGFyYW0ge1N0cmluZ30gZmluZFxuICogQHBhcmFtIHtTdHJpbmd9IFtmaW5kQnlLZXldXG4gKiBAcmV0dXJuIHtCb29sZWFufE51bWJlcn0gZmFsc2Ugd2hlbiBub3QgZm91bmQsIG9yIHRoZSBpbmRleFxuICovXG5mdW5jdGlvbiBpbkFycmF5KHNyYywgZmluZCwgZmluZEJ5S2V5KSB7XG4gICAgaWYgKHNyYy5pbmRleE9mICYmICFmaW5kQnlLZXkpIHtcbiAgICAgICAgcmV0dXJuIHNyYy5pbmRleE9mKGZpbmQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBzcmMubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoKGZpbmRCeUtleSAmJiBzcmNbaV1bZmluZEJ5S2V5XSA9PSBmaW5kKSB8fCAoIWZpbmRCeUtleSAmJiBzcmNbaV0gPT09IGZpbmQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbn1cblxuLyoqXG4gKiBjb252ZXJ0IGFycmF5LWxpa2Ugb2JqZWN0cyB0byByZWFsIGFycmF5c1xuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHJldHVybnMge0FycmF5fVxuICovXG5mdW5jdGlvbiB0b0FycmF5KG9iaikge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChvYmosIDApO1xufVxuXG4vKipcbiAqIHVuaXF1ZSBhcnJheSB3aXRoIG9iamVjdHMgYmFzZWQgb24gYSBrZXkgKGxpa2UgJ2lkJykgb3IganVzdCBieSB0aGUgYXJyYXkncyB2YWx1ZVxuICogQHBhcmFtIHtBcnJheX0gc3JjIFt7aWQ6MX0se2lkOjJ9LHtpZDoxfV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBba2V5XVxuICogQHBhcmFtIHtCb29sZWFufSBbc29ydD1GYWxzZV1cbiAqIEByZXR1cm5zIHtBcnJheX0gW3tpZDoxfSx7aWQ6Mn1dXG4gKi9cbmZ1bmN0aW9uIHVuaXF1ZUFycmF5KHNyYywga2V5LCBzb3J0KSB7XG4gICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICB2YXIgdmFsdWVzID0gW107XG4gICAgdmFyIGkgPSAwO1xuXG4gICAgd2hpbGUgKGkgPCBzcmMubGVuZ3RoKSB7XG4gICAgICAgIHZhciB2YWwgPSBrZXkgPyBzcmNbaV1ba2V5XSA6IHNyY1tpXTtcbiAgICAgICAgaWYgKGluQXJyYXkodmFsdWVzLCB2YWwpIDwgMCkge1xuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHNyY1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFsdWVzW2ldID0gdmFsO1xuICAgICAgICBpKys7XG4gICAgfVxuXG4gICAgaWYgKHNvcnQpIHtcbiAgICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgICAgIHJlc3VsdHMgPSByZXN1bHRzLnNvcnQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdHMgPSByZXN1bHRzLnNvcnQoZnVuY3Rpb24gc29ydFVuaXF1ZUFycmF5KGEsIGIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYVtrZXldID4gYltrZXldO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0cztcbn1cblxuLyoqXG4gKiBnZXQgdGhlIHByZWZpeGVkIHByb3BlcnR5XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydHlcbiAqIEByZXR1cm5zIHtTdHJpbmd8VW5kZWZpbmVkfSBwcmVmaXhlZFxuICovXG5mdW5jdGlvbiBwcmVmaXhlZChvYmosIHByb3BlcnR5KSB7XG4gICAgdmFyIHByZWZpeCwgcHJvcDtcbiAgICB2YXIgY2FtZWxQcm9wID0gcHJvcGVydHlbMF0udG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnNsaWNlKDEpO1xuXG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgVkVORE9SX1BSRUZJWEVTLmxlbmd0aCkge1xuICAgICAgICBwcmVmaXggPSBWRU5ET1JfUFJFRklYRVNbaV07XG4gICAgICAgIHByb3AgPSAocHJlZml4KSA/IHByZWZpeCArIGNhbWVsUHJvcCA6IHByb3BlcnR5O1xuXG4gICAgICAgIGlmIChwcm9wIGluIG9iaikge1xuICAgICAgICAgICAgcmV0dXJuIHByb3A7XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIGdldCBhIHVuaXF1ZSBpZFxuICogQHJldHVybnMge251bWJlcn0gdW5pcXVlSWRcbiAqL1xudmFyIF91bmlxdWVJZCA9IDE7XG5mdW5jdGlvbiB1bmlxdWVJZCgpIHtcbiAgICByZXR1cm4gX3VuaXF1ZUlkKys7XG59XG5cbi8qKlxuICogZ2V0IHRoZSB3aW5kb3cgb2JqZWN0IG9mIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtEb2N1bWVudFZpZXd8V2luZG93fVxuICovXG5mdW5jdGlvbiBnZXRXaW5kb3dGb3JFbGVtZW50KGVsZW1lbnQpIHtcbiAgICB2YXIgZG9jID0gZWxlbWVudC5vd25lckRvY3VtZW50IHx8IGVsZW1lbnQ7XG4gICAgcmV0dXJuIChkb2MuZGVmYXVsdFZpZXcgfHwgZG9jLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cpO1xufVxuXG52YXIgTU9CSUxFX1JFR0VYID0gL21vYmlsZXx0YWJsZXR8aXAoYWR8aG9uZXxvZCl8YW5kcm9pZC9pO1xuXG52YXIgU1VQUE9SVF9UT1VDSCA9ICgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpO1xudmFyIFNVUFBPUlRfUE9JTlRFUl9FVkVOVFMgPSBwcmVmaXhlZCh3aW5kb3csICdQb2ludGVyRXZlbnQnKSAhPT0gdW5kZWZpbmVkO1xudmFyIFNVUFBPUlRfT05MWV9UT1VDSCA9IFNVUFBPUlRfVE9VQ0ggJiYgTU9CSUxFX1JFR0VYLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG5cbnZhciBJTlBVVF9UWVBFX1RPVUNIID0gJ3RvdWNoJztcbnZhciBJTlBVVF9UWVBFX1BFTiA9ICdwZW4nO1xudmFyIElOUFVUX1RZUEVfTU9VU0UgPSAnbW91c2UnO1xudmFyIElOUFVUX1RZUEVfS0lORUNUID0gJ2tpbmVjdCc7XG5cbnZhciBDT01QVVRFX0lOVEVSVkFMID0gMjU7XG5cbnZhciBJTlBVVF9TVEFSVCA9IDE7XG52YXIgSU5QVVRfTU9WRSA9IDI7XG52YXIgSU5QVVRfRU5EID0gNDtcbnZhciBJTlBVVF9DQU5DRUwgPSA4O1xuXG52YXIgRElSRUNUSU9OX05PTkUgPSAxO1xudmFyIERJUkVDVElPTl9MRUZUID0gMjtcbnZhciBESVJFQ1RJT05fUklHSFQgPSA0O1xudmFyIERJUkVDVElPTl9VUCA9IDg7XG52YXIgRElSRUNUSU9OX0RPV04gPSAxNjtcblxudmFyIERJUkVDVElPTl9IT1JJWk9OVEFMID0gRElSRUNUSU9OX0xFRlQgfCBESVJFQ1RJT05fUklHSFQ7XG52YXIgRElSRUNUSU9OX1ZFUlRJQ0FMID0gRElSRUNUSU9OX1VQIHwgRElSRUNUSU9OX0RPV047XG52YXIgRElSRUNUSU9OX0FMTCA9IERJUkVDVElPTl9IT1JJWk9OVEFMIHwgRElSRUNUSU9OX1ZFUlRJQ0FMO1xuXG52YXIgUFJPUFNfWFkgPSBbJ3gnLCAneSddO1xudmFyIFBST1BTX0NMSUVOVF9YWSA9IFsnY2xpZW50WCcsICdjbGllbnRZJ107XG5cbi8qKlxuICogY3JlYXRlIG5ldyBpbnB1dCB0eXBlIG1hbmFnZXJcbiAqIEBwYXJhbSB7TWFuYWdlcn0gbWFuYWdlclxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtJbnB1dH1cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBJbnB1dChtYW5hZ2VyLCBjYWxsYmFjaykge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLm1hbmFnZXIgPSBtYW5hZ2VyO1xuICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICB0aGlzLmVsZW1lbnQgPSBtYW5hZ2VyLmVsZW1lbnQ7XG4gICAgdGhpcy50YXJnZXQgPSBtYW5hZ2VyLm9wdGlvbnMuaW5wdXRUYXJnZXQ7XG5cbiAgICAvLyBzbWFsbGVyIHdyYXBwZXIgYXJvdW5kIHRoZSBoYW5kbGVyLCBmb3IgdGhlIHNjb3BlIGFuZCB0aGUgZW5hYmxlZCBzdGF0ZSBvZiB0aGUgbWFuYWdlcixcbiAgICAvLyBzbyB3aGVuIGRpc2FibGVkIHRoZSBpbnB1dCBldmVudHMgYXJlIGNvbXBsZXRlbHkgYnlwYXNzZWQuXG4gICAgdGhpcy5kb21IYW5kbGVyID0gZnVuY3Rpb24oZXYpIHtcbiAgICAgICAgaWYgKGJvb2xPckZuKG1hbmFnZXIub3B0aW9ucy5lbmFibGUsIFttYW5hZ2VyXSkpIHtcbiAgICAgICAgICAgIHNlbGYuaGFuZGxlcihldik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5pbml0KCk7XG5cbn1cblxuSW5wdXQucHJvdG90eXBlID0ge1xuICAgIC8qKlxuICAgICAqIHNob3VsZCBoYW5kbGUgdGhlIGlucHV0RXZlbnQgZGF0YSBhbmQgdHJpZ2dlciB0aGUgY2FsbGJhY2tcbiAgICAgKiBAdmlydHVhbFxuICAgICAqL1xuICAgIGhhbmRsZXI6IGZ1bmN0aW9uKCkgeyB9LFxuXG4gICAgLyoqXG4gICAgICogYmluZCB0aGUgZXZlbnRzXG4gICAgICovXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuZXZFbCAmJiBhZGRFdmVudExpc3RlbmVycyh0aGlzLmVsZW1lbnQsIHRoaXMuZXZFbCwgdGhpcy5kb21IYW5kbGVyKTtcbiAgICAgICAgdGhpcy5ldlRhcmdldCAmJiBhZGRFdmVudExpc3RlbmVycyh0aGlzLnRhcmdldCwgdGhpcy5ldlRhcmdldCwgdGhpcy5kb21IYW5kbGVyKTtcbiAgICAgICAgdGhpcy5ldldpbiAmJiBhZGRFdmVudExpc3RlbmVycyhnZXRXaW5kb3dGb3JFbGVtZW50KHRoaXMuZWxlbWVudCksIHRoaXMuZXZXaW4sIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHVuYmluZCB0aGUgZXZlbnRzXG4gICAgICovXG4gICAgZGVzdHJveTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuZXZFbCAmJiByZW1vdmVFdmVudExpc3RlbmVycyh0aGlzLmVsZW1lbnQsIHRoaXMuZXZFbCwgdGhpcy5kb21IYW5kbGVyKTtcbiAgICAgICAgdGhpcy5ldlRhcmdldCAmJiByZW1vdmVFdmVudExpc3RlbmVycyh0aGlzLnRhcmdldCwgdGhpcy5ldlRhcmdldCwgdGhpcy5kb21IYW5kbGVyKTtcbiAgICAgICAgdGhpcy5ldldpbiAmJiByZW1vdmVFdmVudExpc3RlbmVycyhnZXRXaW5kb3dGb3JFbGVtZW50KHRoaXMuZWxlbWVudCksIHRoaXMuZXZXaW4sIHRoaXMuZG9tSGFuZGxlcik7XG4gICAgfVxufTtcblxuLyoqXG4gKiBjcmVhdGUgbmV3IGlucHV0IHR5cGUgbWFuYWdlclxuICogY2FsbGVkIGJ5IHRoZSBNYW5hZ2VyIGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0hhbW1lcn0gbWFuYWdlclxuICogQHJldHVybnMge0lucHV0fVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dEluc3RhbmNlKG1hbmFnZXIpIHtcbiAgICB2YXIgVHlwZTtcbiAgICB2YXIgaW5wdXRDbGFzcyA9IG1hbmFnZXIub3B0aW9ucy5pbnB1dENsYXNzO1xuXG4gICAgaWYgKGlucHV0Q2xhc3MpIHtcbiAgICAgICAgVHlwZSA9IGlucHV0Q2xhc3M7XG4gICAgfSBlbHNlIGlmIChTVVBQT1JUX1BPSU5URVJfRVZFTlRTKSB7XG4gICAgICAgIFR5cGUgPSBQb2ludGVyRXZlbnRJbnB1dDtcbiAgICB9IGVsc2UgaWYgKFNVUFBPUlRfT05MWV9UT1VDSCkge1xuICAgICAgICBUeXBlID0gVG91Y2hJbnB1dDtcbiAgICB9IGVsc2UgaWYgKCFTVVBQT1JUX1RPVUNIKSB7XG4gICAgICAgIFR5cGUgPSBNb3VzZUlucHV0O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIFR5cGUgPSBUb3VjaE1vdXNlSW5wdXQ7XG4gICAgfVxuICAgIHJldHVybiBuZXcgKFR5cGUpKG1hbmFnZXIsIGlucHV0SGFuZGxlcik7XG59XG5cbi8qKlxuICogaGFuZGxlIGlucHV0IGV2ZW50c1xuICogQHBhcmFtIHtNYW5hZ2VyfSBtYW5hZ2VyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRUeXBlXG4gKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAqL1xuZnVuY3Rpb24gaW5wdXRIYW5kbGVyKG1hbmFnZXIsIGV2ZW50VHlwZSwgaW5wdXQpIHtcbiAgICB2YXIgcG9pbnRlcnNMZW4gPSBpbnB1dC5wb2ludGVycy5sZW5ndGg7XG4gICAgdmFyIGNoYW5nZWRQb2ludGVyc0xlbiA9IGlucHV0LmNoYW5nZWRQb2ludGVycy5sZW5ndGg7XG4gICAgdmFyIGlzRmlyc3QgPSAoZXZlbnRUeXBlICYgSU5QVVRfU1RBUlQgJiYgKHBvaW50ZXJzTGVuIC0gY2hhbmdlZFBvaW50ZXJzTGVuID09PSAwKSk7XG4gICAgdmFyIGlzRmluYWwgPSAoZXZlbnRUeXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkgJiYgKHBvaW50ZXJzTGVuIC0gY2hhbmdlZFBvaW50ZXJzTGVuID09PSAwKSk7XG5cbiAgICBpbnB1dC5pc0ZpcnN0ID0gISFpc0ZpcnN0O1xuICAgIGlucHV0LmlzRmluYWwgPSAhIWlzRmluYWw7XG5cbiAgICBpZiAoaXNGaXJzdCkge1xuICAgICAgICBtYW5hZ2VyLnNlc3Npb24gPSB7fTtcbiAgICB9XG5cbiAgICAvLyBzb3VyY2UgZXZlbnQgaXMgdGhlIG5vcm1hbGl6ZWQgdmFsdWUgb2YgdGhlIGRvbUV2ZW50c1xuICAgIC8vIGxpa2UgJ3RvdWNoc3RhcnQsIG1vdXNldXAsIHBvaW50ZXJkb3duJ1xuICAgIGlucHV0LmV2ZW50VHlwZSA9IGV2ZW50VHlwZTtcblxuICAgIC8vIGNvbXB1dGUgc2NhbGUsIHJvdGF0aW9uIGV0Y1xuICAgIGNvbXB1dGVJbnB1dERhdGEobWFuYWdlciwgaW5wdXQpO1xuXG4gICAgLy8gZW1pdCBzZWNyZXQgZXZlbnRcbiAgICBtYW5hZ2VyLmVtaXQoJ2hhbW1lci5pbnB1dCcsIGlucHV0KTtcblxuICAgIG1hbmFnZXIucmVjb2duaXplKGlucHV0KTtcbiAgICBtYW5hZ2VyLnNlc3Npb24ucHJldklucHV0ID0gaW5wdXQ7XG59XG5cbi8qKlxuICogZXh0ZW5kIHRoZSBkYXRhIHdpdGggc29tZSB1c2FibGUgcHJvcGVydGllcyBsaWtlIHNjYWxlLCByb3RhdGUsIHZlbG9jaXR5IGV0Y1xuICogQHBhcmFtIHtPYmplY3R9IG1hbmFnZXJcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dFxuICovXG5mdW5jdGlvbiBjb21wdXRlSW5wdXREYXRhKG1hbmFnZXIsIGlucHV0KSB7XG4gICAgdmFyIHNlc3Npb24gPSBtYW5hZ2VyLnNlc3Npb247XG4gICAgdmFyIHBvaW50ZXJzID0gaW5wdXQucG9pbnRlcnM7XG4gICAgdmFyIHBvaW50ZXJzTGVuZ3RoID0gcG9pbnRlcnMubGVuZ3RoO1xuXG4gICAgLy8gc3RvcmUgdGhlIGZpcnN0IGlucHV0IHRvIGNhbGN1bGF0ZSB0aGUgZGlzdGFuY2UgYW5kIGRpcmVjdGlvblxuICAgIGlmICghc2Vzc2lvbi5maXJzdElucHV0KSB7XG4gICAgICAgIHNlc3Npb24uZmlyc3RJbnB1dCA9IHNpbXBsZUNsb25lSW5wdXREYXRhKGlucHV0KTtcbiAgICB9XG5cbiAgICAvLyB0byBjb21wdXRlIHNjYWxlIGFuZCByb3RhdGlvbiB3ZSBuZWVkIHRvIHN0b3JlIHRoZSBtdWx0aXBsZSB0b3VjaGVzXG4gICAgaWYgKHBvaW50ZXJzTGVuZ3RoID4gMSAmJiAhc2Vzc2lvbi5maXJzdE11bHRpcGxlKSB7XG4gICAgICAgIHNlc3Npb24uZmlyc3RNdWx0aXBsZSA9IHNpbXBsZUNsb25lSW5wdXREYXRhKGlucHV0KTtcbiAgICB9IGVsc2UgaWYgKHBvaW50ZXJzTGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHNlc3Npb24uZmlyc3RNdWx0aXBsZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBmaXJzdElucHV0ID0gc2Vzc2lvbi5maXJzdElucHV0O1xuICAgIHZhciBmaXJzdE11bHRpcGxlID0gc2Vzc2lvbi5maXJzdE11bHRpcGxlO1xuICAgIHZhciBvZmZzZXRDZW50ZXIgPSBmaXJzdE11bHRpcGxlID8gZmlyc3RNdWx0aXBsZS5jZW50ZXIgOiBmaXJzdElucHV0LmNlbnRlcjtcblxuICAgIHZhciBjZW50ZXIgPSBpbnB1dC5jZW50ZXIgPSBnZXRDZW50ZXIocG9pbnRlcnMpO1xuICAgIGlucHV0LnRpbWVTdGFtcCA9IG5vdygpO1xuICAgIGlucHV0LmRlbHRhVGltZSA9IGlucHV0LnRpbWVTdGFtcCAtIGZpcnN0SW5wdXQudGltZVN0YW1wO1xuXG4gICAgaW5wdXQuYW5nbGUgPSBnZXRBbmdsZShvZmZzZXRDZW50ZXIsIGNlbnRlcik7XG4gICAgaW5wdXQuZGlzdGFuY2UgPSBnZXREaXN0YW5jZShvZmZzZXRDZW50ZXIsIGNlbnRlcik7XG5cbiAgICBjb21wdXRlRGVsdGFYWShzZXNzaW9uLCBpbnB1dCk7XG4gICAgaW5wdXQub2Zmc2V0RGlyZWN0aW9uID0gZ2V0RGlyZWN0aW9uKGlucHV0LmRlbHRhWCwgaW5wdXQuZGVsdGFZKTtcblxuICAgIHZhciBvdmVyYWxsVmVsb2NpdHkgPSBnZXRWZWxvY2l0eShpbnB1dC5kZWx0YVRpbWUsIGlucHV0LmRlbHRhWCwgaW5wdXQuZGVsdGFZKTtcbiAgICBpbnB1dC5vdmVyYWxsVmVsb2NpdHlYID0gb3ZlcmFsbFZlbG9jaXR5Lng7XG4gICAgaW5wdXQub3ZlcmFsbFZlbG9jaXR5WSA9IG92ZXJhbGxWZWxvY2l0eS55O1xuICAgIGlucHV0Lm92ZXJhbGxWZWxvY2l0eSA9IChhYnMob3ZlcmFsbFZlbG9jaXR5LngpID4gYWJzKG92ZXJhbGxWZWxvY2l0eS55KSkgPyBvdmVyYWxsVmVsb2NpdHkueCA6IG92ZXJhbGxWZWxvY2l0eS55O1xuXG4gICAgaW5wdXQuc2NhbGUgPSBmaXJzdE11bHRpcGxlID8gZ2V0U2NhbGUoZmlyc3RNdWx0aXBsZS5wb2ludGVycywgcG9pbnRlcnMpIDogMTtcbiAgICBpbnB1dC5yb3RhdGlvbiA9IGZpcnN0TXVsdGlwbGUgPyBnZXRSb3RhdGlvbihmaXJzdE11bHRpcGxlLnBvaW50ZXJzLCBwb2ludGVycykgOiAwO1xuXG4gICAgaW5wdXQubWF4UG9pbnRlcnMgPSAhc2Vzc2lvbi5wcmV2SW5wdXQgPyBpbnB1dC5wb2ludGVycy5sZW5ndGggOiAoKGlucHV0LnBvaW50ZXJzLmxlbmd0aCA+XG4gICAgICAgIHNlc3Npb24ucHJldklucHV0Lm1heFBvaW50ZXJzKSA/IGlucHV0LnBvaW50ZXJzLmxlbmd0aCA6IHNlc3Npb24ucHJldklucHV0Lm1heFBvaW50ZXJzKTtcblxuICAgIGNvbXB1dGVJbnRlcnZhbElucHV0RGF0YShzZXNzaW9uLCBpbnB1dCk7XG5cbiAgICAvLyBmaW5kIHRoZSBjb3JyZWN0IHRhcmdldFxuICAgIHZhciB0YXJnZXQgPSBtYW5hZ2VyLmVsZW1lbnQ7XG4gICAgaWYgKGhhc1BhcmVudChpbnB1dC5zcmNFdmVudC50YXJnZXQsIHRhcmdldCkpIHtcbiAgICAgICAgdGFyZ2V0ID0gaW5wdXQuc3JjRXZlbnQudGFyZ2V0O1xuICAgIH1cbiAgICBpbnB1dC50YXJnZXQgPSB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVEZWx0YVhZKHNlc3Npb24sIGlucHV0KSB7XG4gICAgdmFyIGNlbnRlciA9IGlucHV0LmNlbnRlcjtcbiAgICB2YXIgb2Zmc2V0ID0gc2Vzc2lvbi5vZmZzZXREZWx0YSB8fCB7fTtcbiAgICB2YXIgcHJldkRlbHRhID0gc2Vzc2lvbi5wcmV2RGVsdGEgfHwge307XG4gICAgdmFyIHByZXZJbnB1dCA9IHNlc3Npb24ucHJldklucHV0IHx8IHt9O1xuXG4gICAgaWYgKGlucHV0LmV2ZW50VHlwZSA9PT0gSU5QVVRfU1RBUlQgfHwgcHJldklucHV0LmV2ZW50VHlwZSA9PT0gSU5QVVRfRU5EKSB7XG4gICAgICAgIHByZXZEZWx0YSA9IHNlc3Npb24ucHJldkRlbHRhID0ge1xuICAgICAgICAgICAgeDogcHJldklucHV0LmRlbHRhWCB8fCAwLFxuICAgICAgICAgICAgeTogcHJldklucHV0LmRlbHRhWSB8fCAwXG4gICAgICAgIH07XG5cbiAgICAgICAgb2Zmc2V0ID0gc2Vzc2lvbi5vZmZzZXREZWx0YSA9IHtcbiAgICAgICAgICAgIHg6IGNlbnRlci54LFxuICAgICAgICAgICAgeTogY2VudGVyLnlcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBpbnB1dC5kZWx0YVggPSBwcmV2RGVsdGEueCArIChjZW50ZXIueCAtIG9mZnNldC54KTtcbiAgICBpbnB1dC5kZWx0YVkgPSBwcmV2RGVsdGEueSArIChjZW50ZXIueSAtIG9mZnNldC55KTtcbn1cblxuLyoqXG4gKiB2ZWxvY2l0eSBpcyBjYWxjdWxhdGVkIGV2ZXJ5IHggbXNcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXNzaW9uXG4gKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAqL1xuZnVuY3Rpb24gY29tcHV0ZUludGVydmFsSW5wdXREYXRhKHNlc3Npb24sIGlucHV0KSB7XG4gICAgdmFyIGxhc3QgPSBzZXNzaW9uLmxhc3RJbnRlcnZhbCB8fCBpbnB1dCxcbiAgICAgICAgZGVsdGFUaW1lID0gaW5wdXQudGltZVN0YW1wIC0gbGFzdC50aW1lU3RhbXAsXG4gICAgICAgIHZlbG9jaXR5LCB2ZWxvY2l0eVgsIHZlbG9jaXR5WSwgZGlyZWN0aW9uO1xuXG4gICAgaWYgKGlucHV0LmV2ZW50VHlwZSAhPSBJTlBVVF9DQU5DRUwgJiYgKGRlbHRhVGltZSA+IENPTVBVVEVfSU5URVJWQUwgfHwgbGFzdC52ZWxvY2l0eSA9PT0gdW5kZWZpbmVkKSkge1xuICAgICAgICB2YXIgZGVsdGFYID0gaW5wdXQuZGVsdGFYIC0gbGFzdC5kZWx0YVg7XG4gICAgICAgIHZhciBkZWx0YVkgPSBpbnB1dC5kZWx0YVkgLSBsYXN0LmRlbHRhWTtcblxuICAgICAgICB2YXIgdiA9IGdldFZlbG9jaXR5KGRlbHRhVGltZSwgZGVsdGFYLCBkZWx0YVkpO1xuICAgICAgICB2ZWxvY2l0eVggPSB2Lng7XG4gICAgICAgIHZlbG9jaXR5WSA9IHYueTtcbiAgICAgICAgdmVsb2NpdHkgPSAoYWJzKHYueCkgPiBhYnModi55KSkgPyB2LnggOiB2Lnk7XG4gICAgICAgIGRpcmVjdGlvbiA9IGdldERpcmVjdGlvbihkZWx0YVgsIGRlbHRhWSk7XG5cbiAgICAgICAgc2Vzc2lvbi5sYXN0SW50ZXJ2YWwgPSBpbnB1dDtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyB1c2UgbGF0ZXN0IHZlbG9jaXR5IGluZm8gaWYgaXQgZG9lc24ndCBvdmVydGFrZSBhIG1pbmltdW0gcGVyaW9kXG4gICAgICAgIHZlbG9jaXR5ID0gbGFzdC52ZWxvY2l0eTtcbiAgICAgICAgdmVsb2NpdHlYID0gbGFzdC52ZWxvY2l0eVg7XG4gICAgICAgIHZlbG9jaXR5WSA9IGxhc3QudmVsb2NpdHlZO1xuICAgICAgICBkaXJlY3Rpb24gPSBsYXN0LmRpcmVjdGlvbjtcbiAgICB9XG5cbiAgICBpbnB1dC52ZWxvY2l0eSA9IHZlbG9jaXR5O1xuICAgIGlucHV0LnZlbG9jaXR5WCA9IHZlbG9jaXR5WDtcbiAgICBpbnB1dC52ZWxvY2l0eVkgPSB2ZWxvY2l0eVk7XG4gICAgaW5wdXQuZGlyZWN0aW9uID0gZGlyZWN0aW9uO1xufVxuXG4vKipcbiAqIGNyZWF0ZSBhIHNpbXBsZSBjbG9uZSBmcm9tIHRoZSBpbnB1dCB1c2VkIGZvciBzdG9yYWdlIG9mIGZpcnN0SW5wdXQgYW5kIGZpcnN0TXVsdGlwbGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dFxuICogQHJldHVybnMge09iamVjdH0gY2xvbmVkSW5wdXREYXRhXG4gKi9cbmZ1bmN0aW9uIHNpbXBsZUNsb25lSW5wdXREYXRhKGlucHV0KSB7XG4gICAgLy8gbWFrZSBhIHNpbXBsZSBjb3B5IG9mIHRoZSBwb2ludGVycyBiZWNhdXNlIHdlIHdpbGwgZ2V0IGEgcmVmZXJlbmNlIGlmIHdlIGRvbid0XG4gICAgLy8gd2Ugb25seSBuZWVkIGNsaWVudFhZIGZvciB0aGUgY2FsY3VsYXRpb25zXG4gICAgdmFyIHBvaW50ZXJzID0gW107XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgaW5wdXQucG9pbnRlcnMubGVuZ3RoKSB7XG4gICAgICAgIHBvaW50ZXJzW2ldID0ge1xuICAgICAgICAgICAgY2xpZW50WDogcm91bmQoaW5wdXQucG9pbnRlcnNbaV0uY2xpZW50WCksXG4gICAgICAgICAgICBjbGllbnRZOiByb3VuZChpbnB1dC5wb2ludGVyc1tpXS5jbGllbnRZKVxuICAgICAgICB9O1xuICAgICAgICBpKys7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGltZVN0YW1wOiBub3coKSxcbiAgICAgICAgcG9pbnRlcnM6IHBvaW50ZXJzLFxuICAgICAgICBjZW50ZXI6IGdldENlbnRlcihwb2ludGVycyksXG4gICAgICAgIGRlbHRhWDogaW5wdXQuZGVsdGFYLFxuICAgICAgICBkZWx0YVk6IGlucHV0LmRlbHRhWVxuICAgIH07XG59XG5cbi8qKlxuICogZ2V0IHRoZSBjZW50ZXIgb2YgYWxsIHRoZSBwb2ludGVyc1xuICogQHBhcmFtIHtBcnJheX0gcG9pbnRlcnNcbiAqIEByZXR1cm4ge09iamVjdH0gY2VudGVyIGNvbnRhaW5zIGB4YCBhbmQgYHlgIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gZ2V0Q2VudGVyKHBvaW50ZXJzKSB7XG4gICAgdmFyIHBvaW50ZXJzTGVuZ3RoID0gcG9pbnRlcnMubGVuZ3RoO1xuXG4gICAgLy8gbm8gbmVlZCB0byBsb29wIHdoZW4gb25seSBvbmUgdG91Y2hcbiAgICBpZiAocG9pbnRlcnNMZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHg6IHJvdW5kKHBvaW50ZXJzWzBdLmNsaWVudFgpLFxuICAgICAgICAgICAgeTogcm91bmQocG9pbnRlcnNbMF0uY2xpZW50WSlcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB2YXIgeCA9IDAsIHkgPSAwLCBpID0gMDtcbiAgICB3aGlsZSAoaSA8IHBvaW50ZXJzTGVuZ3RoKSB7XG4gICAgICAgIHggKz0gcG9pbnRlcnNbaV0uY2xpZW50WDtcbiAgICAgICAgeSArPSBwb2ludGVyc1tpXS5jbGllbnRZO1xuICAgICAgICBpKys7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgeDogcm91bmQoeCAvIHBvaW50ZXJzTGVuZ3RoKSxcbiAgICAgICAgeTogcm91bmQoeSAvIHBvaW50ZXJzTGVuZ3RoKVxuICAgIH07XG59XG5cbi8qKlxuICogY2FsY3VsYXRlIHRoZSB2ZWxvY2l0eSBiZXR3ZWVuIHR3byBwb2ludHMuIHVuaXQgaXMgaW4gcHggcGVyIG1zLlxuICogQHBhcmFtIHtOdW1iZXJ9IGRlbHRhVGltZVxuICogQHBhcmFtIHtOdW1iZXJ9IHhcbiAqIEBwYXJhbSB7TnVtYmVyfSB5XG4gKiBAcmV0dXJuIHtPYmplY3R9IHZlbG9jaXR5IGB4YCBhbmQgYHlgXG4gKi9cbmZ1bmN0aW9uIGdldFZlbG9jaXR5KGRlbHRhVGltZSwgeCwgeSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHg6IHggLyBkZWx0YVRpbWUgfHwgMCxcbiAgICAgICAgeTogeSAvIGRlbHRhVGltZSB8fCAwXG4gICAgfTtcbn1cblxuLyoqXG4gKiBnZXQgdGhlIGRpcmVjdGlvbiBiZXR3ZWVuIHR3byBwb2ludHNcbiAqIEBwYXJhbSB7TnVtYmVyfSB4XG4gKiBAcGFyYW0ge051bWJlcn0geVxuICogQHJldHVybiB7TnVtYmVyfSBkaXJlY3Rpb25cbiAqL1xuZnVuY3Rpb24gZ2V0RGlyZWN0aW9uKHgsIHkpIHtcbiAgICBpZiAoeCA9PT0geSkge1xuICAgICAgICByZXR1cm4gRElSRUNUSU9OX05PTkU7XG4gICAgfVxuXG4gICAgaWYgKGFicyh4KSA+PSBhYnMoeSkpIHtcbiAgICAgICAgcmV0dXJuIHggPCAwID8gRElSRUNUSU9OX0xFRlQgOiBESVJFQ1RJT05fUklHSFQ7XG4gICAgfVxuICAgIHJldHVybiB5IDwgMCA/IERJUkVDVElPTl9VUCA6IERJUkVDVElPTl9ET1dOO1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgYWJzb2x1dGUgZGlzdGFuY2UgYmV0d2VlbiB0d28gcG9pbnRzXG4gKiBAcGFyYW0ge09iamVjdH0gcDEge3gsIHl9XG4gKiBAcGFyYW0ge09iamVjdH0gcDIge3gsIHl9XG4gKiBAcGFyYW0ge0FycmF5fSBbcHJvcHNdIGNvbnRhaW5pbmcgeCBhbmQgeSBrZXlzXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IGRpc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIGdldERpc3RhbmNlKHAxLCBwMiwgcHJvcHMpIHtcbiAgICBpZiAoIXByb3BzKSB7XG4gICAgICAgIHByb3BzID0gUFJPUFNfWFk7XG4gICAgfVxuICAgIHZhciB4ID0gcDJbcHJvcHNbMF1dIC0gcDFbcHJvcHNbMF1dLFxuICAgICAgICB5ID0gcDJbcHJvcHNbMV1dIC0gcDFbcHJvcHNbMV1dO1xuXG4gICAgcmV0dXJuIE1hdGguc3FydCgoeCAqIHgpICsgKHkgKiB5KSk7XG59XG5cbi8qKlxuICogY2FsY3VsYXRlIHRoZSBhbmdsZSBiZXR3ZWVuIHR3byBjb29yZGluYXRlc1xuICogQHBhcmFtIHtPYmplY3R9IHAxXG4gKiBAcGFyYW0ge09iamVjdH0gcDJcbiAqIEBwYXJhbSB7QXJyYXl9IFtwcm9wc10gY29udGFpbmluZyB4IGFuZCB5IGtleXNcbiAqIEByZXR1cm4ge051bWJlcn0gYW5nbGVcbiAqL1xuZnVuY3Rpb24gZ2V0QW5nbGUocDEsIHAyLCBwcm9wcykge1xuICAgIGlmICghcHJvcHMpIHtcbiAgICAgICAgcHJvcHMgPSBQUk9QU19YWTtcbiAgICB9XG4gICAgdmFyIHggPSBwMltwcm9wc1swXV0gLSBwMVtwcm9wc1swXV0sXG4gICAgICAgIHkgPSBwMltwcm9wc1sxXV0gLSBwMVtwcm9wc1sxXV07XG4gICAgcmV0dXJuIE1hdGguYXRhbjIoeSwgeCkgKiAxODAgLyBNYXRoLlBJO1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgcm90YXRpb24gZGVncmVlcyBiZXR3ZWVuIHR3byBwb2ludGVyc2V0c1xuICogQHBhcmFtIHtBcnJheX0gc3RhcnQgYXJyYXkgb2YgcG9pbnRlcnNcbiAqIEBwYXJhbSB7QXJyYXl9IGVuZCBhcnJheSBvZiBwb2ludGVyc1xuICogQHJldHVybiB7TnVtYmVyfSByb3RhdGlvblxuICovXG5mdW5jdGlvbiBnZXRSb3RhdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIGdldEFuZ2xlKGVuZFsxXSwgZW5kWzBdLCBQUk9QU19DTElFTlRfWFkpICsgZ2V0QW5nbGUoc3RhcnRbMV0sIHN0YXJ0WzBdLCBQUk9QU19DTElFTlRfWFkpO1xufVxuXG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgc2NhbGUgZmFjdG9yIGJldHdlZW4gdHdvIHBvaW50ZXJzZXRzXG4gKiBubyBzY2FsZSBpcyAxLCBhbmQgZ29lcyBkb3duIHRvIDAgd2hlbiBwaW5jaGVkIHRvZ2V0aGVyLCBhbmQgYmlnZ2VyIHdoZW4gcGluY2hlZCBvdXRcbiAqIEBwYXJhbSB7QXJyYXl9IHN0YXJ0IGFycmF5IG9mIHBvaW50ZXJzXG4gKiBAcGFyYW0ge0FycmF5fSBlbmQgYXJyYXkgb2YgcG9pbnRlcnNcbiAqIEByZXR1cm4ge051bWJlcn0gc2NhbGVcbiAqL1xuZnVuY3Rpb24gZ2V0U2NhbGUoc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBnZXREaXN0YW5jZShlbmRbMF0sIGVuZFsxXSwgUFJPUFNfQ0xJRU5UX1hZKSAvIGdldERpc3RhbmNlKHN0YXJ0WzBdLCBzdGFydFsxXSwgUFJPUFNfQ0xJRU5UX1hZKTtcbn1cblxudmFyIE1PVVNFX0lOUFVUX01BUCA9IHtcbiAgICBtb3VzZWRvd246IElOUFVUX1NUQVJULFxuICAgIG1vdXNlbW92ZTogSU5QVVRfTU9WRSxcbiAgICBtb3VzZXVwOiBJTlBVVF9FTkRcbn07XG5cbnZhciBNT1VTRV9FTEVNRU5UX0VWRU5UUyA9ICdtb3VzZWRvd24nO1xudmFyIE1PVVNFX1dJTkRPV19FVkVOVFMgPSAnbW91c2Vtb3ZlIG1vdXNldXAnO1xuXG4vKipcbiAqIE1vdXNlIGV2ZW50cyBpbnB1dFxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBJbnB1dFxuICovXG5mdW5jdGlvbiBNb3VzZUlucHV0KCkge1xuICAgIHRoaXMuZXZFbCA9IE1PVVNFX0VMRU1FTlRfRVZFTlRTO1xuICAgIHRoaXMuZXZXaW4gPSBNT1VTRV9XSU5ET1dfRVZFTlRTO1xuXG4gICAgdGhpcy5wcmVzc2VkID0gZmFsc2U7IC8vIG1vdXNlZG93biBzdGF0ZVxuXG4gICAgSW5wdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChNb3VzZUlucHV0LCBJbnB1dCwge1xuICAgIC8qKlxuICAgICAqIGhhbmRsZSBtb3VzZSBldmVudHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICAgKi9cbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBNRWhhbmRsZXIoZXYpIHtcbiAgICAgICAgdmFyIGV2ZW50VHlwZSA9IE1PVVNFX0lOUFVUX01BUFtldi50eXBlXTtcblxuICAgICAgICAvLyBvbiBzdGFydCB3ZSB3YW50IHRvIGhhdmUgdGhlIGxlZnQgbW91c2UgYnV0dG9uIGRvd25cbiAgICAgICAgaWYgKGV2ZW50VHlwZSAmIElOUFVUX1NUQVJUICYmIGV2LmJ1dHRvbiA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5wcmVzc2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudFR5cGUgJiBJTlBVVF9NT1ZFICYmIGV2LndoaWNoICE9PSAxKSB7XG4gICAgICAgICAgICBldmVudFR5cGUgPSBJTlBVVF9FTkQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBtb3VzZSBtdXN0IGJlIGRvd25cbiAgICAgICAgaWYgKCF0aGlzLnByZXNzZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudFR5cGUgJiBJTlBVVF9FTkQpIHtcbiAgICAgICAgICAgIHRoaXMucHJlc3NlZCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5jYWxsYmFjayh0aGlzLm1hbmFnZXIsIGV2ZW50VHlwZSwge1xuICAgICAgICAgICAgcG9pbnRlcnM6IFtldl0sXG4gICAgICAgICAgICBjaGFuZ2VkUG9pbnRlcnM6IFtldl0sXG4gICAgICAgICAgICBwb2ludGVyVHlwZTogSU5QVVRfVFlQRV9NT1VTRSxcbiAgICAgICAgICAgIHNyY0V2ZW50OiBldlxuICAgICAgICB9KTtcbiAgICB9XG59KTtcblxudmFyIFBPSU5URVJfSU5QVVRfTUFQID0ge1xuICAgIHBvaW50ZXJkb3duOiBJTlBVVF9TVEFSVCxcbiAgICBwb2ludGVybW92ZTogSU5QVVRfTU9WRSxcbiAgICBwb2ludGVydXA6IElOUFVUX0VORCxcbiAgICBwb2ludGVyY2FuY2VsOiBJTlBVVF9DQU5DRUwsXG4gICAgcG9pbnRlcm91dDogSU5QVVRfQ0FOQ0VMXG59O1xuXG4vLyBpbiBJRTEwIHRoZSBwb2ludGVyIHR5cGVzIGlzIGRlZmluZWQgYXMgYW4gZW51bVxudmFyIElFMTBfUE9JTlRFUl9UWVBFX0VOVU0gPSB7XG4gICAgMjogSU5QVVRfVFlQRV9UT1VDSCxcbiAgICAzOiBJTlBVVF9UWVBFX1BFTixcbiAgICA0OiBJTlBVVF9UWVBFX01PVVNFLFxuICAgIDU6IElOUFVUX1RZUEVfS0lORUNUIC8vIHNlZSBodHRwczovL3R3aXR0ZXIuY29tL2phY29icm9zc2kvc3RhdHVzLzQ4MDU5NjQzODQ4OTg5MDgxNlxufTtcblxudmFyIFBPSU5URVJfRUxFTUVOVF9FVkVOVFMgPSAncG9pbnRlcmRvd24nO1xudmFyIFBPSU5URVJfV0lORE9XX0VWRU5UUyA9ICdwb2ludGVybW92ZSBwb2ludGVydXAgcG9pbnRlcmNhbmNlbCc7XG5cbi8vIElFMTAgaGFzIHByZWZpeGVkIHN1cHBvcnQsIGFuZCBjYXNlLXNlbnNpdGl2ZVxuaWYgKHdpbmRvdy5NU1BvaW50ZXJFdmVudCAmJiAhd2luZG93LlBvaW50ZXJFdmVudCkge1xuICAgIFBPSU5URVJfRUxFTUVOVF9FVkVOVFMgPSAnTVNQb2ludGVyRG93bic7XG4gICAgUE9JTlRFUl9XSU5ET1dfRVZFTlRTID0gJ01TUG9pbnRlck1vdmUgTVNQb2ludGVyVXAgTVNQb2ludGVyQ2FuY2VsJztcbn1cblxuLyoqXG4gKiBQb2ludGVyIGV2ZW50cyBpbnB1dFxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBJbnB1dFxuICovXG5mdW5jdGlvbiBQb2ludGVyRXZlbnRJbnB1dCgpIHtcbiAgICB0aGlzLmV2RWwgPSBQT0lOVEVSX0VMRU1FTlRfRVZFTlRTO1xuICAgIHRoaXMuZXZXaW4gPSBQT0lOVEVSX1dJTkRPV19FVkVOVFM7XG5cbiAgICBJbnB1dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgdGhpcy5zdG9yZSA9ICh0aGlzLm1hbmFnZXIuc2Vzc2lvbi5wb2ludGVyRXZlbnRzID0gW10pO1xufVxuXG5pbmhlcml0KFBvaW50ZXJFdmVudElucHV0LCBJbnB1dCwge1xuICAgIC8qKlxuICAgICAqIGhhbmRsZSBtb3VzZSBldmVudHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICAgKi9cbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBQRWhhbmRsZXIoZXYpIHtcbiAgICAgICAgdmFyIHN0b3JlID0gdGhpcy5zdG9yZTtcbiAgICAgICAgdmFyIHJlbW92ZVBvaW50ZXIgPSBmYWxzZTtcblxuICAgICAgICB2YXIgZXZlbnRUeXBlTm9ybWFsaXplZCA9IGV2LnR5cGUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCdtcycsICcnKTtcbiAgICAgICAgdmFyIGV2ZW50VHlwZSA9IFBPSU5URVJfSU5QVVRfTUFQW2V2ZW50VHlwZU5vcm1hbGl6ZWRdO1xuICAgICAgICB2YXIgcG9pbnRlclR5cGUgPSBJRTEwX1BPSU5URVJfVFlQRV9FTlVNW2V2LnBvaW50ZXJUeXBlXSB8fCBldi5wb2ludGVyVHlwZTtcblxuICAgICAgICB2YXIgaXNUb3VjaCA9IChwb2ludGVyVHlwZSA9PSBJTlBVVF9UWVBFX1RPVUNIKTtcblxuICAgICAgICAvLyBnZXQgaW5kZXggb2YgdGhlIGV2ZW50IGluIHRoZSBzdG9yZVxuICAgICAgICB2YXIgc3RvcmVJbmRleCA9IGluQXJyYXkoc3RvcmUsIGV2LnBvaW50ZXJJZCwgJ3BvaW50ZXJJZCcpO1xuXG4gICAgICAgIC8vIHN0YXJ0IGFuZCBtb3VzZSBtdXN0IGJlIGRvd25cbiAgICAgICAgaWYgKGV2ZW50VHlwZSAmIElOUFVUX1NUQVJUICYmIChldi5idXR0b24gPT09IDAgfHwgaXNUb3VjaCkpIHtcbiAgICAgICAgICAgIGlmIChzdG9yZUluZGV4IDwgMCkge1xuICAgICAgICAgICAgICAgIHN0b3JlLnB1c2goZXYpO1xuICAgICAgICAgICAgICAgIHN0b3JlSW5kZXggPSBzdG9yZS5sZW5ndGggLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50VHlwZSAmIChJTlBVVF9FTkQgfCBJTlBVVF9DQU5DRUwpKSB7XG4gICAgICAgICAgICByZW1vdmVQb2ludGVyID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGl0IG5vdCBmb3VuZCwgc28gdGhlIHBvaW50ZXIgaGFzbid0IGJlZW4gZG93biAoc28gaXQncyBwcm9iYWJseSBhIGhvdmVyKVxuICAgICAgICBpZiAoc3RvcmVJbmRleCA8IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSB0aGUgZXZlbnQgaW4gdGhlIHN0b3JlXG4gICAgICAgIHN0b3JlW3N0b3JlSW5kZXhdID0gZXY7XG5cbiAgICAgICAgdGhpcy5jYWxsYmFjayh0aGlzLm1hbmFnZXIsIGV2ZW50VHlwZSwge1xuICAgICAgICAgICAgcG9pbnRlcnM6IHN0b3JlLFxuICAgICAgICAgICAgY2hhbmdlZFBvaW50ZXJzOiBbZXZdLFxuICAgICAgICAgICAgcG9pbnRlclR5cGU6IHBvaW50ZXJUeXBlLFxuICAgICAgICAgICAgc3JjRXZlbnQ6IGV2XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChyZW1vdmVQb2ludGVyKSB7XG4gICAgICAgICAgICAvLyByZW1vdmUgZnJvbSB0aGUgc3RvcmVcbiAgICAgICAgICAgIHN0b3JlLnNwbGljZShzdG9yZUluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG52YXIgU0lOR0xFX1RPVUNIX0lOUFVUX01BUCA9IHtcbiAgICB0b3VjaHN0YXJ0OiBJTlBVVF9TVEFSVCxcbiAgICB0b3VjaG1vdmU6IElOUFVUX01PVkUsXG4gICAgdG91Y2hlbmQ6IElOUFVUX0VORCxcbiAgICB0b3VjaGNhbmNlbDogSU5QVVRfQ0FOQ0VMXG59O1xuXG52YXIgU0lOR0xFX1RPVUNIX1RBUkdFVF9FVkVOVFMgPSAndG91Y2hzdGFydCc7XG52YXIgU0lOR0xFX1RPVUNIX1dJTkRPV19FVkVOVFMgPSAndG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgdG91Y2hjYW5jZWwnO1xuXG4vKipcbiAqIFRvdWNoIGV2ZW50cyBpbnB1dFxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBJbnB1dFxuICovXG5mdW5jdGlvbiBTaW5nbGVUb3VjaElucHV0KCkge1xuICAgIHRoaXMuZXZUYXJnZXQgPSBTSU5HTEVfVE9VQ0hfVEFSR0VUX0VWRU5UUztcbiAgICB0aGlzLmV2V2luID0gU0lOR0xFX1RPVUNIX1dJTkRPV19FVkVOVFM7XG4gICAgdGhpcy5zdGFydGVkID0gZmFsc2U7XG5cbiAgICBJbnB1dC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KFNpbmdsZVRvdWNoSW5wdXQsIElucHV0LCB7XG4gICAgaGFuZGxlcjogZnVuY3Rpb24gVEVoYW5kbGVyKGV2KSB7XG4gICAgICAgIHZhciB0eXBlID0gU0lOR0xFX1RPVUNIX0lOUFVUX01BUFtldi50eXBlXTtcblxuICAgICAgICAvLyBzaG91bGQgd2UgaGFuZGxlIHRoZSB0b3VjaCBldmVudHM/XG4gICAgICAgIGlmICh0eXBlID09PSBJTlBVVF9TVEFSVCkge1xuICAgICAgICAgICAgdGhpcy5zdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghdGhpcy5zdGFydGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdG91Y2hlcyA9IG5vcm1hbGl6ZVNpbmdsZVRvdWNoZXMuY2FsbCh0aGlzLCBldiwgdHlwZSk7XG5cbiAgICAgICAgLy8gd2hlbiBkb25lLCByZXNldCB0aGUgc3RhcnRlZCBzdGF0ZVxuICAgICAgICBpZiAodHlwZSAmIChJTlBVVF9FTkQgfCBJTlBVVF9DQU5DRUwpICYmIHRvdWNoZXNbMF0ubGVuZ3RoIC0gdG91Y2hlc1sxXS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5jYWxsYmFjayh0aGlzLm1hbmFnZXIsIHR5cGUsIHtcbiAgICAgICAgICAgIHBvaW50ZXJzOiB0b3VjaGVzWzBdLFxuICAgICAgICAgICAgY2hhbmdlZFBvaW50ZXJzOiB0b3VjaGVzWzFdLFxuICAgICAgICAgICAgcG9pbnRlclR5cGU6IElOUFVUX1RZUEVfVE9VQ0gsXG4gICAgICAgICAgICBzcmNFdmVudDogZXZcbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG5cbi8qKlxuICogQHRoaXMge1RvdWNoSW5wdXR9XG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqIEBwYXJhbSB7TnVtYmVyfSB0eXBlIGZsYWdcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR8QXJyYXl9IFthbGwsIGNoYW5nZWRdXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNpbmdsZVRvdWNoZXMoZXYsIHR5cGUpIHtcbiAgICB2YXIgYWxsID0gdG9BcnJheShldi50b3VjaGVzKTtcbiAgICB2YXIgY2hhbmdlZCA9IHRvQXJyYXkoZXYuY2hhbmdlZFRvdWNoZXMpO1xuXG4gICAgaWYgKHR5cGUgJiAoSU5QVVRfRU5EIHwgSU5QVVRfQ0FOQ0VMKSkge1xuICAgICAgICBhbGwgPSB1bmlxdWVBcnJheShhbGwuY29uY2F0KGNoYW5nZWQpLCAnaWRlbnRpZmllcicsIHRydWUpO1xuICAgIH1cblxuICAgIHJldHVybiBbYWxsLCBjaGFuZ2VkXTtcbn1cblxudmFyIFRPVUNIX0lOUFVUX01BUCA9IHtcbiAgICB0b3VjaHN0YXJ0OiBJTlBVVF9TVEFSVCxcbiAgICB0b3VjaG1vdmU6IElOUFVUX01PVkUsXG4gICAgdG91Y2hlbmQ6IElOUFVUX0VORCxcbiAgICB0b3VjaGNhbmNlbDogSU5QVVRfQ0FOQ0VMXG59O1xuXG52YXIgVE9VQ0hfVEFSR0VUX0VWRU5UUyA9ICd0b3VjaHN0YXJ0IHRvdWNobW92ZSB0b3VjaGVuZCB0b3VjaGNhbmNlbCc7XG5cbi8qKlxuICogTXVsdGktdXNlciB0b3VjaCBldmVudHMgaW5wdXRcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgSW5wdXRcbiAqL1xuZnVuY3Rpb24gVG91Y2hJbnB1dCgpIHtcbiAgICB0aGlzLmV2VGFyZ2V0ID0gVE9VQ0hfVEFSR0VUX0VWRU5UUztcbiAgICB0aGlzLnRhcmdldElkcyA9IHt9O1xuXG4gICAgSW5wdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChUb3VjaElucHV0LCBJbnB1dCwge1xuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIE1URWhhbmRsZXIoZXYpIHtcbiAgICAgICAgdmFyIHR5cGUgPSBUT1VDSF9JTlBVVF9NQVBbZXYudHlwZV07XG4gICAgICAgIHZhciB0b3VjaGVzID0gZ2V0VG91Y2hlcy5jYWxsKHRoaXMsIGV2LCB0eXBlKTtcbiAgICAgICAgaWYgKCF0b3VjaGVzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMubWFuYWdlciwgdHlwZSwge1xuICAgICAgICAgICAgcG9pbnRlcnM6IHRvdWNoZXNbMF0sXG4gICAgICAgICAgICBjaGFuZ2VkUG9pbnRlcnM6IHRvdWNoZXNbMV0sXG4gICAgICAgICAgICBwb2ludGVyVHlwZTogSU5QVVRfVFlQRV9UT1VDSCxcbiAgICAgICAgICAgIHNyY0V2ZW50OiBldlxuICAgICAgICB9KTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBAdGhpcyB7VG91Y2hJbnB1dH1cbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICogQHBhcmFtIHtOdW1iZXJ9IHR5cGUgZmxhZ1xuICogQHJldHVybnMge3VuZGVmaW5lZHxBcnJheX0gW2FsbCwgY2hhbmdlZF1cbiAqL1xuZnVuY3Rpb24gZ2V0VG91Y2hlcyhldiwgdHlwZSkge1xuICAgIHZhciBhbGxUb3VjaGVzID0gdG9BcnJheShldi50b3VjaGVzKTtcbiAgICB2YXIgdGFyZ2V0SWRzID0gdGhpcy50YXJnZXRJZHM7XG5cbiAgICAvLyB3aGVuIHRoZXJlIGlzIG9ubHkgb25lIHRvdWNoLCB0aGUgcHJvY2VzcyBjYW4gYmUgc2ltcGxpZmllZFxuICAgIGlmICh0eXBlICYgKElOUFVUX1NUQVJUIHwgSU5QVVRfTU9WRSkgJiYgYWxsVG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgdGFyZ2V0SWRzW2FsbFRvdWNoZXNbMF0uaWRlbnRpZmllcl0gPSB0cnVlO1xuICAgICAgICByZXR1cm4gW2FsbFRvdWNoZXMsIGFsbFRvdWNoZXNdO1xuICAgIH1cblxuICAgIHZhciBpLFxuICAgICAgICB0YXJnZXRUb3VjaGVzLFxuICAgICAgICBjaGFuZ2VkVG91Y2hlcyA9IHRvQXJyYXkoZXYuY2hhbmdlZFRvdWNoZXMpLFxuICAgICAgICBjaGFuZ2VkVGFyZ2V0VG91Y2hlcyA9IFtdLFxuICAgICAgICB0YXJnZXQgPSB0aGlzLnRhcmdldDtcblxuICAgIC8vIGdldCB0YXJnZXQgdG91Y2hlcyBmcm9tIHRvdWNoZXNcbiAgICB0YXJnZXRUb3VjaGVzID0gYWxsVG91Y2hlcy5maWx0ZXIoZnVuY3Rpb24odG91Y2gpIHtcbiAgICAgICAgcmV0dXJuIGhhc1BhcmVudCh0b3VjaC50YXJnZXQsIHRhcmdldCk7XG4gICAgfSk7XG5cbiAgICAvLyBjb2xsZWN0IHRvdWNoZXNcbiAgICBpZiAodHlwZSA9PT0gSU5QVVRfU1RBUlQpIHtcbiAgICAgICAgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgdGFyZ2V0VG91Y2hlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRhcmdldElkc1t0YXJnZXRUb3VjaGVzW2ldLmlkZW50aWZpZXJdID0gdHJ1ZTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGZpbHRlciBjaGFuZ2VkIHRvdWNoZXMgdG8gb25seSBjb250YWluIHRvdWNoZXMgdGhhdCBleGlzdCBpbiB0aGUgY29sbGVjdGVkIHRhcmdldCBpZHNcbiAgICBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGNoYW5nZWRUb3VjaGVzLmxlbmd0aCkge1xuICAgICAgICBpZiAodGFyZ2V0SWRzW2NoYW5nZWRUb3VjaGVzW2ldLmlkZW50aWZpZXJdKSB7XG4gICAgICAgICAgICBjaGFuZ2VkVGFyZ2V0VG91Y2hlcy5wdXNoKGNoYW5nZWRUb3VjaGVzW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNsZWFudXAgcmVtb3ZlZCB0b3VjaGVzXG4gICAgICAgIGlmICh0eXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkpIHtcbiAgICAgICAgICAgIGRlbGV0ZSB0YXJnZXRJZHNbY2hhbmdlZFRvdWNoZXNbaV0uaWRlbnRpZmllcl07XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cblxuICAgIGlmICghY2hhbmdlZFRhcmdldFRvdWNoZXMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICByZXR1cm4gW1xuICAgICAgICAvLyBtZXJnZSB0YXJnZXRUb3VjaGVzIHdpdGggY2hhbmdlZFRhcmdldFRvdWNoZXMgc28gaXQgY29udGFpbnMgQUxMIHRvdWNoZXMsIGluY2x1ZGluZyAnZW5kJyBhbmQgJ2NhbmNlbCdcbiAgICAgICAgdW5pcXVlQXJyYXkodGFyZ2V0VG91Y2hlcy5jb25jYXQoY2hhbmdlZFRhcmdldFRvdWNoZXMpLCAnaWRlbnRpZmllcicsIHRydWUpLFxuICAgICAgICBjaGFuZ2VkVGFyZ2V0VG91Y2hlc1xuICAgIF07XG59XG5cbi8qKlxuICogQ29tYmluZWQgdG91Y2ggYW5kIG1vdXNlIGlucHV0XG4gKlxuICogVG91Y2ggaGFzIGEgaGlnaGVyIHByaW9yaXR5IHRoZW4gbW91c2UsIGFuZCB3aGlsZSB0b3VjaGluZyBubyBtb3VzZSBldmVudHMgYXJlIGFsbG93ZWQuXG4gKiBUaGlzIGJlY2F1c2UgdG91Y2ggZGV2aWNlcyBhbHNvIGVtaXQgbW91c2UgZXZlbnRzIHdoaWxlIGRvaW5nIGEgdG91Y2guXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBJbnB1dFxuICovXG5cbnZhciBERURVUF9USU1FT1VUID0gMjUwMDtcbnZhciBERURVUF9ESVNUQU5DRSA9IDI1O1xuXG5mdW5jdGlvbiBUb3VjaE1vdXNlSW5wdXQoKSB7XG4gICAgSW5wdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIHZhciBoYW5kbGVyID0gYmluZEZuKHRoaXMuaGFuZGxlciwgdGhpcyk7XG4gICAgdGhpcy50b3VjaCA9IG5ldyBUb3VjaElucHV0KHRoaXMubWFuYWdlciwgaGFuZGxlcik7XG4gICAgdGhpcy5tb3VzZSA9IG5ldyBNb3VzZUlucHV0KHRoaXMubWFuYWdlciwgaGFuZGxlcik7XG5cbiAgICB0aGlzLnByaW1hcnlUb3VjaCA9IG51bGw7XG4gICAgdGhpcy5sYXN0VG91Y2hlcyA9IFtdO1xufVxuXG5pbmhlcml0KFRvdWNoTW91c2VJbnB1dCwgSW5wdXQsIHtcbiAgICAvKipcbiAgICAgKiBoYW5kbGUgbW91c2UgYW5kIHRvdWNoIGV2ZW50c1xuICAgICAqIEBwYXJhbSB7SGFtbWVyfSBtYW5hZ2VyXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGlucHV0RXZlbnRcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXREYXRhXG4gICAgICovXG4gICAgaGFuZGxlcjogZnVuY3Rpb24gVE1FaGFuZGxlcihtYW5hZ2VyLCBpbnB1dEV2ZW50LCBpbnB1dERhdGEpIHtcbiAgICAgICAgdmFyIGlzVG91Y2ggPSAoaW5wdXREYXRhLnBvaW50ZXJUeXBlID09IElOUFVUX1RZUEVfVE9VQ0gpLFxuICAgICAgICAgICAgaXNNb3VzZSA9IChpbnB1dERhdGEucG9pbnRlclR5cGUgPT0gSU5QVVRfVFlQRV9NT1VTRSk7XG5cbiAgICAgICAgaWYgKGlzTW91c2UgJiYgaW5wdXREYXRhLnNvdXJjZUNhcGFiaWxpdGllcyAmJiBpbnB1dERhdGEuc291cmNlQ2FwYWJpbGl0aWVzLmZpcmVzVG91Y2hFdmVudHMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHdoZW4gd2UncmUgaW4gYSB0b3VjaCBldmVudCwgcmVjb3JkIHRvdWNoZXMgdG8gIGRlLWR1cGUgc3ludGhldGljIG1vdXNlIGV2ZW50XG4gICAgICAgIGlmIChpc1RvdWNoKSB7XG4gICAgICAgICAgICByZWNvcmRUb3VjaGVzLmNhbGwodGhpcywgaW5wdXRFdmVudCwgaW5wdXREYXRhKTtcbiAgICAgICAgfSBlbHNlIGlmIChpc01vdXNlICYmIGlzU3ludGhldGljRXZlbnQuY2FsbCh0aGlzLCBpbnB1dERhdGEpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbGxiYWNrKG1hbmFnZXIsIGlucHV0RXZlbnQsIGlucHV0RGF0YSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJlbW92ZSB0aGUgZXZlbnQgbGlzdGVuZXJzXG4gICAgICovXG4gICAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy50b3VjaC5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMubW91c2UuZGVzdHJveSgpO1xuICAgIH1cbn0pO1xuXG5mdW5jdGlvbiByZWNvcmRUb3VjaGVzKGV2ZW50VHlwZSwgZXZlbnREYXRhKSB7XG4gICAgaWYgKGV2ZW50VHlwZSAmIElOUFVUX1NUQVJUKSB7XG4gICAgICAgIHRoaXMucHJpbWFyeVRvdWNoID0gZXZlbnREYXRhLmNoYW5nZWRQb2ludGVyc1swXS5pZGVudGlmaWVyO1xuICAgICAgICBzZXRMYXN0VG91Y2guY2FsbCh0aGlzLCBldmVudERhdGEpO1xuICAgIH0gZWxzZSBpZiAoZXZlbnRUeXBlICYgKElOUFVUX0VORCB8IElOUFVUX0NBTkNFTCkpIHtcbiAgICAgICAgc2V0TGFzdFRvdWNoLmNhbGwodGhpcywgZXZlbnREYXRhKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNldExhc3RUb3VjaChldmVudERhdGEpIHtcbiAgICB2YXIgdG91Y2ggPSBldmVudERhdGEuY2hhbmdlZFBvaW50ZXJzWzBdO1xuXG4gICAgaWYgKHRvdWNoLmlkZW50aWZpZXIgPT09IHRoaXMucHJpbWFyeVRvdWNoKSB7XG4gICAgICAgIHZhciBsYXN0VG91Y2ggPSB7eDogdG91Y2guY2xpZW50WCwgeTogdG91Y2guY2xpZW50WX07XG4gICAgICAgIHRoaXMubGFzdFRvdWNoZXMucHVzaChsYXN0VG91Y2gpO1xuICAgICAgICB2YXIgbHRzID0gdGhpcy5sYXN0VG91Y2hlcztcbiAgICAgICAgdmFyIHJlbW92ZUxhc3RUb3VjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGkgPSBsdHMuaW5kZXhPZihsYXN0VG91Y2gpO1xuICAgICAgICAgICAgaWYgKGkgPiAtMSkge1xuICAgICAgICAgICAgICAgIGx0cy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHNldFRpbWVvdXQocmVtb3ZlTGFzdFRvdWNoLCBERURVUF9USU1FT1VUKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGlzU3ludGhldGljRXZlbnQoZXZlbnREYXRhKSB7XG4gICAgdmFyIHggPSBldmVudERhdGEuc3JjRXZlbnQuY2xpZW50WCwgeSA9IGV2ZW50RGF0YS5zcmNFdmVudC5jbGllbnRZO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sYXN0VG91Y2hlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgdCA9IHRoaXMubGFzdFRvdWNoZXNbaV07XG4gICAgICAgIHZhciBkeCA9IE1hdGguYWJzKHggLSB0LngpLCBkeSA9IE1hdGguYWJzKHkgLSB0LnkpO1xuICAgICAgICBpZiAoZHggPD0gREVEVVBfRElTVEFOQ0UgJiYgZHkgPD0gREVEVVBfRElTVEFOQ0UpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxudmFyIFBSRUZJWEVEX1RPVUNIX0FDVElPTiA9IHByZWZpeGVkKFRFU1RfRUxFTUVOVC5zdHlsZSwgJ3RvdWNoQWN0aW9uJyk7XG52YXIgTkFUSVZFX1RPVUNIX0FDVElPTiA9IFBSRUZJWEVEX1RPVUNIX0FDVElPTiAhPT0gdW5kZWZpbmVkO1xuXG4vLyBtYWdpY2FsIHRvdWNoQWN0aW9uIHZhbHVlXG52YXIgVE9VQ0hfQUNUSU9OX0NPTVBVVEUgPSAnY29tcHV0ZSc7XG52YXIgVE9VQ0hfQUNUSU9OX0FVVE8gPSAnYXV0byc7XG52YXIgVE9VQ0hfQUNUSU9OX01BTklQVUxBVElPTiA9ICdtYW5pcHVsYXRpb24nOyAvLyBub3QgaW1wbGVtZW50ZWRcbnZhciBUT1VDSF9BQ1RJT05fTk9ORSA9ICdub25lJztcbnZhciBUT1VDSF9BQ1RJT05fUEFOX1ggPSAncGFuLXgnO1xudmFyIFRPVUNIX0FDVElPTl9QQU5fWSA9ICdwYW4teSc7XG52YXIgVE9VQ0hfQUNUSU9OX01BUCA9IGdldFRvdWNoQWN0aW9uUHJvcHMoKTtcblxuLyoqXG4gKiBUb3VjaCBBY3Rpb25cbiAqIHNldHMgdGhlIHRvdWNoQWN0aW9uIHByb3BlcnR5IG9yIHVzZXMgdGhlIGpzIGFsdGVybmF0aXZlXG4gKiBAcGFyYW0ge01hbmFnZXJ9IG1hbmFnZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFRvdWNoQWN0aW9uKG1hbmFnZXIsIHZhbHVlKSB7XG4gICAgdGhpcy5tYW5hZ2VyID0gbWFuYWdlcjtcbiAgICB0aGlzLnNldCh2YWx1ZSk7XG59XG5cblRvdWNoQWN0aW9uLnByb3RvdHlwZSA9IHtcbiAgICAvKipcbiAgICAgKiBzZXQgdGhlIHRvdWNoQWN0aW9uIHZhbHVlIG9uIHRoZSBlbGVtZW50IG9yIGVuYWJsZSB0aGUgcG9seWZpbGxcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAgICAgKi9cbiAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIC8vIGZpbmQgb3V0IHRoZSB0b3VjaC1hY3Rpb24gYnkgdGhlIGV2ZW50IGhhbmRsZXJzXG4gICAgICAgIGlmICh2YWx1ZSA9PSBUT1VDSF9BQ1RJT05fQ09NUFVURSkge1xuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLmNvbXB1dGUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChOQVRJVkVfVE9VQ0hfQUNUSU9OICYmIHRoaXMubWFuYWdlci5lbGVtZW50LnN0eWxlICYmIFRPVUNIX0FDVElPTl9NQVBbdmFsdWVdKSB7XG4gICAgICAgICAgICB0aGlzLm1hbmFnZXIuZWxlbWVudC5zdHlsZVtQUkVGSVhFRF9UT1VDSF9BQ1RJT05dID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hY3Rpb25zID0gdmFsdWUudG9Mb3dlckNhc2UoKS50cmltKCk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGp1c3QgcmUtc2V0IHRoZSB0b3VjaEFjdGlvbiB2YWx1ZVxuICAgICAqL1xuICAgIHVwZGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuc2V0KHRoaXMubWFuYWdlci5vcHRpb25zLnRvdWNoQWN0aW9uKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogY29tcHV0ZSB0aGUgdmFsdWUgZm9yIHRoZSB0b3VjaEFjdGlvbiBwcm9wZXJ0eSBiYXNlZCBvbiB0aGUgcmVjb2duaXplcidzIHNldHRpbmdzXG4gICAgICogQHJldHVybnMge1N0cmluZ30gdmFsdWVcbiAgICAgKi9cbiAgICBjb21wdXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGFjdGlvbnMgPSBbXTtcbiAgICAgICAgZWFjaCh0aGlzLm1hbmFnZXIucmVjb2duaXplcnMsIGZ1bmN0aW9uKHJlY29nbml6ZXIpIHtcbiAgICAgICAgICAgIGlmIChib29sT3JGbihyZWNvZ25pemVyLm9wdGlvbnMuZW5hYmxlLCBbcmVjb2duaXplcl0pKSB7XG4gICAgICAgICAgICAgICAgYWN0aW9ucyA9IGFjdGlvbnMuY29uY2F0KHJlY29nbml6ZXIuZ2V0VG91Y2hBY3Rpb24oKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2xlYW5Ub3VjaEFjdGlvbnMoYWN0aW9ucy5qb2luKCcgJykpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiB0aGlzIG1ldGhvZCBpcyBjYWxsZWQgb24gZWFjaCBpbnB1dCBjeWNsZSBhbmQgcHJvdmlkZXMgdGhlIHByZXZlbnRpbmcgb2YgdGhlIGJyb3dzZXIgYmVoYXZpb3JcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKi9cbiAgICBwcmV2ZW50RGVmYXVsdHM6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBzcmNFdmVudCA9IGlucHV0LnNyY0V2ZW50O1xuICAgICAgICB2YXIgZGlyZWN0aW9uID0gaW5wdXQub2Zmc2V0RGlyZWN0aW9uO1xuXG4gICAgICAgIC8vIGlmIHRoZSB0b3VjaCBhY3Rpb24gZGlkIHByZXZlbnRlZCBvbmNlIHRoaXMgc2Vzc2lvblxuICAgICAgICBpZiAodGhpcy5tYW5hZ2VyLnNlc3Npb24ucHJldmVudGVkKSB7XG4gICAgICAgICAgICBzcmNFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGFjdGlvbnMgPSB0aGlzLmFjdGlvbnM7XG4gICAgICAgIHZhciBoYXNOb25lID0gaW5TdHIoYWN0aW9ucywgVE9VQ0hfQUNUSU9OX05PTkUpICYmICFUT1VDSF9BQ1RJT05fTUFQW1RPVUNIX0FDVElPTl9OT05FXTtcbiAgICAgICAgdmFyIGhhc1BhblkgPSBpblN0cihhY3Rpb25zLCBUT1VDSF9BQ1RJT05fUEFOX1kpICYmICFUT1VDSF9BQ1RJT05fTUFQW1RPVUNIX0FDVElPTl9QQU5fWV07XG4gICAgICAgIHZhciBoYXNQYW5YID0gaW5TdHIoYWN0aW9ucywgVE9VQ0hfQUNUSU9OX1BBTl9YKSAmJiAhVE9VQ0hfQUNUSU9OX01BUFtUT1VDSF9BQ1RJT05fUEFOX1hdO1xuXG4gICAgICAgIGlmIChoYXNOb25lKSB7XG4gICAgICAgICAgICAvL2RvIG5vdCBwcmV2ZW50IGRlZmF1bHRzIGlmIHRoaXMgaXMgYSB0YXAgZ2VzdHVyZVxuXG4gICAgICAgICAgICB2YXIgaXNUYXBQb2ludGVyID0gaW5wdXQucG9pbnRlcnMubGVuZ3RoID09PSAxO1xuICAgICAgICAgICAgdmFyIGlzVGFwTW92ZW1lbnQgPSBpbnB1dC5kaXN0YW5jZSA8IDI7XG4gICAgICAgICAgICB2YXIgaXNUYXBUb3VjaFRpbWUgPSBpbnB1dC5kZWx0YVRpbWUgPCAyNTA7XG5cbiAgICAgICAgICAgIGlmIChpc1RhcFBvaW50ZXIgJiYgaXNUYXBNb3ZlbWVudCAmJiBpc1RhcFRvdWNoVGltZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChoYXNQYW5YICYmIGhhc1BhblkpIHtcbiAgICAgICAgICAgIC8vIGBwYW4teCBwYW4teWAgbWVhbnMgYnJvd3NlciBoYW5kbGVzIGFsbCBzY3JvbGxpbmcvcGFubmluZywgZG8gbm90IHByZXZlbnRcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChoYXNOb25lIHx8XG4gICAgICAgICAgICAoaGFzUGFuWSAmJiBkaXJlY3Rpb24gJiBESVJFQ1RJT05fSE9SSVpPTlRBTCkgfHxcbiAgICAgICAgICAgIChoYXNQYW5YICYmIGRpcmVjdGlvbiAmIERJUkVDVElPTl9WRVJUSUNBTCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZXZlbnRTcmMoc3JjRXZlbnQpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGNhbGwgcHJldmVudERlZmF1bHQgdG8gcHJldmVudCB0aGUgYnJvd3NlcidzIGRlZmF1bHQgYmVoYXZpb3IgKHNjcm9sbGluZyBpbiBtb3N0IGNhc2VzKVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzcmNFdmVudFxuICAgICAqL1xuICAgIHByZXZlbnRTcmM6IGZ1bmN0aW9uKHNyY0V2ZW50KSB7XG4gICAgICAgIHRoaXMubWFuYWdlci5zZXNzaW9uLnByZXZlbnRlZCA9IHRydWU7XG4gICAgICAgIHNyY0V2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxufTtcblxuLyoqXG4gKiB3aGVuIHRoZSB0b3VjaEFjdGlvbnMgYXJlIGNvbGxlY3RlZCB0aGV5IGFyZSBub3QgYSB2YWxpZCB2YWx1ZSwgc28gd2UgbmVlZCB0byBjbGVhbiB0aGluZ3MgdXAuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBhY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZnVuY3Rpb24gY2xlYW5Ub3VjaEFjdGlvbnMoYWN0aW9ucykge1xuICAgIC8vIG5vbmVcbiAgICBpZiAoaW5TdHIoYWN0aW9ucywgVE9VQ0hfQUNUSU9OX05PTkUpKSB7XG4gICAgICAgIHJldHVybiBUT1VDSF9BQ1RJT05fTk9ORTtcbiAgICB9XG5cbiAgICB2YXIgaGFzUGFuWCA9IGluU3RyKGFjdGlvbnMsIFRPVUNIX0FDVElPTl9QQU5fWCk7XG4gICAgdmFyIGhhc1BhblkgPSBpblN0cihhY3Rpb25zLCBUT1VDSF9BQ1RJT05fUEFOX1kpO1xuXG4gICAgLy8gaWYgYm90aCBwYW4teCBhbmQgcGFuLXkgYXJlIHNldCAoZGlmZmVyZW50IHJlY29nbml6ZXJzXG4gICAgLy8gZm9yIGRpZmZlcmVudCBkaXJlY3Rpb25zLCBlLmcuIGhvcml6b250YWwgcGFuIGJ1dCB2ZXJ0aWNhbCBzd2lwZT8pXG4gICAgLy8gd2UgbmVlZCBub25lIChhcyBvdGhlcndpc2Ugd2l0aCBwYW4teCBwYW4teSBjb21iaW5lZCBub25lIG9mIHRoZXNlXG4gICAgLy8gcmVjb2duaXplcnMgd2lsbCB3b3JrLCBzaW5jZSB0aGUgYnJvd3NlciB3b3VsZCBoYW5kbGUgYWxsIHBhbm5pbmdcbiAgICBpZiAoaGFzUGFuWCAmJiBoYXNQYW5ZKSB7XG4gICAgICAgIHJldHVybiBUT1VDSF9BQ1RJT05fTk9ORTtcbiAgICB9XG5cbiAgICAvLyBwYW4teCBPUiBwYW4teVxuICAgIGlmIChoYXNQYW5YIHx8IGhhc1BhblkpIHtcbiAgICAgICAgcmV0dXJuIGhhc1BhblggPyBUT1VDSF9BQ1RJT05fUEFOX1ggOiBUT1VDSF9BQ1RJT05fUEFOX1k7XG4gICAgfVxuXG4gICAgLy8gbWFuaXB1bGF0aW9uXG4gICAgaWYgKGluU3RyKGFjdGlvbnMsIFRPVUNIX0FDVElPTl9NQU5JUFVMQVRJT04pKSB7XG4gICAgICAgIHJldHVybiBUT1VDSF9BQ1RJT05fTUFOSVBVTEFUSU9OO1xuICAgIH1cblxuICAgIHJldHVybiBUT1VDSF9BQ1RJT05fQVVUTztcbn1cblxuZnVuY3Rpb24gZ2V0VG91Y2hBY3Rpb25Qcm9wcygpIHtcbiAgICBpZiAoIU5BVElWRV9UT1VDSF9BQ1RJT04pIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgdG91Y2hNYXAgPSB7fTtcbiAgICB2YXIgY3NzU3VwcG9ydHMgPSB3aW5kb3cuQ1NTICYmIHdpbmRvdy5DU1Muc3VwcG9ydHM7XG4gICAgWydhdXRvJywgJ21hbmlwdWxhdGlvbicsICdwYW4teScsICdwYW4teCcsICdwYW4teCBwYW4teScsICdub25lJ10uZm9yRWFjaChmdW5jdGlvbih2YWwpIHtcblxuICAgICAgICAvLyBJZiBjc3Muc3VwcG9ydHMgaXMgbm90IHN1cHBvcnRlZCBidXQgdGhlcmUgaXMgbmF0aXZlIHRvdWNoLWFjdGlvbiBhc3N1bWUgaXQgc3VwcG9ydHNcbiAgICAgICAgLy8gYWxsIHZhbHVlcy4gVGhpcyBpcyB0aGUgY2FzZSBmb3IgSUUgMTAgYW5kIDExLlxuICAgICAgICB0b3VjaE1hcFt2YWxdID0gY3NzU3VwcG9ydHMgPyB3aW5kb3cuQ1NTLnN1cHBvcnRzKCd0b3VjaC1hY3Rpb24nLCB2YWwpIDogdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdG91Y2hNYXA7XG59XG5cbi8qKlxuICogUmVjb2duaXplciBmbG93IGV4cGxhaW5lZDsgKlxuICogQWxsIHJlY29nbml6ZXJzIGhhdmUgdGhlIGluaXRpYWwgc3RhdGUgb2YgUE9TU0lCTEUgd2hlbiBhIGlucHV0IHNlc3Npb24gc3RhcnRzLlxuICogVGhlIGRlZmluaXRpb24gb2YgYSBpbnB1dCBzZXNzaW9uIGlzIGZyb20gdGhlIGZpcnN0IGlucHV0IHVudGlsIHRoZSBsYXN0IGlucHV0LCB3aXRoIGFsbCBpdCdzIG1vdmVtZW50IGluIGl0LiAqXG4gKiBFeGFtcGxlIHNlc3Npb24gZm9yIG1vdXNlLWlucHV0OiBtb3VzZWRvd24gLT4gbW91c2Vtb3ZlIC0+IG1vdXNldXBcbiAqXG4gKiBPbiBlYWNoIHJlY29nbml6aW5nIGN5Y2xlIChzZWUgTWFuYWdlci5yZWNvZ25pemUpIHRoZSAucmVjb2duaXplKCkgbWV0aG9kIGlzIGV4ZWN1dGVkXG4gKiB3aGljaCBkZXRlcm1pbmVzIHdpdGggc3RhdGUgaXQgc2hvdWxkIGJlLlxuICpcbiAqIElmIHRoZSByZWNvZ25pemVyIGhhcyB0aGUgc3RhdGUgRkFJTEVELCBDQU5DRUxMRUQgb3IgUkVDT0dOSVpFRCAoZXF1YWxzIEVOREVEKSwgaXQgaXMgcmVzZXQgdG9cbiAqIFBPU1NJQkxFIHRvIGdpdmUgaXQgYW5vdGhlciBjaGFuZ2Ugb24gdGhlIG5leHQgY3ljbGUuXG4gKlxuICogICAgICAgICAgICAgICBQb3NzaWJsZVxuICogICAgICAgICAgICAgICAgICB8XG4gKiAgICAgICAgICAgICstLS0tLSstLS0tLS0tLS0tLS0tLS0rXG4gKiAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgICAgICstLS0tLSstLS0tLSsgICAgICAgICAgICAgICB8XG4gKiAgICAgIHwgICAgICAgICAgIHwgICAgICAgICAgICAgICB8XG4gKiAgIEZhaWxlZCAgICAgIENhbmNlbGxlZCAgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgKy0tLS0tLS0rLS0tLS0tK1xuICogICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgIHxcbiAqICAgICAgICAgICAgICAgICAgICAgIFJlY29nbml6ZWQgICAgICAgQmVnYW5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhbmdlZFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVuZGVkL1JlY29nbml6ZWRcbiAqL1xudmFyIFNUQVRFX1BPU1NJQkxFID0gMTtcbnZhciBTVEFURV9CRUdBTiA9IDI7XG52YXIgU1RBVEVfQ0hBTkdFRCA9IDQ7XG52YXIgU1RBVEVfRU5ERUQgPSA4O1xudmFyIFNUQVRFX1JFQ09HTklaRUQgPSBTVEFURV9FTkRFRDtcbnZhciBTVEFURV9DQU5DRUxMRUQgPSAxNjtcbnZhciBTVEFURV9GQUlMRUQgPSAzMjtcblxuLyoqXG4gKiBSZWNvZ25pemVyXG4gKiBFdmVyeSByZWNvZ25pemVyIG5lZWRzIHRvIGV4dGVuZCBmcm9tIHRoaXMgY2xhc3MuXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIFJlY29nbml6ZXIob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IGFzc2lnbih7fSwgdGhpcy5kZWZhdWx0cywgb3B0aW9ucyB8fCB7fSk7XG5cbiAgICB0aGlzLmlkID0gdW5pcXVlSWQoKTtcblxuICAgIHRoaXMubWFuYWdlciA9IG51bGw7XG5cbiAgICAvLyBkZWZhdWx0IGlzIGVuYWJsZSB0cnVlXG4gICAgdGhpcy5vcHRpb25zLmVuYWJsZSA9IGlmVW5kZWZpbmVkKHRoaXMub3B0aW9ucy5lbmFibGUsIHRydWUpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IFNUQVRFX1BPU1NJQkxFO1xuXG4gICAgdGhpcy5zaW11bHRhbmVvdXMgPSB7fTtcbiAgICB0aGlzLnJlcXVpcmVGYWlsID0gW107XG59XG5cblJlY29nbml6ZXIucHJvdG90eXBlID0ge1xuICAgIC8qKlxuICAgICAqIEB2aXJ0dWFsXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICBkZWZhdWx0czoge30sXG5cbiAgICAvKipcbiAgICAgKiBzZXQgb3B0aW9uc1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7UmVjb2duaXplcn1cbiAgICAgKi9cbiAgICBzZXQ6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy8gYWxzbyB1cGRhdGUgdGhlIHRvdWNoQWN0aW9uLCBpbiBjYXNlIHNvbWV0aGluZyBjaGFuZ2VkIGFib3V0IHRoZSBkaXJlY3Rpb25zL2VuYWJsZWQgc3RhdGVcbiAgICAgICAgdGhpcy5tYW5hZ2VyICYmIHRoaXMubWFuYWdlci50b3VjaEFjdGlvbi51cGRhdGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJlY29nbml6ZSBzaW11bHRhbmVvdXMgd2l0aCBhbiBvdGhlciByZWNvZ25pemVyLlxuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gb3RoZXJSZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge1JlY29nbml6ZXJ9IHRoaXNcbiAgICAgKi9cbiAgICByZWNvZ25pemVXaXRoOiBmdW5jdGlvbihvdGhlclJlY29nbml6ZXIpIHtcbiAgICAgICAgaWYgKGludm9rZUFycmF5QXJnKG90aGVyUmVjb2duaXplciwgJ3JlY29nbml6ZVdpdGgnLCB0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2ltdWx0YW5lb3VzID0gdGhpcy5zaW11bHRhbmVvdXM7XG4gICAgICAgIG90aGVyUmVjb2duaXplciA9IGdldFJlY29nbml6ZXJCeU5hbWVJZk1hbmFnZXIob3RoZXJSZWNvZ25pemVyLCB0aGlzKTtcbiAgICAgICAgaWYgKCFzaW11bHRhbmVvdXNbb3RoZXJSZWNvZ25pemVyLmlkXSkge1xuICAgICAgICAgICAgc2ltdWx0YW5lb3VzW290aGVyUmVjb2duaXplci5pZF0gPSBvdGhlclJlY29nbml6ZXI7XG4gICAgICAgICAgICBvdGhlclJlY29nbml6ZXIucmVjb2duaXplV2l0aCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogZHJvcCB0aGUgc2ltdWx0YW5lb3VzIGxpbmsuIGl0IGRvZXNudCByZW1vdmUgdGhlIGxpbmsgb24gdGhlIG90aGVyIHJlY29nbml6ZXIuXG4gICAgICogQHBhcmFtIHtSZWNvZ25pemVyfSBvdGhlclJlY29nbml6ZXJcbiAgICAgKiBAcmV0dXJucyB7UmVjb2duaXplcn0gdGhpc1xuICAgICAqL1xuICAgIGRyb3BSZWNvZ25pemVXaXRoOiBmdW5jdGlvbihvdGhlclJlY29nbml6ZXIpIHtcbiAgICAgICAgaWYgKGludm9rZUFycmF5QXJnKG90aGVyUmVjb2duaXplciwgJ2Ryb3BSZWNvZ25pemVXaXRoJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgb3RoZXJSZWNvZ25pemVyID0gZ2V0UmVjb2duaXplckJ5TmFtZUlmTWFuYWdlcihvdGhlclJlY29nbml6ZXIsIHRoaXMpO1xuICAgICAgICBkZWxldGUgdGhpcy5zaW11bHRhbmVvdXNbb3RoZXJSZWNvZ25pemVyLmlkXTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJlY29nbml6ZXIgY2FuIG9ubHkgcnVuIHdoZW4gYW4gb3RoZXIgaXMgZmFpbGluZ1xuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gb3RoZXJSZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge1JlY29nbml6ZXJ9IHRoaXNcbiAgICAgKi9cbiAgICByZXF1aXJlRmFpbHVyZTogZnVuY3Rpb24ob3RoZXJSZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhvdGhlclJlY29nbml6ZXIsICdyZXF1aXJlRmFpbHVyZScsIHRoaXMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZXF1aXJlRmFpbCA9IHRoaXMucmVxdWlyZUZhaWw7XG4gICAgICAgIG90aGVyUmVjb2duaXplciA9IGdldFJlY29nbml6ZXJCeU5hbWVJZk1hbmFnZXIob3RoZXJSZWNvZ25pemVyLCB0aGlzKTtcbiAgICAgICAgaWYgKGluQXJyYXkocmVxdWlyZUZhaWwsIG90aGVyUmVjb2duaXplcikgPT09IC0xKSB7XG4gICAgICAgICAgICByZXF1aXJlRmFpbC5wdXNoKG90aGVyUmVjb2duaXplcik7XG4gICAgICAgICAgICBvdGhlclJlY29nbml6ZXIucmVxdWlyZUZhaWx1cmUodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGRyb3AgdGhlIHJlcXVpcmVGYWlsdXJlIGxpbmsuIGl0IGRvZXMgbm90IHJlbW92ZSB0aGUgbGluayBvbiB0aGUgb3RoZXIgcmVjb2duaXplci5cbiAgICAgKiBAcGFyYW0ge1JlY29nbml6ZXJ9IG90aGVyUmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfSB0aGlzXG4gICAgICovXG4gICAgZHJvcFJlcXVpcmVGYWlsdXJlOiBmdW5jdGlvbihvdGhlclJlY29nbml6ZXIpIHtcbiAgICAgICAgaWYgKGludm9rZUFycmF5QXJnKG90aGVyUmVjb2duaXplciwgJ2Ryb3BSZXF1aXJlRmFpbHVyZScsIHRoaXMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIG90aGVyUmVjb2duaXplciA9IGdldFJlY29nbml6ZXJCeU5hbWVJZk1hbmFnZXIob3RoZXJSZWNvZ25pemVyLCB0aGlzKTtcbiAgICAgICAgdmFyIGluZGV4ID0gaW5BcnJheSh0aGlzLnJlcXVpcmVGYWlsLCBvdGhlclJlY29nbml6ZXIpO1xuICAgICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICAgICAgdGhpcy5yZXF1aXJlRmFpbC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBoYXMgcmVxdWlyZSBmYWlsdXJlcyBib29sZWFuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgaGFzUmVxdWlyZUZhaWx1cmVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxdWlyZUZhaWwubGVuZ3RoID4gMDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogaWYgdGhlIHJlY29nbml6ZXIgY2FuIHJlY29nbml6ZSBzaW11bHRhbmVvdXMgd2l0aCBhbiBvdGhlciByZWNvZ25pemVyXG4gICAgICogQHBhcmFtIHtSZWNvZ25pemVyfSBvdGhlclJlY29nbml6ZXJcbiAgICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBjYW5SZWNvZ25pemVXaXRoOiBmdW5jdGlvbihvdGhlclJlY29nbml6ZXIpIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5zaW11bHRhbmVvdXNbb3RoZXJSZWNvZ25pemVyLmlkXTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogWW91IHNob3VsZCB1c2UgYHRyeUVtaXRgIGluc3RlYWQgb2YgYGVtaXRgIGRpcmVjdGx5IHRvIGNoZWNrXG4gICAgICogdGhhdCBhbGwgdGhlIG5lZWRlZCByZWNvZ25pemVycyBoYXMgZmFpbGVkIGJlZm9yZSBlbWl0dGluZy5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaW5wdXRcbiAgICAgKi9cbiAgICBlbWl0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHZhciBzdGF0ZSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgZnVuY3Rpb24gZW1pdChldmVudCkge1xuICAgICAgICAgICAgc2VsZi5tYW5hZ2VyLmVtaXQoZXZlbnQsIGlucHV0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vICdwYW5zdGFydCcgYW5kICdwYW5tb3ZlJ1xuICAgICAgICBpZiAoc3RhdGUgPCBTVEFURV9FTkRFRCkge1xuICAgICAgICAgICAgZW1pdChzZWxmLm9wdGlvbnMuZXZlbnQgKyBzdGF0ZVN0cihzdGF0ZSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZW1pdChzZWxmLm9wdGlvbnMuZXZlbnQpOyAvLyBzaW1wbGUgJ2V2ZW50TmFtZScgZXZlbnRzXG5cbiAgICAgICAgaWYgKGlucHV0LmFkZGl0aW9uYWxFdmVudCkgeyAvLyBhZGRpdGlvbmFsIGV2ZW50KHBhbmxlZnQsIHBhbnJpZ2h0LCBwaW5jaGluLCBwaW5jaG91dC4uLilcbiAgICAgICAgICAgIGVtaXQoaW5wdXQuYWRkaXRpb25hbEV2ZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHBhbmVuZCBhbmQgcGFuY2FuY2VsXG4gICAgICAgIGlmIChzdGF0ZSA+PSBTVEFURV9FTkRFRCkge1xuICAgICAgICAgICAgZW1pdChzZWxmLm9wdGlvbnMuZXZlbnQgKyBzdGF0ZVN0cihzdGF0ZSkpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoZWNrIHRoYXQgYWxsIHRoZSByZXF1aXJlIGZhaWx1cmUgcmVjb2duaXplcnMgaGFzIGZhaWxlZCxcbiAgICAgKiBpZiB0cnVlLCBpdCBlbWl0cyBhIGdlc3R1cmUgZXZlbnQsXG4gICAgICogb3RoZXJ3aXNlLCBzZXR1cCB0aGUgc3RhdGUgdG8gRkFJTEVELlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dFxuICAgICAqL1xuICAgIHRyeUVtaXQ6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIGlmICh0aGlzLmNhbkVtaXQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaXQncyBmYWlsaW5nIGFueXdheVxuICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfRkFJTEVEO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBjYW4gd2UgZW1pdD9cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBjYW5FbWl0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB3aGlsZSAoaSA8IHRoaXMucmVxdWlyZUZhaWwubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoISh0aGlzLnJlcXVpcmVGYWlsW2ldLnN0YXRlICYgKFNUQVRFX0ZBSUxFRCB8IFNUQVRFX1BPU1NJQkxFKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHVwZGF0ZSB0aGUgcmVjb2duaXplclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dERhdGFcbiAgICAgKi9cbiAgICByZWNvZ25pemU6IGZ1bmN0aW9uKGlucHV0RGF0YSkge1xuICAgICAgICAvLyBtYWtlIGEgbmV3IGNvcHkgb2YgdGhlIGlucHV0RGF0YVxuICAgICAgICAvLyBzbyB3ZSBjYW4gY2hhbmdlIHRoZSBpbnB1dERhdGEgd2l0aG91dCBtZXNzaW5nIHVwIHRoZSBvdGhlciByZWNvZ25pemVyc1xuICAgICAgICB2YXIgaW5wdXREYXRhQ2xvbmUgPSBhc3NpZ24oe30sIGlucHV0RGF0YSk7XG5cbiAgICAgICAgLy8gaXMgaXMgZW5hYmxlZCBhbmQgYWxsb3cgcmVjb2duaXppbmc/XG4gICAgICAgIGlmICghYm9vbE9yRm4odGhpcy5vcHRpb25zLmVuYWJsZSwgW3RoaXMsIGlucHV0RGF0YUNsb25lXSkpIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBTVEFURV9GQUlMRUQ7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyByZXNldCB3aGVuIHdlJ3ZlIHJlYWNoZWQgdGhlIGVuZFxuICAgICAgICBpZiAodGhpcy5zdGF0ZSAmIChTVEFURV9SRUNPR05JWkVEIHwgU1RBVEVfQ0FOQ0VMTEVEIHwgU1RBVEVfRkFJTEVEKSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFNUQVRFX1BPU1NJQkxFO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucHJvY2VzcyhpbnB1dERhdGFDbG9uZSk7XG5cbiAgICAgICAgLy8gdGhlIHJlY29nbml6ZXIgaGFzIHJlY29nbml6ZWQgYSBnZXN0dXJlXG4gICAgICAgIC8vIHNvIHRyaWdnZXIgYW4gZXZlbnRcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgJiAoU1RBVEVfQkVHQU4gfCBTVEFURV9DSEFOR0VEIHwgU1RBVEVfRU5ERUQgfCBTVEFURV9DQU5DRUxMRUQpKSB7XG4gICAgICAgICAgICB0aGlzLnRyeUVtaXQoaW5wdXREYXRhQ2xvbmUpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJldHVybiB0aGUgc3RhdGUgb2YgdGhlIHJlY29nbml6ZXJcbiAgICAgKiB0aGUgYWN0dWFsIHJlY29nbml6aW5nIGhhcHBlbnMgaW4gdGhpcyBtZXRob2RcbiAgICAgKiBAdmlydHVhbFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dERhdGFcbiAgICAgKiBAcmV0dXJucyB7Q29uc3R9IFNUQVRFXG4gICAgICovXG4gICAgcHJvY2VzczogZnVuY3Rpb24oaW5wdXREYXRhKSB7IH0sIC8vIGpzaGludCBpZ25vcmU6bGluZVxuXG4gICAgLyoqXG4gICAgICogcmV0dXJuIHRoZSBwcmVmZXJyZWQgdG91Y2gtYWN0aW9uXG4gICAgICogQHZpcnR1YWxcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICovXG4gICAgZ2V0VG91Y2hBY3Rpb246IGZ1bmN0aW9uKCkgeyB9LFxuXG4gICAgLyoqXG4gICAgICogY2FsbGVkIHdoZW4gdGhlIGdlc3R1cmUgaXNuJ3QgYWxsb3dlZCB0byByZWNvZ25pemVcbiAgICAgKiBsaWtlIHdoZW4gYW5vdGhlciBpcyBiZWluZyByZWNvZ25pemVkIG9yIGl0IGlzIGRpc2FibGVkXG4gICAgICogQHZpcnR1YWxcbiAgICAgKi9cbiAgICByZXNldDogZnVuY3Rpb24oKSB7IH1cbn07XG5cbi8qKlxuICogZ2V0IGEgdXNhYmxlIHN0cmluZywgdXNlZCBhcyBldmVudCBwb3N0Zml4XG4gKiBAcGFyYW0ge0NvbnN0fSBzdGF0ZVxuICogQHJldHVybnMge1N0cmluZ30gc3RhdGVcbiAqL1xuZnVuY3Rpb24gc3RhdGVTdHIoc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUgJiBTVEFURV9DQU5DRUxMRUQpIHtcbiAgICAgICAgcmV0dXJuICdjYW5jZWwnO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUgJiBTVEFURV9FTkRFRCkge1xuICAgICAgICByZXR1cm4gJ2VuZCc7XG4gICAgfSBlbHNlIGlmIChzdGF0ZSAmIFNUQVRFX0NIQU5HRUQpIHtcbiAgICAgICAgcmV0dXJuICdtb3ZlJztcbiAgICB9IGVsc2UgaWYgKHN0YXRlICYgU1RBVEVfQkVHQU4pIHtcbiAgICAgICAgcmV0dXJuICdzdGFydCc7XG4gICAgfVxuICAgIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBkaXJlY3Rpb24gY29ucyB0byBzdHJpbmdcbiAqIEBwYXJhbSB7Q29uc3R9IGRpcmVjdGlvblxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZGlyZWN0aW9uU3RyKGRpcmVjdGlvbikge1xuICAgIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX0RPV04pIHtcbiAgICAgICAgcmV0dXJuICdkb3duJztcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBESVJFQ1RJT05fVVApIHtcbiAgICAgICAgcmV0dXJuICd1cCc7XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX0xFRlQpIHtcbiAgICAgICAgcmV0dXJuICdsZWZ0JztcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBESVJFQ1RJT05fUklHSFQpIHtcbiAgICAgICAgcmV0dXJuICdyaWdodCc7XG4gICAgfVxuICAgIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBnZXQgYSByZWNvZ25pemVyIGJ5IG5hbWUgaWYgaXQgaXMgYm91bmQgdG8gYSBtYW5hZ2VyXG4gKiBAcGFyYW0ge1JlY29nbml6ZXJ8U3RyaW5nfSBvdGhlclJlY29nbml6ZXJcbiAqIEBwYXJhbSB7UmVjb2duaXplcn0gcmVjb2duaXplclxuICogQHJldHVybnMge1JlY29nbml6ZXJ9XG4gKi9cbmZ1bmN0aW9uIGdldFJlY29nbml6ZXJCeU5hbWVJZk1hbmFnZXIob3RoZXJSZWNvZ25pemVyLCByZWNvZ25pemVyKSB7XG4gICAgdmFyIG1hbmFnZXIgPSByZWNvZ25pemVyLm1hbmFnZXI7XG4gICAgaWYgKG1hbmFnZXIpIHtcbiAgICAgICAgcmV0dXJuIG1hbmFnZXIuZ2V0KG90aGVyUmVjb2duaXplcik7XG4gICAgfVxuICAgIHJldHVybiBvdGhlclJlY29nbml6ZXI7XG59XG5cbi8qKlxuICogVGhpcyByZWNvZ25pemVyIGlzIGp1c3QgdXNlZCBhcyBhIGJhc2UgZm9yIHRoZSBzaW1wbGUgYXR0cmlidXRlIHJlY29nbml6ZXJzLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIEF0dHJSZWNvZ25pemVyKCkge1xuICAgIFJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuaW5oZXJpdChBdHRyUmVjb2duaXplciwgUmVjb2duaXplciwge1xuICAgIC8qKlxuICAgICAqIEBuYW1lc3BhY2VcbiAgICAgKiBAbWVtYmVyb2YgQXR0clJlY29nbml6ZXJcbiAgICAgKi9cbiAgICBkZWZhdWx0czoge1xuICAgICAgICAvKipcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgKi9cbiAgICAgICAgcG9pbnRlcnM6IDFcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVXNlZCB0byBjaGVjayBpZiBpdCB0aGUgcmVjb2duaXplciByZWNlaXZlcyB2YWxpZCBpbnB1dCwgbGlrZSBpbnB1dC5kaXN0YW5jZSA+IDEwLlxuICAgICAqIEBtZW1iZXJvZiBBdHRyUmVjb2duaXplclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dFxuICAgICAqIEByZXR1cm5zIHtCb29sZWFufSByZWNvZ25pemVkXG4gICAgICovXG4gICAgYXR0clRlc3Q6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBvcHRpb25Qb2ludGVycyA9IHRoaXMub3B0aW9ucy5wb2ludGVycztcbiAgICAgICAgcmV0dXJuIG9wdGlvblBvaW50ZXJzID09PSAwIHx8IGlucHV0LnBvaW50ZXJzLmxlbmd0aCA9PT0gb3B0aW9uUG9pbnRlcnM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFByb2Nlc3MgdGhlIGlucHV0IGFuZCByZXR1cm4gdGhlIHN0YXRlIGZvciB0aGUgcmVjb2duaXplclxuICAgICAqIEBtZW1iZXJvZiBBdHRyUmVjb2duaXplclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dFxuICAgICAqIEByZXR1cm5zIHsqfSBTdGF0ZVxuICAgICAqL1xuICAgIHByb2Nlc3M6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBzdGF0ZSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIHZhciBldmVudFR5cGUgPSBpbnB1dC5ldmVudFR5cGU7XG5cbiAgICAgICAgdmFyIGlzUmVjb2duaXplZCA9IHN0YXRlICYgKFNUQVRFX0JFR0FOIHwgU1RBVEVfQ0hBTkdFRCk7XG4gICAgICAgIHZhciBpc1ZhbGlkID0gdGhpcy5hdHRyVGVzdChpbnB1dCk7XG5cbiAgICAgICAgLy8gb24gY2FuY2VsIGlucHV0IGFuZCB3ZSd2ZSByZWNvZ25pemVkIGJlZm9yZSwgcmV0dXJuIFNUQVRFX0NBTkNFTExFRFxuICAgICAgICBpZiAoaXNSZWNvZ25pemVkICYmIChldmVudFR5cGUgJiBJTlBVVF9DQU5DRUwgfHwgIWlzVmFsaWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhdGUgfCBTVEFURV9DQU5DRUxMRUQ7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNSZWNvZ25pemVkIHx8IGlzVmFsaWQpIHtcbiAgICAgICAgICAgIGlmIChldmVudFR5cGUgJiBJTlBVVF9FTkQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGUgfCBTVEFURV9FTkRFRDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIShzdGF0ZSAmIFNUQVRFX0JFR0FOKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9CRUdBTjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzdGF0ZSB8IFNUQVRFX0NIQU5HRUQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNUQVRFX0ZBSUxFRDtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBQYW5cbiAqIFJlY29nbml6ZWQgd2hlbiB0aGUgcG9pbnRlciBpcyBkb3duIGFuZCBtb3ZlZCBpbiB0aGUgYWxsb3dlZCBkaXJlY3Rpb24uXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIEF0dHJSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIFBhblJlY29nbml6ZXIoKSB7XG4gICAgQXR0clJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIHRoaXMucFggPSBudWxsO1xuICAgIHRoaXMucFkgPSBudWxsO1xufVxuXG5pbmhlcml0KFBhblJlY29nbml6ZXIsIEF0dHJSZWNvZ25pemVyLCB7XG4gICAgLyoqXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqIEBtZW1iZXJvZiBQYW5SZWNvZ25pemVyXG4gICAgICovXG4gICAgZGVmYXVsdHM6IHtcbiAgICAgICAgZXZlbnQ6ICdwYW4nLFxuICAgICAgICB0aHJlc2hvbGQ6IDEwLFxuICAgICAgICBwb2ludGVyczogMSxcbiAgICAgICAgZGlyZWN0aW9uOiBESVJFQ1RJT05fQUxMXG4gICAgfSxcblxuICAgIGdldFRvdWNoQWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb247XG4gICAgICAgIHZhciBhY3Rpb25zID0gW107XG4gICAgICAgIGlmIChkaXJlY3Rpb24gJiBESVJFQ1RJT05fSE9SSVpPTlRBTCkge1xuICAgICAgICAgICAgYWN0aW9ucy5wdXNoKFRPVUNIX0FDVElPTl9QQU5fWSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRpcmVjdGlvbiAmIERJUkVDVElPTl9WRVJUSUNBTCkge1xuICAgICAgICAgICAgYWN0aW9ucy5wdXNoKFRPVUNIX0FDVElPTl9QQU5fWCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjdGlvbnM7XG4gICAgfSxcblxuICAgIGRpcmVjdGlvblRlc3Q6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgICAgICB2YXIgaGFzTW92ZWQgPSB0cnVlO1xuICAgICAgICB2YXIgZGlzdGFuY2UgPSBpbnB1dC5kaXN0YW5jZTtcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGlucHV0LmRpcmVjdGlvbjtcbiAgICAgICAgdmFyIHggPSBpbnB1dC5kZWx0YVg7XG4gICAgICAgIHZhciB5ID0gaW5wdXQuZGVsdGFZO1xuXG4gICAgICAgIC8vIGxvY2sgdG8gYXhpcz9cbiAgICAgICAgaWYgKCEoZGlyZWN0aW9uICYgb3B0aW9ucy5kaXJlY3Rpb24pKSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5kaXJlY3Rpb24gJiBESVJFQ1RJT05fSE9SSVpPTlRBTCkge1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbiA9ICh4ID09PSAwKSA/IERJUkVDVElPTl9OT05FIDogKHggPCAwKSA/IERJUkVDVElPTl9MRUZUIDogRElSRUNUSU9OX1JJR0hUO1xuICAgICAgICAgICAgICAgIGhhc01vdmVkID0geCAhPSB0aGlzLnBYO1xuICAgICAgICAgICAgICAgIGRpc3RhbmNlID0gTWF0aC5hYnMoaW5wdXQuZGVsdGFYKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uID0gKHkgPT09IDApID8gRElSRUNUSU9OX05PTkUgOiAoeSA8IDApID8gRElSRUNUSU9OX1VQIDogRElSRUNUSU9OX0RPV047XG4gICAgICAgICAgICAgICAgaGFzTW92ZWQgPSB5ICE9IHRoaXMucFk7XG4gICAgICAgICAgICAgICAgZGlzdGFuY2UgPSBNYXRoLmFicyhpbnB1dC5kZWx0YVkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlucHV0LmRpcmVjdGlvbiA9IGRpcmVjdGlvbjtcbiAgICAgICAgcmV0dXJuIGhhc01vdmVkICYmIGRpc3RhbmNlID4gb3B0aW9ucy50aHJlc2hvbGQgJiYgZGlyZWN0aW9uICYgb3B0aW9ucy5kaXJlY3Rpb247XG4gICAgfSxcblxuICAgIGF0dHJUZXN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gQXR0clJlY29nbml6ZXIucHJvdG90eXBlLmF0dHJUZXN0LmNhbGwodGhpcywgaW5wdXQpICYmXG4gICAgICAgICAgICAodGhpcy5zdGF0ZSAmIFNUQVRFX0JFR0FOIHx8ICghKHRoaXMuc3RhdGUgJiBTVEFURV9CRUdBTikgJiYgdGhpcy5kaXJlY3Rpb25UZXN0KGlucHV0KSkpO1xuICAgIH0sXG5cbiAgICBlbWl0OiBmdW5jdGlvbihpbnB1dCkge1xuXG4gICAgICAgIHRoaXMucFggPSBpbnB1dC5kZWx0YVg7XG4gICAgICAgIHRoaXMucFkgPSBpbnB1dC5kZWx0YVk7XG5cbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGRpcmVjdGlvblN0cihpbnB1dC5kaXJlY3Rpb24pO1xuXG4gICAgICAgIGlmIChkaXJlY3Rpb24pIHtcbiAgICAgICAgICAgIGlucHV0LmFkZGl0aW9uYWxFdmVudCA9IHRoaXMub3B0aW9ucy5ldmVudCArIGRpcmVjdGlvbjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zdXBlci5lbWl0LmNhbGwodGhpcywgaW5wdXQpO1xuICAgIH1cbn0pO1xuXG4vKipcbiAqIFBpbmNoXG4gKiBSZWNvZ25pemVkIHdoZW4gdHdvIG9yIG1vcmUgcG9pbnRlcnMgYXJlIG1vdmluZyB0b3dhcmQgKHpvb20taW4pIG9yIGF3YXkgZnJvbSBlYWNoIG90aGVyICh6b29tLW91dCkuXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIEF0dHJSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIFBpbmNoUmVjb2duaXplcigpIHtcbiAgICBBdHRyUmVjb2duaXplci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KFBpbmNoUmVjb2duaXplciwgQXR0clJlY29nbml6ZXIsIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICogQG1lbWJlcm9mIFBpbmNoUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAncGluY2gnLFxuICAgICAgICB0aHJlc2hvbGQ6IDAsXG4gICAgICAgIHBvaW50ZXJzOiAyXG4gICAgfSxcblxuICAgIGdldFRvdWNoQWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFtUT1VDSF9BQ1RJT05fTk9ORV07XG4gICAgfSxcblxuICAgIGF0dHJUZXN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3VwZXIuYXR0clRlc3QuY2FsbCh0aGlzLCBpbnB1dCkgJiZcbiAgICAgICAgICAgIChNYXRoLmFicyhpbnB1dC5zY2FsZSAtIDEpID4gdGhpcy5vcHRpb25zLnRocmVzaG9sZCB8fCB0aGlzLnN0YXRlICYgU1RBVEVfQkVHQU4pO1xuICAgIH0sXG5cbiAgICBlbWl0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICBpZiAoaW5wdXQuc2NhbGUgIT09IDEpIHtcbiAgICAgICAgICAgIHZhciBpbk91dCA9IGlucHV0LnNjYWxlIDwgMSA/ICdpbicgOiAnb3V0JztcbiAgICAgICAgICAgIGlucHV0LmFkZGl0aW9uYWxFdmVudCA9IHRoaXMub3B0aW9ucy5ldmVudCArIGluT3V0O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3N1cGVyLmVtaXQuY2FsbCh0aGlzLCBpbnB1dCk7XG4gICAgfVxufSk7XG5cbi8qKlxuICogUHJlc3NcbiAqIFJlY29nbml6ZWQgd2hlbiB0aGUgcG9pbnRlciBpcyBkb3duIGZvciB4IG1zIHdpdGhvdXQgYW55IG1vdmVtZW50LlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIFByZXNzUmVjb2duaXplcigpIHtcbiAgICBSZWNvZ25pemVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cbiAgICB0aGlzLl90aW1lciA9IG51bGw7XG4gICAgdGhpcy5faW5wdXQgPSBudWxsO1xufVxuXG5pbmhlcml0KFByZXNzUmVjb2duaXplciwgUmVjb2duaXplciwge1xuICAgIC8qKlxuICAgICAqIEBuYW1lc3BhY2VcbiAgICAgKiBAbWVtYmVyb2YgUHJlc3NSZWNvZ25pemVyXG4gICAgICovXG4gICAgZGVmYXVsdHM6IHtcbiAgICAgICAgZXZlbnQ6ICdwcmVzcycsXG4gICAgICAgIHBvaW50ZXJzOiAxLFxuICAgICAgICB0aW1lOiAyNTEsIC8vIG1pbmltYWwgdGltZSBvZiB0aGUgcG9pbnRlciB0byBiZSBwcmVzc2VkXG4gICAgICAgIHRocmVzaG9sZDogOSAvLyBhIG1pbmltYWwgbW92ZW1lbnQgaXMgb2ssIGJ1dCBrZWVwIGl0IGxvd1xuICAgIH0sXG5cbiAgICBnZXRUb3VjaEFjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbVE9VQ0hfQUNUSU9OX0FVVE9dO1xuICAgIH0sXG5cbiAgICBwcm9jZXNzOiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgICAgdmFyIHZhbGlkUG9pbnRlcnMgPSBpbnB1dC5wb2ludGVycy5sZW5ndGggPT09IG9wdGlvbnMucG9pbnRlcnM7XG4gICAgICAgIHZhciB2YWxpZE1vdmVtZW50ID0gaW5wdXQuZGlzdGFuY2UgPCBvcHRpb25zLnRocmVzaG9sZDtcbiAgICAgICAgdmFyIHZhbGlkVGltZSA9IGlucHV0LmRlbHRhVGltZSA+IG9wdGlvbnMudGltZTtcblxuICAgICAgICB0aGlzLl9pbnB1dCA9IGlucHV0O1xuXG4gICAgICAgIC8vIHdlIG9ubHkgYWxsb3cgbGl0dGxlIG1vdmVtZW50XG4gICAgICAgIC8vIGFuZCB3ZSd2ZSByZWFjaGVkIGFuIGVuZCBldmVudCwgc28gYSB0YXAgaXMgcG9zc2libGVcbiAgICAgICAgaWYgKCF2YWxpZE1vdmVtZW50IHx8ICF2YWxpZFBvaW50ZXJzIHx8IChpbnB1dC5ldmVudFR5cGUgJiAoSU5QVVRfRU5EIHwgSU5QVVRfQ0FOQ0VMKSAmJiAhdmFsaWRUaW1lKSkge1xuICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICB9IGVsc2UgaWYgKGlucHV0LmV2ZW50VHlwZSAmIElOUFVUX1NUQVJUKSB7XG4gICAgICAgICAgICB0aGlzLnJlc2V0KCk7XG4gICAgICAgICAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXRDb250ZXh0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBTVEFURV9SRUNPR05JWkVEO1xuICAgICAgICAgICAgICAgIHRoaXMudHJ5RW1pdCgpO1xuICAgICAgICAgICAgfSwgb3B0aW9ucy50aW1lLCB0aGlzKTtcbiAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5ldmVudFR5cGUgJiBJTlBVVF9FTkQpIHtcbiAgICAgICAgICAgIHJldHVybiBTVEFURV9SRUNPR05JWkVEO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTVEFURV9GQUlMRUQ7XG4gICAgfSxcblxuICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTtcbiAgICB9LFxuXG4gICAgZW1pdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgIT09IFNUQVRFX1JFQ09HTklaRUQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnB1dCAmJiAoaW5wdXQuZXZlbnRUeXBlICYgSU5QVVRfRU5EKSkge1xuICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50ICsgJ3VwJywgaW5wdXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faW5wdXQudGltZVN0YW1wID0gbm93KCk7XG4gICAgICAgICAgICB0aGlzLm1hbmFnZXIuZW1pdCh0aGlzLm9wdGlvbnMuZXZlbnQsIHRoaXMuX2lucHV0KTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG4vKipcbiAqIFJvdGF0ZVxuICogUmVjb2duaXplZCB3aGVuIHR3byBvciBtb3JlIHBvaW50ZXIgYXJlIG1vdmluZyBpbiBhIGNpcmN1bGFyIG1vdGlvbi5cbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgQXR0clJlY29nbml6ZXJcbiAqL1xuZnVuY3Rpb24gUm90YXRlUmVjb2duaXplcigpIHtcbiAgICBBdHRyUmVjb2duaXplci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KFJvdGF0ZVJlY29nbml6ZXIsIEF0dHJSZWNvZ25pemVyLCB7XG4gICAgLyoqXG4gICAgICogQG5hbWVzcGFjZVxuICAgICAqIEBtZW1iZXJvZiBSb3RhdGVSZWNvZ25pemVyXG4gICAgICovXG4gICAgZGVmYXVsdHM6IHtcbiAgICAgICAgZXZlbnQ6ICdyb3RhdGUnLFxuICAgICAgICB0aHJlc2hvbGQ6IDAsXG4gICAgICAgIHBvaW50ZXJzOiAyXG4gICAgfSxcblxuICAgIGdldFRvdWNoQWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFtUT1VDSF9BQ1RJT05fTk9ORV07XG4gICAgfSxcblxuICAgIGF0dHJUZXN0OiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3VwZXIuYXR0clRlc3QuY2FsbCh0aGlzLCBpbnB1dCkgJiZcbiAgICAgICAgICAgIChNYXRoLmFicyhpbnB1dC5yb3RhdGlvbikgPiB0aGlzLm9wdGlvbnMudGhyZXNob2xkIHx8IHRoaXMuc3RhdGUgJiBTVEFURV9CRUdBTik7XG4gICAgfVxufSk7XG5cbi8qKlxuICogU3dpcGVcbiAqIFJlY29nbml6ZWQgd2hlbiB0aGUgcG9pbnRlciBpcyBtb3ZpbmcgZmFzdCAodmVsb2NpdHkpLCB3aXRoIGVub3VnaCBkaXN0YW5jZSBpbiB0aGUgYWxsb3dlZCBkaXJlY3Rpb24uXG4gKiBAY29uc3RydWN0b3JcbiAqIEBleHRlbmRzIEF0dHJSZWNvZ25pemVyXG4gKi9cbmZ1bmN0aW9uIFN3aXBlUmVjb2duaXplcigpIHtcbiAgICBBdHRyUmVjb2duaXplci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5pbmhlcml0KFN3aXBlUmVjb2duaXplciwgQXR0clJlY29nbml6ZXIsIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICogQG1lbWJlcm9mIFN3aXBlUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAnc3dpcGUnLFxuICAgICAgICB0aHJlc2hvbGQ6IDEwLFxuICAgICAgICB2ZWxvY2l0eTogMC4zLFxuICAgICAgICBkaXJlY3Rpb246IERJUkVDVElPTl9IT1JJWk9OVEFMIHwgRElSRUNUSU9OX1ZFUlRJQ0FMLFxuICAgICAgICBwb2ludGVyczogMVxuICAgIH0sXG5cbiAgICBnZXRUb3VjaEFjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBQYW5SZWNvZ25pemVyLnByb3RvdHlwZS5nZXRUb3VjaEFjdGlvbi5jYWxsKHRoaXMpO1xuICAgIH0sXG5cbiAgICBhdHRyVGVzdDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgdmFyIGRpcmVjdGlvbiA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb247XG4gICAgICAgIHZhciB2ZWxvY2l0eTtcblxuICAgICAgICBpZiAoZGlyZWN0aW9uICYgKERJUkVDVElPTl9IT1JJWk9OVEFMIHwgRElSRUNUSU9OX1ZFUlRJQ0FMKSkge1xuICAgICAgICAgICAgdmVsb2NpdHkgPSBpbnB1dC5vdmVyYWxsVmVsb2NpdHk7XG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uICYgRElSRUNUSU9OX0hPUklaT05UQUwpIHtcbiAgICAgICAgICAgIHZlbG9jaXR5ID0gaW5wdXQub3ZlcmFsbFZlbG9jaXR5WDtcbiAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gJiBESVJFQ1RJT05fVkVSVElDQUwpIHtcbiAgICAgICAgICAgIHZlbG9jaXR5ID0gaW5wdXQub3ZlcmFsbFZlbG9jaXR5WTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9zdXBlci5hdHRyVGVzdC5jYWxsKHRoaXMsIGlucHV0KSAmJlxuICAgICAgICAgICAgZGlyZWN0aW9uICYgaW5wdXQub2Zmc2V0RGlyZWN0aW9uICYmXG4gICAgICAgICAgICBpbnB1dC5kaXN0YW5jZSA+IHRoaXMub3B0aW9ucy50aHJlc2hvbGQgJiZcbiAgICAgICAgICAgIGlucHV0Lm1heFBvaW50ZXJzID09IHRoaXMub3B0aW9ucy5wb2ludGVycyAmJlxuICAgICAgICAgICAgYWJzKHZlbG9jaXR5KSA+IHRoaXMub3B0aW9ucy52ZWxvY2l0eSAmJiBpbnB1dC5ldmVudFR5cGUgJiBJTlBVVF9FTkQ7XG4gICAgfSxcblxuICAgIGVtaXQ6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgICAgIHZhciBkaXJlY3Rpb24gPSBkaXJlY3Rpb25TdHIoaW5wdXQub2Zmc2V0RGlyZWN0aW9uKTtcbiAgICAgICAgaWYgKGRpcmVjdGlvbikge1xuICAgICAgICAgICAgdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50ICsgZGlyZWN0aW9uLCBpbnB1dCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm1hbmFnZXIuZW1pdCh0aGlzLm9wdGlvbnMuZXZlbnQsIGlucHV0KTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBBIHRhcCBpcyBlY29nbml6ZWQgd2hlbiB0aGUgcG9pbnRlciBpcyBkb2luZyBhIHNtYWxsIHRhcC9jbGljay4gTXVsdGlwbGUgdGFwcyBhcmUgcmVjb2duaXplZCBpZiB0aGV5IG9jY3VyXG4gKiBiZXR3ZWVuIHRoZSBnaXZlbiBpbnRlcnZhbCBhbmQgcG9zaXRpb24uIFRoZSBkZWxheSBvcHRpb24gY2FuIGJlIHVzZWQgdG8gcmVjb2duaXplIG11bHRpLXRhcHMgd2l0aG91dCBmaXJpbmdcbiAqIGEgc2luZ2xlIHRhcC5cbiAqXG4gKiBUaGUgZXZlbnREYXRhIGZyb20gdGhlIGVtaXR0ZWQgZXZlbnQgY29udGFpbnMgdGhlIHByb3BlcnR5IGB0YXBDb3VudGAsIHdoaWNoIGNvbnRhaW5zIHRoZSBhbW91bnQgb2ZcbiAqIG11bHRpLXRhcHMgYmVpbmcgcmVjb2duaXplZC5cbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgUmVjb2duaXplclxuICovXG5mdW5jdGlvbiBUYXBSZWNvZ25pemVyKCkge1xuICAgIFJlY29nbml6ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIC8vIHByZXZpb3VzIHRpbWUgYW5kIGNlbnRlcixcbiAgICAvLyB1c2VkIGZvciB0YXAgY291bnRpbmdcbiAgICB0aGlzLnBUaW1lID0gZmFsc2U7XG4gICAgdGhpcy5wQ2VudGVyID0gZmFsc2U7XG5cbiAgICB0aGlzLl90aW1lciA9IG51bGw7XG4gICAgdGhpcy5faW5wdXQgPSBudWxsO1xuICAgIHRoaXMuY291bnQgPSAwO1xufVxuXG5pbmhlcml0KFRhcFJlY29nbml6ZXIsIFJlY29nbml6ZXIsIHtcbiAgICAvKipcbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICogQG1lbWJlcm9mIFBpbmNoUmVjb2duaXplclxuICAgICAqL1xuICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIGV2ZW50OiAndGFwJyxcbiAgICAgICAgcG9pbnRlcnM6IDEsXG4gICAgICAgIHRhcHM6IDEsXG4gICAgICAgIGludGVydmFsOiAzMDAsIC8vIG1heCB0aW1lIGJldHdlZW4gdGhlIG11bHRpLXRhcCB0YXBzXG4gICAgICAgIHRpbWU6IDI1MCwgLy8gbWF4IHRpbWUgb2YgdGhlIHBvaW50ZXIgdG8gYmUgZG93biAobGlrZSBmaW5nZXIgb24gdGhlIHNjcmVlbilcbiAgICAgICAgdGhyZXNob2xkOiA5LCAvLyBhIG1pbmltYWwgbW92ZW1lbnQgaXMgb2ssIGJ1dCBrZWVwIGl0IGxvd1xuICAgICAgICBwb3NUaHJlc2hvbGQ6IDEwIC8vIGEgbXVsdGktdGFwIGNhbiBiZSBhIGJpdCBvZmYgdGhlIGluaXRpYWwgcG9zaXRpb25cbiAgICB9LFxuXG4gICAgZ2V0VG91Y2hBY3Rpb246IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gW1RPVUNIX0FDVElPTl9NQU5JUFVMQVRJT05dO1xuICAgIH0sXG5cbiAgICBwcm9jZXNzOiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcblxuICAgICAgICB2YXIgdmFsaWRQb2ludGVycyA9IGlucHV0LnBvaW50ZXJzLmxlbmd0aCA9PT0gb3B0aW9ucy5wb2ludGVycztcbiAgICAgICAgdmFyIHZhbGlkTW92ZW1lbnQgPSBpbnB1dC5kaXN0YW5jZSA8IG9wdGlvbnMudGhyZXNob2xkO1xuICAgICAgICB2YXIgdmFsaWRUb3VjaFRpbWUgPSBpbnB1dC5kZWx0YVRpbWUgPCBvcHRpb25zLnRpbWU7XG5cbiAgICAgICAgdGhpcy5yZXNldCgpO1xuXG4gICAgICAgIGlmICgoaW5wdXQuZXZlbnRUeXBlICYgSU5QVVRfU1RBUlQpICYmICh0aGlzLmNvdW50ID09PSAwKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmFpbFRpbWVvdXQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHdlIG9ubHkgYWxsb3cgbGl0dGxlIG1vdmVtZW50XG4gICAgICAgIC8vIGFuZCB3ZSd2ZSByZWFjaGVkIGFuIGVuZCBldmVudCwgc28gYSB0YXAgaXMgcG9zc2libGVcbiAgICAgICAgaWYgKHZhbGlkTW92ZW1lbnQgJiYgdmFsaWRUb3VjaFRpbWUgJiYgdmFsaWRQb2ludGVycykge1xuICAgICAgICAgICAgaWYgKGlucHV0LmV2ZW50VHlwZSAhPSBJTlBVVF9FTkQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5mYWlsVGltZW91dCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdmFsaWRJbnRlcnZhbCA9IHRoaXMucFRpbWUgPyAoaW5wdXQudGltZVN0YW1wIC0gdGhpcy5wVGltZSA8IG9wdGlvbnMuaW50ZXJ2YWwpIDogdHJ1ZTtcbiAgICAgICAgICAgIHZhciB2YWxpZE11bHRpVGFwID0gIXRoaXMucENlbnRlciB8fCBnZXREaXN0YW5jZSh0aGlzLnBDZW50ZXIsIGlucHV0LmNlbnRlcikgPCBvcHRpb25zLnBvc1RocmVzaG9sZDtcblxuICAgICAgICAgICAgdGhpcy5wVGltZSA9IGlucHV0LnRpbWVTdGFtcDtcbiAgICAgICAgICAgIHRoaXMucENlbnRlciA9IGlucHV0LmNlbnRlcjtcblxuICAgICAgICAgICAgaWYgKCF2YWxpZE11bHRpVGFwIHx8ICF2YWxpZEludGVydmFsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb3VudCA9IDE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY291bnQgKz0gMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5faW5wdXQgPSBpbnB1dDtcblxuICAgICAgICAgICAgLy8gaWYgdGFwIGNvdW50IG1hdGNoZXMgd2UgaGF2ZSByZWNvZ25pemVkIGl0LFxuICAgICAgICAgICAgLy8gZWxzZSBpdCBoYXMgYmVnYW4gcmVjb2duaXppbmcuLi5cbiAgICAgICAgICAgIHZhciB0YXBDb3VudCA9IHRoaXMuY291bnQgJSBvcHRpb25zLnRhcHM7XG4gICAgICAgICAgICBpZiAodGFwQ291bnQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAvLyBubyBmYWlsaW5nIHJlcXVpcmVtZW50cywgaW1tZWRpYXRlbHkgdHJpZ2dlciB0aGUgdGFwIGV2ZW50XG4gICAgICAgICAgICAgICAgLy8gb3Igd2FpdCBhcyBsb25nIGFzIHRoZSBtdWx0aXRhcCBpbnRlcnZhbCB0byB0cmlnZ2VyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc1JlcXVpcmVGYWlsdXJlcygpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9SRUNPR05JWkVEO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3RpbWVyID0gc2V0VGltZW91dENvbnRleHQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfUkVDT0dOSVpFRDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHJ5RW1pdCgpO1xuICAgICAgICAgICAgICAgICAgICB9LCBvcHRpb25zLmludGVydmFsLCB0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX0JFR0FOO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU1RBVEVfRkFJTEVEO1xuICAgIH0sXG5cbiAgICBmYWlsVGltZW91dDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuX3RpbWVyID0gc2V0VGltZW91dENvbnRleHQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfRkFJTEVEO1xuICAgICAgICB9LCB0aGlzLm9wdGlvbnMuaW50ZXJ2YWwsIHRoaXMpO1xuICAgICAgICByZXR1cm4gU1RBVEVfRkFJTEVEO1xuICAgIH0sXG5cbiAgICByZXNldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lcik7XG4gICAgfSxcblxuICAgIGVtaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZSA9PSBTVEFURV9SRUNPR05JWkVEKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnB1dC50YXBDb3VudCA9IHRoaXMuY291bnQ7XG4gICAgICAgICAgICB0aGlzLm1hbmFnZXIuZW1pdCh0aGlzLm9wdGlvbnMuZXZlbnQsIHRoaXMuX2lucHV0KTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG4vKipcbiAqIFNpbXBsZSB3YXkgdG8gY3JlYXRlIGEgbWFuYWdlciB3aXRoIGEgZGVmYXVsdCBzZXQgb2YgcmVjb2duaXplcnMuXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gSGFtbWVyKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBvcHRpb25zLnJlY29nbml6ZXJzID0gaWZVbmRlZmluZWQob3B0aW9ucy5yZWNvZ25pemVycywgSGFtbWVyLmRlZmF1bHRzLnByZXNldCk7XG4gICAgcmV0dXJuIG5ldyBNYW5hZ2VyKGVsZW1lbnQsIG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIEBjb25zdCB7c3RyaW5nfVxuICovXG5IYW1tZXIuVkVSU0lPTiA9ICcyLjAuNyc7XG5cbi8qKlxuICogZGVmYXVsdCBzZXR0aW5nc1xuICogQG5hbWVzcGFjZVxuICovXG5IYW1tZXIuZGVmYXVsdHMgPSB7XG4gICAgLyoqXG4gICAgICogc2V0IGlmIERPTSBldmVudHMgYXJlIGJlaW5nIHRyaWdnZXJlZC5cbiAgICAgKiBCdXQgdGhpcyBpcyBzbG93ZXIgYW5kIHVudXNlZCBieSBzaW1wbGUgaW1wbGVtZW50YXRpb25zLCBzbyBkaXNhYmxlZCBieSBkZWZhdWx0LlxuICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICovXG4gICAgZG9tRXZlbnRzOiBmYWxzZSxcblxuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBmb3IgdGhlIHRvdWNoQWN0aW9uIHByb3BlcnR5L2ZhbGxiYWNrLlxuICAgICAqIFdoZW4gc2V0IHRvIGBjb21wdXRlYCBpdCB3aWxsIG1hZ2ljYWxseSBzZXQgdGhlIGNvcnJlY3QgdmFsdWUgYmFzZWQgb24gdGhlIGFkZGVkIHJlY29nbml6ZXJzLlxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICogQGRlZmF1bHQgY29tcHV0ZVxuICAgICAqL1xuICAgIHRvdWNoQWN0aW9uOiBUT1VDSF9BQ1RJT05fQ09NUFVURSxcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAqIEBkZWZhdWx0IHRydWVcbiAgICAgKi9cbiAgICBlbmFibGU6IHRydWUsXG5cbiAgICAvKipcbiAgICAgKiBFWFBFUklNRU5UQUwgRkVBVFVSRSAtLSBjYW4gYmUgcmVtb3ZlZC9jaGFuZ2VkXG4gICAgICogQ2hhbmdlIHRoZSBwYXJlbnQgaW5wdXQgdGFyZ2V0IGVsZW1lbnQuXG4gICAgICogSWYgTnVsbCwgdGhlbiBpdCBpcyBiZWluZyBzZXQgdGhlIHRvIG1haW4gZWxlbWVudC5cbiAgICAgKiBAdHlwZSB7TnVsbHxFdmVudFRhcmdldH1cbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG4gICAgaW5wdXRUYXJnZXQ6IG51bGwsXG5cbiAgICAvKipcbiAgICAgKiBmb3JjZSBhbiBpbnB1dCBjbGFzc1xuICAgICAqIEB0eXBlIHtOdWxsfEZ1bmN0aW9ufVxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cbiAgICBpbnB1dENsYXNzOiBudWxsLFxuXG4gICAgLyoqXG4gICAgICogRGVmYXVsdCByZWNvZ25pemVyIHNldHVwIHdoZW4gY2FsbGluZyBgSGFtbWVyKClgXG4gICAgICogV2hlbiBjcmVhdGluZyBhIG5ldyBNYW5hZ2VyIHRoZXNlIHdpbGwgYmUgc2tpcHBlZC5cbiAgICAgKiBAdHlwZSB7QXJyYXl9XG4gICAgICovXG4gICAgcHJlc2V0OiBbXG4gICAgICAgIC8vIFJlY29nbml6ZXJDbGFzcywgb3B0aW9ucywgW3JlY29nbml6ZVdpdGgsIC4uLl0sIFtyZXF1aXJlRmFpbHVyZSwgLi4uXVxuICAgICAgICBbUm90YXRlUmVjb2duaXplciwge2VuYWJsZTogZmFsc2V9XSxcbiAgICAgICAgW1BpbmNoUmVjb2duaXplciwge2VuYWJsZTogZmFsc2V9LCBbJ3JvdGF0ZSddXSxcbiAgICAgICAgW1N3aXBlUmVjb2duaXplciwge2RpcmVjdGlvbjogRElSRUNUSU9OX0hPUklaT05UQUx9XSxcbiAgICAgICAgW1BhblJlY29nbml6ZXIsIHtkaXJlY3Rpb246IERJUkVDVElPTl9IT1JJWk9OVEFMfSwgWydzd2lwZSddXSxcbiAgICAgICAgW1RhcFJlY29nbml6ZXJdLFxuICAgICAgICBbVGFwUmVjb2duaXplciwge2V2ZW50OiAnZG91YmxldGFwJywgdGFwczogMn0sIFsndGFwJ11dLFxuICAgICAgICBbUHJlc3NSZWNvZ25pemVyXVxuICAgIF0sXG5cbiAgICAvKipcbiAgICAgKiBTb21lIENTUyBwcm9wZXJ0aWVzIGNhbiBiZSB1c2VkIHRvIGltcHJvdmUgdGhlIHdvcmtpbmcgb2YgSGFtbWVyLlxuICAgICAqIEFkZCB0aGVtIHRvIHRoaXMgbWV0aG9kIGFuZCB0aGV5IHdpbGwgYmUgc2V0IHdoZW4gY3JlYXRpbmcgYSBuZXcgTWFuYWdlci5cbiAgICAgKiBAbmFtZXNwYWNlXG4gICAgICovXG4gICAgY3NzUHJvcHM6IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERpc2FibGVzIHRleHQgc2VsZWN0aW9uIHRvIGltcHJvdmUgdGhlIGRyYWdnaW5nIGdlc3R1cmUuIE1haW5seSBmb3IgZGVza3RvcCBicm93c2Vycy5cbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICogQGRlZmF1bHQgJ25vbmUnXG4gICAgICAgICAqL1xuICAgICAgICB1c2VyU2VsZWN0OiAnbm9uZScsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERpc2FibGUgdGhlIFdpbmRvd3MgUGhvbmUgZ3JpcHBlcnMgd2hlbiBwcmVzc2luZyBhbiBlbGVtZW50LlxuICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAgICAgKiBAZGVmYXVsdCAnbm9uZSdcbiAgICAgICAgICovXG4gICAgICAgIHRvdWNoU2VsZWN0OiAnbm9uZScsXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERpc2FibGVzIHRoZSBkZWZhdWx0IGNhbGxvdXQgc2hvd24gd2hlbiB5b3UgdG91Y2ggYW5kIGhvbGQgYSB0b3VjaCB0YXJnZXQuXG4gICAgICAgICAqIE9uIGlPUywgd2hlbiB5b3UgdG91Y2ggYW5kIGhvbGQgYSB0b3VjaCB0YXJnZXQgc3VjaCBhcyBhIGxpbmssIFNhZmFyaSBkaXNwbGF5c1xuICAgICAgICAgKiBhIGNhbGxvdXQgY29udGFpbmluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGluay4gVGhpcyBwcm9wZXJ0eSBhbGxvd3MgeW91IHRvIGRpc2FibGUgdGhhdCBjYWxsb3V0LlxuICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAgICAgKiBAZGVmYXVsdCAnbm9uZSdcbiAgICAgICAgICovXG4gICAgICAgIHRvdWNoQ2FsbG91dDogJ25vbmUnLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgd2hldGhlciB6b29taW5nIGlzIGVuYWJsZWQuIFVzZWQgYnkgSUUxMD5cbiAgICAgICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgICAgICogQGRlZmF1bHQgJ25vbmUnXG4gICAgICAgICAqL1xuICAgICAgICBjb250ZW50Wm9vbWluZzogJ25vbmUnLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTcGVjaWZpZXMgdGhhdCBhbiBlbnRpcmUgZWxlbWVudCBzaG91bGQgYmUgZHJhZ2dhYmxlIGluc3RlYWQgb2YgaXRzIGNvbnRlbnRzLiBNYWlubHkgZm9yIGRlc2t0b3AgYnJvd3NlcnMuXG4gICAgICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICAgICAqIEBkZWZhdWx0ICdub25lJ1xuICAgICAgICAgKi9cbiAgICAgICAgdXNlckRyYWc6ICdub25lJyxcblxuICAgICAgICAvKipcbiAgICAgICAgICogT3ZlcnJpZGVzIHRoZSBoaWdobGlnaHQgY29sb3Igc2hvd24gd2hlbiB0aGUgdXNlciB0YXBzIGEgbGluayBvciBhIEphdmFTY3JpcHRcbiAgICAgICAgICogY2xpY2thYmxlIGVsZW1lbnQgaW4gaU9TLiBUaGlzIHByb3BlcnR5IG9iZXlzIHRoZSBhbHBoYSB2YWx1ZSwgaWYgc3BlY2lmaWVkLlxuICAgICAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAgICAgKiBAZGVmYXVsdCAncmdiYSgwLDAsMCwwKSdcbiAgICAgICAgICovXG4gICAgICAgIHRhcEhpZ2hsaWdodENvbG9yOiAncmdiYSgwLDAsMCwwKSdcbiAgICB9XG59O1xuXG52YXIgU1RPUCA9IDE7XG52YXIgRk9SQ0VEX1NUT1AgPSAyO1xuXG4vKipcbiAqIE1hbmFnZXJcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBNYW5hZ2VyKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSBhc3NpZ24oe30sIEhhbW1lci5kZWZhdWx0cywgb3B0aW9ucyB8fCB7fSk7XG5cbiAgICB0aGlzLm9wdGlvbnMuaW5wdXRUYXJnZXQgPSB0aGlzLm9wdGlvbnMuaW5wdXRUYXJnZXQgfHwgZWxlbWVudDtcblxuICAgIHRoaXMuaGFuZGxlcnMgPSB7fTtcbiAgICB0aGlzLnNlc3Npb24gPSB7fTtcbiAgICB0aGlzLnJlY29nbml6ZXJzID0gW107XG4gICAgdGhpcy5vbGRDc3NQcm9wcyA9IHt9O1xuXG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLmlucHV0ID0gY3JlYXRlSW5wdXRJbnN0YW5jZSh0aGlzKTtcbiAgICB0aGlzLnRvdWNoQWN0aW9uID0gbmV3IFRvdWNoQWN0aW9uKHRoaXMsIHRoaXMub3B0aW9ucy50b3VjaEFjdGlvbik7XG5cbiAgICB0b2dnbGVDc3NQcm9wcyh0aGlzLCB0cnVlKTtcblxuICAgIGVhY2godGhpcy5vcHRpb25zLnJlY29nbml6ZXJzLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIHZhciByZWNvZ25pemVyID0gdGhpcy5hZGQobmV3IChpdGVtWzBdKShpdGVtWzFdKSk7XG4gICAgICAgIGl0ZW1bMl0gJiYgcmVjb2duaXplci5yZWNvZ25pemVXaXRoKGl0ZW1bMl0pO1xuICAgICAgICBpdGVtWzNdICYmIHJlY29nbml6ZXIucmVxdWlyZUZhaWx1cmUoaXRlbVszXSk7XG4gICAgfSwgdGhpcyk7XG59XG5cbk1hbmFnZXIucHJvdG90eXBlID0ge1xuICAgIC8qKlxuICAgICAqIHNldCBvcHRpb25zXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICAgKiBAcmV0dXJucyB7TWFuYWdlcn1cbiAgICAgKi9cbiAgICBzZXQ6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XG5cbiAgICAgICAgLy8gT3B0aW9ucyB0aGF0IG5lZWQgYSBsaXR0bGUgbW9yZSBzZXR1cFxuICAgICAgICBpZiAob3B0aW9ucy50b3VjaEFjdGlvbikge1xuICAgICAgICAgICAgdGhpcy50b3VjaEFjdGlvbi51cGRhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5pbnB1dFRhcmdldCkge1xuICAgICAgICAgICAgLy8gQ2xlYW4gdXAgZXhpc3RpbmcgZXZlbnQgbGlzdGVuZXJzIGFuZCByZWluaXRpYWxpemVcbiAgICAgICAgICAgIHRoaXMuaW5wdXQuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5pbnB1dC50YXJnZXQgPSBvcHRpb25zLmlucHV0VGFyZ2V0O1xuICAgICAgICAgICAgdGhpcy5pbnB1dC5pbml0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHN0b3AgcmVjb2duaXppbmcgZm9yIHRoaXMgc2Vzc2lvbi5cbiAgICAgKiBUaGlzIHNlc3Npb24gd2lsbCBiZSBkaXNjYXJkZWQsIHdoZW4gYSBuZXcgW2lucHV0XXN0YXJ0IGV2ZW50IGlzIGZpcmVkLlxuICAgICAqIFdoZW4gZm9yY2VkLCB0aGUgcmVjb2duaXplciBjeWNsZSBpcyBzdG9wcGVkIGltbWVkaWF0ZWx5LlxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW2ZvcmNlXVxuICAgICAqL1xuICAgIHN0b3A6IGZ1bmN0aW9uKGZvcmNlKSB7XG4gICAgICAgIHRoaXMuc2Vzc2lvbi5zdG9wcGVkID0gZm9yY2UgPyBGT1JDRURfU1RPUCA6IFNUT1A7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIHJ1biB0aGUgcmVjb2duaXplcnMhXG4gICAgICogY2FsbGVkIGJ5IHRoZSBpbnB1dEhhbmRsZXIgZnVuY3Rpb24gb24gZXZlcnkgbW92ZW1lbnQgb2YgdGhlIHBvaW50ZXJzICh0b3VjaGVzKVxuICAgICAqIGl0IHdhbGtzIHRocm91Z2ggYWxsIHRoZSByZWNvZ25pemVycyBhbmQgdHJpZXMgdG8gZGV0ZWN0IHRoZSBnZXN0dXJlIHRoYXQgaXMgYmVpbmcgbWFkZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbnB1dERhdGFcbiAgICAgKi9cbiAgICByZWNvZ25pemU6IGZ1bmN0aW9uKGlucHV0RGF0YSkge1xuICAgICAgICB2YXIgc2Vzc2lvbiA9IHRoaXMuc2Vzc2lvbjtcbiAgICAgICAgaWYgKHNlc3Npb24uc3RvcHBlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcnVuIHRoZSB0b3VjaC1hY3Rpb24gcG9seWZpbGxcbiAgICAgICAgdGhpcy50b3VjaEFjdGlvbi5wcmV2ZW50RGVmYXVsdHMoaW5wdXREYXRhKTtcblxuICAgICAgICB2YXIgcmVjb2duaXplcjtcbiAgICAgICAgdmFyIHJlY29nbml6ZXJzID0gdGhpcy5yZWNvZ25pemVycztcblxuICAgICAgICAvLyB0aGlzIGhvbGRzIHRoZSByZWNvZ25pemVyIHRoYXQgaXMgYmVpbmcgcmVjb2duaXplZC5cbiAgICAgICAgLy8gc28gdGhlIHJlY29nbml6ZXIncyBzdGF0ZSBuZWVkcyB0byBiZSBCRUdBTiwgQ0hBTkdFRCwgRU5ERUQgb3IgUkVDT0dOSVpFRFxuICAgICAgICAvLyBpZiBubyByZWNvZ25pemVyIGlzIGRldGVjdGluZyBhIHRoaW5nLCBpdCBpcyBzZXQgdG8gYG51bGxgXG4gICAgICAgIHZhciBjdXJSZWNvZ25pemVyID0gc2Vzc2lvbi5jdXJSZWNvZ25pemVyO1xuXG4gICAgICAgIC8vIHJlc2V0IHdoZW4gdGhlIGxhc3QgcmVjb2duaXplciBpcyByZWNvZ25pemVkXG4gICAgICAgIC8vIG9yIHdoZW4gd2UncmUgaW4gYSBuZXcgc2Vzc2lvblxuICAgICAgICBpZiAoIWN1clJlY29nbml6ZXIgfHwgKGN1clJlY29nbml6ZXIgJiYgY3VyUmVjb2duaXplci5zdGF0ZSAmIFNUQVRFX1JFQ09HTklaRUQpKSB7XG4gICAgICAgICAgICBjdXJSZWNvZ25pemVyID0gc2Vzc2lvbi5jdXJSZWNvZ25pemVyID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCByZWNvZ25pemVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJlY29nbml6ZXIgPSByZWNvZ25pemVyc1tpXTtcblxuICAgICAgICAgICAgLy8gZmluZCBvdXQgaWYgd2UgYXJlIGFsbG93ZWQgdHJ5IHRvIHJlY29nbml6ZSB0aGUgaW5wdXQgZm9yIHRoaXMgb25lLlxuICAgICAgICAgICAgLy8gMS4gICBhbGxvdyBpZiB0aGUgc2Vzc2lvbiBpcyBOT1QgZm9yY2VkIHN0b3BwZWQgKHNlZSB0aGUgLnN0b3AoKSBtZXRob2QpXG4gICAgICAgICAgICAvLyAyLiAgIGFsbG93IGlmIHdlIHN0aWxsIGhhdmVuJ3QgcmVjb2duaXplZCBhIGdlc3R1cmUgaW4gdGhpcyBzZXNzaW9uLCBvciB0aGUgdGhpcyByZWNvZ25pemVyIGlzIHRoZSBvbmVcbiAgICAgICAgICAgIC8vICAgICAgdGhhdCBpcyBiZWluZyByZWNvZ25pemVkLlxuICAgICAgICAgICAgLy8gMy4gICBhbGxvdyBpZiB0aGUgcmVjb2duaXplciBpcyBhbGxvd2VkIHRvIHJ1biBzaW11bHRhbmVvdXMgd2l0aCB0aGUgY3VycmVudCByZWNvZ25pemVkIHJlY29nbml6ZXIuXG4gICAgICAgICAgICAvLyAgICAgIHRoaXMgY2FuIGJlIHNldHVwIHdpdGggdGhlIGByZWNvZ25pemVXaXRoKClgIG1ldGhvZCBvbiB0aGUgcmVjb2duaXplci5cbiAgICAgICAgICAgIGlmIChzZXNzaW9uLnN0b3BwZWQgIT09IEZPUkNFRF9TVE9QICYmICggLy8gMVxuICAgICAgICAgICAgICAgICAgICAhY3VyUmVjb2duaXplciB8fCByZWNvZ25pemVyID09IGN1clJlY29nbml6ZXIgfHwgLy8gMlxuICAgICAgICAgICAgICAgICAgICByZWNvZ25pemVyLmNhblJlY29nbml6ZVdpdGgoY3VyUmVjb2duaXplcikpKSB7IC8vIDNcbiAgICAgICAgICAgICAgICByZWNvZ25pemVyLnJlY29nbml6ZShpbnB1dERhdGEpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZWNvZ25pemVyLnJlc2V0KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGlmIHRoZSByZWNvZ25pemVyIGhhcyBiZWVuIHJlY29nbml6aW5nIHRoZSBpbnB1dCBhcyBhIHZhbGlkIGdlc3R1cmUsIHdlIHdhbnQgdG8gc3RvcmUgdGhpcyBvbmUgYXMgdGhlXG4gICAgICAgICAgICAvLyBjdXJyZW50IGFjdGl2ZSByZWNvZ25pemVyLiBidXQgb25seSBpZiB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgYW4gYWN0aXZlIHJlY29nbml6ZXJcbiAgICAgICAgICAgIGlmICghY3VyUmVjb2duaXplciAmJiByZWNvZ25pemVyLnN0YXRlICYgKFNUQVRFX0JFR0FOIHwgU1RBVEVfQ0hBTkdFRCB8IFNUQVRFX0VOREVEKSkge1xuICAgICAgICAgICAgICAgIGN1clJlY29nbml6ZXIgPSBzZXNzaW9uLmN1clJlY29nbml6ZXIgPSByZWNvZ25pemVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGdldCBhIHJlY29nbml6ZXIgYnkgaXRzIGV2ZW50IG5hbWUuXG4gICAgICogQHBhcmFtIHtSZWNvZ25pemVyfFN0cmluZ30gcmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfE51bGx9XG4gICAgICovXG4gICAgZ2V0OiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChyZWNvZ25pemVyIGluc3RhbmNlb2YgUmVjb2duaXplcikge1xuICAgICAgICAgICAgcmV0dXJuIHJlY29nbml6ZXI7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVjb2duaXplcnMgPSB0aGlzLnJlY29nbml6ZXJzO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlY29nbml6ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAocmVjb2duaXplcnNbaV0ub3B0aW9ucy5ldmVudCA9PSByZWNvZ25pemVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlY29nbml6ZXJzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBhZGQgYSByZWNvZ25pemVyIHRvIHRoZSBtYW5hZ2VyXG4gICAgICogZXhpc3RpbmcgcmVjb2duaXplcnMgd2l0aCB0aGUgc2FtZSBldmVudCBuYW1lIHdpbGwgYmUgcmVtb3ZlZFxuICAgICAqIEBwYXJhbSB7UmVjb2duaXplcn0gcmVjb2duaXplclxuICAgICAqIEByZXR1cm5zIHtSZWNvZ25pemVyfE1hbmFnZXJ9XG4gICAgICovXG4gICAgYWRkOiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhyZWNvZ25pemVyLCAnYWRkJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVtb3ZlIGV4aXN0aW5nXG4gICAgICAgIHZhciBleGlzdGluZyA9IHRoaXMuZ2V0KHJlY29nbml6ZXIub3B0aW9ucy5ldmVudCk7XG4gICAgICAgIGlmIChleGlzdGluZykge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmUoZXhpc3RpbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5yZWNvZ25pemVycy5wdXNoKHJlY29nbml6ZXIpO1xuICAgICAgICByZWNvZ25pemVyLm1hbmFnZXIgPSB0aGlzO1xuXG4gICAgICAgIHRoaXMudG91Y2hBY3Rpb24udXBkYXRlKCk7XG4gICAgICAgIHJldHVybiByZWNvZ25pemVyO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiByZW1vdmUgYSByZWNvZ25pemVyIGJ5IG5hbWUgb3IgaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge1JlY29nbml6ZXJ8U3RyaW5nfSByZWNvZ25pemVyXG4gICAgICogQHJldHVybnMge01hbmFnZXJ9XG4gICAgICovXG4gICAgcmVtb3ZlOiBmdW5jdGlvbihyZWNvZ25pemVyKSB7XG4gICAgICAgIGlmIChpbnZva2VBcnJheUFyZyhyZWNvZ25pemVyLCAncmVtb3ZlJywgdGhpcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVjb2duaXplciA9IHRoaXMuZ2V0KHJlY29nbml6ZXIpO1xuXG4gICAgICAgIC8vIGxldCdzIG1ha2Ugc3VyZSB0aGlzIHJlY29nbml6ZXIgZXhpc3RzXG4gICAgICAgIGlmIChyZWNvZ25pemVyKSB7XG4gICAgICAgICAgICB2YXIgcmVjb2duaXplcnMgPSB0aGlzLnJlY29nbml6ZXJzO1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gaW5BcnJheShyZWNvZ25pemVycywgcmVjb2duaXplcik7XG5cbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZWNvZ25pemVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMudG91Y2hBY3Rpb24udXBkYXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogYmluZCBldmVudFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudHNcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAgICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gdGhpc1xuICAgICAqL1xuICAgIG9uOiBmdW5jdGlvbihldmVudHMsIGhhbmRsZXIpIHtcbiAgICAgICAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVycztcbiAgICAgICAgZWFjaChzcGxpdFN0cihldmVudHMpLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlcnNbZXZlbnRdIHx8IFtdO1xuICAgICAgICAgICAgaGFuZGxlcnNbZXZlbnRdLnB1c2goaGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogdW5iaW5kIGV2ZW50LCBsZWF2ZSBlbWl0IGJsYW5rIHRvIHJlbW92ZSBhbGwgaGFuZGxlcnNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRzXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2hhbmRsZXJdXG4gICAgICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gdGhpc1xuICAgICAqL1xuICAgIG9mZjogZnVuY3Rpb24oZXZlbnRzLCBoYW5kbGVyKSB7XG4gICAgICAgIGlmIChldmVudHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVycztcbiAgICAgICAgZWFjaChzcGxpdFN0cihldmVudHMpLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKCFoYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGhhbmRsZXJzW2V2ZW50XTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlcnNbZXZlbnRdICYmIGhhbmRsZXJzW2V2ZW50XS5zcGxpY2UoaW5BcnJheShoYW5kbGVyc1tldmVudF0sIGhhbmRsZXIpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBlbWl0IGV2ZW50IHRvIHRoZSBsaXN0ZW5lcnNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YVxuICAgICAqL1xuICAgIGVtaXQ6IGZ1bmN0aW9uKGV2ZW50LCBkYXRhKSB7XG4gICAgICAgIC8vIHdlIGFsc28gd2FudCB0byB0cmlnZ2VyIGRvbSBldmVudHNcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kb21FdmVudHMpIHtcbiAgICAgICAgICAgIHRyaWdnZXJEb21FdmVudChldmVudCwgZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBubyBoYW5kbGVycywgc28gc2tpcCBpdCBhbGxcbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVyc1tldmVudF0gJiYgdGhpcy5oYW5kbGVyc1tldmVudF0uc2xpY2UoKTtcbiAgICAgICAgaWYgKCFoYW5kbGVycyB8fCAhaGFuZGxlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBkYXRhLnR5cGUgPSBldmVudDtcbiAgICAgICAgZGF0YS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZGF0YS5zcmNFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUgKGkgPCBoYW5kbGVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGhhbmRsZXJzW2ldKGRhdGEpO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIGRlc3Ryb3kgdGhlIG1hbmFnZXIgYW5kIHVuYmluZHMgYWxsIGV2ZW50c1xuICAgICAqIGl0IGRvZXNuJ3QgdW5iaW5kIGRvbSBldmVudHMsIHRoYXQgaXMgdGhlIHVzZXIgb3duIHJlc3BvbnNpYmlsaXR5XG4gICAgICovXG4gICAgZGVzdHJveTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCAmJiB0b2dnbGVDc3NQcm9wcyh0aGlzLCBmYWxzZSk7XG5cbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IHt9O1xuICAgICAgICB0aGlzLnNlc3Npb24gPSB7fTtcbiAgICAgICAgdGhpcy5pbnB1dC5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7XG4gICAgfVxufTtcblxuLyoqXG4gKiBhZGQvcmVtb3ZlIHRoZSBjc3MgcHJvcGVydGllcyBhcyBkZWZpbmVkIGluIG1hbmFnZXIub3B0aW9ucy5jc3NQcm9wc1xuICogQHBhcmFtIHtNYW5hZ2VyfSBtYW5hZ2VyXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGFkZFxuICovXG5mdW5jdGlvbiB0b2dnbGVDc3NQcm9wcyhtYW5hZ2VyLCBhZGQpIHtcbiAgICB2YXIgZWxlbWVudCA9IG1hbmFnZXIuZWxlbWVudDtcbiAgICBpZiAoIWVsZW1lbnQuc3R5bGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgcHJvcDtcbiAgICBlYWNoKG1hbmFnZXIub3B0aW9ucy5jc3NQcm9wcywgZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcbiAgICAgICAgcHJvcCA9IHByZWZpeGVkKGVsZW1lbnQuc3R5bGUsIG5hbWUpO1xuICAgICAgICBpZiAoYWRkKSB7XG4gICAgICAgICAgICBtYW5hZ2VyLm9sZENzc1Byb3BzW3Byb3BdID0gZWxlbWVudC5zdHlsZVtwcm9wXTtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbcHJvcF0gPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbcHJvcF0gPSBtYW5hZ2VyLm9sZENzc1Byb3BzW3Byb3BdIHx8ICcnO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKCFhZGQpIHtcbiAgICAgICAgbWFuYWdlci5vbGRDc3NQcm9wcyA9IHt9O1xuICAgIH1cbn1cblxuLyoqXG4gKiB0cmlnZ2VyIGRvbSBldmVudFxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge09iamVjdH0gZGF0YVxuICovXG5mdW5jdGlvbiB0cmlnZ2VyRG9tRXZlbnQoZXZlbnQsIGRhdGEpIHtcbiAgICB2YXIgZ2VzdHVyZUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgZ2VzdHVyZUV2ZW50LmluaXRFdmVudChldmVudCwgdHJ1ZSwgdHJ1ZSk7XG4gICAgZ2VzdHVyZUV2ZW50Lmdlc3R1cmUgPSBkYXRhO1xuICAgIGRhdGEudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZ2VzdHVyZUV2ZW50KTtcbn1cblxuYXNzaWduKEhhbW1lciwge1xuICAgIElOUFVUX1NUQVJUOiBJTlBVVF9TVEFSVCxcbiAgICBJTlBVVF9NT1ZFOiBJTlBVVF9NT1ZFLFxuICAgIElOUFVUX0VORDogSU5QVVRfRU5ELFxuICAgIElOUFVUX0NBTkNFTDogSU5QVVRfQ0FOQ0VMLFxuXG4gICAgU1RBVEVfUE9TU0lCTEU6IFNUQVRFX1BPU1NJQkxFLFxuICAgIFNUQVRFX0JFR0FOOiBTVEFURV9CRUdBTixcbiAgICBTVEFURV9DSEFOR0VEOiBTVEFURV9DSEFOR0VELFxuICAgIFNUQVRFX0VOREVEOiBTVEFURV9FTkRFRCxcbiAgICBTVEFURV9SRUNPR05JWkVEOiBTVEFURV9SRUNPR05JWkVELFxuICAgIFNUQVRFX0NBTkNFTExFRDogU1RBVEVfQ0FOQ0VMTEVELFxuICAgIFNUQVRFX0ZBSUxFRDogU1RBVEVfRkFJTEVELFxuXG4gICAgRElSRUNUSU9OX05PTkU6IERJUkVDVElPTl9OT05FLFxuICAgIERJUkVDVElPTl9MRUZUOiBESVJFQ1RJT05fTEVGVCxcbiAgICBESVJFQ1RJT05fUklHSFQ6IERJUkVDVElPTl9SSUdIVCxcbiAgICBESVJFQ1RJT05fVVA6IERJUkVDVElPTl9VUCxcbiAgICBESVJFQ1RJT05fRE9XTjogRElSRUNUSU9OX0RPV04sXG4gICAgRElSRUNUSU9OX0hPUklaT05UQUw6IERJUkVDVElPTl9IT1JJWk9OVEFMLFxuICAgIERJUkVDVElPTl9WRVJUSUNBTDogRElSRUNUSU9OX1ZFUlRJQ0FMLFxuICAgIERJUkVDVElPTl9BTEw6IERJUkVDVElPTl9BTEwsXG5cbiAgICBNYW5hZ2VyOiBNYW5hZ2VyLFxuICAgIElucHV0OiBJbnB1dCxcbiAgICBUb3VjaEFjdGlvbjogVG91Y2hBY3Rpb24sXG5cbiAgICBUb3VjaElucHV0OiBUb3VjaElucHV0LFxuICAgIE1vdXNlSW5wdXQ6IE1vdXNlSW5wdXQsXG4gICAgUG9pbnRlckV2ZW50SW5wdXQ6IFBvaW50ZXJFdmVudElucHV0LFxuICAgIFRvdWNoTW91c2VJbnB1dDogVG91Y2hNb3VzZUlucHV0LFxuICAgIFNpbmdsZVRvdWNoSW5wdXQ6IFNpbmdsZVRvdWNoSW5wdXQsXG5cbiAgICBSZWNvZ25pemVyOiBSZWNvZ25pemVyLFxuICAgIEF0dHJSZWNvZ25pemVyOiBBdHRyUmVjb2duaXplcixcbiAgICBUYXA6IFRhcFJlY29nbml6ZXIsXG4gICAgUGFuOiBQYW5SZWNvZ25pemVyLFxuICAgIFN3aXBlOiBTd2lwZVJlY29nbml6ZXIsXG4gICAgUGluY2g6IFBpbmNoUmVjb2duaXplcixcbiAgICBSb3RhdGU6IFJvdGF0ZVJlY29nbml6ZXIsXG4gICAgUHJlc3M6IFByZXNzUmVjb2duaXplcixcblxuICAgIG9uOiBhZGRFdmVudExpc3RlbmVycyxcbiAgICBvZmY6IHJlbW92ZUV2ZW50TGlzdGVuZXJzLFxuICAgIGVhY2g6IGVhY2gsXG4gICAgbWVyZ2U6IG1lcmdlLFxuICAgIGV4dGVuZDogZXh0ZW5kLFxuICAgIGFzc2lnbjogYXNzaWduLFxuICAgIGluaGVyaXQ6IGluaGVyaXQsXG4gICAgYmluZEZuOiBiaW5kRm4sXG4gICAgcHJlZml4ZWQ6IHByZWZpeGVkXG59KTtcblxuLy8gdGhpcyBwcmV2ZW50cyBlcnJvcnMgd2hlbiBIYW1tZXIgaXMgbG9hZGVkIGluIHRoZSBwcmVzZW5jZSBvZiBhbiBBTURcbi8vICBzdHlsZSBsb2FkZXIgYnV0IGJ5IHNjcmlwdCB0YWcsIG5vdCBieSB0aGUgbG9hZGVyLlxudmFyIGZyZWVHbG9iYWwgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnID8gc2VsZiA6IHt9KSk7IC8vIGpzaGludCBpZ25vcmU6bGluZVxuZnJlZUdsb2JhbC5IYW1tZXIgPSBIYW1tZXI7XG5cbmlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIYW1tZXI7XG4gICAgfSk7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEhhbW1lcjtcbn0gZWxzZSB7XG4gICAgd2luZG93W2V4cG9ydE5hbWVdID0gSGFtbWVyO1xufVxuXG59KSh3aW5kb3csIGRvY3VtZW50LCAnSGFtbWVyJyk7XG5cbn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4vKipcbiAqIENsYXNzIGFsbG93aW5nIGFwcGVyaW5nIGFuZCBkaXNhcHBlYXJpbmcgb24gZWxlbWVudHNcbiAqIEBjbGFzc1xuICovXG52YXIgQXBwZWFyID1cblxuLyoqXG4gKiBAY29uc3RydWN0b3JcbiAqIExpc3RlbmluZyB0byBzY3JvbGwsIGxhdW5jaGVzIGNsYXNzIGFkZHMuXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIC0gQ29udGFpbnMgMyBwYXJhbWV0ZXJzIDogJGNvbnRhaW5lciwge2VsZW1lbnR9LCBjb250YWluZXIgdG8gb2JzZXJ2IDsgJGFuaW1hdGUsIHtlbGVtZW50fSwgZWxlbWVudCB0byBhbmltYXRlIDsgYW5pbWF0aW9uLCB7c3RyaW5nfSwgbmFtZSBvZiB0aGUgY2xhc3MgdG8gYWRkIG9uIHRyaWdnZXJcbiAqL1xuZnVuY3Rpb24gQXBwZWFyKHBhcmFtcykge1xuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXBwZWFyKTtcblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgIGlmIChwYXJhbXMuJGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55IDwgNzAgJiYgcGFyYW1zLiRjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkueSA+IC1wYXJhbXMuJGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQpIHtcbiAgICAgIHBhcmFtcy4kYW5pbWF0ZS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChwYXJhbXMuYW5pbWF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXJhbXMuJGFuaW1hdGUuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUocGFyYW1zLmFuaW1hdGlvbik7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHBlYXI7XG5cbn0se31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVxdWlyZXMgdGhlIG1vZHVsZXMgaGFtbWVyanNcbiAqIEBjb25zdFxuICogQHJlcXVpcmVzIGhhbW1lcmpzXG4gKi9cbnZhciBIYW1tZXIgPSByZXF1aXJlKCdoYW1tZXJqcycpO1xuXG4vKipcbiAqIENhcm91c2VsIGNsYXNzXG4gKiBAY2xhc3NcbiAqL1xuXG52YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoKSB7XG5cbiAgLyoqXG4gICAqIERlY2xhcmVzIGFsbCBwYXJhbWV0ZXJzLiBMaXN0ZW4gdG8gY2xpY2tzIGFuZCBoYW1tZXIgcGFucy5cbiAgICogQGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJhbXMgLSBDb250YWlucyAxIHBhcmFtZXRlciA6ICRjb250YWluZXIsIHtlbGVtZW50fSwgY29udGFpbmVyIHRvIG9ic2VydlxuICAgKi9cbiAgZnVuY3Rpb24gQ2Fyb3VzZWwocGFyYW1zKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXJvdXNlbCk7XG5cbiAgICB0aGlzLmluZGV4ID0gMDtcblxuICAgIHRoaXMuJGNvbnRhaW5lciA9IHBhcmFtcy4kY29udGFpbmVyO1xuICAgIHRoaXMuJGNvbnRyb2xzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbG9yc19fY29udHJvbHMnKTtcbiAgICB0aGlzLiRpbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29sb3JzX19pbWFnZUNvbnRhaW5lcicpO1xuICAgIHRoaXMuJGltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbG9yc19faW1hZ2VzJyk7XG4gICAgdGhpcy4kZGlhbW9uZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2xvcnNfX2RpYW1vbmQnKTtcbiAgICB0aGlzLiRkaWFtb25kVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2xvcnNfX251bWJlcicpO1xuICAgIHRoaXMuJHRleHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbG9yc19fdGV4dENvbnRhaW5lcicpO1xuICAgIHRoaXMuJHRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29sb3JzX190ZXh0Jyk7XG4gICAgdGhpcy4kYmFja2dyb3VuZERpdnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYmFja2dyb3VuZCBkaXY6bm90KC5iYWNrZ3JvdW5kX19jaXJjbGUpJyk7XG4gICAgdGhpcy4kY2lyY2xlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iYWNrZ3JvdW5kX19jaXJjbGUnKTtcblxuICAgIHRoaXMucXVhbnRpdHkgPSB0aGlzLiRpbWFnZXMubGVuZ3RoO1xuICAgIHRoaXMuc3dpcGVkID0gZmFsc2U7XG5cbiAgICB0aGlzLmNvbG9ycyA9IFsnI0ZGRkZGRicsICcjNTZGRkE3JywgJyM1NkYwRkYnLCAnI0ZGNzAyOScsICcjRkZENTAwJ107XG5cbiAgICB0aGlzLmJhY2tncm91bmRDb2xvcnMgPSBbJyM1OTU5NTknLCAnIzI0NDAyOCcsICcjMjQzNTQwJywgJyM0MDJCMjQnLCAnIzQwM0IyNCddO1xuXG4gICAgdGhpcy5zd2lwZXMgPSBuZXcgSGFtbWVyKHRoaXMuJGltYWdlKTtcblxuICAgIHRoaXMuc3dpcGVzLm9uKCdwYW5sZWZ0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmIChfdGhpcy5pbmRleCArIDEgPD0gX3RoaXMucXVhbnRpdHkgLSAxICYmIF90aGlzLnN3aXBlZCA9PSBmYWxzZSkge1xuICAgICAgICBfdGhpcy5pbmRleCsrO1xuICAgICAgICBfdGhpcy5jaGFuZ2VTbGlkZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5zd2lwZXMub24oJ3BhbnJpZ2h0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmIChfdGhpcy5pbmRleCAtIDEgPj0gMCAmJiBfdGhpcy5zd2lwZWQgPT0gZmFsc2UpIHtcbiAgICAgICAgX3RoaXMuaW5kZXgtLTtcbiAgICAgICAgX3RoaXMuY2hhbmdlU2xpZGUoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuY2hhbmdlU2xpZGUoKTtcblxuICAgIHRoaXMuJGNvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7XG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpcy5pbmRleCA9IGluZGV4O1xuICAgICAgICBfdGhpcy5jaGFuZ2VTbGlkZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuY2hlY2soKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMYXVuY2hlcyBldmVyeSBldmVudCBuZWVkZWQgd2hlbiBjYXJvdXNlbCBpcyBtb3ZpbmdcbiAgICogQGZ1bmN0aW9uXG4gICAqIEBuYW1lIGNoYW5nZVNsaWRlXG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKENhcm91c2VsLCBbe1xuICAgIGtleTogJ2NoYW5nZVNsaWRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2hhbmdlU2xpZGUoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdGhpcy5zd2lwZWQgPSB0cnVlO1xuXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sb3JzX19jb250cm9scy0tYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnY29sb3JzX19jb250cm9scy0tYWN0aXZlJyk7XG4gICAgICB0aGlzLiRjb250cm9sc1t0aGlzLmluZGV4XS5jbGFzc0xpc3QuYWRkKCdjb2xvcnNfX2NvbnRyb2xzLS1hY3RpdmUnKTtcblxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbG9yc19faW1hZ2VDb250YWluZXItLWFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbG9yc19faW1hZ2VDb250YWluZXItLWFjdGl2ZScpO1xuICAgICAgdGhpcy4kaW1hZ2VzW3RoaXMuaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2NvbG9yc19faW1hZ2VDb250YWluZXItLWFjdGl2ZScpO1xuXG4gICAgICB0aGlzLiRkaWFtb25kVGV4dC5pbm5lckhUTUwgPSB0aGlzLmluZGV4ICsgMTtcblxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbG9yc19fdGV4dENvbnRhaW5lci0tYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnY29sb3JzX190ZXh0Q29udGFpbmVyLS1hY3RpdmUnKTtcbiAgICAgIHRoaXMuJHRleHRzW3RoaXMuaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2NvbG9yc19fdGV4dENvbnRhaW5lci0tYWN0aXZlJyk7XG5cbiAgICAgIHRoaXMuJHRleHQuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlLmNvbG9yID0gX3RoaXMyLmNvbG9yc1tfdGhpczIuaW5kZXhdO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuY2hlY2soKTtcblxuICAgICAgdGhpcy4kZGlhbW9uZC5zdHlsZS5ib3JkZXJDb2xvciA9IHRoaXMuY29sb3JzW3RoaXMuaW5kZXhdO1xuXG4gICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMi5zd2lwZWQgPSBmYWxzZTtcbiAgICAgIH0sIDE1MDApO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdoZW4gY29udGFpbmVyIGlzIHZpc2libGUgY2hhbmdlIGJhY2tncm91bmQgY29sb3JcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSBjaGVja1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdjaGVjaycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoZWNrKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLiRjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkueSA8IDE5MCAmJiB0aGlzLiRjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkueSA+IC10aGlzLiRjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0ICsgMzAwKSB7XG4gICAgICAgIHRoaXMuJGJhY2tncm91bmREaXZzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IF90aGlzMy5iYWNrZ3JvdW5kQ29sb3JzW190aGlzMy5pbmRleF07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLiRjaXJjbGVzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICBlbGVtZW50LnN0eWxlLmJvcmRlckNvbG9yID0gX3RoaXMzLmJhY2tncm91bmRDb2xvcnNbX3RoaXMzLmluZGV4XTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLiRiYWNrZ3JvdW5kRGl2cy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzQwMzUyNCc7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLiRjaXJjbGVzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICBlbGVtZW50LnN0eWxlLmJvcmRlckNvbG9yID0gJyM0MDM1MjQnO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2Fyb3VzZWw7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2Fyb3VzZWw7XG5cbn0se1wiaGFtbWVyanNcIjoyfV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8qKlxuICogVGhpcyBjbGFzcyBwbGF5cyBtdXNpY1xuICogQGNsYXNzXG4gKi9cbnZhciBNdXNpYyA9IGZ1bmN0aW9uICgpIHtcblxuICAvKipcbiAgICogRGVjbGFyZXMgYWxsIHBhcmFtZXRlcnMuIGNyZWF0ZSBhdWRpbyBvYmplY3QgYW5kIGxpc3RlbiB0byBidXR0b24gbXV0ZS5cbiAgICogQGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJhbXMgLSBDb250YWlucyAzIHBhcmFtZXRlcnNcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxpbmsgLSBsaW5rIHRvIHRoZSBhdWRpb1xuICAgKiBAcGFyYW0ge2VsZW1lbnR9ICRlbCAtIGVsZW1lbnQgd2hpY2ggY29udGFpbnMgbXV0ZSBidXR0b25cbiAgICogQHBhcmFtIHtlbGVtZW50fSAkaWNvbiAtIGVsZW1lbnQgd2hpY2ggY29udGFpbnMgaWNvblxuICAgKi9cbiAgZnVuY3Rpb24gTXVzaWMocGFyYW1zKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNdXNpYyk7XG5cbiAgICB0aGlzLmF1ZGlvID0gbmV3IEF1ZGlvKHBhcmFtcy5saW5rKTtcbiAgICB0aGlzLmF1ZGlvLmF1dG9wbGF5ID0gdHJ1ZTtcblxuICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xuXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhdWRpbycpICE9PSBudWxsKSB7XG4gICAgICB0aGlzLnN0YXRlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXVkaW8nKSk7XG4gICAgICB0aGlzLnN0YXRlID0gdGhpcy5zdGF0ZSA/IHRoaXMuc3RhdGUgPSBmYWxzZSA6IHRoaXMuc3RhdGUgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN0YXRlID0gdHJ1ZTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhdWRpbycsIHRoaXMuc3RhdGUpO1xuICAgIH1cblxuICAgIHRoaXMubXV0ZSgpO1xuXG4gICAgcGFyYW1zLiRlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLm11dGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhNdXNpYywgW3tcbiAgICBrZXk6ICdtdXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbXV0ZSgpIHtcbiAgICAgIGlmICh0aGlzLnN0YXRlID09IHRydWUpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuJGljb24uc3JjID0gJy9hc3NldHMvaW1nL2Nyb3NzLnBuZyc7XG4gICAgICAgIHRoaXMuYXVkaW8ucGF1c2UoKTtcbiAgICAgICAgdGhpcy5hdWRpby52b2x1bWUgPSAwO1xuICAgICAgICB0aGlzLnN0YXRlID0gZmFsc2U7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhdWRpbycsIHRoaXMuc3RhdGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuJGljb24uc3JjID0gJy9hc3NldHMvaW1nL3NvdW5kLmdpZic7XG4gICAgICAgIHRoaXMuYXVkaW8ucGxheSgpO1xuICAgICAgICB0aGlzLmF1ZGlvLnZvbHVtZSA9IDE7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB0cnVlO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYXVkaW8nLCB0aGlzLnN0YXRlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTXVzaWM7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gTXVzaWM7XG5cbn0se31dLDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4vKipcbiAqIFdoZW4gZWxlbWVudCB3aXRoIGEgc3BlY2lmaWMgQ1NTIGNsYXNzIGlzIHZpc2libGUgaW4gd2luZG93LCBnaXZlIGl0IGEgbmV3IENTUyBjbGFzc1xuICogQGNsYXNzXG4gKi9cbnZhciBTY3JvbGxBcHBlYXJpbmcgPSBmdW5jdGlvbiAoKSB7XG5cbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKiBEZWNsYXJlcyBhbGwgcGFyYW1ldGVycy4gSW5pdHMgc3lzdGVtLlxuICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIC0gQ29udGFpbnMgMiBwYXJhbWV0ZXJzIDogaGlkZGVuLCB7c3RyaW5nfSwgQ1NTIGNsYXNzIHdoaWNoIHdpbGwgYmUgcmVtb3ZlZDsgYXBwZWFyZWQsIHtzdHJpbmd9LCBDU1Mgd2hpY2ggd2lsbCBiZSBhZGRlZDtcbiAgICovXG4gIGZ1bmN0aW9uIFNjcm9sbEFwcGVhcmluZyhwYXJhbXMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNjcm9sbEFwcGVhcmluZyk7XG5cbiAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICB0aGlzLiRlbGVtZW50cyA9IG5ldyBPYmplY3QoKTtcbiAgICB0aGlzLnJlZnJlc2hQcm9wZXJ0aWVzKCk7XG4gICAgdGhpcy5pbml0KCk7XG4gICAgd2luZG93LnNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmluaXQoKTtcbiAgICB9LCA1MDApO1xuICB9XG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBzY3JvbGwgZXZlbnQsIGFuZCByZWZyZXNoIGVsZW1lbnRzXG4gICAqIEBmdW5jdGlvblxuICAgKiBAbmFtZSBpbml0XG4gICAqL1xuXG5cbiAgX2NyZWF0ZUNsYXNzKFNjcm9sbEFwcGVhcmluZywgW3tcbiAgICBrZXk6ICdpbml0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHRoaXMucmVmcmVzaFByb3BlcnRpZXMoKTtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmNoZWNrKCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBoaWRkZW4gZWxlbWVudHMgbGlzdCwgYW5kIHdpbmRvdyBoZWlnaHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAbmFtZSByZWZyZXNoUHJvcGVydGllc1xuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZWZyZXNoUHJvcGVydGllcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZnJlc2hQcm9wZXJ0aWVzKCkge1xuICAgICAgdGhpcy4kZWxlbWVudHMuaGlkZGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLicgKyB0aGlzLnBhcmFtcy5oaWRkZW4pO1xuICAgICAgdGhpcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSWYgYW4gZWxlbWVudCBpcyB2aXNpYmxlLCByZXBsYWNlIGhpZGRlbiBDU1MgY2xhc3MgYnkgYXBwZWFyZWQgQ1NTIGNsYXNzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQG5hbWUgY2hlY2tcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnY2hlY2snLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVjaygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRlbGVtZW50cy5oaWRkZW4uZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICB2YXIgdGVtcG9zID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XG4gICAgICAgIGlmICh0ZW1wb3MgLSBfdGhpczIuaGVpZ2h0IDw9IDApIGVsZW1lbnQuY2xhc3NOYW1lID0gZWxlbWVudC5jbGFzc05hbWUucmVwbGFjZShfdGhpczIucGFyYW1zLmhpZGRlbiwgX3RoaXMyLnBhcmFtcy5hcHBlYXJlZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2Nyb2xsQXBwZWFyaW5nO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNjcm9sbEFwcGVhcmluZztcblxufSx7fV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBfc2Nyb2xsYXBwZWFyaW5nID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL3Njcm9sbGFwcGVhcmluZycpO1xuXG52YXIgX3Njcm9sbGFwcGVhcmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY3JvbGxhcHBlYXJpbmcpO1xuXG52YXIgX2FwcGVhciA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9hcHBlYXInKTtcblxudmFyIF9hcHBlYXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXBwZWFyKTtcblxudmFyIF9jYXJvdXNlbCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9jYXJvdXNlbCcpO1xuXG52YXIgX2Nhcm91c2VsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Nhcm91c2VsKTtcblxudmFyIF9tdXNpYyA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9tdXNpYycpO1xuXG52YXIgX211c2ljMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX211c2ljKTtcblxudmFyIF9ib2R5bW92aW4gPSByZXF1aXJlKCdib2R5bW92aW4nKTtcblxudmFyIF9ib2R5bW92aW4yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYm9keW1vdmluKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBAY29uc3RcbiAqIEBuYW1lIGFuaW1hdGlvblxuICogQGluc3RhbmNlIFNjcm9sbEFwcGVhcmluZ1xuICovXG52YXIgYW5pbWF0aW9uID0gbmV3IF9zY3JvbGxhcHBlYXJpbmcyLmRlZmF1bHQoe1xuICBoaWRkZW46ICdoaWRkZW4nLFxuICBhcHBlYXJlZDogJ2FwcGVhcmVkJ1xufSk7XG5cbi8qKlxuICogQGNvbnN0XG4gKiBAbmFtZSBhcHBlYXJpbmdcbiAqIEBpbnN0YW5jZSBBcHBlYXJcbiAqL1xuXG4vLyBpbXBvcnQgUmVsbGF4IGZyb20gJ3JlbGxheCdcbnZhciBhcHBlYXJpbmcgPSBuZXcgX2FwcGVhcjIuZGVmYXVsdCh7XG4gICRjb250YWluZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib3gnKSxcbiAgJGFuaW1hdGU6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5iYWNrZ3JvdW5kX19jaXJjbGUnKSxcbiAgYW5pbWF0aW9uOiAnb3BhY2l0eSdcbn0pO1xuXG4vKipcbiAqIEBjb25zdFxuICogQG5hbWUgc2xpZGVyXG4gKiBAaW5zdGFuY2UgQ2Fyb3VzZWxcbiAqL1xudmFyIHNsaWRlciA9IG5ldyBfY2Fyb3VzZWwyLmRlZmF1bHQoe1xuICAkY29udGFpbmVyOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sb3JzJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdFxuICogQG5hbWUgYXVkaW9cbiAqIEBpbnN0YW5jZSBNdXNpY1xuICovXG52YXIgYXVkaW8gPSBuZXcgX211c2ljMi5kZWZhdWx0KHtcbiAgbGluazogJy9hc3NldHMvc291bmRzL2JhY2tncm91bmQubXAzJyxcbiAgJGVsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXVkaW9fX2J1dHRvbicpLFxuICAkaWNvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmF1ZGlvX19pY29uJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdFxuICogQG5hbWUgbG9hZGVyXG4gKi9cbnZhciBsb2FkZXIgPSBfYm9keW1vdmluMi5kZWZhdWx0LmxvYWRBbmltYXRpb24oe1xuICBjb250YWluZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkZXInKSxcbiAgcmVuZGVyZXI6ICdzdmcnLFxuICBhdXRvcGxheTogdHJ1ZSxcbiAgcGF0aDogJy9hc3NldHMvZGF0YS9sb2FkZXIuanNvbidcbn0pO1xuXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZGVyJykuY2xhc3NMaXN0LmFkZCgncmVtb3ZlZCcpO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxvYWRlcicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfSwgMjAwMCk7XG4gIH0sIDI1MDApO1xufTtcblxufSx7XCIuL2NvbXBvbmVudHMvYXBwZWFyXCI6MyxcIi4vY29tcG9uZW50cy9jYXJvdXNlbFwiOjQsXCIuL2NvbXBvbmVudHMvbXVzaWNcIjo1LFwiLi9jb21wb25lbnRzL3Njcm9sbGFwcGVhcmluZ1wiOjYsXCJib2R5bW92aW5cIjoxfV19LHt9LFs3XSlcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdlltOWtlVzF2ZG1sdUwySjFhV3hrTDNCc1lYbGxjaTlpYjJSNWJXOTJhVzR1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12YUdGdGJXVnlhbk12YUdGdGJXVnlMbXB6SWl3aWMzSmpMMnB6TDJOdmJYQnZibVZ1ZEhNdllYQndaV0Z5TG1weklpd2ljM0pqTDJwekwyTnZiWEJ2Ym1WdWRITXZZMkZ5YjNWelpXd3Vhbk1pTENKemNtTXZhbk12WTI5dGNHOXVaVzUwY3k5dGRYTnBZeTVxY3lJc0luTnlZeTlxY3k5amIyMXdiMjVsYm5SekwzTmpjbTlzYkdGd2NHVmhjbWx1Wnk1cWN5SXNJbk55WXk5cWN5OXRZV2x1TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZEUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEYUdoalFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3T3pzN08wRkRibXhHUVRzN096dEpRVWxOTEUwN08wRkJSVW83T3pzN08wRkJTMEVzWjBKQlFXRXNUVUZCWWl4RlFVRnhRanRCUVVGQk96dEJRVU51UWl4VFFVRlBMR2RDUVVGUUxFTkJRWGRDTEZGQlFYaENMRVZCUVd0RExGbEJRVTA3UVVGRGRFTXNVVUZCU1N4UFFVRlBMRlZCUVZBc1EwRkJhMElzY1VKQlFXeENMRWRCUVRCRExFTkJRVEZETEVkQlFUaERMRVZCUVRsRExFbEJRVzlFTEU5QlFVOHNWVUZCVUN4RFFVRnJRaXh4UWtGQmJFSXNSMEZCTUVNc1EwRkJNVU1zUjBGQk9FTXNRMEZCUlN4UFFVRlBMRlZCUVZBc1EwRkJhMElzY1VKQlFXeENMRWRCUVRCRExFMUJRV3hLTEVWQlFUQktPMEZCUTNoS0xHRkJRVThzVVVGQlVDeERRVUZuUWl4UFFVRm9RaXhEUVVGNVFpeHRRa0ZCVnp0QlFVTnNReXhuUWtGQlVTeFRRVUZTTEVOQlFXdENMRWRCUVd4Q0xFTkJRWE5DTEU5QlFVOHNVMEZCTjBJN1FVRkRSQ3hQUVVaRU8wRkJSMFFzUzBGS1JDeE5RVXRKTzBGQlEwWXNZVUZCVHl4UlFVRlFMRU5CUVdkQ0xFOUJRV2hDTEVOQlFYbENMRzFDUVVGWE8wRkJRMnhETEdkQ1FVRlJMRk5CUVZJc1EwRkJhMElzVFVGQmJFSXNRMEZCZVVJc1QwRkJUeXhUUVVGb1F6dEJRVU5FTEU5QlJrUTdRVUZIUkR0QlFVTkdMRWRCV0VRN1FVRlpSQ3hET3p0QlFVZElMRTlCUVU4c1QwRkJVQ3hIUVVGcFFpeE5RVUZxUWpzN096czdPenM3TzBGRE0wSkJPenM3T3p0QlFVdEJMRWxCUVUwc1UwRkJVeXhSUVVGUkxGVkJRVklzUTBGQlpqczdRVUZGUVRzN096czdTVUZKVFN4Uk96dEJRVVZLT3pzN096dEJRVXRCTEc5Q1FVRmhMRTFCUVdJc1JVRkJjVUk3UVVGQlFUczdRVUZCUVRzN1FVRkRia0lzVTBGQlN5eExRVUZNTEVkQlFXRXNRMEZCWWpzN1FVRkZRU3hUUVVGTExGVkJRVXdzUjBGQmEwSXNUMEZCVHl4VlFVRjZRanRCUVVOQkxGTkJRVXNzVTBGQlRDeEhRVUZwUWl4VFFVRlRMR2RDUVVGVUxFTkJRVEJDTEcxQ1FVRXhRaXhEUVVGcVFqdEJRVU5CTEZOQlFVc3NUMEZCVEN4SFFVRmxMRk5CUVZNc1owSkJRVlFzUTBGQk1FSXNlVUpCUVRGQ0xFTkJRV1k3UVVGRFFTeFRRVUZMTEUxQlFVd3NSMEZCWXl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzYVVKQlFYWkNMRU5CUVdRN1FVRkRRU3hUUVVGTExGRkJRVXdzUjBGQlowSXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHdENRVUYyUWl4RFFVRm9RanRCUVVOQkxGTkJRVXNzV1VGQlRDeEhRVUZ2UWl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzYVVKQlFYWkNMRU5CUVhCQ08wRkJRMEVzVTBGQlN5eE5RVUZNTEVkQlFXTXNVMEZCVXl4blFrRkJWQ3hEUVVFd1FpeDNRa0ZCTVVJc1EwRkJaRHRCUVVOQkxGTkJRVXNzUzBGQlRDeEhRVUZoTEZOQlFWTXNaMEpCUVZRc1EwRkJNRUlzWlVGQk1VSXNRMEZCWWp0QlFVTkJMRk5CUVVzc1pVRkJUQ3hIUVVGMVFpeFRRVUZUTEdkQ1FVRlVMRU5CUVRCQ0xEQkRRVUV4UWl4RFFVRjJRanRCUVVOQkxGTkJRVXNzVVVGQlRDeEhRVUZuUWl4VFFVRlRMR2RDUVVGVUxFTkJRVEJDTEhGQ1FVRXhRaXhEUVVGb1FqczdRVUZGUVN4VFFVRkxMRkZCUVV3c1IwRkJaMElzUzBGQlN5eFBRVUZNTEVOQlFXRXNUVUZCTjBJN1FVRkRRU3hUUVVGTExFMUJRVXdzUjBGQll5eExRVUZrT3p0QlFVVkJMRk5CUVVzc1RVRkJUQ3hIUVVGakxFTkJRMW9zVTBGRVdTeEZRVVZhTEZOQlJsa3NSVUZIV2l4VFFVaFpMRVZCU1Zvc1UwRktXU3hGUVV0YUxGTkJURmtzUTBGQlpEczdRVUZSUVN4VFFVRkxMR2RDUVVGTUxFZEJRWGRDTEVOQlEzUkNMRk5CUkhOQ0xFVkJSWFJDTEZOQlJuTkNMRVZCUjNSQ0xGTkJTSE5DTEVWQlNYUkNMRk5CU25OQ0xFVkJTM1JDTEZOQlRITkNMRU5CUVhoQ096dEJRVkZCTEZOQlFVc3NUVUZCVEN4SFFVRmpMRWxCUVVrc1RVRkJTaXhEUVVGWExFdEJRVXNzVFVGQmFFSXNRMEZCWkRzN1FVRkZRU3hUUVVGTExFMUJRVXdzUTBGQldTeEZRVUZhTEVOQlFXVXNVMEZCWml4RlFVRXdRaXhoUVVGSk8wRkJRelZDTEZWQlFVa3NUVUZCU3l4TFFVRk1MRWRCUVdFc1EwRkJZaXhKUVVGclFpeE5RVUZMTEZGQlFVd3NSMEZCWjBJc1EwRkJiRU1zU1VGQmRVTXNUVUZCU3l4TlFVRk1MRWxCUVdVc1MwRkJNVVFzUlVGQmFVVTdRVUZETDBRc1kwRkJTeXhMUVVGTU8wRkJRMEVzWTBGQlN5eFhRVUZNTzBGQlEwUTdRVUZEUml4TFFVeEVPenRCUVU5QkxGTkJRVXNzVFVGQlRDeERRVUZaTEVWQlFWb3NRMEZCWlN4VlFVRm1MRVZCUVRKQ0xHRkJRVWs3UVVGRE4wSXNWVUZCU1N4TlFVRkxMRXRCUVV3c1IwRkJZU3hEUVVGaUxFbEJRV3RDTEVOQlFXeENMRWxCUVhkQ0xFMUJRVXNzVFVGQlRDeEpRVUZsTEV0QlFUTkRMRVZCUVd0RU8wRkJRMmhFTEdOQlFVc3NTMEZCVER0QlFVTkJMR05CUVVzc1YwRkJURHRCUVVORU8wRkJRMFlzUzBGTVJEczdRVUZQUVN4VFFVRkxMRmRCUVV3N08wRkJSVUVzVTBGQlN5eFRRVUZNTEVOQlFXVXNUMEZCWml4RFFVRjFRaXhWUVVGRExFOUJRVVFzUlVGQlZTeExRVUZXTEVWQlFXOUNPMEZCUTNwRExHTkJRVkVzWjBKQlFWSXNRMEZCZVVJc1QwRkJla0lzUlVGQmEwTXNXVUZCVFR0QlFVTjBReXhqUVVGTExFdEJRVXdzUjBGQllTeExRVUZpTzBGQlEwRXNZMEZCU3l4WFFVRk1PMEZCUTBRc1QwRklSRHRCUVVsRUxFdEJURVE3TzBGQlQwRXNWMEZCVHl4blFrRkJVQ3hEUVVGM1FpeFJRVUY0UWl4RlFVRnJReXhaUVVGTk8wRkJRM1JETEZsQlFVc3NTMEZCVER0QlFVTkVMRXRCUmtRN1FVRkhSRHM3UVVGRlJEczdPenM3T3pzN08ydERRVXRqTzBGQlFVRTdPMEZCUTFvc1YwRkJTeXhOUVVGTUxFZEJRV01zU1VGQlpEczdRVUZGUVN4bFFVRlRMR0ZCUVZRc1EwRkJkVUlzTWtKQlFYWkNMRVZCUVc5RUxGTkJRWEJFTEVOQlFUaEVMRTFCUVRsRUxFTkJRWEZGTERCQ1FVRnlSVHRCUVVOQkxGZEJRVXNzVTBGQlRDeERRVUZsTEV0QlFVc3NTMEZCY0VJc1JVRkJNa0lzVTBGQk0wSXNRMEZCY1VNc1IwRkJja01zUTBGQmVVTXNNRUpCUVhwRE96dEJRVVZCTEdWQlFWTXNZVUZCVkN4RFFVRjFRaXhwUTBGQmRrSXNSVUZCTUVRc1UwRkJNVVFzUTBGQmIwVXNUVUZCY0VVc1EwRkJNa1VzWjBOQlFUTkZPMEZCUTBFc1YwRkJTeXhQUVVGTUxFTkJRV0VzUzBGQlN5eExRVUZzUWl4RlFVRjVRaXhUUVVGNlFpeERRVUZ0UXl4SFFVRnVReXhEUVVGMVF5eG5RMEZCZGtNN08wRkJSVUVzVjBGQlN5eFpRVUZNTEVOQlFXdENMRk5CUVd4Q0xFZEJRVGhDTEV0QlFVc3NTMEZCVEN4SFFVRmhMRU5CUVRORE96dEJRVVZCTEdWQlFWTXNZVUZCVkN4RFFVRjFRaXhuUTBGQmRrSXNSVUZCZVVRc1UwRkJla1FzUTBGQmJVVXNUVUZCYmtVc1EwRkJNRVVzSzBKQlFURkZPMEZCUTBFc1YwRkJTeXhOUVVGTUxFTkJRVmtzUzBGQlN5eExRVUZxUWl4RlFVRjNRaXhUUVVGNFFpeERRVUZyUXl4SFFVRnNReXhEUVVGelF5d3JRa0ZCZEVNN08wRkJSVUVzVjBGQlN5eExRVUZNTEVOQlFWY3NUMEZCV0N4RFFVRnZRaXh0UWtGQlZ6dEJRVU0zUWl4blFrRkJVU3hMUVVGU0xFTkJRV01zUzBGQlpDeEhRVUZ6UWl4UFFVRkxMRTFCUVV3c1EwRkJXU3hQUVVGTExFdEJRV3BDTEVOQlFYUkNPMEZCUTBRc1QwRkdSRHM3UVVGSlFTeFhRVUZMTEV0QlFVdzdPMEZCUlVFc1YwRkJTeXhSUVVGTUxFTkJRV01zUzBGQlpDeERRVUZ2UWl4WFFVRndRaXhIUVVGclF5eExRVUZMTEUxQlFVd3NRMEZCV1N4TFFVRkxMRXRCUVdwQ0xFTkJRV3hET3p0QlFVVkJMR0ZCUVU4c1ZVRkJVQ3hEUVVGdFFpeFpRVUZOTzBGQlEzWkNMR1ZCUVVzc1RVRkJUQ3hIUVVGakxFdEJRV1E3UVVGRFJDeFBRVVpFTEVWQlJVY3NTVUZHU0R0QlFVZEVPenRCUVVWRU96czdPenM3T3pzMFFrRkxVVHRCUVVGQk96dEJRVU5PTEZWQlFVa3NTMEZCU3l4VlFVRk1MRU5CUVdkQ0xIRkNRVUZvUWl4SFFVRjNReXhEUVVGNFF5eEhRVUUwUXl4SFFVRTFReXhKUVVGdFJDeExRVUZMTEZWQlFVd3NRMEZCWjBJc2NVSkJRV2hDTEVkQlFYZERMRU5CUVhoRExFZEJRVFJETEVOQlFVVXNTMEZCU3l4VlFVRk1MRU5CUVdkQ0xIRkNRVUZvUWl4SFFVRjNReXhOUVVFeFF5eEhRVUZ0UkN4SFFVRjBTaXhGUVVFeVNqdEJRVU42U2l4aFFVRkxMR1ZCUVV3c1EwRkJjVUlzVDBGQmNrSXNRMEZCT0VJc2JVSkJRVmM3UVVGRGRrTXNhMEpCUVZFc1MwRkJVaXhEUVVGakxHVkJRV1FzUjBGQlowTXNUMEZCU3l4blFrRkJUQ3hEUVVGelFpeFBRVUZMTEV0QlFUTkNMRU5CUVdoRE8wRkJRMFFzVTBGR1JEdEJRVWRCTEdGQlFVc3NVVUZCVEN4RFFVRmpMRTlCUVdRc1EwRkJkVUlzYlVKQlFWYzdRVUZEYUVNc2EwSkJRVkVzUzBGQlVpeERRVUZqTEZkQlFXUXNSMEZCTkVJc1QwRkJTeXhuUWtGQlRDeERRVUZ6UWl4UFFVRkxMRXRCUVROQ0xFTkJRVFZDTzBGQlEwUXNVMEZHUkR0QlFVZEVMRTlCVUVRc1RVRlJTenRCUVVOSUxHRkJRVXNzWlVGQlRDeERRVUZ4UWl4UFFVRnlRaXhEUVVFNFFpeHRRa0ZCVnp0QlFVTjJReXhyUWtGQlVTeExRVUZTTEVOQlFXTXNaVUZCWkN4SFFVRm5ReXhUUVVGb1F6dEJRVU5FTEZOQlJrUTdRVUZIUVN4aFFVRkxMRkZCUVV3c1EwRkJZeXhQUVVGa0xFTkJRWFZDTEcxQ1FVRlhPMEZCUTJoRExHdENRVUZSTEV0QlFWSXNRMEZCWXl4WFFVRmtMRWRCUVRSQ0xGTkJRVFZDTzBGQlEwUXNVMEZHUkR0QlFVZEVPMEZCUTBZN096czdPenRCUVVkSUxFOUJRVThzVDBGQlVDeEhRVUZwUWl4UlFVRnFRanM3T3pzN096czdPMEZETVVsQk96czdPMGxCU1Uwc1N6czdRVUZGU2pzN096czdPenM3UVVGUlFTeHBRa0ZCV1N4TlFVRmFMRVZCUVcxQ08wRkJRVUU3TzBGQlFVRTdPMEZCUldwQ0xGTkJRVXNzUzBGQlRDeEhRVUZoTEVsQlFVa3NTMEZCU2l4RFFVRlZMRTlCUVU4c1NVRkJha0lzUTBGQllqdEJRVU5CTEZOQlFVc3NTMEZCVEN4RFFVRlhMRkZCUVZnc1IwRkJjMElzU1VGQmRFSTdPMEZCUlVFc1UwRkJTeXhOUVVGTUxFZEJRV01zVFVGQlpEczdRVUZGUVN4UlFVRkhMR0ZCUVdFc1QwRkJZaXhEUVVGeFFpeFBRVUZ5UWl4TlFVRnJReXhKUVVGeVF5eEZRVUV5UXp0QlFVTjZReXhYUVVGTExFdEJRVXdzUjBGQllTeExRVUZMTEV0QlFVd3NRMEZCVnl4aFFVRmhMRTlCUVdJc1EwRkJjVUlzVDBGQmNrSXNRMEZCV0N4RFFVRmlPMEZCUTBFc1YwRkJTeXhMUVVGTUxFZEJRV0VzUzBGQlN5eExRVUZNTEVkQlFXRXNTMEZCU3l4TFFVRk1MRWRCUVdFc1MwRkJNVUlzUjBGQmEwTXNTMEZCU3l4TFFVRk1MRWRCUVdFc1NVRkJOVVE3UVVGRFJDeExRVWhFTEUxQlIwODdRVUZEVEN4WFFVRkxMRXRCUVV3c1IwRkJZU3hKUVVGaU8wRkJRMEVzYlVKQlFXRXNUMEZCWWl4RFFVRnhRaXhQUVVGeVFpeEZRVUU0UWl4TFFVRkxMRXRCUVc1RE8wRkJRMFE3TzBGQlJVUXNVMEZCU3l4SlFVRk1PenRCUVVWQkxGZEJRVThzUjBGQlVDeERRVUZYTEdkQ1FVRllMRU5CUVRSQ0xFOUJRVFZDTEVWQlFYRkRMRmxCUVUwN1FVRkRla01zV1VGQlN5eEpRVUZNTzBGQlEwUXNTMEZHUkR0QlFVbEVPenM3T3pKQ1FVVk5PMEZCUTB3c1ZVRkJSeXhMUVVGTExFdEJRVXdzU1VGQll5eEpRVUZxUWl4RlFVRnpRanRCUVVOd1FpeGhRVUZMTEUxQlFVd3NRMEZCV1N4TFFVRmFMRU5CUVd0Q0xFZEJRV3hDTEVkQlFYZENMSFZDUVVGNFFqdEJRVU5CTEdGQlFVc3NTMEZCVEN4RFFVRlhMRXRCUVZnN1FVRkRRU3hoUVVGTExFdEJRVXdzUTBGQlZ5eE5RVUZZTEVkQlFXOUNMRU5CUVhCQ08wRkJRMEVzWVVGQlN5eExRVUZNTEVkQlFXRXNTMEZCWWp0QlFVTkJMSEZDUVVGaExFOUJRV0lzUTBGQmNVSXNUMEZCY2tJc1JVRkJPRUlzUzBGQlN5eExRVUZ1UXp0QlFVTkVMRTlCVGtRc1RVRk5UenRCUVVOTUxHRkJRVXNzVFVGQlRDeERRVUZaTEV0QlFWb3NRMEZCYTBJc1IwRkJiRUlzUjBGQmQwSXNkVUpCUVhoQ08wRkJRMEVzWVVGQlN5eExRVUZNTEVOQlFWY3NTVUZCV0R0QlFVTkJMR0ZCUVVzc1MwRkJUQ3hEUVVGWExFMUJRVmdzUjBGQmIwSXNRMEZCY0VJN1FVRkRRU3hoUVVGTExFdEJRVXdzUjBGQllTeEpRVUZpTzBGQlEwRXNjVUpCUVdFc1QwRkJZaXhEUVVGeFFpeFBRVUZ5UWl4RlFVRTRRaXhMUVVGTExFdEJRVzVETzBGQlEwUTdRVUZEUmpzN096czdPMEZCUjBnc1QwRkJUeXhQUVVGUUxFZEJRV2xDTEV0QlFXcENPenM3T3pzN096czdRVU4wUkVFN096czdTVUZKVFN4bE96dEJRVVZLT3pzN096dEJRVXRCTERKQ1FVRmhMRTFCUVdJc1JVRkJjVUk3UVVGQlFUczdRVUZCUVRzN1FVRkRia0lzVTBGQlN5eE5RVUZNTEVkQlFXTXNUVUZCWkR0QlFVTkJMRk5CUVVzc1UwRkJUQ3hIUVVGcFFpeEpRVUZKTEUxQlFVb3NSVUZCYWtJN1FVRkRRU3hUUVVGTExHbENRVUZNTzBGQlEwRXNVMEZCU3l4SlFVRk1PMEZCUTBFc1YwRkJUeXhYUVVGUUxFTkJRVzFDTEZsQlFVMDdRVUZEZGtJc1dVRkJTeXhKUVVGTU8wRkJRMFFzUzBGR1JDeEZRVVZITEVkQlJrZzdRVUZIUkRzN1FVRkZSRHM3T3pzN096czdPekpDUVV0UE8wRkJRMHdzVjBGQlN5eHBRa0ZCVER0QlFVTkJMR0ZCUVU4c1owSkJRVkFzUTBGQmQwSXNVVUZCZUVJc1JVRkJhME1zUzBGQlN5eExRVUZNTEVWQlFXeERPMEZCUTBRN08wRkJSVVE3T3pzN096czdPM2REUVV0dlFqdEJRVU5zUWl4WFFVRkxMRk5CUVV3c1EwRkJaU3hOUVVGbUxFZEJRWGRDTEZOQlFWTXNaMEpCUVZRc1QwRkJPRUlzUzBGQlN5eE5RVUZNTEVOQlFWa3NUVUZCTVVNc1EwRkJlRUk3UVVGRFFTeFhRVUZMTEUxQlFVd3NSMEZCWXl4UFFVRlBMRmRCUVhKQ08wRkJRMFE3TzBGQlJVUTdPenM3T3pzN096UkNRVXRSTzBGQlFVRTdPMEZCUTA0c1YwRkJTeXhUUVVGTUxFTkJRV1VzVFVGQlppeERRVUZ6UWl4UFFVRjBRaXhEUVVFclFpeHRRa0ZCVnp0QlFVTjRReXhaUVVGSkxGTkJRVk1zVVVGQlVTeHhRa0ZCVWl4SFFVRm5ReXhIUVVFM1F6dEJRVU5CTEZsQlFVa3NVMEZCVXl4UFFVRkxMRTFCUVdRc1NVRkJkMElzUTBGQk5VSXNSVUZEUlN4UlFVRlJMRk5CUVZJc1IwRkJiMElzVVVGQlVTeFRRVUZTTEVOQlFXdENMRTlCUVd4Q0xFTkJRVEJDTEU5QlFVc3NUVUZCVEN4RFFVRlpMRTFCUVhSRExFVkJRVGhETEU5QlFVc3NUVUZCVEN4RFFVRlpMRkZCUVRGRUxFTkJRWEJDTzBGQlEwZ3NUMEZLUkR0QlFVdEVPenM3T3pzN1FVRkhTQ3hQUVVGUExFOUJRVkFzUjBGQmFVSXNaVUZCYWtJN096czdPMEZEZGtSQk96czdPMEZCUTBFN096czdRVUZEUVRzN096dEJRVU5CT3pzN08wRkJSVUU3T3pzN096dEJRVWRCT3pzN096dEJRVXRCTEVsQlFVMHNXVUZCV1N3NFFrRkJiMEk3UVVGRGNFTXNWVUZCVXl4UlFVUXlRanRCUVVWd1F5eFpRVUZYTzBGQlJubENMRU5CUVhCQ0xFTkJRV3hDT3p0QlFVdEJPenM3T3pzN1FVRmtRVHRCUVcxQ1FTeEpRVUZOTEZsQlFWa3NjVUpCUVZjN1FVRkRNMElzWTBGQllTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc1RVRkJka0lzUTBGRVl6dEJRVVV6UWl4WlFVRlhMRk5CUVZNc1owSkJRVlFzUTBGQk1FSXNjVUpCUVRGQ0xFTkJSbWRDTzBGQlJ6TkNMR0ZCUVZrN1FVRklaU3hEUVVGWUxFTkJRV3hDT3p0QlFVOUJPenM3T3p0QlFVdEJMRWxCUVUwc1UwRkJVeXgxUWtGQllUdEJRVU14UWl4alFVRmhMRk5CUVZNc1lVRkJWQ3hEUVVGMVFpeFRRVUYyUWp0QlFVUmhMRU5CUVdJc1EwRkJaanM3UVVGSlFUczdPenM3UVVGTFFTeEpRVUZOTEZGQlFWRXNiMEpCUVZVN1FVRkRkRUlzVVVGQlRTd3JRa0ZFWjBJN1FVRkZkRUlzVDBGQlN5eFRRVUZUTEdGQlFWUXNRMEZCZFVJc1owSkJRWFpDTEVOQlJtbENPMEZCUjNSQ0xGTkJRVThzVTBGQlV5eGhRVUZVTEVOQlFYVkNMR05CUVhaQ08wRkJTR1VzUTBGQlZpeERRVUZrT3p0QlFVMUJPenM3TzBGQlNVRXNTVUZCVFN4VFFVRlRMRzlDUVVGVkxHRkJRVllzUTBGQmQwSTdRVUZEY2tNc1lVRkJWeXhUUVVGVExHRkJRVlFzUTBGQmRVSXNVMEZCZGtJc1EwRkVNRUk3UVVGRmNrTXNXVUZCVlN4TFFVWXlRanRCUVVkeVF5eFpRVUZWTEVsQlNESkNPMEZCU1hKRExGRkJRVTA3UVVGS0swSXNRMEZCZUVJc1EwRkJaanM3UVVGUFFTeFBRVUZQTEUxQlFWQXNSMEZCWjBJc1dVRkJUVHRCUVVOd1FpeGhRVUZYTEZsQlFVczdRVUZEWkN4aFFVRlRMR0ZCUVZRc1EwRkJkVUlzVTBGQmRrSXNSVUZCYTBNc1UwRkJiRU1zUTBGQk5FTXNSMEZCTlVNc1EwRkJaMFFzVTBGQmFFUTdRVUZEUVN4bFFVRlhMRmxCUVUwN1FVRkRaaXhsUVVGVExHRkJRVlFzUTBGQmRVSXNVMEZCZGtJc1JVRkJhME1zUzBGQmJFTXNRMEZCZDBNc1QwRkJlRU1zUjBGQmEwUXNUVUZCYkVRN1FVRkRSQ3hMUVVaRUxFVkJSVWNzU1VGR1NEdEJRVWRFTEVkQlRFUXNSVUZMUnl4SlFVeElPMEZCVFVRc1EwRlFSQ0lzSW1acGJHVWlPaUpuWlc1bGNtRjBaV1F1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtHWjFibU4wYVc5dUlHVW9kQ3h1TEhJcGUyWjFibU4wYVc5dUlITW9ieXgxS1h0cFppZ2hibHR2WFNsN2FXWW9JWFJiYjEwcGUzWmhjaUJoUFhSNWNHVnZaaUJ5WlhGMWFYSmxQVDFjSW1aMWJtTjBhVzl1WENJbUpuSmxjWFZwY21VN2FXWW9JWFVtSm1FcGNtVjBkWEp1SUdFb2J5d2hNQ2s3YVdZb2FTbHlaWFIxY200Z2FTaHZMQ0V3S1R0MllYSWdaajF1WlhjZ1JYSnliM0lvWENKRFlXNXViM1FnWm1sdVpDQnRiMlIxYkdVZ0oxd2lLMjhyWENJblhDSXBPM1JvY205M0lHWXVZMjlrWlQxY0lrMVBSRlZNUlY5T1QxUmZSazlWVGtSY0lpeG1mWFpoY2lCc1BXNWJiMTA5ZTJWNGNHOXlkSE02ZTMxOU8zUmJiMTFiTUYwdVkyRnNiQ2hzTG1WNGNHOXlkSE1zWm5WdVkzUnBiMjRvWlNsN2RtRnlJRzQ5ZEZ0dlhWc3hYVnRsWFR0eVpYUjFjbTRnY3lodVAyNDZaU2w5TEd3c2JDNWxlSEJ2Y25SekxHVXNkQ3h1TEhJcGZYSmxkSFZ5YmlCdVcyOWRMbVY0Y0c5eWRITjlkbUZ5SUdrOWRIbHdaVzltSUhKbGNYVnBjbVU5UFZ3aVpuVnVZM1JwYjI1Y0lpWW1jbVZ4ZFdseVpUdG1iM0lvZG1GeUlHODlNRHR2UEhJdWJHVnVaM1JvTzI4ckt5bHpLSEpiYjEwcE8zSmxkSFZ5YmlCemZTa2lMQ0lvWm5WdVkzUnBiMjRvY205dmRDd2dabUZqZEc5eWVTa2dlMXh5WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJrWldacGJtVWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQW1KaUJrWldacGJtVXVZVzFrS1NCN1hISmNiaUFnSUNBZ0lDQWdaR1ZtYVc1bEtHWjFibU4wYVc5dUtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRmpkRzl5ZVNoeWIyOTBLVHRjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHMXZaSFZzWlNBOVBUMGdYQ0p2WW1wbFkzUmNJaUFtSmlCdGIyUjFiR1V1Wlhod2IzSjBjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lHMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1ptRmpkRzl5ZVNoeWIyOTBLVHRjY2x4dUlDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnY205dmRDNWliMlI1Ylc5MmFXNGdQU0JtWVdOMGIzSjVLSEp2YjNRcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5S0NoM2FXNWtiM2NnZkh3Z2UzMHBMQ0JtZFc1amRHbHZiaWgzYVc1a2IzY3BJSHRjY2x4dUlDQWdJSFpoY2lCemRtZE9VeUE5SUZ3aWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1kY0lqdGNjbHh1WEhKY2JuWmhjaUJzYjJOaGRHbHZia2h5WldZZ1BTQW5KenRjY2x4dVhHNTJZWElnYzNWaVpuSmhiV1ZGYm1GaWJHVmtJRDBnZEhKMVpUdGNjbHh1ZG1GeUlHVjRjSEpsYzNOcGIyNXpVR3gxWjJsdU8xeHlYRzUyWVhJZ2FYTlRZV1poY21rZ1BTQXZYaWdvUHlGamFISnZiV1Y4WVc1a2NtOXBaQ2t1S1NwellXWmhjbWt2YVM1MFpYTjBLRzVoZG1sbllYUnZjaTUxYzJWeVFXZGxiblFwTzF4eVhHNTJZWElnWTJGamFHVmtRMjlzYjNKeklEMGdlMzA3WEhKY2JuWmhjaUJpYlY5eWIzVnVaR1Z5SUQwZ1RXRjBhQzV5YjNWdVpEdGNjbHh1ZG1GeUlHSnRYM0p1WkR0Y2NseHVkbUZ5SUdKdFgzQnZkeUE5SUUxaGRHZ3VjRzkzTzF4eVhHNTJZWElnWW0xZmMzRnlkQ0E5SUUxaGRHZ3VjM0Z5ZER0Y2NseHVkbUZ5SUdKdFgyRmljeUE5SUUxaGRHZ3VZV0p6TzF4eVhHNTJZWElnWW0xZlpteHZiM0lnUFNCTllYUm9MbVpzYjI5eU8xeHlYRzUyWVhJZ1ltMWZiV0Y0SUQwZ1RXRjBhQzV0WVhnN1hISmNiblpoY2lCaWJWOXRhVzRnUFNCTllYUm9MbTFwYmp0Y2NseHVkbUZ5SUdKc2FYUjBaWElnUFNBeE1EdGNjbHh1WEhKY2JuWmhjaUJDVFUxaGRHZ2dQU0I3ZlR0Y2NseHVLR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IyWVhJZ2NISnZjR1Z5ZEhsT1lXMWxjeUE5SUU5aWFtVmpkQzVuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6S0UxaGRHZ3BPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhCeWIzQmxjblI1VG1GdFpYTXViR1Z1WjNSb08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0JDVFUxaGRHaGJjSEp2Y0dWeWRIbE9ZVzFsYzF0cFhWMGdQU0JOWVhSb1czQnliM0JsY25SNVRtRnRaWE5iYVYxZE8xeHlYRzRnSUNBZ2ZWeHlYRzU5S0NrcE8xeHlYRzVjY2x4dVpuVnVZM1JwYjI0Z1VISnZhbVZqZEVsdWRHVnlabUZqWlNncGUzSmxkSFZ5YmlCN2ZYMDdYSEpjYmx4eVhHNUNUVTFoZEdndWNtRnVaRzl0SUQwZ1RXRjBhQzV5WVc1a2IyMDdYSEpjYmtKTlRXRjBhQzVoWW5NZ1BTQm1kVzVqZEdsdmJpaDJZV3dwZTF4eVhHNGdJQ0FnZG1GeUlIUlBabFpoYkNBOUlIUjVjR1Z2WmlCMllXdzdYSEpjYmlBZ0lDQnBaaWgwVDJaV1lXd2dQVDA5SUNkdlltcGxZM1FuSUNZbUlIWmhiQzVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmhZbk5CY25JZ1BTQkJjbkpoZVM1aGNIQnNlU2h1ZFd4c0xIdHNaVzVuZEdnNmRtRnNMbXhsYm1kMGFIMHBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjJZV3d1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGaWMwRnljbHRwWFNBOUlFMWhkR2d1WVdKektIWmhiRnRwWFNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJoWW5OQmNuSTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RtRnNLVHRjY2x4dVhISmNibjFjY2x4dWRtRnlJR1JsWm1GMWJIUkRkWEoyWlZObFoyMWxiblJ6SUQwZ01UVXdPMXh5WEc1MllYSWdaR1ZuVkc5U1lXUnpJRDBnVFdGMGFDNVFTUzh4T0RBN1hISmNiblpoY2lCeWIzVnVaRU52Y201bGNpQTlJREF1TlRVeE9UdGNjbHh1WEhKY2JtWjFibU4wYVc5dUlISnZkVzVrVm1Gc2RXVnpLR1pzWVdjcGUxeHlYRzRnSUNBZ2FXWW9abXhoWnlsN1hISmNiaUFnSUNBZ0lDQWdZbTFmY201a0lEMGdUV0YwYUM1eWIzVnVaRHRjY2x4dUlDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJR0p0WDNKdVpDQTlJR1oxYm1OMGFXOXVLSFpoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIyWVd3N1hISmNiaUFnSUNBZ0lDQWdmVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzV5YjNWdVpGWmhiSFZsY3lobVlXeHpaU2s3WEhKY2JseHlYRzVtZFc1amRHbHZiaUJ5YjNWdVpGUnZNa1JsWTJsdFlXeHpLSFpoYkNsN1hISmNiaUFnSUNCeVpYUjFjbTRnVFdGMGFDNXliM1Z1WkNoMllXd3FNVEF3TURBcEx6RXdNREF3TzF4eVhHNTlYSEpjYmx4eVhHNW1kVzVqZEdsdmJpQnliM1Z1WkZSdk0wUmxZMmx0WVd4ektIWmhiQ2w3WEhKY2JpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1eWIzVnVaQ2gyWVd3cU1UQXdLUzh4TURBN1hISmNibjFjY2x4dVhISmNibVoxYm1OMGFXOXVJSE4wZVd4bFJHbDJLR1ZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1d2IzTnBkR2x2YmlBOUlDZGhZbk52YkhWMFpTYzdYSEpjYmlBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG5SdmNDQTlJREE3WEhKY2JpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExteGxablFnUFNBd08xeHlYRzRnSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVrYVhOd2JHRjVJRDBnSjJKc2IyTnJKenRjY2x4dUlDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdWRISmhibk5tYjNKdFQzSnBaMmx1SUQwZ1pXeGxiV1Z1ZEM1emRIbHNaUzUzWldKcmFYUlVjbUZ1YzJadmNtMVBjbWxuYVc0Z1BTQW5NQ0F3Snp0Y2NseHVJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVZbUZqYTJaaFkyVldhWE5wWW1sc2FYUjVJQ0E5SUdWc1pXMWxiblF1YzNSNWJHVXVkMlZpYTJsMFFtRmphMlpoWTJWV2FYTnBZbWxzYVhSNUlEMGdKM1pwYzJsaWJHVW5PMXh5WEc0Z0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1MGNtRnVjMlp2Y20xVGRIbHNaU0E5SUdWc1pXMWxiblF1YzNSNWJHVXVkMlZpYTJsMFZISmhibk5tYjNKdFUzUjViR1VnUFNCbGJHVnRaVzUwTG5OMGVXeGxMbTF2ZWxSeVlXNXpabTl5YlZOMGVXeGxJRDBnWENKd2NtVnpaWEoyWlMwelpGd2lPMXh5WEc1OVhISmNibHh5WEc1bWRXNWpkR2x2YmlCemRIbHNaVlZ1YzJWc1pXTjBZV0pzWlVScGRpaGxiR1Z0Wlc1MEtYdGNjbHh1SUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1ZFhObGNsTmxiR1ZqZENBOUlDZHViMjVsSnp0Y2NseHVJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVUVzk2VlhObGNsTmxiR1ZqZENBOUlDZHViMjVsSnp0Y2NseHVJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVkMlZpYTJsMFZYTmxjbE5sYkdWamRDQTlJQ2R1YjI1bEp6dGNjbHh1SUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1YjFWelpYSlRaV3hsWTNRZ1BTQW5ibTl1WlNjN1hISmNibHh5WEc1OVhISmNibHh5WEc1bWRXNWpkR2x2YmlCQ1RVVnVkR1Z5Um5KaGJXVkZkbVZ1ZENodUxHTXNkQ3hrS1h0Y2NseHVJQ0FnSUhSb2FYTXVkSGx3WlNBOUlHNDdYSEpjYmlBZ0lDQjBhR2x6TG1OMWNuSmxiblJVYVcxbElEMGdZenRjY2x4dUlDQWdJSFJvYVhNdWRHOTBZV3hVYVcxbElEMGdkRHRjY2x4dUlDQWdJSFJvYVhNdVpHbHlaV04wYVc5dUlEMGdaQ0E4SURBZ1B5QXRNVG94TzF4eVhHNTlYSEpjYmx4eVhHNW1kVzVqZEdsdmJpQkNUVU52YlhCc1pYUmxSWFpsYm5Rb2JpeGtLWHRjY2x4dUlDQWdJSFJvYVhNdWRIbHdaU0E5SUc0N1hISmNiaUFnSUNCMGFHbHpMbVJwY21WamRHbHZiaUE5SUdRZ1BDQXdJRDhnTFRFNk1UdGNjbHh1ZlZ4eVhHNWNjbHh1Wm5WdVkzUnBiMjRnUWsxRGIyMXdiR1YwWlV4dmIzQkZkbVZ1ZENodUxHTXNkQ3hrS1h0Y2NseHVJQ0FnSUhSb2FYTXVkSGx3WlNBOUlHNDdYSEpjYmlBZ0lDQjBhR2x6TG1OMWNuSmxiblJNYjI5d0lEMGdZenRjY2x4dUlDQWdJSFJvYVhNdWRHOTBZV3hNYjI5d2N5QTlJSFE3WEhKY2JpQWdJQ0IwYUdsekxtUnBjbVZqZEdsdmJpQTlJR1FnUENBd0lEOGdMVEU2TVR0Y2NseHVmVnh5WEc1Y2NseHVablZ1WTNScGIyNGdRazFUWldkdFpXNTBVM1JoY25SRmRtVnVkQ2h1TEdZc2RDbDdYSEpjYmlBZ0lDQjBhR2x6TG5SNWNHVWdQU0J1TzF4eVhHNGdJQ0FnZEdocGN5NW1hWEp6ZEVaeVlXMWxJRDBnWmp0Y2NseHVJQ0FnSUhSb2FYTXVkRzkwWVd4R2NtRnRaWE1nUFNCME8xeHlYRzU5WEhKY2JseHlYRzVtZFc1amRHbHZiaUJDVFVSbGMzUnliM2xGZG1WdWRDaHVMSFFwZTF4eVhHNGdJQ0FnZEdocGN5NTBlWEJsSUQwZ2JqdGNjbHh1SUNBZ0lIUm9hWE11ZEdGeVoyVjBJRDBnZER0Y2NseHVmVnh5WEc1Y2NseHVablZ1WTNScGIyNGdYMkZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9aWFpsYm5ST1lXMWxMQ0JqWVd4c1ltRmpheWw3WEhKY2JseHlYRzRnSUNBZ2FXWWdLQ0YwYUdsekxsOWpZbk5iWlhabGJuUk9ZVzFsWFNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1ZlkySnpXMlYyWlc1MFRtRnRaVjBnUFNCYlhUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11WDJOaWMxdGxkbVZ1ZEU1aGJXVmRMbkIxYzJnb1kyRnNiR0poWTJzcE8xeHlYRzVjY2x4dVhIUnlaWFIxY200Z1puVnVZM1JwYjI0b0tTQjdYSEpjYmx4MFhIUjBhR2x6TG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb1pYWmxiblJPWVcxbExDQmpZV3hzWW1GamF5azdYSEpjYmx4MGZTNWlhVzVrS0hSb2FYTXBPMXh5WEc1OVhISmNibHh5WEc1bWRXNWpkR2x2YmlCZmNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpaGxkbVZ1ZEU1aGJXVXNZMkZzYkdKaFkyc3BlMXh5WEc1Y2NseHVJQ0FnSUdsbUlDZ2hZMkZzYkdKaFkyc3BlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMk5pYzF0bGRtVnVkRTVoYldWZElEMGdiblZzYkR0Y2NseHVJQ0FnSUgxbGJITmxJR2xtS0hSb2FYTXVYMk5pYzF0bGRtVnVkRTVoYldWZEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTQTlJREFzSUd4bGJpQTlJSFJvYVhNdVgyTmljMXRsZG1WdWRFNWhiV1ZkTG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCM2FHbHNaU2hwUEd4bGJpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVgyTmljMXRsZG1WdWRFNWhiV1ZkVzJsZElEMDlQU0JqWVd4c1ltRmpheWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlqWW5OYlpYWmxiblJPWVcxbFhTNXpjR3hwWTJVb2FTd3hLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ0xUMHhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWdUlDMDlJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhU0FyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppZ2hkR2hwY3k1ZlkySnpXMlYyWlc1MFRtRnRaVjB1YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZlkySnpXMlYyWlc1MFRtRnRaVjBnUFNCdWRXeHNPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYm4xY2NseHVYSEpjYm1aMWJtTjBhVzl1SUY5MGNtbG5aMlZ5UlhabGJuUW9aWFpsYm5ST1lXMWxMQ0JoY21kektYdGNjbHh1SUNBZ0lHbG1JQ2gwYUdsekxsOWpZbk5iWlhabGJuUk9ZVzFsWFNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCc1pXNGdQU0IwYUdsekxsOWpZbk5iWlhabGJuUk9ZVzFsWFM1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQnNaVzQ3SUdrckt5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJOaWMxdGxkbVZ1ZEU1aGJXVmRXMmxkS0dGeVozTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVablZ1WTNScGIyNGdjbUZ1Wkc5dFUzUnlhVzVuS0d4bGJtZDBhQ3dnWTJoaGNuTXBlMXh5WEc0Z0lDQWdhV1lvWTJoaGNuTWdQVDA5SUhWdVpHVm1hVzVsWkNsN1hISmNiaUFnSUNBZ0lDQWdZMmhoY25NZ1BTQW5ZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYcEJRa05FUlVaSFNFbEtTMHhOVGs5UVVWSlRWRlZXVjFoWldqRXlNelExTmpjNE9UQW5PMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkbUZ5SUdrN1hISmNiaUFnSUNCMllYSWdjbVZ6ZFd4MElEMGdKeWM3WEhKY2JpQWdJQ0JtYjNJZ0tHa2dQU0JzWlc1bmRHZzdJR2tnUGlBd095QXRMV2twSUhKbGMzVnNkQ0FyUFNCamFHRnljMXROWVhSb0xuSnZkVzVrS0UxaGRHZ3VjbUZ1Wkc5dEtDa2dLaUFvWTJoaGNuTXViR1Z1WjNSb0lDMGdNU2twWFR0Y2NseHVJQ0FnSUhKbGRIVnliaUJ5WlhOMWJIUTdYSEpjYm4xY2NseHVYSEpjYm1aMWJtTjBhVzl1SUVoVFZuUnZVa2RDS0dnc0lITXNJSFlwSUh0Y2NseHVJQ0FnSUhaaGNpQnlMQ0JuTENCaUxDQnBMQ0JtTENCd0xDQnhMQ0IwTzF4eVhHNGdJQ0FnYVdZZ0tHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BUMDlJREVwSUh0Y2NseHVJQ0FnSUNBZ0lDQnpJRDBnYUM1ekxDQjJJRDBnYUM1MkxDQm9JRDBnYUM1b08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FTQTlJRTFoZEdndVpteHZiM0lvYUNBcUlEWXBPMXh5WEc0Z0lDQWdaaUE5SUdnZ0tpQTJJQzBnYVR0Y2NseHVJQ0FnSUhBZ1BTQjJJQ29nS0RFZ0xTQnpLVHRjY2x4dUlDQWdJSEVnUFNCMklDb2dLREVnTFNCbUlDb2djeWs3WEhKY2JpQWdJQ0IwSUQwZ2RpQXFJQ2d4SUMwZ0tERWdMU0JtS1NBcUlITXBPMXh5WEc0Z0lDQWdjM2RwZEdOb0lDaHBJQ1VnTmlrZ2UxeHlYRzRnSUNBZ0lDQWdJR05oYzJVZ01Eb2djaUE5SUhZc0lHY2dQU0IwTENCaUlEMGdjRHNnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnWTJGelpTQXhPaUJ5SUQwZ2NTd2daeUE5SUhZc0lHSWdQU0J3T3lCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNCallYTmxJREk2SUhJZ1BTQndMQ0JuSUQwZ2Rpd2dZaUE5SUhRN0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lHTmhjMlVnTXpvZ2NpQTlJSEFzSUdjZ1BTQnhMQ0JpSUQwZ2Rqc2dZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNBME9pQnlJRDBnZEN3Z1p5QTlJSEFzSUdJZ1BTQjJPeUJpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0JqWVhObElEVTZJSElnUFNCMkxDQm5JRDBnY0N3Z1lpQTlJSEU3SUdKeVpXRnJPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlGc2djaXhjY2x4dUlDQWdJQ0FnSUNCbkxGeHlYRzRnSUNBZ0lDQWdJQ0JpSUYwN1hISmNibjFjY2x4dVhISmNibVoxYm1OMGFXOXVJRkpIUW5SdlNGTldLSElzSUdjc0lHSXBJSHRjY2x4dUlDQWdJR2xtSUNoaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQwOVBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ1p5QTlJSEl1Wnl3Z1lpQTlJSEl1WWl3Z2NpQTlJSEl1Y2p0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhaaGNpQnRZWGdnUFNCTllYUm9MbTFoZUNoeUxDQm5MQ0JpS1N3Z2JXbHVJRDBnVFdGMGFDNXRhVzRvY2l3Z1p5d2dZaWtzWEhKY2JpQWdJQ0FnSUNBZ1pDQTlJRzFoZUNBdElHMXBiaXhjY2x4dUlDQWdJQ0FnSUNCb0xGeHlYRzRnSUNBZ0lDQWdJSE1nUFNBb2JXRjRJRDA5UFNBd0lEOGdNQ0E2SUdRZ0x5QnRZWGdwTEZ4eVhHNGdJQ0FnSUNBZ0lIWWdQU0J0WVhnZ0x5QXlOVFU3WEhKY2JseHlYRzRnSUNBZ2MzZHBkR05vSUNodFlYZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCallYTmxJRzFwYmpvZ2FDQTlJREE3SUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdjam9nYUNBOUlDaG5JQzBnWWlrZ0t5QmtJQ29nS0djZ1BDQmlJRDhnTmpvZ01DazdJR2dnTHowZ05pQXFJR1E3SUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdaem9nYUNBOUlDaGlJQzBnY2lrZ0t5QmtJQ29nTWpzZ2FDQXZQU0EySUNvZ1pEc2dZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNCaU9pQm9JRDBnS0hJZ0xTQm5LU0FySUdRZ0tpQTBPeUJvSUM4OUlEWWdLaUJrT3lCaWNtVmhhenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnVzF4eVhHNGdJQ0FnSUNBZ0lDQm9MRnh5WEc0Z0lDQWdJQ0FnSUNCekxGeHlYRzRnSUNBZ0lDQWdJQ0IyWEhKY2JpQWdJQ0JkTzF4eVhHNTlYSEpjYmx4eVhHNW1kVzVqZEdsdmJpQmhaR1JUWVhSMWNtRjBhVzl1Vkc5U1IwSW9ZMjlzYjNJc2IyWm1jMlYwS1h0Y2NseHVJQ0FnSUhaaGNpQm9jM1lnUFNCU1IwSjBiMGhUVmloamIyeHZjbHN3WFNveU5UVXNZMjlzYjNKYk1WMHFNalUxTEdOdmJHOXlXekpkS2pJMU5TazdYSEpjYmlBZ0lDQm9jM1piTVYwZ0t6MGdiMlptYzJWME8xeHlYRzRnSUNBZ2FXWWdLR2h6ZGxzeFhTQStJREVwSUh0Y2NseHVJQ0FnSUNBZ0lDQm9jM1piTVYwZ1BTQXhPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdaV3h6WlNCcFppQW9hSE4yV3pGZElEdzlJREFwSUh0Y2NseHVJQ0FnSUNBZ0lDQm9jM1piTVYwZ1BTQXdPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlFaFRWblJ2VWtkQ0tHaHpkbHN3WFN4b2MzWmJNVjBzYUhOMld6SmRLVHRjY2x4dWZWeHlYRzVjY2x4dVpuVnVZM1JwYjI0Z1lXUmtRbkpwWjJoMGJtVnpjMVJ2VWtkQ0tHTnZiRzl5TEc5bVpuTmxkQ2w3WEhKY2JpQWdJQ0IyWVhJZ2FITjJJRDBnVWtkQ2RHOUlVMVlvWTI5c2IzSmJNRjBxTWpVMUxHTnZiRzl5V3pGZEtqSTFOU3hqYjJ4dmNsc3lYU295TlRVcE8xeHlYRzRnSUNBZ2FITjJXekpkSUNzOUlHOW1abk5sZER0Y2NseHVJQ0FnSUdsbUlDaG9jM1piTWwwZ1BpQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FITjJXekpkSUQwZ01UdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHVnNjMlVnYVdZZ0tHaHpkbHN5WFNBOElEQXBJSHRjY2x4dUlDQWdJQ0FnSUNCb2MzWmJNbDBnUFNBd08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUVoVFZuUnZVa2RDS0doemRsc3dYU3hvYzNaYk1WMHNhSE4yV3pKZEtUdGNjbHh1ZlZ4eVhHNWNjbHh1Wm5WdVkzUnBiMjRnWVdSa1NIVmxWRzlTUjBJb1kyOXNiM0lzYjJabWMyVjBLU0I3WEhKY2JpQWdJQ0IyWVhJZ2FITjJJRDBnVWtkQ2RHOUlVMVlvWTI5c2IzSmJNRjBxTWpVMUxHTnZiRzl5V3pGZEtqSTFOU3hqYjJ4dmNsc3lYU295TlRVcE8xeHlYRzRnSUNBZ2FITjJXekJkSUNzOUlHOW1abk5sZEM4ek5qQTdYSEpjYmlBZ0lDQnBaaUFvYUhOMld6QmRJRDRnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJR2h6ZGxzd1hTQXRQU0F4TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnWld4elpTQnBaaUFvYUhOMld6QmRJRHdnTUNrZ2UxeHlYRzRnSUNBZ0lDQWdJR2h6ZGxzd1hTQXJQU0F4TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnY21WMGRYSnVJRWhUVm5SdlVrZENLR2h6ZGxzd1hTeG9jM1piTVYwc2FITjJXekpkS1R0Y2NseHVmVnh5WEc1Y2NseHVablZ1WTNScGIyNGdZMjl0Y0c5dVpXNTBWRzlJWlhnb1l5a2dlMXh5WEc0Z0lDQWdkbUZ5SUdobGVDQTlJR011ZEc5VGRISnBibWNvTVRZcE8xeHlYRzRnSUNBZ2NtVjBkWEp1SUdobGVDNXNaVzVuZEdnZ1BUMGdNU0EvSUNjd0p5QXJJR2hsZUNBNklHaGxlRHRjY2x4dWZWeHlYRzVjY2x4dWRtRnlJSEpuWWxSdlNHVjRJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMllYSWdZMjlzYjNKTllYQWdQU0JiWFR0Y2NseHVJQ0FnSUhaaGNpQnBPMXh5WEc0Z0lDQWdkbUZ5SUdobGVEdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUd3lOVFk3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnYUdWNElEMGdhUzUwYjFOMGNtbHVaeWd4TmlrN1hISmNiaUFnSUNBZ0lDQWdZMjlzYjNKTllYQmJhVjBnUFNCb1pYZ3ViR1Z1WjNSb0lEMDlJREVnUHlBbk1DY2dLeUJvWlhnZ09pQm9aWGc3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1S0hJc0lHY3NJR0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh5UERBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeUlEMGdNRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvWnp3d0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1p5QTlJREE3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0dJOE1DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSWdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdKeU1uSUNzZ1kyOXNiM0pOWVhCYmNsMGdLeUJqYjJ4dmNrMWhjRnRuWFNBcklHTnZiRzl5VFdGd1cySmRPMXh5WEc0Z0lDQWdmVHRjY2x4dWZTZ3BLVHRjY2x4dVhISmNibVoxYm1OMGFXOXVJR1pwYkd4VWIxSm5ZbUVvYUdWNExHRnNjR2hoS1h0Y2NseHVJQ0FnSUdsbUtDRmpZV05vWldSRGIyeHZjbk5iYUdWNFhTbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlISmxjM1ZzZENBOUlDOWVJejhvVzJFdFpseGNaRjE3TW4wcEtGdGhMV1pjWEdSZGV6SjlLU2hiWVMxbVhGeGtYWHN5ZlNra0wya3VaWGhsWXlob1pYZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdOaFkyaGxaRU52Ykc5eWMxdG9aWGhkSUQwZ2NHRnljMlZKYm5Rb2NtVnpkV3gwV3pGZExDQXhOaWtySnl3bkszQmhjbk5sU1c1MEtISmxjM1ZzZEZzeVhTd2dNVFlwS3ljc0p5dHdZWEp6WlVsdWRDaHlaWE4xYkhSYk0xMHNJREUyS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhKbGRIVnliaUFuY21kaVlTZ25LMk5oWTJobFpFTnZiRzl5YzF0b1pYaGRLeWNzSnl0aGJIQm9ZU3NuS1NjN1hISmNibjFjY2x4dVhISmNiblpoY2lCbWFXeHNRMjlzYjNKVWIxTjBjbWx1WnlBOUlDaG1kVzVqZEdsdmJpZ3BlMXh5WEc1Y2NseHVJQ0FnSUhaaGNpQmpiMnh2Y2sxaGNDQTlJRnRkTzF4eVhHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVLR052Ykc5eVFYSnlMR0ZzY0doaEtYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloaGJIQm9ZU0FoUFQwZ2RXNWtaV1pwYm1Wa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0pCY25KYk0xMGdQU0JoYkhCb1lUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JV052Ykc5eVRXRndXMk52Ykc5eVFYSnlXekJkWFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlUV0Z3VzJOdmJHOXlRWEp5V3pCZFhTQTlJSHQ5TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmlnaFkyOXNiM0pOWVhCYlkyOXNiM0pCY25KYk1GMWRXMk52Ykc5eVFYSnlXekZkWFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlUV0Z3VzJOdmJHOXlRWEp5V3pCZFhWdGpiMnh2Y2tGeWNsc3hYVjBnUFNCN2ZUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JV052Ykc5eVRXRndXMk52Ykc5eVFYSnlXekJkWFZ0amIyeHZja0Z5Y2xzeFhWMWJZMjlzYjNKQmNuSmJNbDFkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSk5ZWEJiWTI5c2IzSkJjbkpiTUYxZFcyTnZiRzl5UVhKeVd6RmRYVnRqYjJ4dmNrRnljbHN5WFYwZ1BTQjdmVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvSVdOdmJHOXlUV0Z3VzJOdmJHOXlRWEp5V3pCZFhWdGpiMnh2Y2tGeWNsc3hYVjFiWTI5c2IzSkJjbkpiTWwxZFcyTnZiRzl5UVhKeVd6TmRYU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eVRXRndXMk52Ykc5eVFYSnlXekJkWFZ0amIyeHZja0Z5Y2xzeFhWMWJZMjlzYjNKQmNuSmJNbDFkVzJOdmJHOXlRWEp5V3pOZFhTQTlJQ2R5WjJKaEtDY2dLeUJqYjJ4dmNrRnljaTVxYjJsdUtDY3NKeWtySnlrbk8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5c2IzSk5ZWEJiWTI5c2IzSkJjbkpiTUYxZFcyTnZiRzl5UVhKeVd6RmRYVnRqYjJ4dmNrRnljbHN5WFYxYlkyOXNiM0pCY25KYk0xMWRPMXh5WEc0Z0lDQWdmVHRjY2x4dWZTZ3BLVHRjY2x4dVhISmNibVoxYm1OMGFXOXVJRkpsYm1SbGNtVmtSbkpoYldVb2RISXNieWtnZTF4eVhHNGdJQ0FnZEdocGN5NTBjaUE5SUhSeU8xeHlYRzRnSUNBZ2RHaHBjeTV2SUQwZ2J6dGNjbHh1ZlZ4eVhHNWNjbHh1Wm5WdVkzUnBiMjRnYVhSbGNtRjBaVVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLRzUxYlNsN1hISmNiaUFnSUNCMllYSWdhU3dnYkdWdUlEMGdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3p0Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNW5aWFJXWVd4MVpTaHVkVzBwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNW1kVzVqZEdsdmJpQnlaWFpsY25ObFVHRjBhQ2h3WVhSb2N5bDdYSEpjYmlBZ0lDQjJZWElnYm1WM1NTQTlJRnRkTENCdVpYZFBJRDBnVzEwc0lHNWxkMVlnUFNCYlhUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNHNJRzVsZDFCaGRHaHpJRDBnZTMwN1hISmNiaUFnSUNCMllYSWdhVzVwZENBOUlEQTdYSEpjYmlBZ0lDQnBaaUFvY0dGMGFITXVZeWtnZTF4eVhHNGdJQ0FnSUNBZ0lHNWxkMGxiTUYwZ1BTQndZWFJvY3k1dld6QmRPMXh5WEc0Z0lDQWdJQ0FnSUc1bGQwOWJNRjBnUFNCd1lYUm9jeTVwV3pCZE8xeHlYRzRnSUNBZ0lDQWdJRzVsZDFaYk1GMGdQU0J3WVhSb2N5NTJXekJkTzF4eVhHNGdJQ0FnSUNBZ0lHbHVhWFFnUFNBeE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2JHVnVJRDBnY0dGMGFITXVhUzVzWlc1bmRHZzdYSEpjYmlBZ0lDQjJZWElnWTI1MElEMGdiR1Z1SUMwZ01UdGNjbHh1WEhKY2JpQWdJQ0JtYjNJZ0tHa2dQU0JwYm1sME95QnBJRHdnYkdWdU95QnBJQ3M5SURFcElIdGNjbHh1SUNBZ0lDQWdJQ0J1WlhkSkxuQjFjMmdvY0dGMGFITXViMXRqYm5SZEtUdGNjbHh1SUNBZ0lDQWdJQ0J1WlhkUExuQjFjMmdvY0dGMGFITXVhVnRqYm5SZEtUdGNjbHh1SUNBZ0lDQWdJQ0J1WlhkV0xuQjFjMmdvY0dGMGFITXVkbHRqYm5SZEtUdGNjbHh1SUNBZ0lDQWdJQ0JqYm5RZ0xUMGdNVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdVpYZFFZWFJvY3k1cElEMGdibVYzU1R0Y2NseHVJQ0FnSUc1bGQxQmhkR2h6TG04Z1BTQnVaWGRQTzF4eVhHNGdJQ0FnYm1WM1VHRjBhSE11ZGlBOUlHNWxkMVk3WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUc1bGQxQmhkR2h6TzF4eVhHNTlYRzR2S2lGY2NseHVJRlJ5WVc1elptOXliV0YwYVc5dUlFMWhkSEpwZUNCMk1pNHdYSEpjYmlBb1l5a2dSWEJwYzNSbGJXVjRJREl3TVRRdE1qQXhOVnh5WEc0Z2QzZDNMbVZ3YVhOMFpXMWxlQzVqYjIxY2NseHVJRUo1SUV0bGJpQkdlWEp6ZEdWdVltVnlaMXh5WEc0Z1EyOXVkSEpwWW5WMGFXOXVjeUJpZVNCc1pXVnZibWw1WVM1Y2NseHVJRXhwWTJWdWMyVTZJRTFKVkN3Z2FHVmhaR1Z5SUhKbGNYVnBjbVZrTGx4eVhHNGdLaTljY2x4dVhISmNiaThxS2x4eVhHNGdLaUF5UkNCMGNtRnVjMlp2Y20xaGRHbHZiaUJ0WVhSeWFYZ2diMkpxWldOMElHbHVhWFJwWVd4cGVtVmtJSGRwZEdnZ2FXUmxiblJwZEhrZ2JXRjBjbWw0TGx4eVhHNGdLbHh5WEc0Z0tpQlVhR1VnYldGMGNtbDRJR05oYmlCemVXNWphSEp2Ym1sNlpTQmhJR05oYm5aaGN5QmpiMjUwWlhoMElHSjVJSE4xY0hCc2VXbHVaeUIwYUdVZ1kyOXVkR1Y0ZEZ4eVhHNGdLaUJoY3lCaGJpQmhjbWQxYldWdWRDd2diM0lnYkdGMFpYSWdZWEJ3YkhrZ1kzVnljbVZ1ZENCaFluTnZiSFYwWlNCMGNtRnVjMlp2Y20wZ2RHOGdZVzVjY2x4dUlDb2daWGhwYzNScGJtY2dZMjl1ZEdWNGRDNWNjbHh1SUNwY2NseHVJQ29nUVd4c0lIWmhiSFZsY3lCaGNtVWdhR0Z1Wkd4bFpDQmhjeUJtYkc5aGRHbHVaeUJ3YjJsdWRDQjJZV3gxWlhNdVhISmNiaUFxWEhKY2JpQXFJRUJ3WVhKaGJTQjdRMkZ1ZG1GelVtVnVaR1Z5YVc1blEyOXVkR1Y0ZERKRWZTQmJZMjl1ZEdWNGRGMGdMU0JQY0hScGIyNWhiQ0JqYjI1MFpYaDBJSFJ2SUhONWJtTWdkMmwwYUNCTllYUnlhWGhjY2x4dUlDb2dRSEJ5YjNBZ2UyNTFiV0psY24wZ1lTQXRJSE5qWVd4bElIaGNjbHh1SUNvZ1FIQnliM0FnZTI1MWJXSmxjbjBnWWlBdElITm9aV0Z5SUhsY2NseHVJQ29nUUhCeWIzQWdlMjUxYldKbGNuMGdZeUF0SUhOb1pXRnlJSGhjY2x4dUlDb2dRSEJ5YjNBZ2UyNTFiV0psY24wZ1pDQXRJSE5qWVd4bElIbGNjbHh1SUNvZ1FIQnliM0FnZTI1MWJXSmxjbjBnWlNBdElIUnlZVzV6YkdGMFpTQjRYSEpjYmlBcUlFQndjbTl3SUh0dWRXMWlaWEo5SUdZZ0xTQjBjbUZ1YzJ4aGRHVWdlVnh5WEc0Z0tpQkFjSEp2Y0NCN1EyRnVkbUZ6VW1WdVpHVnlhVzVuUTI5dWRHVjRkREpFZkc1MWJHeDlJRnRqYjI1MFpYaDBQVzUxYkd4ZElDMGdjMlYwSUc5eUlHZGxkQ0JqZFhKeVpXNTBJR05oYm5aaGN5QmpiMjUwWlhoMFhISmNiaUFxSUVCamIyNXpkSEoxWTNSdmNseHlYRzRnS2k5Y2NseHVYSEpjYm5aaGNpQk5ZWFJ5YVhnZ1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCeVpYTmxkQ2dwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJNRjBnUFNBeE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTVYwZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk1sMGdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJNMTBnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTkYwZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk5WMGdQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJObDBnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTjEwZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk9GMGdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJPVjBnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTVRCZElEMGdNVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6RXhYU0E5SURBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXN4TWwwZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk1UTmRJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXekUwWFNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdjbTl3YzFzeE5WMGdQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhKdmRHRjBaU2hoYm1kc1pTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHRnVaMnhsSUQwOVBTQXdLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdFEyOXpJRDBnVFdGMGFDNWpiM01vWVc1bmJHVXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnRVMmx1SUQwZ1RXRjBhQzV6YVc0b1lXNW5iR1VwTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkwS0cxRGIzTXNJQzF0VTJsdUxDQWdNQ3dnTUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FzSUcxVGFXNHNJQ0J0UTI5ekxDQXdMQ0F3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ3dnTUN3Z0lEQXNJQ0F4TENBd1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUN3Z01Dd2dNQ3dnTUN3Z01TazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnY205MFlYUmxXQ2hoYm1kc1pTbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1lXNW5iR1VnUFQwOUlEQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUcxRGIzTWdQU0JOWVhSb0xtTnZjeWhoYm1kc1pTazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHMVRhVzRnUFNCTllYUm9Mbk5wYmloaGJtZHNaU2s3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM1FvTVN3Z01Dd2dNQ3dnTUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FzSURBc0lHMURiM01zSUMxdFUybHVMQ0F3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ3dnTUN3Z2JWTnBiaXdnSUcxRGIzTXNJREJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMQ0F3TENBd0xDQXdMQ0F4S1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnliM1JoZEdWWktHRnVaMnhsS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhoYm1kc1pTQTlQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdiVU52Y3lBOUlFMWhkR2d1WTI5ektHRnVaMnhsS1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYlZOcGJpQTlJRTFoZEdndWMybHVLR0Z1WjJ4bEtUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRDaHRRMjl6TENBZ01Dd2dJRzFUYVc0c0lEQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0xDQXdMQ0F4TENBd0xDQXdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDd2dMVzFUYVc0c0lDQXdMQ0FnYlVOdmN5d2dNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXNJREFzSURBc0lEQXNJREVwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlISnZkR0YwWlZvb1lXNW5iR1VwZTF4eVhHNGdJQ0FnSUNBZ0lHbG1LR0Z1WjJ4bElEMDlQU0F3S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnRRMjl6SUQwZ1RXRjBhQzVqYjNNb1lXNW5iR1VwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ0VTJsdUlEMGdUV0YwYUM1emFXNG9ZVzVuYkdVcE8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MEtHMURiM01zSUMxdFUybHVMQ0FnTUN3Z01GeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBc0lHMVRhVzRzSUNCdFEyOXpMQ0F3TENBd1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUN3Z01Dd2dJREFzSUNBeExDQXdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDd2dNQ3dnTUN3Z01Dd2dNU2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2MyaGxZWElvYzNnc2Mza3BlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBLREVzSUhONUxDQnplQ3dnTVN3Z01Dd2dNQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2MydGxkeWhoZUN3Z1lYa3BlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTm9aV0Z5S0UxaGRHZ3VkR0Z1S0dGNEtTd2dUV0YwYUM1MFlXNG9ZWGtwS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnphMlYzUm5KdmJVRjRhWE1vWVhnc0lHRnVaMnhsS1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYlVOdmN5QTlJRTFoZEdndVkyOXpLR0Z1WjJ4bEtUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JWTnBiaUE5SUUxaGRHZ3VjMmx1S0dGdVoyeGxLVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkQ2h0UTI5ekxDQnRVMmx1TENBZ01Dd2dNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXNJQzF0VTJsdUxDQWdiVU52Y3l3Z01Dd2dNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXNJREFzSUNBd0xDQWdNU3dnTUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FzSURBc0lEQXNJREFzSURFcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM1ZmRDZ3hMQ0F3TENBZ01Dd2dNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXNJRTFoZEdndWRHRnVLR0Y0S1N3Z0lERXNJREFzSURCY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTENBd0xDQWdNQ3dnSURFc0lEQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0xDQXdMQ0F3TENBd0xDQXhLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXVYM1FvYlVOdmN5d2dMVzFUYVc0c0lDQXdMQ0F3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ3dnYlZOcGJpd2dJRzFEYjNNc0lEQXNJREJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMQ0F3TENBZ01Dd2dJREVzSURCY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTENBd0xDQXdMQ0F3TENBeEtUdGNjbHh1SUNBZ0lDQWdJQ0F2TDNKbGRIVnliaUIwYUdsekxsOTBLRzFEYjNNc0lHMVRhVzRzSUMxdFUybHVMQ0J0UTI5ekxDQXdMQ0F3S1M1ZmRDZ3hMQ0F3TENCTllYUm9MblJoYmloaGVDa3NJREVzSURBc0lEQXBMbDkwS0cxRGIzTXNJQzF0VTJsdUxDQnRVMmx1TENCdFEyOXpMQ0F3TENBd0tUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ6WTJGc1pTaHplQ3dnYzNrc0lITjZLU0I3WEhKY2JpQWdJQ0FnSUNBZ2Mzb2dQU0JwYzA1aFRpaHplaWtnUHlBeElEb2djM283WEhKY2JpQWdJQ0FnSUNBZ2FXWW9jM2dnUFQwZ01TQW1KaUJ6ZVNBOVBTQXhJQ1ltSUhONklEMDlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzUW9jM2dzSURBc0lEQXNJREFzSURBc0lITjVMQ0F3TENBd0xDQXdMQ0F3TENCemVpd2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjMlYwVkhKaGJuTm1iM0p0S0dFc0lHSXNJR01zSUdRc0lHVXNJR1lzSUdjc0lHZ3NJR2tzSUdvc0lHc3NJR3dzSUcwc0lHNHNJRzhzSUhBcElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3pCZElEMGdZVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6RmRJRDBnWWp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXekpkSUQwZ1l6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3pOZElEMGdaRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6UmRJRDBnWlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXelZkSUQwZ1pqdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3paZElEMGdaenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6ZGRJRDBnYUR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXemhkSUQwZ2FUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3psZElEMGdhanRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6RXdYU0E5SUdzN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXN4TVYwZ1BTQnNPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk1USmRJRDBnYlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXekV6WFNBOUlHNDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdjbTl3YzFzeE5GMGdQU0J2TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJNVFZkSUQwZ2NEdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQjBjbUZ1YzJ4aGRHVW9kSGdzSUhSNUxDQjBlaWtnZTF4eVhHNGdJQ0FnSUNBZ0lIUjZJRDBnZEhvZ2ZId2dNRHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBlQ0FoUFQwZ01DQjhmQ0IwZVNBaFBUMGdNQ0I4ZkNCMGVpQWhQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBLREVzTUN3d0xEQXNNQ3d4TERBc01Dd3dMREFzTVN3d0xIUjRMSFI1TEhSNkxERXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCMGNtRnVjMlp2Y20wb1lUSXNJR0l5TENCak1pd2daRElzSUdVeUxDQm1NaXdnWnpJc0lHZ3lMQ0JwTWl3Z2FqSXNJR3N5TENCc01pd2diVElzSUc0eUxDQnZNaXdnY0RJcElIdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2FXWW9ZVElnUFQwOUlERWdKaVlnWWpJZ1BUMDlJREFnSmlZZ1l6SWdQVDA5SURBZ0ppWWdaRElnUFQwOUlEQWdKaVlnWlRJZ1BUMDlJREFnSmlZZ1pqSWdQVDA5SURFZ0ppWWdaeklnUFQwOUlEQWdKaVlnYURJZ1BUMDlJREFnSmlZZ2FUSWdQVDA5SURBZ0ppWWdhaklnUFQwOUlEQWdKaVlnYXpJZ1BUMDlJREVnSmlZZ2JESWdQVDA5SURBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHRNaUFoUFQwZ01DQjhmQ0J1TWlBaFBUMGdNQ0I4ZkNCdk1pQWhQVDBnTUNsN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdjbTl3YzFzeE1sMGdQU0IwYUdsekxuQnliM0J6V3pFeVhTQXFJR0V5SUNzZ2RHaHBjeTV3Y205d2Mxc3hNMTBnS2lCbE1pQXJJSFJvYVhNdWNISnZjSE5iTVRSZElDb2dhVElnS3lCMGFHbHpMbkJ5YjNCeld6RTFYU0FxSUcweUlEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTVROZElEMGdkR2hwY3k1d2NtOXdjMXN4TWwwZ0tpQmlNaUFySUhSb2FYTXVjSEp2Y0hOYk1UTmRJQ29nWmpJZ0t5QjBhR2x6TG5CeWIzQnpXekUwWFNBcUlHb3lJQ3NnZEdocGN5NXdjbTl3YzFzeE5WMGdLaUJ1TWlBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQnpXekUwWFNBOUlIUm9hWE11Y0hKdmNITmJNVEpkSUNvZ1l6SWdLeUIwYUdsekxuQnliM0J6V3pFelhTQXFJR2N5SUNzZ2RHaHBjeTV3Y205d2Mxc3hORjBnS2lCck1pQXJJSFJvYVhNdWNISnZjSE5iTVRWZElDb2dieklnTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d2Mxc3hOVjBnUFNCMGFHbHpMbkJ5YjNCeld6RXlYU0FxSUdReUlDc2dkR2hwY3k1d2NtOXdjMXN4TTEwZ0tpQm9NaUFySUhSb2FYTXVjSEp2Y0hOYk1UUmRJQ29nYkRJZ0t5QjBhR2x6TG5CeWIzQnpXekUxWFNBcUlIQXlJRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5cFpHVnVkR2wwZVVOaGJHTjFiR0YwWldRZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWVRFZ1BTQjBhR2x6TG5CeWIzQnpXekJkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJpTVNBOUlIUm9hWE11Y0hKdmNITmJNVjA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR014SUQwZ2RHaHBjeTV3Y205d2Mxc3lYVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaREVnUFNCMGFHbHpMbkJ5YjNCeld6TmRPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmxNU0E5SUhSb2FYTXVjSEp2Y0hOYk5GMDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHWXhJRDBnZEdocGN5NXdjbTl3YzFzMVhUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1p6RWdQU0IwYUdsekxuQnliM0J6V3paZE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCb01TQTlJSFJvYVhNdWNISnZjSE5iTjEwN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdreElEMGdkR2hwY3k1d2NtOXdjMXM0WFR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYWpFZ1BTQjBhR2x6TG5CeWIzQnpXemxkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJyTVNBOUlIUm9hWE11Y0hKdmNITmJNVEJkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJzTVNBOUlIUm9hWE11Y0hKdmNITmJNVEZkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ0TVNBOUlIUm9hWE11Y0hKdmNITmJNVEpkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ1TVNBOUlIUm9hWE11Y0hKdmNITmJNVE5kTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ2TVNBOUlIUm9hWE11Y0hKdmNITmJNVFJkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3TVNBOUlIUm9hWE11Y0hKdmNITmJNVFZkTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F2S2lCdFlYUnlhWGdnYjNKa1pYSWdLR05oYm5aaGN5QmpiMjF3WVhScFlteGxLVHBjY2x4dUlDQWdJQ0FnSUNBZ0tpQmhZMlZjY2x4dUlDQWdJQ0FnSUNBZ0tpQmlaR1pjY2x4dUlDQWdJQ0FnSUNBZ0tpQXdNREZjY2x4dUlDQWdJQ0FnSUNBZ0tpOWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3pCZElEMGdZVEVnS2lCaE1pQXJJR0l4SUNvZ1pUSWdLeUJqTVNBcUlHa3lJQ3NnWkRFZ0tpQnRNanRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6RmRJRDBnWVRFZ0tpQmlNaUFySUdJeElDb2daaklnS3lCak1TQXFJR295SUNzZ1pERWdLaUJ1TWlBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXN5WFNBOUlHRXhJQ29nWXpJZ0t5QmlNU0FxSUdjeUlDc2dZekVnS2lCck1pQXJJR1F4SUNvZ2J6SWdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk0xMGdQU0JoTVNBcUlHUXlJQ3NnWWpFZ0tpQm9NaUFySUdNeElDb2diRElnS3lCa01TQXFJSEF5SUR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdjbTl3YzFzMFhTQTlJR1V4SUNvZ1lUSWdLeUJtTVNBcUlHVXlJQ3NnWnpFZ0tpQnBNaUFySUdneElDb2diVElnTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0hKdmNITmJOVjBnUFNCbE1TQXFJR0l5SUNzZ1pqRWdLaUJtTWlBcklHY3hJQ29nYWpJZ0t5Qm9NU0FxSUc0eUlEdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliM0J6V3paZElEMGdaVEVnS2lCak1pQXJJR1l4SUNvZ1p6SWdLeUJuTVNBcUlHc3lJQ3NnYURFZ0tpQnZNaUE3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d2MxczNYU0E5SUdVeElDb2daRElnS3lCbU1TQXFJR2d5SUNzZ1p6RWdLaUJzTWlBcklHZ3hJQ29nY0RJZ08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6aGRJRDBnYVRFZ0tpQmhNaUFySUdveElDb2daVElnS3lCck1TQXFJR2t5SUNzZ2JERWdLaUJ0TWlBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXM1WFNBOUlHa3hJQ29nWWpJZ0t5QnFNU0FxSUdZeUlDc2dhekVnS2lCcU1pQXJJR3d4SUNvZ2JqSWdPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSEp2Y0hOYk1UQmRJRDBnYVRFZ0tpQmpNaUFySUdveElDb2daeklnS3lCck1TQXFJR3N5SUNzZ2JERWdLaUJ2TWlBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXN4TVYwZ1BTQnBNU0FxSUdReUlDc2dhakVnS2lCb01pQXJJR3N4SUNvZ2JESWdLeUJzTVNBcUlIQXlJRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjMXN4TWwwZ1BTQnRNU0FxSUdFeUlDc2diakVnS2lCbE1pQXJJRzh4SUNvZ2FUSWdLeUJ3TVNBcUlHMHlJRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ5YjNCeld6RXpYU0E5SUcweElDb2dZaklnS3lCdU1TQXFJR1l5SUNzZ2J6RWdLaUJxTWlBcklIQXhJQ29nYmpJZ08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISnZjSE5iTVRSZElEMGdiVEVnS2lCak1pQXJJRzR4SUNvZ1p6SWdLeUJ2TVNBcUlHc3lJQ3NnY0RFZ0tpQnZNaUE3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d2Mxc3hOVjBnUFNCdE1TQXFJR1F5SUNzZ2JqRWdLaUJvTWlBcklHOHhJQ29nYkRJZ0t5QndNU0FxSUhBeUlEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVmYVdSbGJuUnBkSGxEWVd4amRXeGhkR1ZrSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYVhOSlpHVnVkR2wwZVNncElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaGRHaHBjeTVmYVdSbGJuUnBkSGxEWVd4amRXeGhkR1ZrS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZhV1JsYm5ScGRIa2dQU0FoS0hSb2FYTXVjSEp2Y0hOYk1GMGdJVDA5SURFZ2ZId2dkR2hwY3k1d2NtOXdjMXN4WFNBaFBUMGdNQ0I4ZkNCMGFHbHpMbkJ5YjNCeld6SmRJQ0U5UFNBd0lIeDhJSFJvYVhNdWNISnZjSE5iTTEwZ0lUMDlJREJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh4OElIUm9hWE11Y0hKdmNITmJORjBnSVQwOUlEQWdmSHdnZEdocGN5NXdjbTl3YzFzMVhTQWhQVDBnTVNCOGZDQjBhR2x6TG5CeWIzQnpXelpkSUNFOVBTQXdJSHg4SUhSb2FYTXVjSEp2Y0hOYk4xMGdJVDA5SURCY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIeDhJSFJvYVhNdWNISnZjSE5iT0YwZ0lUMDlJREFnZkh3Z2RHaHBjeTV3Y205d2MxczVYU0FoUFQwZ01DQjhmQ0IwYUdsekxuQnliM0J6V3pFd1hTQWhQVDBnTVNCOGZDQjBhR2x6TG5CeWIzQnpXekV4WFNBaFBUMGdNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZkh3Z2RHaHBjeTV3Y205d2Mxc3hNbDBnSVQwOUlEQWdmSHdnZEdocGN5NXdjbTl3YzFzeE0xMGdJVDA5SURBZ2ZId2dkR2hwY3k1d2NtOXdjMXN4TkYwZ0lUMDlJREFnZkh3Z2RHaHBjeTV3Y205d2Mxc3hOVjBnSVQwOUlERXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5cFpHVnVkR2wwZVVOaGJHTjFiR0YwWldRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmFXUmxiblJwZEhrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdZMnh2Ym1Vb2JXRjBjaWw3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2s3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBERTJPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlMbkJ5YjNCelcybGRJRDBnZEdocGN5NXdjbTl3YzF0cFhUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1kyeHZibVZHY205dFVISnZjSE1vY0hKdmNITXBlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR3eE5qdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdjbTl3YzF0cFhTQTlJSEJ5YjNCelcybGRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmhjSEJzZVZSdlVHOXBiblFvZUN3Z2VTd2dlaWtnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjRPaUI0SUNvZ2RHaHBjeTV3Y205d2Mxc3dYU0FySUhrZ0tpQjBhR2x6TG5CeWIzQnpXelJkSUNzZ2VpQXFJSFJvYVhNdWNISnZjSE5iT0YwZ0t5QjBhR2x6TG5CeWIzQnpXekV5WFN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZVRvZ2VDQXFJSFJvYVhNdWNISnZjSE5iTVYwZ0t5QjVJQ29nZEdocGN5NXdjbTl3YzFzMVhTQXJJSG9nS2lCMGFHbHpMbkJ5YjNCeld6bGRJQ3NnZEdocGN5NXdjbTl3YzFzeE0xMHNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIbzZJSGdnS2lCMGFHbHpMbkJ5YjNCeld6SmRJQ3NnZVNBcUlIUm9hWE11Y0hKdmNITmJObDBnS3lCNklDb2dkR2hwY3k1d2NtOXdjMXN4TUYwZ0t5QjBhR2x6TG5CeWIzQnpXekUwWFZ4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQWdJQ0FnTHlweVpYUjFjbTRnZTF4eVhHNGdJQ0FnSUNBZ0lDQjRPaUI0SUNvZ2JXVXVZU0FySUhrZ0tpQnRaUzVqSUNzZ2JXVXVaU3hjY2x4dUlDQWdJQ0FnSUNBZ2VUb2dlQ0FxSUcxbExtSWdLeUI1SUNvZ2JXVXVaQ0FySUcxbExtWmNjbHh1SUNBZ0lDQWdJQ0FnZlRzcUwxeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1lYQndiSGxVYjFnb2VDd2dlU3dnZWlrZ2UxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjRJQ29nZEdocGN5NXdjbTl3YzFzd1hTQXJJSGtnS2lCMGFHbHpMbkJ5YjNCeld6UmRJQ3NnZWlBcUlIUm9hWE11Y0hKdmNITmJPRjBnS3lCMGFHbHpMbkJ5YjNCeld6RXlYVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR0Z3Y0d4NVZHOVpLSGdzSUhrc0lIb3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZUNBcUlIUm9hWE11Y0hKdmNITmJNVjBnS3lCNUlDb2dkR2hwY3k1d2NtOXdjMXMxWFNBcklIb2dLaUIwYUdsekxuQnliM0J6V3psZElDc2dkR2hwY3k1d2NtOXdjMXN4TTEwN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCaGNIQnNlVlJ2V2loNExDQjVMQ0I2S1NCN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIZ2dLaUIwYUdsekxuQnliM0J6V3pKZElDc2dlU0FxSUhSb2FYTXVjSEp2Y0hOYk5sMGdLeUI2SUNvZ2RHaHBjeTV3Y205d2Mxc3hNRjBnS3lCMGFHbHpMbkJ5YjNCeld6RTBYVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCcGJuWmxjbk5sVUc5cGJuUW9jSFFwSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWkdWMFpYSnRhVzVoYm5RZ1BTQjBhR2x6TG5CeWIzQnpXekJkSUNvZ2RHaHBjeTV3Y205d2MxczFYU0F0SUhSb2FYTXVjSEp2Y0hOYk1WMGdLaUIwYUdsekxuQnliM0J6V3pSZE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCaElEMGdkR2hwY3k1d2NtOXdjMXMxWFM5a1pYUmxjbTFwYm1GdWREdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1lpQTlJQzBnZEdocGN5NXdjbTl3YzFzeFhTOWtaWFJsY20xcGJtRnVkRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZeUE5SUMwZ2RHaHBjeTV3Y205d2MxczBYUzlrWlhSbGNtMXBibUZ1ZER0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWkNBOUlIUm9hWE11Y0hKdmNITmJNRjB2WkdWMFpYSnRhVzVoYm5RN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdVZ1BTQW9kR2hwY3k1d2NtOXdjMXMwWFNBcUlIUm9hWE11Y0hKdmNITmJNVE5kSUMwZ2RHaHBjeTV3Y205d2MxczFYU0FxSUhSb2FYTXVjSEp2Y0hOYk1USmRLUzlrWlhSbGNtMXBibUZ1ZER0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWmlBOUlDMGdLSFJvYVhNdWNISnZjSE5iTUYwZ0tpQjBhR2x6TG5CeWIzQnpXekV6WFNBdElIUm9hWE11Y0hKdmNITmJNVjBnS2lCMGFHbHpMbkJ5YjNCeld6RXlYU2t2WkdWMFpYSnRhVzVoYm5RN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGdHdkRnN3WFNBcUlHRWdLeUJ3ZEZzeFhTQXFJR01nS3lCbExDQndkRnN3WFNBcUlHSWdLeUJ3ZEZzeFhTQXFJR1FnS3lCbUxDQXdYVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCcGJuWmxjbk5sVUc5cGJuUnpLSEIwY3lsN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhCMGN5NXNaVzVuZEdnc0lISmxkRkIwY3lBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRGQjBjMXRwWFNBOUlHbHVkbVZ5YzJWUWIybHVkQ2h3ZEhOYmFWMHBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVjBVSFJ6TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHRndjR3g1Vkc5UWIybHVkRUZ5Y21GNUtIZ3NlU3g2TEdScGJXVnVjMmx2Ym5NcGUxeHlYRzRnSUNBZ0lDQWdJR2xtS0dScGJXVnVjMmx2Ym5NZ0ppWWdaR2x0Wlc1emFXOXVjeUE5UFQwZ01pa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWVhKeUlEMGdjRzlwYm5SZmNHOXZiQzV1WlhkUWIybHVkQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoY25KYk1GMGdQU0I0SUNvZ2RHaHBjeTV3Y205d2Mxc3dYU0FySUhrZ0tpQjBhR2x6TG5CeWIzQnpXelJkSUNzZ2VpQXFJSFJvYVhNdWNISnZjSE5iT0YwZ0t5QjBhR2x6TG5CeWIzQnpXekV5WFRzZ1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNsc3hYU0E5SUhnZ0tpQjBhR2x6TG5CeWIzQnpXekZkSUNzZ2VTQXFJSFJvYVhNdWNISnZjSE5iTlYwZ0t5QjZJQ29nZEdocGN5NXdjbTl3YzFzNVhTQXJJSFJvYVhNdWNISnZjSE5iTVROZE95QmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGeWNqc2dJQ0FnWEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJlQ0FxSUhSb2FYTXVjSEp2Y0hOYk1GMGdLeUI1SUNvZ2RHaHBjeTV3Y205d2MxczBYU0FySUhvZ0tpQjBhR2x6TG5CeWIzQnpXemhkSUNzZ2RHaHBjeTV3Y205d2Mxc3hNbDBzZUNBcUlIUm9hWE11Y0hKdmNITmJNVjBnS3lCNUlDb2dkR2hwY3k1d2NtOXdjMXMxWFNBcklIb2dLaUIwYUdsekxuQnliM0J6V3psZElDc2dkR2hwY3k1d2NtOXdjMXN4TTEwc2VDQXFJSFJvYVhNdWNISnZjSE5iTWwwZ0t5QjVJQ29nZEdocGN5NXdjbTl3YzFzMlhTQXJJSG9nS2lCMGFHbHpMbkJ5YjNCeld6RXdYU0FySUhSb2FYTXVjSEp2Y0hOYk1UUmRYVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR0Z3Y0d4NVZHOVFiMmx1ZEZOMGNtbHVaMmxtYVdWa0tIZ3NJSGtwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtbHpTV1JsYm5ScGRIa29LU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlQ0FySUNjc0p5QXJJSGs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW9ZbTFmY201a0tIZ2dLaUIwYUdsekxuQnliM0J6V3pCZElDc2dlU0FxSUhSb2FYTXVjSEp2Y0hOYk5GMGdLeUIwYUdsekxuQnliM0J6V3pFeVhTa3BLeWNzSnlzb1ltMWZjbTVrS0hnZ0tpQjBhR2x6TG5CeWIzQnpXekZkSUNzZ2VTQXFJSFJvYVhNdWNISnZjSE5iTlYwZ0t5QjBhR2x6TG5CeWIzQnpXekV6WFNrcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSFJ2UVhKeVlYa29LU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZ0MGFHbHpMbkJ5YjNCeld6QmRMSFJvYVhNdWNISnZjSE5iTVYwc2RHaHBjeTV3Y205d2Mxc3lYU3gwYUdsekxuQnliM0J6V3pOZExIUm9hWE11Y0hKdmNITmJORjBzZEdocGN5NXdjbTl3YzFzMVhTeDBhR2x6TG5CeWIzQnpXelpkTEhSb2FYTXVjSEp2Y0hOYk4xMHNkR2hwY3k1d2NtOXdjMXM0WFN4MGFHbHpMbkJ5YjNCeld6bGRMSFJvYVhNdWNISnZjSE5iTVRCZExIUm9hWE11Y0hKdmNITmJNVEZkTEhSb2FYTXVjSEp2Y0hOYk1USmRMSFJvYVhNdWNISnZjSE5iTVROZExIUm9hWE11Y0hKdmNITmJNVFJkTEhSb2FYTXVjSEp2Y0hOYk1UVmRYVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCMGIwTlRVeWdwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhwYzFOaFptRnlhU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmNJbTFoZEhKcGVETmtLRndpSUNzZ2NtOTFibVJVYnpKRVpXTnBiV0ZzY3loMGFHbHpMbkJ5YjNCeld6QmRLU0FySUNjc0p5QXJJSEp2ZFc1a1ZHOHlSR1ZqYVcxaGJITW9kR2hwY3k1d2NtOXdjMXN4WFNrZ0t5QW5MQ2NnS3lCeWIzVnVaRlJ2TWtSbFkybHRZV3h6S0hSb2FYTXVjSEp2Y0hOYk1sMHBJQ3NnSnl3bklDc2djbTkxYm1SVWJ6SkVaV05wYldGc2N5aDBhR2x6TG5CeWIzQnpXek5kS1NBcklDY3NKeUFySUhKdmRXNWtWRzh5UkdWamFXMWhiSE1vZEdocGN5NXdjbTl3YzFzMFhTa2dLeUFuTENjZ0t5QnliM1Z1WkZSdk1rUmxZMmx0WVd4ektIUm9hWE11Y0hKdmNITmJOVjBwSUNzZ0p5d25JQ3NnY205MWJtUlViekpFWldOcGJXRnNjeWgwYUdsekxuQnliM0J6V3paZEtTQXJJQ2NzSnlBcklISnZkVzVrVkc4eVJHVmphVzFoYkhNb2RHaHBjeTV3Y205d2MxczNYU2tnS3lBbkxDY2dLeUJ5YjNWdVpGUnZNa1JsWTJsdFlXeHpLSFJvYVhNdWNISnZjSE5iT0YwcElDc2dKeXduSUNzZ2NtOTFibVJVYnpKRVpXTnBiV0ZzY3loMGFHbHpMbkJ5YjNCeld6bGRLU0FySUNjc0p5QXJJSEp2ZFc1a1ZHOHlSR1ZqYVcxaGJITW9kR2hwY3k1d2NtOXdjMXN4TUYwcElDc2dKeXduSUNzZ2NtOTFibVJVYnpKRVpXTnBiV0ZzY3loMGFHbHpMbkJ5YjNCeld6RXhYU2tnS3lBbkxDY2dLeUJ5YjNWdVpGUnZNa1JsWTJsdFlXeHpLSFJvYVhNdWNISnZjSE5iTVRKZEtTQXJJQ2NzSnlBcklISnZkVzVrVkc4eVJHVmphVzFoYkhNb2RHaHBjeTV3Y205d2Mxc3hNMTBwSUNzZ0p5d25JQ3NnY205MWJtUlViekpFWldOcGJXRnNjeWgwYUdsekxuQnliM0J6V3pFMFhTa2dLeUFuTENjZ0t5QnliM1Z1WkZSdk1rUmxZMmx0WVd4ektIUm9hWE11Y0hKdmNITmJNVFZkS1NBcklDY3BKenRjY2x4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnpjMUJoY25Seld6RmRJRDBnZEdocGN5NXdjbTl3Y3k1cWIybHVLQ2NzSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnpjMUJoY25SekxtcHZhVzRvSnljcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCMGJ6SmtRMU5US0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmNJbTFoZEhKcGVDaGNJaUFySUhKdmRXNWtWRzh5UkdWamFXMWhiSE1vZEdocGN5NXdjbTl3YzFzd1hTa2dLeUFuTENjZ0t5QnliM1Z1WkZSdk1rUmxZMmx0WVd4ektIUm9hWE11Y0hKdmNITmJNVjBwSUNzZ0p5d25JQ3NnY205MWJtUlViekpFWldOcGJXRnNjeWgwYUdsekxuQnliM0J6V3pSZEtTQXJJQ2NzSnlBcklISnZkVzVrVkc4eVJHVmphVzFoYkhNb2RHaHBjeTV3Y205d2MxczFYU2tnS3lBbkxDY2dLeUJ5YjNWdVpGUnZNa1JsWTJsdFlXeHpLSFJvYVhNdWNISnZjSE5iTVRKZEtTQXJJQ2NzSnlBcklISnZkVzVrVkc4eVJHVmphVzFoYkhNb2RHaHBjeTV3Y205d2Mxc3hNMTBwSUNzZ1hDSXBYQ0k3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2RHOVRkSEpwYm1jb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRndpWENJZ0t5QjBhR2x6TG5SdlFYSnlZWGtvS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuSmxjMlYwSUQwZ2NtVnpaWFE3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5YjNSaGRHVWdQU0J5YjNSaGRHVTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXliM1JoZEdWWUlEMGdjbTkwWVhSbFdEdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuSnZkR0YwWlZrZ1BTQnliM1JoZEdWWk8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtOTBZWFJsV2lBOUlISnZkR0YwWlZvN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1emEyVjNJRDBnYzJ0bGR6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTnJaWGRHY205dFFYaHBjeUE5SUhOclpYZEdjbTl0UVhocGN6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTm9aV0Z5SUQwZ2MyaGxZWEk3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6WTJGc1pTQTlJSE5qWVd4bE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBWSEpoYm5ObWIzSnRJRDBnYzJWMFZISmhibk5tYjNKdE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5zWVhSbElEMGdkSEpoYm5Oc1lYUmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkSEpoYm5ObWIzSnRJRDBnZEhKaGJuTm1iM0p0TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhCd2JIbFViMUJ2YVc1MElEMGdZWEJ3YkhsVWIxQnZhVzUwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhCd2JIbFViMWdnUFNCaGNIQnNlVlJ2V0R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1Gd2NHeDVWRzlaSUQwZ1lYQndiSGxVYjFrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aGNIQnNlVlJ2V2lBOUlHRndjR3g1Vkc5YU8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVlYQndiSGxVYjFCdmFXNTBRWEp5WVhrZ1BTQmhjSEJzZVZSdlVHOXBiblJCY25KaGVUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRndjR3g1Vkc5UWIybHVkRk4wY21sdVoybG1hV1ZrSUQwZ1lYQndiSGxVYjFCdmFXNTBVM1J5YVc1bmFXWnBaV1E3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYjBGeWNtRjVJRDBnZEc5QmNuSmhlVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblJ2UTFOVElEMGdkRzlEVTFNN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1MGJ6SmtRMU5USUQwZ2RHOHlaRU5UVXp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5SdlUzUnlhVzVuSUQwZ2RHOVRkSEpwYm1jN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amJHOXVaU0E5SUdOc2IyNWxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMnh2Ym1WR2NtOXRVSEp2Y0hNZ1BTQmpiRzl1WlVaeWIyMVFjbTl3Y3p0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sdWRtVnljMlZRYjJsdWRITWdQU0JwYm5abGNuTmxVRzlwYm5Sek8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFXNTJaWEp6WlZCdmFXNTBJRDBnYVc1MlpYSnpaVkJ2YVc1ME8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVgzUWdQU0IwYUdsekxuUnlZVzV6Wm05eWJUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtbHpTV1JsYm5ScGRIa2dQU0JwYzBsa1pXNTBhWFI1TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WDJsa1pXNTBhWFI1SUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbDlwWkdWdWRHbDBlVU5oYkdOMWJHRjBaV1FnUFNCbVlXeHpaVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXdjeUE5SUZzeExEQXNNQ3d3TERBc01Td3dMREFzTUN3d0xERXNNQ3d3TERBc01Dd3hYVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amMzTlFZWEowY3lBOUlGc25iV0YwY21sNE0yUW9KeXduSnl3bktTZGRPMXh5WEc0Z0lDQWdmVnh5WEc1OUtDa3BPMXh5WEc1Y2NseHVablZ1WTNScGIyNGdUV0YwY21sNEtDa2dlMXh5WEc1Y2NseHVYSEpjYm4xY2NseHVYRzR2S2x4eVhHNGdRMjl3ZVhKcFoyaDBJREl3TVRRZ1JHRjJhV1FnUW1GMUxseHlYRzVjY2x4dUlGQmxjbTFwYzNOcGIyNGdhWE1nYUdWeVpXSjVJR2R5WVc1MFpXUXNJR1p5WldVZ2IyWWdZMmhoY21kbExDQjBieUJoYm5rZ2NHVnljMjl1SUc5aWRHRnBibWx1WjF4eVhHNGdZU0JqYjNCNUlHOW1JSFJvYVhNZ2MyOW1kSGRoY21VZ1lXNWtJR0Z6YzI5amFXRjBaV1FnWkc5amRXMWxiblJoZEdsdmJpQm1hV3hsY3lBb2RHaGxYSEpjYmlCY0lsTnZablIzWVhKbFhDSXBMQ0IwYnlCa1pXRnNJR2x1SUhSb1pTQlRiMlowZDJGeVpTQjNhWFJvYjNWMElISmxjM1J5YVdOMGFXOXVMQ0JwYm1Oc2RXUnBibWRjY2x4dUlIZHBkR2h2ZFhRZ2JHbHRhWFJoZEdsdmJpQjBhR1VnY21sbmFIUnpJSFJ2SUhWelpTd2dZMjl3ZVN3Z2JXOWthV1o1TENCdFpYSm5aU3dnY0hWaWJHbHphQ3hjY2x4dUlHUnBjM1J5YVdKMWRHVXNJSE4xWW14cFkyVnVjMlVzSUdGdVpDOXZjaUJ6Wld4c0lHTnZjR2xsY3lCdlppQjBhR1VnVTI5bWRIZGhjbVVzSUdGdVpDQjBiMXh5WEc0Z2NHVnliV2wwSUhCbGNuTnZibk1nZEc4Z2QyaHZiU0IwYUdVZ1UyOW1kSGRoY21VZ2FYTWdablZ5Ym1semFHVmtJSFJ2SUdSdklITnZMQ0J6ZFdKcVpXTjBJSFJ2WEhKY2JpQjBhR1VnWm05c2JHOTNhVzVuSUdOdmJtUnBkR2x2Ym5NNlhISmNibHh5WEc0Z1ZHaGxJR0ZpYjNabElHTnZjSGx5YVdkb2RDQnViM1JwWTJVZ1lXNWtJSFJvYVhNZ2NHVnliV2x6YzJsdmJpQnViM1JwWTJVZ2MyaGhiR3dnWW1WY2NseHVJR2x1WTJ4MVpHVmtJR2x1SUdGc2JDQmpiM0JwWlhNZ2IzSWdjM1ZpYzNSaGJuUnBZV3dnY0c5eWRHbHZibk1nYjJZZ2RHaGxJRk52Wm5SM1lYSmxMbHh5WEc1Y2NseHVJRlJJUlNCVFQwWlVWMEZTUlNCSlV5QlFVazlXU1VSRlJDQmNJa0ZUSUVsVFhDSXNJRmRKVkVoUFZWUWdWMEZTVWtGT1ZGa2dUMFlnUVU1WklFdEpUa1FzWEhKY2JpQkZXRkJTUlZOVElFOVNJRWxOVUV4SlJVUXNJRWxPUTB4VlJFbE9SeUJDVlZRZ1RrOVVJRXhKVFVsVVJVUWdWRThnVkVoRklGZEJVbEpCVGxSSlJWTWdUMFpjY2x4dUlFMUZVa05JUVU1VVFVSkpURWxVV1N3Z1JrbFVUa1ZUVXlCR1QxSWdRU0JRUVZKVVNVTlZURUZTSUZCVlVsQlBVMFVnUVU1RUlFNVBUa2xPUmxKSlRrZEZUVVZPVkM1Y2NseHVJRWxPSUU1UElFVldSVTVVSUZOSVFVeE1JRlJJUlNCQlZWUklUMUpUSUU5U0lFTlBVRmxTU1VkSVZDQklUMHhFUlZKVElFSkZJRXhKUVVKTVJTQkdUMUlnUVU1WlhISmNiaUJEVEVGSlRTd2dSRUZOUVVkRlV5QlBVaUJQVkVoRlVpQk1TVUZDU1V4SlZGa3NJRmRJUlZSSVJWSWdTVTRnUVU0Z1FVTlVTVTlPSUU5R0lFTlBUbFJTUVVOVUxGeHlYRzRnVkU5U1ZDQlBVaUJQVkVoRlVsZEpVMFVzSUVGU1NWTkpUa2NnUmxKUFRTd2dUMVZVSUU5R0lFOVNJRWxPSUVOUFRrNUZRMVJKVDA0Z1YwbFVTQ0JVU0VWY2NseHVJRk5QUmxSWFFWSkZJRTlTSUZSSVJTQlZVMFVnVDFJZ1QxUklSVklnUkVWQlRFbE9SMU1nU1U0Z1ZFaEZJRk5QUmxSWFFWSkZMbHh5WEc1Y2NseHVJQ292WEhKY2JseHlYRzRvWm5WdVkzUnBiMjRnS0hCdmIyd3NJRzFoZEdncElIdGNjbHh1THk5Y2NseHVMeThnVkdobElHWnZiR3h2ZDJsdVp5QmpiMjV6ZEdGdWRITWdZWEpsSUhKbGJHRjBaV1FnZEc4Z1NVVkZSU0EzTlRRZ2JHbHRhWFJ6TGx4eVhHNHZMMXh5WEc0Z0lDQWdkbUZ5SUdkc2IySmhiQ0E5SUhSb2FYTXNYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZ2dQU0F5TlRZc0lDQWdJQ0FnSUNBdkx5QmxZV05vSUZKRE5DQnZkWFJ3ZFhRZ2FYTWdNQ0E4UFNCNElEd2dNalUyWEhKY2JpQWdJQ0FnSUNBZ1kyaDFibXR6SUQwZ05pd2dJQ0FnSUNBZ0lDQXZMeUJoZENCc1pXRnpkQ0J6YVhnZ1VrTTBJRzkxZEhCMWRITWdabTl5SUdWaFkyZ2daRzkxWW14bFhISmNiaUFnSUNBZ0lDQWdaR2xuYVhSeklEMGdOVElzSUNBZ0lDQWdJQ0F2THlCMGFHVnlaU0JoY21VZ05USWdjMmxuYm1sbWFXTmhiblFnWkdsbmFYUnpJR2x1SUdFZ1pHOTFZbXhsWEhKY2JpQWdJQ0FnSUNBZ2NtNW5ibUZ0WlNBOUlDZHlZVzVrYjIwbkxDQXZMeUJ5Ym1kdVlXMWxPaUJ1WVcxbElHWnZjaUJOWVhSb0xuSmhibVJ2YlNCaGJtUWdUV0YwYUM1elpXVmtjbUZ1Wkc5dFhISmNiaUFnSUNBZ0lDQWdjM1JoY25Sa1pXNXZiU0E5SUcxaGRHZ3VjRzkzS0hkcFpIUm9MQ0JqYUhWdWEzTXBMRnh5WEc0Z0lDQWdJQ0FnSUhOcFoyNXBabWxqWVc1alpTQTlJRzFoZEdndWNHOTNLRElzSUdScFoybDBjeWtzWEhKY2JpQWdJQ0FnSUNBZ2IzWmxjbVpzYjNjZ1BTQnphV2R1YVdacFkyRnVZMlVnS2lBeUxGeHlYRzRnSUNBZ0lDQWdJRzFoYzJzZ1BTQjNhV1IwYUNBdElERXNYSEpjYmlBZ0lDQWdJQ0FnYm05a1pXTnllWEIwYnpzZ0lDQWdJQ0FnSUNBdkx5QnViMlJsTG1weklHTnllWEIwYnlCdGIyUjFiR1VzSUdsdWFYUnBZV3hwZW1Wa0lHRjBJSFJvWlNCaWIzUjBiMjB1WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJ6WldWa2NtRnVaRzl0S0NsY2NseHVMeThnVkdocGN5QnBjeUIwYUdVZ2MyVmxaSEpoYm1SdmJTQm1kVzVqZEdsdmJpQmtaWE5qY21saVpXUWdZV0p2ZG1VdVhISmNiaTh2WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ6WldWa2NtRnVaRzl0S0hObFpXUXNJRzl3ZEdsdmJuTXNJR05oYkd4aVlXTnJLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR3RsZVNBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUc5d2RHbHZibk1nUFNBb2IzQjBhVzl1Y3lBOVBTQjBjblZsS1NBL0lIc2daVzUwY205d2VUb2dkSEoxWlNCOUlEb2dLRzl3ZEdsdmJuTWdmSHdnZTMwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QkdiR0YwZEdWdUlIUm9aU0J6WldWa0lITjBjbWx1WnlCdmNpQmlkV2xzWkNCdmJtVWdabkp2YlNCc2IyTmhiQ0JsYm5SeWIzQjVJR2xtSUc1bFpXUmxaQzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjMmh2Y25SelpXVmtJRDBnYldsNGEyVjVLR1pzWVhSMFpXNG9YSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdVpXNTBjbTl3ZVNBL0lGdHpaV1ZrTENCMGIzTjBjbWx1Wnlod2IyOXNLVjBnT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tITmxaV1FnUFQwZ2JuVnNiQ2tnUHlCaGRYUnZjMlZsWkNncElEb2djMlZsWkN3Z015a3NJR3RsZVNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dklGVnpaU0IwYUdVZ2MyVmxaQ0IwYnlCcGJtbDBhV0ZzYVhwbElHRnVJRUZTUXpRZ1oyVnVaWEpoZEc5eUxseHlYRzRnSUNBZ0lDQWdJSFpoY2lCaGNtTTBJRDBnYm1WM0lFRlNRelFvYTJWNUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdWR2hwY3lCbWRXNWpkR2x2YmlCeVpYUjFjbTV6SUdFZ2NtRnVaRzl0SUdSdmRXSnNaU0JwYmlCYk1Dd2dNU2tnZEdoaGRDQmpiMjUwWVdsdWMxeHlYRzRnSUNBZ0lDQWdJQzh2SUhKaGJtUnZiVzVsYzNNZ2FXNGdaWFpsY25rZ1ltbDBJRzltSUhSb1pTQnRZVzUwYVhOellTQnZaaUIwYUdVZ1NVVkZSU0EzTlRRZ2RtRnNkV1V1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJ5Ym1jZ1BTQm1kVzVqZEdsdmJpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUc0Z1BTQmhjbU0wTG1jb1kyaDFibXR6S1N3Z0lDQWdJQ0FnSUNBZ0lDQWdMeThnVTNSaGNuUWdkMmwwYUNCaElHNTFiV1Z5WVhSdmNpQnVJRHdnTWlCZUlEUTRYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrSUQwZ2MzUmhjblJrWlc1dmJTd2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJQ0FnWVc1a0lHUmxibTl0YVc1aGRHOXlJR1FnUFNBeUlGNGdORGd1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNElEMGdNRHNnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUNBZ1lXNWtJRzV2SUNkbGVIUnlZU0JzWVhOMElHSjVkR1VuTGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9iaUE4SUhOcFoyNXBabWxqWVc1alpTa2dleUFnSUNBZ0lDQWdJQ0F2THlCR2FXeHNJSFZ3SUdGc2JDQnphV2R1YVdacFkyRnVkQ0JrYVdkcGRITWdZbmxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0Z1BTQW9iaUFySUhncElDb2dkMmxrZEdnN0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlBZ0lITm9hV1owYVc1bklHNTFiV1Z5WVhSdmNpQmhibVJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRZ0tqMGdkMmxrZEdnN0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlBZ0lHUmxibTl0YVc1aGRHOXlJR0Z1WkNCblpXNWxjbUYwYVc1bklHRmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGdnUFNCaGNtTTBMbWNvTVNrN0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUFnSUc1bGR5QnNaV0Z6ZEMxemFXZHVhV1pwWTJGdWRDMWllWFJsTGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bElDaHVJRDQ5SUc5MlpYSm1iRzkzS1NCN0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUZSdklHRjJiMmxrSUhKdmRXNWthVzVuSUhWd0xDQmlaV1p2Y21VZ1lXUmthVzVuWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUlDODlJREk3SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z0lDQnNZWE4wSUdKNWRHVXNJSE5vYVdaMElHVjJaWEo1ZEdocGJtZGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1FnTHowZ01qc2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUFnSUhKcFoyaDBJSFZ6YVc1bklHbHVkR1ZuWlhJZ2JXRjBhQ0IxYm5ScGJGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0ErUGo0OUlERTdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJQ0FnZDJVZ2FHRjJaU0JsZUdGamRHeDVJSFJvWlNCa1pYTnBjbVZrSUdKcGRITXVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUNodUlDc2dlQ2tnTHlCa095QWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdSbTl5YlNCMGFHVWdiblZ0WW1WeUlIZHBkR2hwYmlCYk1Dd2dNU2t1WEhKY2JpQWdJQ0FnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NISnVaeTVwYm5Rek1pQTlJR1oxYm1OMGFXOXVLQ2tnZXlCeVpYUjFjbTRnWVhKak5DNW5LRFFwSUh3Z01Ec2dmVnh5WEc0Z0lDQWdJQ0FnSUhCeWJtY3VjWFZwWTJzZ1BTQm1kVzVqZEdsdmJpZ3BJSHNnY21WMGRYSnVJR0Z5WXpRdVp5ZzBLU0F2SURCNE1UQXdNREF3TURBd095QjlYSEpjYmlBZ0lDQWdJQ0FnY0hKdVp5NWtiM1ZpYkdVZ1BTQndjbTVuTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F2THlCTmFYZ2dkR2hsSUhKaGJtUnZiVzVsYzNNZ2FXNTBieUJoWTJOMWJYVnNZWFJsWkNCbGJuUnliM0I1TGx4eVhHNGdJQ0FnSUNBZ0lHMXBlR3RsZVNoMGIzTjBjbWx1WnloaGNtTTBMbE1wTENCd2IyOXNLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdMeThnUTJGc2JHbHVaeUJqYjI1MlpXNTBhVzl1T2lCM2FHRjBJSFJ2SUhKbGRIVnliaUJoY3lCaElHWjFibU4wYVc5dUlHOW1JSEJ5Ym1jc0lITmxaV1FzSUdselgyMWhkR2d1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNodmNIUnBiMjV6TG5CaGMzTWdmSHdnWTJGc2JHSmhZMnNnZkh4Y2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpaHdjbTVuTENCelpXVmtMQ0JwYzE5dFlYUm9YMk5oYkd3c0lITjBZWFJsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkR0YwWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeThnVEc5aFpDQjBhR1VnWVhKak5DQnpkR0YwWlNCbWNtOXRJSFJvWlNCbmFYWmxiaUJ6ZEdGMFpTQnBaaUJwZENCb1lYTWdZVzRnVXlCaGNuSmhlUzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkR0YwWlM1VEtTQjdJR052Y0hrb2MzUmhkR1VzSUdGeVl6UXBPeUI5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QlBibXg1SUhCeWIzWnBaR1VnZEdobElDNXpkR0YwWlNCdFpYUm9iMlFnYVdZZ2NtVnhkV1Z6ZEdWa0lIWnBZU0J2Y0hScGIyNXpMbk4wWVhSbExseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEp1Wnk1emRHRjBaU0E5SUdaMWJtTjBhVzl1S0NrZ2V5QnlaWFIxY200Z1kyOXdlU2hoY21NMExDQjdmU2s3SUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdTV1lnWTJGc2JHVmtJR0Z6SUdFZ2JXVjBhRzlrSUc5bUlFMWhkR2dnS0UxaGRHZ3VjMlZsWkhKaGJtUnZiU2dwS1N3Z2JYVjBZWFJsWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUUxaGRHZ3VjbUZ1Wkc5dElHSmxZMkYxYzJVZ2RHaGhkQ0JwY3lCb2IzY2djMlZsWkhKaGJtUnZiUzVxY3lCb1lYTWdkMjl5YTJWa0lITnBibU5sSUhZeExqQXVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwYzE5dFlYUm9YMk5oYkd3cElIc2diV0YwYUZ0eWJtZHVZVzFsWFNBOUlIQnlibWM3SUhKbGRIVnliaUJ6WldWa095QjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCUGRHaGxjbmRwYzJVc0lHbDBJR2x6SUdFZ2JtVjNaWElnWTJGc2JHbHVaeUJqYjI1MlpXNTBhVzl1TENCemJ5QnlaWFIxY200Z2RHaGxYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJSEJ5Ym1jZ1pHbHlaV04wYkhrdVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdjbVYwZFhKdUlIQnlibWM3WEhKY2JpQWdJQ0FnSUNBZ2ZTa29YSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnlibWNzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE5vYjNKMGMyVmxaQ3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKMmRzYjJKaGJDY2dhVzRnYjNCMGFXOXVjeUEvSUc5d2RHbHZibk11WjJ4dlltRnNJRG9nS0hSb2FYTWdQVDBnYldGMGFDa3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdWMzUmhkR1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYldGMGFGc25jMlZsWkNjZ0t5QnlibWR1WVcxbFhTQTlJSE5sWldSeVlXNWtiMjA3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJCVWtNMFhISmNiaTh2WEhKY2JpOHZJRUZ1SUVGU1F6UWdhVzF3YkdWdFpXNTBZWFJwYjI0dUlDQlVhR1VnWTI5dWMzUnlkV04wYjNJZ2RHRnJaWE1nWVNCclpYa2dhVzRnZEdobElHWnZjbTBnYjJaY2NseHVMeThnWVc0Z1lYSnlZWGtnYjJZZ1lYUWdiVzl6ZENBb2QybGtkR2dwSUdsdWRHVm5aWEp6SUhSb1lYUWdjMmh2ZFd4a0lHSmxJREFnUEQwZ2VDQThJQ2gzYVdSMGFDa3VYSEpjYmk4dlhISmNiaTh2SUZSb1pTQm5LR052ZFc1MEtTQnRaWFJvYjJRZ2NtVjBkWEp1Y3lCaElIQnpaWFZrYjNKaGJtUnZiU0JwYm5SbFoyVnlJSFJvWVhRZ1kyOXVZMkYwWlc1aGRHVnpYSEpjYmk4dklIUm9aU0J1WlhoMElDaGpiM1Z1ZENrZ2IzVjBjSFYwY3lCbWNtOXRJRUZTUXpRdUlDQkpkSE1nY21WMGRYSnVJSFpoYkhWbElHbHpJR0VnYm5WdFltVnlJSGhjY2x4dUx5OGdkR2hoZENCcGN5QnBiaUIwYUdVZ2NtRnVaMlVnTUNBOFBTQjRJRHdnS0hkcFpIUm9JRjRnWTI5MWJuUXBMbHh5WEc0dkwxeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1FWSkROQ2hyWlhrcElIdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RDd2dhMlY1YkdWdUlEMGdhMlY1TG14bGJtZDBhQ3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV1VnUFNCMGFHbHpMQ0JwSUQwZ01Dd2dhaUE5SUcxbExta2dQU0J0WlM1cUlEMGdNQ3dnY3lBOUlHMWxMbE1nUFNCYlhUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OGdWR2hsSUdWdGNIUjVJR3RsZVNCYlhTQnBjeUIwY21WaGRHVmtJR0Z6SUZzd1hTNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb0lXdGxlV3hsYmlrZ2V5QnJaWGtnUFNCYmEyVjViR1Z1S3l0ZE95QjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZJRk5sZENCMWNDQlRJSFZ6YVc1bklIUm9aU0J6ZEdGdVpHRnlaQ0JyWlhrZ2MyTm9aV1IxYkdsdVp5QmhiR2R2Y21sMGFHMHVYSEpjYmlBZ0lDQWdJQ0FnZDJocGJHVWdLR2tnUENCM2FXUjBhQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6VzJsZElEMGdhU3NyTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JtYjNJZ0tHa2dQU0F3T3lCcElEd2dkMmxrZEdnN0lHa3JLeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6VzJsZElEMGdjMXRxSUQwZ2JXRnpheUFtSUNocUlDc2dhMlY1VzJrZ0pTQnJaWGxzWlc1ZElDc2dLSFFnUFNCelcybGRLU2xkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6VzJwZElEMGdkRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dklGUm9aU0JjSW1kY0lpQnRaWFJvYjJRZ2NtVjBkWEp1Y3lCMGFHVWdibVY0ZENBb1kyOTFiblFwSUc5MWRIQjFkSE1nWVhNZ2IyNWxJRzUxYldKbGNpNWNjbHh1SUNBZ0lDQWdJQ0FvYldVdVp5QTlJR1oxYm1OMGFXOXVLR052ZFc1MEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRlZ6YVc1bklHbHVjM1JoYm1ObElHMWxiV0psY25NZ2FXNXpkR1ZoWkNCdlppQmpiRzl6ZFhKbElITjBZWFJsSUc1bFlYSnNlU0JrYjNWaWJHVnpJSE53WldWa0xseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkQ3dnY2lBOUlEQXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2JXVXVhU3dnYWlBOUlHMWxMbW9zSUhNZ1BTQnRaUzVUTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9ZMjkxYm5RdExTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlITmJhU0E5SUcxaGMyc2dKaUFvYVNBcklERXBYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJZ1BTQnlJQ29nZDJsa2RHZ2dLeUJ6VzIxaGMyc2dKaUFvS0hOYmFWMGdQU0J6VzJvZ1BTQnRZWE5ySUNZZ0tHb2dLeUIwS1YwcElDc2dLSE5iYWwwZ1BTQjBLU2xkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFsTG1rZ1BTQnBPeUJ0WlM1cUlEMGdhanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlISTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRVp2Y2lCeWIySjFjM1FnZFc1d2NtVmthV04wWVdKcGJHbDBlU3dnZEdobElHWjFibU4wYVc5dUlHTmhiR3dnWW1Wc2IzY2dZWFYwYjIxaGRHbGpZV3hzZVZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCa2FYTmpZWEprY3lCaGJpQnBibWwwYVdGc0lHSmhkR05vSUc5bUlIWmhiSFZsY3k0Z0lGUm9hWE1nYVhNZ1kyRnNiR1ZrSUZKRE5DMWtjbTl3V3pJMU5sMHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRk5sWlNCb2RIUndPaTh2WjI5dloyeGxMbU52YlM5elpXRnlZMmcvY1QxeWMyRXJabXgxYUhKbGNpdHlaWE53YjI1elpTWmlkRzVKWEhKY2JpQWdJQ0FnSUNBZ2ZTa29kMmxrZEdncE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1kyOXdlU2dwWEhKY2JpOHZJRU52Y0dsbGN5QnBiblJsY201aGJDQnpkR0YwWlNCdlppQkJVa00wSUhSdklHOXlJR1p5YjIwZ1lTQndiR0ZwYmlCdlltcGxZM1F1WEhKY2JpOHZYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmpiM0I1S0dZc0lIUXBJSHRjY2x4dUlDQWdJQ0FnSUNCMExta2dQU0JtTG1rN1hISmNiaUFnSUNBZ0lDQWdkQzVxSUQwZ1ppNXFPMXh5WEc0Z0lDQWdJQ0FnSUhRdVV5QTlJR1l1VXk1emJHbGpaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCME8xeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpOHZYSEpjYmk4dklHWnNZWFIwWlc0b0tWeHlYRzR2THlCRGIyNTJaWEowY3lCaGJpQnZZbXBsWTNRZ2RISmxaU0IwYnlCdVpYTjBaV1FnWVhKeVlYbHpJRzltSUhOMGNtbHVaM011WEhKY2JpOHZYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQm1iR0YwZEdWdUtHOWlhaXdnWkdWd2RHZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjbVZ6ZFd4MElEMGdXMTBzSUhSNWNDQTlJQ2gwZVhCbGIyWWdiMkpxS1N3Z2NISnZjRHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9aR1Z3ZEdnZ0ppWWdkSGx3SUQwOUlDZHZZbXBsWTNRbktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvY0hKdmNDQnBiaUJ2WW1vcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN0lISmxjM1ZzZEM1d2RYTm9LR1pzWVhSMFpXNG9iMkpxVzNCeWIzQmRMQ0JrWlhCMGFDQXRJREVwS1RzZ2ZTQmpZWFJqYUNBb1pTa2dlMzFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tISmxjM1ZzZEM1c1pXNW5kR2dnUHlCeVpYTjFiSFFnT2lCMGVYQWdQVDBnSjNOMGNtbHVaeWNnUHlCdlltb2dPaUJ2WW1vZ0t5QW5YRnd3SnlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0dkwxeHlYRzR2THlCdGFYaHJaWGtvS1Z4eVhHNHZMeUJOYVhobGN5QmhJSE4wY21sdVp5QnpaV1ZrSUdsdWRHOGdZU0JyWlhrZ2RHaGhkQ0JwY3lCaGJpQmhjbkpoZVNCdlppQnBiblJsWjJWeWN5d2dZVzVrWEhKY2JpOHZJSEpsZEhWeWJuTWdZU0J6YUc5eWRHVnVaV1FnYzNSeWFXNW5JSE5sWldRZ2RHaGhkQ0JwY3lCbGNYVnBkbUZzWlc1MElIUnZJSFJvWlNCeVpYTjFiSFFnYTJWNUxseHlYRzR2TDF4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYldsNGEyVjVLSE5sWldRc0lHdGxlU2tnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ6ZEhKcGJtZHpaV1ZrSUQwZ2MyVmxaQ0FySUNjbkxDQnpiV1ZoY2l3Z2FpQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ2QyaHBiR1VnS0dvZ1BDQnpkSEpwYm1kelpXVmtMbXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnJaWGxiYldGemF5QW1JR3BkSUQxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjMnNnSmlBb0tITnRaV0Z5SUY0OUlHdGxlVnR0WVhOcklDWWdhbDBnS2lBeE9Ta2dLeUJ6ZEhKcGJtZHpaV1ZrTG1Ob1lYSkRiMlJsUVhRb2Fpc3JLU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBiM04wY21sdVp5aHJaWGtwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1THk5Y2NseHVMeThnWVhWMGIzTmxaV1FvS1Z4eVhHNHZMeUJTWlhSMWNtNXpJR0Z1SUc5aWFtVmpkQ0JtYjNJZ1lYVjBiM05sWldScGJtY3NJSFZ6YVc1bklIZHBibVJ2ZHk1amNubHdkRzhnWVc1a0lFNXZaR1VnWTNKNWNIUnZYSEpjYmk4dklHMXZaSFZzWlNCcFppQmhkbUZwYkdGaWJHVXVYSEpjYmk4dlhISmNiaUFnSUNCbWRXNWpkR2x2YmlCaGRYUnZjMlZsWkNncElIdGNjbHh1SUNBZ0lDQWdJQ0IwY25rZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ibTlrWldOeWVYQjBieWtnZXlCeVpYUjFjbTRnZEc5emRISnBibWNvYm05a1pXTnllWEIwYnk1eVlXNWtiMjFDZVhSbGN5aDNhV1IwYUNrcE95QjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ2ZFhRZ1BTQnVaWGNnVldsdWREaEJjbkpoZVNoM2FXUjBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ2huYkc5aVlXd3VZM0o1Y0hSdklIeDhJR2RzYjJKaGJDNXRjME55ZVhCMGJ5a3VaMlYwVW1GdVpHOXRWbUZzZFdWektHOTFkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBiM04wY21sdVp5aHZkWFFwTzF4eVhHNGdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdKeWIzZHpaWElnUFNCbmJHOWlZV3d1Ym1GMmFXZGhkRzl5TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHeDFaMmx1Y3lBOUlHSnliM2R6WlhJZ0ppWWdZbkp2ZDNObGNpNXdiSFZuYVc1ek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnV3l0dVpYY2dSR0YwWlN3Z1oyeHZZbUZzTENCd2JIVm5hVzV6TENCbmJHOWlZV3d1YzJOeVpXVnVMQ0IwYjNOMGNtbHVaeWh3YjI5c0tWMDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1THk5Y2NseHVMeThnZEc5emRISnBibWNvS1Z4eVhHNHZMeUJEYjI1MlpYSjBjeUJoYmlCaGNuSmhlU0J2WmlCamFHRnlZMjlrWlhNZ2RHOGdZU0J6ZEhKcGJtZGNjbHh1THk5Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhSdmMzUnlhVzVuS0dFcElIdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdVM1J5YVc1bkxtWnliMjFEYUdGeVEyOWtaUzVoY0hCc2VTZ3dMQ0JoS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmk4dlhISmNiaTh2SUZkb1pXNGdjMlZsWkhKaGJtUnZiUzVxY3lCcGN5QnNiMkZrWldRc0lIZGxJR2x0YldWa2FXRjBaV3g1SUcxcGVDQmhJR1psZHlCaWFYUnpYSEpjYmk4dklHWnliMjBnZEdobElHSjFhV3gwTFdsdUlGSk9SeUJwYm5SdklIUm9aU0JsYm5SeWIzQjVJSEJ2YjJ3dUlDQkNaV05oZFhObElIZGxJR1J2WEhKY2JpOHZJRzV2ZENCM1lXNTBJSFJ2SUdsdWRHVnlabVZ5WlNCM2FYUm9JR1JsZEdWeWJXbHVhWE4wYVdNZ1VGSk9SeUJ6ZEdGMFpTQnNZWFJsY2l4Y2NseHVMeThnYzJWbFpISmhibVJ2YlNCM2FXeHNJRzV2ZENCallXeHNJRzFoZEdndWNtRnVaRzl0SUc5dUlHbDBjeUJ2ZDI0Z1lXZGhhVzRnWVdaMFpYSmNjbHh1THk4Z2FXNXBkR2xoYkdsNllYUnBiMjR1WEhKY2JpOHZYSEpjYmlBZ0lDQnRhWGhyWlhrb2JXRjBhQzV5WVc1a2IyMG9LU3dnY0c5dmJDazdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5Qk9iMlJsYW5NZ1lXNWtJRUZOUkNCemRYQndiM0owT2lCbGVIQnZjblFnZEdobElHbHRjR3hsYldWdWRHRjBhVzl1SUdGeklHRWdiVzlrZFd4bElIVnphVzVuWEhKY2JpOHZJR1ZwZEdobGNpQmpiMjUyWlc1MGFXOXVMbHh5WEc0dkwxeHlYRzVjY2x4dUx5OGdSVzVrSUdGdWIyNTViVzkxY3lCelkyOXdaU3dnWVc1a0lIQmhjM01nYVc1cGRHbGhiQ0IyWVd4MVpYTXVYSEpjYm4wcEtGeHlYRzRnSUNBZ1cxMHNJQ0FnSUNBdkx5QndiMjlzT2lCbGJuUnliM0I1SUhCdmIyd2djM1JoY25SeklHVnRjSFI1WEhKY2JpQWdJQ0JDVFUxaGRHZ2dJQ0FnTHk4Z2JXRjBhRG9nY0dGamEyRm5aU0JqYjI1MFlXbHVhVzVuSUhKaGJtUnZiU3dnY0c5M0xDQmhibVFnYzJWbFpISmhibVJ2YlZ4eVhHNHBPMXh1ZG1GeUlFSmxlbWxsY2taaFkzUnZjbmtnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDOHFLbHh5WEc0Z0lDQWdJQ29nUW1WNmFXVnlSV0Z6YVc1bklDMGdkWE5sSUdKbGVtbGxjaUJqZFhKMlpTQm1iM0lnZEhKaGJuTnBkR2x2YmlCbFlYTnBibWNnWm5WdVkzUnBiMjVjY2x4dUlDQWdJQ0FxSUdKNUlFZGh3NnQwWVc0Z1VtVnVZWFZrWldGMUlESXdNVFFnTFNBeU1ERTFJT0tBa3lCTlNWUWdUR2xqWlc1elpWeHlYRzRnSUNBZ0lDcGNjbHh1SUNBZ0lDQXFJRU55WldScGRITTZJR2x6SUdKaGMyVmtJRzl1SUVacGNtVm1iM2duY3lCdWMxTk5TVXhMWlhsVGNHeHBibVV1WTNCd1hISmNiaUFnSUNBZ0tpQlZjMkZuWlRwY2NseHVJQ0FnSUNBcUlIWmhjaUJ6Y0d4cGJtVWdQU0JDWlhwcFpYSkZZWE5wYm1jb1d5QXdMakkxTENBd0xqRXNJREF1TWpVc0lERXVNQ0JkS1Z4eVhHNGdJQ0FnSUNvZ2MzQnNhVzVsTG1kbGRDaDRLU0E5UGlCeVpYUjFjbTV6SUhSb1pTQmxZWE5wYm1jZ2RtRnNkV1VnZkNCNElHMTFjM1FnWW1VZ2FXNGdXekFzSURGZElISmhibWRsWEhKY2JpQWdJQ0FnS2x4eVhHNGdJQ0FnSUNvdlhISmNibHh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnZZaUE5SUh0OU8xeHlYRzRnSUNBZ2IySXVaMlYwUW1WNmFXVnlSV0Z6YVc1bklEMGdaMlYwUW1WNmFXVnlSV0Z6YVc1bk8xeHlYRzRnSUNBZ2RtRnlJR0psZW1sbGNuTWdQU0I3ZlR0Y2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQm5aWFJDWlhwcFpYSkZZWE5wYm1jb1lTeGlMR01zWkN4dWJTbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITjBjaUE5SUc1dElIeDhJQ2duWW1WNlh5Y2dLeUJoS3lkZkp5dGlLeWRmSnl0akt5ZGZKeXRrS1M1eVpYQnNZV05sS0M5Y1hDNHZaeXdnSjNBbktUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloaVpYcHBaWEp6VzNOMGNsMHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ltVjZhV1Z5YzF0emRISmRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjJZWElnWW1WNlJXRnphVzVuSUQwZ2JtVjNJRUpsZW1sbGNrVmhjMmx1WnloYllTeGlMR01zWkYwcE8xeHlYRzRnSUNBZ0lDQWdJR0psZW1sbGNuTmJjM1J5WFNBOUlHSmxla1ZoYzJsdVp6dGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZbVY2UldGemFXNW5PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVMeThnVkdobGMyVWdkbUZzZFdWeklHRnlaU0JsYzNSaFlteHBjMmhsWkNCaWVTQmxiWEJwY21samFYTnRJSGRwZEdnZ2RHVnpkSE1nS0hSeVlXUmxiMlptT2lCd1pYSm1iM0p0WVc1alpTQldVeUJ3Y21WamFYTnBiMjRwWEhKY2JpQWdJQ0IyWVhJZ1RrVlhWRTlPWDBsVVJWSkJWRWxQVGxNZ1BTQTBPMXh5WEc0Z0lDQWdkbUZ5SUU1RlYxUlBUbDlOU1U1ZlUweFBVRVVnUFNBd0xqQXdNVHRjY2x4dUlDQWdJSFpoY2lCVFZVSkVTVlpKVTBsUFRsOVFVa1ZEU1ZOSlQwNGdQU0F3TGpBd01EQXdNREU3WEhKY2JpQWdJQ0IyWVhJZ1UxVkNSRWxXU1ZOSlQwNWZUVUZZWDBsVVJWSkJWRWxQVGxNZ1BTQXhNRHRjY2x4dVhISmNiaUFnSUNCMllYSWdhMU53YkdsdVpWUmhZbXhsVTJsNlpTQTlJREV4TzF4eVhHNGdJQ0FnZG1GeUlHdFRZVzF3YkdWVGRHVndVMmw2WlNBOUlERXVNQ0F2SUNoclUzQnNhVzVsVkdGaWJHVlRhWHBsSUMwZ01TNHdLVHRjY2x4dVhISmNiaUFnSUNCMllYSWdabXh2WVhRek1rRnljbUY1VTNWd2NHOXlkR1ZrSUQwZ2RIbHdaVzltSUVac2IyRjBNekpCY25KaGVTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aU8xeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJRUVnS0dGQk1Td2dZVUV5S1NCN0lISmxkSFZ5YmlBeExqQWdMU0F6TGpBZ0tpQmhRVElnS3lBekxqQWdLaUJoUVRFN0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlFSWdLR0ZCTVN3Z1lVRXlLU0I3SUhKbGRIVnliaUF6TGpBZ0tpQmhRVElnTFNBMkxqQWdLaUJoUVRFN0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlFTWdLR0ZCTVNrZ0lDQWdJQ0I3SUhKbGRIVnliaUF6TGpBZ0tpQmhRVEU3SUgxY2NseHVYSEpjYmk4dklGSmxkSFZ5Ym5NZ2VDaDBLU0JuYVhabGJpQjBMQ0I0TVN3Z1lXNWtJSGd5TENCdmNpQjVLSFFwSUdkcGRtVnVJSFFzSUhreExDQmhibVFnZVRJdVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCallXeGpRbVY2YVdWeUlDaGhWQ3dnWVVFeExDQmhRVElwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tDaEJLR0ZCTVN3Z1lVRXlLU3BoVkNBcklFSW9ZVUV4TENCaFFUSXBLU3BoVkNBcklFTW9ZVUV4S1NrcVlWUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNHZMeUJTWlhSMWNtNXpJR1I0TDJSMElHZHBkbVZ1SUhRc0lIZ3hMQ0JoYm1RZ2VESXNJRzl5SUdSNUwyUjBJR2RwZG1WdUlIUXNJSGt4TENCaGJtUWdlVEl1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSVGJHOXdaU0FvWVZRc0lHRkJNU3dnWVVFeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRE11TUNBcUlFRW9ZVUV4TENCaFFUSXBLbUZVS21GVUlDc2dNaTR3SUNvZ1FpaGhRVEVzSUdGQk1pa2dLaUJoVkNBcklFTW9ZVUV4S1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmlhVzVoY25sVGRXSmthWFpwWkdVZ0tHRllMQ0JoUVN3Z1lVSXNJRzFZTVN3Z2JWZ3lLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR04xY25KbGJuUllMQ0JqZFhKeVpXNTBWQ3dnYVNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnWkc4Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVkNBOUlHRkJJQ3NnS0dGQ0lDMGdZVUVwSUM4Z01pNHdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFdDQTlJR05oYkdOQ1pYcHBaWElvWTNWeWNtVnVkRlFzSUcxWU1Td2diVmd5S1NBdElHRllPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWTNWeWNtVnVkRmdnUGlBd0xqQXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGQ0lEMGdZM1Z5Y21WdWRGUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhRU0E5SUdOMWNuSmxiblJVTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTQjNhR2xzWlNBb1RXRjBhQzVoWW5Nb1kzVnljbVZ1ZEZncElENGdVMVZDUkVsV1NWTkpUMDVmVUZKRlEwbFRTVTlPSUNZbUlDc3JhU0E4SUZOVlFrUkpWa2xUU1U5T1gwMUJXRjlKVkVWU1FWUkpUMDVUS1R0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1kzVnljbVZ1ZEZRN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdibVYzZEc5dVVtRndhSE52YmtsMFpYSmhkR1VnS0dGWUxDQmhSM1ZsYzNOVUxDQnRXREVzSUcxWU1pa2dlMXh5WEc0Z0lDQWdJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z1RrVlhWRTlPWDBsVVJWSkJWRWxQVGxNN0lDc3JhU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kzVnljbVZ1ZEZOc2IzQmxJRDBnWjJWMFUyeHZjR1VvWVVkMVpYTnpWQ3dnYlZneExDQnRXRElwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kzVnljbVZ1ZEZOc2IzQmxJRDA5UFNBd0xqQXBJSEpsZEhWeWJpQmhSM1ZsYzNOVU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZM1Z5Y21WdWRGZ2dQU0JqWVd4alFtVjZhV1Z5S0dGSGRXVnpjMVFzSUcxWU1Td2diVmd5S1NBdElHRllPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhSM1ZsYzNOVUlDMDlJR04xY25KbGJuUllJQzhnWTNWeWNtVnVkRk5zYjNCbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWVVkMVpYTnpWRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpcGNjbHh1SUNBZ0lDQXFJSEJ2YVc1MGN5QnBjeUJoYmlCaGNuSmhlU0J2WmlCYklHMVlNU3dnYlZreExDQnRXRElzSUcxWk1pQmRYSEpjYmlBZ0lDQWdLaTljY2x4dUlDQWdJR1oxYm1OMGFXOXVJRUpsZW1sbGNrVmhjMmx1WnlBb2NHOXBiblJ6S1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmNDQTlJSEJ2YVc1MGN6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxsOXRVMkZ0Y0d4bFZtRnNkV1Z6SUQwZ1pteHZZWFF6TWtGeWNtRjVVM1Z3Y0c5eWRHVmtJRDhnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hyVTNCc2FXNWxWR0ZpYkdWVGFYcGxLU0E2SUc1bGR5QkJjbkpoZVNoclUzQnNhVzVsVkdGaWJHVlRhWHBsS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5d2NtVmpiMjF3ZFhSbFpDQTlJR1poYkhObE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWRsZENBOUlIUm9hWE11WjJWMExtSnBibVFvZEdocGN5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUW1WNmFXVnlSV0Z6YVc1bkxuQnliM1J2ZEhsd1pTQTlJSHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlBb2VDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYlZneElEMGdkR2hwY3k1ZmNGc3dYU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxWk1TQTlJSFJvYVhNdVgzQmJNVjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFdESWdQU0IwYUdsekxsOXdXekpkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JWa3lJRDBnZEdocGN5NWZjRnN6WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRjBhR2x6TGw5d2NtVmpiMjF3ZFhSbFpDa2dkR2hwY3k1ZmNISmxZMjl0Y0hWMFpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlZneElEMDlQU0J0V1RFZ0ppWWdiVmd5SUQwOVBTQnRXVElwSUhKbGRIVnliaUI0T3lBdkx5QnNhVzVsWVhKY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1FtVmpZWFZ6WlNCS1lYWmhVMk55YVhCMElHNTFiV0psY2lCaGNtVWdhVzF3Y21WamFYTmxMQ0IzWlNCemFHOTFiR1FnWjNWaGNtRnVkR1ZsSUhSb1pTQmxlSFJ5WlcxbGN5QmhjbVVnY21sbmFIUXVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g0SUQwOVBTQXdLU0J5WlhSMWNtNGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hnZ1BUMDlJREVwSUhKbGRIVnliaUF4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMkZzWTBKbGVtbGxjaWgwYUdsekxsOW5aWFJVUm05eVdDaDRLU3dnYlZreExDQnRXVElwTzF4eVhHNGdJQ0FnSUNBZ0lIMHNYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDOHZJRkJ5YVhaaGRHVWdjR0Z5ZEZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JmY0hKbFkyOXRjSFYwWlRvZ1puVnVZM1JwYjI0Z0tDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYlZneElEMGdkR2hwY3k1ZmNGc3dYU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxWk1TQTlJSFJvYVhNdVgzQmJNVjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFdESWdQU0IwYUdsekxsOXdXekpkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JWa3lJRDBnZEdocGN5NWZjRnN6WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZjSEpsWTI5dGNIVjBaV1FnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlZneElDRTlQU0J0V1RFZ2ZId2diVmd5SUNFOVBTQnRXVElwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlqWVd4alUyRnRjR3hsVm1Gc2RXVnpLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTeGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1gyTmhiR05UWVcxd2JHVldZV3gxWlhNNklHWjFibU4wYVc5dUlDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUcxWU1TQTlJSFJvYVhNdVgzQmJNRjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFdESWdQU0IwYUdsekxsOXdXekpkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Ec2dhU0E4SUd0VGNHeHBibVZVWVdKc1pWTnBlbVU3SUNzcmFTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZiVk5oYlhCc1pWWmhiSFZsYzF0cFhTQTlJR05oYkdOQ1pYcHBaWElvYVNBcUlHdFRZVzF3YkdWVGRHVndVMmw2WlN3Z2JWZ3hMQ0J0V0RJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU3hjY2x4dVhISmNiaUFnSUNBZ0lDQWdMeW9xWEhKY2JpQWdJQ0FnSUNBZ0lDb2daMlYwVkVadmNsZ2dZMmh2YzJVZ2RHaGxJR1poYzNSbGMzUWdhR1YxY21semRHbGpJSFJ2SUdSbGRHVnliV2x1WlNCMGFHVWdjR1Z5WTJWdWRHRm5aU0IyWVd4MVpTQndjbVZqYVhObGJIa2dabkp2YlNCaElHZHBkbVZ1SUZnZ2NISnZhbVZqZEdsdmJpNWNjbHh1SUNBZ0lDQWdJQ0FnS2k5Y2NseHVJQ0FnSUNBZ0lDQmZaMlYwVkVadmNsZzZJR1oxYm1OMGFXOXVJQ2hoV0NrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiVmd4SUQwZ2RHaHBjeTVmY0Zzd1hTeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFZTWlBOUlIUm9hWE11WDNCYk1sMHNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0VTJGdGNHeGxWbUZzZFdWeklEMGdkR2hwY3k1ZmJWTmhiWEJzWlZaaGJIVmxjenRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBiblJsY25aaGJGTjBZWEowSUQwZ01DNHdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWTNWeWNtVnVkRk5oYlhCc1pTQTlJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCc1lYTjBVMkZ0Y0d4bElEMGdhMU53YkdsdVpWUmhZbXhsVTJsNlpTQXRJREU3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLRHNnWTNWeWNtVnVkRk5oYlhCc1pTQWhQVDBnYkdGemRGTmhiWEJzWlNBbUppQnRVMkZ0Y0d4bFZtRnNkV1Z6VzJOMWNuSmxiblJUWVcxd2JHVmRJRHc5SUdGWU95QXJLMk4xY25KbGJuUlRZVzF3YkdVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1ZEdWeWRtRnNVM1JoY25RZ0t6MGdhMU5oYlhCc1pWTjBaWEJUYVhwbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUMwdFkzVnljbVZ1ZEZOaGJYQnNaVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklFbHVkR1Z5Y0c5c1lYUmxJSFJ2SUhCeWIzWnBaR1VnWVc0Z2FXNXBkR2xoYkNCbmRXVnpjeUJtYjNJZ2RGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaR2x6ZENBOUlDaGhXQ0F0SUcxVFlXMXdiR1ZXWVd4MVpYTmJZM1Z5Y21WdWRGTmhiWEJzWlYwcElDOGdLRzFUWVcxd2JHVldZV3gxWlhOYlkzVnljbVZ1ZEZOaGJYQnNaU3N4WFNBdElHMVRZVzF3YkdWV1lXeDFaWE5iWTNWeWNtVnVkRk5oYlhCc1pWMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWjNWbGMzTkdiM0pVSUQwZ2FXNTBaWEoyWVd4VGRHRnlkQ0FySUdScGMzUWdLaUJyVTJGdGNHeGxVM1JsY0ZOcGVtVTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXNXBkR2xoYkZOc2IzQmxJRDBnWjJWMFUyeHZjR1VvWjNWbGMzTkdiM0pVTENCdFdERXNJRzFZTWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBibWwwYVdGc1UyeHZjR1VnUGowZ1RrVlhWRTlPWDAxSlRsOVRURTlRUlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkM1J2YmxKaGNHaHpiMjVKZEdWeVlYUmxLR0ZZTENCbmRXVnpjMFp2Y2xRc0lHMVlNU3dnYlZneUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHBibWwwYVdGc1UyeHZjR1VnUFQwOUlEQXVNQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdkMVpYTnpSbTl5VkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJpYVc1aGNubFRkV0prYVhacFpHVW9ZVmdzSUdsdWRHVnlkbUZzVTNSaGNuUXNJR2x1ZEdWeWRtRnNVM1JoY25RZ0t5QnJVMkZ0Y0d4bFUzUmxjRk5wZW1Vc0lHMVlNU3dnYlZneUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUc5aU8xeHlYRzVjY2x4dWZTZ3BLVHRjYmlobWRXNWpkR2x2YmlBb0tTQjdYSEpjYmlBZ0lDQjJZWElnYkdGemRGUnBiV1VnUFNBd08xeHlYRzRnSUNBZ2RtRnlJSFpsYm1SdmNuTWdQU0JiSjIxekp5d2dKMjF2ZWljc0lDZDNaV0pyYVhRbkxDQW5ieWRkTzF4eVhHNGdJQ0FnWm05eUtIWmhjaUI0SUQwZ01Ec2dlQ0E4SUhabGJtUnZjbk11YkdWdVozUm9JQ1ltSUNGM2FXNWtiM2N1Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbE95QXJLM2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQjNhVzVrYjNjdWNtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxJRDBnZDJsdVpHOTNXM1psYm1SdmNuTmJlRjBnS3lBblVtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxKMTA3WEhKY2JpQWdJQ0FnSUNBZ2QybHVaRzkzTG1OaGJtTmxiRUZ1YVcxaGRHbHZia1p5WVcxbElEMGdkMmx1Wkc5M1czWmxibVJ2Y25OYmVGMGdLeUFuUTJGdVkyVnNRVzVwYldGMGFXOXVSbkpoYldVblhTQjhmQ0IzYVc1a2IzZGJkbVZ1Wkc5eWMxdDRYU0FySUNkRFlXNWpaV3hTWlhGMVpYTjBRVzVwYldGMGFXOXVSbkpoYldVblhUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LQ0YzYVc1a2IzY3VjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS1Z4eVhHNGdJQ0FnSUNBZ0lIZHBibVJ2ZHk1eVpYRjFaWE4wUVc1cGJXRjBhVzl1Um5KaGJXVWdQU0JtZFc1amRHbHZiaUFvWTJGc2JHSmhZMnNzSUdWc1pXMWxiblFwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTjFjbkpVYVcxbElEMGdibVYzSUVSaGRHVW9LUzVuWlhSVWFXMWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMGFXMWxWRzlEWVd4c0lEMGdUV0YwYUM1dFlYZ29NQ3dnTVRZZ0xTQW9ZM1Z5Y2xScGJXVWdMU0JzWVhOMFZHbHRaU2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXUWdQU0J6WlhSVWFXMWxiM1YwS0daMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallXeHNZbUZqYXloamRYSnlWR2x0WlNBcklIUnBiV1ZVYjBOaGJHd3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnBiV1ZVYjBOaGJHd3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNZWE4wVkdsdFpTQTlJR04xY25KVWFXMWxJQ3NnZEdsdFpWUnZRMkZzYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2xrTzF4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQnBaaWdoZDJsdVpHOTNMbU5oYm1ObGJFRnVhVzFoZEdsdmJrWnlZVzFsS1Z4eVhHNGdJQ0FnSUNBZ0lIZHBibVJ2ZHk1allXNWpaV3hCYm1sdFlYUnBiMjVHY21GdFpTQTlJR1oxYm1OMGFXOXVJQ2hwWkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbFJwYldWdmRYUW9hV1FwTzF4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYm4wb0tTazdYSEpjYmx4dVpuVnVZM1JwYjI0Z1kzSmxZWFJsUld4bGJXVnVkQ2h3WVhKbGJuUXNZMmhwYkdRc2NHRnlZVzF6S1h0Y2NseHVJQ0FnSUdsbUtHTm9hV3hrS1h0Y2NseHVJQ0FnSUNBZ0lDQmphR2xzWkM1d2NtOTBiM1I1Y0dVZ1BTQlBZbXBsWTNRdVkzSmxZWFJsS0hCaGNtVnVkQzV3Y205MGIzUjVjR1VwTzF4eVhHNGdJQ0FnSUNBZ0lHTm9hV3hrTG5CeWIzUnZkSGx3WlM1amIyNXpkSEoxWTNSdmNpQTlJR05vYVd4a08xeHlYRzRnSUNBZ0lDQWdJR05vYVd4a0xuQnliM1J2ZEhsd1pTNWZjR0Z5Wlc1MElEMGdjR0Z5Wlc1MExuQnliM1J2ZEhsd1pUdGNjbHh1SUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwYm5OMFlXNWpaU0E5SUU5aWFtVmpkQzVqY21WaGRHVW9jR0Z5Wlc1MExuQnliM1J2ZEhsd1pTeHdZWEpoYlhNcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCblpYUlVlWEJsSUQwZ2UzMDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2FXNXpkR0Z1WTJVZ0ppWWdaMlYwVkhsd1pTNTBiMU4wY21sdVp5NWpZV3hzS0dsdWMzUmhibU5sTG1sdWFYUXBJRDA5UFNBblcyOWlhbVZqZENCR2RXNWpkR2x2YmwwbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXpkR0Z1WTJVdWFXNXBkQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzV6ZEdGdVkyVTdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1aMWJtTjBhVzl1SUdWNGRHVnVaRkJ5YjNSdmRIbHdaU2h6YjNWeVkyVXNaR1Z6ZEdsdVlYUnBiMjRwZTF4eVhHNGdJQ0FnWm05eUlDaDJZWElnWVhSMGNpQnBiaUJ6YjNWeVkyVXVjSEp2ZEc5MGVYQmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSE52ZFhKalpTNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrb1lYUjBjaWtwSUdSbGMzUnBibUYwYVc5dUxuQnliM1J2ZEhsd1pWdGhkSFJ5WFNBOUlITnZkWEpqWlM1d2NtOTBiM1I1Y0dWYllYUjBjbDA3WEhKY2JpQWdJQ0I5WEhKY2JuMWNibVoxYm1OMGFXOXVJR0psZWtaMWJtTjBhVzl1S0NsN1hISmNibHh5WEc0Z0lDQWdkbUZ5SUdWaGMybHVaMFoxYm1OMGFXOXVjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RtRnlJRzFoZEdnZ1BTQk5ZWFJvTzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlIQnZhVzUwVDI1TWFXNWxNa1FvZURFc2VURXNJSGd5TEhreUxDQjRNeXg1TXlsN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdSbGRERWdQU0FvZURFcWVUSXBJQ3NnS0hreEtuZ3pLU0FySUNoNE1pcDVNeWtnTFNBb2VETXFlVElwSUMwZ0tIa3pLbmd4S1NBdElDaDRNaXA1TVNrN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHUmxkREVnUGlBdE1DNHdNREF4SUNZbUlHUmxkREVnUENBd0xqQXdNREU3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2NHOXBiblJQYmt4cGJtVXpSQ2g0TVN4NU1TeDZNU3dnZURJc2VUSXNlaklzSUhnekxIa3pMSG96S1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWg2TVNBOVBUMGdNQ0FtSmlCNk1pQTlQVDBnTUNBbUppQjZNeUE5UFQwZ01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHOXBiblJQYmt4cGJtVXlSQ2g0TVN4NU1Td2dlRElzZVRJc0lIZ3pMSGt6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHUnBjM1F4SUQwZ1RXRjBhQzV6Y1hKMEtFMWhkR2d1Y0c5M0tIZ3lJQzBnZURFc0lESXBJQ3NnVFdGMGFDNXdiM2NvZVRJZ0xTQjVNU3dnTWlrZ0t5Qk5ZWFJvTG5CdmR5aDZNaUF0SUhveExDQXlLU2s3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR1JwYzNReUlEMGdUV0YwYUM1emNYSjBLRTFoZEdndWNHOTNLSGd6SUMwZ2VERXNJRElwSUNzZ1RXRjBhQzV3YjNjb2VUTWdMU0I1TVN3Z01pa2dLeUJOWVhSb0xuQnZkeWg2TXlBdElIb3hMQ0F5S1NrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdScGMzUXpJRDBnVFdGMGFDNXpjWEowS0UxaGRHZ3VjRzkzS0hneklDMGdlRElzSURJcElDc2dUV0YwYUM1d2IzY29lVE1nTFNCNU1pd2dNaWtnS3lCTllYUm9MbkJ2ZHloNk15QXRJSG95TENBeUtTazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHUnBabVpFYVhOME8xeHlYRzRnSUNBZ0lDQWdJR2xtS0dScGMzUXhJRDRnWkdsemRESXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhrYVhOME1TQStJR1JwYzNRektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwWm1aRWFYTjBJRDBnWkdsemRERWdMU0JrYVhOME1pQXRJR1JwYzNRek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbG1aa1JwYzNRZ1BTQmthWE4wTXlBdElHUnBjM1F5SUMwZ1pHbHpkREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZb1pHbHpkRE1nUGlCa2FYTjBNaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwWm1aRWFYTjBJRDBnWkdsemRETWdMU0JrYVhOME1pQXRJR1JwYzNReE8xeHlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBabVpFYVhOMElEMGdaR2x6ZERJZ0xTQmthWE4wTVNBdElHUnBjM1F6TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaR2xtWmtScGMzUWdQaUF0TUM0d01EQXhJQ1ltSUdScFptWkVhWE4wSUR3Z01DNHdNREF4TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDOHFablZ1WTNScGIyNGdaMlYwUldGemFXNW5RM1Z5ZG1Vb1lXRXNZbUlzWTJNc1pHUXNaVzVqYjJSbFpFWjFibU5PWVcxbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnYVdZb0lXVnVZMjlrWldSR2RXNWpUbUZ0WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWdVkyOWtaV1JHZFc1alRtRnRaU0E5SUNnblltVjZYeWNnS3lCaFlTc25YeWNyWW1JckoxOG5LMk5qS3lkZkp5dGtaQ2t1Y21Wd2JHRmpaU2d2WEZ3dUwyY3NJQ2R3SnlrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtHVmhjMmx1WjBaMWJtTjBhVzl1YzF0bGJtTnZaR1ZrUm5WdVkwNWhiV1ZkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZoYzJsdVowWjFibU4wYVc5dWMxdGxibU52WkdWa1JuVnVZMDVoYldWZE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdRVEFzSUVJd0xDQkRNRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdRVEVzSUVJeExDQkRNVHRjY2x4dUlDQWdJQ0FnSUNCbFlYTnBibWRHZFc1amRHbHZibk5iWlc1amIyUmxaRVoxYm1OT1lXMWxYU0E5SUdaMWJtTjBhVzl1S0hSMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUI0SUQwZ2RIUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwSUQwZ01Dd2dlanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwYkdVZ0tDc3JhU0E4SURJd0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JETUNBOUlETWdLaUJoWVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFSXdJRDBnTXlBcUlDaGpZeUF0SUdGaEtTQXRJRU13TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FUQWdQU0F4SUMwZ1F6QWdMU0JDTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIb2dQU0FvZUNBcUlDaERNQ0FySUhnZ0tpQW9RakFnS3lCNElDb2dRVEFwS1NrZ0xTQjBkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGliVjloWW5Nb2Vpa2dQQ0F4WlMwektTQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dMVDBnZWlBdklDaERNQ0FySUhnZ0tpQW9NaUFxSUVJd0lDc2dNeUFxSUVFd0lDb2dlQ2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRU14SUQwZ015QXFJR0ppTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JDTVNBOUlETWdLaUFvWkdRZ0xTQmlZaWtnTFNCRE1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FURWdQU0F4SUMwZ1F6RWdMU0JDTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQnZiSGxDSUQwZ2VDQXFJQ2hETVNBcklIZ2dLaUFvUWpFZ0t5QjRJQ29nUVRFcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OXlaWFIxY200Z1l5QXFJSEJ2YkhsQ0lDc2dZanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQnZiSGxDTzF4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZoYzJsdVowWjFibU4wYVc5dWMxdGxibU52WkdWa1JuVnVZMDVoYldWZE8xeHlYRzRnSUNBZ2ZTb3ZYSEpjYmlBZ0lDQjJZWElnWjJWMFFtVjZhV1Z5VEdWdVozUm9JRDBnS0daMWJtTjBhVzl1S0NsN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUZObFoyMWxiblFvYkN4d0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVzSUQwZ2JEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3SUQwZ2NEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpaHdkREVzY0hReUxIQjBNeXh3ZERRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZM1Z5ZG1WVFpXZHRaVzUwY3lBOUlHUmxabUYxYkhSRGRYSjJaVk5sWjIxbGJuUnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQjBRMjl2Y21Rc2NHVnlZeXhoWkdSbFpFeGxibWQwYUNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3ZEVScGMzUmhibU5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHOXBiblFnUFNCYlhTeHNZWE4wVUc5cGJuUWdQU0JiWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHeGxibWQwYUVSaGRHRWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFpHUmxaRXhsYm1kMGFEb2dNQ3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObFoyMWxiblJ6T2lCYlhWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXNGdQU0J3ZERNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2F6MHdPMnM4WTNWeWRtVlRaV2R0Wlc1MGN6dHJLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmxjbU1nUFNCckx5aGpkWEoyWlZObFoyMWxiblJ6TFRFcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSFJFYVhOMFlXNWpaU0E5SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQjBRMjl2Y21RZ1BTQmliVjl3YjNjb01TMXdaWEpqTERNcEtuQjBNVnRwWFNzekttSnRYM0J2ZHlneExYQmxjbU1zTWlrcWNHVnlZeXB3ZEROYmFWMHJNeW9vTVMxd1pYSmpLU3BpYlY5d2IzY29jR1Z5WXl3eUtTcHdkRFJiYVYwclltMWZjRzkzS0hCbGNtTXNNeWtxY0hReVcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwVzJsZElEMGdjSFJEYjI5eVpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHNZWE4wVUc5cGJuUmJhVjBnSVQwOUlHNTFiR3dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2RFUnBjM1JoYm1ObElDczlJR0p0WDNCdmR5aHdiMmx1ZEZ0cFhTQXRJR3hoYzNSUWIybHVkRnRwWFN3eUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdGemRGQnZhVzUwVzJsZElEMGdjRzlwYm5SYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHdkRVJwYzNSaGJtTmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndkRVJwYzNSaGJtTmxJRDBnWW0xZmMzRnlkQ2h3ZEVScGMzUmhibU5sS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWkdSbFpFeGxibWQwYUNBclBTQndkRVJwYzNSaGJtTmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVnVaM1JvUkdGMFlTNXpaV2R0Wlc1MGN5NXdkWE5vS0c1bGR5QlRaV2R0Wlc1MEtHRmtaR1ZrVEdWdVozUm9MSEJsY21NcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXNW5kR2hFWVhSaExtRmtaR1ZrVEdWdVozUm9JRDBnWVdSa1pXUk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJzWlc1bmRHaEVZWFJoTzF4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQjlLQ2twTzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHZGxkRk5sWjIxbGJuUnpUR1Z1WjNSb0tITm9ZWEJsUkdGMFlTa2dlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiRzl6WldRZ1BTQnphR0Z3WlVSaGRHRXVZenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjR0YwYUZZZ1BTQnphR0Z3WlVSaGRHRXVkanRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjR0YwYUU4Z1BTQnphR0Z3WlVSaGRHRXVienRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjR0YwYUVrZ1BTQnphR0Z3WlVSaGRHRXVhVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdjMmhoY0dWRVlYUmhMbDlzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHeGxibWQwYUhNZ1BTQmJYVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdkRzkwWVd4TVpXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0dE1UdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWdVozUm9jMXRwWFNBOUlHZGxkRUpsZW1sbGNreGxibWQwYUNod1lYUm9WbHRwWFN4d1lYUm9WbHRwS3pGZExIQmhkR2hQVzJsZExIQmhkR2hKVzJrck1WMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiM1JoYkV4bGJtZDBhQ0FyUFNCc1pXNW5kR2h6VzJsZExtRmtaR1ZrVEdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWhqYkc5elpXUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaVzVuZEdoelcybGRJRDBnWjJWMFFtVjZhV1Z5VEdWdVozUm9LSEJoZEdoV1cybGRMSEJoZEdoV1d6QmRMSEJoZEdoUFcybGRMSEJoZEdoSld6QmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkRzkwWVd4TVpXNW5kR2dnS3owZ2JHVnVaM1JvYzF0cFhTNWhaR1JsWkV4bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIdHNaVzVuZEdoek9teGxibWQwYUhNc2RHOTBZV3hNWlc1bmRHZzZkRzkwWVd4TVpXNW5kR2g5TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlFSmxlbWxsY2tSaGRHRW9iR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxaMjFsYm5STVpXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6SUQwZ2JtVjNJRUZ5Y21GNUtHeGxibWQwYUNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdVRzlwYm5SRVlYUmhLSEJoY25ScFlXd3NjRzlwYm5RcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHRnlkR2xoYkV4bGJtZDBhQ0E5SUhCaGNuUnBZV3c3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3YjJsdWRDQTlJSEJ2YVc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSFpoY2lCaWRXbHNaRUpsZW1sbGNrUmhkR0VnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE4wYjNKbFpFUmhkR0VnUFNCN2ZUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUNoclpYbEVZWFJoS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQjBNU0E5SUd0bGVVUmhkR0V1Y3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQjBNaUE5SUd0bGVVUmhkR0V1WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQjBNeUE5SUd0bGVVUmhkR0V1ZEc4N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQndkRFFnUFNCclpYbEVZWFJoTG5ScE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZbVY2YVdWeVRtRnRaU0E5SUNod2RERXVhbTlwYmlnblh5Y3BLeWRmSnl0d2RESXVhbTlwYmlnblh5Y3BLeWRmSnl0d2RETXVhbTlwYmlnblh5Y3BLeWRmSnl0d2REUXVhbTlwYmlnblh5Y3BLUzV5WlhCc1lXTmxLQzljWEM0dlp5d2dKM0FuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MzUnZjbVZrUkdGMFlWdGlaWHBwWlhKT1lXMWxYU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYbEVZWFJoTG1KbGVtbGxja1JoZEdFZ1BTQnpkRzl5WldSRVlYUmhXMkpsZW1sbGNrNWhiV1ZkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR04xY25abFUyVm5iV1Z1ZEhNZ1BTQmtaV1poZFd4MFEzVnlkbVZUWldkdFpXNTBjenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdheXdnYVN3Z2JHVnVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0hSRGIyOXlaQ3h3WlhKakxHRmtaR1ZrVEdWdVozUm9JRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQjBSR2x6ZEdGdVkyVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3YjJsdWRDeHNZWE4wVUc5cGJuUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHdkREV1YkdWdVozUm9JRDA5UFNBeUlDWW1JQ2h3ZERGYk1GMGdJVDBnY0hReVd6QmRJSHg4SUhCME1Wc3hYU0FoUFNCd2RESmJNVjBwSUNZbUlIQnZhVzUwVDI1TWFXNWxNa1FvY0hReFd6QmRMSEIwTVZzeFhTeHdkREpiTUYwc2NIUXlXekZkTEhCME1Wc3dYU3R3ZEROYk1GMHNjSFF4V3pGZEszQjBNMXN4WFNrZ0ppWWdjRzlwYm5SUGJreHBibVV5UkNod2RERmJNRjBzY0hReFd6RmRMSEIwTWxzd1hTeHdkREpiTVYwc2NIUXlXekJkSzNCME5Gc3dYU3h3ZERKYk1WMHJjSFEwV3pGZEtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKMlpWTmxaMjFsYm5SeklEMGdNanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWW1WNmFXVnlSR0YwWVNBOUlHNWxkeUJDWlhwcFpYSkVZWFJoS0dOMWNuWmxVMlZuYldWdWRITXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaVzRnUFNCd2RETXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hejB3TzJzOFkzVnlkbVZUWldkdFpXNTBjenRyS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblFnUFNCdVpYY2dRWEp5WVhrb2JHVnVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGNtTWdQU0JyTHloamRYSjJaVk5sWjIxbGJuUnpMVEVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NIUkVhWE4wWVc1alpTQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSFJEYjI5eVpDQTlJR0p0WDNCdmR5Z3hMWEJsY21Nc015a3FjSFF4VzJsZEt6TXFZbTFmY0c5M0tERXRjR1Z5WXl3eUtTcHdaWEpqS2lod2RERmJhVjBnS3lCd2RETmJhVjBwS3pNcUtERXRjR1Z5WXlrcVltMWZjRzkzS0hCbGNtTXNNaWtxS0hCME1sdHBYU0FySUhCME5GdHBYU2tyWW0xZmNHOTNLSEJsY21Nc015a3FjSFF5VzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SYmFWMGdQU0J3ZEVOdmIzSmtPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR3hoYzNSUWIybHVkQ0FoUFQwZ2JuVnNiQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSFJFYVhOMFlXNWpaU0FyUFNCaWJWOXdiM2NvY0c5cGJuUmJhVjBnTFNCc1lYTjBVRzlwYm5SYmFWMHNNaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3ZEVScGMzUmhibU5sSUQwZ1ltMWZjM0Z5ZENod2RFUnBjM1JoYm1ObEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZrWkdWa1RHVnVaM1JvSUNzOUlIQjBSR2x6ZEdGdVkyVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWlhwcFpYSkVZWFJoTG5CdmFXNTBjMXRyWFNBOUlHNWxkeUJRYjJsdWRFUmhkR0VvY0hSRWFYTjBZVzVqWlN4d2IybHVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lYTjBVRzlwYm5RZ1BTQndiMmx1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpWlhwcFpYSkVZWFJoTG5ObFoyMWxiblJNWlc1bmRHZ2dQU0JoWkdSbFpFeGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYTJWNVJHRjBZUzVpWlhwcFpYSkVZWFJoSUQwZ1ltVjZhV1Z5UkdGMFlUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUnZjbVZrUkdGMFlWdGlaWHBwWlhKT1lXMWxYU0E5SUdKbGVtbGxja1JoZEdFN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgwb0tTazdYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWjJWMFJHbHpkR0Z1WTJWUVpYSmpLSEJsY21Nc1ltVjZhV1Z5UkdGMFlTbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmxaMjFsYm5SeklEMGdZbVY2YVdWeVJHRjBZUzV6WldkdFpXNTBjenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiR1Z1SUQwZ2MyVm5iV1Z1ZEhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwYm1sMFVHOXpJRDBnWW0xZlpteHZiM0lvS0d4bGJpMHhLU3B3WlhKaktUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHVnVaM1JvVUc5eklEMGdjR1Z5WXlwaVpYcHBaWEpFWVhSaExtRmtaR1ZrVEdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnNVR1Z5WXlBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2JHVnVaM1JvVUc5eklEMDlJSE5sWjIxbGJuUnpXMmx1YVhSUWIzTmRMbXdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMlZuYldWdWRITmJhVzVwZEZCdmMxMHVjRHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdScGNpQTlJSE5sWjIxbGJuUnpXMmx1YVhSUWIzTmRMbXdnUGlCc1pXNW5kR2hRYjNNZ1B5QXRNU0E2SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQm1iR0ZuSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwYkdVb1pteGhaeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHpaV2R0Wlc1MGMxdHBibWwwVUc5elhTNXNJRHc5SUd4bGJtZDBhRkJ2Y3lBbUppQnpaV2R0Wlc1MGMxdHBibWwwVUc5ekt6RmRMbXdnUGlCc1pXNW5kR2hRYjNNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4UVpYSmpJRDBnS0d4bGJtZDBhRkJ2Y3lBdElITmxaMjFsYm5SelcybHVhWFJRYjNOZExtd3BMeWh6WldkdFpXNTBjMXRwYm1sMFVHOXpLekZkTG13dGMyVm5iV1Z1ZEhOYmFXNXBkRkJ2YzEwdWJDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGhaeUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNXBkRkJ2Y3lBclBTQmthWEk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhwYm1sMFVHOXpJRHdnTUNCOGZDQnBibWwwVUc5eklENDlJR3hsYmlBdElERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNZV2NnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMlZuYldWdWRITmJhVzVwZEZCdmMxMHVjQ0FySUNoelpXZHRaVzUwYzF0cGJtbDBVRzl6S3pGZExuQWdMU0J6WldkdFpXNTBjMXRwYm1sMFVHOXpYUzV3S1Nwc1VHVnlZenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdVMlZuYldWdWRGQnZhVzUwY3lncGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIUXhJRDBnYm1WM0lFRnljbUY1S0RJcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIUXlJRDBnYm1WM0lFRnljbUY1S0RJcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIUXpJRDBnYm1WM0lFRnljbUY1S0RJcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIUTBJRDBnYm1WM0lFRnljbUY1S0RJcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR2RsZEZCdmFXNTBTVzVUWldkdFpXNTBLSEIwTVN3Z2NIUXlMQ0J3ZERNc0lIQjBOQ3dnY0dWeVkyVnVkQ3dnWW1WNmFXVnlSR0YwWVNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCME1TQTlJR2RsZEVScGMzUmhibU5sVUdWeVl5aHdaWEpqWlc1MExHSmxlbWxsY2tSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjFNQ0E5SURFN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhVeElEMGdNU0F0SUhReE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCd2RGZ2dQU0JOWVhSb0xuSnZkVzVrS0NoMU1TcDFNU3AxTVNvZ2NIUXhXekJkSUNzZ0tIUXhLblV4S25VeElDc2dkVEVxZERFcWRURWdLeUIxTVNwMU1TcDBNU2txSUhCME0xc3dYU0FySUNoME1TcDBNU3AxTVNBcklIVXhLblF4S25ReElDc2dkREVxZFRFcWRERXBLbkIwTkZzd1hTQXJJSFF4S25ReEtuUXhLaUJ3ZERKYk1GMHBLaUF4TURBd0tTQXZJREV3TURBN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhCMFdTQTlJRTFoZEdndWNtOTFibVFvS0hVeEtuVXhLblV4S2lCd2RERmJNVjBnS3lBb2RERXFkVEVxZFRFZ0t5QjFNU3AwTVNwMU1TQXJJSFV4S25VeEtuUXhLU29nY0hReld6RmRJQ3NnS0hReEtuUXhLblV4SUNzZ2RURXFkREVxZERFZ0t5QjBNU3AxTVNwME1Ta3FjSFEwV3pGZElDc2dkREVxZERFcWRERXFJSEIwTWxzeFhTa3FJREV3TURBcElDOGdNVEF3TUR0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1czQjBXQ3dnY0hSWlhUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhST1pYZFRaV2R0Wlc1MEtIQjBNU3h3ZERJc2NIUXpMSEIwTkN4emRHRnlkRkJsY21Nc1pXNWtVR1Z5WXl3Z1ltVjZhV1Z5UkdGMFlTbDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3ZEhNZ1BTQnVaWGNnVTJWbmJXVnVkRkJ2YVc1MGN5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUhOMFlYSjBVR1Z5WXlBOUlITjBZWEowVUdWeVl5QThJREFnUHlBd0lEb2djM1JoY25SUVpYSmpJRDRnTVNBL0lERWdPaUJ6ZEdGeWRGQmxjbU03WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFF3SUQwZ1oyVjBSR2x6ZEdGdVkyVlFaWEpqS0hOMFlYSjBVR1Z5WXl4aVpYcHBaWEpFWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0JsYm1SUVpYSmpJRDBnWlc1a1VHVnlZeUErSURFZ1B5QXhJRG9nWlc1a1VHVnlZenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdkREVnUFNCblpYUkVhWE4wWVc1alpWQmxjbU1vWlc1a1VHVnlZeXhpWlhwcFpYSkVZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnY0hReExteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZFRBZ1BTQXhJQzBnZERBN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhVeElEMGdNU0F0SUhReE8xeHlYRzRnSUNBZ0lDQWdJQzh2VFdGMGFDNXliM1Z1WkNodWRXMGdLaUF4TURBcElDOGdNVEF3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NIUnpMbkIwTVZ0cFhTQTlJQ0JOWVhSb0xuSnZkVzVrS0NoMU1DcDFNQ3AxTUNvZ2NIUXhXMmxkSUNzZ0tIUXdLblV3S25Vd0lDc2dkVEFxZERBcWRUQWdLeUIxTUNwMU1DcDBNQ2tnS2lCd2RETmJhVjBnS3lBb2REQXFkREFxZFRBZ0t5QjFNQ3AwTUNwME1DQXJJSFF3S25Vd0tuUXdLU29nY0hRMFcybGRJQ3NnZERBcWREQXFkREFxSUhCME1sdHBYU2txSURFd01EQXBJQzhnTVRBd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NIUnpMbkIwTTF0cFhTQTlJRTFoZEdndWNtOTFibVFvS0hVd0tuVXdLblV4S25CME1WdHBYU0FySUNoME1DcDFNQ3AxTVNBcklIVXdLblF3S25VeElDc2dkVEFxZFRBcWRERXBLaUJ3ZEROYmFWMGdLeUFvZERBcWREQXFkVEVnS3lCMU1DcDBNQ3AwTVNBcklIUXdLblV3S25ReEtTb2djSFEwVzJsZElDc2dkREFxZERBcWRERXFJSEIwTWx0cFhTa3FJREV3TURBcElDOGdNVEF3TUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hSekxuQjBORnRwWFNBOUlFMWhkR2d1Y205MWJtUW9LSFV3S25VeEtuVXhLaUJ3ZERGYmFWMGdLeUFvZERBcWRURXFkVEVnS3lCMU1DcDBNU3AxTVNBcklIVXdLblV4S25ReEtTb2djSFF6VzJsZElDc2dLSFF3S25ReEtuVXhJQ3NnZFRBcWRERXFkREVnS3lCME1DcDFNU3AwTVNrcUlIQjBORnRwWFNBcklIUXdLblF4S25ReEtpQndkREpiYVYwcEtpQXhNREF3S1NBdklERXdNREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEIwY3k1d2RESmJhVjBnUFNCTllYUm9Mbkp2ZFc1a0tDaDFNU3AxTVNwMU1Tb2djSFF4VzJsZElDc2dLSFF4S25VeEtuVXhJQ3NnZFRFcWRERXFkVEVnS3lCMU1TcDFNU3AwTVNrcUlIQjBNMXRwWFNBcklDaDBNU3AwTVNwMU1TQXJJSFV4S25ReEtuUXhJQ3NnZERFcWRURXFkREVwS25CME5GdHBYU0FySUhReEtuUXhLblF4S2lCd2RESmJhVjBwS2lBeE1EQXdLU0F2SURFd01EQTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2RITTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnY21WMGRYSnVJSHRjY2x4dUlDQWdJQ0FnSUNBdkwyZGxkRVZoYzJsdVowTjFjblpsSURvZ1oyVjBSV0Z6YVc1blEzVnlkbVVzWEhKY2JpQWdJQ0FnSUNBZ1oyVjBRbVY2YVdWeVRHVnVaM1JvSURvZ1oyVjBRbVY2YVdWeVRHVnVaM1JvTEZ4eVhHNGdJQ0FnSUNBZ0lHZGxkRk5sWjIxbGJuUnpUR1Z1WjNSb0lEb2daMlYwVTJWbmJXVnVkSE5NWlc1bmRHZ3NYSEpjYmlBZ0lDQWdJQ0FnWjJWMFRtVjNVMlZuYldWdWRDQTZJR2RsZEU1bGQxTmxaMjFsYm5Rc1hISmNiaUFnSUNBZ0lDQWdaMlYwVUc5cGJuUkpibE5sWjIxbGJuUWdPaUJuWlhSUWIybHVkRWx1VTJWbmJXVnVkQ3hjY2x4dUlDQWdJQ0FnSUNCaWRXbHNaRUpsZW1sbGNrUmhkR0VnT2lCaWRXbHNaRUpsZW1sbGNrUmhkR0VzWEhKY2JpQWdJQ0FnSUNBZ2NHOXBiblJQYmt4cGJtVXlSQ0E2SUhCdmFXNTBUMjVNYVc1bE1rUXNYSEpjYmlBZ0lDQWdJQ0FnY0c5cGJuUlBia3hwYm1VelJDQTZJSEJ2YVc1MFQyNU1hVzVsTTBSY2NseHVJQ0FnSUgwN1hISmNibjFjY2x4dVhISmNiblpoY2lCaVpYb2dQU0JpWlhwR2RXNWpkR2x2YmlncE8xeHVablZ1WTNScGIyNGdaR0YwWVVaMWJtTjBhVzl1VFdGdVlXZGxjaWdwZTF4eVhHNWNjbHh1SUNBZ0lDOHZkbUZ5SUhSRFlXNTJZWE5JWld4d1pYSWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGpZVzUyWVhNbktTNW5aWFJEYjI1MFpYaDBLQ2N5WkNjcE8xeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR052YlhCc1pYUmxUR0Y1WlhKektHeGhlV1Z5Y3l3Z1kyOXRjSE1zSUdadmJuUk5ZVzVoWjJWeUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHRjVaWEpFWVhSaE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCaGJtbHRRWEp5WVhrc0lHeGhjM1JHY21GdFpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2JHRjVaWEp6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhaXdnYWt4bGJpd2dheXdnYTB4bGJqdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNrUmhkR0VnUFNCc1lYbGxjbk5iYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRW9KMnR6SnlCcGJpQnNZWGxsY2tSaGRHRXBJSHg4SUd4aGVXVnlSR0YwWVM1amIyMXdiR1YwWldRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHRjVaWEpFWVhSaExtTnZiWEJzWlhSbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHeGhlV1Z5UkdGMFlTNTBkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lYbGxjbk5iYVMweFhTNTBaQ0E5SUd4aGVXVnlSR0YwWVM1MGREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGJtbHRRWEp5WVhrZ1BTQmJYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEVaeVlXMWxJRDBnTFRFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHeGhlV1Z5UkdGMFlTNW9ZWE5OWVhOcktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCdFlYTnJVSEp2Y0hNZ1BTQnNZWGxsY2tSaGRHRXViV0Z6YTNOUWNtOXdaWEowYVdWek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdha3hsYmlBOUlHMWhjMnRRY205d2N5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYWowd08ybzhha3hsYmp0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh0WVhOclVISnZjSE5iYWwwdWNIUXVheTVwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkbVZ5ZEZCaGRHaHpWRzlCWW5OdmJIVjBaVlpoYkhWbGN5aHRZWE5yVUhKdmNITmJhbDB1Y0hRdWF5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd0TVpXNGdQU0J0WVhOclVISnZjSE5iYWwwdWNIUXVheTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loclBUQTdhenhyVEdWdU8yc3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYldGemExQnliM0J6VzJwZExuQjBMbXRiYTEwdWN5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZG1WeWRGQmhkR2h6Vkc5QlluTnZiSFYwWlZaaGJIVmxjeWh0WVhOclVISnZjSE5iYWwwdWNIUXVhMXRyWFM1eld6QmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHMWhjMnRRY205d2MxdHFYUzV3ZEM1clcydGRMbVVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuWmxjblJRWVhSb2MxUnZRV0p6YjJ4MWRHVldZV3gxWlhNb2JXRnphMUJ5YjNCelcycGRMbkIwTG10YmExMHVaVnN3WFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRjVaWEpFWVhSaExuUjVQVDA5TUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZWGxsY2tSaGRHRXViR0Y1WlhKeklEMGdabWx1WkVOdmJYQk1ZWGxsY25Nb2JHRjVaWEpFWVhSaExuSmxaa2xrTENCamIyMXdjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyMXdiR1YwWlV4aGVXVnljeWhzWVhsbGNrUmhkR0V1YkdGNVpYSnpMR052YlhCekxDQm1iMjUwVFdGdVlXZGxjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObElHbG1LR3hoZVdWeVJHRjBZUzUwZVNBOVBUMGdOQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyMXdiR1YwWlZOb1lYQmxjeWhzWVhsbGNrUmhkR0V1YzJoaGNHVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9iR0Y1WlhKRVlYUmhMblI1SUQwOUlEVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dGNHeGxkR1ZVWlhoMEtHeGhlV1Z5UkdGMFlTd2dabTl1ZEUxaGJtRm5aWElwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR1pwYm1SRGIyMXdUR0Y1WlhKektHbGtMR052YlhCektYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTQTlJREFzSUd4bGJpQTlJR052YlhCekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQjNhR2xzWlNocFBHeGxiaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0dOdmJYQnpXMmxkTG1sa0lEMDlQU0JwWkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWdoWTI5dGNITmJhVjB1YkdGNVpYSnpMbDlmZFhObFpDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiWEJ6VzJsZExteGhlV1Z5Y3k1ZlgzVnpaV1FnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyMXdjMXRwWFM1c1lYbGxjbk03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1NsTlBUaTV3WVhKelpTaEtVMDlPTG5OMGNtbHVaMmxtZVNoamIyMXdjMXRwWFM1c1lYbGxjbk1wS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHTnZiWEJzWlhSbFUyaGhjR1Z6S0dGeWNpbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlHRnljaTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHb3NJR3BNWlc0N1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdoaGMxQmhkR2h6SUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5YkdWdUxURTdhVDQ5TUR0cExUMHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvWVhKeVcybGRMblI1SUQwOUlDZHphQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ZWEp5VzJsZExtdHpMbXN1YVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRtVnlkRkJoZEdoelZHOUJZbk52YkhWMFpWWmhiSFZsY3loaGNuSmJhVjB1YTNNdWF5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcVRHVnVJRDBnWVhKeVcybGRMbXR6TG1zdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locVBUQTdhanhxVEdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGhjbkpiYVYwdWEzTXVhMXRxWFM1ektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuWmxjblJRWVhSb2MxUnZRV0p6YjJ4MWRHVldZV3gxWlhNb1lYSnlXMmxkTG10ekxtdGJhbDB1YzFzd1hTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1lYSnlXMmxkTG10ekxtdGJhbDB1WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MlpYSjBVR0YwYUhOVWIwRmljMjlzZFhSbFZtRnNkV1Z6S0dGeWNsdHBYUzVyY3k1clcycGRMbVZiTUYwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGelVHRjBhSE1nUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaGhjbkpiYVYwdWRIa2dQVDBnSjJkeUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjIxd2JHVjBaVk5vWVhCbGN5aGhjbkpiYVYwdWFYUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDOHFhV1lvYUdGelVHRjBhSE1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDIxNE9pQmthWE4wWVc1alpWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwzTnpPaUJ6Wlc1emFYUnBkbWwwZVZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDJSak9pQmtaV05oZVZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoY25JdWMzQnNhV05sS0dGeWNpNXNaVzVuZEdndE1Td3dMSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWRIbGNJam9nWENKdGMxd2lMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKdGVGd2lPakl3TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSnpjMXdpT2pFd0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpWkdOY0lqb3dMakF3TVN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2liV0Y0UkdsemRGd2lPakl3TUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2NseHVJQ0FnSUNBZ0lDQjlLaTljY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCamIyNTJaWEowVUdGMGFITlViMEZpYzI5c2RYUmxWbUZzZFdWektIQmhkR2dwZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0J3WVhSb0xta3ViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWFWdHBYVnN3WFNBclBTQndZWFJvTG5aYmFWMWJNRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWFWdHBYVnN4WFNBclBTQndZWFJvTG5aYmFWMWJNVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWIxdHBYVnN3WFNBclBTQndZWFJvTG5aYmFWMWJNRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWIxdHBYVnN4WFNBclBTQndZWFJvTG5aYmFWMWJNVjA3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR05vWldOclZtVnljMmx2YmlodGFXNXBiWFZ0TEdGdWFXMVdaWEp6YVc5dVUzUnlhVzVuS1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWVc1cGJWWmxjbk5wYjI0Z1BTQmhibWx0Vm1WeWMybHZibE4wY21sdVp5QS9JR0Z1YVcxV1pYSnphVzl1VTNSeWFXNW5Mbk53YkdsMEtDY3VKeWtnT2lCYk1UQXdMREV3TUN3eE1EQmRPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHMXBibWx0ZFcxYk1GMCtZVzVwYlZabGNuTnBiMjViTUYwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lvWVc1cGJWWmxjbk5wYjI1Yk1GMGdQaUJ0YVc1cGJYVnRXekJkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaHRhVzVwYlhWdFd6RmRQbUZ1YVcxV1pYSnphVzl1V3pGZEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtS0dGdWFXMVdaWEp6YVc5dVd6RmRJRDRnYldsdWFXMTFiVnN4WFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9iV2x1YVcxMWJWc3lYVDVoYm1sdFZtVnljMmx2YmxzeVhTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmloaGJtbHRWbVZ5YzJsdmJsc3lYU0ErSUcxcGJtbHRkVzFiTWwwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIWmhjaUJqYUdWamExUmxlSFFnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JXbHVhVzExYlZabGNuTnBiMjRnUFNCYk5DdzBMREUwWFR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZFhCa1lYUmxWR1Y0ZEV4aGVXVnlLSFJsZUhSTVlYbGxjaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCa2IyTjFiV1Z1ZEVSaGRHRWdQU0IwWlhoMFRHRjVaWEl1ZEM1a08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBUR0Y1WlhJdWRDNWtJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2F6b2dXMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjenBrYjJOMWJXVnVkRVJoZEdFc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUTZNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVhSbGNtRjBaVXhoZVdWeWN5aHNZWGxsY25NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdiR0Y1WlhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR3hoZVdWeWMxdHBYUzUwZVNBOVBUMGdOU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEJrWVhSbFZHVjRkRXhoZVdWeUtHeGhlV1Z5YzF0cFhTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUFvWVc1cGJXRjBhVzl1UkdGMFlTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR05vWldOclZtVnljMmx2YmlodGFXNXBiWFZ0Vm1WeWMybHZiaXhoYm1sdFlYUnBiMjVFWVhSaExuWXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpYSmhkR1ZNWVhsbGNuTW9ZVzVwYldGMGFXOXVSR0YwWVM1c1lYbGxjbk1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ZVzVwYldGMGFXOXVSR0YwWVM1aGMzTmxkSE1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcExDQnNaVzRnUFNCaGJtbHRZWFJwYjI1RVlYUmhMbUZ6YzJWMGN5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ZVzVwYldGMGFXOXVSR0YwWVM1aGMzTmxkSE5iYVYwdWJHRjVaWEp6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2wwWlhKaGRHVk1ZWGxsY25Nb1lXNXBiV0YwYVc5dVJHRjBZUzVoYzNObGRITmJhVjB1YkdGNVpYSnpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S0NrcFhISmNibHh5WEc0Z0lDQWdkbUZ5SUdOb1pXTnJRMmhoY25NZ1BTQW9ablZ1WTNScGIyNG9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzFwYm1sdGRXMVdaWEp6YVc5dUlEMGdXelFzTnl3NU9WMDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hoYm1sdFlYUnBiMjVFWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ZVzVwYldGMGFXOXVSR0YwWVM1amFHRnljeUFtSmlBaFkyaGxZMnRXWlhKemFXOXVLRzFwYm1sdGRXMVdaWEp6YVc5dUxHRnVhVzFoZEdsdmJrUmhkR0V1ZGlrcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUdGdWFXMWhkR2x2YmtSaGRHRXVZMmhoY25NdWJHVnVaM1JvTENCcUxDQnFUR1Z1TENCckxDQnJUR1Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEJoZEdoRVlYUmhMQ0J3WVhSb2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvWVc1cGJXRjBhVzl1UkdGMFlTNWphR0Z5YzF0cFhTNWtZWFJoSUNZbUlHRnVhVzFoZEdsdmJrUmhkR0V1WTJoaGNuTmJhVjB1WkdGMFlTNXphR0Z3WlhNcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0YwYUhNZ1BTQmhibWx0WVhScGIyNUVZWFJoTG1Ob1lYSnpXMmxkTG1SaGRHRXVjMmhoY0dWeld6QmRMbWwwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcVRHVnVJRDBnY0dGMGFITXViR1Z1WjNSb08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHb2dQU0F3T3lCcUlEd2dha3hsYmpzZ2FpQXJQU0F4S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb1JHRjBZU0E5SUhCaGRHaHpXMnBkTG10ekxtczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppZ2hjR0YwYUVSaGRHRXVYMTlqYjI1MlpYSjBaV1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTJaWEowVUdGMGFITlViMEZpYzI5c2RYUmxWbUZzZFdWektIQmhkR2h6VzJwZExtdHpMbXNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaEVZWFJoTGw5ZlkyOXVkbVZ5ZEdWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0I5S0NrcFhISmNibHh5WEc0Z0lDQWdkbUZ5SUdOb1pXTnJRMjlzYjNKeklEMGdLR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzFwYm1sdGRXMVdaWEp6YVc5dUlEMGdXelFzTVN3NVhUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FYUmxjbUYwWlZOb1lYQmxjeWh6YUdGd1pYTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnYzJoaGNHVnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR29zSUdwTVpXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloemFHRndaWE5iYVYwdWRIa2dQVDA5SUNkbmNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBaWEpoZEdWVGFHRndaWE1vYzJoaGNHVnpXMmxkTG1sMEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObElHbG1LSE5vWVhCbGMxdHBYUzUwZVNBOVBUMGdKMlpzSnlCOGZDQnphR0Z3WlhOYmFWMHVkSGtnUFQwOUlDZHpkQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hOb1lYQmxjMXRwWFM1akxtc2dKaVlnYzJoaGNHVnpXMmxkTG1NdWExc3dYUzVwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FreGxiaUE5SUhOb1lYQmxjMXRwWFM1akxtc3ViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYWowd08ybzhha3hsYmp0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSE5vWVhCbGMxdHBYUzVqTG10YmFsMHVjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVnpXMmxkTG1NdWExdHFYUzV6V3pCZElDODlJREkxTlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRndaWE5iYVYwdVl5NXJXMnBkTG5OYk1WMGdMejBnTWpVMU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsYzF0cFhTNWpMbXRiYWwwdWMxc3lYU0F2UFNBeU5UVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWelcybGRMbU11YTF0cVhTNXpXek5kSUM4OUlESTFOVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtITm9ZWEJsYzF0cFhTNWpMbXRiYWwwdVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWelcybGRMbU11YTF0cVhTNWxXekJkSUM4OUlESTFOVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pYTmJhVjB1WXk1clcycGRMbVZiTVYwZ0x6MGdNalUxTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxjMXRwWFM1akxtdGJhbDB1WlZzeVhTQXZQU0F5TlRVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1Z6VzJsZExtTXVhMXRxWFM1bFd6TmRJQzg5SURJMU5UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxjMXRwWFM1akxtdGJNRjBnTHowZ01qVTFPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pYTmJhVjB1WXk1cld6RmRJQzg5SURJMU5UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWelcybGRMbU11YTFzeVhTQXZQU0F5TlRVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsYzF0cFhTNWpMbXRiTTEwZ0x6MGdNalUxTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FYUmxjbUYwWlV4aGVXVnljeWhzWVhsbGNuTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnYkdGNVpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0d4aGVXVnljMXRwWFM1MGVTQTlQVDBnTkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGNtRjBaVk5vWVhCbGN5aHNZWGxsY25OYmFWMHVjMmhoY0dWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hoYm1sdFlYUnBiMjVFWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ZMmhsWTJ0V1pYSnphVzl1S0cxcGJtbHRkVzFXWlhKemFXOXVMR0Z1YVcxaGRHbHZia1JoZEdFdWRpa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGNtRjBaVXhoZVdWeWN5aGhibWx0WVhScGIyNUVZWFJoTG14aGVXVnljeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGhibWx0WVhScGIyNUVZWFJoTG1GemMyVjBjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUdGdWFXMWhkR2x2YmtSaGRHRXVZWE56WlhSekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGhibWx0WVhScGIyNUVZWFJoTG1GemMyVjBjMXRwWFM1c1lYbGxjbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhWFJsY21GMFpVeGhlV1Z5Y3loaGJtbHRZWFJwYjI1RVlYUmhMbUZ6YzJWMGMxdHBYUzVzWVhsbGNuTXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDBvS1NrN1hISmNibHh5WEc0Z0lDQWdkbUZ5SUdOb1pXTnJVMmhoY0dWeklEMGdLR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzFwYm1sdGRXMVdaWEp6YVc5dUlEMGdXelFzTkN3eE9GMDdYSEpjYmx4eVhHNWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1kyOXRjR3hsZEdWVGFHRndaWE1vWVhKeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJR0Z5Y2k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcUxDQnFUR1Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FHRnpVR0YwYUhNZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazliR1Z1TFRFN2FUNDlNRHRwTFQweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dGeWNsdHBYUzUwZVNBOVBTQW5jMmduS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloaGNuSmJhVjB1YTNNdWF5NXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVcybGRMbXR6TG1zdVl5QTlJR0Z5Y2x0cFhTNWpiRzl6WldRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3BNWlc0Z1BTQmhjbkpiYVYwdWEzTXVheTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locVBUQTdhanhxVEdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvWVhKeVcybGRMbXR6TG10YmFsMHVjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVcybGRMbXR6TG10YmFsMHVjMXN3WFM1aklEMGdZWEp5VzJsZExtTnNiM05sWkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR0Z5Y2x0cFhTNXJjeTVyVzJwZExtVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2x0cFhTNXJjeTVyVzJwZExtVmJNRjB1WXlBOUlHRnljbHRwWFM1amJHOXpaV1E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnpVR0YwYUhNZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb1lYSnlXMmxkTG5SNUlEMDlJQ2RuY2ljcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJYQnNaWFJsVTJoaGNHVnpLR0Z5Y2x0cFhTNXBkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHbDBaWEpoZEdWTVlYbGxjbk1vYkdGNVpYSnpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUd4aGVXVnlSR0YwWVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlHeGhlV1Z5Y3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcUxDQnFUR1Z1TENCckxDQnJUR1Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHRjVaWEpFWVhSaElEMGdiR0Y1WlhKelcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRjVaWEpFWVhSaExtaGhjMDFoYzJzcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnRZWE5yVUhKdmNITWdQU0JzWVhsbGNrUmhkR0V1YldGemEzTlFjbTl3WlhKMGFXVnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHcE1aVzRnUFNCdFlYTnJVSEp2Y0hNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locVBUQTdhanhxVEdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHRZWE5yVUhKdmNITmJhbDB1Y0hRdWF5NXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjMnRRY205d2MxdHFYUzV3ZEM1ckxtTWdQU0J0WVhOclVISnZjSE5iYWwwdVkydzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTB4bGJpQTlJRzFoYzJ0UWNtOXdjMXRxWFM1d2RDNXJMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHJQVEE3YXp4clRHVnVPMnNyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzFoYzJ0UWNtOXdjMXRxWFM1d2RDNXJXMnRkTG5NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhOclVISnZjSE5iYWwwdWNIUXVhMXRyWFM1eld6QmRMbU1nUFNCdFlYTnJVSEp2Y0hOYmFsMHVZMnc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHMWhjMnRRY205d2MxdHFYUzV3ZEM1clcydGRMbVVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWE5yVUhKdmNITmJhbDB1Y0hRdWExdHJYUzVsV3pCZExtTWdQU0J0WVhOclVISnZjSE5iYWwwdVkydzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRjVaWEpFWVhSaExuUjVJRDA5UFNBMEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyMXdiR1YwWlZOb1lYQmxjeWhzWVhsbGNrUmhkR0V1YzJoaGNHVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUNoaGJtbHRZWFJwYjI1RVlYUmhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvWTJobFkydFdaWEp6YVc5dUtHMXBibWx0ZFcxV1pYSnphVzl1TEdGdWFXMWhkR2x2YmtSaGRHRXVkaWtwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxjbUYwWlV4aGVXVnljeWhoYm1sdFlYUnBiMjVFWVhSaExteGhlV1Z5Y3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhoYm1sdFlYUnBiMjVFWVhSaExtRnpjMlYwY3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlHRnVhVzFoZEdsdmJrUmhkR0V1WVhOelpYUnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhoYm1sdFlYUnBiMjVFWVhSaExtRnpjMlYwYzF0cFhTNXNZWGxsY25NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGNtRjBaVXhoZVdWeWN5aGhibWx0WVhScGIyNUVZWFJoTG1GemMyVjBjMXRwWFM1c1lYbGxjbk1wTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgwb0tTazdYSEpjYmx4eVhHNGdJQ0FnTHlwbWRXNWpkR2x2YmlCaWJHbDBVR0YwYUhNb2NHRjBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSEJoZEdndWFTNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0YwYUM1cFcybGRXekJkSUM4OUlHSnNhWFIwWlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCaGRHZ3VhVnRwWFZzeFhTQXZQU0JpYkdsMGRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWFJvTG05YmFWMWJNRjBnTHowZ1lteHBkSFJsY2p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFDNXZXMmxkV3pGZElDODlJR0pzYVhSMFpYSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2d1ZGx0cFhWc3dYU0F2UFNCaWJHbDBkR1Z5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb0xuWmJhVjFiTVYwZ0x6MGdZbXhwZEhSbGNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1lteHBkRk5vWVhCbGN5aGhjbklwZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0JoY25JdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJxTENCcVRHVnVPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQm9ZWE5RWVhSb2N5QTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBXeGxiaTB4TzJrK1BUQTdhUzA5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHRnljbHRwWFM1MGVTQTlQU0FuYzJnbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dGeWNsdHBYUzVyY3k1ckxta3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNhWFJRWVhSb2N5aGhjbkpiYVYwdWEzTXVheWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFUR1Z1SUQwZ1lYSnlXMmxkTG10ekxtc3ViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHFQVEE3YWp4cVRHVnVPMm9yUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhoY25KYmFWMHVhM011YTF0cVhTNXpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNhWFJRWVhSb2N5aGhjbkpiYVYwdWEzTXVhMXRxWFM1eld6QmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGhjbkpiYVYwdWEzTXVhMXRxWFM1bEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKc2FYUlFZWFJvY3loaGNuSmJhVjB1YTNNdWExdHFYUzVsV3pCZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGMxQmhkR2h6SUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9ZWEp5VzJsZExuUjVJRDA5SUNkbmNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGTm9ZWEJsY3loaGNuSmJhVjB1YVhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaU0JwWmloaGNuSmJhVjB1ZEhrZ1BUMGdKM0pqSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliR2wwVUhKdmNHVnlkSGtvWVhKeVcybGRMbkFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lteHBkRkJ5YjNCbGNuUjVLR0Z5Y2x0cFhTNXpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9ZWEp5VzJsZExuUjVJRDA5SUNkemRDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGQnliM0JsY25SNUtHRnljbHRwWFM1M0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb1lYSnlXMmxkTG5SNUlEMDlJQ2QwY2ljcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhwZEZCeWIzQmxjblI1S0dGeWNsdHBYUzV3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNhWFJRY205d1pYSjBlU2hoY25KYmFWMHVjMnNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lteHBkRkJ5YjNCbGNuUjVLR0Z5Y2x0cFhTNWhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9ZWEp5VzJsZExuUjVJRDA5SUNkbGJDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGQnliM0JsY25SNUtHRnljbHRwWFM1d0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0pzYVhSUWNtOXdaWEowZVNoaGNuSmJhVjB1Y3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxJR2xtS0dGeWNsdHBYUzUwZVNBOVBTQW5jbVFuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNhWFJRY205d1pYSjBlU2hoY25KYmFWMHVjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dlkyOXVjMjlzWlM1c2IyY29ZWEp5VzJsZExuUjVJQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdZbXhwZEZSbGVIUW9aR0YwWVN3Z1ptOXVkRTFoYm1GblpYSXBlMXh5WEc1Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmliR2wwVm1Gc2RXVW9kbUZzS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwZVhCbGIyWW9kbUZzS1NBOVBUMGdKMjUxYldKbGNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZV3dnTHowZ1lteHBkSFJsY2p0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU0E5SUhaaGJDNXNaVzVuZEdndE1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VvYVQ0OU1DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4YmFWMGdMejBnWW14cGRIUmxjanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdFBURTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhaaGJEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJpYkdsMFVISnZjR1Z5ZEhrb1pHRjBZU2w3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JV1JoZEdFdWF5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhMbXNnUFNCaWJHbDBWbUZzZFdVb1pHRjBZUzVyS1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaDBlWEJsYjJZb1pHRjBZUzVyV3pCZEtTQTlQVDBnSjI1MWJXSmxjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaExtc2dQU0JpYkdsMFZtRnNkV1VvWkdGMFlTNXJLVHRjY2x4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ1pHRjBZUzVyTG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHUmhkR0V1YTF0cFhTNXpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMMk52Ym5OdmJHVXViRzluS0Nkd2NtVWdVem9nSnl3Z1pHRjBZUzVyVzJsZExuTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0V1YTF0cFhTNXpJRDBnWW14cGRGWmhiSFZsS0dSaGRHRXVhMXRwWFM1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2R3YjNOMElGTTZJQ2NzSUdSaGRHRXVhMXRwWFM1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHUmhkR0V1YTF0cFhTNWxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMMk52Ym5OdmJHVXViRzluS0Nkd2NtVWdSVG9nSnl3Z1pHRjBZUzVyVzJsZExtVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0V1YTF0cFhTNWxJRDBnWW14cGRGWmhiSFZsS0dSaGRHRXVhMXRwWFM1bEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2R3YjNOMElFVTZJQ2NzSUdSaGRHRXVhMXRwWFM1bEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmliR2wwVEdGNVpYSnpLR3hoZVdWeWN5eGpiMjF3Y3l3Z1ptOXVkRTFoYm1GblpYSXBlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnNZWGxsY2tSaGRHRTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHRnVhVzFCY25KaGVTd2diR0Z6ZEVaeVlXMWxPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQnNZWGxsY25NdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJxTENCcVRHVnVMQ0JyTENCclRHVnVPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4aGVXVnlSR0YwWVNBOUlHeGhlV1Z5YzF0cFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JU2duYTNNbklHbHVJR3hoZVdWeVJHRjBZU2twZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGQnliM0JsY25SNUtHeGhlV1Z5UkdGMFlTNXJjeTVoS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGQnliM0JsY25SNUtHeGhlV1Z5UkdGMFlTNXJjeTV3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdGNVpYSkVZWFJoTG1OdmJYQnNaWFJsWkNBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0d4aGVXVnlSR0YwWVM1MGRDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNuTmJhUzB4WFM1MFpDQTlJR3hoZVdWeVJHRjBZUzUwZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFFYSnlZWGtnUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHRnpkRVp5WVcxbElEMGdMVEU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0d4aGVXVnlSR0YwWVM1b1lYTk5ZWE5yS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ0WVhOclVISnZjSE1nUFNCc1lYbGxja1JoZEdFdWJXRnphM05RY205d1pYSjBhV1Z6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FreGxiaUE5SUcxaGMydFFjbTl3Y3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hajB3TzJvOGFreGxianRxS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHRZWE5yVUhKdmNITmJhbDB1Y0hRdWF5NXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW14cGRGQmhkR2h6S0cxaGMydFFjbTl3YzF0cVhTNXdkQzVyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhMHhsYmlBOUlHMWhjMnRRY205d2MxdHFYUzV3ZEM1ckxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3M5TUR0clBHdE1aVzQ3YXlzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHRZWE5yVUhKdmNITmJhbDB1Y0hRdWExdHJYUzV6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWJHbDBVR0YwYUhNb2JXRnphMUJ5YjNCelcycGRMbkIwTG10YmExMHVjMXN3WFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh0WVhOclVISnZjSE5iYWwwdWNIUXVhMXRyWFM1bEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliR2wwVUdGMGFITW9iV0Z6YTFCeWIzQnpXMnBkTG5CMExtdGJhMTB1WlZzd1hTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iR0Y1WlhKRVlYUmhMblI1UFQwOU1DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNrUmhkR0V1ZHlBOUlFMWhkR2d1Y205MWJtUW9iR0Y1WlhKRVlYUmhMbmN2WW14cGRIUmxjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lYbGxja1JoZEdFdWFDQTlJRTFoZEdndWNtOTFibVFvYkdGNVpYSkVZWFJoTG1ndllteHBkSFJsY2lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliR2wwVEdGNVpYSnpLR3hoZVdWeVJHRjBZUzVzWVhsbGNuTXNZMjl0Y0hNc0lHWnZiblJOWVc1aFoyVnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9iR0Y1WlhKRVlYUmhMblI1SUQwOVBTQTBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKc2FYUlRhR0Z3WlhNb2JHRjVaWEpFWVhSaExuTm9ZWEJsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxJR2xtS0d4aGVXVnlSR0YwWVM1MGVTQTlQU0ExS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNhWFJVWlhoMEtHeGhlV1Z5UkdGMFlTd2dabTl1ZEUxaGJtRm5aWElwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWhzWVhsbGNrUmhkR0V1ZEhrZ1BUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lYbGxja1JoZEdFdWMyZ2dMejBnWW14cGRIUmxjanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4aGVXVnlSR0YwWVM1emR5QXZQU0JpYkdsMGRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdKc2FYUkJibWx0WVhScGIyNG9ZVzVwYldGMGFXOXVSR0YwWVN4amIyMXdjeXdnWm05dWRFMWhibUZuWlhJcGUxeHlYRzRnSUNBZ0lDQWdJR0pzYVhSTVlYbGxjbk1vWVc1cGJXRjBhVzl1UkdGMFlTNXNZWGxsY25Nc1kyOXRjSE1zSUdadmJuUk5ZVzVoWjJWeUtUdGNjbHh1SUNBZ0lIMHFMMXh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdOdmJYQnNaWFJsUkdGMFlTaGhibWx0WVhScGIyNUVZWFJoTENCbWIyNTBUV0Z1WVdkbGNpbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1lXNXBiV0YwYVc5dVJHRjBZUzVmWDJOdmJYQnNaWFJsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQmphR1ZqYTBOdmJHOXljeWhoYm1sdFlYUnBiMjVFWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0JqYUdWamExUmxlSFFvWVc1cGJXRjBhVzl1UkdGMFlTazdYSEpjYmlBZ0lDQWdJQ0FnWTJobFkydERhR0Z5Y3loaGJtbHRZWFJwYjI1RVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNCamFHVmphMU5vWVhCbGN5aGhibWx0WVhScGIyNUVZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQmpiMjF3YkdWMFpVeGhlV1Z5Y3loaGJtbHRZWFJwYjI1RVlYUmhMbXhoZVdWeWN5d2dZVzVwYldGMGFXOXVSR0YwWVM1aGMzTmxkSE1zSUdadmJuUk5ZVzVoWjJWeUtUdGNjbHh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjVFWVhSaExsOWZZMjl0Y0d4bGRHVWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQzh2WW14cGRFRnVhVzFoZEdsdmJpaGhibWx0WVhScGIyNUVZWFJoTENCaGJtbHRZWFJwYjI1RVlYUmhMbUZ6YzJWMGN5d2dabTl1ZEUxaGJtRm5aWElwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHTnZiWEJzWlhSbFZHVjRkQ2hrWVhSaExDQm1iMjUwVFdGdVlXZGxjaWw3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9aR0YwWVM1MExtRXViR1Z1WjNSb0lEMDlQU0F3SUNZbUlDRW9KMjBuSUdsdUlHUmhkR0V1ZEM1d0tTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0V1YzJsdVoyeGxVMmhoY0dVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2JXOWtkV3hsVDJJZ1BTQjdmVHRjY2x4dUlDQWdJRzF2WkhWc1pVOWlMbU52YlhCc1pYUmxSR0YwWVNBOUlHTnZiWEJzWlhSbFJHRjBZVHRjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnYlc5a2RXeGxUMkk3WEhKY2JuMWNjbHh1WEhKY2JuWmhjaUJrWVhSaFRXRnVZV2RsY2lBOUlHUmhkR0ZHZFc1amRHbHZiazFoYm1GblpYSW9LVHRjYm5aaGNpQkdiMjUwVFdGdVlXZGxjaUE5SUNobWRXNWpkR2x2YmlncGUxeHlYRzVjY2x4dUlDQWdJSFpoY2lCdFlYaFhZV2wwYVc1blZHbHRaU0E5SURVd01EQTdYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYzJWMFZYQk9iMlJsS0dadmJuUXNJR1poYldsc2VTbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIQmhjbVZ1ZEU1dlpHVWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZHpjR0Z1SnlrN1hISmNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MFRtOWtaUzV6ZEhsc1pTNW1iMjUwUm1GdGFXeDVJQ0FnSUQwZ1ptRnRhV3g1TzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ1YjJSbElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnbmMzQmhiaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDOHZJRU5vWVhKaFkzUmxjbk1nZEdoaGRDQjJZWEo1SUhOcFoyNXBabWxqWVc1MGJIa2dZVzF2Ym1jZ1pHbG1abVZ5Wlc1MElHWnZiblJ6WEhKY2JpQWdJQ0FnSUNBZ2JtOWtaUzVwYm01bGNraFVUVXdnUFNBbloybEpkRlF4VjFGNVFDRXRMeU1uTzF4eVhHNGdJQ0FnSUNBZ0lDOHZJRlpwYzJsaWJHVWdMU0J6YnlCM1pTQmpZVzRnYldWaGMzVnlaU0JwZENBdElHSjFkQ0J1YjNRZ2IyNGdkR2hsSUhOamNtVmxibHh5WEc0Z0lDQWdJQ0FnSUhCaGNtVnVkRTV2WkdVdWMzUjViR1V1Y0c5emFYUnBiMjRnSUNBZ0lDQTlJQ2RoWW5OdmJIVjBaU2M3WEhKY2JpQWdJQ0FnSUNBZ2NHRnlaVzUwVG05a1pTNXpkSGxzWlM1c1pXWjBJQ0FnSUNBZ0lDQWdJRDBnSnkweE1EQXdNSEI0Snp0Y2NseHVJQ0FnSUNBZ0lDQndZWEpsYm5ST2IyUmxMbk4wZVd4bExuUnZjQ0FnSUNBZ0lDQWdJQ0FnUFNBbkxURXdNREF3Y0hnbk8xeHlYRzRnSUNBZ0lDQWdJQzh2SUV4aGNtZGxJR1p2Ym5RZ2MybDZaU0J0WVd0bGN5QmxkbVZ1SUhOMVluUnNaU0JqYUdGdVoyVnpJRzlpZG1sdmRYTmNjbHh1SUNBZ0lDQWdJQ0J3WVhKbGJuUk9iMlJsTG5OMGVXeGxMbVp2Ym5SVGFYcGxJQ0FnSUNBZ1BTQW5NekF3Y0hnbk8xeHlYRzRnSUNBZ0lDQWdJQzh2SUZKbGMyVjBJR0Z1ZVNCbWIyNTBJSEJ5YjNCbGNuUnBaWE5jY2x4dUlDQWdJQ0FnSUNCd1lYSmxiblJPYjJSbExuTjBlV3hsTG1admJuUldZWEpwWVc1MElDQWdQU0FuYm05eWJXRnNKenRjY2x4dUlDQWdJQ0FnSUNCd1lYSmxiblJPYjJSbExuTjBlV3hsTG1admJuUlRkSGxzWlNBZ0lDQWdQU0FuYm05eWJXRnNKenRjY2x4dUlDQWdJQ0FnSUNCd1lYSmxiblJPYjJSbExuTjBlV3hsTG1admJuUlhaV2xuYUhRZ0lDQWdQU0FuYm05eWJXRnNKenRjY2x4dUlDQWdJQ0FnSUNCd1lYSmxiblJPYjJSbExuTjBlV3hsTG14bGRIUmxjbE53WVdOcGJtY2dQU0FuTUNjN1hISmNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MFRtOWtaUzVoY0hCbGJtUkRhR2xzWkNodWIyUmxLVHRjY2x4dUlDQWdJQ0FnSUNCa2IyTjFiV1Z1ZEM1aWIyUjVMbUZ3Y0dWdVpFTm9hV3hrS0hCaGNtVnVkRTV2WkdVcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBdkx5QlNaVzFsYldKbGNpQjNhV1IwYUNCM2FYUm9JRzV2SUdGd2NHeHBaV1FnZDJWaUlHWnZiblJjY2x4dUlDQWdJQ0FnSUNCMllYSWdkMmxrZEdnZ1BTQnViMlJsTG05bVpuTmxkRmRwWkhSb08xeHlYRzRnSUNBZ0lDQWdJRzV2WkdVdWMzUjViR1V1Wm05dWRFWmhiV2xzZVNBOUlHWnZiblFnS3lBbkxDQW5LMlpoYldsc2VUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdlMjV2WkdVNmJtOWtaU3dnZHpwM2FXUjBhQ3dnY0dGeVpXNTBPbkJoY21WdWRFNXZaR1Y5TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHTm9aV05yVEc5aFpHVmtSbTl1ZEhNb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11Wm05dWRITXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdWIyUmxMQ0IzTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJzYjJGa1pXUkRiM1Z1ZENBOUlHeGxianRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPeUJwS3owZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVptOXVkSE5iYVYwdWJHOWhaR1ZrS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHZZV1JsWkVOdmRXNTBJQzA5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1admJuUnpXMmxkTG1aUGNtbG5hVzRnUFQwOUlDZDBKeUI4ZkNCMGFHbHpMbVp2Ym5SelcybGRMbTl5YVdkcGJpQTlQVDBnTWlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgzYVc1a2IzY3VWSGx3Wld0cGRDQW1KaUIzYVc1a2IzY3VWSGx3Wld0cGRDNXNiMkZrSUNZbUlIUm9hWE11ZEhsd1pXdHBkRXh2WVdSbFpDQTlQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsYTJsMFRHOWhaR1ZrSUQwZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNubDdkMmx1Wkc5M0xsUjVjR1ZyYVhRdWJHOWhaQ2g3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGemVXNWpPaUIwY25WbExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhZM1JwZG1VNklHWjFibU4wYVc5dUtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbGEybDBURzloWkdWa0lEMGdNanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlM1aWFXNWtLSFJvYVhNcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN2ZXTmhkR05vS0dVcGUzMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11ZEhsd1pXdHBkRXh2WVdSbFpDQTlQVDBnTWlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabTl1ZEhOYmFWMHViRzloWkdWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtIUm9hWE11Wm05dWRITmJhVjB1Wms5eWFXZHBiaUE5UFQwZ0oyNG5JSHg4SUhSb2FYTXVabTl1ZEhOYmFWMHViM0pwWjJsdUlEMDlQU0F3S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm05dWRITmJhVjB1Ykc5aFpHVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOWtaU0E5SUhSb2FYTXVabTl1ZEhOYmFWMHViVzl1YjBOaGMyVXVibTlrWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIY2dQU0IwYUdsekxtWnZiblJ6VzJsZExtMXZibTlEWVhObExuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodWIyUmxMbTltWm5ObGRGZHBaSFJvSUNFOVBTQjNLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMkZrWldSRGIzVnVkQ0F0UFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabTl1ZEhOYmFWMHViRzloWkdWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzV2WkdVZ1BTQjBhR2x6TG1admJuUnpXMmxkTG5OaGJuTkRZWE5sTG01dlpHVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2R5QTlJSFJvYVhNdVptOXVkSE5iYVYwdWMyRnVjME5oYzJVdWR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHViMlJsTG05bVpuTmxkRmRwWkhSb0lDRTlQU0IzS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOWhaR1ZrUTI5MWJuUWdMVDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtYjI1MGMxdHBYUzVzYjJGa1pXUWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVabTl1ZEhOYmFWMHViRzloWkdWa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVp2Ym5SelcybGRMbk5oYm5ORFlYTmxMbkJoY21WdWRDNXdZWEpsYm5ST2IyUmxMbkpsYlc5MlpVTm9hV3hrS0hSb2FYTXVabTl1ZEhOYmFWMHVjMkZ1YzBOaGMyVXVjR0Z5Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVp2Ym5SelcybGRMbTF2Ym05RFlYTmxMbkJoY21WdWRDNXdZWEpsYm5ST2IyUmxMbkpsYlc5MlpVTm9hV3hrS0hSb2FYTXVabTl1ZEhOYmFWMHViVzl1YjBOaGMyVXVjR0Z5Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb2JHOWhaR1ZrUTI5MWJuUWdJVDA5SURBZ0ppWWdSR0YwWlM1dWIzY29LU0F0SUhSb2FYTXVhVzVwZEZScGJXVWdQQ0J0WVhoWFlXbDBhVzVuVkdsdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxkRlJwYldWdmRYUW9ZMmhsWTJ0TWIyRmtaV1JHYjI1MGN5NWlhVzVrS0hSb2FYTXBMREl3S1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFZHbHRaVzkxZENobWRXNWpkR2x2YmlncGUzUm9hWE11Ykc5aFpHVmtJRDBnZEhKMVpUdDlMbUpwYm1Rb2RHaHBjeWtzTUNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdZM0psWVhSbFNHVnNjR1Z5S0dSbFppd2dabTl1ZEVSaGRHRXBlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjBTR1ZzY0dWeUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkMFpYaDBKeWs3WEhKY2JpQWdJQ0FnSUNBZ2RFaGxiSEJsY2k1emRIbHNaUzVtYjI1MFUybDZaU0E5SUNjeE1EQndlQ2M3WEhKY2JpQWdJQ0FnSUNBZ2RFaGxiSEJsY2k1emRIbHNaUzVtYjI1MFJtRnRhV3g1SUQwZ1ptOXVkRVJoZEdFdVprWmhiV2xzZVR0Y2NseHVJQ0FnSUNBZ0lDQjBTR1ZzY0dWeUxuUmxlSFJEYjI1MFpXNTBJRDBnSnpFbk8xeHlYRzRnSUNBZ0lDQWdJR2xtS0dadmJuUkVZWFJoTG1aRGJHRnpjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJJWld4d1pYSXVjM1I1YkdVdVptOXVkRVpoYldsc2VTQTlJQ2RwYm1obGNtbDBKenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkRWhsYkhCbGNpNWpiR0Z6YzA1aGJXVWdQU0JtYjI1MFJHRjBZUzVtUTJ4aGMzTTdYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkRWhsYkhCbGNpNXpkSGxzWlM1bWIyNTBSbUZ0YVd4NUlEMGdabTl1ZEVSaGRHRXVaa1poYldsc2VUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1pHVm1MbUZ3Y0dWdVpFTm9hV3hrS0hSSVpXeHdaWElwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUIwUTJGdWRtRnpTR1ZzY0dWeUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblkyRnVkbUZ6SnlrdVoyVjBRMjl1ZEdWNGRDZ25NbVFuS1R0Y2NseHVJQ0FnSUNBZ0lDQjBRMkZ1ZG1GelNHVnNjR1Z5TG1admJuUWdQU0FuTVRBd2NIZ2dKeXNnWm05dWRFUmhkR0V1WmtaaGJXbHNlVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEVOaGJuWmhjMGhsYkhCbGNqdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJoWkdSR2IyNTBjeWhtYjI1MFJHRjBZU3dnWkdWbWN5bDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb0lXWnZiblJFWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVzYjJGa1pXUWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVZMmhoY25NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbXh2WVdSbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabTl1ZEhNZ1BTQm1iMjUwUkdGMFlTNXNhWE4wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1ptOXVkRUZ5Y2lBOUlHWnZiblJFWVhSaExteHBjM1E3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJR1p2Ym5SQmNuSXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdJR2s4YkdWdU95QnBLejBnTVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUkJjbkpiYVYwdWJHOWhaR1ZrSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5SQmNuSmJhVjB1Ylc5dWIwTmhjMlVnUFNCelpYUlZjRTV2WkdVb1ptOXVkRUZ5Y2x0cFhTNW1SbUZ0YVd4NUxDZHRiMjV2YzNCaFkyVW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEVGeWNsdHBYUzV6WVc1elEyRnpaU0E5SUhObGRGVndUbTlrWlNobWIyNTBRWEp5VzJsZExtWkdZVzFwYkhrc0ozTmhibk10YzJWeWFXWW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvSVdadmJuUkJjbkpiYVYwdVpsQmhkR2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblJCY25KYmFWMHViRzloWkdWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvWm05dWRFRnljbHRwWFM1bVQzSnBaMmx1SUQwOVBTQW5jQ2NnZkh3Z1ptOXVkRUZ5Y2x0cFhTNXZjbWxuYVc0Z1BUMDlJRE1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSE1nUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2R6ZEhsc1pTY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1MGVYQmxJRDBnWENKMFpYaDBMMk56YzF3aU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVwYm01bGNraFVUVXdnUFNCY0lrQm1iMjUwTFdaaFkyVWdlMXdpSUNzZ1hDSm1iMjUwTFdaaGJXbHNlVG9nWENJclptOXVkRUZ5Y2x0cFhTNW1SbUZ0YVd4NUsxd2lPeUJtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3SUhOeVl6b2dkWEpzS0NkY0lpdG1iMjUwUVhKeVcybGRMbVpRWVhSb0sxd2lKeWs3ZlZ3aU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtY3k1aGNIQmxibVJEYUdsc1pDaHpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1LR1p2Ym5SQmNuSmJhVjB1Wms5eWFXZHBiaUE5UFQwZ0oyY25JSHg4SUdadmJuUkJjbkpiYVYwdWIzSnBaMmx1SUQwOVBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dlBHeHBibXNnYUhKbFpqMG5hSFIwY0hNNkx5OW1iMjUwY3k1bmIyOW5iR1ZoY0dsekxtTnZiUzlqYzNNL1ptRnRhV3g1UFUxdmJuUnpaWEp5WVhRbklISmxiRDBuYzNSNWJHVnphR1ZsZENjZ2RIbHdaVDBuZEdWNGRDOWpjM01uUGx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR3dnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RzYVc1ckp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG5SNWNHVWdQU0JjSW5SbGVIUXZZM056WENJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNMbkpsYkNBOUlGd2ljM1I1YkdWemFHVmxkRndpTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDNW9jbVZtSUQwZ1ptOXVkRUZ5Y2x0cFhTNW1VR0YwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabk11WVhCd1pXNWtRMmhwYkdRb2JDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaG1iMjUwUVhKeVcybGRMbVpQY21sbmFXNGdQVDA5SUNkMEp5QjhmQ0JtYjI1MFFYSnlXMmxkTG05eWFXZHBiaUE5UFQwZ01pbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THp4c2FXNXJJR2h5WldZOUoyaDBkSEJ6T2k4dlptOXVkSE11WjI5dloyeGxZWEJwY3k1amIyMHZZM056UDJaaGJXbHNlVDFOYjI1MGMyVnljbUYwSnlCeVpXdzlKM04wZVd4bGMyaGxaWFFuSUhSNWNHVTlKM1JsZUhRdlkzTnpKejVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnpZeUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KM05qY21sd2RDY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJNdWMyVjBRWFIwY21saWRYUmxLQ2R6Y21NbkxHWnZiblJCY25KYmFWMHVabEJoZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtY3k1aGNIQmxibVJEYUdsc1pDaHpZeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEVGeWNsdHBYUzVvWld4d1pYSWdQU0JqY21WaGRHVklaV3h3WlhJb1pHVm1jeXhtYjI1MFFYSnlXMmxkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW1iMjUwY3k1d2RYTm9LR1p2Ym5SQmNuSmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JqYUdWamEweHZZV1JsWkVadmJuUnpMbUpwYm1Rb2RHaHBjeWtvS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmhaR1JEYUdGeWN5aGphR0Z5Y3lsN1hISmNiaUFnSUNBZ0lDQWdhV1lvSVdOb1lYSnpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppZ2hkR2hwY3k1amFHRnljeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyaGhjbk1nUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJR05vWVhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYWl3Z2FreGxiaUE5SUhSb2FYTXVZMmhoY25NdWJHVnVaM1JvTENCbWIzVnVaRHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcUlEMGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTkxYm1RZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJocGJHVW9hanhxVEdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVZMmhoY25OYmFsMHVjM1I1YkdVZ1BUMDlJR05vWVhKelcybGRMbk4wZVd4bElDWW1JSFJvYVhNdVkyaGhjbk5iYWwwdVprWmhiV2xzZVNBOVBUMGdZMmhoY25OYmFWMHVaa1poYldsc2VTQW1KaUIwYUdsekxtTm9ZWEp6VzJwZExtTm9JRDA5UFNCamFHRnljMXRwWFM1amFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOTFibVFnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FpQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGbWIzVnVaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU5vWVhKekxuQjFjMmdvWTJoaGNuTmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FreGxiaUFyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdkbGRFTm9ZWEpFWVhSaEtHTm9ZWElzSUhOMGVXeGxMQ0JtYjI1MEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTQTlJREFzSUd4bGJpQTlJSFJvYVhNdVkyaGhjbk11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUhkb2FXeGxLQ0JwSUR3Z2JHVnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVZMmhoY25OYmFWMHVZMmdnUFQwOUlHTm9ZWElnSmlZZ2RHaHBjeTVqYUdGeWMxdHBYUzV6ZEhsc1pTQTlQVDBnYzNSNWJHVWdKaVlnZEdocGN5NWphR0Z5YzF0cFhTNW1SbUZ0YVd4NUlEMDlQU0JtYjI1MEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Ob1lYSnpXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2tyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCdFpXRnpkWEpsVkdWNGRDaGphR0Z5TENCbWIyNTBUbUZ0WlN3Z2MybDZaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR1p2Ym5SRVlYUmhJRDBnZEdocGN5NW5aWFJHYjI1MFFubE9ZVzFsS0dadmJuUk9ZVzFsS1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZEVobGJIQmxjaUE5SUdadmJuUkVZWFJoTG1obGJIQmxjanRjY2x4dUlDQWdJQ0FnSUNBdkwzUklaV3h3WlhJdWRHVjRkRU52Ym5SbGJuUWdQU0JqYUdGeU8xeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBTR1ZzY0dWeUxtMWxZWE4xY21WVVpYaDBLR05vWVhJcExuZHBaSFJvS25OcGVtVXZNVEF3TzF4eVhHNGdJQ0FnSUNBZ0lDOHZjbVYwZFhKdUlIUklaV3h3WlhJdVoyVjBRMjl0Y0hWMFpXUlVaWGgwVEdWdVozUm9LQ2txYzJsNlpTOHhNREE3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1oyVjBSbTl1ZEVKNVRtRnRaU2h1WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTQTlJREFzSUd4bGJpQTlJSFJvYVhNdVptOXVkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUhkb2FXeGxLR2s4YkdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1bWIyNTBjMXRwWFM1bVRtRnRaU0E5UFQwZ2JtRnRaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabTl1ZEhOYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FTQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdKM05oYm5NdGMyVnlhV1luTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIWmhjaUJHYjI1MElEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVp2Ym5SeklEMGdXMTA3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVqYUdGeWN5QTlJRzUxYkd3N1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxhMmwwVEc5aFpHVmtJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14dllXUmxaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhVzVwZEZScGJXVWdQU0JFWVhSbExtNXZkeWdwTzF4eVhHNGdJQ0FnZlR0Y2NseHVJQ0FnSUVadmJuUXVjSEp2ZEc5MGVYQmxMbUZrWkVOb1lYSnpJRDBnWVdSa1EyaGhjbk03WEhKY2JpQWdJQ0JHYjI1MExuQnliM1J2ZEhsd1pTNWhaR1JHYjI1MGN5QTlJR0ZrWkVadmJuUnpPMXh5WEc0Z0lDQWdSbTl1ZEM1d2NtOTBiM1I1Y0dVdVoyVjBRMmhoY2tSaGRHRWdQU0JuWlhSRGFHRnlSR0YwWVR0Y2NseHVJQ0FnSUVadmJuUXVjSEp2ZEc5MGVYQmxMbWRsZEVadmJuUkNlVTVoYldVZ1BTQm5aWFJHYjI1MFFubE9ZVzFsTzF4eVhHNGdJQ0FnUm05dWRDNXdjbTkwYjNSNWNHVXViV1ZoYzNWeVpWUmxlSFFnUFNCdFpXRnpkWEpsVkdWNGREdGNjbHh1WEhKY2JpQWdJQ0J5WlhSMWNtNGdSbTl1ZER0Y2NseHVYSEpjYm4wb0tTazdYRzUyWVhJZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1SUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHbHVhWFJHY21GdFpTQTlJQzA1T1RrNU9UazdYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYVc1MFpYSndiMnhoZEdWV1lXeDFaU2htY21GdFpVNTFiU3dnYVhSbGNtRjBhVzl1U1c1a1pYZ3NJSEJ5WlhacGIzVnpWbUZzZFdVc0lHTmhZMmhwYm1jcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdlptWnpaWFJVYVcxbElEMGdkR2hwY3k1dlptWnpaWFJVYVcxbE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdVpYZFdZV3gxWlR0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh3Y21WMmFXOTFjMVpoYkhWbExtTnZibk4wY25WamRHOXlJRDA5UFNCQmNuSmhlU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhkV1lXeDFaU0E5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRHB3Y21WMmFXOTFjMVpoYkhWbExteGxibWQwYUgwcFhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBJRDBnYVhSbGNtRjBhVzl1U1c1a1pYZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHeGxiaUE5SUhSb2FYTXVhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDMGdNU3htYkdGbklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYTJWNVJHRjBZU3dnYm1WNGRFdGxlVVJoZEdFN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhkb2FXeGxLR1pzWVdjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCclpYbEVZWFJoSUQwZ2RHaHBjeTVyWlhsbWNtRnRaWE5iYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGVIUkxaWGxFWVhSaElEMGdkR2hwY3k1clpYbG1jbUZ0WlhOYmFTc3hYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvYVNBOVBTQnNaVzR0TVNBbUppQm1jbUZ0WlU1MWJTQStQU0J1WlhoMFMyVjVSR0YwWVM1MElDMGdiMlptYzJWMFZHbHRaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHJaWGxFWVhSaExtZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGxlVVJoZEdFZ1BTQnVaWGgwUzJWNVJHRjBZVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBaWEpoZEdsdmJrbHVaR1Y0SUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDaHVaWGgwUzJWNVJHRjBZUzUwSUMwZ2IyWm1jMlYwVkdsdFpTa2dQaUJtY21GdFpVNTFiU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGRHVnlZWFJwYjI1SmJtUmxlQ0E5SUdrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlocElEd2diR1Z1SUMwZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxjbUYwYVc5dVNXNWtaWGdnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabXhoWnlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdheXdnYTB4bGJpeHdaWEpqTEdwTVpXNHNJR29zSUdadVl6dGNjbHh1SUNBZ0lDQWdJQ0JwWmloclpYbEVZWFJoTG5SdktYdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGclpYbEVZWFJoTG1KbGVtbGxja1JoZEdFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbVY2TG1KMWFXeGtRbVY2YVdWeVJHRjBZU2hyWlhsRVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWW1WNmFXVnlSR0YwWVNBOUlHdGxlVVJoZEdFdVltVjZhV1Z5UkdGMFlUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9abkpoYldWT2RXMGdQajBnYm1WNGRFdGxlVVJoZEdFdWRDMXZabVp6WlhSVWFXMWxJSHg4SUdaeVlXMWxUblZ0SUR3Z2EyVjVSR0YwWVM1MExXOW1abk5sZEZScGJXVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHbHVaQ0E5SUdaeVlXMWxUblZ0SUQ0OUlHNWxlSFJMWlhsRVlYUmhMblF0YjJabWMyVjBWR2x0WlNBL0lHSmxlbWxsY2tSaGRHRXVjRzlwYm5SekxteGxibWQwYUNBdElERWdPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2EweGxiaUE5SUdKbGVtbGxja1JoZEdFdWNHOXBiblJ6VzJsdVpGMHVjRzlwYm5RdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3NnUFNBd095QnJJRHdnYTB4bGJqc2dheUFyUFNBeEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYZFdZV3gxWlZ0clhTQTlJR0psZW1sbGNrUmhkR0V1Y0c5cGJuUnpXMmx1WkYwdWNHOXBiblJiYTEwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVdOb2FXNW5MbDlzWVhOMFFtVjZhV1Z5UkdGMFlTQTlJRzUxYkd3N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2EyVjVSR0YwWVM1ZlgyWnVZM1FwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p1WXlBOUlHdGxlVVJoZEdFdVgxOW1ibU4wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTVqSUQwZ1FtVjZhV1Z5Um1GamRHOXllUzVuWlhSQ1pYcHBaWEpGWVhOcGJtY29hMlY1UkdGMFlTNXZMbmdzYTJWNVJHRjBZUzV2TG5rc2EyVjVSR0YwWVM1cExuZ3NhMlY1UkdGMFlTNXBMbmtzYTJWNVJHRjBZUzV1S1M1blpYUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2EyVjVSR0YwWVM1ZlgyWnVZM1FnUFNCbWJtTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1pYSmpJRDBnWm01aktDaG1jbUZ0WlU1MWJTMG9hMlY1UkdGMFlTNTBMVzltWm5ObGRGUnBiV1VwS1M4b0tHNWxlSFJMWlhsRVlYUmhMblF0YjJabWMyVjBWR2x0WlNrdEtHdGxlVVJoZEdFdWRDMXZabVp6WlhSVWFXMWxLU2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR1JwYzNSaGJtTmxTVzVNYVc1bElEMGdZbVY2YVdWeVJHRjBZUzV6WldkdFpXNTBUR1Z1WjNSb0tuQmxjbU03WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhObFoyMWxiblJRWlhKak8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdGa1pHVmtUR1Z1WjNSb0lEMGdJQ2hqWVdOb2FXNW5MbXhoYzNSR2NtRnRaU0E4SUdaeVlXMWxUblZ0SUNZbUlHTmhZMmhwYm1jdVgyeGhjM1JDWlhwcFpYSkVZWFJoSUQwOVBTQmlaWHBwWlhKRVlYUmhLU0EvSUdOaFkyaHBibWN1WDJ4aGMzUkJaR1JsWkV4bGJtZDBhQ0E2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFJRDBnSUNoallXTm9hVzVuTG14aGMzUkdjbUZ0WlNBOElHWnlZVzFsVG5WdElDWW1JR05oWTJocGJtY3VYMnhoYzNSQ1pYcHBaWEpFWVhSaElEMDlQU0JpWlhwcFpYSkVZWFJoS1NBL0lHTmhZMmhwYm1jdVgyeGhjM1JRYjJsdWRDQTZJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJHRm5JRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3BNWlc0Z1BTQmlaWHBwWlhKRVlYUmhMbkJ2YVc1MGN5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhR2xzWlNobWJHRm5LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhaR1JsWkV4bGJtZDBhQ0FyUFdKbGVtbGxja1JoZEdFdWNHOXBiblJ6VzJwZExuQmhjblJwWVd4TVpXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvWkdsemRHRnVZMlZKYmt4cGJtVWdQVDA5SURBZ2ZId2djR1Z5WXlBOVBUMGdNQ0I4ZkNCcUlEMDlJR0psZW1sbGNrUmhkR0V1Y0c5cGJuUnpMbXhsYm1kMGFDQXRJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclRHVnVJRDBnWW1WNmFXVnlSR0YwWVM1d2IybHVkSE5iYWwwdWNHOXBiblF1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2F6MHdPMnM4YTB4bGJqdHJLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZDFaaGJIVmxXMnRkSUQwZ1ltVjZhV1Z5UkdGMFlTNXdiMmx1ZEhOYmFsMHVjRzlwYm5SYmExMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb1pHbHpkR0Z1WTJWSmJreHBibVVnUGowZ1lXUmtaV1JNWlc1bmRHZ2dKaVlnWkdsemRHRnVZMlZKYmt4cGJtVWdQQ0JoWkdSbFpFeGxibWQwYUNBcklHSmxlbWxsY2tSaGRHRXVjRzlwYm5Selcyb3JNVjB1Y0dGeWRHbGhiRXhsYm1kMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sWjIxbGJuUlFaWEpqSUQwZ0tHUnBjM1JoYm1ObFNXNU1hVzVsTFdGa1pHVmtUR1Z1WjNSb0tTOG9ZbVY2YVdWeVJHRjBZUzV3YjJsdWRITmJhaXN4WFM1d1lYSjBhV0ZzVEdWdVozUm9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTB4bGJpQTlJR0psZW1sbGNrUmhkR0V1Y0c5cGJuUnpXMnBkTG5CdmFXNTBMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0dzOU1EdHJQR3RNWlc0N2F5czlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGRXWVd4MVpWdHJYU0E5SUdKbGVtbGxja1JoZEdFdWNHOXBiblJ6VzJwZExuQnZhVzUwVzJ0ZElDc2dLR0psZW1sbGNrUmhkR0V1Y0c5cGJuUnpXMm9yTVYwdWNHOXBiblJiYTEwZ0xTQmlaWHBwWlhKRVlYUmhMbkJ2YVc1MGMxdHFYUzV3YjJsdWRGdHJYU2txYzJWbmJXVnVkRkJsY21NN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dvZ1BDQnFUR1Z1SUMwZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR29nS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14aFp5QTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oWTJocGJtY3VYMnhoYzNSUWIybHVkQ0E5SUdvN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZV05vYVc1bkxsOXNZWE4wUVdSa1pXUk1aVzVuZEdnZ1BTQmhaR1JsWkV4bGJtZDBhQ0F0SUdKbGVtbGxja1JoZEdFdWNHOXBiblJ6VzJwZExuQmhjblJwWVd4TVpXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallXTm9hVzVuTGw5c1lYTjBRbVY2YVdWeVJHRjBZU0E5SUdKbGVtbGxja1JoZEdFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHOTFkRmdzYjNWMFdTeHBibGdzYVc1WkxDQnJaWGxXWVd4MVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVnVJRDBnYTJWNVJHRjBZUzV6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHdGxlVVJoZEdFdWFDQWhQVDBnTVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1puSmhiV1ZPZFcwZ1BqMGdibVY0ZEV0bGVVUmhkR0V1ZEMxdlptWnpaWFJVYVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR1Z5WXlBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb1puSmhiV1ZPZFcwZ1BDQnJaWGxFWVhSaExuUXRiMlptYzJWMFZHbHRaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGNtTWdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhyWlhsRVlYUmhMbTh1ZUM1amIyNXpkSEoxWTNSdmNpQTlQVDBnUVhKeVlYa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JV3RsZVVSaGRHRXVYMTltYm1OMEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnJaWGxFWVhSaExsOWZabTVqZENBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnJaWGxFWVhSaExsOWZabTVqZEZ0cFhTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZEZnZ1BTQnJaWGxFWVhSaExtOHVlRnRwWFNCOGZDQnJaWGxFWVhSaExtOHVlRnN3WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUlpJRDBnYTJWNVJHRjBZUzV2TG5sYmFWMGdmSHdnYTJWNVJHRjBZUzV2TG5sYk1GMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzVZSUQwZ2EyVjVSR0YwWVM1cExuaGJhVjBnZkh3Z2EyVjVSR0YwWVM1cExuaGJNRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1WklEMGdhMlY1UkdGMFlTNXBMbmxiYVYwZ2ZId2dhMlY1UkdGMFlTNXBMbmxiTUYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptNWpJRDBnUW1WNmFXVnlSbUZqZEc5eWVTNW5aWFJDWlhwcFpYSkZZWE5wYm1jb2IzVjBXQ3h2ZFhSWkxHbHVXQ3hwYmxrcExtZGxkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JyWlhsRVlYUmhMbDlmWm01amRGdHBYU0E5SUdadVl6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm01aklEMGdhMlY1UkdGMFlTNWZYMlp1WTNSYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXdGxlVVJoZEdFdVgxOW1ibU4wS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBXQ0E5SUd0bGVVUmhkR0V1Ynk1NE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkRmtnUFNCclpYbEVZWFJoTG04dWVUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibGdnUFNCclpYbEVZWFJoTG1rdWVEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibGtnUFNCclpYbEVZWFJoTG1rdWVUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ibU1nUFNCQ1pYcHBaWEpHWVdOMGIzSjVMbWRsZEVKbGVtbGxja1ZoYzJsdVp5aHZkWFJZTEc5MWRGa3NhVzVZTEdsdVdTa3VaMlYwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd0bGVVUmhkR0V1WDE5bWJtTjBJRDBnWm01ak8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p1WXlBOUlHdGxlVVJoZEdFdVgxOW1ibU4wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGNtTWdQU0JtYm1Nb0tHWnlZVzFsVG5WdExTaHJaWGxFWVhSaExuUXRiMlptYzJWMFZHbHRaU2twTHlnb2JtVjRkRXRsZVVSaGRHRXVkQzF2Wm1aelpYUlVhVzFsS1Mwb2EyVjVSR0YwWVM1MExXOW1abk5sZEZScGJXVXBLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1emFDQW1KaUJyWlhsRVlYUmhMbWdnSVQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwYm1sMFVDQTlJR3RsZVVSaGRHRXVjMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pXNWtVQ0E5SUd0bGVVUmhkR0V1WlZ0cFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHBibWwwVUMxbGJtUlFJRHdnTFRFNE1DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1YVhSUUlDczlJRE0yTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lvYVc1cGRGQXRaVzVrVUNBK0lERTRNQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWFYUlFJQzA5SURNMk1EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTJWNVZtRnNkV1VnUFNCcGJtbDBVQ3NvWlc1a1VDMXBibWwwVUNrcWNHVnlZenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhMlY1Vm1Gc2RXVWdQU0JyWlhsRVlYUmhMbWdnUFQwOUlERWdQeUJyWlhsRVlYUmhMbk5iYVYwZ09pQnJaWGxFWVhSaExuTmJhVjByS0d0bGVVUmhkR0V1WlZ0cFhTMXJaWGxFWVhSaExuTmJhVjBwS25CbGNtTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHNaVzRnUFQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWxkMVpoYkhWbElEMGdhMlY1Vm1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYZFdZV3gxWlZ0cFhTQTlJR3RsZVZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYZFdZV3gxWlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGNtRjBhVzl1U1c1a1pYZzZJR2wwWlhKaGRHbHZia2x1WkdWNFhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdkbGRGWmhiSFZsUVhSRGRYSnlaVzUwVkdsdFpTZ3BlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11Wld4bGJTNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFNXUWdQVDA5SUhSb2FYTXVabkpoYldWSlpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXRaR1lnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdabkpoYldWT2RXMGdQU0IwYUdsekxtTnZiWEF1Y21WdVpHVnlaV1JHY21GdFpTQXRJSFJvYVhNdWIyWm1jMlYwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FXNXBkRlJwYldVZ1BTQjBhR2x6TG10bGVXWnlZVzFsYzFzd1hTNTBMWFJvYVhNdWIyWm1jMlYwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1pXNWtWR2x0WlNBOUlIUm9hWE11YTJWNVpuSmhiV1Z6VzNSb2FYTXVhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDMGdNVjB1ZEMxMGFHbHpMbTltWm5ObGRGUnBiV1U3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JU2htY21GdFpVNTFiU0E5UFQwZ2RHaHBjeTVmWTJGamFHbHVaeTVzWVhOMFJuSmhiV1VnZkh3Z0tIUm9hWE11WDJOaFkyaHBibWN1YkdGemRFWnlZVzFsSUNFOVBTQnBibWwwUm5KaGJXVWdKaVlnS0NoMGFHbHpMbDlqWVdOb2FXNW5MbXhoYzNSR2NtRnRaU0ErUFNCbGJtUlVhVzFsSUNZbUlHWnlZVzFsVG5WdElENDlJR1Z1WkZScGJXVXBJSHg4SUNoMGFHbHpMbDlqWVdOb2FXNW5MbXhoYzNSR2NtRnRaU0E4SUdsdWFYUlVhVzFsSUNZbUlHWnlZVzFsVG5WdElEd2dhVzVwZEZScGJXVXBLU2twS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa2dQU0IwYUdsekxsOWpZV05vYVc1bkxteGhjM1JHY21GdFpTQThJR1p5WVcxbFRuVnRJRDhnZEdocGN5NWZZMkZqYUdsdVp5NXNZWE4wU1c1a1pYZ2dPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NtVnVaR1Z5VW1WemRXeDBJRDBnZEdocGN5NXBiblJsY25CdmJHRjBaVlpoYkhWbEtHWnlZVzFsVG5WdExDQnBMQ0IwYUdsekxuQjJMQ0IwYUdsekxsOWpZV05vYVc1bktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmWTJGamFHbHVaeTVzWVhOMFNXNWtaWGdnUFNCeVpXNWtaWEpTWlhOMWJIUXVhWFJsY21GMGFXOXVTVzVrWlhnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11Y0hZdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUVGeWNtRjVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJocGJHVW9hVHgwYUdsekxuWXViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkIyVzJsZElEMGdjbVZ1WkdWeVVtVnpkV3gwTG5aaGJIVmxXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRsdHBYU0E5SUhSb2FYTXViWFZzZENBL0lIUm9hWE11Y0haYmFWMGdLaUIwYUdsekxtMTFiSFFnT2lCMGFHbHpMbkIyVzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11YkdGemRGQldZV3gxWlZ0cFhTQWhQVDBnZEdocGN5NXdkbHRwWFNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xa1ppQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YkdGemRGQldZV3gxWlZ0cFhTQTlJSFJvYVhNdWNIWmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dLejBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0hZZ1BTQnlaVzVrWlhKU1pYTjFiSFF1ZG1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWWdQU0IwYUdsekxtMTFiSFFnUHlCMGFHbHpMbkIyS25Sb2FYTXViWFZzZENBNklIUm9hWE11Y0hZN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxteGhjM1JRVm1Gc2RXVWdJVDBnZEdocGN5NXdkaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViR0Z6ZEZCV1lXeDFaU0E5SUhSb2FYTXVjSFk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyTmhZMmhwYm1jdWJHRnpkRVp5WVcxbElEMGdabkpoYldWT2RXMDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW1jbUZ0WlVsa0lEMGdkR2hwY3k1bGJHVnRMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVkpaRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCblpYUk9iMVpoYkhWbEtDbDdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUZaaGJIVmxVSEp2Y0dWeWRIa29aV3hsYlN4a1lYUmhMQ0J0ZFd4MEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtMTFiSFFnUFNCdGRXeDBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkaUE5SUcxMWJIUWdQeUJrWVhSaExtc2dLaUJ0ZFd4MElEb2daR0YwWVM1ck8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIWWdQU0JrWVhSaExtczdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXRaR1lnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXJJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXJaaUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkbVZzSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbElEMGdaMlYwVG05V1lXeDFaVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCTmRXeDBhVVJwYldWdWMybHZibUZzVUhKdmNHVnlkSGtvWld4bGJTeGtZWFJoTENCdGRXeDBLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTExYkhRZ1BTQnRkV3gwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WkdGMFlTQTlJR1JoZEdFN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiWEFnUFNCbGJHVnRMbU52YlhBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1cklEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1clppQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpuSmhiV1ZKWkNBOUlDMHhPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkaUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzSUh0c1pXNW5kR2c2WkdGMFlTNXJMbXhsYm1kMGFIMHBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSFlnUFNCQmNuSmhlUzVoY0hCc2VTaHVkV3hzTENCN2JHVnVaM1JvT21SaGRHRXVheTVzWlc1bmRHaDlLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXhoYzNSV1lXeDFaU0E5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzSUh0c1pXNW5kR2c2WkdGMFlTNXJMbXhsYm1kMGFIMHBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmhjbklnUFNCQmNuSmhlUzVoY0hCc2VTaHVkV3hzTENCN2JHVnVaM1JvT21SaGRHRXVheTVzWlc1bmRHaDlLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblpsYkNBOUlHRnljaTV0WVhBb1puVnVZM1JwYjI0Z0tDa2dleUJ5WlhSMWNtNGdNQ0I5S1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnWkdGMFlTNXJMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJb2FTQTlJREE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkbHRwWFNBOUlHMTFiSFFnUHlCa1lYUmhMbXRiYVYwZ0tpQnRkV3gwSURvZ1pHRjBZUzVyVzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkIyVzJsZElEMGdaR0YwWVM1clcybGRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRGWmhiSFZsSUQwZ1oyVjBUbTlXWVd4MVpUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJMWlhsbWNtRnRaV1JXWVd4MVpWQnliM0JsY25SNUtHVnNaVzBzSUdSaGRHRXNJRzExYkhRcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWEyVjVabkpoYldWeklEMGdaR0YwWVM1ck8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWIyWm1jMlYwVkdsdFpTQTlJR1ZzWlcwdVpHRjBZUzV6ZER0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aGMzUldZV3gxWlNBOUlDMDVPVGs1T1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aGMzUlFWbUZzZFdVZ1BTQXRPVGs1T1RrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bWNtRnRaVWxrSUQwZ0xURTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZMkZqYUdsdVp6MTdiR0Z6ZEVaeVlXMWxPbWx1YVhSR2NtRnRaU3hzWVhOMFNXNWtaWGc2TUgwN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1cklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG10bUlEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1SaGRHRWdQU0JrWVhSaE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJYVnNkQ0E5SUcxMWJIUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0SUQwZ1pXeGxiVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTJJRDBnYlhWc2RDQS9JR1JoZEdFdWExc3dYUzV6V3pCZEttMTFiSFFnT2lCa1lYUmhMbXRiTUYwdWMxc3dYVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkIySUQwZ1pHRjBZUzVyV3pCZExuTmJNRjA3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSV1lXeDFaU0E5SUdkbGRGWmhiSFZsUVhSRGRYSnlaVzUwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtbHVkR1Z5Y0c5c1lYUmxWbUZzZFdVZ1BTQnBiblJsY25CdmJHRjBaVlpoYkhWbE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJRXRsZVdaeVlXMWxaRTExYkhScFpHbHRaVzV6YVc5dVlXeFFjbTl3WlhKMGVTaGxiR1Z0TENCa1lYUmhMQ0J0ZFd4MEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ1pHRjBZUzVyTG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjeXdnWlN4MGJ5eDBhVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVMVEU3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR1JoZEdFdWExdHBYUzUwYnlBbUppQmtZWFJoTG10YmFWMHVjeUFtSmlCa1lYUmhMbXRiYVYwdVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6SUQwZ1pHRjBZUzVyVzJsZExuTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ1pHRjBZUzVyVzJsZExtVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYnlBOUlHUmhkR0V1YTF0cFhTNTBienRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScElEMGdaR0YwWVM1clcybGRMblJwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9LSE11YkdWdVozUm9JRDA5UFNBeUlDWW1JQ0VvYzFzd1hTQTlQVDBnWlZzd1hTQW1KaUJ6V3pGZElEMDlQU0JsV3pGZEtTQW1KaUJpWlhvdWNHOXBiblJQYmt4cGJtVXlSQ2h6V3pCZExITmJNVjBzWlZzd1hTeGxXekZkTEhOYk1GMGdLeUIwYjFzd1hTeHpXekZkSUNzZ2RHOWJNVjBwSUNZbUlHSmxlaTV3YjJsdWRFOXVUR2x1WlRKRUtITmJNRjBzYzFzeFhTeGxXekJkTEdWYk1WMHNaVnN3WFNBcklIUnBXekJkTEdWYk1WMGdLeUIwYVZzeFhTa3BJSHg4SUNoekxteGxibWQwYUNBOVBUMGdNeUFtSmlBaEtITmJNRjBnUFQwOUlHVmJNRjBnSmlZZ2Mxc3hYU0E5UFQwZ1pWc3hYU0FtSmlCeld6SmRJRDA5UFNCbFd6SmRLU0FtSmlCaVpYb3VjRzlwYm5SUGJreHBibVV6UkNoeld6QmRMSE5iTVYwc2Mxc3lYU3hsV3pCZExHVmJNVjBzWlZzeVhTeHpXekJkSUNzZ2RHOWJNRjBzYzFzeFhTQXJJSFJ2V3pGZExITmJNbDBnS3lCMGIxc3lYU2tnSmlZZ1ltVjZMbkJ2YVc1MFQyNU1hVzVsTTBRb2Mxc3dYU3h6V3pGZExITmJNbDBzWlZzd1hTeGxXekZkTEdWYk1sMHNaVnN3WFNBcklIUnBXekJkTEdWYk1WMGdLeUIwYVZzeFhTeGxXekpkSUNzZ2RHbGJNbDBwS1NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlTNXJXMmxkTG5SdklEMGdiblZzYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaExtdGJhVjB1ZEdrZ1BTQnVkV3hzTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhMlY1Wm5KaGJXVnpJRDBnWkdGMFlTNXJPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViMlptYzJWMFZHbHRaU0E5SUdWc1pXMHVaR0YwWVM1emREdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtc2dQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWEyWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJYVnNkQ0E5SUcxMWJIUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0SUQwZ1pXeGxiVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZMkZqYUdsdVp6MTdiR0Z6ZEVaeVlXMWxPbWx1YVhSR2NtRnRaU3hzWVhOMFNXNWtaWGc2TUgwN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1blpYUldZV3gxWlNBOUlHZGxkRlpoYkhWbFFYUkRkWEp5Wlc1MFZHbHRaVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWx1ZEdWeWNHOXNZWFJsVm1Gc2RXVWdQU0JwYm5SbGNuQnZiR0YwWlZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabkpoYldWSlpDQTlJQzB4TzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZGlBOUlFRnljbUY1TG1Gd2NHeDVLRzUxYkd3c0lIdHNaVzVuZEdnNlpHRjBZUzVyV3pCZExuTXViR1Z1WjNSb2ZTazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdkaUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzSUh0c1pXNW5kR2c2WkdGMFlTNXJXekJkTG5NdWJHVnVaM1JvZlNrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYTjBWbUZzZFdVZ1BTQkJjbkpoZVM1aGNIQnNlU2h1ZFd4c0xDQjdiR1Z1WjNSb09tUmhkR0V1YTFzd1hTNXpMbXhsYm1kMGFIMHBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Z6ZEZCV1lXeDFaU0E5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzSUh0c1pXNW5kR2c2WkdGMFlTNXJXekJkTG5NdWJHVnVaM1JvZlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdkbUZ5SUZSeVlXNXpabTl5YlZCeWIzQmxjblI1SUQwZ0tHWjFibU4wYVc5dUtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhCdmMybDBhVzl1UjJWMGRHVnlLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbkFwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvZEdocGN5NXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmJkR2hwY3k1d2VDNTJMQ0IwYUdsekxuQjVMbllzSUhSb2FYTXVjSG9nUHlCMGFHbHpMbkI2TG5ZZ09pQXdYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjRVRzl6YVhScGIyNUhaWFIwWlhJb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvZEdocGN5NXdlQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSGxRYjNOcGRHbHZia2RsZEhSbGNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVjRjSEpsYzNOcGIyNVdZV3gxWlNoMGFHbHpMbkI1S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZWxCdmMybDBhVzl1UjJWMGRHVnlLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSWGh3Y21WemMybHZibFpoYkhWbEtIUm9hWE11Y0hvcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaGJtTm9iM0pIWlhSMFpYSW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2RHaHBjeTVoS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYjNKcFpXNTBZWFJwYjI1SFpYUjBaWElvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9kR2hwY3k1dmNpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlISnZkR0YwYVc5dVIyVjBkR1Z5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG5JcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2RHaHBjeTV5TENBeEwyUmxaMVJ2VW1Ga2N5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hSb2FYTXVjbm9zSURFdlpHVm5WRzlTWVdSektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCelkyRnNaVWRsZEhSbGNpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVjRjSEpsYzNOcGIyNVdZV3gxWlNoMGFHbHpMbk1zSURFd01DazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHOXdZV05wZEhsSFpYUjBaWElvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9kR2hwY3k1dkxDQXhNREFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ6YTJWM1IyVjBkR1Z5S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlhod2NtVnpjMmx2YmxaaGJIVmxLSFJvYVhNdWMyc3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnphMlYzUVhocGMwZGxkSFJsY2lncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVWNGNISmxjM05wYjI1V1lXeDFaU2gwYUdsekxuTmhLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZWEJ3YkhsVWIwMWhkSEpwZUNodFlYUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hU0E5SURBN0lHa2dQQ0JzWlc0N0lHa2dLejBnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNW5aWFJXWVd4MVpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdWJXUm1LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtRXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRDNTBjbUZ1YzJ4aGRHVW9MWFJvYVhNdVlTNTJXekJkTENBdGRHaHBjeTVoTG5aYk1WMHNJSFJvYVhNdVlTNTJXekpkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV6S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFF1YzJOaGJHVW9kR2hwY3k1ekxuWmJNRjBzSUhSb2FYTXVjeTUyV3pGZExDQjBhR2x6TG5NdWRsc3lYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBMbkp2ZEdGMFpTZ3RkR2hwY3k1eUxuWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwTG5KdmRHRjBaVm9vTFhSb2FYTXVjbm91ZGlrdWNtOTBZWFJsV1NoMGFHbHpMbko1TG5ZcExuSnZkR0YwWlZnb2RHaHBjeTV5ZUM1MktTNXliM1JoZEdWYUtDMTBhR2x6TG05eUxuWmJNbDBwTG5KdmRHRjBaVmtvZEdocGN5NXZjaTUyV3pGZEtTNXliM1JoZEdWWUtIUm9hWE11YjNJdWRsc3dYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVaR0YwWVM1d0xuTXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1SaGRHRXVjQzU2S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGMExuUnlZVzV6YkdGMFpTaDBhR2x6TG5CNExuWXNJSFJvYVhNdWNIa3VkaXdnTFhSb2FYTXVjSG91ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRDNTBjbUZ1YzJ4aGRHVW9kR2hwY3k1d2VDNTJMQ0IwYUdsekxuQjVMbllzSURBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwTG5SeVlXNXpiR0YwWlNoMGFHbHpMbkF1ZGxzd1hTd2dkR2hwY3k1d0xuWmJNVjBzSUMxMGFHbHpMbkF1ZGxzeVhTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2NISnZZMlZ6YzB0bGVYTW9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnlZVzFsU1dRZ1BUMDlJSFJvYVhNdVpuSmhiV1ZKWkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3k1c1pXNW5kR2c3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hU0E5SURBN0lHa2dQQ0JzWlc0N0lHa2dLejBnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNW5aWFJXWVd4MVpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdWJXUm1LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtMWtaaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5KbGMyVjBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5SeVlXNXpiR0YwWlNndGRHaHBjeTVoTG5aYk1GMHNJQzEwYUdsekxtRXVkbHN4WFN3Z2RHaHBjeTVoTG5aYk1sMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1ektTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5OallXeGxLSFJvYVhNdWN5NTJXekJkTENCMGFHbHpMbk11ZGxzeFhTd2dkR2hwY3k1ekxuWmJNbDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjMnNwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVjMnRsZDBaeWIyMUJlR2x6S0MxMGFHbHpMbk5yTG5Zc0lIUm9hWE11YzJFdWRpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1eUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5KdmRHRjBaU2d0ZEdocGN5NXlMbllwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVjbTkwWVhSbFdpZ3RkR2hwY3k1eWVpNTJLUzV5YjNSaGRHVlpLSFJvYVhNdWNua3VkaWt1Y205MFlYUmxXQ2gwYUdsekxuSjRMbllwTG5KdmRHRjBaVm9vTFhSb2FYTXViM0l1ZGxzeVhTa3VjbTkwWVhSbFdTaDBhR2x6TG05eUxuWmJNVjBwTG5KdmRHRjBaVmdvZEdocGN5NXZjaTUyV3pCZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1GMWRHOVBjbWxsYm5SbFpDQW1KaUIwYUdsekxuQXVhMlY1Wm5KaGJXVnpJQ1ltSUhSb2FYTXVjQzVuWlhSV1lXeDFaVUYwVkdsdFpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIyTVN4Mk1qdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1d0xsOWpZV05vYVc1bkxteGhjM1JHY21GdFpTdDBhR2x6TG5BdWIyWm1jMlYwVkdsdFpTQThQU0IwYUdsekxuQXVhMlY1Wm5KaGJXVnpXekJkTG5RcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkakVnUFNCMGFHbHpMbkF1WjJWMFZtRnNkV1ZCZEZScGJXVW9LSFJvYVhNdWNDNXJaWGxtY21GdFpYTmJNRjB1ZENBcklEQXVNREVwSUM4Z2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWU1lYUmxMREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMk1pQTlJSFJvYVhNdWNDNW5aWFJXWVd4MVpVRjBWR2x0WlNoMGFHbHpMbkF1YTJWNVpuSmhiV1Z6V3pCZExuUWdMeUIwYUdsekxtVnNaVzB1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVkpoZEdVc0lEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaDBhR2x6TG5BdVgyTmhZMmhwYm1jdWJHRnpkRVp5WVcxbEszUm9hWE11Y0M1dlptWnpaWFJVYVcxbElENDlJSFJvYVhNdWNDNXJaWGxtY21GdFpYTmJkR2hwY3k1d0xtdGxlV1p5WVcxbGN5NXNaVzVuZEdnZ0xTQXhYUzUwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWXhJRDBnZEdocGN5NXdMbWRsZEZaaGJIVmxRWFJVYVcxbEtDaDBhR2x6TG5BdWEyVjVabkpoYldWelczUm9hWE11Y0M1clpYbG1jbUZ0WlhNdWJHVnVaM1JvSUMwZ01WMHVkQ0F2SUhSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnlZVzFsVW1GMFpTa3NJREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMk1pQTlJSFJvYVhNdWNDNW5aWFJXWVd4MVpVRjBWR2x0WlNnb2RHaHBjeTV3TG10bGVXWnlZVzFsYzF0MGFHbHpMbkF1YTJWNVpuSmhiV1Z6TG14bGJtZDBhQ0F0SURGZExuUWdMU0F3TGpBeEtTQXZJSFJvYVhNdVpXeGxiUzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlN3Z01DazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RqRWdQU0IwYUdsekxuQXVjSFk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZeUlEMGdkR2hwY3k1d0xtZGxkRlpoYkhWbFFYUlVhVzFsS0NoMGFHbHpMbkF1WDJOaFkyaHBibWN1YkdGemRFWnlZVzFsSzNSb2FYTXVjQzV2Wm1aelpYUlVhVzFsSUMwZ01DNHdNU2tnTHlCMGFHbHpMbVZzWlcwdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlZKaGRHVXNJSFJvYVhNdWNDNXZabVp6WlhSVWFXMWxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5KdmRHRjBaU2d0VFdGMGFDNWhkR0Z1TWloMk1Wc3hYU0F0SUhZeVd6RmRMQ0IyTVZzd1hTQXRJSFl5V3pCZEtTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1SaGRHRXVjQzV6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWNDNTZLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTUwY21GdWMyeGhkR1VvZEdocGN5NXdlQzUyTENCMGFHbHpMbkI1TG5Zc0lDMTBhR2x6TG5CNkxuWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1MGNtRnVjMnhoZEdVb2RHaHBjeTV3ZUM1MkxDQjBhR2x6TG5CNUxuWXNJREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1MGNtRnVjMnhoZEdVb2RHaHBjeTV3TG5aYk1GMHNkR2hwY3k1d0xuWmJNVjBzTFhSb2FYTXVjQzUyV3pKZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1aeVlXMWxTV1FnUFNCMGFHbHpMbVZzWlcwdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlVsa08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjMlYwU1c1MlpYSjBaV1FvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBiblpsY25SbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhWFlnUFNCdVpYY2dUV0YwY21sNEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0YwYUdsekxtc3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVrWVhSaExuQXVjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGRpNTBjbUZ1YzJ4aGRHVW9kR2hwY3k1d2VDNTJMSFJvYVhNdWNIa3VkaXd0ZEdocGN5NXdlaTUyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFYWXVkSEpoYm5Oc1lYUmxLSFJvYVhNdWNDNTJXekJkTEhSb2FYTXVjQzUyV3pGZExDMTBhR2x6TG5BdWRsc3lYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxuSXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVhZdWNtOTBZWFJsS0MxMGFHbHpMbkl1ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtbDJMbkp2ZEdGMFpWZ29MWFJvYVhNdWNuZ3VkaWt1Y205MFlYUmxXU2d0ZEdocGN5NXllUzUyS1M1eWIzUmhkR1ZhS0hSb2FYTXVjbm91ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFYWXVjMk5oYkdVb2RHaHBjeTV6TG5aYk1GMHNkR2hwY3k1ekxuWmJNVjBzTVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbUVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFYWXVkSEpoYm5Oc1lYUmxLQzEwYUdsekxtRXVkbHN3WFN3dGRHaHBjeTVoTG5aYk1WMHNkR2hwY3k1aExuWmJNbDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmhkWFJ2VDNKcFpXNTBLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2ZG1GeUlIQnlaWFpRSUQwZ2RHaHBjeTVuWlhSV1lXeDFaVUYwVkdsdFpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJRlJ5WVc1elptOXliVkJ5YjNCbGNuUjVLR1ZzWlcwc1pHRjBZU3hoY25JcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcwZ1BTQmxiR1Z0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnlZVzFsU1dRZ1BTQXRNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSjNSeVlXNXpabTl5YlNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTWdQU0JiWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRaR1lnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a1lYUmhJRDBnWkdGMFlUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSV1lXeDFaU0E5SUhCeWIyTmxjM05MWlhsek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZ3Y0d4NVZHOU5ZWFJ5YVhnZ1BTQmhjSEJzZVZSdlRXRjBjbWw0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1ZG1WeWRHVmtJRDBnYzJWMFNXNTJaWEowWldRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZWFYwYjA5eWFXVnVkQ0E5SUdGMWRHOVBjbWxsYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaUE5SUc1bGR5Qk5ZWFJ5YVhnb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aR0YwWVM1d0xuTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdlQ0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLR1ZzWlcwc1pHRjBZUzV3TG5nc01Dd3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2VTQTlJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d0tHVnNaVzBzWkdGMFlTNXdMbmtzTUN3d0xIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aR0YwWVM1d0xub3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0hvZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWNDNTZMREFzTUN4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQWdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TEdSaGRHRXVjQ3d4TERBc2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvWkdGMFlTNXlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbklnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExDQmtZWFJoTG5Jc0lEQXNJR1JsWjFSdlVtRmtjeXdnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaGtZWFJoTG5KNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSjRJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9aV3hsYlN3Z1pHRjBZUzV5ZUN3Z01Dd2daR1ZuVkc5U1lXUnpMQ0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNua2dQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TENCa1lYUmhMbko1TENBd0xDQmtaV2RVYjFKaFpITXNJSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eWVpQTlJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d0tHVnNaVzBzSUdSaGRHRXVjbm9zSURBc0lHUmxaMVJ2VW1Ga2N5d2dkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG05eUlEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3dnWkdGMFlTNXZjaXdnTVN3Z1pHVm5WRzlTWVdSekxDQjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZjMmdnU1c1a2FXTmhkR1Z6SUdsMElHNWxaV1J6SUhSdklHSmxJR05oY0hCbFpDQmlaWFIzWldWdUlDMHhPREFnWVc1a0lERTRNRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXZjaTV6YUNBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvWkdGMFlTNXpheWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5ySUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTd2daR0YwWVM1emF5d2dNQ3dnWkdWblZHOVNZV1J6TENCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMkVnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExDQmtZWFJoTG5OaExDQXdMQ0JrWldkVWIxSmhaSE1zSUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR1JoZEdFdVlTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9aV3hsYlN4a1lYUmhMbUVzTVN3d0xIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0dSaGRHRXVjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG5Nc01Td3dMakF4TEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR1JoZEdFdWJ5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOGdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TEdSaGRHRXVieXd3TERBdU1ERXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbThnUFNCN2JXUm1PbVpoYkhObExIWTZNWDA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZWEp5TG5CMWMyZ29kR2hwY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVoS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVkSEpoYm5Oc1lYUmxLQzEwYUdsekxtRXVkbHN3WFN3dGRHaHBjeTVoTG5aYk1WMHNkR2hwY3k1aExuWmJNbDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NXpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWMyTmhiR1VvZEdocGN5NXpMblpiTUYwc2RHaHBjeTV6TG5aYk1WMHNkR2hwY3k1ekxuWmJNbDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NXpheWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuTnJaWGRHY205dFFYaHBjeWd0ZEdocGN5NXpheTUyTEhSb2FYTXVjMkV1ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbklwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNXliM1JoZEdVb0xYUm9hWE11Y2k1MktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV5YjNSaGRHVmFLQzEwYUdsekxuSjZMbllwTG5KdmRHRjBaVmtvZEdocGN5NXllUzUyS1M1eWIzUmhkR1ZZS0hSb2FYTXVjbmd1ZGlrdWNtOTBZWFJsV2lndGRHaHBjeTV2Y2k1Mld6SmRLUzV5YjNSaGRHVlpLSFJvYVhNdWIzSXVkbHN4WFNrdWNtOTBZWFJsV0NoMGFHbHpMbTl5TG5aYk1GMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMbkF1Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1pHRjBZUzV3TG5vcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuUnlZVzV6YkdGMFpTaDBhR2x6TG5CNExuWXNJSFJvYVhNdWNIa3VkaXdnTFhSb2FYTXVjSG91ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblJ5WVc1emJHRjBaU2gwYUdsekxuQjRMbllzSUhSb2FYTXVjSGt1ZGl3Z01DazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblJ5WVc1emJHRjBaU2gwYUdsekxuQXVkbHN3WFN4MGFHbHpMbkF1ZGxzeFhTd3RkR2hwY3k1d0xuWmJNbDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBhR2x6TENCY0luQnZjMmwwYVc5dVhDSXNJSHNnWjJWME9pQndiM05wZEdsdmJrZGxkSFJsY24wcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29kR2hwY3l3Z1hDSjRVRzl6YVhScGIyNWNJaXdnZXlCblpYUTZJSGhRYjNOcGRHbHZia2RsZEhSbGNuMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdocGN5d2dYQ0o1VUc5emFYUnBiMjVjSWl3Z2V5Qm5aWFE2SUhsUWIzTnBkR2x2YmtkbGRIUmxjbjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHaHBjeXdnWENKdmNtbGxiblJoZEdsdmJsd2lMQ0I3SUdkbGREb2diM0pwWlc1MFlYUnBiMjVIWlhSMFpYSjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJRndpWVc1amFHOXlVRzlwYm5SY0lpd2dleUJuWlhRNklHRnVZMmh2Y2tkbGRIUmxjbjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHaHBjeXdnWENKeWIzUmhkR2x2Ymx3aUxDQjdJR2RsZERvZ2NtOTBZWFJwYjI1SFpYUjBaWEo5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUZ3aWMyTmhiR1ZjSWl3Z2V5Qm5aWFE2SUhOallXeGxSMlYwZEdWeWZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2gwYUdsekxDQmNJbTl3WVdOcGRIbGNJaXdnZXlCblpYUTZJRzl3WVdOcGRIbEhaWFIwWlhKOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lGd2ljMnRsZDF3aUxDQjdJR2RsZERvZ2MydGxkMGRsZEhSbGNuMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdocGN5d2dYQ0p6YTJWM1FYaHBjMXdpTENCN0lHZGxkRG9nYzJ0bGQwRjRhWE5IWlhSMFpYSjlLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOUtDa3BPMXh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdkbGRGQnliM0FvWld4bGJTeGtZWFJoTEhSNWNHVXNJRzExYkhRc0lHRnljaWtnZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFI1Y0dVZ1BUMDlJRElwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3SUQwZ2JtVjNJRlJ5WVc1elptOXliVkJ5YjNCbGNuUjVLR1ZzWlcwc0lHUmhkR0VzSUdGeWNpazdYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtS0dSaGRHRXVZU0E5UFQwZ01DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFI1Y0dVZ1BUMDlJREFwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQWdQU0J1WlhjZ1ZtRnNkV1ZRY205d1pYSjBlU2hsYkdWdExHUmhkR0VzYlhWc2RDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndJRDBnYm1WM0lFMTFiSFJwUkdsdFpXNXphVzl1WVd4UWNtOXdaWEowZVNobGJHVnRMR1JoZEdFc0lHMTFiSFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtHUmhkR0V1WVNBOVBUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSNWNHVWdQVDA5SURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEFnUFNCdVpYY2dTMlY1Wm5KaGJXVmtWbUZzZFdWUWNtOXdaWEowZVNobGJHVnRMR1JoZEdFc2JYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3SUQwZ2JtVjNJRXRsZVdaeVlXMWxaRTExYkhScFpHbHRaVzV6YVc5dVlXeFFjbTl3WlhKMGVTaGxiR1Z0TEdSaGRHRXNJRzExYkhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1LQ0ZrWVhSaExtc3ViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NDQTlJRzVsZHlCV1lXeDFaVkJ5YjNCbGNuUjVLR1ZzWlcwc1pHRjBZU3dnYlhWc2RDazdYSEpjYmlBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvZEhsd1pXOW1LR1JoZEdFdWExc3dYU2tnUFQwOUlDZHVkVzFpWlhJbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NDQTlJRzVsZHlCTmRXeDBhVVJwYldWdWMybHZibUZzVUhKdmNHVnlkSGtvWld4bGJTeGtZWFJoTENCdGRXeDBLVHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tIUjVjR1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F3T2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEFnUFNCdVpYY2dTMlY1Wm5KaGJXVmtWbUZzZFdWUWNtOXdaWEowZVNobGJHVnRMR1JoZEdFc2JYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0NBOUlHNWxkeUJMWlhsbWNtRnRaV1JOZFd4MGFXUnBiV1Z1YzJsdmJtRnNVSEp2Y0dWeWRIa29aV3hsYlN4a1lYUmhMRzExYkhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LSEF1YXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNpNXdkWE5vS0hBcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjJZWElnWjJWMFIzSmhaR2xsYm5SUWNtOXdJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdkbGRGWmhiSFZsS0dadmNtTmxVbVZ1WkdWeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d0xtZGxkRlpoYkhWbEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTIxa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTl0WkdZZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV3Y205d0xtMWtaaUI4ZkNCbWIzSmpaVkpsYm1SbGNpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVrWVhSaExuQXFORHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnRkV3gwTENCMllXdzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzExYkhRZ1BTQnBKVFFnUFQwOUlEQWdQeUF4TURBZ09pQXlOVFU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzSUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5CeWIzQXVkbHRwWFNwdGRXeDBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtTmJhVjBnSVQwOUlIWmhiQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMXRwWFNBOUlIWmhiRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG04dWJHVnVaM1JvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlc0Z1BTQjBhR2x6TG5CeWIzQXVkaTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5ZEdocGN5NWtZWFJoTG5BcU5EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlhWc2RDQTlJR2tsTWlBOVBUMGdNQ0EvSURFd01DQTZJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJDQTlJR2tsTWlBOVBUMGdNQ0EvSUNCTllYUm9Mbkp2ZFc1a0tIUm9hWE11Y0hKdmNDNTJXMmxkS2pFd01DazZkR2hwY3k1d2NtOXdMblpiYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWIxdHBMWFJvYVhNdVpHRjBZUzV3S2pSZElDRTlQU0IyWVd3cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXZXMmt0ZEdocGN5NWtZWFJoTG5BcU5GMGdQU0IyWVd3N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOXRaR1lnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaM0poWkdsbGJuUlFjbTl3S0dWc1pXMHNaR0YwWVN4aGNuSXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIzQWdQU0JuWlhSUWNtOXdLR1ZzWlcwc1pHRjBZUzVyTERFc2JuVnNiQ3hiWFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaR0YwWVNBOUlHUmhkR0U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWF5QTlJSFJvYVhNdWNISnZjQzVyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTWdQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZaR0YwWVM1d0tqUjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdOTVpXNW5kR2dnUFNCa1lYUmhMbXN1YTFzd1hTNXpJRDhnS0dSaGRHRXVheTVyV3pCZExuTXViR1Z1WjNSb0lDMGdaR0YwWVM1d0tqUXBJRG9nWkdGMFlTNXJMbXN1YkdWdVozUm9JQzBnWkdGMFlTNXdLalE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJ5QTlJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NlMnhsYm1kMGFEcGpUR1Z1WjNSb2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTIxa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTl0WkdZZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5aWFJXWVd4MVpTQTlJR2RsZEZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxuQnliM0F1YXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjbkl1Y0hWemFDaDBhR2x6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbEtIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUdkbGRFZHlZV1JwWlc1MFVISnZjQ2hsYkdWdExHUmhkR0VzWVhKeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qm5jbUZrYVdWdWRGQnliM0FvWld4bGJTeGtZWFJoTEdGeWNpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlNncEtUdGNjbHh1WEhKY2JseHlYRzVjY2x4dVhISmNiaUFnSUNCMllYSWdSR0Z6YUZCeWIzQmxjblI1SUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIQnliMk5sYzNOTFpYbHpLR1p2Y21ObFVtVnVaR1Z5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa2dQU0F3TENCc1pXNGdQU0IwYUdsekxtUmhkR0ZRY205d2N5NXNaVzVuZEdnN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtVnNaVzB1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVWxrSUQwOVBTQjBhR2x6TG1aeVlXMWxTV1FnSmlZZ0lXWnZjbU5sVW1WdVpHVnlLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVp5WVcxbFNXUWdQU0IwYUdsekxtVnNaVzB1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVWxrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTaHBQR3hsYmlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtUmhkR0ZRY205d2MxdHBYUzV3TG0xa1ppbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WkdZZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNzOU1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG0xa1ppQjhmQ0JtYjNKalpWSmxibVJsY2lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxuSmxibVJsY21WeUlEMDlQU0FuYzNabkp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkdGemFHRnljbUY1SUQwZ0p5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WkdGMFlWQnliM0J6VzJsZExtNGdJVDBnSjI4bktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NXlaVzVrWlhKbGNpQTlQVDBnSjNOMlp5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkdGemFHRnljbUY1SUNzOUlDY2dKeUFySUhSb2FYTXVaR0YwWVZCeWIzQnpXMmxkTG5BdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtUmhjMmhoY25KaGVWdHBYU0E5SUhSb2FYTXVaR0YwWVZCeWIzQnpXMmxkTG5BdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVJoYzJodlptWnpaWFFnUFNCMGFHbHpMbVJoZEdGUWNtOXdjMXRwWFM1d0xuWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNG9aV3hsYlN3Z1pHRjBZU3h5Wlc1a1pYSmxjaXdnWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzBnUFNCbGJHVnRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1aeVlXMWxTV1FnUFNBdE1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrWVhSaFVISnZjSE1nUFNCdVpYY2dRWEp5WVhrb1pHRjBZUzVzWlc1bmRHZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxjbVZ5SUQwZ2NtVnVaR1Z5WlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWF5QTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG5KbGJtUmxjbVZ5SUQwOVBTQW5jM1puSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1SaGMyaGhjbkpoZVNBOUlDY25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtUmhjMmhoY25KaGVTQTlJRzVsZHlCQmNuSmhlU2hrWVhSaExteGxibWQwYUNBdElERXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkdGemFHOW1abk5sZENBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0JrWVhSaExteGxibWQwYUN3Z2NISnZjRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeWIzQWdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TEdSaGRHRmJhVjB1ZGl3d0xDQXdMQ0JrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbXNnUFNCd2NtOXdMbXNnUHlCMGNuVmxJRG9nZEdocGN5NXJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtZWFJoVUhKdmNITmJhVjBnUFNCN2JqcGtZWFJoVzJsZExtNHNjRHB3Y205d2ZUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEZaaGJIVmxJRDBnY0hKdlkyVnpjMHRsZVhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11YXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtlVzVoYldsalVISnZjR1Z5ZEdsbGN5NXdkWE5vS0hSb2FYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJWMFZtRnNkV1VvZEhKMVpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTZ3BLVHRjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCblpYUkVZWE5vVUhKdmNDaGxiR1Z0TENCa1lYUmhMSEpsYm1SbGNtVnlMQ0JrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dSR0Z6YUZCeWIzQmxjblI1S0dWc1pXMHNJR1JoZEdFc2NtVnVaR1Z5WlhJc0lHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlGUmxlSFJUWld4bFkzUnZjbEJ5YjNBZ1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiV0Y0SUQwZ1RXRjBhQzV0WVhnN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUcxcGJpQTlJRTFoZEdndWJXbHVPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQm1iRzl2Y2lBOUlFMWhkR2d1Wm14dmIzSTdYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZFhCa1lYUmxVbUZ1WjJVb2JtVjNRMmhoY25OR2JHRm5LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0J1WlhkRGFHRnljMFpzWVdjZ2ZId2dabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE11YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGMxdHBYUzVuWlhSV1lXeDFaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTmJhVjB1YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkRzkwWVd4RGFHRnljeUE5SUhSb2FYTXVaV3hsYlM1MFpYaDBVSEp2Y0dWeWRIa3VZM1Z5Y21WdWRFUmhkR0VnUHlCMGFHbHpMbVZzWlcwdWRHVjRkRkJ5YjNCbGNuUjVMbU4xY25KbGJuUkVZWFJoTG13dWJHVnVaM1JvSURvZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ibVYzUTJoaGNuTkdiR0ZuSUNZbUlIUm9hWE11WkdGMFlTNXlJRDA5UFNBeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtVXVkaUE5SUhSdmRHRnNRMmhoY25NN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUnBkbWx6YjNJZ1BTQjBhR2x6TG1SaGRHRXVjaUE5UFQwZ01pQS9JREVnT2lBeE1EQWdMeUIwYjNSaGJFTm9ZWEp6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2J5QTlJSFJvYVhNdWJ5NTJMMlJwZG1semIzSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ6SUQwZ2RHaHBjeTV6TG5ZdlpHbDJhWE52Y2lBcklHODdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJsSUQwZ0tIUm9hWE11WlM1MkwyUnBkbWx6YjNJcElDc2dienRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvY3o1bEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCZmN5QTlJSE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeklEMGdaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BTQmZjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1acGJtRnNVeUE5SUhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabWx1WVd4RklEMGdaVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdkbGRFMTFiSFFvYVc1a0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OTJZWElnWldGelpYSWdQU0JpWlhvdVoyVjBSV0Z6YVc1blEzVnlkbVVvZEdocGN5NXVaUzUyTHpFd01Dd3dMREV0ZEdocGN5NTRaUzUyTHpFd01Dd3hLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdWaGMyVnlJRDBnUW1WNmFXVnlSbUZqZEc5eWVTNW5aWFJDWlhwcFpYSkZZWE5wYm1jb2RHaHBjeTV1WlM1Mkx6RXdNQ3d3TERFdGRHaHBjeTU0WlM1Mkx6RXdNQ3d4S1M1blpYUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ0ZFd4MElEMGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhNZ1BTQjBhR2x6TG1acGJtRnNVenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdVZ1BTQjBhR2x6TG1acGJtRnNSVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhSNWNHVWdQU0IwYUdsekxtUmhkR0V1YzJnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUjVjR1VnUFQwZ01pbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlobElEMDlQU0J6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdhVzVrSUQ0OUlHVWdQeUF4SURvZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxMWJIUWdQU0J0WVhnb01DeHRhVzRvTUM0MUx5aGxMWE1wSUNzZ0tHbHVaQzF6S1M4b1pTMXpLU3d4S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdaV0Z6WlhJb2JYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObElHbG1LSFI1Y0dVZ1BUMGdNeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGxJRDA5UFNCektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGRXeDBJRDBnYVc1a0lENDlJR1VnUHlBd0lEb2dNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMTFiSFFnUFNBeElDMGdiV0Y0S0RBc2JXbHVLREF1TlM4b1pTMXpLU0FySUNocGJtUXRjeWt2S0dVdGN5a3NNU2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxMWJIUWdQU0JsWVhObGNpaHRkV3gwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvZEhsd1pTQTlQU0EwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR1VnUFQwOUlITXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMTFiSFFnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlhWc2RDQTlJRzFoZUNnd0xHMXBiaWd3TGpVdktHVXRjeWtnS3lBb2FXNWtMWE1wTHlobExYTXBMREVwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodGRXeDBQQzQxS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JYVnNkQ0FxUFNBeU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdNU0F0SURJcUtHMTFiSFF0TUM0MUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdaV0Z6WlhJb2JYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObElHbG1LSFI1Y0dVZ1BUMGdOU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGxJRDA5UFNCektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGRXeDBJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMGIzUWdQU0JsSUMwZ2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkttbHVaQ0FyUFNBd0xqVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JYVnNkQ0E5SUMwMEx5aDBiM1FxZEc5MEtTb29hVzVrS21sdVpDa3JLRFF2ZEc5MEtTcHBibVE3S2k5Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1RZ1BTQnRhVzRvYldGNEtEQXNhVzVrS3pBdU5TMXpLU3hsTFhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQjRJRDBnTFhSdmRDOHlLMmx1WkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1lTQTlJSFJ2ZEM4eU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxMWJIUWdQU0JOWVhSb0xuTnhjblFvTVNBdElDaDRLbmdwTHloaEttRXBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMTFiSFFnUFNCbFlYTmxjaWh0ZFd4MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb2RIbHdaU0E5UFNBMktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dVZ1BUMDlJSE1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzExYkhRZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtJRDBnYldsdUtHMWhlQ2d3TEdsdVpDc3dMalV0Y3lrc1pTMXpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRkV3gwSUQwZ0tERXJLRTFoZEdndVkyOXpLQ2hOWVhSb0xsQkpLMDFoZEdndVVFa3FNaW9vYVc1a0tTOG9aUzF6S1NrcEtTa3ZNanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZLbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVFnUFNCTllYUm9MbTFwYmloTllYUm9MbTFoZUNoekxHbHVaQ2tzWlMweEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JYVnNkQ0E5SUNneEt5aE5ZWFJvTG1OdmN5Z29UV0YwYUM1UVNTdE5ZWFJvTGxCSktqSXFLR2x1WkMxektTOG9aUzB4TFhNcEtTa3BLUzh5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdUV0YwYUM1dFlYZ29iWFZzZEN3b01TOG9aUzB4TFhNcEtTOG9aUzB4TFhNcEtUc3FMMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JYVnNkQ0E5SUdWaGMyVnlLRzExYkhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHBibVFnUGowZ1pteHZiM0lvY3lrcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHbHVaQzF6SUR3Z01DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzExYkhRZ1BTQXhJQzBnS0hNZ0xTQnBibVFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRkV3gwSUQwZ2JXRjRLREFzYldsdUtHVXRhVzVrTERFcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0ZFd4MElEMGdaV0Z6WlhJb2JYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMTFiSFFxZEdocGN5NWhMblk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnVkdWNGRGTmxiR1ZqZEc5eVVISnZjQ2hsYkdWdExHUmhkR0VzSUdGeWNpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldSbUlEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVheUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1SaGRHRWdQU0JrWVhSaE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpJRDBnVzEwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IxY0dSaGRHVlNZVzVuWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5aWFJOZFd4MElEMGdaMlYwVFhWc2REdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdElEMGdaV3hsYlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiMjF3SUQwZ1pXeGxiUzVqYjIxd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1V5QTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHVZV3hGSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG5NZ2ZId2dlMnM2TUgwc01Dd3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ25aU2NnYVc0Z1pHRjBZU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVVnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExHUmhkR0V1WlN3d0xEQXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxJRDBnZTNZNk1UQXdmVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG04Z1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWJ5QjhmQ0I3YXpvd2ZTd3dMREFzZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZUdVZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWVHVWdmSHdnZTJzNk1IMHNNQ3d3TEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG01bElEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExtNWxJSHg4SUh0ck9qQjlMREFzTUN4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aElEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExtRXNNQ3d3TGpBeExIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoY25JdWNIVnphQ2gwYUdsektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEZaaGJIVmxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOUtDa3BPMXh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdkbGRGUmxlSFJUWld4bFkzUnZjbEJ5YjNBb1pXeGxiU3dnWkdGMFlTeGhjbklwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRlJsZUhSVFpXeGxZM1J2Y2xCeWIzQW9aV3hsYlN3Z1pHRjBZU3dnWVhKeUtUdGNjbHh1SUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHOWlJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lHZGxkRkJ5YjNBNklHZGxkRkJ5YjNBc1hISmNiaUFnSUNBZ0lDQWdaMlYwUkdGemFGQnliM0E2SUdkbGRFUmhjMmhRY205d0xGeHlYRzRnSUNBZ0lDQWdJR2RsZEZSbGVIUlRaV3hsWTNSdmNsQnliM0E2SUdkbGRGUmxlSFJUWld4bFkzUnZjbEJ5YjNBc1hISmNiaUFnSUNBZ0lDQWdaMlYwUjNKaFpHbGxiblJRY205d09pQm5aWFJIY21Ga2FXVnVkRkJ5YjNCY2NseHVJQ0FnSUgwN1hISmNiaUFnSUNCeVpYUjFjbTRnYjJJN1hISmNibjBvS1NrN1hHNW1kVzVqZEdsdmJpQlRhR0Z3WlZCaGRHZ29LWHRjY2x4dVhIUjBhR2x6TG1NZ1BTQm1ZV3h6WlR0Y2NseHVYSFIwYUdsekxsOXNaVzVuZEdnZ1BTQXdPMXh5WEc1Y2RIUm9hWE11WDIxaGVFeGxibWQwYUNBOUlEZzdYSEpjYmx4MGRHaHBjeTUySUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN4N2JHVnVaM1JvT25Sb2FYTXVYMjFoZUV4bGJtZDBhSDBwTzF4eVhHNWNkSFJvYVhNdWJ5QTlJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NlMnhsYm1kMGFEcDBhR2x6TGw5dFlYaE1aVzVuZEdoOUtUdGNjbHh1WEhSMGFHbHpMbWtnUFNCQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2ZEdocGN5NWZiV0Y0VEdWdVozUm9mU2s3WEhKY2JuMDdYSEpjYmx4eVhHNVRhR0Z3WlZCaGRHZ3VjSEp2ZEc5MGVYQmxMbk5sZEZCaGRHaEVZWFJoSUQwZ1puVnVZM1JwYjI0b1kyeHZjMlZrTENCc1pXNHBJSHRjY2x4dVhIUjBhR2x6TG1NZ1BTQmpiRzl6WldRN1hISmNibHgwZEdocGN5NXpaWFJNWlc1bmRHZ29iR1Z1S1R0Y2NseHVYSFIyWVhJZ2FTQTlJREE3WEhKY2JseDBkMmhwYkdVb2FTQThJR3hsYmlsN1hISmNibHgwWEhSMGFHbHpMblpiYVYwZ1BTQndiMmx1ZEY5d2IyOXNMbTVsZDFCdmFXNTBLQ2s3WEhKY2JseDBYSFIwYUdsekxtOWJhVjBnUFNCd2IybHVkRjl3YjI5c0xtNWxkMUJ2YVc1MEtDazdYSEpjYmx4MFhIUjBhR2x6TG1sYmFWMGdQU0J3YjJsdWRGOXdiMjlzTG01bGQxQnZhVzUwS0NrN1hISmNibHgwWEhScElDczlJREU3WEhKY2JseDBmVnh5WEc1OU8xeHlYRzVjY2x4dVUyaGhjR1ZRWVhSb0xuQnliM1J2ZEhsd1pTNXpaWFJNWlc1bmRHZ2dQU0JtZFc1amRHbHZiaWhzWlc0cElIdGNjbHh1WEhSM2FHbHNaU2gwYUdsekxsOXRZWGhNWlc1bmRHZ2dQQ0JzWlc0cElIdGNjbHh1WEhSY2RIUm9hWE11Wkc5MVlteGxRWEp5WVhsTVpXNW5kR2dvS1R0Y2NseHVYSFI5WEhKY2JseDBkR2hwY3k1ZmJHVnVaM1JvSUQwZ2JHVnVPMXh5WEc1OVhISmNibHh5WEc1VGFHRndaVkJoZEdndWNISnZkRzkwZVhCbExtUnZkV0pzWlVGeWNtRjVUR1Z1WjNSb0lEMGdablZ1WTNScGIyNG9LU0I3WEhKY2JseDBkR2hwY3k1MklEMGdkR2hwY3k1MkxtTnZibU5oZENoQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2ZEdocGN5NWZiV0Y0VEdWdVozUm9mU2twWEhKY2JseDBkR2hwY3k1cElEMGdkR2hwY3k1cExtTnZibU5oZENoQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2ZEdocGN5NWZiV0Y0VEdWdVozUm9mU2twWEhKY2JseDBkR2hwY3k1dklEMGdkR2hwY3k1dkxtTnZibU5oZENoQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2ZEdocGN5NWZiV0Y0VEdWdVozUm9mU2twWEhKY2JseDBkR2hwY3k1ZmJXRjRUR1Z1WjNSb0lDbzlJREk3WEhKY2JuMDdYSEpjYmx4eVhHNVRhR0Z3WlZCaGRHZ3VjSEp2ZEc5MGVYQmxMbk5sZEZoWlFYUWdQU0JtZFc1amRHbHZiaWg0TENCNUxDQjBlWEJsTENCd2IzTXNJSEpsY0d4aFkyVXBJSHRjY2x4dVhIUjJZWElnWVhKeU8xeHlYRzVjZEhSb2FYTXVYMnhsYm1kMGFDQTlJRTFoZEdndWJXRjRLSFJvYVhNdVgyeGxibWQwYUN3Z2NHOXpJQ3NnTVNrN1hISmNibHgwYVdZb2RHaHBjeTVmYkdWdVozUm9JRDQ5SUhSb2FYTXVYMjFoZUV4bGJtZDBhQ2tnZTF4eVhHNWNkRngwZEdocGN5NWtiM1ZpYkdWQmNuSmhlVXhsYm1kMGFDZ3BPMXh5WEc1Y2RIMWNjbHh1WEhSemQybDBZMmdvZEhsd1pTbDdYSEpjYmx4MFhIUmpZWE5sSUNkMkp6cGNjbHh1WEhSY2RGeDBZWEp5SUQwZ2RHaHBjeTUyTzF4eVhHNWNkRngwWEhSaWNtVmhhenRjY2x4dVhIUmNkR05oYzJVZ0oya25PbHh5WEc1Y2RGeDBYSFJoY25JZ1BTQjBhR2x6TG1rN1hISmNibHgwWEhSY2RHSnlaV0ZyTzF4eVhHNWNkRngwWTJGelpTQW5ieWM2WEhKY2JseDBYSFJjZEdGeWNpQTlJSFJvYVhNdWJ6dGNjbHh1WEhSY2RGeDBZbkpsWVdzN1hISmNibHgwZlZ4eVhHNWNkR2xtS0NGaGNuSmJjRzl6WFNCOGZDQW9ZWEp5VzNCdmMxMGdKaVlnSVhKbGNHeGhZMlVwS1h0Y2NseHVYSFJjZEdGeWNsdHdiM05kSUQwZ2NHOXBiblJmY0c5dmJDNXVaWGRRYjJsdWRDZ3BPMXh5WEc1Y2RIMWNjbHh1WEhSaGNuSmJjRzl6WFZzd1hTQTlJSGc3WEhKY2JseDBZWEp5VzNCdmMxMWJNVjBnUFNCNU8xeHlYRzU5TzF4eVhHNWNjbHh1VTJoaGNHVlFZWFJvTG5CeWIzUnZkSGx3WlM1elpYUlVjbWx3YkdWQmRDQTlJR1oxYm1OMGFXOXVLSFpZTEhaWkxHOVlMRzlaTEdsWUxHbFpMSEJ2Y3l3Z2NtVndiR0ZqWlNrZ2UxeHlYRzVjZEhSb2FYTXVjMlYwV0ZsQmRDaDJXQ3gyV1N3bmRpY3NjRzl6TENCeVpYQnNZV05sS1R0Y2NseHVYSFIwYUdsekxuTmxkRmhaUVhRb2IxZ3NiMWtzSjI4bkxIQnZjeXdnY21Wd2JHRmpaU2s3WEhKY2JseDBkR2hwY3k1elpYUllXVUYwS0dsWUxHbFpMQ2RwSnl4d2IzTXNJSEpsY0d4aFkyVXBPMXh5WEc1OU8xeHVkbUZ5SUZOb1lYQmxVSEp2Y0dWeWRIbEdZV04wYjNKNUlEMGdLR1oxYm1OMGFXOXVLQ2w3WEhKY2JseHlYRzRnSUNBZ2RtRnlJR2x1YVhSR2NtRnRaU0E5SUMwNU9UazVPVGs3WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2FXNTBaWEp3YjJ4aGRHVlRhR0Z3WlNobWNtRnRaVTUxYlN3Z2FYUmxjbUYwYVc5dVNXNWtaWGdzSUhCeVpYWnBiM1Z6Vm1Gc2RXVXNJR2x6UTNWeWNtVnVkRkpsYm1SbGNpa2dlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnJaWGxRY205d1V5eHJaWGxRY205d1JTeHBjMGh2YkdRN1hISmNiaUFnSUNBZ0lDQWdhV1lvWm5KaGJXVk9kVzBnUENCMGFHbHpMbXRsZVdaeVlXMWxjMXN3WFM1MExYUm9hWE11YjJabWMyVjBWR2x0WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd0bGVWQnliM0JUSUQwZ2RHaHBjeTVyWlhsbWNtRnRaWE5iTUYwdWMxc3dYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhWE5JYjJ4a0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGNtRjBhVzl1U1c1a1pYZ2dQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtHWnlZVzFsVG5WdElENDlJSFJvYVhNdWEyVjVabkpoYldWelczUm9hWE11YTJWNVpuSmhiV1Z6TG14bGJtZDBhQ0F0SURGZExuUXRkR2hwY3k1dlptWnpaWFJVYVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1clpYbG1jbUZ0WlhOYmRHaHBjeTVyWlhsbWNtRnRaWE11YkdWdVozUm9JQzBnTWwwdWFDQTlQVDBnTVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnJaWGxRY205d1V5QTlJSFJvYVhNdWEyVjVabkpoYldWelczUm9hWE11YTJWNVpuSmhiV1Z6TG14bGJtZDBhQ0F0SURGZExuTmJNRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhMlY1VUhKdmNGTWdQU0IwYUdsekxtdGxlV1p5WVcxbGMxdDBhR2x6TG10bGVXWnlZVzFsY3k1c1pXNW5kR2dnTFNBeVhTNWxXekJkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x6U0c5c1pDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBJRDBnYVhSbGNtRjBhVzl1U1c1a1pYZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJzWlc0Z1BTQjBhR2x6TG10bGVXWnlZVzFsY3k1c1pXNW5kR2d0SURFc1pteGhaeUE5SUhSeWRXVXNhMlY1UkdGMFlTeHVaWGgwUzJWNVJHRjBZU3dnYWl3Z2FreGxiaXdnYXl3Z2EweGxianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwYkdVb1pteGhaeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYbEVZWFJoSUQwZ2RHaHBjeTVyWlhsbWNtRnRaWE5iYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGgwUzJWNVJHRjBZU0E5SUhSb2FYTXVhMlY1Wm5KaGJXVnpXMmtyTVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWdvYm1WNGRFdGxlVVJoZEdFdWRDQXRJSFJvYVhNdWIyWm1jMlYwVkdsdFpTa2dQaUJtY21GdFpVNTFiU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlocElEd2diR1Z1SUMwZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabXhoWnlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdselNHOXNaQ0E5SUd0bGVVUmhkR0V1YUNBOVBUMGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhWFJsY21GMGFXOXVTVzVrWlhnZ1BTQnBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQmxjbU03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGcGMwaHZiR1FwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9abkpoYldWT2RXMGdQajBnYm1WNGRFdGxlVVJoZEdFdWRDMTBhR2x6TG05bVpuTmxkRlJwYldVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGNtTWdQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb1puSmhiV1ZPZFcwZ1BDQnJaWGxFWVhSaExuUXRkR2hwY3k1dlptWnpaWFJVYVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1pYSmpJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCbWJtTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9hMlY1UkdGMFlTNWZYMlp1WTNRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ibU1nUFNCclpYbEVZWFJoTGw5ZlptNWpkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptNWpJRDBnUW1WNmFXVnlSbUZqZEc5eWVTNW5aWFJDWlhwcFpYSkZZWE5wYm1jb2EyVjVSR0YwWVM1dkxuZ3NhMlY1UkdGMFlTNXZMbmtzYTJWNVJHRjBZUzVwTG5nc2EyVjVSR0YwWVM1cExua3BMbWRsZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2EyVjVSR0YwWVM1ZlgyWnVZM1FnUFNCbWJtTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGNtTWdQU0JtYm1Nb0tHWnlZVzFsVG5WdExTaHJaWGxFWVhSaExuUXRkR2hwY3k1dlptWnpaWFJVYVcxbEtTa3ZLQ2h1WlhoMFMyVjVSR0YwWVM1MExYUm9hWE11YjJabWMyVjBWR2x0WlNrdEtHdGxlVVJoZEdFdWRDMTBhR2x6TG05bVpuTmxkRlJwYldVcEtTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYbFFjbTl3UlNBOUlHdGxlVVJoZEdFdVpWc3dYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnJaWGxRY205d1V5QTlJR3RsZVVSaGRHRXVjMXN3WFR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYWt4bGJpQTlJSEJ5WlhacGIzVnpWbUZzZFdVdVgyeGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQnJUR1Z1SUQwZ2EyVjVVSEp2Y0ZNdWFWc3dYUzVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHaGhjMDF2WkdsbWFXVmtJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIWmxjblJsZUZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHFQVEE3YWp4cVRHVnVPMm9yUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hejB3TzJzOGEweGxianRyS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dselNHOXNaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFZtRnNkV1VnUFNCclpYbFFjbTl3VXk1cFcycGRXMnRkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hCeVpYWnBiM1Z6Vm1Gc2RXVXVhVnRxWFZ0clhTQWhQVDBnZG1WeWRHVjRWbUZzZFdVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbVYyYVc5MWMxWmhiSFZsTG1sYmFsMWJhMTBnUFNCMlpYSjBaWGhXWVd4MVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYVhORGRYSnlaVzUwVW1WdVpHVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CMkxtbGJhbDFiYTEwZ1BTQjJaWEowWlhoV1lXeDFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lYTk5iMlJwWm1sbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGWmhiSFZsSUQwZ2EyVjVVSEp2Y0ZNdWIxdHFYVnRyWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlod2NtVjJhVzkxYzFaaGJIVmxMbTliYWwxYmExMGdJVDA5SUhabGNuUmxlRlpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsZG1sdmRYTldZV3gxWlM1dlcycGRXMnRkSUQwZ2RtVnlkR1Y0Vm1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dselEzVnljbVZ1ZEZKbGJtUmxjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2RpNXZXMnBkVzJ0ZElEMGdkbVZ5ZEdWNFZtRnNkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnpUVzlrYVdacFpXUWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFdZV3gxWlNBOUlHdGxlVkJ5YjNCVExuWmJhbDFiYTEwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2NISmxkbWx2ZFhOV1lXeDFaUzUyVzJwZFcydGRJQ0U5UFNCMlpYSjBaWGhXWVd4MVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5WlhacGIzVnpWbUZzZFdVdWRsdHFYVnRyWFNBOUlIWmxjblJsZUZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlocGMwTjFjbkpsYm5SU1pXNWtaWElwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNIWXVkbHRxWFZ0clhTQTlJSFpsY25SbGVGWmhiSFZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGhjMDF2WkdsbWFXVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFdZV3gxWlNBOUlHdGxlVkJ5YjNCVExtbGJhbDFiYTEwcktHdGxlVkJ5YjNCRkxtbGJhbDFiYTEwdGEyVjVVSEp2Y0ZNdWFWdHFYVnRyWFNrcWNHVnlZenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh3Y21WMmFXOTFjMVpoYkhWbExtbGJhbDFiYTEwZ0lUMDlJSFpsY25SbGVGWmhiSFZsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISmxkbWx2ZFhOV1lXeDFaUzVwVzJwZFcydGRJRDBnZG1WeWRHVjRWbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR2x6UTNWeWNtVnVkRkpsYm1SbGNpa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3ZGk1cFcycGRXMnRkSUQwZ2RtVnlkR1Y0Vm1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdGelRXOWthV1pwWldRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoV1lXeDFaU0E5SUd0bGVWQnliM0JUTG05YmFsMWJhMTByS0d0bGVWQnliM0JGTG05YmFsMWJhMTB0YTJWNVVISnZjRk11YjF0cVhWdHJYU2txY0dWeVl6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHdjbVYyYVc5MWMxWmhiSFZsTG05YmFsMWJhMTBnSVQwOUlIWmxjblJsZUZaaGJIVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGRtbHZkWE5XWVd4MVpTNXZXMnBkVzJ0ZElEMGdkbVZ5ZEdWNFZtRnNkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHbHpRM1Z5Y21WdWRGSmxibVJsY2lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdkaTV2VzJwZFcydGRJRDBnZG1WeWRHVjRWbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR0Z6VFc5a2FXWnBaV1FnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhXWVd4MVpTQTlJR3RsZVZCeWIzQlRMblpiYWwxYmExMHJLR3RsZVZCeWIzQkZMblpiYWwxYmExMHRhMlY1VUhKdmNGTXVkbHRxWFZ0clhTa3FjR1Z5WXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlod2NtVjJhVzkxYzFaaGJIVmxMblpiYWwxYmExMGdJVDA5SUhabGNuUmxlRlpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsZG1sdmRYTldZV3gxWlM1MlcycGRXMnRkSUQwZ2RtVnlkR1Y0Vm1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dselEzVnljbVZ1ZEZKbGJtUmxjaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2RpNTJXMnBkVzJ0ZElEMGdkbVZ5ZEdWNFZtRnNkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnpUVzlrYVdacFpXUWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaG9ZWE5OYjJScFptbGxaQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y21WMmFXOTFjMVpoYkhWbExtTWdQU0JyWlhsUWNtOXdVeTVqTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBkR1Z5WVhScGIyNUpibVJsZURvZ2FYUmxjbUYwYVc5dVNXNWtaWGdzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2hoYzAxdlpHbG1hV1ZrT2lCb1lYTk5iMlJwWm1sbFpGeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCcGJuUmxjbkJ2YkdGMFpWTm9ZWEJsUTNWeWNtVnVkRlJwYldVb0tYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVZzWlcwdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlVsa0lEMDlQU0IwYUdsekxtWnlZVzFsU1dRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXUm1JRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHWnlZVzFsVG5WdElEMGdkR2hwY3k1amIyMXdMbkpsYm1SbGNtVmtSbkpoYldVZ0xTQjBhR2x6TG05bVpuTmxkRlJwYldVN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdsdWFYUlVhVzFsSUQwZ2RHaHBjeTVyWlhsbWNtRnRaWE5iTUYwdWRDQXRJSFJvYVhNdWIyWm1jMlYwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1pXNWtWR2x0WlNBOUlIUm9hWE11YTJWNVpuSmhiV1Z6VzNSb2FYTXVhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDQXRJREZkTG5RZ0xTQjBhR2x6TG05bVpuTmxkRlJwYldVN1hISmNiaUFnSUNBZ0lDQWdhV1lvSVNoMGFHbHpMbXhoYzNSR2NtRnRaU0FoUFQwZ2FXNXBkRVp5WVcxbElDWW1JQ2dvZEdocGN5NXNZWE4wUm5KaGJXVWdQQ0JwYm1sMFZHbHRaU0FtSmlCbWNtRnRaVTUxYlNBOElHbHVhWFJVYVcxbEtTQjhmQ0FvZEdocGN5NXNZWE4wUm5KaGJXVWdQaUJsYm1SVWFXMWxJQ1ltSUdaeVlXMWxUblZ0SUQ0Z1pXNWtWR2x0WlNrcEtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZMeTljY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrZ1BTQjBhR2x6TG14aGMzUkdjbUZ0WlNBOElHWnlZVzFsVG5WdElEOGdkR2hwY3k1ZmJHRnpkRWx1WkdWNElEb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhKbGJtUmxjbEpsYzNWc2RDQTlJSFJvYVhNdWFXNTBaWEp3YjJ4aGRHVlRhR0Z3WlNobWNtRnRaVTUxYlN3Z2FTd2dkR2hwY3k1MkxDQjBjblZsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4dkwxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlzWVhOMFNXNWtaWGdnUFNCeVpXNWtaWEpTWlhOMWJIUXVhWFJsY21GMGFXOXVTVzVrWlhnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ2NtVnVaR1Z5VW1WemRXeDBMbWhoYzAxdlpHbG1hV1ZrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloeVpXNWtaWEpTWlhOMWJIUXVhR0Z6VFc5a2FXWnBaV1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0dGMGFITWdQU0IwYUdsekxteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YkdGemRFWnlZVzFsSUQwZ1puSmhiV1ZPZFcwN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bWNtRnRaVWxrSUQwZ2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSVGFHRndaVlpoYkhWbEtDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRqdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ5WlhObGRGTm9ZWEJsS0NsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d1lYUm9jeUE5SUhSb2FYTXViRzlqWVd4VGFHRndaVU52Ykd4bFkzUnBiMjQ3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JWFJvYVhNdWF5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldSbUlEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUZOb1lYQmxVSEp2Y0dWeWRIa29aV3hsYlN3Z1pHRjBZU3dnZEhsd1pTbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWZYM05vWVhCbFQySnFaV04wSUQwZ01UdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiWEFnUFNCbGJHVnRMbU52YlhBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1cklEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NHRjBhRVJoZEdFZ1BTQjBlWEJsSUQwOVBTQXpJRDhnWkdGMFlTNXdkQzVySURvZ1pHRjBZUzVyY3k1ck8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRpQTlJSE5vWVhCbFgzQnZiMnd1WTJ4dmJtVW9jR0YwYUVSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSFlnUFNCemFHRndaVjl3YjI5c0xtTnNiMjVsS0hSb2FYTXVkaWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2YmlBOUlITm9ZWEJsUTI5c2JHVmpkR2x2Ymw5d2IyOXNMbTVsZDFOb1lYQmxRMjlzYkdWamRHbHZiaWdwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0dGMGFITWdQU0IwYUdsekxteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0YwYUhNdVlXUmtVMmhoY0dVb2RHaHBjeTUyS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyVjBJRDBnY21WelpYUlRhR0Z3WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUZOb1lYQmxVSEp2Y0dWeWRIa3VjSEp2ZEc5MGVYQmxMbWx1ZEdWeWNHOXNZWFJsVTJoaGNHVWdQU0JwYm5SbGNuQnZiR0YwWlZOb1lYQmxPMXh5WEc0Z0lDQWdVMmhoY0dWUWNtOXdaWEowZVM1d2NtOTBiM1I1Y0dVdVoyVjBWbUZzZFdVZ1BTQm5aWFJUYUdGd1pWWmhiSFZsTzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlFdGxlV1p5WVcxbFpGTm9ZWEJsVUhKdmNHVnlkSGtvWld4bGJTeGtZWFJoTEhSNWNHVXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMTl6YUdGd1pVOWlhbVZqZENBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjF3SUQwZ1pXeGxiUzVqYjIxd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiU0E5SUdWc1pXMDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZabVp6WlhSVWFXMWxJRDBnWld4bGJTNWtZWFJoTG5OME8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyeGhjM1JKYm1SbGVDQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVyWlhsbWNtRnRaWE1nUFNCMGVYQmxJRDA5UFNBeklEOGdaR0YwWVM1d2RDNXJJRG9nWkdGMFlTNXJjeTVyTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YXlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVyWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSFJvYVhNdWEyVjVabkpoYldWeld6QmRMbk5iTUYwdWFTNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdwTVpXNGdQU0IwYUdsekxtdGxlV1p5WVcxbGMxc3dYUzV6V3pCZExtbGJNRjB1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkaUE5SUhOb1lYQmxYM0J2YjJ3dWJtVjNVMmhoY0dVb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuWXVjMlYwVUdGMGFFUmhkR0VvZEdocGN5NXJaWGxtY21GdFpYTmJNRjB1YzFzd1hTNWpMQ0JzWlc0cE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIWWdQU0J6YUdGd1pWOXdiMjlzTG1Oc2IyNWxLSFJvYVhNdWRpazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZiaUE5SUhOb1lYQmxRMjlzYkdWamRHbHZibDl3YjI5c0xtNWxkMU5vWVhCbFEyOXNiR1ZqZEdsdmJpZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0YwYUhNZ1BTQjBhR2x6TG14dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHRjBhSE11WVdSa1UyaGhjR1VvZEdocGN5NTJLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXhoYzNSR2NtRnRaU0E5SUdsdWFYUkdjbUZ0WlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyVjBJRDBnY21WelpYUlRhR0Z3WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUV0bGVXWnlZVzFsWkZOb1lYQmxVSEp2Y0dWeWRIa3VjSEp2ZEc5MGVYQmxMbWRsZEZaaGJIVmxJRDBnYVc1MFpYSndiMnhoZEdWVGFHRndaVU4xY25KbGJuUlVhVzFsTzF4eVhHNGdJQ0FnUzJWNVpuSmhiV1ZrVTJoaGNHVlFjbTl3WlhKMGVTNXdjbTkwYjNSNWNHVXVhVzUwWlhKd2IyeGhkR1ZUYUdGd1pTQTlJR2x1ZEdWeWNHOXNZWFJsVTJoaGNHVTdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlFVnNiRk5vWVhCbFVISnZjR1Z5ZEhrZ1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUdOUWIybHVkQ0E5SUhKdmRXNWtRMjl5Ym1WeU8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCamIyNTJaWEowUld4c1ZHOVFZWFJvS0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQndNQ0E5SUhSb2FYTXVjQzUyV3pCZExDQndNU0E5SUhSb2FYTXVjQzUyV3pGZExDQnpNQ0E5SUhSb2FYTXVjeTUyV3pCZEx6SXNJSE14SUQwZ2RHaHBjeTV6TG5aYk1WMHZNanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWtJQ0U5UFNBektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNTJXekJkV3pCZElEMGdjREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1ZGxzd1hWc3hYU0E5SUhBeExYTXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblpiTVYxYk1GMGdQU0J3TUNBcklITXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblpiTVYxYk1WMGdQU0J3TVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1Mld6SmRXekJkSUQwZ2NEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVkbHN5WFZzeFhTQTlJSEF4SzNNeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuWmJNMTFiTUYwZ1BTQndNQ0F0SUhNd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuWmJNMTFiTVYwZ1BTQndNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTVwV3pCZFd6QmRJRDBnY0RBZ0xTQnpNQ3BqVUc5cGJuUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN3WFZzeFhTQTlJSEF4SUMwZ2N6RTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN4WFZzd1hTQTlJSEF3SUNzZ2N6QTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN4WFZzeFhTQTlJSEF4SUMwZ2N6RXFZMUJ2YVc1ME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxtbGJNbDFiTUYwZ1BTQndNQ0FySUhNd0ttTlFiMmx1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6SmRXekZkSUQwZ2NERWdLeUJ6TVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6TmRXekJkSUQwZ2NEQWdMU0J6TUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6TmRXekZkSUQwZ2NERWdLeUJ6TVNwalVHOXBiblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YjFzd1hWc3dYU0E5SUhBd0lDc2djekFxWTFCdmFXNTBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTUYxYk1WMGdQU0J3TVNBdElITXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTVYxYk1GMGdQU0J3TUNBcklITXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTVYxYk1WMGdQU0J3TVNBcklITXhLbU5RYjJsdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNXZXekpkV3pCZElEMGdjREFnTFNCek1DcGpVRzlwYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3lYVnN4WFNBOUlIQXhJQ3NnY3pFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3pYVnN3WFNBOUlIQXdJQzBnY3pBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3pYVnN4WFNBOUlIQXhJQzBnY3pFcVkxQnZhVzUwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNTJXekJkV3pCZElEMGdjREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1ZGxzd1hWc3hYU0E5SUhBeExYTXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblpiTVYxYk1GMGdQU0J3TUNBdElITXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMblpiTVYxYk1WMGdQU0J3TVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1Mld6SmRXekJkSUQwZ2NEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVkbHN5WFZzeFhTQTlJSEF4SzNNeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuWmJNMTFiTUYwZ1BTQndNQ0FySUhNd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuWmJNMTFiTVYwZ1BTQndNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTVwV3pCZFd6QmRJRDBnY0RBZ0t5QnpNQ3BqVUc5cGJuUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN3WFZzeFhTQTlJSEF4SUMwZ2N6RTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN4WFZzd1hTQTlJSEF3SUMwZ2N6QTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVhVnN4WFZzeFhTQTlJSEF4SUMwZ2N6RXFZMUJ2YVc1ME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxtbGJNbDFiTUYwZ1BTQndNQ0F0SUhNd0ttTlFiMmx1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6SmRXekZkSUQwZ2NERWdLeUJ6TVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6TmRXekJkSUQwZ2NEQWdLeUJ6TUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1cFd6TmRXekZkSUQwZ2NERWdLeUJ6TVNwalVHOXBiblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YjFzd1hWc3dYU0E5SUhBd0lDMGdjekFxWTFCdmFXNTBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTUYxYk1WMGdQU0J3TVNBdElITXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTVYxYk1GMGdQU0J3TUNBdElITXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbTliTVYxYk1WMGdQU0J3TVNBcklITXhLbU5RYjJsdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNXZXekpkV3pCZElEMGdjREFnS3lCek1DcGpVRzlwYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3lYVnN4WFNBOUlIQXhJQ3NnY3pFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3pYVnN3WFNBOUlIQXdJQ3NnY3pBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWIxc3pYVnN4WFNBOUlIQXhJQzBnY3pFcVkxQnZhVzUwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCd2NtOWpaWE56UzJWNWN5aG1jbUZ0WlU1MWJTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpDQTlQVDBnZEdocGN5NW1jbUZ0WlVsa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTFrWmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnlZVzFsU1dRZ1BTQjBhR2x6TG1Wc1pXMHVaMnh2WW1Gc1JHRjBZUzVtY21GdFpVbGtPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdVoyVjBWbUZzZFdVb1puSmhiV1ZPZFcwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGMxdHBYUzV0WkdZcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbTFrWmlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJuWmxjblJGYkd4VWIxQmhkR2dvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUVWc2JGTm9ZWEJsVUhKdmNHVnlkSGtvWld4bGJTeGtZWFJoS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4cWRHaHBjeTUySUQwZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkam9nUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PalI5S1N4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHazZJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NlMnhsYm1kMGFEbzBmU2tzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdk9pQkJjbkpoZVM1aGNIQnNlU2h1ZFd4c0xIdHNaVzVuZEdnNk5IMHBMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWXpvZ2RISjFaVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlPeW92WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpQTlJSE5vWVhCbFgzQnZiMnd1Ym1WM1UyaGhjR1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbk5sZEZCaGRHaEVZWFJoS0hSeWRXVXNJRFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVJRDBnYzJoaGNHVkRiMnhzWldOMGFXOXVYM0J2YjJ3dWJtVjNVMmhoY0dWRGIyeHNaV04wYVc5dUtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0dGMGFITWdQU0IwYUdsekxteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dUxtRmtaRk5vWVhCbEtIUm9hWE11ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaQ0E5SUdSaGRHRXVaRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMGdQU0JsYkdWdE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm5KaGJXVkpaQ0E5SUMweE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTFrWmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbElEMGdjSEp2WTJWemMwdGxlWE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkbVZ5ZEVWc2JGUnZVR0YwYUNBOUlHTnZiblpsY25SRmJHeFViMUJoZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6WlhRZ1BTQnlaWE5sZEZOb1lYQmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5BZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWNDd3hMREFzZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y3lBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0dWc1pXMHNaR0YwWVM1ekxERXNNQ3gwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3k1c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVySUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJuWmxjblJGYkd4VWIxQmhkR2dvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMG9LU2s3WEhKY2JseHlYRzRnSUNBZ2RtRnlJRk4wWVhKVGFHRndaVkJ5YjNCbGNuUjVJRDBnS0daMWJtTjBhVzl1S0NrZ2UxeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCamIyNTJaWEowVUc5c2VXZHZibFJ2VUdGMGFDZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm5WdFVIUnpJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbkIwTG5ZcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZVzVuYkdVZ1BTQk5ZWFJvTGxCSktqSXZiblZ0VUhSek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdktuUm9hWE11ZGk1MkxteGxibWQwYUNBOUlHNTFiVkIwY3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbWt1YkdWdVozUm9JRDBnYm5WdFVIUnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWJ5NXNaVzVuZEdnZ1BTQnVkVzFRZEhNN0tpOWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEpoWkNBOUlIUm9hWE11YjNJdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEp2ZFc1a2JtVnpjeUE5SUhSb2FYTXViM011ZGp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQmxjbWx0VTJWbmJXVnVkQ0E5SURJcVRXRjBhQzVRU1NweVlXUXZLRzUxYlZCMGN5bzBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lHTjFjbkpsYm5SQmJtY2dQU0F0VFdGMGFDNVFTUzhnTWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHUnBjaUE5SUhSb2FYTXVaR0YwWVM1a0lEMDlQU0F6SUQ4Z0xURWdPaUF4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqZFhKeVpXNTBRVzVuSUNzOUlIUm9hWE11Y2k1Mk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1WDJ4bGJtZDBhQ0E5SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4dWRXMVFkSE03YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2VDQTlJSEpoWkNBcUlFMWhkR2d1WTI5ektHTjFjbkpsYm5SQmJtY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIa2dQU0J5WVdRZ0tpQk5ZWFJvTG5OcGJpaGpkWEp5Wlc1MFFXNW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnZlQ0E5SUhnZ1BUMDlJREFnSmlZZ2VTQTlQVDBnTUNBL0lEQWdPaUI1TDAxaGRHZ3VjM0Z5ZENoNEtuZ2dLeUI1S25rcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUc5NUlEMGdlQ0E5UFQwZ01DQW1KaUI1SUQwOVBTQXdJRDhnTUNBNklDMTRMMDFoZEdndWMzRnlkQ2g0S25nZ0t5QjVLbmtwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQXJQU0FnS3lCMGFHbHpMbkF1ZGxzd1hUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtnS3owZ0lDc2dkR2hwY3k1d0xuWmJNVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YzJWMFZISnBjR3hsUVhRb2VDeDVMSGd0YjNncWNHVnlhVzFUWldkdFpXNTBLbkp2ZFc1a2JtVnpjeXBrYVhJc2VTMXZlU3B3WlhKcGJWTmxaMjFsYm5RcWNtOTFibVJ1WlhOekttUnBjaXg0SzI5NEtuQmxjbWx0VTJWbmJXVnVkQ3B5YjNWdVpHNWxjM01xWkdseUxIa3JiM2txY0dWeWFXMVRaV2R0Wlc1MEtuSnZkVzVrYm1WemN5cGthWElzSUdrc0lIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5cDBhR2x6TG5ZdWRsdHBYU0E5SUZ0NExIbGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbWxiYVYwZ1BTQmJlQ3R2ZUNwd1pYSnBiVk5sWjIxbGJuUXFjbTkxYm1SdVpYTnpLbVJwY2l4NUsyOTVLbkJsY21sdFUyVm5iV1Z1ZENweWIzVnVaRzVsYzNNcVpHbHlYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV2VzJsZElEMGdXM2d0YjNncWNHVnlhVzFUWldkdFpXNTBLbkp2ZFc1a2JtVnpjeXBrYVhJc2VTMXZlU3B3WlhKcGJWTmxaMjFsYm5RcWNtOTFibVJ1WlhOekttUnBjbDA3S2k5Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5SQmJtY2dLejBnWVc1bmJHVXFaR2x5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHRjBhSE11YkdWdVozUm9JRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdZWFJvYzFzd1hTQTlJSFJvYVhNdWRqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR052Ym5abGNuUlRkR0Z5Vkc5UVlYUm9LQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JuVnRVSFJ6SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5CMExuWXBLakk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCaGJtZHNaU0E5SUUxaGRHZ3VVRWtxTWk5dWRXMVFkSE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzhxZEdocGN5NTJMbll1YkdWdVozUm9JRDBnYm5WdFVIUnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWFTNXNaVzVuZEdnZ1BTQnVkVzFRZEhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV2TG14bGJtZDBhQ0E5SUc1MWJWQjBjenNxTDF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHOXVaMFpzWVdjZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHOXVaMUpoWkNBOUlIUm9hWE11YjNJdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSE5vYjNKMFVtRmtJRDBnZEdocGN5NXBjaTUyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHOXVaMUp2ZFc1a0lEMGdkR2hwY3k1dmN5NTJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYzJodmNuUlNiM1Z1WkNBOUlIUm9hWE11YVhNdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR3h2Ym1kUVpYSnBiVk5sWjIxbGJuUWdQU0F5S2sxaGRHZ3VVRWtxYkc5dVoxSmhaQzhvYm5WdFVIUnpLaklwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MyaHZjblJRWlhKcGJWTmxaMjFsYm5RZ1BTQXlLazFoZEdndVVFa3FjMmh2Y25SU1lXUXZLRzUxYlZCMGN5b3lLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lISmhaQ3h5YjNWdVpHNWxjM01zY0dWeWFXMVRaV2R0Wlc1MExDQmpkWEp5Wlc1MFFXNW5JRDBnTFUxaGRHZ3VVRWt2SURJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJCYm1jZ0t6MGdkR2hwY3k1eUxuWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrYVhJZ1BTQjBhR2x6TG1SaGRHRXVaQ0E5UFQwZ015QS9JQzB4SURvZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTGw5c1pXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJuVnRVSFJ6TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21Ga0lEMGdiRzl1WjBac1lXY2dQeUJzYjI1blVtRmtJRG9nYzJodmNuUlNZV1E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIzVnVaRzVsYzNNZ1BTQnNiMjVuUm14aFp5QS9JR3h2Ym1kU2IzVnVaQ0E2SUhOb2IzSjBVbTkxYm1RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndaWEpwYlZObFoyMWxiblFnUFNCc2IyNW5SbXhoWnlBL0lHeHZibWRRWlhKcGJWTmxaMjFsYm5RZ09pQnphRzl5ZEZCbGNtbHRVMlZuYldWdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCNElEMGdjbUZrSUNvZ1RXRjBhQzVqYjNNb1kzVnljbVZ1ZEVGdVp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2VTQTlJSEpoWkNBcUlFMWhkR2d1YzJsdUtHTjFjbkpsYm5SQmJtY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHOTRJRDBnZUNBOVBUMGdNQ0FtSmlCNUlEMDlQU0F3SUQ4Z01DQTZJSGt2VFdGMGFDNXpjWEowS0hncWVDQXJJSGtxZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYjNrZ1BTQjRJRDA5UFNBd0lDWW1JSGtnUFQwOUlEQWdQeUF3SURvZ0xYZ3ZUV0YwYUM1emNYSjBLSGdxZUNBcklIa3FlU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNElDczlJQ0FySUhSb2FYTXVjQzUyV3pCZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU0FyUFNBZ0t5QjBhR2x6TG5BdWRsc3hYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV6WlhSVWNtbHdiR1ZCZENoNExIa3NlQzF2ZUNwd1pYSnBiVk5sWjIxbGJuUXFjbTkxYm1SdVpYTnpLbVJwY2l4NUxXOTVLbkJsY21sdFUyVm5iV1Z1ZENweWIzVnVaRzVsYzNNcVpHbHlMSGdyYjNncWNHVnlhVzFUWldkdFpXNTBLbkp2ZFc1a2JtVnpjeXBrYVhJc2VTdHZlU3B3WlhKcGJWTmxaMjFsYm5RcWNtOTFibVJ1WlhOekttUnBjaXdnYVN3Z2RISjFaU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeXAwYUdsekxuWXVkbHRwWFNBOUlGdDRMSGxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG1sYmFWMGdQU0JiZUN0dmVDcHdaWEpwYlZObFoyMWxiblFxY205MWJtUnVaWE56S21ScGNpeDVLMjk1S25CbGNtbHRVMlZuYldWdWRDcHliM1Z1Wkc1bGMzTXFaR2x5WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1dlcybGRJRDBnVzNndGIzZ3FjR1Z5YVcxVFpXZHRaVzUwS25KdmRXNWtibVZ6Y3lwa2FYSXNlUzF2ZVNwd1pYSnBiVk5sWjIxbGJuUXFjbTkxYm1SdVpYTnpLbVJwY2wwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdVgyeGxibWQwYUNBOUlHNTFiVkIwY3pzcUwxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzl1WjBac1lXY2dQU0FoYkc5dVowWnNZV2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwUVc1bklDczlJR0Z1WjJ4bEttUnBjanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY0hKdlkyVnpjMHRsZVhNb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVpXeGxiUzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxTV1FnUFQwOUlIUm9hWE11Wm5KaGJXVkpaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtY21GdFpVbGtJRDBnZEdocGN5NWxiR1Z0TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZKWkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE11YkdWdVozUm9PMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdVoyVjBWbUZzZFdVb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTmJhVjB1YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTFrWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV0WkdZcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyNTJaWEowVkc5UVlYUm9LQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUJUZEdGeVUyaGhjR1ZRY205d1pYSjBlU2hsYkdWdExHUmhkR0VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHlwMGFHbHpMbllnUFNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJPaUJiWFN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHazZJRnRkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J6b2dXMTBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCak9pQjBjblZsWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDA3S2k5Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJJRDBnYzJoaGNHVmZjRzl2YkM1dVpYZFRhR0Z3WlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YzJWMFVHRjBhRVJoZEdFb2RISjFaU3dnTUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYlNBOUlHVnNaVzA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyOXRjQ0E5SUdWc1pXMHVZMjl0Y0R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtZWFJoSUQwZ1pHRjBZVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWNtRnRaVWxrSUQwZ0xURTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkNBOUlHUmhkR0V1WkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5QTlJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMWtaaUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRGWmhiSFZsSUQwZ2NISnZZMlZ6YzB0bGVYTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y21WelpYUWdQU0J5WlhObGRGTm9ZWEJsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloa1lYUmhMbk41SUQwOVBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhWElnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExHUmhkR0V1YVhJc01Dd3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGN5QTlJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d0tHVnNaVzBzWkdGMFlTNXBjeXd3TERBdU1ERXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJuWmxjblJVYjFCaGRHZ2dQU0JqYjI1MlpYSjBVM1JoY2xSdlVHRjBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkbVZ5ZEZSdlVHRjBhQ0E5SUdOdmJuWmxjblJRYjJ4NVoyOXVWRzlRWVhSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSFFnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExHUmhkR0V1Y0hRc01Dd3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkFnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2hsYkdWdExHUmhkR0V1Y0N3eExEQXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjaUE5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLR1ZzWlcwc1pHRjBZUzV5TERBc1pHVm5WRzlTWVdSekxIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOXlJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9aV3hsYlN4a1lYUmhMbTl5TERBc01DeDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXZjeUE5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLR1ZzWlcwc1pHRjBZUzV2Y3l3d0xEQXVNREVzZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ykc5allXeFRhR0Z3WlVOdmJHeGxZM1JwYjI0Z1BTQnphR0Z3WlVOdmJHeGxZM1JwYjI1ZmNHOXZiQzV1WlhkVGFHRndaVU52Ykd4bFkzUnBiMjRvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZiaTVoWkdSVGFHRndaU2gwYUdsekxuWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CaGRHaHpJRDBnZEdocGN5NXNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnZiblpsY25SVWIxQmhkR2dvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMG9LU2s3WEhKY2JseHlYRzRnSUNBZ2RtRnlJRkpsWTNSVGFHRndaVkJ5YjNCbGNuUjVJRDBnS0daMWJtTjBhVzl1S0NrZ2UxeHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSEJ5YjJObGMzTkxaWGx6S0daeVlXMWxUblZ0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpDQTlQVDBnZEdocGN5NW1jbUZ0WlVsa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTFrWmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnlZVzFsU1dRZ1BTQjBhR2x6TG1Wc1pXMHVaMnh2WW1Gc1JHRjBZUzVtY21GdFpVbGtPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5NXNaVzVuZEdnN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGMxdHBYUzVuWlhSV1lXeDFaU2htY21GdFpVNTFiU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6VzJsZExtMWtaaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWJXUm1LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMjl1ZG1WeWRGSmxZM1JVYjFCaGRHZ29LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTnZiblpsY25SU1pXTjBWRzlRWVhSb0tDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3TUNBOUlIUm9hWE11Y0M1Mld6QmRMQ0J3TVNBOUlIUm9hWE11Y0M1Mld6RmRMQ0IyTUNBOUlIUm9hWE11Y3k1Mld6QmRMeklzSUhZeElEMGdkR2hwY3k1ekxuWmJNVjB2TWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlISnZkVzVrSUQwZ1ltMWZiV2x1S0hZd0xIWXhMSFJvYVhNdWNpNTJLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdOUWIybHVkQ0E5SUhKdmRXNWtLaWd4TFhKdmRXNWtRMjl5Ym1WeUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTGw5c1pXNW5kR2dnUFNBd08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWtJRDA5UFNBeUlIeDhJSFJvYVhNdVpDQTlQVDBnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuTmxkRlJ5YVhCc1pVRjBLSEF3SzNZd0xDQndNUzEyTVN0eWIzVnVaQ3h3TUN0Mk1Dd2djREV0ZGpFcmNtOTFibVFzY0RBcmRqQXNjREV0ZGpFclkxQnZhVzUwTERBc0lIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5ObGRGUnlhWEJzWlVGMEtIQXdLM1l3TENCd01TdDJNUzF5YjNWdVpDeHdNQ3QyTUN3Z2NERXJkakV0WTFCdmFXNTBMSEF3SzNZd0xDQndNU3QyTVMxeWIzVnVaQ3d4TENCMGNuVmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtISnZkVzVrSVQwOUlEQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1elpYUlVjbWx3YkdWQmRDaHdNQ3QyTUMxeWIzVnVaQ3dnY0RFcmRqRXNjREFyZGpBdGNtOTFibVFzY0RFcmRqRXNjREFyZGpBdFkxQnZhVzUwTEhBeEszWXhMRElzSUhSeWRXVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1elpYUlVjbWx3YkdWQmRDaHdNQzEyTUN0eWIzVnVaQ3h3TVN0Mk1TeHdNQzEyTUN0alVHOXBiblFzY0RFcmRqRXNjREF0ZGpBcmNtOTFibVFzY0RFcmRqRXNNeXdnZEhKMVpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5ObGRGUnlhWEJzWlVGMEtIQXdMWFl3TEhBeEszWXhMWEp2ZFc1a0xIQXdMWFl3TEhBeEszWXhMWEp2ZFc1a0xIQXdMWFl3TEhBeEszWXhMV05RYjJsdWRDdzBMQ0IwY25WbEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YzJWMFZISnBjR3hsUVhRb2NEQXRkakFzY0RFdGRqRXJjbTkxYm1Rc2NEQXRkakFzY0RFdGRqRXJZMUJ2YVc1MExIQXdMWFl3TEhBeExYWXhLM0p2ZFc1a0xEVXNJSFJ5ZFdVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV6WlhSVWNtbHdiR1ZCZENod01DMTJNQ3R5YjNWdVpDeHdNUzEyTVN4d01DMTJNQ3R5YjNWdVpDeHdNUzEyTVN4d01DMTJNQ3RqVUc5cGJuUXNjREV0ZGpFc05pd2dkSEoxWlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbk5sZEZSeWFYQnNaVUYwS0hBd0szWXdMWEp2ZFc1a0xIQXhMWFl4TEhBd0szWXdMV05RYjJsdWRDeHdNUzEyTVN4d01DdDJNQzF5YjNWdVpDeHdNUzEyTVN3M0xDQjBjblZsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJMbk5sZEZSeWFYQnNaVUYwS0hBd0xYWXdMSEF4SzNZeExIQXdMWFl3SzJOUWIybHVkQ3h3TVN0Mk1TeHdNQzEyTUN4d01TdDJNU3d5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVjMlYwVkhKcGNHeGxRWFFvY0RBdGRqQXNjREV0ZGpFc2NEQXRkakFzY0RFdGRqRXJZMUJ2YVc1MExIQXdMWFl3TEhBeExYWXhMRE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaTV6WlhSVWNtbHdiR1ZCZENod01DdDJNQ3h3TVMxMk1TdHliM1Z1WkN4d01DdDJNQ3h3TVMxMk1TdGpVRzlwYm5Rc2NEQXJkakFzY0RFdGRqRXJjbTkxYm1Rc01Dd2dkSEoxWlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh5YjNWdVpDRTlQU0F3S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuWXVjMlYwVkhKcGNHeGxRWFFvY0RBcmRqQXRjbTkxYm1Rc2NERXRkakVzY0RBcmRqQXRjbTkxYm1Rc2NERXRkakVzY0RBcmRqQXRZMUJ2YVc1MExIQXhMWFl4TERFc0lIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNXpaWFJVY21sd2JHVkJkQ2h3TUMxMk1DdHliM1Z1WkN4d01TMTJNU3h3TUMxMk1DdGpVRzlwYm5Rc2NERXRkakVzY0RBdGRqQXJjbTkxYm1Rc2NERXRkakVzTWl3Z2RISjFaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MkxuTmxkRlJ5YVhCc1pVRjBLSEF3TFhZd0xIQXhMWFl4SzNKdmRXNWtMSEF3TFhZd0xIQXhMWFl4SzNKdmRXNWtMSEF3TFhZd0xIQXhMWFl4SzJOUWIybHVkQ3d6TENCMGNuVmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ZdWMyVjBWSEpwY0d4bFFYUW9jREF0ZGpBc2NERXJkakV0Y205MWJtUXNjREF0ZGpBc2NERXJkakV0WTFCdmFXNTBMSEF3TFhZd0xIQXhLM1l4TFhKdmRXNWtMRFFzSUhSeWRXVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZGk1elpYUlVjbWx3YkdWQmRDaHdNQzEyTUN0eWIzVnVaQ3h3TVN0Mk1TeHdNQzEyTUN0eWIzVnVaQ3h3TVN0Mk1TeHdNQzEyTUN0alVHOXBiblFzY0RFcmRqRXNOU3dnZEhKMVpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5ObGRGUnlhWEJzWlVGMEtIQXdLM1l3TFhKdmRXNWtMSEF4SzNZeExIQXdLM1l3TFdOUWIybHVkQ3h3TVN0Mk1TeHdNQ3QyTUMxeWIzVnVaQ3h3TVN0Mk1TdzJMQ0IwY25WbEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YzJWMFZISnBjR3hsUVhRb2NEQXJkakFzY0RFcmRqRXRjbTkxYm1Rc2NEQXJkakFzY0RFcmRqRXRjbTkxYm1Rc2NEQXJkakFzY0RFcmRqRXRZMUJ2YVc1MExEY3NJSFJ5ZFdVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1YzJWMFZISnBjR3hsUVhRb2NEQXRkakFzY0RFdGRqRXNjREF0ZGpBclkxQnZhVzUwTEhBeExYWXhMSEF3TFhZd0xIQXhMWFl4TERFc0lIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpNXpaWFJVY21sd2JHVkJkQ2h3TUMxMk1DeHdNU3QyTVN4d01DMTJNQ3h3TVN0Mk1TMWpVRzlwYm5Rc2NEQXRkakFzY0RFcmRqRXNNaXdnZEhKMVpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyTG5ObGRGUnlhWEJzWlVGMEtIQXdLM1l3TEhBeEszWXhMSEF3SzNZd0xXTlFiMmx1ZEN4d01TdDJNU3h3TUN0Mk1DeHdNU3QyTVN3ekxDQjBjblZsS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUJTWldOMFUyaGhjR1ZRY205d1pYSjBlU2hsYkdWdExHUmhkR0VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJJRDBnYzJoaGNHVmZjRzl2YkM1dVpYZFRhR0Z3WlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbll1WXlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJHOWpZV3hUYUdGd1pVTnZiR3hsWTNScGIyNGdQU0J6YUdGd1pVTnZiR3hsWTNScGIyNWZjRzl2YkM1dVpYZFRhR0Z3WlVOdmJHeGxZM1JwYjI0b0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2Ymk1aFpHUlRhR0Z3WlNoMGFHbHpMbllwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQmhkR2h6SUQwZ2RHaHBjeTVzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0SUQwZ1pXeGxiVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyMXdJRDBnWld4bGJTNWpiMjF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnlZVzFsU1dRZ1BTQXRNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a0lEMGdaR0YwWVM1a08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpJRDBnVzEwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQndjbTlqWlhOelMyVjVjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyNTJaWEowVW1WamRGUnZVR0YwYUNBOUlHTnZiblpsY25SU1pXTjBWRzlRWVhSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzJWMElEMGdjbVZ6WlhSVGFHRndaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d0lEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExuQXNNU3d3TEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5NZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWN5d3hMREFzZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y2lBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0dWc1pXMHNaR0YwWVM1eUxEQXNNQ3gwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3k1c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVySUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJuWmxjblJTWldOMFZHOVFZWFJvS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlLQ2twTzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHZGxkRk5vWVhCbFVISnZjQ2hsYkdWdExHUmhkR0VzZEhsd1pTd2dZWEp5S1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY0hKdmNEdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGVYQmxJRDA5UFNBeklIeDhJSFI1Y0dVZ1BUMDlJRFFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pHRjBZVkJ5YjNBZ1BTQjBlWEJsSUQwOVBTQXpJRDhnWkdGMFlTNXdkQ0E2SUdSaGRHRXVhM003WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCclpYbHpJRDBnWkdGMFlWQnliM0F1YXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1pHRjBZVkJ5YjNBdVlTQTlQVDBnTVNCOGZDQnJaWGx6TG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOXdJRDBnYm1WM0lFdGxlV1p5WVcxbFpGTm9ZWEJsVUhKdmNHVnlkSGtvWld4bGJTd2daR0YwWVN3Z2RIbHdaU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0NBOUlHNWxkeUJUYUdGd1pWQnliM0JsY25SNUtHVnNaVzBzSUdSaGRHRXNJSFI1Y0dVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kSGx3WlNBOVBUMGdOU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBZ1BTQnVaWGNnVW1WamRGTm9ZWEJsVUhKdmNHVnlkSGtvWld4bGJTd2daR0YwWVNrN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kSGx3WlNBOVBUMGdOaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBZ1BTQnVaWGNnUld4c1UyaGhjR1ZRY205d1pYSjBlU2hsYkdWdExDQmtZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaDBlWEJsSUQwOVBTQTNLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0NBOUlHNWxkeUJUZEdGeVUyaGhjR1ZRY205d1pYSjBlU2hsYkdWdExDQmtZWFJoS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb2NISnZjQzVyS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVhKeUxuQjFjMmdvY0hKdmNDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2NtOXdPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdkbGRFTnZibk4wY25WamRHOXlSblZ1WTNScGIyNG9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZOb1lYQmxVSEp2Y0dWeWRIazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWjJWMFMyVjVabkpoYldWa1EyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnUzJWNVpuSmhiV1ZrVTJoaGNHVlFjbTl3WlhKMGVUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2IySWdQU0I3ZlR0Y2NseHVJQ0FnSUc5aUxtZGxkRk5vWVhCbFVISnZjQ0E5SUdkbGRGTm9ZWEJsVUhKdmNEdGNjbHh1SUNBZ0lHOWlMbWRsZEVOdmJuTjBjblZqZEc5eVJuVnVZM1JwYjI0Z1BTQm5aWFJEYjI1emRISjFZM1J2Y2taMWJtTjBhVzl1TzF4eVhHNGdJQ0FnYjJJdVoyVjBTMlY1Wm5KaGJXVmtRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaUE5SUdkbGRFdGxlV1p5WVcxbFpFTnZibk4wY25WamRHOXlSblZ1WTNScGIyNDdYSEpjYmlBZ0lDQnlaWFIxY200Z2IySTdYSEpjYm4wb0tTazdYRzUyWVhJZ1UyaGhjR1ZOYjJScFptbGxjbk1nUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lIWmhjaUJ2WWlBOUlIdDlPMXh5WEc0Z0lDQWdkbUZ5SUcxdlpHbG1hV1Z5Y3lBOUlIdDlPMXh5WEc0Z0lDQWdiMkl1Y21WbmFYTjBaWEpOYjJScFptbGxjaUE5SUhKbFoybHpkR1Z5VFc5a2FXWnBaWEk3WEhKY2JpQWdJQ0J2WWk1blpYUk5iMlJwWm1sbGNpQTlJR2RsZEUxdlpHbG1hV1Z5TzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlISmxaMmx6ZEdWeVRXOWthV1pwWlhJb2JtMHNabUZqZEc5eWVTbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb0lXMXZaR2xtYVdWeWMxdHViVjBwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0YjJScFptbGxjbk5iYm0xZElEMGdabUZqZEc5eWVUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1oyVjBUVzlrYVdacFpYSW9ibTBzWld4bGJTd2daR0YwWVN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnYlc5a2FXWnBaWEp6VzI1dFhTaGxiR1Z0TENCa1lYUmhMQ0JrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUc5aU8xeHlYRzU5S0NrcE8xeHlYRzVjY2x4dVpuVnVZM1JwYjI0Z1UyaGhjR1ZOYjJScFptbGxjaWdwZTMxY2NseHVVMmhoY0dWTmIyUnBabWxsY2k1d2NtOTBiM1I1Y0dVdWFXNXBkRTF2WkdsbWFXVnlVSEp2Y0dWeWRHbGxjeUE5SUdaMWJtTjBhVzl1S0NsN2ZUdGNjbHh1VTJoaGNHVk5iMlJwWm1sbGNpNXdjbTkwYjNSNWNHVXVZV1JrVTJoaGNHVlViMDF2WkdsbWFXVnlJRDBnWm5WdVkzUnBiMjRvS1h0OU8xeHlYRzVUYUdGd1pVMXZaR2xtYVdWeUxuQnliM1J2ZEhsd1pTNWhaR1JUYUdGd1pTQTlJR1oxYm1OMGFXOXVLR1JoZEdFcGUxeHlYRzRnSUNBZ2FXWW9JWFJvYVhNdVkyeHZjMlZrS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lYQmxjeTV3ZFhOb0tIdHphR0Z3WlRwa1lYUmhMbk5vTENCa1lYUmhPaUJrWVhSaExDQnNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZianB6YUdGd1pVTnZiR3hsWTNScGIyNWZjRzl2YkM1dVpYZFRhR0Z3WlVOdmJHeGxZM1JwYjI0b0tYMHBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZV1JrVTJoaGNHVlViMDF2WkdsbWFXVnlLR1JoZEdFdWMyZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibE5vWVhCbFRXOWthV1pwWlhJdWNISnZkRzkwZVhCbExtbHVhWFFnUFNCbWRXNWpkR2x2YmlobGJHVnRMR1JoZEdFc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcGUxeHlYRzRnSUNBZ2RHaHBjeTVsYkdWdElEMGdaV3hsYlR0Y2NseHVJQ0FnSUhSb2FYTXVabkpoYldWSlpDQTlJQzB4TzF4eVhHNGdJQ0FnZEdocGN5NXphR0Z3WlhNZ1BTQmJYVHRjY2x4dUlDQWdJSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNZ1BTQmJYVHRjY2x4dUlDQWdJSFJvYVhNdWJXUm1JRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjBhR2x6TG1Oc2IzTmxaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdkR2hwY3k1cklEMGdabUZzYzJVN1hISmNiaUFnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQjBhR2x6TG1sdWFYUk5iMlJwWm1sbGNsQnliM0JsY25ScFpYTW9aV3hsYlN4a1lYUmhLVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtc2dQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpMbkIxYzJnb2RHaHBjeWs3WEhKY2JpQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbEtIUnlkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYRzVtZFc1amRHbHZiaUJVY21sdFRXOWthV1pwWlhJb0tYdDlPMXh5WEc1bGVIUmxibVJRY205MGIzUjVjR1VvVTJoaGNHVk5iMlJwWm1sbGNpeFVjbWx0VFc5a2FXWnBaWElwTzF4eVhHNVVjbWx0VFc5a2FXWnBaWEl1Y0hKdmRHOTBlWEJsTG5CeWIyTmxjM05MWlhseklEMGdablZ1WTNScGIyNG9abTl5WTJWU1pXNWtaWElwZTF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpDQTlQVDBnZEdocGN5NW1jbUZ0WlVsa0lDWW1JQ0ZtYjNKalpWSmxibVJsY2lsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTV0WkdZZ1BTQm1iM0pqWlZKbGJtUmxjaUEvSUhSeWRXVWdPaUJtWVd4elpUdGNjbHh1SUNBZ0lIUm9hWE11Wm5KaGJXVkpaQ0E5SUhSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnlZVzFsU1dRN1hISmNiaUFnSUNCMllYSWdhU3dnYkdWdUlEMGdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3k1c1pXNW5kR2c3WEhKY2JseHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWelcybGRMbWRsZEZaaGJIVmxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNXRaR1lwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMWtaaUE5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTV0WkdZZ2ZId2dabTl5WTJWU1pXNWtaWElwZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ2SUQwZ0tIUm9hWE11Ynk1MkpUTTJNQ2t2TXpZd08xeHlYRzRnSUNBZ0lDQWdJR2xtS0c4Z1BDQXdLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdieUFyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdjeUE5SUhSb2FYTXVjeTUySUNzZ2J6dGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1pTQTlJSFJvYVhNdVpTNTJJQ3NnYnp0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh6SUQwOUlHVXBlMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb2N6NWxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUY5eklEMGdjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjeUE5SUdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQmZjenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1elZtRnNkV1VnUFNCek8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpWWmhiSFZsSUQwZ1pUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtOVdZV3gxWlNBOUlHODdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVWSEpwYlUxdlpHbG1hV1Z5TG5CeWIzUnZkSGx3WlM1cGJtbDBUVzlrYVdacFpYSlFjbTl3WlhKMGFXVnpJRDBnWm5WdVkzUnBiMjRvWld4bGJTeGtZWFJoS1h0Y2NseHVJQ0FnSUhSb2FYTXVjMVpoYkhWbElEMGdNRHRjY2x4dUlDQWdJSFJvYVhNdVpWWmhiSFZsSUQwZ01EdGNjbHh1SUNBZ0lIUm9hWE11YjFaaGJIVmxJRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxuQnliMk5sYzNOTFpYbHpPMXh5WEc0Z0lDQWdkR2hwY3k1eklEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExuTXNNQ3d3TGpBeExIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnZEdocGN5NWxJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9aV3hsYlN4a1lYUmhMbVVzTUN3d0xqQXhMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ2RHaHBjeTV2SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG04c01Dd3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ2RHaHBjeTV0SUQwZ1pHRjBZUzV0TzF4eVhHNGdJQ0FnYVdZb0lYUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE11YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWRsZEZaaGJIVmxLSFJ5ZFdVcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1VkhKcGJVMXZaR2xtYVdWeUxuQnliM1J2ZEhsd1pTNWpZV3hqZFd4aGRHVlRhR0Z3WlVWa1oyVnpJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2djMmhoY0dWTVpXNW5kR2dzSUdGa1pHVmtUR1Z1WjNSb0xDQjBiM1JoYkUxdlpHbG1hV1Z5VEdWdVozUm9LU0I3WEhKY2JpQWdJQ0IyWVhJZ2MyVm5iV1Z1ZEhNZ1BTQmJYVnh5WEc0Z0lDQWdhV1lvWlNBOFBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNCelpXZHRaVzUwY3k1d2RYTm9LSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjem9nY3l4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWlRvZ1pWeHlYRzRnSUNBZ0lDQWdJSDBwWEhKY2JpQWdJQ0I5Wld4elpTQnBaaWh6SUQ0OUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUhObFoyMWxiblJ6TG5CMWMyZ29lMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpPaUJ6SUMwZ01TeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pUb2daU0F0SURGY2NseHVJQ0FnSUNBZ0lDQjlLVnh5WEc0Z0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdjMlZuYldWdWRITXVjSFZ6YUNoN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhNNklITXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVTZJREZjY2x4dUlDQWdJQ0FnSUNCOUtWeHlYRzRnSUNBZ0lDQWdJSE5sWjIxbGJuUnpMbkIxYzJnb2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCek9pQXdMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxPaUJsSUMwZ01WeHlYRzRnSUNBZ0lDQWdJSDBwWEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2MyaGhjR1ZUWldkdFpXNTBjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSE5sWjIxbGJuUnpMbXhsYm1kMGFDd2djMlZuYldWdWRFOWlPMXh5WEc0Z0lDQWdabTl5S0drZ1BTQXdPeUJwSUR3Z2JHVnVPeUJwSUNzOUlERXBJSHRjY2x4dUlDQWdJQ0FnSUNCelpXZHRaVzUwVDJJZ1BTQnpaV2R0Wlc1MGMxdHBYVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9jMlZuYldWdWRFOWlMbVVnS2lCMGIzUmhiRTF2WkdsbWFXVnlUR1Z1WjNSb0lEd2dZV1JrWldSTVpXNW5kR2dnZkh3Z2MyVm5iV1Z1ZEU5aUxuTWdLaUIwYjNSaGJFMXZaR2xtYVdWeVRHVnVaM1JvSUQ0Z1lXUmtaV1JNWlc1bmRHZ2dLeUJ6YUdGd1pVeGxibWQwYUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCY2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMmhoY0dWVExDQnphR0Z3WlVVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtITmxaMjFsYm5SUFlpNXpJQ29nZEc5MFlXeE5iMlJwWm1sbGNreGxibWQwYUNBOFBTQmhaR1JsWkV4bGJtZDBhQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1ZUSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsVXlBOUlDaHpaV2R0Wlc1MFQySXVjeUFxSUhSdmRHRnNUVzlrYVdacFpYSk1aVzVuZEdnZ0xTQmhaR1JsWkV4bGJtZDBhQ2tnTHlCemFHRndaVXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHpaV2R0Wlc1MFQySXVaU0FxSUhSdmRHRnNUVzlrYVdacFpYSk1aVzVuZEdnZ1BqMGdZV1JrWldSTVpXNW5kR2dnS3lCemFHRndaVXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVkZJRDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxSU0E5SUNnb2MyVm5iV1Z1ZEU5aUxtVWdLaUIwYjNSaGJFMXZaR2xtYVdWeVRHVnVaM1JvSUMwZ1lXUmtaV1JNWlc1bmRHZ3BJQzhnYzJoaGNHVk1aVzVuZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxVMlZuYldWdWRITXVjSFZ6YUNoYmMyaGhjR1ZUTENCemFHRndaVVZkS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWdoYzJoaGNHVlRaV2R0Wlc1MGN5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJSE5vWVhCbFUyVm5iV1Z1ZEhNdWNIVnphQ2hiTUN3d1hTazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnlaWFIxY200Z2MyaGhjR1ZUWldkdFpXNTBjenRjY2x4dWZWeHlYRzVjY2x4dVZISnBiVTF2WkdsbWFXVnlMbkJ5YjNSdmRIbHdaUzV3Y205alpYTnpVMmhoY0dWeklEMGdablZ1WTNScGIyNG9abWx5YzNSR2NtRnRaU2w3WEhKY2JpQWdJQ0IyWVhJZ2MyaGhjR1ZRWVhSb2N6dGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxuTm9ZWEJsY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0IyWVhJZ2Fpd2dha3hsYmp0Y2NseHVJQ0FnSUhaaGNpQnpJRDBnZEdocGN5NXpWbUZzZFdVN1hISmNiaUFnSUNCMllYSWdaU0E5SUhSb2FYTXVaVlpoYkhWbE8xeHlYRzRnSUNBZ2RtRnlJSEJoZEdoelJHRjBZU3h3WVhSb1JHRjBZU3dnZEc5MFlXeFRhR0Z3WlV4bGJtZDBhQ3dnZEc5MFlXeE5iMlJwWm1sbGNreGxibWQwYUNBOUlEQTdYSEpjYmx4eVhHNGdJQ0FnYVdZb1pTQTlQVDBnY3lsN1hISmNiaUFnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emFHRndaWE5iYVYwdWJHOWpZV3hUYUdGd1pVTnZiR3hsWTNScGIyNHVjbVZzWldGelpWTm9ZWEJsY3lncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVhCbGMxdHBYUzV6YUdGd1pTNXRaR1lnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lYQmxjMXRwWFM1emFHRndaUzV3WVhSb2N5QTlJSFJvYVhNdWMyaGhjR1Z6VzJsZExteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgwZ1pXeHpaU0JwWmlnaEtDaGxJRDA5UFNBeElDWW1JSE1nUFQwOUlEQXBJSHg4SUNobFBUMDlNQ0FtSmlCeklEMDlQU0F4S1NrcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCelpXZHRaVzUwY3lBOUlGdGRMQ0J6YUdGd1pVUmhkR0VzSUd4dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE5vWVhCbFJHRjBZU0E5SUhSb2FYTXVjMmhoY0dWelcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWdoYzJoaGNHVkVZWFJoTG5Ob1lYQmxMbTFrWmlBbUppQWhkR2hwY3k1dFpHWWdKaVlnSVdacGNuTjBSbkpoYldVZ0ppWWdkR2hwY3k1dElDRTlQU0F5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsUkdGMFlTNXphR0Z3WlM1d1lYUm9jeUE5SUhOb1lYQmxSR0YwWVM1c2IyTmhiRk5vWVhCbFEyOXNiR1ZqZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsVUdGMGFITWdQU0J6YUdGd1pVUmhkR0V1YzJoaGNHVXVjR0YwYUhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFUR1Z1SUQwZ2MyaGhjR1ZRWVhSb2N5NWZiR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzkwWVd4VGFHRndaVXhsYm1kMGFDQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppZ2hjMmhoY0dWRVlYUmhMbk5vWVhCbExtMWtaaUFtSmlCemFHRndaVVJoZEdFdWNHRjBhSE5FWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzUmhiRk5vWVhCbFRHVnVaM1JvSUQwZ2MyaGhjR1ZFWVhSaExuUnZkR0ZzVTJoaGNHVk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaHpSR0YwWVNBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhxUFRBN2FqeHFUR1Z1TzJvclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb1JHRjBZU0E5SUdKbGVpNW5aWFJUWldkdFpXNTBjMHhsYm1kMGFDaHphR0Z3WlZCaGRHaHpMbk5vWVhCbGMxdHFYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaHpSR0YwWVM1d2RYTm9LSEJoZEdoRVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEc5MFlXeFRhR0Z3WlV4bGJtZDBhQ0FyUFNCd1lYUm9SR0YwWVM1MGIzUmhiRXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVkVZWFJoTG5SdmRHRnNVMmhoY0dWTVpXNW5kR2dnUFNCMGIzUmhiRk5vWVhCbFRHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVhCbFJHRjBZUzV3WVhSb2MwUmhkR0VnUFNCd1lYUm9jMFJoZEdFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOTBZV3hOYjJScFptbGxja3hsYm1kMGFDQXJQU0IwYjNSaGJGTm9ZWEJsVEdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVkVZWFJoTG5Ob1lYQmxMbTFrWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhOb1lYQmxVeUE5SUhNc0lITm9ZWEJsUlNBOUlHVXNJR0ZrWkdWa1RHVnVaM1JvSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2Fpd2dha3hsYmp0Y2NseHVJQ0FnSUNBZ0lDQm1iM0lvYVNBOUlHeGxiaUF0SURFN0lHa2dQajBnTURzZ2FTQXRQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVkVZWFJoSUQwZ2RHaHBjeTV6YUdGd1pYTmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemFHRndaVVJoZEdFdWMyaGhjR1V1YldSbUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2YmlBOUlITm9ZWEJsUkdGMFlTNXNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dUxuSmxiR1ZoYzJWVGFHRndaWE1vS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWJTQTlQVDBnTWlBbUppQnNaVzRnUGlBeEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR1ZrWjJWeklEMGdkR2hwY3k1allXeGpkV3hoZEdWVGFHRndaVVZrWjJWektITXNJR1VzSUhOb1lYQmxSR0YwWVM1MGIzUmhiRk5vWVhCbFRHVnVaM1JvTENCaFpHUmxaRXhsYm1kMGFDd2dkRzkwWVd4TmIyUnBabWxsY2t4bGJtZDBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1JrWldSTVpXNW5kR2dnS3owZ2MyaGhjR1ZFWVhSaExuUnZkR0ZzVTJoaGNHVk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWa1oyVnpJRDBnVzF0emFHRndaVk1zSUhOb1lYQmxSVjFkWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFUR1Z1SUQwZ1pXUm5aWE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHFJRDBnTURzZ2FpQThJR3BNWlc0N0lHb2dLejBnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxVeUE5SUdWa1oyVnpXMnBkV3pCZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxSU0E5SUdWa1oyVnpXMnBkV3pGZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObFoyMWxiblJ6TG14bGJtZDBhQ0E5SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1ZGSUR3OUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WldkdFpXNTBjeTV3ZFhOb0tIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNNmMyaGhjR1ZFWVhSaExuUnZkR0ZzVTJoaGNHVk1aVzVuZEdnZ0tpQnphR0Z3WlZNc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsT25Ob1lYQmxSR0YwWVM1MGIzUmhiRk5vWVhCbFRHVnVaM1JvSUNvZ2MyaGhjR1ZGWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvYzJoaGNHVlRJRDQ5SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV2R0Wlc1MGN5NXdkWE5vS0h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE02YzJoaGNHVkVZWFJoTG5SdmRHRnNVMmhoY0dWTVpXNW5kR2dnS2lBb2MyaGhjR1ZUSUMwZ01Ta3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbE9uTm9ZWEJsUkdGMFlTNTBiM1JoYkZOb1lYQmxUR1Z1WjNSb0lDb2dLSE5vWVhCbFJTQXRJREVwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sWjIxbGJuUnpMbkIxYzJnb2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3pwemFHRndaVVJoZEdFdWRHOTBZV3hUYUdGd1pVeGxibWQwYUNBcUlITm9ZWEJsVXl4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1U2YzJoaGNHVkVZWFJoTG5SdmRHRnNVMmhoY0dWTVpXNW5kR2hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEhNdWNIVnphQ2g3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpPakFzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxPbk5vWVhCbFJHRjBZUzUwYjNSaGJGTm9ZWEJsVEdWdVozUm9LaWh6YUdGd1pVVWdMU0F4S1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JtVjNVMmhoY0dWelJHRjBZU0E5SUhSb2FYTXVZV1JrVTJoaGNHVnpLSE5vWVhCbFJHRjBZU3h6WldkdFpXNTBjMXN3WFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmxaMjFsYm5Seld6QmRMbk1nSVQwOUlITmxaMjFsYm5Seld6QmRMbVVwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR3hoYzNSUWIzTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hObFoyMWxiblJ6TG14bGJtZDBhQ0ErSURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1ZFWVhSaExuTm9ZWEJsTG5ZdVl5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUd4aGMzUlRhR0Z3WlNBOUlHNWxkMU5vWVhCbGMwUmhkR0V1Y0c5d0tDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aFpHUlFZWFJvY3lodVpYZFRhR0Z3WlhORVlYUmhMQ0JzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2YmlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNVMmhoY0dWelJHRjBZU0E5SUhSb2FYTXVZV1JrVTJoaGNHVnpLSE5vWVhCbFJHRjBZU3h6WldkdFpXNTBjMXN4WFN3Z2JHRnpkRk5vWVhCbEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhaR1JRWVhSb2N5aHVaWGRUYUdGd1pYTkVZWFJoTENCc2IyTmhiRk5vWVhCbFEyOXNiR1ZqZEdsdmJpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVYzVTJoaGNHVnpSR0YwWVNBOUlIUm9hWE11WVdSa1UyaGhjR1Z6S0hOb1lYQmxSR0YwWVN4elpXZHRaVzUwYzFzeFhTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtVR0YwYUhNb2JtVjNVMmhoY0dWelJHRjBZU3dnYkc5allXeFRhR0Z3WlVOdmJHeGxZM1JwYjI0cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsUkdGMFlTNXphR0Z3WlM1d1lYUm9jeUE5SUd4dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmU0JsYkhObElHbG1LSFJvYVhNdWJXUm1LWHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVhCbGMxdHBYUzV6YUdGd1pTNXRaR1lnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtDRjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6TG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WkdZZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVWSEpwYlUxdlpHbG1hV1Z5TG5CeWIzUnZkSGx3WlM1aFpHUlFZWFJvY3lBOUlHWjFibU4wYVc5dUtHNWxkMUJoZEdoekxDQnNiMk5oYkZOb1lYQmxRMjlzYkdWamRHbHZiaWtnZTF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlHNWxkMUJoZEdoekxteGxibWQwYUR0Y2NseHVJQ0FnSUdadmNpaHBJRDBnTURzZ2FTQThJR3hsYmpzZ2FTQXJQU0F4S1NCN1hISmNiaUFnSUNBZ0lDQWdiRzlqWVd4VGFHRndaVU52Ykd4bFkzUnBiMjR1WVdSa1UyaGhjR1VvYm1WM1VHRjBhSE5iYVYwcFhISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNibFJ5YVcxTmIyUnBabWxsY2k1d2NtOTBiM1I1Y0dVdVlXUmtVMlZuYldWdWRDQTlJR1oxYm1OMGFXOXVLSEIwTVN4d2RESXNjSFF6TEhCME5DeHphR0Z3WlZCaGRHZ3NjRzl6TENCdVpYZFRhR0Z3WlNrZ2UxeHlYRzRnSUNBZ0x5cGpiMjV6YjJ4bExteHZaeWh3ZERFc0lDZDJaWEowWlhnNklIWXNJR0YwT2lBbkxDQndiM01wTzF4eVhHNGdJQ0FnWTI5dWMyOXNaUzVzYjJjb2NIUXlMQ0FuZG1WeWRHVjRPaUJ2TENCaGREb2dKeXdnY0c5ektUdGNjbHh1SUNBZ0lHTnZibk52YkdVdWJHOW5LSEIwTXl3Z0ozWmxjblJsZURvZ2FTd2dZWFE2SUNjc0lIQnZjeUFySURFcE8xeHlYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29jSFEwTENBbmRtVnlkR1Y0T2lCMkxDQmhkRG9nSnl3Z2NHOXpJQ3NnTVNrN1hISmNiaUFnSUNCamIyNXpiMnhsTG14dlp5Z25ibVYzVTJoaGNHVTZJQ2NzSUc1bGQxTm9ZWEJsS1RzcUwxeHlYRzRnSUNBZ2MyaGhjR1ZRWVhSb0xuTmxkRmhaUVhRb2NIUXlXekJkTEhCME1sc3hYU3duYnljc2NHOXpLVHRjY2x4dUlDQWdJSE5vWVhCbFVHRjBhQzV6WlhSWVdVRjBLSEIwTTFzd1hTeHdkRE5iTVYwc0oya25MSEJ2Y3lBcklERXBPMXh5WEc0Z0lDQWdhV1lvYm1WM1UyaGhjR1VwZTF4eVhHNGdJQ0FnSUNBZ0lITm9ZWEJsVUdGMGFDNXpaWFJZV1VGMEtIQjBNVnN3WFN4d2RERmJNVjBzSjNZbkxIQnZjeWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J6YUdGd1pWQmhkR2d1YzJWMFdGbEJkQ2h3ZERSYk1GMHNjSFEwV3pGZExDZDJKeXh3YjNNZ0t5QXhLVHRjY2x4dWZWeHlYRzVjY2x4dVZISnBiVTF2WkdsbWFXVnlMbkJ5YjNSdmRIbHdaUzVoWkdSVGFHRndaWE1nUFNCbWRXNWpkR2x2YmloemFHRndaVVJoZEdFc0lITm9ZWEJsVTJWbmJXVnVkQ3dnYzJoaGNHVlFZWFJvS1h0Y2NseHVJQ0FnSUhaaGNpQndZWFJvYzBSaGRHRWdQU0J6YUdGd1pVUmhkR0V1Y0dGMGFITkVZWFJoTzF4eVhHNGdJQ0FnZG1GeUlITm9ZWEJsVUdGMGFITWdQU0J6YUdGd1pVUmhkR0V1YzJoaGNHVXVjR0YwYUhNdWMyaGhjR1Z6TzF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlITm9ZWEJsUkdGMFlTNXphR0Z3WlM1d1lYUm9jeTVmYkdWdVozUm9MQ0JxTENCcVRHVnVPMXh5WEc0Z0lDQWdkbUZ5SUdGa1pHVmtUR1Z1WjNSb0lEMGdNRHRjY2x4dUlDQWdJSFpoY2lCamRYSnlaVzUwVEdWdVozUm9SR0YwWVN4elpXZHRaVzUwUTI5MWJuUTdYSEpjYmlBZ0lDQjJZWElnYkdWdVozUm9jenRjY2x4dUlDQWdJSFpoY2lCelpXZHRaVzUwTzF4eVhHNGdJQ0FnZG1GeUlITm9ZWEJsY3lBOUlGdGRPMXh5WEc0Z0lDQWdkbUZ5SUdsdWFYUlFiM003WEhKY2JpQWdJQ0IyWVhJZ2JtVjNVMmhoY0dVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnYVdZb0lYTm9ZWEJsVUdGMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnYzJoaGNHVlFZWFJvSUQwZ2MyaGhjR1ZmY0c5dmJDNXVaWGRUYUdGd1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhObFoyMWxiblJEYjNWdWRDQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ2FXNXBkRkJ2Y3lBOUlEQTdYSEpjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJSE5sWjIxbGJuUkRiM1Z1ZENBOUlITm9ZWEJsVUdGMGFDNWZiR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR2x1YVhSUWIzTWdQU0J6YUdGd1pWQmhkR2d1WDJ4bGJtZDBhRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSE5vWVhCbGN5NXdkWE5vS0hOb1lYQmxVR0YwYUNrN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJR3hsYm1kMGFITWdQU0J3WVhSb2MwUmhkR0ZiYVYwdWJHVnVaM1JvY3p0Y2NseHVJQ0FnSUNBZ0lDQnphR0Z3WlZCaGRHZ3VZeUE5SUhOb1lYQmxVR0YwYUhOYmFWMHVZenRjY2x4dUlDQWdJQ0FnSUNCcVRHVnVJRDBnYzJoaGNHVlFZWFJvYzF0cFhTNWpJRDhnYkdWdVozUm9jeTVzWlc1bmRHZ2dPaUJzWlc1bmRHaHpMbXhsYm1kMGFDQXJJREU3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR285TVR0cVBHcE1aVzQ3YWlzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5STVpXNW5kR2hFWVhSaElEMGdiR1Z1WjNSb2MxdHFMVEZkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloaFpHUmxaRXhsYm1kMGFDQXJJR04xY25KbGJuUk1aVzVuZEdoRVlYUmhMbUZrWkdWa1RHVnVaM1JvSUR3Z2MyaGhjR1ZUWldkdFpXNTBMbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXUmtaV1JNWlc1bmRHZ2dLejBnWTNWeWNtVnVkRXhsYm1kMGFFUmhkR0V1WVdSa1pXUk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlZCaGRHZ3VZeUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWW9ZV1JrWldSTVpXNW5kR2dnUGlCemFHRndaVk5sWjIxbGJuUXVaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRndaVkJoZEdndVl5QTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHphR0Z3WlZObFoyMWxiblF1Y3lBOFBTQmhaR1JsWkV4bGJtZDBhQ0FtSmlCemFHRndaVk5sWjIxbGJuUXVaU0ErUFNCaFpHUmxaRXhsYm1kMGFDQXJJR04xY25KbGJuUk1aVzVuZEdoRVlYUmhMbUZrWkdWa1RHVnVaM1JvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRmtaRk5sWjIxbGJuUW9jMmhoY0dWUVlYUm9jMXRwWFM1Mlcyb3RNVjBzYzJoaGNHVlFZWFJvYzF0cFhTNXZXMm90TVYwc2MyaGhjR1ZRWVhSb2MxdHBYUzVwVzJwZExITm9ZWEJsVUdGMGFITmJhVjB1ZGx0cVhTeHphR0Z3WlZCaGRHZ3NjMlZuYldWdWRFTnZkVzUwTEc1bGQxTm9ZWEJsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WlhkVGFHRndaU0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV2R0Wlc1MElEMGdZbVY2TG1kbGRFNWxkMU5sWjIxbGJuUW9jMmhoY0dWUVlYUm9jMXRwWFM1Mlcyb3RNVjBzYzJoaGNHVlFZWFJvYzF0cFhTNTJXMnBkTEhOb1lYQmxVR0YwYUhOYmFWMHViMXRxTFRGZExITm9ZWEJsVUdGMGFITmJhVjB1YVZ0cVhTd2dLSE5vWVhCbFUyVm5iV1Z1ZEM1eklDMGdZV1JrWldSTVpXNW5kR2dwTDJOMWNuSmxiblJNWlc1bmRHaEVZWFJoTG1Ga1pHVmtUR1Z1WjNSb0xDaHphR0Z3WlZObFoyMWxiblF1WlNBdElHRmtaR1ZrVEdWdVozUm9LUzlqZFhKeVpXNTBUR1Z1WjNSb1JHRjBZUzVoWkdSbFpFeGxibWQwYUN3Z2JHVnVaM1JvYzF0cUxURmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Ga1pGTmxaMjFsYm5Rb2MyVm5iV1Z1ZEM1d2RERXNjMlZuYldWdWRDNXdkRE1zYzJWbmJXVnVkQzV3ZERRc2MyVm5iV1Z1ZEM1d2RESXNjMmhoY0dWUVlYUm9MSE5sWjIxbGJuUkRiM1Z1ZEN4dVpYZFRhR0Z3WlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1UyaGhjR1VnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlZCaGRHZ3VZeUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXUmtaV1JNWlc1bmRHZ2dLejBnWTNWeWNtVnVkRXhsYm1kMGFFUmhkR0V1WVdSa1pXUk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV2R0Wlc1MFEyOTFiblFnS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaHphR0Z3WlZCaGRHaHpXMmxkTG1NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVEdWdVozUm9SR0YwWVNBOUlHeGxibWQwYUhOYmFpMHhYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvWVdSa1pXUk1aVzVuZEdnZ1BEMGdjMmhoY0dWVFpXZHRaVzUwTG1VcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhObFoyMWxiblJNWlc1bmRHZ2dQU0JzWlc1bmRHaHpXMm90TVYwdVlXUmtaV1JNWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloemFHRndaVk5sWjIxbGJuUXVjeUE4UFNCaFpHUmxaRXhsYm1kMGFDQW1KaUJ6YUdGd1pWTmxaMjFsYm5RdVpTQStQU0JoWkdSbFpFeGxibWQwYUNBcklITmxaMjFsYm5STVpXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtVMlZuYldWdWRDaHphR0Z3WlZCaGRHaHpXMmxkTG5aYmFpMHhYU3h6YUdGd1pWQmhkR2h6VzJsZExtOWJhaTB4WFN4emFHRndaVkJoZEdoelcybGRMbWxiTUYwc2MyaGhjR1ZRWVhSb2MxdHBYUzUyV3pCZExITm9ZWEJsVUdGMGFDeHpaV2R0Wlc1MFEyOTFiblFzYm1WM1UyaGhjR1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZDFOb1lYQmxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXZHRaVzUwSUQwZ1ltVjZMbWRsZEU1bGQxTmxaMjFsYm5Rb2MyaGhjR1ZRWVhSb2MxdHBYUzUyVzJvdE1WMHNjMmhoY0dWUVlYUm9jMXRwWFM1Mld6QmRMSE5vWVhCbFVHRjBhSE5iYVYwdWIxdHFMVEZkTEhOb1lYQmxVR0YwYUhOYmFWMHVhVnN3WFN3Z0tITm9ZWEJsVTJWbmJXVnVkQzV6SUMwZ1lXUmtaV1JNWlc1bmRHZ3BMM05sWjIxbGJuUk1aVzVuZEdnc0tITm9ZWEJsVTJWbmJXVnVkQzVsSUMwZ1lXUmtaV1JNWlc1bmRHZ3BMM05sWjIxbGJuUk1aVzVuZEdnc0lHeGxibWQwYUhOYmFpMHhYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aFpHUlRaV2R0Wlc1MEtITmxaMjFsYm5RdWNIUXhMSE5sWjIxbGJuUXVjSFF6TEhObFoyMWxiblF1Y0hRMExITmxaMjFsYm5RdWNIUXlMSE5vWVhCbFVHRjBhQ3h6WldkdFpXNTBRMjkxYm5Rc2JtVjNVMmhoY0dVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bGQxTm9ZWEJsSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWUVlYUm9MbU1nUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxVR0YwYUM1aklEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVdSa1pXUk1aVzVuZEdnZ0t6MGdZM1Z5Y21WdWRFeGxibWQwYUVSaGRHRXVZV1JrWldSTVpXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE5sWjIxbGJuUkRiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWh6YUdGd1pWQmhkR2d1WDJ4bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE5vWVhCbFVHRjBhQzV6WlhSWVdVRjBLSE5vWVhCbFVHRjBhQzUyVzJsdWFYUlFiM05kV3pCZExITm9ZWEJsVUdGMGFDNTJXMmx1YVhSUWIzTmRXekZkTENkcEp5eHBibWwwVUc5ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1ZRWVhSb0xuTmxkRmhaUVhRb2MyaGhjR1ZRWVhSb0xuWmJjMmhoY0dWUVlYUm9MbDlzWlc1bmRHZ2dMU0F4WFZzd1hTeHphR0Z3WlZCaGRHZ3VkbHR6YUdGd1pWQmhkR2d1WDJ4bGJtZDBhQ0F0SURGZFd6RmRMQ2R2Snl4emFHRndaVkJoZEdndVgyeGxibWQwYUNBdElERXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWhoWkdSbFpFeGxibWQwYUNBK0lITm9ZWEJsVTJWbmJXVnVkQzVsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LR2s4YkdWdUxURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlZCaGRHZ2dQU0J6YUdGd1pWOXdiMjlzTG01bGQxTm9ZWEJsS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGQxTm9ZWEJsSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWekxuQjFjMmdvYzJoaGNHVlFZWFJvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWbmJXVnVkRU52ZFc1MElEMGdNRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCeVpYUjFjbTRnYzJoaGNHVnpPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVYSEpjYmxOb1lYQmxUVzlrYVdacFpYSnpMbkpsWjJsemRHVnlUVzlrYVdacFpYSW9KM1J0Snl4VWNtbHRUVzlrYVdacFpYSXBPMXh1Wm5WdVkzUnBiMjRnVW05MWJtUkRiM0p1WlhKelRXOWthV1pwWlhJb0tYdDlPMXh5WEc1bGVIUmxibVJRY205MGIzUjVjR1VvVTJoaGNHVk5iMlJwWm1sbGNpeFNiM1Z1WkVOdmNtNWxjbk5OYjJScFptbGxjaWs3WEhKY2JsSnZkVzVrUTI5eWJtVnljMDF2WkdsbWFXVnlMbkJ5YjNSdmRIbHdaUzV3Y205alpYTnpTMlY1Y3lBOUlHWjFibU4wYVc5dUtHWnZjbU5sVW1WdVpHVnlLWHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnlZVzFsU1dRZ1BUMDlJSFJvYVhNdVpuSmhiV1ZKWkNBbUppQWhabTl5WTJWU1pXNWtaWElwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXViV1JtSUQwZ1ptOXlZMlZTWlc1a1pYSWdQeUIwY25WbElEb2dabUZzYzJVN1hISmNiaUFnSUNCMGFHbHpMbVp5WVcxbFNXUWdQU0IwYUdsekxtVnNaVzB1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVWxrTzF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE11YkdWdVozUm9PMXh5WEc1Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNW5aWFJXWVd4MVpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdWJXUm1LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVTYjNWdVpFTnZjbTVsY25OTmIyUnBabWxsY2k1d2NtOTBiM1I1Y0dVdWFXNXBkRTF2WkdsbWFXVnlVSEp2Y0dWeWRHbGxjeUE5SUdaMWJtTjBhVzl1S0dWc1pXMHNaR0YwWVNsN1hISmNiaUFnSUNCMGFHbHpMbWRsZEZaaGJIVmxJRDBnZEdocGN5NXdjbTlqWlhOelMyVjVjenRjY2x4dUlDQWdJSFJvYVhNdWNtUWdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TEdSaGRHRXVjaXd3TEc1MWJHd3NkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNCcFppZ2hkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3k1c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WjJWMFZtRnNkV1VvZEhKMVpTazdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1U2IzVnVaRU52Y201bGNuTk5iMlJwWm1sbGNpNXdjbTkwYjNSNWNHVXVjSEp2WTJWemMxQmhkR2dnUFNCbWRXNWpkR2x2Ymlod1lYUm9MQ0J5YjNWdVpDbDdYSEpjYmlBZ0lDQjJZWElnWTJ4dmJtVmtYM0JoZEdnZ1BTQnphR0Z3WlY5d2IyOXNMbTVsZDFOb1lYQmxLQ2s3WEhKY2JpQWdJQ0JqYkc5dVpXUmZjR0YwYUM1aklEMGdjR0YwYUM1ak8xeHlYRzRnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSEJoZEdndVgyeGxibWQwYUR0Y2NseHVJQ0FnSUhaaGNpQmpkWEp5Wlc1MFZpeGpkWEp5Wlc1MFNTeGpkWEp5Wlc1MFR5eGpiRzl6WlhKV0xDQnVaWGRXTEc1bGQwOHNibVYzU1N4a2FYTjBZVzVqWlN4dVpYZFFiM05RWlhKakxHbHVaR1Y0SUQwZ01EdGNjbHh1SUNBZ0lIWmhjaUIyV0N4MldTeHZXQ3h2V1N4cFdDeHBXVHRjY2x4dUlDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZEZZZ1BTQndZWFJvTG5aYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkRThnUFNCd1lYUm9MbTliYVYwN1hISmNiaUFnSUNBZ0lDQWdZM1Z5Y21WdWRFa2dQU0J3WVhSb0xtbGJhVjA3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9ZM1Z5Y21WdWRGWmJNRjA5UFQxamRYSnlaVzUwVDFzd1hTQW1KaUJqZFhKeVpXNTBWbHN4WFQwOVBXTjFjbkpsYm5SUFd6RmRJQ1ltSUdOMWNuSmxiblJXV3pCZFBUMDlZM1Z5Y21WdWRFbGJNRjBnSmlZZ1kzVnljbVZ1ZEZaYk1WMDlQVDFqZFhKeVpXNTBTVnN4WFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDaHBQVDA5TUNCOGZDQnBJRDA5UFNCc1pXNGdMU0F4S1NBbUppQWhjR0YwYUM1aktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zYjI1bFpGOXdZWFJvTG5ObGRGUnlhWEJzWlVGMEtHTjFjbkpsYm5SV1d6QmRMR04xY25KbGJuUldXekZkTEdOMWNuSmxiblJQV3pCZExHTjFjbkpsYm5SUFd6RmRMR04xY25KbGJuUkpXekJkTEdOMWNuSmxiblJKV3pGZExHbHVaR1Y0S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHFZMnh2Ym1Wa1gzQmhkR2d1ZGx0cGJtUmxlRjBnUFNCamRYSnlaVzUwVmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNiMjVsWkY5d1lYUm9MbTliYVc1a1pYaGRJRDBnWTNWeWNtVnVkRTg3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHOXVaV1JmY0dGMGFDNXBXMmx1WkdWNFhTQTlJR04xY25KbGJuUkpPeW92WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQ0FyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9hVDA5UFRBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOc2IzTmxjbFlnUFNCd1lYUm9MblpiYkdWdUxURmRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiRzl6WlhKV0lEMGdjR0YwYUM1Mlcya3RNVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpTQTlJRTFoZEdndWMzRnlkQ2hOWVhSb0xuQnZkeWhqZFhKeVpXNTBWbHN3WFMxamJHOXpaWEpXV3pCZExESXBLMDFoZEdndWNHOTNLR04xY25KbGJuUldXekZkTFdOc2IzTmxjbFpiTVYwc01pa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1VHOXpVR1Z5WXlBOUlHUnBjM1JoYm1ObElEOGdUV0YwYUM1dGFXNG9aR2x6ZEdGdVkyVXZNaXh5YjNWdVpDa3ZaR2x6ZEdGdVkyVWdPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RsZ2dQU0JwV0NBOUlHTjFjbkpsYm5SV1d6QmRLeWhqYkc5elpYSldXekJkTFdOMWNuSmxiblJXV3pCZEtTcHVaWGRRYjNOUVpYSmpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGxrZ1BTQnBXU0E5SUdOMWNuSmxiblJXV3pGZExTaGpkWEp5Wlc1MFZsc3hYUzFqYkc5elpYSldXekZkS1NwdVpYZFFiM05RWlhKak8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMWdnUFNCMldDMG9kbGd0WTNWeWNtVnVkRlpiTUYwcEtuSnZkVzVrUTI5eWJtVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjFrZ1BTQjJXUzBvZGxrdFkzVnljbVZ1ZEZaYk1WMHBLbkp2ZFc1a1EyOXlibVZ5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyeHZibVZrWDNCaGRHZ3VjMlYwVkhKcGNHeGxRWFFvZGxnc2Rsa3NiMWdzYjFrc2FWZ3NhVmtzYVc1a1pYZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ2dLejBnTVR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlocElEMDlQU0JzWlc0Z0xTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiRzl6WlhKV0lEMGdjR0YwYUM1Mld6QmRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiRzl6WlhKV0lEMGdjR0YwYUM1Mlcya3JNVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpTQTlJRTFoZEdndWMzRnlkQ2hOWVhSb0xuQnZkeWhqZFhKeVpXNTBWbHN3WFMxamJHOXpaWEpXV3pCZExESXBLMDFoZEdndWNHOTNLR04xY25KbGJuUldXekZkTFdOc2IzTmxjbFpiTVYwc01pa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1VHOXpVR1Z5WXlBOUlHUnBjM1JoYm1ObElEOGdUV0YwYUM1dGFXNG9aR2x6ZEdGdVkyVXZNaXh5YjNWdVpDa3ZaR2x6ZEdGdVkyVWdPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RsZ2dQU0J2V0NBOUlHTjFjbkpsYm5SV1d6QmRLeWhqYkc5elpYSldXekJkTFdOMWNuSmxiblJXV3pCZEtTcHVaWGRRYjNOUVpYSmpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGxrZ1BTQnZXU0E5SUdOMWNuSmxiblJXV3pGZEt5aGpiRzl6WlhKV1d6RmRMV04xY25KbGJuUldXekZkS1NwdVpYZFFiM05RWlhKak8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVmdnUFNCMldDMG9kbGd0WTNWeWNtVnVkRlpiTUYwcEtuSnZkVzVrUTI5eWJtVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVZrZ1BTQjJXUzBvZGxrdFkzVnljbVZ1ZEZaYk1WMHBLbkp2ZFc1a1EyOXlibVZ5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyeHZibVZrWDNCaGRHZ3VjMlYwVkhKcGNHeGxRWFFvZGxnc2Rsa3NiMWdzYjFrc2FWZ3NhVmtzYVc1a1pYZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ2dLejBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOc2IyNWxaRjl3WVhSb0xuTmxkRlJ5YVhCc1pVRjBLSEJoZEdndWRsdHBYVnN3WFN4d1lYUm9MblpiYVYxYk1WMHNjR0YwYUM1dlcybGRXekJkTEhCaGRHZ3ViMXRwWFZzeFhTeHdZWFJvTG1sYmFWMWJNRjBzY0dGMGFDNXBXMmxkV3pGZExHbHVaR1Y0S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ2dLejBnTVR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnlaWFIxY200Z1kyeHZibVZrWDNCaGRHZzdYSEpjYm4xY2NseHVYSEpjYmxKdmRXNWtRMjl5Ym1WeWMwMXZaR2xtYVdWeUxuQnliM1J2ZEhsd1pTNXdjbTlqWlhOelUyaGhjR1Z6SUQwZ1puVnVZM1JwYjI0b1ptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQjJZWElnYzJoaGNHVlFZWFJvY3p0Y2NseHVJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjBhR2x6TG5Ob1lYQmxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQjJZWElnYWl3Z2FreGxianRjY2x4dUlDQWdJSFpoY2lCeVpDQTlJSFJvYVhNdWNtUXVkanRjY2x4dVhISmNiaUFnSUNCcFppaHlaQ0FoUFQwZ01DbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITm9ZWEJsUkdGMFlTd2dibVYzVUdGMGFITXNJR3h2WTJGc1UyaGhjR1ZEYjJ4c1pXTjBhVzl1TzF4eVhHNGdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsUkdGMFlTQTlJSFJvYVhNdWMyaGhjR1Z6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdVpYZFFZWFJvY3lBOUlITm9ZWEJsUkdGMFlTNXphR0Z3WlM1d1lYUm9jenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiRzlqWVd4VGFHRndaVU52Ykd4bFkzUnBiMjRnUFNCemFHRndaVVJoZEdFdWJHOWpZV3hUYUdGd1pVTnZiR3hsWTNScGIyNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0VvSVhOb1lYQmxSR0YwWVM1emFHRndaUzV0WkdZZ0ppWWdJWFJvYVhNdWJXUm1JQ1ltSUNGbWFYSnpkRVp5WVcxbEtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGJGTm9ZWEJsUTI5c2JHVmpkR2x2Ymk1eVpXeGxZWE5sVTJoaGNHVnpLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRndaVVJoZEdFdWMyaGhjR1V1YldSbUlEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZWEJsVUdGMGFITWdQU0J6YUdGd1pVUmhkR0V1YzJoaGNHVXVjR0YwYUhNdWMyaGhjR1Z6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FreGxiaUE5SUhOb1lYQmxSR0YwWVM1emFHRndaUzV3WVhSb2N5NWZiR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0dvOU1EdHFQR3BNWlc0N2FpczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzlqWVd4VGFHRndaVU52Ykd4bFkzUnBiMjR1WVdSa1UyaGhjR1VvZEdocGN5NXdjbTlqWlhOelVHRjBhQ2h6YUdGd1pWQmhkR2h6VzJwZExISmtLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVkVZWFJoTG5Ob1lYQmxMbkJoZEdoeklEMGdjMmhoY0dWRVlYUmhMbXh2WTJGc1UyaGhjR1ZEYjJ4c1pXTjBhVzl1TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeTVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JseHlYRzVUYUdGd1pVMXZaR2xtYVdWeWN5NXlaV2RwYzNSbGNrMXZaR2xtYVdWeUtDZHlaQ2NzVW05MWJtUkRiM0p1WlhKelRXOWthV1pwWlhJcE8xeHVablZ1WTNScGIyNGdVbVZ3WldGMFpYSk5iMlJwWm1sbGNpZ3BlMzA3WEhKY2JsSmxjR1ZoZEdWeVRXOWthV1pwWlhJdWNISnZkRzkwZVhCbExuQnliMk5sYzNOTFpYbHpJRDBnWm5WdVkzUnBiMjRvWm05eVkyVlNaVzVrWlhJcGUxeHlYRzRnSUNBZ2FXWW9kR2hwY3k1bGJHVnRMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVkpaQ0E5UFQwZ2RHaHBjeTVtY21GdFpVbGtJQ1ltSUNGbWIzSmpaVkpsYm1SbGNpbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1dFpHWWdQU0JtYjNKalpWSmxibVJsY2lBL0lIUnlkV1VnT2lCbVlXeHpaVHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzRnUFNCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFEdGNjbHh1WEhKY2JpQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE5iYVYwdVoyVjBWbUZzZFdVb0tUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpXMmxkTG0xa1ppbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldSbUlEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1U1pYQmxZWFJsY2sxdlpHbG1hV1Z5TG5CeWIzUnZkSGx3WlM1cGJtbDBUVzlrYVdacFpYSlFjbTl3WlhKMGFXVnpJRDBnWm5WdVkzUnBiMjRvWld4bGJTeGtZWFJoS1h0Y2NseHVJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxuQnliMk5sYzNOTFpYbHpPMXh5WEc0Z0lDQWdkR2hwY3k1aklEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExtTXNNQ3h1ZFd4c0xIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnZEdocGN5NXZJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9aV3hsYlN4a1lYUmhMbThzTUN4dWRXeHNMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ2RHaHBjeTUwY2lBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0dWc1pXMHNaR0YwWVM1MGNpd3lMRzUxYkd3c2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0IwYUdsekxtUmhkR0VnUFNCa1lYUmhPMXh5WEc0Z0lDQWdhV1lvSVhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbEtIUnlkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NXdUV0YwY21sNElEMGdibVYzSUUxaGRISnBlQ2dwTzF4eVhHNGdJQ0FnZEdocGN5NXlUV0YwY21sNElEMGdibVYzSUUxaGRISnBlQ2dwTzF4eVhHNGdJQ0FnZEdocGN5NXpUV0YwY21sNElEMGdibVYzSUUxaGRISnBlQ2dwTzF4eVhHNGdJQ0FnZEdocGN5NTBUV0YwY21sNElEMGdibVYzSUUxaGRISnBlQ2dwTzF4eVhHNGdJQ0FnZEdocGN5NXRZWFJ5YVhnZ1BTQnVaWGNnVFdGMGNtbDRLQ2s3WEhKY2JuMDdYSEpjYmx4eVhHNVNaWEJsWVhSbGNrMXZaR2xtYVdWeUxuQnliM1J2ZEhsd1pTNWhjSEJzZVZSeVlXNXpabTl5YlhNZ1BTQm1kVzVqZEdsdmJpaHdUV0YwY21sNExDQnlUV0YwY21sNExDQnpUV0YwY21sNExDQjBjbUZ1YzJadmNtMHNJSEJsY21Nc0lHbHVkaWw3WEhKY2JpQWdJQ0IyWVhJZ1pHbHlJRDBnYVc1MklEOGdMVEVnT2lBeE8xeHlYRzRnSUNBZ2RtRnlJSE5qWVd4bFdDQTlJSFJ5WVc1elptOXliUzV6TG5aYk1GMGdLeUFvTVNBdElIUnlZVzV6Wm05eWJTNXpMblpiTUYwcElDb2dLREVnTFNCd1pYSmpLVHRjY2x4dUlDQWdJSFpoY2lCelkyRnNaVmtnUFNCMGNtRnVjMlp2Y20wdWN5NTJXekZkSUNzZ0tERWdMU0IwY21GdWMyWnZjbTB1Y3k1Mld6RmRLU0FxSUNneElDMGdjR1Z5WXlrN1hISmNiaUFnSUNCd1RXRjBjbWw0TG5SeVlXNXpiR0YwWlNoMGNtRnVjMlp2Y20wdWNDNTJXekJkSUNvZ1pHbHlJQ29nY0dWeVl5d2dkSEpoYm5ObWIzSnRMbkF1ZGxzeFhTQXFJR1JwY2lBcUlIQmxjbU1zSUhSeVlXNXpabTl5YlM1d0xuWmJNbDBwTzF4eVhHNGdJQ0FnY2sxaGRISnBlQzUwY21GdWMyeGhkR1VvTFhSeVlXNXpabTl5YlM1aExuWmJNRjBzSUMxMGNtRnVjMlp2Y20wdVlTNTJXekZkTENCMGNtRnVjMlp2Y20wdVlTNTJXekpkS1R0Y2NseHVJQ0FnSUhKTllYUnlhWGd1Y205MFlYUmxLQzEwY21GdWMyWnZjbTB1Y2k1MklDb2daR2x5SUNvZ2NHVnlZeWs3WEhKY2JpQWdJQ0J5VFdGMGNtbDRMblJ5WVc1emJHRjBaU2gwY21GdWMyWnZjbTB1WVM1Mld6QmRMQ0IwY21GdWMyWnZjbTB1WVM1Mld6RmRMQ0IwY21GdWMyWnZjbTB1WVM1Mld6SmRLVHRjY2x4dUlDQWdJSE5OWVhSeWFYZ3VkSEpoYm5Oc1lYUmxLQzEwY21GdWMyWnZjbTB1WVM1Mld6QmRMQ0F0ZEhKaGJuTm1iM0p0TG1FdWRsc3hYU3dnZEhKaGJuTm1iM0p0TG1FdWRsc3lYU2s3WEhKY2JpQWdJQ0J6VFdGMGNtbDRMbk5qWVd4bEtHbHVkaUEvSURFdmMyTmhiR1ZZSURvZ2MyTmhiR1ZZTENCcGJuWWdQeUF4TDNOallXeGxXU0E2SUhOallXeGxXU2s3WEhKY2JpQWdJQ0J6VFdGMGNtbDRMblJ5WVc1emJHRjBaU2gwY21GdWMyWnZjbTB1WVM1Mld6QmRMQ0IwY21GdWMyWnZjbTB1WVM1Mld6RmRMQ0IwY21GdWMyWnZjbTB1WVM1Mld6SmRLVHRjY2x4dWZWeHlYRzVjY2x4dVVtVndaV0YwWlhKTmIyUnBabWxsY2k1d2NtOTBiM1I1Y0dVdWFXNXBkQ0E5SUdaMWJtTjBhVzl1S0dWc1pXMHNJR0Z5Y2l3Z2NHOXpMQ0JsYkdWdGMwUmhkR0VzSUdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1NCN1hISmNiaUFnSUNCMGFHbHpMbVZzWlcwZ1BTQmxiR1Z0TzF4eVhHNGdJQ0FnZEdocGN5NWhjbklnUFNCaGNuSTdYSEpjYmlBZ0lDQjBhR2x6TG5CdmN5QTlJSEJ2Y3p0Y2NseHVJQ0FnSUhSb2FYTXVaV3hsYlhORVlYUmhJRDBnWld4bGJYTkVZWFJoTzF4eVhHNGdJQ0FnZEdocGN5NWZZM1Z5Y21WdWRFTnZjR2xsY3lBOUlEQTdYSEpjYmlBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwY3lBOUlGdGRPMXh5WEc0Z0lDQWdkR2hwY3k1ZlozSnZkWEJ6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG1aeVlXMWxTV1FnUFNBdE1UdGNjbHh1SUNBZ0lIUm9hWE11YVc1cGRFMXZaR2xtYVdWeVVISnZjR1Z5ZEdsbGN5aGxiR1Z0TEdGeWNsdHdiM05kS1R0Y2NseHVJQ0FnSUhaaGNpQmpiMjUwSUQwZ01EdGNjbHh1SUNBZ0lIZG9hV3hsS0hCdmN6NHdLWHRjY2x4dUlDQWdJQ0FnSUNCd2IzTWdMVDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQXZMM1JvYVhNdVgyVnNaVzFsYm5SekxuVnVjMmhwWm5Rb1lYSnlMbk53YkdsalpTaHdiM01zTVNsYk1GMHBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUnpMblZ1YzJocFpuUW9ZWEp5VzNCdmMxMHBPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJuUWdLejBnTVR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE11YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXNnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUdSNWJtRnRhV05RY205d1pYSjBhV1Z6TG5CMWMyZ29kR2hwY3lrN1hISmNiaUFnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWRsZEZaaGJIVmxLSFJ5ZFdVcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVTWlhCbFlYUmxjazF2WkdsbWFXVnlMbkJ5YjNSdmRIbHdaUzV5WlhObGRFVnNaVzFsYm5SeklEMGdablZ1WTNScGIyNG9aV3hsYldWdWRITXBlMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUdWc1pXMWxiblJ6TG14bGJtZDBhRHRjY2x4dUlDQWdJR1p2Y2locElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEhOYmFWMHVYM0J5YjJObGMzTmxaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHVnNaVzFsYm5SelcybGRMblI1SUQwOVBTQW5aM0luS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWE5sZEVWc1pXMWxiblJ6S0dWc1pXMWxiblJ6VzJsZExtbDBLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNibEpsY0dWaGRHVnlUVzlrYVdacFpYSXVjSEp2ZEc5MGVYQmxMbU5zYjI1bFJXeGxiV1Z1ZEhNZ1BTQm1kVzVqZEdsdmJpaGxiR1Z0Wlc1MGN5bDdYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnWld4bGJXVnVkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdkbUZ5SUc1bGQwVnNaVzFsYm5SeklEMGdTbE5QVGk1d1lYSnpaU2hLVTA5T0xuTjBjbWx1WjJsbWVTaGxiR1Z0Wlc1MGN5a3BPMXh5WEc0Z0lDQWdkR2hwY3k1eVpYTmxkRVZzWlcxbGJuUnpLRzVsZDBWc1pXMWxiblJ6S1R0Y2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhkRmJHVnRaVzUwY3p0Y2NseHVmVnh5WEc1Y2NseHVVbVZ3WldGMFpYSk5iMlJwWm1sbGNpNXdjbTkwYjNSNWNHVXVZMmhoYm1kbFIzSnZkWEJTWlc1a1pYSWdQU0JtZFc1amRHbHZiaWhsYkdWdFpXNTBjeXdnY21WdVpHVnlSbXhoWnlrZ2UxeHlYRzRnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJR1ZzWlcxbGJuUnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaWhwSUQwZ01Ec2dhU0E4SUd4bGJpQTdJR2tnS3owZ01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblJ6VzJsZExsOXlaVzVrWlhJZ1BTQnlaVzVrWlhKR2JHRm5PMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHVnNaVzFsYm5SelcybGRMblI1SUQwOVBTQW5aM0luS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMmhoYm1kbFIzSnZkWEJTWlc1a1pYSW9aV3hsYldWdWRITmJhVjB1YVhRc0lISmxibVJsY2tac1lXY3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVVbVZ3WldGMFpYSk5iMlJwWm1sbGNpNXdjbTkwYjNSNWNHVXVjSEp2WTJWemMxTm9ZWEJsY3lBOUlHWjFibU4wYVc5dUtHWnBjbk4wUm5KaGJXVXBlMXh5WEc1Y2NseHVJQ0FnSUdsbUtIUm9hWE11Wld4bGJTNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFNXUWdQVDA5SUhSb2FYTXVabkpoYldWSlpDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1bWNtRnRaVWxrSUQwZ2RHaHBjeTVsYkdWdExtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpEdGNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWekxteGxibWQwYUNBbUppQWhabWx5YzNSR2NtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WkdZZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kyOXdhV1Z6SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11WXk1MktUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbDluY205MWNITXViR1Z1WjNSb0lEd2dZMjl3YVdWektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VvZEdocGN5NWZaM0p2ZFhCekxteGxibWQwYUNBOElHTnZjR2xsY3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWjNKdmRYQWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhWFE2ZEdocGN5NWpiRzl1WlVWc1pXMWxiblJ6S0hSb2FYTXVYMlZzWlcxbGJuUnpLU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlVG9uWjNJblhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuY205MWNDNXBkQzV3ZFhOb0tIdGNJbUZjSWpwN1hDSmhYQ0k2TUN4Y0ltbDRYQ0k2TVN4Y0ltdGNJanBiTUN3d1hYMHNYQ0p1YlZ3aU9sd2lWSEpoYm5ObWIzSnRYQ0lzWENKdlhDSTZlMXdpWVZ3aU9qQXNYQ0pwZUZ3aU9qY3NYQ0pyWENJNk1UQXdmU3hjSW5CY0lqcDdYQ0poWENJNk1DeGNJbWw0WENJNk1peGNJbXRjSWpwYk1Dd3dYWDBzWENKeVhDSTZlMXdpWVZ3aU9qQXNYQ0pwZUZ3aU9qWXNYQ0pyWENJNk1IMHNYQ0p6WENJNmUxd2lZVndpT2pBc1hDSnBlRndpT2pNc1hDSnJYQ0k2V3pFd01Dd3hNREJkZlN4Y0luTmhYQ0k2ZTF3aVlWd2lPakFzWENKcGVGd2lPalVzWENKclhDSTZNSDBzWENKemExd2lPbnRjSW1GY0lqb3dMRndpYVhoY0lqbzBMRndpYTF3aU9qQjlMRndpZEhsY0lqcGNJblJ5WENKOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhjbkl1YzNCc2FXTmxLREFzTUN4bmNtOTFjQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDluY205MWNITXVjM0JzYVdObEtEQXNNQ3huY205MWNDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOWpkWEp5Wlc1MFEyOXdhV1Z6SUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdExuSmxiRzloWkZOb1lYQmxjeWdwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTd2dZMjl1ZENBOUlEQXNJSEpsYm1SbGNrWnNZV2M3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBd095QnBJQ0E4UFNCMGFHbHpMbDluY205MWNITXViR1Z1WjNSb0lDMGdNVHNnYVNBclBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVJteGhaeUE5SUdOdmJuUWdQQ0JqYjNCcFpYTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJkeWIzVndjMXRwWFM1ZmNtVnVaR1Z5SUQwZ2NtVnVaR1Z5Um14aFp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYUdGdVoyVkhjbTkxY0ZKbGJtUmxjaWgwYUdsekxsOW5jbTkxY0hOYmFWMHVhWFFzSUhKbGJtUmxja1pzWVdjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WDJOMWNuSmxiblJEYjNCcFpYTWdQU0JqYjNCcFpYTTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0TG1acGNuTjBSbkpoYldVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDOHZMeTljY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUc5bVpuTmxkQ0E5SUhSb2FYTXVieTUyTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ2Wm1aelpYUk5iMlIxYkc4Z1BTQnZabVp6WlhRbE1UdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NtOTFibVJQWm1aelpYUWdQU0J2Wm1aelpYUWdQaUF3SUQ4Z1RXRjBhQzVtYkc5dmNpaHZabVp6WlhRcElEb2dUV0YwYUM1alpXbHNLRzltWm5ObGRDazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHczdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIUk5ZWFFnUFNCMGFHbHpMblJ5TG5ZdWNISnZjSE03WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJRY205d2N5QTlJSFJvYVhNdWNFMWhkSEpwZUM1d2NtOXdjenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjbEJ5YjNCeklEMGdkR2hwY3k1eVRXRjBjbWw0TG5CeWIzQnpPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnpVSEp2Y0hNZ1BTQjBhR2x6TG5OTllYUnlhWGd1Y0hKdmNITTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdUV0YwY21sNExuSmxjMlYwS0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1eVRXRjBjbWw0TG5KbGMyVjBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6VFdGMGNtbDRMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBUV0YwY21sNExuSmxjMlYwS0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFlYUnlhWGd1Y21WelpYUW9LVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhWFJsY21GMGFXOXVJRDBnTUR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb2IyWm1jMlYwSUQ0Z01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhR2xzWlNocGRHVnlZWFJwYjI0OGNtOTFibVJQWm1aelpYUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhjSEJzZVZSeVlXNXpabTl5YlhNb2RHaHBjeTV3VFdGMGNtbDRMQ0IwYUdsekxuSk5ZWFJ5YVhnc0lIUm9hWE11YzAxaGRISnBlQ3dnZEdocGN5NTBjaXdnTVN3Z1ptRnNjMlVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxjbUYwYVc5dUlDczlJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvYjJabWMyVjBUVzlrZFd4dktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlYQndiSGxVY21GdWMyWnZjbTF6S0hSb2FYTXVjRTFoZEhKcGVDd2dkR2hwY3k1eVRXRjBjbWw0TENCMGFHbHpMbk5OWVhSeWFYZ3NJSFJvYVhNdWRISXNJRzltWm5ObGRFMXZaSFZzYnl3Z1ptRnNjMlVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxjbUYwYVc5dUlDczlJRzltWm5ObGRFMXZaSFZzYnp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaHZabVp6WlhRZ1BDQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bEtHbDBaWEpoZEdsdmJqNXliM1Z1WkU5bVpuTmxkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZ3Y0d4NVZISmhibk5tYjNKdGN5aDBhR2x6TG5CTllYUnlhWGdzSUhSb2FYTXVjazFoZEhKcGVDd2dkR2hwY3k1elRXRjBjbWw0TENCMGFHbHpMblJ5TENBeExDQjBjblZsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBaWEpoZEdsdmJpQXRQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0c5bVpuTmxkRTF2WkhWc2J5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRndjR3g1VkhKaGJuTm1iM0p0Y3loMGFHbHpMbkJOWVhSeWFYZ3NJSFJvYVhNdWNrMWhkSEpwZUN3Z2RHaHBjeTV6VFdGMGNtbDRMQ0IwYUdsekxuUnlMQ0F0SUc5bVpuTmxkRTF2WkhWc2J5d2dkSEoxWlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z5WVhScGIyNGdMVDBnYjJabWMyVjBUVzlrZFd4dk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdrZ1BTQjBhR2x6TG1SaGRHRXViU0E5UFQwZ01TQS9JREFnT2lCMGFHbHpMbDlqZFhKeVpXNTBRMjl3YVdWeklDMGdNVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaR2x5SUQwZ2RHaHBjeTVrWVhSaExtMGdQVDA5SURFZ1B5QXhJRG9nTFRFN1hISmNiaUFnSUNBZ0lDQWdZMjl1ZENBOUlIUm9hWE11WDJOMWNuSmxiblJEYjNCcFpYTTdYSEpjYmlBZ0lDQWdJQ0FnZDJocGJHVW9ZMjl1ZENsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHbDBaWEpoZEdsdmJpQWhQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWdvYVNBaFBUMGdNQ0FtSmlCa2FYSWdQVDA5SURFcElIeDhJQ2hwSUNFOVBTQjBhR2x6TGw5amRYSnlaVzUwUTI5d2FXVnpJQzBnTVNBbUppQmthWElnUFQwOUlDMHhLU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aGNIQnNlVlJ5WVc1elptOXliWE1vZEdocGN5NXdUV0YwY21sNExDQjBhR2x6TG5KTllYUnlhWGdzSUhSb2FYTXVjMDFoZEhKcGVDd2dkR2hwY3k1MGNpd2dNU3dnWm1Gc2MyVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WVhSeWFYZ3VkSEpoYm5ObWIzSnRLSEpRY205d2Mxc3dYU3h5VUhKdmNITmJNVjBzY2xCeWIzQnpXekpkTEhKUWNtOXdjMXN6WFN4eVVISnZjSE5iTkYwc2NsQnliM0J6V3pWZExISlFjbTl3YzFzMlhTeHlVSEp2Y0hOYk4xMHNjbEJ5YjNCeld6aGRMSEpRY205d2MxczVYU3h5VUhKdmNITmJNVEJkTEhKUWNtOXdjMXN4TVYwc2NsQnliM0J6V3pFeVhTeHlVSEp2Y0hOYk1UTmRMSEpRY205d2Mxc3hORjBzY2xCeWIzQnpXekUxWFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRISnBlQzUwY21GdWMyWnZjbTBvYzFCeWIzQnpXekJkTEhOUWNtOXdjMXN4WFN4elVISnZjSE5iTWwwc2MxQnliM0J6V3pOZExITlFjbTl3YzFzMFhTeHpVSEp2Y0hOYk5WMHNjMUJ5YjNCeld6WmRMSE5RY205d2MxczNYU3h6VUhKdmNITmJPRjBzYzFCeWIzQnpXemxkTEhOUWNtOXdjMXN4TUYwc2MxQnliM0J6V3pFeFhTeHpVSEp2Y0hOYk1USmRMSE5RY205d2Mxc3hNMTBzYzFCeWIzQnpXekUwWFN4elVISnZjSE5iTVRWZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0TG5SeVlXNXpabTl5YlNod1VISnZjSE5iTUYwc2NGQnliM0J6V3pGZExIQlFjbTl3YzFzeVhTeHdVSEp2Y0hOYk0xMHNjRkJ5YjNCeld6UmRMSEJRY205d2MxczFYU3h3VUhKdmNITmJObDBzY0ZCeWIzQnpXemRkTEhCUWNtOXdjMXM0WFN4d1VISnZjSE5iT1Ywc2NGQnliM0J6V3pFd1hTeHdVSEp2Y0hOYk1URmRMSEJRY205d2Mxc3hNbDBzY0ZCeWIzQnpXekV6WFN4d1VISnZjSE5iTVRSZExIQlFjbTl3YzFzeE5WMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHbDBaVzF6SUQwZ2RHaHBjeTVsYkdWdGMwUmhkR0ZiYVYwdWFYUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FYUmxiWE5VY21GdWMyWnZjbTBnUFNCcGRHVnRjMXRwZEdWdGN5NXNaVzVuZEdnZ0xTQXhYUzUwY21GdWMyWnZjbTB1YlZCeWIzQnpMbll1Y0hKdmNITTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2Fpd2dha3hsYmlBOUlHbDBaVzF6VkhKaGJuTm1iM0p0TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHFQVEE3YWp4cVRHVnVPMm9yUFRFcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRjMVJ5WVc1elptOXliVnRxWFNBOUlIUm9hWE11YldGMGNtbDRMbkJ5YjNCelcycGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WVhSeWFYZ3VjbVZ6WlhRb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FYUmxiWE1nUFNCMGFHbHpMbVZzWlcxelJHRjBZVnRwWFM1cGREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGRHVnRjMVJ5WVc1elptOXliU0E5SUdsMFpXMXpXMmwwWlcxekxteGxibWQwYUNBdElERmRMblJ5WVc1elptOXliUzV0VUhKdmNITXVkaTV3Y205d2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcUxDQnFUR1Z1SUQwZ2FYUmxiWE5VY21GdWMyWnZjbTB1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMXpWSEpoYm5ObWIzSnRXMnBkSUQwZ2RHaHBjeTV0WVhSeWFYZ3VjSEp2Y0hOYmFsMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhWFJsY21GMGFXOXVJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUWdMVDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVNBclBTQmthWEk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVTWlhCbFlYUmxjazF2WkdsbWFXVnlMbkJ5YjNSdmRIbHdaUzVoWkdSVGFHRndaU0E5SUdaMWJtTjBhVzl1S0NsN2ZWeHlYRzVjY2x4dVUyaGhjR1ZOYjJScFptbGxjbk11Y21WbmFYTjBaWEpOYjJScFptbGxjaWduY25BbkxGSmxjR1ZoZEdWeVRXOWthV1pwWlhJcE8xeHVablZ1WTNScGIyNGdVMmhoY0dWRGIyeHNaV04wYVc5dUtDbDdYSEpjYmx4MGRHaHBjeTVmYkdWdVozUm9JRDBnTUR0Y2NseHVYSFIwYUdsekxsOXRZWGhNWlc1bmRHZ2dQU0EwTzF4eVhHNWNkSFJvYVhNdWMyaGhjR1Z6SUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN4N2JHVnVaM1JvT25Sb2FYTXVYMjFoZUV4bGJtZDBhSDBwTzF4eVhHNTlPMXh5WEc1Y2NseHVVMmhoY0dWRGIyeHNaV04wYVc5dUxuQnliM1J2ZEhsd1pTNWhaR1JUYUdGd1pTQTlJR1oxYm1OMGFXOXVLSE5vWVhCbFJHRjBZU2w3WEhKY2JseDBhV1lvZEdocGN5NWZiR1Z1WjNSb0lEMDlQU0IwYUdsekxsOXRZWGhNWlc1bmRHZ3BlMXh5WEc1Y2RGeDBkR2hwY3k1emFHRndaWE1nUFNCMGFHbHpMbk5vWVhCbGN5NWpiMjVqWVhRb1FYSnlZWGt1WVhCd2JIa29iblZzYkN4N2JHVnVaM1JvT25Sb2FYTXVYMjFoZUV4bGJtZDBhSDBwS1R0Y2NseHVYSFJjZEhSb2FYTXVYMjFoZUV4bGJtZDBhQ0FxUFNBeU8xeHlYRzVjZEgxY2NseHVYSFIwYUdsekxuTm9ZWEJsYzF0MGFHbHpMbDlzWlc1bmRHaGRJRDBnYzJoaGNHVkVZWFJoTzF4eVhHNWNkSFJvYVhNdVgyeGxibWQwYUNBclBTQXhPMXh5WEc1OU8xeHlYRzVjY2x4dVUyaGhjR1ZEYjJ4c1pXTjBhVzl1TG5CeWIzUnZkSGx3WlM1eVpXeGxZWE5sVTJoaGNHVnpJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVYSFIyWVhJZ2FUdGNjbHh1WEhSbWIzSW9hU0E5SURBN0lHa2dQQ0IwYUdsekxsOXNaVzVuZEdnN0lHa2dLejBnTVNrZ2UxeHlYRzVjZEZ4MGMyaGhjR1ZmY0c5dmJDNXlaV3hsWVhObEtIUm9hWE11YzJoaGNHVnpXMmxkS1R0Y2NseHVYSFI5WEhKY2JseDBkR2hwY3k1ZmJHVnVaM1JvSUQwZ01EdGNjbHh1ZlR0Y2JuWmhjaUJKYldGblpWQnlaV3h2WVdSbGNpQTlJQ2htZFc1amRHbHZiaWdwZTF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJwYldGblpYTk1iMkZrWldSRFlqdGNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJwYldGblpVeHZZV1JsWkNncGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHOWhaR1ZrUVhOelpYUnpJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NXNiMkZrWldSQmMzTmxkSE1nUFQwOUlIUm9hWE11ZEc5MFlXeEpiV0ZuWlhNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHBiV0ZuWlhOTWIyRmtaV1JEWWlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWelRHOWhaR1ZrUTJJb2JuVnNiQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdaMlYwUVhOelpYUnpVR0YwYUNoaGMzTmxkRVJoZEdFcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCd1lYUm9JRDBnSnljN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWhjM05sZEhOUVlYUm9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdFlXZGxVR0YwYUNBOUlHRnpjMlYwUkdGMFlTNXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhwYldGblpWQmhkR2d1YVc1a1pYaFBaaWduYVcxaFoyVnpMeWNwSUNFOVBTQXRNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJXRm5aVkJoZEdnZ1BTQnBiV0ZuWlZCaGRHZ3VjM0JzYVhRb0p5OG5LVnN4WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb0lEMGdkR2hwY3k1aGMzTmxkSE5RWVhSb0lDc2dhVzFoWjJWUVlYUm9PMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdnZ1BTQjBhR2x6TG5CaGRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2dnS3owZ1lYTnpaWFJFWVhSaExuVWdQeUJoYzNObGRFUmhkR0V1ZFNBNklDY25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWFJvSUNzOUlHRnpjMlYwUkdGMFlTNXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHRjBhRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCc2IyRmtTVzFoWjJVb2NHRjBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x0WnlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJsdFp5Y3BPMXh5WEc0Z0lDQWdJQ0FnSUdsdFp5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHNiMkZrSnl3Z2FXMWhaMlZNYjJGa1pXUXVZbWx1WkNoMGFHbHpLU3dnWm1Gc2MyVXBPMXh5WEc0Z0lDQWdJQ0FnSUdsdFp5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGxjbkp2Y2ljc0lHbHRZV2RsVEc5aFpHVmtMbUpwYm1Rb2RHaHBjeWtzSUdaaGJITmxLVHRjY2x4dUlDQWdJQ0FnSUNCcGJXY3VjM0pqSUQwZ2NHRjBhRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR3h2WVdSQmMzTmxkSE1vWVhOelpYUnpMQ0JqWWlsN1hISmNiaUFnSUNBZ0lDQWdhVzFoWjJWelRHOWhaR1ZrUTJJZ1BTQmpZanRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblJ2ZEdGc1FYTnpaWFJ6SUQwZ1lYTnpaWFJ6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGRHaHBjeTUwYjNSaGJFRnpjMlYwY3p0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvSVdGemMyVjBjMXRwWFM1c1lYbGxjbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOWhaRWx0WVdkbExtSnBibVFvZEdocGN5a29aMlYwUVhOelpYUnpVR0YwYUM1aWFXNWtLSFJvYVhNcEtHRnpjMlYwYzF0cFhTa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBiM1JoYkVsdFlXZGxjeUFyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhObGRGQmhkR2dvY0dGMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdZWFJvSUQwZ2NHRjBhQ0I4ZkNBbkp6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ6WlhSQmMzTmxkSE5RWVhSb0tIQmhkR2dwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhOelpYUnpVR0YwYUNBOUlIQmhkR2dnZkh3Z0p5YzdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJRWx0WVdkbFVISmxiRzloWkdWeUtDbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNiMkZrUVhOelpYUnpJRDBnYkc5aFpFRnpjMlYwY3p0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRnpjMlYwYzFCaGRHZ2dQU0J6WlhSQmMzTmxkSE5RWVhSb08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBVR0YwYUNBOUlITmxkRkJoZEdnN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aGMzTmxkSE5RWVhSb0lEMGdKeWM3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3WVhSb0lEMGdKeWM3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYjNSaGJFRnpjMlYwY3lBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBiM1JoYkVsdFlXZGxjeUE5SURBN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c2IyRmtaV1JCYzNObGRITWdQU0F3TzF4eVhHNGdJQ0FnZlZ4eVhHNTlLQ2twTzF4dWRtRnlJR1psWVhSMWNtVlRkWEJ3YjNKMElEMGdLR1oxYm1OMGFXOXVLQ2w3WEhKY2JseDBkbUZ5SUc5aUlEMGdlMXh5WEc1Y2RGeDBiV0Z6YTFSNWNHVTZJSFJ5ZFdWY2NseHVYSFI5WEhKY2JseDBhV1lnS0M5TlUwbEZJREV3TDJrdWRHVnpkQ2h1WVhacFoyRjBiM0l1ZFhObGNrRm5aVzUwS1NCOGZDQXZUVk5KUlNBNUwya3VkR1Z6ZENodVlYWnBaMkYwYjNJdWRYTmxja0ZuWlc1MEtTQjhmQ0F2Y25ZNk1URXVNQzlwTG5SbGMzUW9ibUYyYVdkaGRHOXlMblZ6WlhKQloyVnVkQ2tnZkh3Z0wwVmtaMlZjWEM5Y1hHUXVMMmt1ZEdWemRDaHVZWFpwWjJGMGIzSXVkWE5sY2tGblpXNTBLU2tnZTF4eVhHNWNkQ0FnSUc5aUxtMWhjMnRVZVhCbElEMGdabUZzYzJVN1hISmNibHgwZlZ4eVhHNWNkSEpsZEhWeWJpQnZZanRjY2x4dWZTZ3BLVHRjYm5aaGNpQm1hV3gwWlhKelJtRmpkRzl5ZVNBOUlDaG1kVzVqZEdsdmJpZ3BlMXh5WEc1Y2RIWmhjaUJ2WWlBOUlIdDlPMXh5WEc1Y2RHOWlMbU55WldGMFpVWnBiSFJsY2lBOUlHTnlaV0YwWlVacGJIUmxjanRjY2x4dVhIUnZZaTVqY21WaGRHVkJiSEJvWVZSdlRIVnRhVzVoYm1ObFJtbHNkR1Z5SUQwZ1kzSmxZWFJsUVd4d2FHRlViMHgxYldsdVlXNWpaVVpwYkhSbGNqdGNjbHh1WEhKY2JseDBablZ1WTNScGIyNGdZM0psWVhSbFJtbHNkR1Z5S0dacGJFbGtLWHRjY2x4dUlDQWdJQ0FnSUNCY2RIWmhjaUJtYVd3Z1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJacGJIUmxjaWNwTzF4eVhHNGdJQ0FnSUNBZ0lGeDBabWxzTG5ObGRFRjBkSEpwWW5WMFpTZ25hV1FuTEdacGJFbGtLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGJDNXpaWFJCZEhSeWFXSjFkR1VvSjJacGJIUmxjbFZ1YVhSekp5d25iMkpxWldOMFFtOTFibVJwYm1kQ2IzZ25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGJDNXpaWFJCZEhSeWFXSjFkR1VvSjNnbkxDY3dKU2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptbHNMbk5sZEVGMGRISnBZblYwWlNnbmVTY3NKekFsSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1hV3d1YzJWMFFYUjBjbWxpZFhSbEtDZDNhV1IwYUNjc0p6RXdNQ1VuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnBiQzV6WlhSQmRIUnlhV0oxZEdVb0oyaGxhV2RvZENjc0p6RXdNQ1VuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWFXdzdYSEpjYmx4MGZWeHlYRzVjY2x4dVhIUm1kVzVqZEdsdmJpQmpjbVZoZEdWQmJIQm9ZVlJ2VEhWdGFXNWhibU5sUm1sc2RHVnlLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdabVZEYjJ4dmNrMWhkSEpwZUNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWm1WRGIyeHZjazFoZEhKcGVDY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1WRGIyeHZjazFoZEhKcGVDNXpaWFJCZEhSeWFXSjFkR1VvSjNSNWNHVW5MQ2R0WVhSeWFYZ25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdabFEyOXNiM0pOWVhSeWFYZ3VjMlYwUVhSMGNtbGlkWFJsS0NkamIyeHZjaTFwYm5SbGNuQnZiR0YwYVc5dUxXWnBiSFJsY25NbkxDZHpVa2RDSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1aVU52Ykc5eVRXRjBjbWw0TG5ObGRFRjBkSEpwWW5WMFpTZ25kbUZzZFdWekp5d25NQ0F3SURBZ01TQXdJQ0F3SURBZ01DQXhJREFnSURBZ01DQXdJREVnTUNBZ01DQXdJREFnTVNBeEp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabVZEYjJ4dmNrMWhkSEpwZUR0Y2NseHVYSFI5WEhKY2JseHlYRzVjZEhKbGRIVnliaUJ2WWp0Y2NseHVmU2dwS1Z4dVpuVnVZM1JwYjI0Z1ZHVjRkRUZ1YVcxaGRHOXlVSEp2Y0dWeWRIa29kR1Y0ZEVSaGRHRXNJSEpsYm1SbGNsUjVjR1VzSUdWc1pXMHBlMXh5WEc0Z0lDQWdkR2hwY3k1dFpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIUm9hWE11WDJacGNuTjBSbkpoYldVZ1BTQjBjblZsTzF4eVhHNWNkSFJvYVhNdVgyaGhjMDFoYzJ0bFpGQmhkR2dnUFNCbVlXeHpaVHRjY2x4dVhIUjBhR2x6TGw5bWNtRnRaVWxrSUQwZ0xURTdYSEpjYmx4MGRHaHBjeTVmWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1nUFNCYlhUdGNjbHh1WEhSMGFHbHpMbDkwWlhoMFJHRjBZU0E5SUhSbGVIUkVZWFJoTzF4eVhHNWNkSFJvYVhNdVgzSmxibVJsY2xSNWNHVWdQU0J5Wlc1a1pYSlVlWEJsTzF4eVhHNWNkSFJvYVhNdVgyVnNaVzBnUFNCbGJHVnRPMXh5WEc1Y2RIUm9hWE11WDJGdWFXMWhkRzl5YzBSaGRHRWdQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZkR2hwY3k1ZmRHVjRkRVJoZEdFdVlTNXNaVzVuZEdoOUtUdGNjbHh1WEhSMGFHbHpMbDl3WVhSb1JHRjBZU0E5SUh0OVhISmNibHgwZEdocGN5NWZiVzl5WlU5d2RHbHZibk1nUFNCN1hISmNibHgwWEhSaGJHbG5ibTFsYm5RNklIdDlYSEpjYmx4MGZUdGNjbHh1WEhSMGFHbHpMbkpsYm1SbGNtVmtUR1YwZEdWeWN5QTlJRnRkTzF4eVhHNGdJQ0FnZEdocGN5NXNaWFIwWlhKelEyaGhibWRsWkVac1lXY2dQU0JtWVd4elpUdGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JsUmxlSFJCYm1sdFlYUnZjbEJ5YjNCbGNuUjVMbkJ5YjNSdmRIbHdaUzV6WldGeVkyaFFjbTl3WlhKMGFXVnpJRDBnWm5WdVkzUnBiMjRvWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wZTF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11WDNSbGVIUkVZWFJoTG1FdWJHVnVaM1JvTENCaGJtbHRZWFJ2Y2tSaGRHRXNJR0Z1YVcxaGRHOXlVSEp2Y0hNN1hISmNiaUFnSUNCMllYSWdaMlYwVUhKdmNDQTlJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnZjbEJ5YjNCeklEMGdkR2hwY3k1ZmRHVjRkRVJoZEdFdVlWdHBYVHRjY2x4dUlDQWdJQ0FnSUNCaGJtbHRZWFJ2Y2tSaGRHRWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0U2SUh0OUxGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCek9pQjdmVnh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdhV1lvSjNJbklHbHVJR0Z1YVcxaGRHOXlVSEp2Y0hNdVlTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhSdmNrUmhkR0V1WVM1eUlEMGdaMlYwVUhKdmNDaDBhR2x6TGw5bGJHVnRMR0Z1YVcxaGRHOXlVSEp2Y0hNdVlTNXlMREFzWkdWblZHOVNZV1J6TEhSb2FYTXVYMlI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvSjNKNEp5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCekxtRXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZVzVwYldGMGIzSkVZWFJoTG1FdWNuZ2dQU0JuWlhSUWNtOXdLSFJvYVhNdVgyVnNaVzBzWVc1cGJXRjBiM0pRY205d2N5NWhMbko0TERBc1pHVm5WRzlTWVdSekxIUm9hWE11WDJSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb0ozSjVKeUJwYmlCaGJtbHRZWFJ2Y2xCeWIzQnpMbUVwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBiM0pFWVhSaExtRXVjbmtnUFNCblpYUlFjbTl3S0hSb2FYTXVYMlZzWlcwc1lXNXBiV0YwYjNKUWNtOXdjeTVoTG5KNUxEQXNaR1ZuVkc5U1lXUnpMSFJvYVhNdVgyUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9KM05ySnlCcGJpQmhibWx0WVhSdmNsQnliM0J6TG1FcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYjNKRVlYUmhMbUV1YzJzZ1BTQm5aWFJRY205d0tIUm9hWE11WDJWc1pXMHNZVzVwYldGMGIzSlFjbTl3Y3k1aExuTnJMREFzWkdWblZHOVNZV1J6TEhSb2FYTXVYMlI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvSjNOaEp5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCekxtRXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZVzVwYldGMGIzSkVZWFJoTG1FdWMyRWdQU0JuWlhSUWNtOXdLSFJvYVhNdVgyVnNaVzBzWVc1cGJXRjBiM0pRY205d2N5NWhMbk5oTERBc1pHVm5WRzlTWVdSekxIUm9hWE11WDJSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb0ozTW5JR2x1SUdGdWFXMWhkRzl5VUhKdmNITXVZU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZja1JoZEdFdVlTNXpJRDBnWjJWMFVISnZjQ2gwYUdsekxsOWxiR1Z0TEdGdWFXMWhkRzl5VUhKdmNITXVZUzV6TERFc01DNHdNU3gwYUdsekxsOWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LQ2RoSnlCcGJpQmhibWx0WVhSdmNsQnliM0J6TG1FcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYjNKRVlYUmhMbUV1WVNBOUlHZGxkRkJ5YjNBb2RHaHBjeTVmWld4bGJTeGhibWx0WVhSdmNsQnliM0J6TG1FdVlTd3hMREFzZEdocGN5NWZaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWduYnljZ2FXNGdZVzVwYldGMGIzSlFjbTl3Y3k1aEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnVhVzFoZEc5eVJHRjBZUzVoTG04Z1BTQm5aWFJRY205d0tIUm9hWE11WDJWc1pXMHNZVzVwYldGMGIzSlFjbTl3Y3k1aExtOHNNQ3d3TGpBeExIUm9hWE11WDJSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb0ozQW5JR2x1SUdGdWFXMWhkRzl5VUhKdmNITXVZU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZja1JoZEdFdVlTNXdJRDBnWjJWMFVISnZjQ2gwYUdsekxsOWxiR1Z0TEdGdWFXMWhkRzl5VUhKdmNITXVZUzV3TERFc01DeDBhR2x6TGw5a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtDZHpkeWNnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeTVoS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGdWFXMWhkRzl5UkdGMFlTNWhMbk4zSUQwZ1oyVjBVSEp2Y0NoMGFHbHpMbDlsYkdWdExHRnVhVzFoZEc5eVVISnZjSE11WVM1emR5d3dMREFzZEdocGN5NWZaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWduYzJNbklHbHVJR0Z1YVcxaGRHOXlVSEp2Y0hNdVlTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhSdmNrUmhkR0V1WVM1ell5QTlJR2RsZEZCeWIzQW9kR2hwY3k1ZlpXeGxiU3hoYm1sdFlYUnZjbEJ5YjNCekxtRXVjMk1zTVN3d0xIUm9hWE11WDJSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb0oyWmpKeUJwYmlCaGJtbHRZWFJ2Y2xCeWIzQnpMbUVwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBiM0pFWVhSaExtRXVabU1nUFNCblpYUlFjbTl3S0hSb2FYTXVYMlZzWlcwc1lXNXBiV0YwYjNKUWNtOXdjeTVoTG1aakxERXNNQ3gwYUdsekxsOWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LQ2RtYUNjZ2FXNGdZVzVwYldGMGIzSlFjbTl3Y3k1aEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnVhVzFoZEc5eVJHRjBZUzVoTG1ab0lEMGdaMlYwVUhKdmNDaDBhR2x6TGw5bGJHVnRMR0Z1YVcxaGRHOXlVSEp2Y0hNdVlTNW1hQ3d3TERBc2RHaHBjeTVmWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmlnblpuTW5JR2x1SUdGdWFXMWhkRzl5VUhKdmNITXVZU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZja1JoZEdFdVlTNW1jeUE5SUdkbGRGQnliM0FvZEdocGN5NWZaV3hsYlN4aGJtbHRZWFJ2Y2xCeWIzQnpMbUV1Wm5Nc01Dd3dMakF4TEhSb2FYTXVYMlI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvSjJaaUp5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCekxtRXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZVzVwYldGMGIzSkVZWFJoTG1FdVptSWdQU0JuWlhSUWNtOXdLSFJvYVhNdVgyVnNaVzBzWVc1cGJXRjBiM0pRY205d2N5NWhMbVppTERBc01DNHdNU3gwYUdsekxsOWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LQ2QwSnlCcGJpQmhibWx0WVhSdmNsQnliM0J6TG1FcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYjNKRVlYUmhMbUV1ZENBOUlHZGxkRkJ5YjNBb2RHaHBjeTVmWld4bGJTeGhibWx0WVhSdmNsQnliM0J6TG1FdWRDd3dMREFzZEdocGN5NWZaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQmhibWx0WVhSdmNrUmhkR0V1Y3lBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlVaWGgwVTJWc1pXTjBiM0pRY205d0tIUm9hWE11WDJWc1pXMHNZVzVwYldGMGIzSlFjbTl3Y3k1ekxIUm9hWE11WDJSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQmhibWx0WVhSdmNrUmhkR0V1Y3k1MElEMGdZVzVwYldGMGIzSlFjbTl3Y3k1ekxuUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZVzVwYldGMGIzSnpSR0YwWVZ0cFhTQTlJR0Z1YVcxaGRHOXlSR0YwWVR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11WDNSbGVIUkVZWFJoTG5BZ0ppWWdKMjBuSUdsdUlIUm9hWE11WDNSbGVIUkVZWFJoTG5BcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVgzQmhkR2hFWVhSaElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1PaUJuWlhSUWNtOXdLSFJvYVhNdVgyVnNaVzBzZEdocGN5NWZkR1Y0ZEVSaGRHRXVjQzVtTERBc01DeDBhR2x6TGw5a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd3NklHZGxkRkJ5YjNBb2RHaHBjeTVmWld4bGJTeDBhR2x6TGw5MFpYaDBSR0YwWVM1d0xtd3NNQ3d3TEhSb2FYTXVYMlI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjam9nZEdocGN5NWZkR1Y0ZEVSaGRHRXVjQzV5TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0T2lCMGFHbHpMbDlsYkdWdExtMWhjMnROWVc1aFoyVnlMbWRsZEUxaGMydFFjbTl3WlhKMGVTaDBhR2x6TGw5MFpYaDBSR0YwWVM1d0xtMHBYSEpjYmlBZ0lDQWdJQ0FnZlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5b1lYTk5ZWE5yWldSUVlYUm9JRDBnZEhKMVpUdGNjbHh1SUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmFHRnpUV0Z6YTJWa1VHRjBhQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1ZmJXOXlaVTl3ZEdsdmJuTXVZV3hwWjI1dFpXNTBJRDBnWjJWMFVISnZjQ2gwYUdsekxsOWxiR1Z0TEhSb2FYTXVYM1JsZUhSRVlYUmhMbTB1WVN3eExEQXNkR2hwY3k1ZlpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ2FXWW9kR2hwY3k1ZlpIbHVZVzFwWTFCeWIzQmxjblJwWlhNdWJHVnVaM1JvS1NCN1hISmNiaUFnSUNCY2RHUjVibUZ0YVdOUWNtOXdaWEowYVdWekxuQjFjMmdvZEdocGN5azdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmxSbGVIUkJibWx0WVhSdmNsQnliM0JsY25SNUxuQnliM1J2ZEhsd1pTNW5aWFJOWldGemRYSmxjeUE5SUdaMWJtTjBhVzl1S0dSdlkzVnRaVzUwUkdGMFlTd2diR1YwZEdWeWMwTm9ZVzVuWldSR2JHRm5LWHRjY2x4dUlDQWdJSFJvYVhNdWJHVjBkR1Z5YzBOb1lXNW5aV1JHYkdGbklEMGdiR1YwZEdWeWMwTm9ZVzVuWldSR2JHRm5PMXh5WEc0Z0lDQWdhV1lvSVhSb2FYTXViV1JtSUNZbUlDRjBhR2x6TGw5bWFYSnpkRVp5WVcxbElDWW1JQ0ZzWlhSMFpYSnpRMmhoYm1kbFpFWnNZV2NnSmlZZ0tDRjBhR2x6TGw5b1lYTk5ZWE5yWldSUVlYUm9JSHg4SUNGMGFHbHpMbDl3WVhSb1JHRjBZUzV0TG0xa1ppa3BJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxsOW1hWEp6ZEVaeVlXMWxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjJZWElnWVd4cFoyNXRaVzUwSUQwZ2RHaHBjeTVmYlc5eVpVOXdkR2x2Ym5NdVlXeHBaMjV0Wlc1MExuWTdYSEpjYmlBZ0lDQjJZWElnWVc1cGJXRjBiM0p6SUQwZ2RHaHBjeTVmWVc1cGJXRjBiM0p6UkdGMFlUdGNjbHh1SUNBZ0lIWmhjaUIwWlhoMFJHRjBZU0E5SUhSb2FYTXVYM1JsZUhSRVlYUmhPMXh5WEc0Z0lDQWdkbUZ5SUcxaGRISnBlRWhsYkhCbGNpQTlJSFJvYVhNdWJVaGxiSEJsY2p0Y2NseHVJQ0FnSUhaaGNpQnlaVzVrWlhKVWVYQmxJRDBnZEdocGN5NWZjbVZ1WkdWeVZIbHdaVHRjY2x4dUlDQWdJSFpoY2lCeVpXNWtaWEpsWkV4bGRIUmxjbk5EYjNWdWRDQTlJSFJvYVhNdWNtVnVaR1Z5WldSTVpYUjBaWEp6TG14bGJtZDBhRHRjY2x4dUlDQWdJSFpoY2lCa1lYUmhJRDBnZEdocGN5NWtZWFJoTzF4eVhHNGdJQ0FnZG1GeUlIaFFiM01zZVZCdmN6dGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNDdYSEpjYmlBZ0lDQjJZWElnYkdWMGRHVnljeUE5SUdSdlkzVnRaVzUwUkdGMFlTNXNPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWZhR0Z6VFdGemEyVmtVR0YwYUNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdFlYTnJJRDBnZEdocGN5NWZjR0YwYUVSaGRHRXViVHRjY2x4dUlDQWdJQ0FnSUNCcFppZ2hkR2hwY3k1ZmNHRjBhRVJoZEdFdWJpQjhmQ0IwYUdsekxsOXdZWFJvUkdGMFlTNXRaR1lwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHRjBhSE1nUFNCdFlYTnJMblk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVYM0JoZEdoRVlYUmhMbklwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRjBhSE1nUFNCeVpYWmxjbk5sVUdGMGFDaHdZWFJvY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQmhkR2hKYm1adklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEV4bGJtZDBhRG9nTUN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmxaMjFsYm5Sek9pQmJYVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaVzRnUFNCd1lYUm9jeTVmYkdWdVozUm9JQzBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQmhkR2hFWVhSaE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkRzkwWVd4TVpXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR2tnUFNBd095QnBJRHdnYkdWdU95QnBJQ3M5SURFcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdoRVlYUmhJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE02SUhCaGRHaHpMblpiYVYwc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlRvZ2NHRjBhSE11ZGx0cElDc2dNVjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzg2SUZ0d1lYUm9jeTV2VzJsZFd6QmRJQzBnY0dGMGFITXVkbHRwWFZzd1hTd2djR0YwYUhNdWIxdHBYVnN4WFNBdElIQmhkR2h6TG5aYmFWMWJNVjFkTEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJwT2lCYmNHRjBhSE11YVZ0cElDc2dNVjFiTUYwZ0xTQndZWFJvY3k1Mlcya2dLeUF4WFZzd1hTd2djR0YwYUhNdWFWdHBJQ3NnTVYxYk1WMGdMU0J3WVhSb2N5NTJXMmtnS3lBeFhWc3hYVjFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlaWG91WW5WcGJHUkNaWHBwWlhKRVlYUmhLSEJoZEdoRVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaEpibVp2TG5STVpXNW5kR2dnS3owZ2NHRjBhRVJoZEdFdVltVjZhV1Z5UkdGMFlTNXpaV2R0Wlc1MFRHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRjBhRWx1Wm04dWMyVm5iV1Z1ZEhNdWNIVnphQ2h3WVhSb1JHRjBZU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzUmhiRXhsYm1kMGFDQXJQU0J3WVhSb1JHRjBZUzVpWlhwcFpYSkVZWFJoTG5ObFoyMWxiblJNWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJR3hsYmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMWhjMnN1ZGk1aktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb1JHRjBZU0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6T2lCd1lYUm9jeTUyVzJsZExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVNklIQmhkR2h6TG5aYk1GMHNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHODZJRnR3WVhSb2N5NXZXMmxkV3pCZElDMGdjR0YwYUhNdWRsdHBYVnN3WFN3Z2NHRjBhSE11YjF0cFhWc3hYU0F0SUhCaGRHaHpMblpiYVYxYk1WMWRMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnBPaUJiY0dGMGFITXVhVnN3WFZzd1hTQXRJSEJoZEdoekxuWmJNRjFiTUYwc0lIQmhkR2h6TG1sYk1GMWJNVjBnTFNCd1lYUm9jeTUyV3pCZFd6RmRYVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmxlaTVpZFdsc1pFSmxlbWxsY2tSaGRHRW9jR0YwYUVSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFFbHVabTh1ZEV4bGJtZDBhQ0FyUFNCd1lYUm9SR0YwWVM1aVpYcHBaWEpFWVhSaExuTmxaMjFsYm5STVpXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lYUm9TVzVtYnk1elpXZHRaVzUwY3k1d2RYTm9LSEJoZEdoRVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSdmRHRnNUR1Z1WjNSb0lDczlJSEJoZEdoRVlYUmhMbUpsZW1sbGNrUmhkR0V1YzJWbmJXVnVkRXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDl3WVhSb1JHRjBZUzV3YVNBOUlIQmhkR2hKYm1adk8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdjR0YwYUVsdVptOGdQU0IwYUdsekxsOXdZWFJvUkdGMFlTNXdhVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUdOMWNuSmxiblJNWlc1bmRHZ2dQU0IwYUdsekxsOXdZWFJvUkdGMFlTNW1MbllzSUhObFoyMWxiblJKYm1RZ1BTQXdMQ0J3YjJsdWRFbHVaQ0E5SURFc0lHTjFjbkpsYm5SUWIybHVkQ3dnY0hKbGRsQnZhVzUwTENCd2IybHVkSE03WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE5sWjIxbGJuUk1aVzVuZEdnZ1BTQXdMQ0JtYkdGbklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYzJWbmJXVnVkSE1nUFNCd1lYUm9TVzVtYnk1elpXZHRaVzUwY3p0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvWTNWeWNtVnVkRXhsYm1kMGFDQThJREFnSmlZZ2JXRnpheTUyTG1NcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJoZEdoSmJtWnZMblJNWlc1bmRHZ2dQQ0JOWVhSb0xtRmljeWhqZFhKeVpXNTBUR1Z1WjNSb0tTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNWeWNtVnVkRXhsYm1kMGFDQTlJQzFOWVhSb0xtRmljeWhqZFhKeVpXNTBUR1Z1WjNSb0tTQWxJSEJoZEdoSmJtWnZMblJNWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEVsdVpDQTlJSE5sWjIxbGJuUnpMbXhsYm1kMGFDQXRJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MGN5QTlJSE5sWjIxbGJuUnpXM05sWjIxbGJuUkpibVJkTG1KbGVtbGxja1JoZEdFdWNHOXBiblJ6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWRFbHVaQ0E5SUhCdmFXNTBjeTVzWlc1bmRHZ2dMU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9ZM1Z5Y21WdWRFeGxibWQwYUNBOElEQXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJNWlc1bmRHZ2dLejBnY0c5cGJuUnpXM0J2YVc1MFNXNWtYUzV3WVhKMGFXRnNUR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SSmJtUWdMVDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3YjJsdWRFbHVaQ0E4SURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXZHRaVzUwU1c1a0lDMDlJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SeklEMGdjMlZuYldWdWRITmJjMlZuYldWdWRFbHVaRjB1WW1WNmFXVnlSR0YwWVM1d2IybHVkSE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SSmJtUWdQU0J3YjJsdWRITXViR1Z1WjNSb0lDMGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2NHOXBiblJ6SUQwZ2MyVm5iV1Z1ZEhOYmMyVm5iV1Z1ZEVsdVpGMHVZbVY2YVdWeVJHRjBZUzV3YjJsdWRITTdYSEpjYmlBZ0lDQWdJQ0FnY0hKbGRsQnZhVzUwSUQwZ2NHOXBiblJ6VzNCdmFXNTBTVzVrSUMwZ01WMDdYSEpjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkRkJ2YVc1MElEMGdjRzlwYm5SelczQnZhVzUwU1c1a1hUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NHRnlkR2xoYkV4bGJtZDBhQ0E5SUdOMWNuSmxiblJRYjJsdWRDNXdZWEowYVdGc1RHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3WlhKakxDQjBZVzVCYm1kc1pUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JseHlYRzRnSUNBZ2JHVnVJRDBnYkdWMGRHVnljeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQjRVRzl6SUQwZ01EdGNjbHh1SUNBZ0lIbFFiM01nUFNBd08xeHlYRzRnSUNBZ2RtRnlJSGxQWm1ZZ1BTQmtiMk4xYldWdWRFUmhkR0V1Y3lveExqSXFMamN4TkR0Y2NseHVJQ0FnSUhaaGNpQm1hWEp6ZEV4cGJtVWdQU0IwY25WbE8xeHlYRzRnSUNBZ2RtRnlJR0Z1YVcxaGRHOXlVSEp2Y0hNc0lHRnVhVzFoZEc5eVUyVnNaV04wYjNJN1hISmNiaUFnSUNCMllYSWdhaXdnYWt4bGJqdGNjbHh1SUNBZ0lIWmhjaUJzWlhSMFpYSldZV3gxWlR0Y2NseHVYSEpjYmlBZ0lDQnFUR1Z1SUQwZ1lXNXBiV0YwYjNKekxteGxibWQwYUR0Y2NseHVJQ0FnSUdsbUlDaHNaWFIwWlhKelEyaGhibWRsWkVac1lXY3BJSHRjY2x4dUlDQWdJQ0FnSUNCbWIzSWdLR29nUFNBd095QnFJRHdnYWt4bGJqc2dhaUFyUFNBeEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnVhVzFoZEc5eVUyVnNaV04wYjNJZ1BTQmhibWx0WVhSdmNuTmJhbDB1Y3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBiM0pUWld4bFkzUnZjaTVuWlhSV1lXeDFaU2gwY25WbEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2JHRnpkRXhsZEhSbGNqdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2JYVnNkQ3dnYVc1a0lEMGdMVEVzSUc5bVptWXNJSGhRWVhSb1VHOXpMQ0I1VUdGMGFGQnZjenRjY2x4dUlDQWdJSFpoY2lCcGJtbDBVR0YwYUZCdmN5QTlJR04xY25KbGJuUk1aVzVuZEdnc2FXNXBkRk5sWjIxbGJuUkpibVFnUFNCelpXZHRaVzUwU1c1a0xDQnBibWwwVUc5cGJuUkpibVFnUFNCd2IybHVkRWx1WkN3Z1kzVnljbVZ1ZEV4cGJtVWdQU0F0TVR0Y2NseHVJQ0FnSUhaaGNpQmxiR1Z0VDNCaFkybDBlVHRjY2x4dUlDQWdJSFpoY2lCell5eHpkeXhtWXl4ck8xeHlYRzRnSUNBZ2RtRnlJR3hwYm1WTVpXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ2RtRnlJR3hsZEhSbGNsTjNMR3hsZEhSbGNsTmpMR3hsZEhSbGNrWmpMR3hsZEhSbGNrMGdQU0FuSnl4c1pYUjBaWEpRSUQwZ2RHaHBjeTVrWldaaGRXeDBVSEp2Y0hOQmNuSmhlU3hzWlhSMFpYSlBPMXh5WEc0Z0lDQWdabTl5S0NCcElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQWdJQ0FnWld4bGJVOXdZV05wZEhrZ1BTQXhPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHeGxkSFJsY25OYmFWMHViaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I0VUc5eklEMGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdlVkJ2Y3lBclBTQmtiMk4xYldWdWRFUmhkR0V1ZVU5bVpuTmxkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdlVkJ2Y3lBclBTQm1hWEp6ZEV4cGJtVWdQeUF4SURvZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEV4bGJtZDBhQ0E5SUdsdWFYUlFZWFJvVUc5eklEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptbHljM1JNYVc1bElEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtVk1aVzVuZEdnZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxsOW9ZWE5OWVhOclpXUlFZWFJvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV2R0Wlc1MFNXNWtJRDBnYVc1cGRGTmxaMjFsYm5SSmJtUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWRFbHVaQ0E5SUdsdWFYUlFiMmx1ZEVsdVpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MGN5QTlJSE5sWjIxbGJuUnpXM05sWjIxbGJuUkpibVJkTG1KbGVtbGxja1JoZEdFdWNHOXBiblJ6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISmxkbEJ2YVc1MElEMGdjRzlwYm5SelczQnZhVzUwU1c1a0lDMGdNVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVUc5cGJuUWdQU0J3YjJsdWRITmJjRzlwYm5SSmJtUmRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGeWRHbGhiRXhsYm1kMGFDQTlJR04xY25KbGJuUlFiMmx1ZEM1d1lYSjBhV0ZzVEdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWbmJXVnVkRXhsYm1kMGFDQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwZEdWeVR5QTlJR3hsZEhSbGNsTjNJRDBnYkdWMGRHVnlSbU1nUFNCc1pYUjBaWEpOSUQwZ0p5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkSFJsY2xBZ1BTQjBhR2x6TG1SbFptRjFiSFJRY205d2MwRnljbUY1TzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbDlvWVhOTllYTnJaV1JRWVhSb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloamRYSnlaVzUwVEdsdVpTQWhQVDBnYkdWMGRHVnljMXRwWFM1c2FXNWxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pHOWpkVzFsYm5SRVlYUmhMbW9wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREU2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFRHVnVaM1JvSUNzOUlIUnZkR0ZzVEdWdVozUm9JQzBnWkc5amRXMWxiblJFWVhSaExteHBibVZYYVdSMGFITmJiR1YwZEdWeWMxdHBYUzVzYVc1bFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVEdWdVozUm9JQ3M5SUNoMGIzUmhiRXhsYm1kMGFDQXRJR1J2WTNWdFpXNTBSR0YwWVM1c2FXNWxWMmxrZEdoelcyeGxkSFJsY25OYmFWMHViR2x1WlYwcEx6STdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEV4cGJtVWdQU0JzWlhSMFpYSnpXMmxkTG14cGJtVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hVzVrSUNFOVBTQnNaWFIwWlhKelcybGRMbWx1WkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNaWFIwWlhKelcybHVaRjBwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEV4bGJtZDBhQ0FyUFNCc1pYUjBaWEp6VzJsdVpGMHVaWGgwY21FN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUk1aVzVuZEdnZ0t6MGdiR1YwZEdWeWMxdHBYUzVoYmlBdklESTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtJRDBnYkdWMGRHVnljMXRwWFM1cGJtUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVEdWdVozUm9JQ3M5SUdGc2FXZHViV1Z1ZEZzd1hTQXFJR3hsZEhSbGNuTmJhVjB1WVc0Z0x5QXlNREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZVzVwYldGMGIzSlBabVp6WlhRZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHFJRDBnTURzZ2FpQThJR3BNWlc0N0lHb2dLejBnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGdWFXMWhkRzl5VUhKdmNITWdQU0JoYm1sdFlYUnZjbk5iYWwwdVlUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9KM0FuSUdsdUlHRnVhVzFoZEc5eVVISnZjSE1wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYjNKVFpXeGxZM1J2Y2lBOUlHRnVhVzFoZEc5eWMxdHFYUzV6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGRXeDBJRDBnWVc1cGJXRjBiM0pUWld4bFkzUnZjaTVuWlhSTmRXeDBLR3hsZEhSbGNuTmJhVjB1WVc1SmJtUmxlR1Z6VzJwZExIUmxlSFJFWVhSaExtRmJhbDB1Y3k1MGIzUmhiRU5vWVhKektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYlhWc2RDNXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBiM0pQWm1aelpYUWdLejBnWVc1cGJXRjBiM0pRY205d2N5NXdMblpiTUYwZ0tpQnRkV3gwV3pCZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZjazltWm5ObGRDQXJQU0JoYm1sdFlYUnZjbEJ5YjNCekxuQXVkbHN3WFNBcUlHMTFiSFE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ25ZU2NnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJtbHRZWFJ2Y2xObGJHVmpkRzl5SUQwZ1lXNXBiV0YwYjNKelcycGRMbk03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxMWJIUWdQU0JoYm1sdFlYUnZjbE5sYkdWamRHOXlMbWRsZEUxMWJIUW9iR1YwZEdWeWMxdHBYUzVoYmtsdVpHVjRaWE5iYWwwc2RHVjRkRVJoZEdFdVlWdHFYUzV6TG5SdmRHRnNRMmhoY25NcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh0ZFd4MExteGxibWQwYUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZjazltWm5ObGRDQXJQU0JoYm1sdFlYUnZjbEJ5YjNCekxtRXVkbHN3WFNBcUlHMTFiSFJiTUYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z1YVcxaGRHOXlUMlptYzJWMElDczlJR0Z1YVcxaGRHOXlVSEp2Y0hNdVlTNTJXekJkSUNvZ2JYVnNkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYkdGbklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZG9hV3hsSUNobWJHRm5LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hObFoyMWxiblJNWlc1bmRHZ2dLeUJ3WVhKMGFXRnNUR1Z1WjNSb0lENDlJR04xY25KbGJuUk1aVzVuZEdnZ0t5QmhibWx0WVhSdmNrOW1abk5sZENCOGZDQWhjRzlwYm5SektTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJsY21NZ1BTQW9ZM1Z5Y21WdWRFeGxibWQwYUNBcklHRnVhVzFoZEc5eVQyWm1jMlYwSUMwZ2MyVm5iV1Z1ZEV4bGJtZDBhQ2tnTHlCamRYSnlaVzUwVUc5cGJuUXVjR0Z5ZEdsaGJFeGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VGQmhkR2hRYjNNZ1BTQndjbVYyVUc5cGJuUXVjRzlwYm5SYk1GMGdLeUFvWTNWeWNtVnVkRkJ2YVc1MExuQnZhVzUwV3pCZElDMGdjSEpsZGxCdmFXNTBMbkJ2YVc1MFd6QmRLU0FxSUhCbGNtTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGxRWVhSb1VHOXpJRDBnY0hKbGRsQnZhVzUwTG5CdmFXNTBXekZkSUNzZ0tHTjFjbkpsYm5SUWIybHVkQzV3YjJsdWRGc3hYU0F0SUhCeVpYWlFiMmx1ZEM1d2IybHVkRnN4WFNrZ0tpQndaWEpqTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVkSEpoYm5Oc1lYUmxLQzFoYkdsbmJtMWxiblJiTUYwcWJHVjBkR1Z5YzF0cFhTNWhiaTh5TURBc0lDMG9ZV3hwWjI1dFpXNTBXekZkSUNvZ2VVOW1aaUF2SURFd01Da3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYkdGbklEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNod2IybHVkSE1wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEV4bGJtZDBhQ0FyUFNCamRYSnlaVzUwVUc5cGJuUXVjR0Z5ZEdsaGJFeGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXBiblJKYm1RZ0t6MGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQnZhVzUwU1c1a0lENDlJSEJ2YVc1MGN5NXNaVzVuZEdncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBTVzVrSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObFoyMWxiblJKYm1RZ0t6MGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYzJWbmJXVnVkSE5iYzJWbmJXVnVkRWx1WkYwcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYldGemF5NTJMbU1wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SSmJtUWdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV2R0Wlc1MFNXNWtJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SeklEMGdjMlZuYldWdWRITmJjMlZuYldWdWRFbHVaRjB1WW1WNmFXVnlSR0YwWVM1d2IybHVkSE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEV4bGJtZDBhQ0F0UFNCamRYSnlaVzUwVUc5cGJuUXVjR0Z5ZEdsaGJFeGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzlwYm5SeklEMGdiblZzYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MGN5QTlJSE5sWjIxbGJuUnpXM05sWjIxbGJuUkpibVJkTG1KbGVtbGxja1JoZEdFdWNHOXBiblJ6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiMmx1ZEhNcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeVpYWlFiMmx1ZENBOUlHTjFjbkpsYm5SUWIybHVkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5SUWIybHVkQ0E5SUhCdmFXNTBjMXR3YjJsdWRFbHVaRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZWEowYVdGc1RHVnVaM1JvSUQwZ1kzVnljbVZ1ZEZCdmFXNTBMbkJoY25ScFlXeE1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Wm1abUlEMGdiR1YwZEdWeWMxdHBYUzVoYmlBdklESWdMU0JzWlhSMFpYSnpXMmxkTG1Ga1pEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEhKcGVFaGxiSEJsY2k1MGNtRnVjMnhoZEdVb0xXOW1abVlzSURBc0lEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMlptWmlBOUlHeGxkSFJsY25OYmFWMHVZVzR2TWlBdElHeGxkSFJsY25OYmFWMHVZV1JrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2d0YjJabVppd3dMREFwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUVkeWIzVndhVzVuSUdGc2FXZHViV1Z1ZEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2d0WVd4cFoyNXRaVzUwV3pCZEtteGxkSFJsY25OYmFWMHVZVzR2TWpBd0xDQXRZV3hwWjI1dFpXNTBXekZkS25sUFptWXZNVEF3TENBd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlV4bGJtZDBhQ0FyUFNCc1pYUjBaWEp6VzJsZExtd3ZNanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0dvOU1EdHFQR3BNWlc0N2FpczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJtbHRZWFJ2Y2xCeWIzQnpJRDBnWVc1cGJXRjBiM0p6VzJwZExtRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0ozUW5JR2x1SUdGdWFXMWhkRzl5VUhKdmNITXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhSdmNsTmxiR1ZqZEc5eUlEMGdZVzVwYldGMGIzSnpXMnBkTG5NN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlhWc2RDQTlJR0Z1YVcxaGRHOXlVMlZzWldOMGIzSXVaMlYwVFhWc2RDaHNaWFIwWlhKelcybGRMbUZ1U1c1a1pYaGxjMXRxWFN4MFpYaDBSR0YwWVM1aFcycGRMbk11ZEc5MFlXeERhR0Z5Y3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVmYUdGelRXRnphMlZrVUdGMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodGRXeDBMbXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEV4bGJtZDBhQ0FyUFNCaGJtbHRZWFJ2Y2xCeWIzQnpMblFxYlhWc2RGc3dYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5STVpXNW5kR2dnS3owZ1lXNXBiV0YwYjNKUWNtOXdjeTUwS20xMWJIUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iWFZzZEM1c1pXNW5kR2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGhRYjNNZ0t6MGdZVzVwYldGMGIzSlFjbTl3Y3k1MExuWXFiWFZzZEZzd1hUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhoUWIzTWdLejBnWVc1cGJXRjBiM0pRY205d2N5NTBMbllxYlhWc2REdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhVzVsVEdWdVozUm9JQ3M5SUd4bGRIUmxjbk5iYVYwdWJDOHlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhrYjJOMWJXVnVkRVJoZEdFdWMzUnliMnRsVjJsa2RHaEJibWx0S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkeUE5SUdSdlkzVnRaVzUwUkdGMFlTNXpkeUI4ZkNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHUnZZM1Z0Wlc1MFJHRjBZUzV6ZEhKdmEyVkRiMnh2Y2tGdWFXMHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHUnZZM1Z0Wlc1MFJHRjBZUzV6WXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJNZ1BTQmJaRzlqZFcxbGJuUkVZWFJoTG5Oald6QmRMQ0JrYjJOMWJXVnVkRVJoZEdFdWMyTmJNVjBzSUdSdlkzVnRaVzUwUkdGMFlTNXpZMXN5WFYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WXlBOUlGc3dMREFzTUYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aRzlqZFcxbGJuUkVZWFJoTG1acGJHeERiMnh2Y2tGdWFXMGdKaVlnWkc5amRXMWxiblJFWVhSaExtWmpLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVl5QTlJRnRrYjJOMWJXVnVkRVJoZEdFdVptTmJNRjBzSUdSdlkzVnRaVzUwUkdGMFlTNW1ZMXN4WFN3Z1pHOWpkVzFsYm5SRVlYUmhMbVpqV3pKZFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hajB3TzJvOGFreGxianRxS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z1YVcxaGRHOXlVSEp2Y0hNZ1BTQmhibWx0WVhSdmNuTmJhbDB1WVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2duWVNjZ2FXNGdZVzVwYldGMGIzSlFjbTl3Y3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGdWFXMWhkRzl5VTJWc1pXTjBiM0lnUFNCaGJtbHRZWFJ2Y25OYmFsMHVjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRkV3gwSUQwZ1lXNXBiV0YwYjNKVFpXeGxZM1J2Y2k1blpYUk5kV3gwS0d4bGRIUmxjbk5iYVYwdVlXNUpibVJsZUdWelcycGRMSFJsZUhSRVlYUmhMbUZiYWwwdWN5NTBiM1JoYkVOb1lYSnpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JYVnNkQzVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSeWFYaElaV3h3WlhJdWRISmhibk5zWVhSbEtDMWhibWx0WVhSdmNsQnliM0J6TG1FdWRsc3dYU3B0ZFd4MFd6QmRMQ0F0WVc1cGJXRjBiM0pRY205d2N5NWhMblpiTVYwcWJYVnNkRnN4WFN3Z1lXNXBiV0YwYjNKUWNtOXdjeTVoTG5aYk1sMHFiWFZzZEZzeVhTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2d0WVc1cGJXRjBiM0pRY205d2N5NWhMblpiTUYwcWJYVnNkQ3dnTFdGdWFXMWhkRzl5VUhKdmNITXVZUzUyV3pGZEttMTFiSFFzSUdGdWFXMWhkRzl5VUhKdmNITXVZUzUyV3pKZEttMTFiSFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FqMHdPMm84YWt4bGJqdHFLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnVhVzFoZEc5eVVISnZjSE1nUFNCaGJtbHRZWFJ2Y25OYmFsMHVZVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ25jeWNnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z1YVcxaGRHOXlVMlZzWldOMGIzSWdQU0JoYm1sdFlYUnZjbk5iYWwwdWN6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGRXeDBJRDBnWVc1cGJXRjBiM0pUWld4bFkzUnZjaTVuWlhSTmRXeDBLR3hsZEhSbGNuTmJhVjB1WVc1SmJtUmxlR1Z6VzJwZExIUmxlSFJFWVhSaExtRmJhbDB1Y3k1MGIzUmhiRU5vWVhKektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHRkV3gwTG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRISnBlRWhsYkhCbGNpNXpZMkZzWlNneEt5Z29ZVzVwYldGMGIzSlFjbTl3Y3k1ekxuWmJNRjB0TVNrcWJYVnNkRnN3WFNrc01Tc29LR0Z1YVcxaGRHOXlVSEp2Y0hNdWN5NTJXekZkTFRFcEttMTFiSFJiTVYwcExERXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhkSEpwZUVobGJIQmxjaTV6WTJGc1pTZ3hLeWdvWVc1cGJXRjBiM0pRY205d2N5NXpMblpiTUYwdE1Ta3FiWFZzZENrc01Tc29LR0Z1YVcxaGRHOXlVSEp2Y0hNdWN5NTJXekZkTFRFcEttMTFiSFFwTERFcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hajB3TzJvOGFreGxianRxS3oweEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnZjbEJ5YjNCeklEMGdZVzVwYldGMGIzSnpXMnBkTG1FN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhSdmNsTmxiR1ZqZEc5eUlEMGdZVzVwYldGMGIzSnpXMnBkTG5NN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRkV3gwSUQwZ1lXNXBiV0YwYjNKVFpXeGxZM1J2Y2k1blpYUk5kV3gwS0d4bGRIUmxjbk5iYVYwdVlXNUpibVJsZUdWelcycGRMSFJsZUhSRVlYUmhMbUZiYWwwdWN5NTBiM1JoYkVOb1lYSnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ25jMnNuSUdsdUlHRnVhVzFoZEc5eVVISnZjSE1wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodGRXeDBMbXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSeWFYaElaV3h3WlhJdWMydGxkMFp5YjIxQmVHbHpLQzFoYm1sdFlYUnZjbEJ5YjNCekxuTnJMbllnS2lCdGRXeDBXekJkTENCaGJtbHRZWFJ2Y2xCeWIzQnpMbk5oTG5ZZ0tpQnRkV3gwV3pGZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVjMnRsZDBaeWIyMUJlR2x6S0MxaGJtbHRZWFJ2Y2xCeWIzQnpMbk5yTG5ZZ0tpQnRkV3gwTENCaGJtbHRZWFJ2Y2xCeWIzQnpMbk5oTG5ZZ0tpQnRkV3gwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSjNJbklHbHVJR0Z1YVcxaGRHOXlVSEp2Y0hNcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHRkV3gwTG14bGJtZDBhQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVjbTkwWVhSbFdpZ3RZVzVwYldGMGIzSlFjbTl3Y3k1eUxuWWdLaUJ0ZFd4MFd6SmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJ5YVhoSVpXeHdaWEl1Y205MFlYUmxXaWd0WVc1cGJXRjBiM0pRY205d2N5NXlMbllnS2lCdGRXeDBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9KM0o1SnlCcGJpQmhibWx0WVhSdmNsQnliM0J6S1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzExYkhRdWJHVnVaM1JvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhkSEpwZUVobGJIQmxjaTV5YjNSaGRHVlpLR0Z1YVcxaGRHOXlVSEp2Y0hNdWNua3VkaXB0ZFd4MFd6RmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMbkp2ZEdGMFpWa29ZVzVwYldGMGIzSlFjbTl3Y3k1eWVTNTJLbTExYkhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnbmNuZ25JR2x1SUdGdWFXMWhkRzl5VUhKdmNITXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh0ZFd4MExteGxibWQwYUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJ5YVhoSVpXeHdaWEl1Y205MFlYUmxXQ2hoYm1sdFlYUnZjbEJ5YjNCekxuSjRMbllxYlhWc2RGc3dYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwY21sNFNHVnNjR1Z5TG5KdmRHRjBaVmdvWVc1cGJXRjBiM0pRY205d2N5NXllQzUyS20xMWJIUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ25ieWNnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0cxMWJIUXViR1Z1WjNSb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzWlcxUGNHRmphWFI1SUNzOUlDZ29ZVzVwYldGMGIzSlFjbTl3Y3k1dkxuWXBLbTExYkhSYk1GMGdMU0JsYkdWdFQzQmhZMmwwZVNrcWJYVnNkRnN3WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkdWdFQzQmhZMmwwZVNBclBTQW9LR0Z1YVcxaGRHOXlVSEp2Y0hNdWJ5NTJLU3B0ZFd4MElDMGdaV3hsYlU5d1lXTnBkSGtwS20xMWJIUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUnZZM1Z0Wlc1MFJHRjBZUzV6ZEhKdmEyVlhhV1IwYUVGdWFXMGdKaVlnSjNOM0p5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCektTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iWFZzZEM1c1pXNW5kR2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzY2dLejBnWVc1cGJXRjBiM0pRY205d2N5NXpkeTUyS20xMWJIUmJNRjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM2NnS3owZ1lXNXBiV0YwYjNKUWNtOXdjeTV6ZHk1MkttMTFiSFE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1J2WTNWdFpXNTBSR0YwWVM1emRISnZhMlZEYjJ4dmNrRnVhVzBnSmlZZ0ozTmpKeUJwYmlCaGJtbHRZWFJ2Y2xCeWIzQnpLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0dzOU1EdHJQRE03YXlzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0cxMWJIUXViR1Z1WjNSb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelkxdHJYU0E5SUhOalcydGRJQ3NnS0dGdWFXMWhkRzl5VUhKdmNITXVjMk11ZGx0clhTQXRJSE5qVzJ0ZEtTcHRkV3gwV3pCZFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WTF0clhTQTlJSE5qVzJ0ZElDc2dLR0Z1YVcxaGRHOXlVSEp2Y0hNdWMyTXVkbHRyWFNBdElITmpXMnRkS1NwdGRXeDBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1J2WTNWdFpXNTBSR0YwWVM1bWFXeHNRMjlzYjNKQmJtbHRJQ1ltSUdSdlkzVnRaVzUwUkdGMFlTNW1ZeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0NkbVl5Y2dhVzRnWVc1cGJXRjBiM0pRY205d2N5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loclBUQTdhend6TzJzclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iWFZzZEM1c1pXNW5kR2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVkxdHJYU0E5SUdaalcydGRJQ3NnS0dGdWFXMWhkRzl5VUhKdmNITXVabU11ZGx0clhTQXRJR1pqVzJ0ZEtTcHRkV3gwV3pCZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWTF0clhTQTlJR1pqVzJ0ZElDc2dLR0Z1YVcxaGRHOXlVSEp2Y0hNdVptTXVkbHRyWFNBdElHWmpXMnRkS1NwdGRXeDBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtDZG1hQ2NnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHMTFiSFF1YkdWdVozUm9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ZeUE5SUdGa1pFaDFaVlJ2VWtkQ0tHWmpMR0Z1YVcxaGRHOXlVSEp2Y0hNdVptZ3VkaXB0ZFd4MFd6QmRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmpJRDBnWVdSa1NIVmxWRzlTUjBJb1ptTXNZVzVwYldGMGIzSlFjbTl3Y3k1bWFDNTJLbTExYkhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtDZG1jeWNnYVc0Z1lXNXBiV0YwYjNKUWNtOXdjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHMTFiSFF1YkdWdVozUm9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ZeUE5SUdGa1pGTmhkSFZ5WVhScGIyNVViMUpIUWlobVl5eGhibWx0WVhSdmNsQnliM0J6TG1aekxuWXFiWFZzZEZzd1hTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVl5QTlJR0ZrWkZOaGRIVnlZWFJwYjI1VWIxSkhRaWhtWXl4aGJtbHRZWFJ2Y2xCeWIzQnpMbVp6TG5ZcWJYVnNkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvSjJaaUp5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYlhWc2RDNXNaVzVuZEdncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdaaklEMGdZV1JrUW5KcFoyaDBibVZ6YzFSdlVrZENLR1pqTEdGdWFXMWhkRzl5VUhKdmNITXVabUl1ZGlwdGRXeDBXekJkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pqSUQwZ1lXUmtRbkpwWjJoMGJtVnpjMVJ2VWtkQ0tHWmpMR0Z1YVcxaGRHOXlVSEp2Y0hNdVptSXVkaXB0ZFd4MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhibWx0WVhSdmNsQnliM0J6SUQwZ1lXNXBiV0YwYjNKelcycGRMbUU3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0Nkd0p5QnBiaUJoYm1sdFlYUnZjbEJ5YjNCektTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYjNKVFpXeGxZM1J2Y2lBOUlHRnVhVzFoZEc5eWMxdHFYUzV6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzExYkhRZ1BTQmhibWx0WVhSdmNsTmxiR1ZqZEc5eUxtZGxkRTExYkhRb2JHVjBkR1Z5YzF0cFhTNWhia2x1WkdWNFpYTmJhbDBzZEdWNGRFUmhkR0V1WVZ0cVhTNXpMblJ2ZEdGc1EyaGhjbk1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVYMmhoYzAxaGMydGxaRkJoZEdncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYlhWc2RDNXNaVzVuZEdncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRISnBlRWhsYkhCbGNpNTBjbUZ1YzJ4aGRHVW9NQ3dnWVc1cGJXRjBiM0pRY205d2N5NXdMblpiTVYwZ0tpQnRkV3gwV3pCZExDQXRZVzVwYldGMGIzSlFjbTl3Y3k1d0xuWmJNbDBnS2lCdGRXeDBXekZkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEhKcGVFaGxiSEJsY2k1MGNtRnVjMnhoZEdVb01Dd2dZVzVwYldGMGIzSlFjbTl3Y3k1d0xuWmJNVjBnS2lCdGRXeDBMQ0F0WVc1cGJXRjBiM0pRY205d2N5NXdMblpiTWwwZ0tpQnRkV3gwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlodGRXeDBMbXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2hoYm1sdFlYUnZjbEJ5YjNCekxuQXVkbHN3WFNBcUlHMTFiSFJiTUYwc0lHRnVhVzFoZEc5eVVISnZjSE11Y0M1Mld6RmRJQ29nYlhWc2RGc3hYU3dnTFdGdWFXMWhkRzl5VUhKdmNITXVjQzUyV3pKZElDb2diWFZzZEZzeVhTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVkSEpoYm5Oc1lYUmxLR0Z1YVcxaGRHOXlVSEp2Y0hNdWNDNTJXekJkSUNvZ2JYVnNkQ3dnWVc1cGJXRjBiM0pRY205d2N5NXdMblpiTVYwZ0tpQnRkV3gwTENBdFlXNXBiV0YwYjNKUWNtOXdjeTV3TG5aYk1sMGdLaUJ0ZFd4MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhrYjJOMWJXVnVkRVJoZEdFdWMzUnliMnRsVjJsa2RHaEJibWx0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkSFJsY2xOM0lEMGdjM2NnUENBd0lEOGdNQ0E2SUhOM08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHUnZZM1Z0Wlc1MFJHRjBZUzV6ZEhKdmEyVkRiMnh2Y2tGdWFXMHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnlVMk1nUFNBbmNtZGlLQ2NyVFdGMGFDNXliM1Z1WkNoelkxc3dYU295TlRVcEt5Y3NKeXROWVhSb0xuSnZkVzVrS0hOald6RmRLakkxTlNrckp5d25LMDFoZEdndWNtOTFibVFvYzJOYk1sMHFNalUxS1NzbktTYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aRzlqZFcxbGJuUkVZWFJoTG1acGJHeERiMnh2Y2tGdWFXMGdKaVlnWkc5amRXMWxiblJFWVhSaExtWmpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRIUmxja1pqSUQwZ0ozSm5ZaWduSzAxaGRHZ3VjbTkxYm1Rb1ptTmJNRjBxTWpVMUtTc25MQ2NyVFdGMGFDNXliM1Z1WkNobVkxc3hYU295TlRVcEt5Y3NKeXROWVhSb0xuSnZkVzVrS0daald6SmRLakkxTlNrckp5a25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbDlvWVhOTllYTnJaV1JRWVhSb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSeWFYaElaV3h3WlhJdWRISmhibk5zWVhSbEtEQXNMV1J2WTNWdFpXNTBSR0YwWVM1c2N5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2d3TENCaGJHbG5ibTFsYm5SYk1WMHFlVTltWmk4eE1EQWdLeUI1VUc5ekxEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmxlSFJFWVhSaExuQXVjQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoYmtGdVoyeGxJRDBnS0dOMWNuSmxiblJRYjJsdWRDNXdiMmx1ZEZzeFhTQXRJSEJ5WlhaUWIybHVkQzV3YjJsdWRGc3hYU2tnTHlBb1kzVnljbVZ1ZEZCdmFXNTBMbkJ2YVc1MFd6QmRJQzBnY0hKbGRsQnZhVzUwTG5CdmFXNTBXekJkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NtOTBJRDBnVFdGMGFDNWhkR0Z1S0hSaGJrRnVaMnhsS1NBcUlERTRNQ0F2SUUxaGRHZ3VVRWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblJRYjJsdWRDNXdiMmx1ZEZzd1hTQThJSEJ5WlhaUWIybHVkQzV3YjJsdWRGc3dYU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIzUWdLejBnTVRnd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSeWFYaElaV3h3WlhJdWNtOTBZWFJsS0MxeWIzUWdLaUJOWVhSb0xsQkpJQzhnTVRnd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRISnBlRWhsYkhCbGNpNTBjbUZ1YzJ4aGRHVW9lRkJoZEdoUWIzTXNJSGxRWVhSb1VHOXpMQ0F3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5STVpXNW5kR2dnTFQwZ1lXeHBaMjV0Wlc1MFd6QmRLbXhsZEhSbGNuTmJhVjB1WVc0dk1qQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHVjBkR1Z5YzF0cEt6RmRJQ1ltSUdsdVpDQWhQVDBnYkdWMGRHVnljMXRwS3pGZExtbHVaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRFeGxibWQwYUNBclBTQnNaWFIwWlhKelcybGRMbUZ1SUM4Z01qdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVEdWdVozUm9JQ3M5SUdSdlkzVnRaVzUwUkdGMFlTNTBjaTh4TURBd0ttUnZZM1Z0Wlc1MFJHRjBZUzV6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJ5YVhoSVpXeHdaWEl1ZEhKaGJuTnNZWFJsS0hoUWIzTXNlVkJ2Y3l3d0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGtiMk4xYldWdWRFUmhkR0V1Y0hNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dmJXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2hrYjJOMWJXVnVkRVJoZEdFdWNITmJNRjBzWkc5amRXMWxiblJFWVhSaExuQnpXekZkTERBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGRISnBlRWhsYkhCbGNpNTBjbUZ1YzJ4aGRHVW9aRzlqZFcxbGJuUkVZWFJoTG5Celd6QmRMR1J2WTNWdFpXNTBSR0YwWVM1d2Mxc3hYU0FySUdSdlkzVnRaVzUwUkdGMFlTNWhjMk5sYm5Rc01DazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvWkc5amRXMWxiblJFWVhSaExtb3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMblJ5WVc1emJHRjBaU2hrYjJOMWJXVnVkRVJoZEdFdWFuVnpkR2xtZVU5bVpuTmxkQ0FySUNoa2IyTjFiV1Z1ZEVSaGRHRXVZbTk0VjJsa2RHZ2dMU0JrYjJOMWJXVnVkRVJoZEdFdWJHbHVaVmRwWkhSb2MxdHNaWFIwWlhKelcybGRMbXhwYm1WZEtTd3dMREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhkSEpwZUVobGJIQmxjaTUwY21GdWMyeGhkR1VvWkc5amRXMWxiblJFWVhSaExtcDFjM1JwWm5sUFptWnpaWFFnS3lBb1pHOWpkVzFsYm5SRVlYUmhMbUp2ZUZkcFpIUm9JQzBnWkc5amRXMWxiblJFWVhSaExteHBibVZYYVdSMGFITmJiR1YwZEdWeWMxdHBYUzVzYVc1bFhTa3ZNaXd3TERBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEhKcGVFaGxiSEJsY2k1MGNtRnVjMnhoZEdVb01Dd3RaRzlqZFcxbGJuUkVZWFJoTG14ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEhKcGVFaGxiSEJsY2k1MGNtRnVjMnhoZEdVb2IyWm1aaXd3TERBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwY21sNFNHVnNjR1Z5TG5SeVlXNXpiR0YwWlNoaGJHbG5ibTFsYm5SYk1GMHFiR1YwZEdWeWMxdHBYUzVoYmk4eU1EQXNZV3hwWjI1dFpXNTBXekZkS25sUFptWXZNVEF3TERBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlRkJ2Y3lBclBTQnNaWFIwWlhKelcybGRMbXdnS3lCa2IyTjFiV1Z1ZEVSaGRHRXVkSEl2TVRBd01DcGtiMk4xYldWdWRFUmhkR0V1Y3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloeVpXNWtaWEpVZVhCbElEMDlQU0FuYUhSdGJDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnlUU0E5SUcxaGRISnBlRWhsYkhCbGNpNTBiME5UVXlncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaU0JwWmloeVpXNWtaWEpVZVhCbElEMDlQU0FuYzNabkp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhSMFpYSk5JRDBnYldGMGNtbDRTR1ZzY0dWeUxuUnZNbVJEVTFNb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUjBaWEpRSUQwZ1cyMWhkSEpwZUVobGJIQmxjaTV3Y205d2Mxc3dYU3h0WVhSeWFYaElaV3h3WlhJdWNISnZjSE5iTVYwc2JXRjBjbWw0U0dWc2NHVnlMbkJ5YjNCeld6SmRMRzFoZEhKcGVFaGxiSEJsY2k1d2NtOXdjMXN6WFN4dFlYUnlhWGhJWld4d1pYSXVjSEp2Y0hOYk5GMHNiV0YwY21sNFNHVnNjR1Z5TG5CeWIzQnpXelZkTEcxaGRISnBlRWhsYkhCbGNpNXdjbTl3YzFzMlhTeHRZWFJ5YVhoSVpXeHdaWEl1Y0hKdmNITmJOMTBzYldGMGNtbDRTR1ZzY0dWeUxuQnliM0J6V3poZExHMWhkSEpwZUVobGJIQmxjaTV3Y205d2MxczVYU3h0WVhSeWFYaElaV3h3WlhJdWNISnZjSE5iTVRCZExHMWhkSEpwZUVobGJIQmxjaTV3Y205d2Mxc3hNVjBzYldGMGNtbDRTR1ZzY0dWeUxuQnliM0J6V3pFeVhTeHRZWFJ5YVhoSVpXeHdaWEl1Y0hKdmNITmJNVE5kTEcxaGRISnBlRWhsYkhCbGNpNXdjbTl3YzFzeE5GMHNiV0YwY21sNFNHVnNjR1Z5TG5CeWIzQnpXekUxWFYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnlUeUE5SUdWc1pXMVBjR0ZqYVhSNU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lvY21WdVpHVnlaV1JNWlhSMFpYSnpRMjkxYm5RZ1BEMGdhU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhSMFpYSldZV3gxWlNBOUlHNWxkeUJNWlhSMFpYSlFjbTl3Y3loc1pYUjBaWEpQTEd4bGRIUmxjbE4zTEd4bGRIUmxjbE5qTEd4bGRIUmxja1pqTEd4bGRIUmxjazBzYkdWMGRHVnlVQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNtVnVaR1Z5WldSTVpYUjBaWEp6TG5CMWMyZ29iR1YwZEdWeVZtRnNkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxaRXhsZEhSbGNuTkRiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14bGRIUmxjbk5EYUdGdVoyVmtSbXhoWnlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnlWbUZzZFdVZ1BTQjBhR2x6TG5KbGJtUmxjbVZrVEdWMGRHVnljMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXNaWFIwWlhKelEyaGhibWRsWkVac1lXY2dQU0JzWlhSMFpYSldZV3gxWlM1MWNHUmhkR1VvYkdWMGRHVnlUeXdnYkdWMGRHVnlVM2NzSUd4bGRIUmxjbE5qTENCc1pYUjBaWEpHWXl3Z2JHVjBkR1Z5VFN3Z2JHVjBkR1Z5VUNrZ2ZId2dkR2hwY3k1c1pYUjBaWEp6UTJoaGJtZGxaRVpzWVdjN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1VVpYaDBRVzVwYldGMGIzSlFjbTl3WlhKMGVTNXdjbTkwYjNSNWNHVXVaMlYwVm1Gc2RXVWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNWNkR2xtS0hSb2FYTXVYMlZzWlcwdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlVsa0lEMDlQU0IwYUdsekxsOW1jbUZ0WlVsa0tYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TGw5bWNtRnRaVWxrSUQwZ2RHaHBjeTVmWld4bGJTNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFNXUTdYSEpjYmx4MGRtRnlJR2tzSUd4bGJpQTlJSFJvYVhNdVgyUjVibUZ0YVdOUWNtOXdaWEowYVdWekxteGxibWQwYUR0Y2NseHVJQ0FnSUhSb2FYTXViV1JtSUQwZ1ptRnNjMlU3WEhKY2JseDBabTl5S0drZ1BTQXdPeUJwSUR3Z2JHVnVPeUJwSUNzOUlERXBJSHRjY2x4dVhIUmNkSFJvYVhNdVgyUjVibUZ0YVdOUWNtOXdaWEowYVdWelcybGRMbWRsZEZaaGJIVmxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WkdZZ1BTQjBhR2x6TGw5a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNXRaR1lnZkh3Z2RHaHBjeTV0WkdZN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNVVaWGgwUVc1cGJXRjBiM0pRY205d1pYSjBlUzV3Y205MGIzUjVjR1V1YlVobGJIQmxjaUE5SUc1bGR5Qk5ZWFJ5YVhnb0tUdGNjbHh1VkdWNGRFRnVhVzFoZEc5eVVISnZjR1Z5ZEhrdWNISnZkRzkwZVhCbExtUmxabUYxYkhSUWNtOXdjMEZ5Y21GNUlEMGdXMTA3WEc1bWRXNWpkR2x2YmlCTVpYUjBaWEpRY205d2N5aHZMQ0J6ZHl3Z2MyTXNJR1pqTENCdExDQndLWHRjY2x4dUlDQWdJSFJvYVhNdWJ5QTlJRzg3WEhKY2JpQWdJQ0IwYUdsekxuTjNJRDBnYzNjN1hISmNiaUFnSUNCMGFHbHpMbk5qSUQwZ2MyTTdYSEpjYmlBZ0lDQjBhR2x6TG1aaklEMGdabU03WEhKY2JpQWdJQ0IwYUdsekxtMGdQU0J0TzF4eVhHNGdJQ0FnZEdocGN5NXdJRDBnY0R0Y2NseHVJQ0FnSUhSb2FYTXViV1JtSUQwZ2UxeHlYRzRnSUNBZ1hIUnZPaUIwY25WbExGeHlYRzRnSUNBZ1hIUnpkem9nSVNGemR5eGNjbHh1SUNBZ0lGeDBjMk02SUNFaGMyTXNYSEpjYmlBZ0lDQmNkR1pqT2lBaElXWmpMRnh5WEc0Z0lDQWdYSFJ0T2lCMGNuVmxMRnh5WEc0Z0lDQWdYSFJ3T2lCMGNuVmxYSEpjYmlBZ0lDQjlPMXh5WEc1OVhISmNibHh5WEc1TVpYUjBaWEpRY205d2N5NXdjbTkwYjNSNWNHVXVkWEJrWVhSbElEMGdablZ1WTNScGIyNG9ieXdnYzNjc0lITmpMQ0JtWXl3Z2JTd2djQ2tnZTF4eVhHNWNkSFJvYVhNdWJXUm1MbThnUFNCbVlXeHpaVHRjY2x4dVhIUjBhR2x6TG0xa1ppNXpkeUE5SUdaaGJITmxPMXh5WEc1Y2RIUm9hWE11YldSbUxuTmpJRDBnWm1Gc2MyVTdYSEpjYmx4MGRHaHBjeTV0WkdZdVptTWdQU0JtWVd4elpUdGNjbHh1WEhSMGFHbHpMbTFrWmk1dElEMGdabUZzYzJVN1hISmNibHgwZEdocGN5NXRaR1l1Y0NBOUlHWmhiSE5sTzF4eVhHNWNkSFpoY2lCMWNHUmhkR1ZrSUQwZ1ptRnNjMlU3WEhKY2JseHlYRzVjZEdsbUtIUm9hWE11YnlBaFBUMGdieWtnZTF4eVhHNWNkRngwZEdocGN5NXZJRDBnYnp0Y2NseHVYSFJjZEhSb2FYTXViV1JtTG04Z1BTQjBjblZsTzF4eVhHNWNkRngwZFhCa1lYUmxaQ0E5SUhSeWRXVTdYSEpjYmx4MGZWeHlYRzVjZEdsbUtIUm9hWE11YzNjZ0lUMDlJSE4zS1NCN1hISmNibHgwWEhSMGFHbHpMbk4zSUQwZ2MzYzdYSEpjYmx4MFhIUjBhR2x6TG0xa1ppNXpkeUE5SUhSeWRXVTdYSEpjYmx4MFhIUjFjR1JoZEdWa0lEMGdkSEoxWlR0Y2NseHVYSFI5WEhKY2JseDBhV1lvZEdocGN5NXpZeUFoUFQwZ2MyTXBJSHRjY2x4dVhIUmNkSFJvYVhNdWMyTWdQU0J6WXp0Y2NseHVYSFJjZEhSb2FYTXViV1JtTG5OaklEMGdkSEoxWlR0Y2NseHVYSFJjZEhWd1pHRjBaV1FnUFNCMGNuVmxPMXh5WEc1Y2RIMWNjbHh1WEhScFppaDBhR2x6TG1aaklDRTlQU0JtWXlrZ2UxeHlYRzVjZEZ4MGRHaHBjeTVtWXlBOUlHWmpPMXh5WEc1Y2RGeDBkR2hwY3k1dFpHWXVabU1nUFNCMGNuVmxPMXh5WEc1Y2RGeDBkWEJrWVhSbFpDQTlJSFJ5ZFdVN1hISmNibHgwZlZ4eVhHNWNkR2xtS0hSb2FYTXViU0FoUFQwZ2JTa2dlMXh5WEc1Y2RGeDBkR2hwY3k1dElEMGdiVHRjY2x4dVhIUmNkSFJvYVhNdWJXUm1MbTBnUFNCMGNuVmxPMXh5WEc1Y2RGeDBkWEJrWVhSbFpDQTlJSFJ5ZFdVN1hISmNibHgwZlZ4eVhHNWNkR2xtS0hBdWJHVnVaM1JvSUNZbUlDaDBhR2x6TG5CYk1GMGdJVDA5SUhCYk1GMGdmSHdnZEdocGN5NXdXekZkSUNFOVBTQndXekZkSUh4OElIUm9hWE11Y0ZzMFhTQWhQVDBnY0ZzMFhTQjhmQ0IwYUdsekxuQmJOVjBnSVQwOUlIQmJOVjBnZkh3Z2RHaHBjeTV3V3pFeVhTQWhQVDBnY0ZzeE1sMGdmSHdnZEdocGN5NXdXekV6WFNBaFBUMGdjRnN4TTEwcEtTQjdYSEpjYmx4MFhIUjBhR2x6TG5BZ1BTQndPMXh5WEc1Y2RGeDBkR2hwY3k1dFpHWXVjQ0E5SUhSeWRXVTdYSEpjYmx4MFhIUjFjR1JoZEdWa0lEMGdkSEoxWlR0Y2NseHVYSFI5WEhKY2JseDBjbVYwZFhKdUlIVndaR0YwWldRN1hISmNibjFjYm1aMWJtTjBhVzl1SUZSbGVIUlFjbTl3WlhKMGVTaGxiR1Z0TENCa1lYUmhMQ0JrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWw3WEhKY2JseDBkR2hwY3k1ZlpuSmhiV1ZKWkNBOUlDMDVPVGs1T1R0Y2NseHVYSFIwYUdsekxuQjJJRDBnSnljN1hISmNibHgwZEdocGN5NTJJRDBnSnljN1hISmNibHgwZEdocGN5NXJaaUE5SUdaaGJITmxPMXh5WEc1Y2RIUm9hWE11Wm1seWMzUkdjbUZ0WlNBOUlIUnlkV1U3WEhKY2JseDBkR2hwY3k1dFpHWWdQU0IwY25WbE8xeHlYRzVjZEhSb2FYTXVaR0YwWVNBOUlHUmhkR0U3WEhKY2JseDBkR2hwY3k1bGJHVnRJRDBnWld4bGJUdGNjbHh1WEhSMGFHbHpMbXRsZVhOSmJtUmxlQ0E5SUMweE8xeHlYRzVjZEhSb2FYTXVZM1Z5Y21WdWRFUmhkR0VnUFNCN1hISmNibHgwWEhSaGMyTmxiblE2SURBc1hISmNiaUFnSUNBZ0lDQWdZbTk0VjJsa2RHZzZJRnN3TERCZExGeHlYRzRnSUNBZ0lDQWdJR1k2SUNjbkxGeHlYRzRnSUNBZ0lDQWdJR1pUZEhsc1pUb2dKeWNzWEhKY2JpQWdJQ0FnSUNBZ1psZGxhV2RvZERvZ0p5Y3NYSEpjYmlBZ0lDQWdJQ0FnWm1NNklDY25MRnh5WEc0Z0lDQWdJQ0FnSUdvNklDY25MRnh5WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmxQWm1aelpYUTZJQ2NuTEZ4eVhHNGdJQ0FnSUNBZ0lHdzZJRnRkTEZ4eVhHNGdJQ0FnSUNBZ0lHeG9PaUF3TEZ4eVhHNGdJQ0FnSUNBZ0lHeHBibVZYYVdSMGFITTZJRnRkTEZ4eVhHNGdJQ0FnSUNBZ0lHeHpPaUFuSnl4Y2NseHVJQ0FnSUNBZ0lDQnZaam9nSnljc1hISmNiaUFnSUNBZ0lDQWdjem9nSnljc1hISmNiaUFnSUNBZ0lDQWdjMk02SUNjbkxGeHlYRzRnSUNBZ0lDQWdJSE4zT2lBd0xGeHlYRzRnSUNBZ0lDQWdJSFE2SURBc1hISmNiaUFnSUNBZ0lDQWdkSEk2SURBc1hISmNiaUFnSUNBZ0lDQWdabWxzYkVOdmJHOXlRVzVwYlRvZ1ptRnNjMlVzWEhKY2JpQWdJQ0FnSUNBZ2MzUnliMnRsUTI5c2IzSkJibWx0T2lCbVlXeHpaU3hjY2x4dUlDQWdJQ0FnSUNCemRISnZhMlZYYVdSMGFFRnVhVzA2SUdaaGJITmxMRnh5WEc0Z0lDQWdJQ0FnSUhsUFptWnpaWFE2SURBc1hISmNiaUFnSUNBZ0lDQWdYMTlqYjIxd2JHVjBaVG9nWm1Gc2MyVmNjbHh1WEhKY2JseDBmVnh5WEc1Y2RHbG1LSFJvYVhNdWMyVmhjbU5vVUhKdmNHVnlkSGtvS1NrZ2UxeHlYRzVjZEZ4MFpIbHVZVzFwWTFCeWIzQmxjblJwWlhNdWNIVnphQ2gwYUdsektUdGNjbHh1WEhSOUlHVnNjMlVnZTF4eVhHNWNkRngwZEdocGN5NW5aWFJXWVd4MVpTaDBjblZsS1R0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JsUmxlSFJRY205d1pYSjBlUzV3Y205MGIzUjVjR1V1YzJWMFEzVnljbVZ1ZEVSaGRHRWdQU0JtZFc1amRHbHZiaWhrWVhSaEtYdGNjbHh1WEhSY2RIWmhjaUJqZFhKeVpXNTBSR0YwWVNBOUlIUm9hWE11WTNWeWNtVnVkRVJoZEdFN1hISmNiaUFnSUNBZ0lDQWdZM1Z5Y21WdWRFUmhkR0V1WVhOalpXNTBJRDBnWkdGMFlTNWhjMk5sYm5RN1hISmNiaUFnSUNBZ0lDQWdZM1Z5Y21WdWRFUmhkR0V1WW05NFYybGtkR2dnUFNCa1lYUmhMbUp2ZUZkcFpIUm9JRDhnWkdGMFlTNWliM2hYYVdSMGFDQTZJR04xY25KbGJuUkVZWFJoTG1KdmVGZHBaSFJvTzF4eVhHNGdJQ0FnSUNBZ0lHTjFjbkpsYm5SRVlYUmhMbVlnUFNCa1lYUmhMbVk3WEhKY2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZEVSaGRHRXVabE4wZVd4bElEMGdaR0YwWVM1bVUzUjViR1U3WEhKY2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZEVSaGRHRXVabGRsYVdkb2RDQTlJR1JoZEdFdVpsZGxhV2RvZER0Y2NseHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFJHRjBZUzVtWXlBOUlHUmhkR0V1Wm1NN1hISmNiaUFnSUNBZ0lDQWdZM1Z5Y21WdWRFUmhkR0V1YWlBOUlHUmhkR0V1YWp0Y2NseHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFJHRjBZUzVxZFhOMGFXWjVUMlptYzJWMElEMGdaR0YwWVM1cWRYTjBhV1o1VDJabWMyVjBPMXh5WEc0Z0lDQWdJQ0FnSUdOMWNuSmxiblJFWVhSaExtd2dQU0JrWVhSaExtdzdYSEpjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkRVJoZEdFdWJHZ2dQU0JrWVhSaExteG9PMXh5WEc0Z0lDQWdJQ0FnSUdOMWNuSmxiblJFWVhSaExteHBibVZYYVdSMGFITWdQU0JrWVhSaExteHBibVZYYVdSMGFITTdYSEpjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkRVJoZEdFdWJITWdQU0JrWVhSaExteHpPMXh5WEc0Z0lDQWdJQ0FnSUdOMWNuSmxiblJFWVhSaExtOW1JRDBnWkdGMFlTNXZaanRjY2x4dUlDQWdJQ0FnSUNCamRYSnlaVzUwUkdGMFlTNXpJRDBnWkdGMFlTNXpPMXh5WEc0Z0lDQWdJQ0FnSUdOMWNuSmxiblJFWVhSaExuTmpJRDBnWkdGMFlTNXpZenRjY2x4dUlDQWdJQ0FnSUNCamRYSnlaVzUwUkdGMFlTNXpkeUE5SUdSaGRHRXVjM2M3WEhKY2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZEVSaGRHRXVkQ0E5SUdSaGRHRXVkRHRjY2x4dUlDQWdJQ0FnSUNCamRYSnlaVzUwUkdGMFlTNTBjaUE5SUdSaGRHRXVkSEk3WEhKY2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZEVSaGRHRXVabWxzYkVOdmJHOXlRVzVwYlNBOUlHUmhkR0V1Wm1sc2JFTnZiRzl5UVc1cGJTQjhmQ0JqZFhKeVpXNTBSR0YwWVM1bWFXeHNRMjlzYjNKQmJtbHRPMXh5WEc0Z0lDQWdJQ0FnSUdOMWNuSmxiblJFWVhSaExuTjBjbTlyWlVOdmJHOXlRVzVwYlNBOUlHUmhkR0V1YzNSeWIydGxRMjlzYjNKQmJtbHRJSHg4SUdOMWNuSmxiblJFWVhSaExuTjBjbTlyWlVOdmJHOXlRVzVwYlR0Y2NseHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFJHRjBZUzV6ZEhKdmEyVlhhV1IwYUVGdWFXMGdQU0JrWVhSaExuTjBjbTlyWlZkcFpIUm9RVzVwYlNCOGZDQmpkWEp5Wlc1MFJHRjBZUzV6ZEhKdmEyVlhhV1IwYUVGdWFXMDdYSEpjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkRVJoZEdFdWVVOW1abk5sZENBOUlHUmhkR0V1ZVU5bVpuTmxkRHRjY2x4dUlDQWdJQ0FnSUNCamRYSnlaVzUwUkdGMFlTNWZYMk52YlhCc1pYUmxJRDBnWm1Gc2MyVTdYSEpjYm4xY2NseHVYSEpjYmxSbGVIUlFjbTl3WlhKMGVTNXdjbTkwYjNSNWNHVXVjMlZoY21Ob1VISnZjR1Z5ZEhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHRjY2x4dVhIUjBhR2x6TG10bUlEMGdkR2hwY3k1a1lYUmhMbVF1YXk1c1pXNW5kR2dnUGlBeE8xeHlYRzVjZEhKbGRIVnliaUIwYUdsekxtdG1PMXh5WEc1OVhISmNibHh5WEc1VVpYaDBVSEp2Y0dWeWRIa3VjSEp2ZEc5MGVYQmxMbWRsZEZaaGJIVmxJRDBnWm5WdVkzUnBiMjRvS1NCN1hISmNibHgwZEdocGN5NXRaR1lnUFNCbVlXeHpaVHRjY2x4dVhIUjJZWElnWm5KaGJXVkpaQ0E5SUhSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnlZVzFsU1dRN1hISmNibHgwYVdZb0tHWnlZVzFsU1dRZ1BUMDlJSFJvYVhNdVgyWnlZVzFsU1dRZ2ZId2dJWFJvYVhNdWEyWXBJQ1ltSUNGMGFHbHpMbVpwY25OMFJuSmhiV1VwSUh0Y2NseHVYSFJjZEhKbGRIVnlianRjY2x4dVhIUjlYSEpjYmx4MGRtRnlJSFJsZUhSTFpYbHpJRDBnZEdocGN5NWtZWFJoTG1RdWF5d2dkR1Y0ZEVSdlkzVnRaVzUwUkdGMFlUdGNjbHh1SUNBZ0lIWmhjaUJwSUQwZ01Dd2diR1Z1SUQwZ2RHVjRkRXRsZVhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnZDJocGJHVW9hU0E4UFNCc1pXNGdMU0F4S1NCN1hISmNiaUFnSUNBZ0lDQWdkR1Y0ZEVSdlkzVnRaVzUwUkdGMFlTQTlJSFJsZUhSTFpYbHpXMmxkTG5NN1hISmNiaUFnSUNBZ0lDQWdhV1lvYVNBOVBUMGdiR1Z1SUMwZ01TQjhmQ0IwWlhoMFMyVjVjMXRwS3pGZExuUWdQaUJtY21GdFpVbGtLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdrZ0t6MGdNVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhMlY1YzBsdVpHVjRJQ0U5UFNCcEtTQjdYSEpjYmlBZ0lDQmNkR2xtS0NGMFpYaDBSRzlqZFcxbGJuUkVZWFJoTGw5ZlkyOXRjR3hsZEdVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYjIxd2JHVjBaVlJsZUhSRVlYUmhLSFJsZUhSRWIyTjFiV1Z1ZEVSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFTjFjbkpsYm5SRVlYUmhLSFJsZUhSRWIyTjFiV1Z1ZEVSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ2RHaHBjeTVtYVhKemRFWnlZVzFsSUQ4Z1ptRnNjMlVnT2lCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSFlnUFNCMGFHbHpMbllnUFNCMGFHbHpMbU4xY25KbGJuUkVZWFJoTG5RN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1clpYbHpTVzVrWlhnZ1BTQnBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2RIUm9hWE11WDJaeVlXMWxTV1FnUFNCbWNtRnRaVWxrTzF4eVhHNTlYSEpjYmx4eVhHNVVaWGgwVUhKdmNHVnlkSGt1Y0hKdmRHOTBlWEJsTG1OdmJYQnNaWFJsVkdWNGRFUmhkR0VnUFNCbWRXNWpkR2x2Ymloa2IyTjFiV1Z1ZEVSaGRHRXBJSHRjY2x4dUlDQWdJR1J2WTNWdFpXNTBSR0YwWVM1ZlgyTnZiWEJzWlhSbElEMGdkSEoxWlR0Y2NseHVJQ0FnSUhaaGNpQm1iMjUwVFdGdVlXZGxjaUE5SUhSb2FYTXVaV3hsYlM1bmJHOWlZV3hFWVhSaExtWnZiblJOWVc1aFoyVnlPMXh5WEc0Z0lDQWdkbUZ5SUdSaGRHRWdQU0IwYUdsekxtUmhkR0U3WEhKY2JpQWdJQ0IyWVhJZ2JHVjBkR1Z5Y3lBOUlGdGRPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxianRjY2x4dUlDQWdJSFpoY2lCdVpYZE1hVzVsUm14aFp5d2dhVzVrWlhnZ1BTQXdMQ0IyWVd3N1hISmNiaUFnSUNCMllYSWdZVzVqYUc5eVIzSnZkWEJwYm1jZ1BTQmtZWFJoTG0wdVp6dGNjbHh1SUNBZ0lIWmhjaUJqZFhKeVpXNTBVMmw2WlNBOUlEQXNJR04xY25KbGJuUlFiM01nUFNBd0xDQmpkWEp5Wlc1MFRHbHVaU0E5SURBc0lHeHBibVZYYVdSMGFITWdQU0JiWFR0Y2NseHVJQ0FnSUhaaGNpQnNhVzVsVjJsa2RHZ2dQU0F3TzF4eVhHNGdJQ0FnZG1GeUlHMWhlRXhwYm1WWGFXUjBhQ0E5SURBN1hISmNiaUFnSUNCMllYSWdhaXdnYWt4bGJqdGNjbHh1SUNBZ0lIWmhjaUJtYjI1MFJHRjBZU0E5SUdadmJuUk5ZVzVoWjJWeUxtZGxkRVp2Ym5SQ2VVNWhiV1VvWkc5amRXMWxiblJFWVhSaExtWXBPMXh5WEc0Z0lDQWdkbUZ5SUdOb1lYSkVZWFJoTENCalRHVnVaM1JvSUQwZ01EdGNjbHh1SUNBZ0lIWmhjaUJ6ZEhsc1pYTWdQU0JtYjI1MFJHRjBZUzVtVTNSNWJHVXVjM0JzYVhRb0p5QW5LVHRjY2x4dVhISmNiaUFnSUNCMllYSWdabGRsYVdkb2RDQTlJQ2R1YjNKdFlXd25MQ0JtVTNSNWJHVWdQU0FuYm05eWJXRnNKenRjY2x4dUlDQWdJR3hsYmlBOUlITjBlV3hsY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0IyWVhJZ2MzUjViR1ZPWVcxbE8xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0J6ZEhsc1pVNWhiV1VnUFNCemRIbHNaWE5iYVYwdWRHOU1iM2RsY2tOaGMyVW9LVHRjY2x4dUlDQWdJQ0FnSUNCemQybDBZMmdvYzNSNWJHVk9ZVzFsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdKMmwwWVd4cFl5YzZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWlRkSGxzWlNBOUlDZHBkR0ZzYVdNbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBblltOXNaQ2M2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1pYWldsbmFIUWdQU0FuTnpBd0p6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0oySnNZV05ySnpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWmxkbGFXZG9kQ0E5SUNjNU1EQW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQW5iV1ZrYVhWdEp6cGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1psZGxhV2RvZENBOUlDYzFNREFuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FuY21WbmRXeGhjaWM2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0oyNXZjbTFoYkNjNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdaWFpXbG5hSFFnUFNBbk5EQXdKenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBbmJHbG5hSFFuT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDZDBhR2x1SnpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWmxkbGFXZG9kQ0E5SUNjeU1EQW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQmtiMk4xYldWdWRFUmhkR0V1WmxkbGFXZG9kQ0E5SUdaWFpXbG5hSFE3WEhKY2JpQWdJQ0JrYjJOMWJXVnVkRVJoZEdFdVpsTjBlV3hsSUQwZ1psTjBlV3hsTzF4eVhHNGdJQ0FnYkdWdUlEMGdaRzlqZFcxbGJuUkVZWFJoTG5RdWJHVnVaM1JvTzF4eVhHNGdJQ0FnZG1GeUlIUnlZV05yYVc1blQyWm1jMlYwSUQwZ1pHOWpkVzFsYm5SRVlYUmhMblJ5THpFd01EQXFaRzlqZFcxbGJuUkVZWFJoTG5NN1hISmNiaUFnSUNCcFppaGtiMk4xYldWdWRFUmhkR0V1YzNvcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCaWIzaFhhV1IwYUNBOUlHUnZZM1Z0Wlc1MFJHRjBZUzV6ZWxzd1hUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JHRnpkRk53WVdObFNXNWtaWGdnUFNBdE1UdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhkTWFXNWxSbXhoWnlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloa2IyTjFiV1Z1ZEVSaGRHRXVkQzVqYUdGeVFYUW9hU2tnUFQwOUlDY2dKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lYTjBVM0JoWTJWSmJtUmxlQ0E5SUdrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxJR2xtS0dSdlkzVnRaVzUwUkdGMFlTNTBMbU5vWVhKRGIyUmxRWFFvYVNrZ1BUMDlJREV6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVZYYVdSMGFDQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYZE1hVzVsUm14aFp5QTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1ptOXVkRTFoYm1GblpYSXVZMmhoY25NcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhoY2tSaGRHRWdQU0JtYjI1MFRXRnVZV2RsY2k1blpYUkRhR0Z5UkdGMFlTaGtiMk4xYldWdWRFUmhkR0V1ZEM1amFHRnlRWFFvYVNrc0lHWnZiblJFWVhSaExtWlRkSGxzWlN3Z1ptOXVkRVJoZEdFdVprWmhiV2xzZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpUR1Z1WjNSb0lEMGdibVYzVEdsdVpVWnNZV2NnUHlBd0lEb2dZMmhoY2tSaGRHRXVkeXBrYjJOMWJXVnVkRVJoZEdFdWN5OHhNREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeTkwUTJGdWRtRnpTR1ZzY0dWeUxtWnZiblFnUFNCa2IyTjFiV1Z1ZEVSaGRHRXVjeUFySUNkd2VDQW5LeUJtYjI1MFJHRjBZUzVtUm1GdGFXeDVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTB4bGJtZDBhQ0E5SUdadmJuUk5ZVzVoWjJWeUxtMWxZWE4xY21WVVpYaDBLR1J2WTNWdFpXNTBSR0YwWVM1MExtTm9ZWEpCZENocEtTd2daRzlqZFcxbGJuUkVZWFJoTG1Zc0lHUnZZM1Z0Wlc1MFJHRjBZUzV6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloc2FXNWxWMmxrZEdnZ0t5QmpUR1Z1WjNSb0lENGdZbTk0VjJsa2RHZ2dKaVlnWkc5amRXMWxiblJFWVhSaExuUXVZMmhoY2tGMEtHa3BJQ0U5UFNBbklDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRnpkRk53WVdObFNXNWtaWGdnUFQwOUlDMHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaVzRnS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJR3hoYzNSVGNHRmpaVWx1WkdWNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkc5amRXMWxiblJFWVhSaExuUWdQU0JrYjJOMWJXVnVkRVJoZEdFdWRDNXpkV0p6ZEhJb01DeHBLU0FySUZ3aVhGeHlYQ0lnS3lCa2IyTjFiV1Z1ZEVSaGRHRXVkQzV6ZFdKemRISW9hU0E5UFQwZ2JHRnpkRk53WVdObFNXNWtaWGdnUHlCcElDc2dNU0E2SUdrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEZOd1lXTmxTVzVrWlhnZ1BTQXRNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cGJtVlhhV1IwYUNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVZYYVdSMGFDQXJQU0JqVEdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpWZHBaSFJvSUNzOUlIUnlZV05yYVc1blQyWm1jMlYwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR3hsYmlBOUlHUnZZM1Z0Wlc1MFJHRjBZUzUwTG14bGJtZDBhRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR3hwYm1WWGFXUjBhQ0E5SUMwZ2RISmhZMnRwYm1kUFptWnpaWFE3WEhKY2JpQWdJQ0JqVEdWdVozUm9JRDBnTUR0Y2NseHVJQ0FnSUhaaGNpQjFibU52Ykd4aGNITmxaRk53WVdObGN5QTlJREE3WEhKY2JpQWdJQ0IyWVhJZ1kzVnljbVZ1ZEVOb1lYSTdYSEpjYmlBZ0lDQm1iM0lnS0drZ1BTQXdPMmtnUENCc1pXNGdPMmtnS3owZ01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUc1bGQweHBibVZHYkdGbklEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdZM1Z5Y21WdWRFTm9ZWElnUFNCa2IyTjFiV1Z1ZEVSaGRHRXVkQzVqYUdGeVFYUW9hU2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9ZM1Z5Y21WdWRFTm9ZWElnUFQwOUlDY2dKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoYkNBOUlDZGNYSFV3TUVFd0p6dGNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWhqZFhKeVpXNTBRMmhoY2k1amFHRnlRMjlrWlVGMEtEQXBJRDA5UFNBeE15bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIVnVZMjlzYkdGd2MyVmtVM0JoWTJWeklEMGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlZkcFpIUm9jeTV3ZFhOb0tHeHBibVZYYVdSMGFDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhlRXhwYm1WWGFXUjBhQ0E5SUd4cGJtVlhhV1IwYUNBK0lHMWhlRXhwYm1WWGFXUjBhQ0EvSUd4cGJtVlhhV1IwYUNBNklHMWhlRXhwYm1WWGFXUjBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlZkcFpIUm9JRDBnTFNBeUlDb2dkSEpoWTJ0cGJtZFBabVp6WlhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJDQTlJQ2NuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhkTWFXNWxSbXhoWnlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUk1hVzVsSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiQ0E5SUdSdlkzVnRaVzUwUkdGMFlTNTBMbU5vWVhKQmRDaHBLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvWm05dWRFMWhibUZuWlhJdVkyaGhjbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdGeVJHRjBZU0E5SUdadmJuUk5ZVzVoWjJWeUxtZGxkRU5vWVhKRVlYUmhLR04xY25KbGJuUkRhR0Z5TENCbWIyNTBSR0YwWVM1bVUzUjViR1VzSUdadmJuUk5ZVzVoWjJWeUxtZGxkRVp2Ym5SQ2VVNWhiV1VvWkc5amRXMWxiblJFWVhSaExtWXBMbVpHWVcxcGJIa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpUR1Z1WjNSb0lEMGdibVYzVEdsdVpVWnNZV2NnUHlBd0lEb2dZMmhoY2tSaGRHRXVkeXBrYjJOMWJXVnVkRVJoZEdFdWN5OHhNREE3WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2ZG1GeUlHTm9ZWEpYYVdSMGFDQTlJR1p2Ym5STllXNWhaMlZ5TG0xbFlYTjFjbVZVWlhoMEtIWmhiQ3dnWkc5amRXMWxiblJFWVhSaExtWXNJR1J2WTNWdFpXNTBSR0YwWVM1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OTBRMkZ1ZG1GelNHVnNjR1Z5TG1admJuUWdQU0JrYjJOMWJXVnVkRVJoZEdFdWN5QXJJQ2R3ZUNBbkt5Qm1iMjUwVFdGdVlXZGxjaTVuWlhSR2IyNTBRbmxPWVcxbEtHUnZZM1Z0Wlc1MFJHRjBZUzVtS1M1bVJtRnRhV3g1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqVEdWdVozUm9JRDBnWm05dWRFMWhibUZuWlhJdWJXVmhjM1Z5WlZSbGVIUW9kbUZzTENCa2IyTjFiV1Z1ZEVSaGRHRXVaaXdnWkc5amRXMWxiblJFWVhSaExuTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnTHk5Y2NseHVJQ0FnSUNBZ0lDQnBaaWhqZFhKeVpXNTBRMmhoY2lBOVBUMGdKeUFuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZFc1amIyeHNZWEJ6WldSVGNHRmpaWE1nS3owZ1kweGxibWQwYUNBcklIUnlZV05yYVc1blQyWm1jMlYwTzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtVlhhV1IwYUNBclBTQmpUR1Z1WjNSb0lDc2dkSEpoWTJ0cGJtZFBabVp6WlhRZ0t5QjFibU52Ykd4aGNITmxaRk53WVdObGN6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RXNWpiMnhzWVhCelpXUlRjR0ZqWlhNZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnNaWFIwWlhKekxuQjFjMmdvZTJ3NlkweGxibWQwYUN4aGJqcGpUR1Z1WjNSb0xHRmtaRHBqZFhKeVpXNTBVMmw2WlN4dU9tNWxkMHhwYm1WR2JHRm5MQ0JoYmtsdVpHVjRaWE02VzEwc0lIWmhiRG9nZG1Gc0xDQnNhVzVsT2lCamRYSnlaVzUwVEdsdVpYMHBPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHRnVZMmh2Y2tkeWIzVndhVzVuSUQwOUlESXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFUybDZaU0FyUFNCalRHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXd2dQVDBnSnljZ2ZId2dkbUZzSUQwOUlDZGNYSFV3TUVFd0p5QjhmQ0JwSUQwOUlHeGxiaUF0SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc0lEMDlJQ2NuSUh4OElIWmhiQ0E5UFNBblhGeDFNREJCTUNjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJUYVhwbElDMDlJR05NWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FHbHNaU2hqZFhKeVpXNTBVRzl6UEQxcEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUjBaWEp6VzJOMWNuSmxiblJRYjNOZExtRnVJRDBnWTNWeWNtVnVkRk5wZW1VN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnljMXRqZFhKeVpXNTBVRzl6WFM1cGJtUWdQU0JwYm1SbGVEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUjBaWEp6VzJOMWNuSmxiblJRYjNOZExtVjRkSEpoSUQwZ1kweGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKeVpXNTBVRzl6SUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQ0FyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRGTnBlbVVnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9ZVzVqYUc5eVIzSnZkWEJwYm1jZ1BUMGdNeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUlRhWHBsSUNzOUlHTk1aVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIWmhiQ0E5UFNBbkp5QjhmQ0JwSUQwOUlHeGxiaUF0SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc0lEMDlJQ2NuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZFhKeVpXNTBVMmw2WlNBdFBTQmpUR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJocGJHVW9ZM1Z5Y21WdWRGQnZjenc5YVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnljMXRqZFhKeVpXNTBVRzl6WFM1aGJpQTlJR04xY25KbGJuUlRhWHBsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZEhSbGNuTmJZM1Z5Y21WdWRGQnZjMTB1YVc1a0lEMGdhVzVrWlhnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMGRHVnljMXRqZFhKeVpXNTBVRzl6WFM1bGVIUnlZU0E5SUdOTVpXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRGQnZjeUFyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNWeWNtVnVkRk5wZW1VZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ2dLejBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhSMFpYSnpXMmx1WkdWNFhTNXBibVFnUFNCcGJtUmxlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwZEdWeWMxdHBibVJsZUYwdVpYaDBjbUVnUFNBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQ0FyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1J2WTNWdFpXNTBSR0YwWVM1c0lEMGdiR1YwZEdWeWN6dGNjbHh1SUNBZ0lHMWhlRXhwYm1WWGFXUjBhQ0E5SUd4cGJtVlhhV1IwYUNBK0lHMWhlRXhwYm1WWGFXUjBhQ0EvSUd4cGJtVlhhV1IwYUNBNklHMWhlRXhwYm1WWGFXUjBhRHRjY2x4dUlDQWdJR3hwYm1WWGFXUjBhSE11Y0hWemFDaHNhVzVsVjJsa2RHZ3BPMXh5WEc0Z0lDQWdhV1lvWkc5amRXMWxiblJFWVhSaExuTjZLWHRjY2x4dUlDQWdJQ0FnSUNCa2IyTjFiV1Z1ZEVSaGRHRXVZbTk0VjJsa2RHZ2dQU0JrYjJOMWJXVnVkRVJoZEdFdWMzcGJNRjA3WEhKY2JpQWdJQ0FnSUNBZ1pHOWpkVzFsYm5SRVlYUmhMbXAxYzNScFpubFBabVp6WlhRZ1BTQXdPMXh5WEc0Z0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdaRzlqZFcxbGJuUkVZWFJoTG1KdmVGZHBaSFJvSUQwZ2JXRjRUR2x1WlZkcFpIUm9PMXh5WEc0Z0lDQWdJQ0FnSUhOM2FYUmphQ2hrYjJOMWJXVnVkRVJoZEdFdWFpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MFJHRjBZUzVxZFhOMGFXWjVUMlptYzJWMElEMGdMU0JrYjJOMWJXVnVkRVJoZEdFdVltOTRWMmxrZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkc5amRXMWxiblJFWVhSaExtcDFjM1JwWm5sUFptWnpaWFFnUFNBdElHUnZZM1Z0Wlc1MFJHRjBZUzVpYjNoWGFXUjBhQzh5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYjJOMWJXVnVkRVJoZEdFdWFuVnpkR2xtZVU5bVpuTmxkQ0E5SURBN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdaRzlqZFcxbGJuUkVZWFJoTG14cGJtVlhhV1IwYUhNZ1BTQnNhVzVsVjJsa2RHaHpPMXh5WEc1Y2NseHVJQ0FnSUhaaGNpQmhibWx0WVhSdmNuTWdQU0JrWVhSaExtRXNJR0Z1YVcxaGRHOXlSR0YwWVN3Z2JHVjBkR1Z5UkdGMFlUdGNjbHh1SUNBZ0lHcE1aVzRnUFNCaGJtbHRZWFJ2Y25NdWJHVnVaM1JvTzF4eVhHNGdJQ0FnZG1GeUlHSmhjMlZrTENCcGJtUXNJR2x1WkdWNFpYTWdQU0JiWFR0Y2NseHVJQ0FnSUdadmNpaHFQVEE3YWp4cVRHVnVPMm9yUFRFcGUxeHlYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHOXlSR0YwWVNBOUlHRnVhVzFoZEc5eWMxdHFYVHRjY2x4dUlDQWdJQ0FnSUNCcFppaGhibWx0WVhSdmNrUmhkR0V1WVM1ell5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MFJHRjBZUzV6ZEhKdmEyVkRiMnh2Y2tGdWFXMGdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaGhibWx0WVhSdmNrUmhkR0V1WVM1emR5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MFJHRjBZUzV6ZEhKdmEyVlhhV1IwYUVGdWFXMGdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaGhibWx0WVhSdmNrUmhkR0V1WVM1bVl5QjhmQ0JoYm1sdFlYUnZja1JoZEdFdVlTNW1hQ0I4ZkNCaGJtbHRZWFJ2Y2tSaGRHRXVZUzVtY3lCOGZDQmhibWx0WVhSdmNrUmhkR0V1WVM1bVlpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MFJHRjBZUzVtYVd4c1EyOXNiM0pCYm1sdElEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVc1a0lEMGdNRHRjY2x4dUlDQWdJQ0FnSUNCaVlYTmxaQ0E5SUdGdWFXMWhkRzl5UkdGMFlTNXpMbUk3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBkR1Z5UkdGMFlTQTlJR3hsZEhSbGNuTmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZEhSbGNrUmhkR0V1WVc1SmJtUmxlR1Z6VzJwZElEMGdhVzVrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlnb1ltRnpaV1FnUFQwZ01TQW1KaUJzWlhSMFpYSkVZWFJoTG5aaGJDQWhQU0FuSnlrZ2ZId2dLR0poYzJWa0lEMDlJRElnSmlZZ2JHVjBkR1Z5UkdGMFlTNTJZV3dnSVQwZ0p5Y2dKaVlnYkdWMGRHVnlSR0YwWVM1MllXd2dJVDBnSjF4Y2RUQXdRVEFuS1NCOGZDQW9ZbUZ6WldRZ1BUMGdNeUFtSmlBb2JHVjBkR1Z5UkdGMFlTNXVJSHg4SUd4bGRIUmxja1JoZEdFdWRtRnNJRDA5SUNkY1hIVXdNRUV3SnlCOGZDQnBJRDA5SUd4bGJpQXRJREVwS1NCOGZDQW9ZbUZ6WldRZ1BUMGdOQ0FtSmlBb2JHVjBkR1Z5UkdGMFlTNXVJSHg4SUdrZ1BUMGdiR1Z1SUMwZ01Ta3BLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHRnVhVzFoZEc5eVJHRjBZUzV6TG5KdUlEMDlQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVHVnpMbkIxYzJnb2FXNWtLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaQ0FyUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdSaGRHRXVZVnRxWFM1ekxuUnZkR0ZzUTJoaGNuTWdQU0JwYm1RN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdOMWNuSmxiblJKYm1RZ1BTQXRNU3dnYm1WM1NXNWtPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHRnVhVzFoZEc5eVJHRjBZUzV6TG5KdUlEMDlQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHa2dQU0F3T3lCcElEd2diR1Z1T3lCcElDczlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBkR1Z5UkdGMFlTQTlJR3hsZEhSbGNuTmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaGpkWEp5Wlc1MFNXNWtJQ0U5SUd4bGRIUmxja1JoZEdFdVlXNUpibVJsZUdWelcycGRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFNXNWtJRDBnYkdWMGRHVnlSR0YwWVM1aGJrbHVaR1Y0WlhOYmFsMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNTVzVrSUQwZ2FXNWtaWGhsY3k1emNHeHBZMlVvVFdGMGFDNW1iRzl2Y2loTllYUm9MbkpoYm1SdmJTZ3BLbWx1WkdWNFpYTXViR1Z1WjNSb0tTd3hLVnN3WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZEhSbGNrUmhkR0V1WVc1SmJtUmxlR1Z6VzJwZElEMGdibVYzU1c1a08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdaRzlqZFcxbGJuUkVZWFJoTG5sUFptWnpaWFFnUFNCa2IyTjFiV1Z1ZEVSaGRHRXViR2dnZkh3Z1pHOWpkVzFsYm5SRVlYUmhMbk1xTVM0eU8xeHlYRzRnSUNBZ1pHOWpkVzFsYm5SRVlYUmhMbXh6SUQwZ1pHOWpkVzFsYm5SRVlYUmhMbXh6SUh4OElEQTdYSEpjYmlBZ0lDQmtiMk4xYldWdWRFUmhkR0V1WVhOalpXNTBJRDBnWm05dWRFUmhkR0V1WVhOalpXNTBLbVJ2WTNWdFpXNTBSR0YwWVM1ekx6RXdNRHRjY2x4dWZWeHlYRzVjY2x4dVZHVjRkRkJ5YjNCbGNuUjVMbkJ5YjNSdmRIbHdaUzUxY0dSaGRHVkViMk4xYldWdWRFUmhkR0VnUFNCbWRXNWpkR2x2YmlodVpYZEVZWFJoTENCcGJtUmxlQ2tnZTF4eVhHNWNkR2x1WkdWNElEMGdhVzVrWlhnZ1BUMDlJSFZ1WkdWbWFXNWxaQ0EvSUhSb2FYTXVhMlY1YzBsdVpHVjRJRG9nYVc1a1pYZzdYSEpjYmlBZ0lDQjJZWElnWkVSaGRHRWdQU0IwYUdsekxtUmhkR0V1WkM1clcybHVaR1Y0WFM1ek8xeHlYRzRnSUNBZ1pFUmhkR0V1WDE5amIyMXdiR1YwWlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnWkVSaGRHRXVkQ0E5SUc1bGQwUmhkR0V1ZER0Y2NseHVJQ0FnSUhSb2FYTXVhMlY1YzBsdVpHVjRJRDBnTFRFN1hISmNiaUFnSUNCMGFHbHpMbVpwY25OMFJuSmhiV1VnUFNCMGNuVmxPMXh5WEc0Z0lDQWdkR2hwY3k1blpYUldZV3gxWlNncE8xeHlYRzU5WEhKY2JseHVkbUZ5SUhCdmIyeHBibWNnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JseDBablZ1WTNScGIyNGdaRzkxWW14bEtHRnljaWw3WEhKY2JseDBYSFJ5WlhSMWNtNGdZWEp5TG1OdmJtTmhkQ2hCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZZWEp5TG14bGJtZDBhSDBwS1Z4eVhHNWNkSDFjY2x4dVhISmNibHgwY21WMGRYSnVJSHRjY2x4dVhIUmNkR1J2ZFdKc1pUb2daRzkxWW14bFhISmNibHgwZlZ4eVhHNTlLQ2twTzF4dWRtRnlJSEJ2YVc1MFgzQnZiMndnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1WEhSMllYSWdiMklnUFNCN1hISmNibHgwWEhSdVpYZFFiMmx1ZERvZ2JtVjNVRzlwYm5Rc1hISmNibHgwWEhSeVpXeGxZWE5sT2lCeVpXeGxZWE5sWEhKY2JseDBmVnh5WEc1Y2NseHVYSFIyWVhJZ1gyeGxibWQwYUNBOUlEQTdYSEpjYmx4MGRtRnlJRjl0WVhoTVpXNW5kR2dnUFNBNE8xeHlYRzVjZEhaaGNpQndiMjlzSUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN4N2JHVnVaM1JvT2w5dFlYaE1aVzVuZEdoOUtUdGNjbHh1WEhKY2JseDBablZ1WTNScGIyNGdibVYzVUc5cGJuUW9LWHRjY2x4dVhIUmNkSFpoY2lCd2IybHVkRHRjY2x4dVhIUmNkR2xtS0Y5c1pXNW5kR2dwZTF4eVhHNWNkRngwWEhSZmJHVnVaM1JvSUMwOUlERTdYSEpjYmx4MFhIUmNkSEJ2YVc1MElEMGdjRzl2YkZ0ZmJHVnVaM1JvWFR0Y2NseHVYSFJjZEgwZ1pXeHpaU0I3WEhKY2JseDBYSFJjZEhCdmFXNTBJRDBnV3pBdU1Td3dMakZkTzF4eVhHNWNkRngwZlZ4eVhHNWNkRngwY21WMGRYSnVJSEJ2YVc1ME8xeHlYRzVjZEgxY2NseHVYSEpjYmx4MFpuVnVZM1JwYjI0Z2NtVnNaV0Z6WlNod2IybHVkQ2tnZTF4eVhHNWNkRngwYVdZb1gyeGxibWQwYUNBOVBUMGdYMjFoZUV4bGJtZDBhQ2tnZTF4eVhHNWNkRngwWEhSd2IyOXNJRDBnY0c5dmJHbHVaeTVrYjNWaWJHVW9jRzl2YkNrN1hISmNibHgwWEhSY2RGOXRZWGhNWlc1bmRHZ2dQU0JmYldGNFRHVnVaM1JvS2pJN1hISmNibHgwWEhSOVhISmNibHgwWEhSd2IyOXNXMTlzWlc1bmRHaGRJRDBnY0c5cGJuUTdYSEpjYmx4MFhIUmZiR1Z1WjNSb0lDczlJREU3WEhKY2JseDBmVnh5WEc1Y2NseHVYSEpjYmx4MGNtVjBkWEp1SUc5aU8xeHlYRzU5S0NrcE8xeHVkbUZ5SUhOb1lYQmxYM0J2YjJ3Z1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dVhIUjJZWElnYjJJZ1BTQjdYSEpjYmx4MFhIUmpiRzl1WlRvZ1kyeHZibVVzWEhKY2JseDBYSFJ1WlhkVGFHRndaVG9nYm1WM1UyaGhjR1VzWEhKY2JseDBYSFJ5Wld4bFlYTmxPaUJ5Wld4bFlYTmxMRnh5WEc1Y2RGeDBjbVZzWldGelpVRnljbUY1T2lCeVpXeGxZWE5sUVhKeVlYbGNjbHh1WEhSOVhISmNibHh5WEc1Y2RIWmhjaUJmYkdWdVozUm9JRDBnTUR0Y2NseHVYSFIyWVhJZ1gyMWhlRXhsYm1kMGFDQTlJRFE3WEhKY2JseDBkbUZ5SUhCdmIyd2dQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZYMjFoZUV4bGJtZDBhSDBwTzF4eVhHNWNjbHh1WEhSbWRXNWpkR2x2YmlCdVpYZFRhR0Z3WlNncGUxeHlYRzVjZEZ4MGRtRnlJSE5vWVhCbFVHRjBhRHRjY2x4dVhIUmNkR2xtS0Y5c1pXNW5kR2dwZTF4eVhHNWNkRngwWEhSZmJHVnVaM1JvSUMwOUlERTdYSEpjYmx4MFhIUmNkSE5vWVhCbFVHRjBhQ0E5SUhCdmIyeGJYMnhsYm1kMGFGMDdYSEpjYmx4MFhIUjlJR1ZzYzJVZ2UxeHlYRzVjZEZ4MFhIUnphR0Z3WlZCaGRHZ2dQU0J1WlhjZ1UyaGhjR1ZRWVhSb0tDazdYSEpjYmx4MFhIUjlYSEpjYmx4MFhIUnlaWFIxY200Z2MyaGhjR1ZRWVhSb08xeHlYRzVjZEgxY2NseHVYSEpjYmx4MFpuVnVZM1JwYjI0Z2NtVnNaV0Z6WlNoemFHRndaVkJoZEdncElIdGNjbHh1WEhSY2RHbG1LRjlzWlc1bmRHZ2dQVDA5SUY5dFlYaE1aVzVuZEdncElIdGNjbHh1WEhSY2RGeDBjRzl2YkNBOUlIQnZiMnhwYm1jdVpHOTFZbXhsS0hCdmIyd3BPMXh5WEc1Y2RGeDBYSFJmYldGNFRHVnVaM1JvSUQwZ1gyMWhlRXhsYm1kMGFDb3lPMXh5WEc1Y2RGeDBmVnh5WEc1Y2RGeDBkbUZ5SUd4bGJpQTlJSE5vWVhCbFVHRjBhQzVmYkdWdVozUm9MQ0JwTzF4eVhHNWNkRngwWm05eUtHa2dQU0F3T3lCcElEd2diR1Z1T3lCcElDczlJREVwSUh0Y2NseHVYSFJjZEZ4MGNHOXBiblJmY0c5dmJDNXlaV3hsWVhObEtITm9ZWEJsVUdGMGFDNTJXMmxkS1R0Y2NseHVYSFJjZEZ4MGNHOXBiblJmY0c5dmJDNXlaV3hsWVhObEtITm9ZWEJsVUdGMGFDNXBXMmxkS1R0Y2NseHVYSFJjZEZ4MGNHOXBiblJmY0c5dmJDNXlaV3hsWVhObEtITm9ZWEJsVUdGMGFDNXZXMmxkS1R0Y2NseHVYSFJjZEZ4MGMyaGhjR1ZRWVhSb0xuWmJhVjBnUFNCdWRXeHNPMXh5WEc1Y2RGeDBYSFJ6YUdGd1pWQmhkR2d1YVZ0cFhTQTlJRzUxYkd3N1hISmNibHgwWEhSY2RITm9ZWEJsVUdGMGFDNXZXMmxkSUQwZ2JuVnNiRHRjY2x4dVhIUmNkSDFjY2x4dVhIUmNkSE5vWVhCbFVHRjBhQzVmYkdWdVozUm9JRDBnTUR0Y2NseHVYSFJjZEhOb1lYQmxVR0YwYUM1aklEMGdabUZzYzJVN1hISmNibHgwWEhSd2IyOXNXMTlzWlc1bmRHaGRJRDBnYzJoaGNHVlFZWFJvTzF4eVhHNWNkRngwWDJ4bGJtZDBhQ0FyUFNBeE8xeHlYRzVjZEgxY2NseHVYSEpjYmx4MFpuVnVZM1JwYjI0Z2NtVnNaV0Z6WlVGeWNtRjVLSE5vWVhCbFVHRjBhSE5EYjJ4c1pXTjBhVzl1TENCc1pXNW5kR2dwSUh0Y2NseHVYSFJjZEhkb2FXeGxLR3hsYm1kMGFDMHRLU0I3WEhKY2JseDBYSFJjZEhKbGJHVmhjMlVvYzJoaGNHVlFZWFJvYzBOdmJHeGxZM1JwYjI1YmJHVnVaM1JvWFNrN1hISmNibHgwWEhSOVhISmNibHgwZlZ4eVhHNWNjbHh1WEhSbWRXNWpkR2x2YmlCamJHOXVaU2h6YUdGd1pTd2dkSEpoYm5ObWIzSnRLU0I3WEhKY2JseDBYSFIyWVhJZ2FTd2diR1Z1SUQwZ2MyaGhjR1V1WDJ4bGJtZDBhQ0E5UFQwZ2RXNWtaV1pwYm1Wa0lEOGdjMmhoY0dVdWRpNXNaVzVuZEdnZ09pQnphR0Z3WlM1ZmJHVnVaM1JvTzF4eVhHNWNkRngwZG1GeUlHTnNiMjVsWkNBOUlHNWxkMU5vWVhCbEtDazdYSEpjYmx4MFhIUmpiRzl1WldRdWMyVjBUR1Z1WjNSb0tHeGxiaWs3WEhKY2JseDBYSFJqYkc5dVpXUXVZeUE5SUhOb1lYQmxMbU03WEhKY2JseHlYRzVjZEZ4MGRtRnlJSEIwTzF4eVhHNWNkRngwWEhKY2JseDBYSFJtYjNJb2FTQTlJREE3SUdrZ1BDQnNaVzQ3SUdrZ0t6MGdNU2tnZTF4eVhHNWNkRngwWEhScFppaDBjbUZ1YzJadmNtMHBlMXh5WEc1Y2RGeDBYSFJjZEhCMElEMGdkSEpoYm5ObWIzSnRMbUZ3Y0d4NVZHOVFiMmx1ZEVGeWNtRjVLSE5vWVhCbExuWmJhVjFiTUYwc2MyaGhjR1V1ZGx0cFhWc3hYU3d3TERJcE8xeHlYRzVjZEZ4MFhIUmNkR05zYjI1bFpDNXpaWFJZV1VGMEtIQjBXekJkTEhCMFd6RmRMQ2QySnl4cEtUdGNjbHh1WEhSY2RGeDBYSFJ3YjJsdWRGOXdiMjlzTG5KbGJHVmhjMlVvY0hRcE8xeHlYRzVjZEZ4MFhIUmNkSEIwSUQwZ2RISmhibk5tYjNKdExtRndjR3g1Vkc5UWIybHVkRUZ5Y21GNUtITm9ZWEJsTG05YmFWMWJNRjBzYzJoaGNHVXViMXRwWFZzeFhTd3dMRElwTzF4eVhHNWNkRngwWEhSY2RHTnNiMjVsWkM1elpYUllXVUYwS0hCMFd6QmRMSEIwV3pGZExDZHZKeXhwS1R0Y2NseHVYSFJjZEZ4MFhIUndiMmx1ZEY5d2IyOXNMbkpsYkdWaGMyVW9jSFFwTzF4eVhHNWNkRngwWEhSY2RIQjBJRDBnZEhKaGJuTm1iM0p0TG1Gd2NHeDVWRzlRYjJsdWRFRnljbUY1S0hOb1lYQmxMbWxiYVYxYk1GMHNjMmhoY0dVdWFWdHBYVnN4WFN3d0xESXBPMXh5WEc1Y2RGeDBYSFJjZEdOc2IyNWxaQzV6WlhSWVdVRjBLSEIwV3pCZExIQjBXekZkTENkcEp5eHBLVHRjY2x4dVhIUmNkRngwWEhSd2IybHVkRjl3YjI5c0xuSmxiR1ZoYzJVb2NIUXBPMXh5WEc1Y2RGeDBYSFI5Wld4elpYdGNjbHh1WEhSY2RGeDBYSFJqYkc5dVpXUXVjMlYwVkhKcGNHeGxRWFFvYzJoaGNHVXVkbHRwWFZzd1hTeHphR0Z3WlM1MlcybGRXekZkTEhOb1lYQmxMbTliYVYxYk1GMHNjMmhoY0dVdWIxdHBYVnN4WFN4emFHRndaUzVwVzJsZFd6QmRMSE5vWVhCbExtbGJhVjFiTVYwc0lHa3BPMXh5WEc1Y2RGeDBYSFI5WEhKY2JseDBYSFI5WEhKY2JseDBYSFJ5WlhSMWNtNGdZMnh2Ym1Wa1hISmNibHgwZlZ4eVhHNWNjbHh1WEhKY2JseDBjbVYwZFhKdUlHOWlPMXh5WEc1OUtDa3BPMXh1ZG1GeUlITm9ZWEJsUTI5c2JHVmpkR2x2Ymw5d2IyOXNJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNibHgwZG1GeUlHOWlJRDBnZTF4eVhHNWNkRngwYm1WM1UyaGhjR1ZEYjJ4c1pXTjBhVzl1T2lCdVpYZFRhR0Z3WlVOdmJHeGxZM1JwYjI0c1hISmNibHgwWEhSeVpXeGxZWE5sT2lCeVpXeGxZWE5sTEZ4eVhHNWNkRngwWTJ4dmJtVTZJR05zYjI1bFhISmNibHgwZlZ4eVhHNWNjbHh1WEhSMllYSWdYMnhsYm1kMGFDQTlJREE3WEhKY2JseDBkbUZ5SUY5dFlYaE1aVzVuZEdnZ1BTQTBPMXh5WEc1Y2RIWmhjaUJ3YjI5c0lEMGdRWEp5WVhrdVlYQndiSGtvYm5Wc2JDeDdiR1Z1WjNSb09sOXRZWGhNWlc1bmRHaDlLVHRjY2x4dVhISmNibHgwZG1GeUlHTnZiblFnUFNBd08xeHlYRzVjY2x4dVhIUm1kVzVqZEdsdmJpQnVaWGRUYUdGd1pVTnZiR3hsWTNScGIyNG9LWHRjY2x4dVhIUmNkSFpoY2lCemFHRndaVU52Ykd4bFkzUnBiMjQ3WEhKY2JseDBYSFJwWmloZmJHVnVaM1JvS1h0Y2NseHVYSFJjZEZ4MFgyeGxibWQwYUNBdFBTQXhPMXh5WEc1Y2RGeDBYSFJ6YUdGd1pVTnZiR3hsWTNScGIyNGdQU0J3YjI5c1cxOXNaVzVuZEdoZE8xeHlYRzVjZEZ4MGZTQmxiSE5sSUh0Y2NseHVYSFJjZEZ4MGMyaGhjR1ZEYjJ4c1pXTjBhVzl1SUQwZ2JtVjNJRk5vWVhCbFEyOXNiR1ZqZEdsdmJpZ3BPMXh5WEc1Y2RGeDBmVnh5WEc1Y2RGeDBjbVYwZFhKdUlITm9ZWEJsUTI5c2JHVmpkR2x2Ymp0Y2NseHVYSFI5WEhKY2JseHlYRzVjZEdaMWJtTjBhVzl1SUhKbGJHVmhjMlVvYzJoaGNHVkRiMnhzWldOMGFXOXVLU0I3WEhKY2JseDBYSFIyWVhJZ2FTd2diR1Z1SUQwZ2MyaGhjR1ZEYjJ4c1pXTjBhVzl1TGw5c1pXNW5kR2c3WEhKY2JseDBYSFJtYjNJb2FTQTlJREE3SUdrZ1BDQnNaVzQ3SUdrZ0t6MGdNU2tnZTF4eVhHNWNkRngwWEhSemFHRndaVjl3YjI5c0xuSmxiR1ZoYzJVb2MyaGhjR1ZEYjJ4c1pXTjBhVzl1TG5Ob1lYQmxjMXRwWFNrN1hISmNibHgwWEhSOVhISmNibHgwWEhSemFHRndaVU52Ykd4bFkzUnBiMjR1WDJ4bGJtZDBhQ0E5SURBN1hISmNibHh5WEc1Y2RGeDBhV1lvWDJ4bGJtZDBhQ0E5UFQwZ1gyMWhlRXhsYm1kMGFDa2dlMXh5WEc1Y2RGeDBYSFJ3YjI5c0lEMGdjRzl2YkdsdVp5NWtiM1ZpYkdVb2NHOXZiQ2s3WEhKY2JseDBYSFJjZEY5dFlYaE1aVzVuZEdnZ1BTQmZiV0Y0VEdWdVozUm9Lakk3WEhKY2JseDBYSFI5WEhKY2JseDBYSFJ3YjI5c1cxOXNaVzVuZEdoZElEMGdjMmhoY0dWRGIyeHNaV04wYVc5dU8xeHlYRzVjZEZ4MFgyeGxibWQwYUNBclBTQXhPMXh5WEc1Y2RIMWNjbHh1WEhKY2JseDBablZ1WTNScGIyNGdZMnh2Ym1Vb2MyaGhjR1ZEYjJ4c1pXTjBhVzl1TENCdmNtbG5hVzVEYjJ4c1pXTjBhVzl1S1NCN1hISmNibHgwWEhSeVpXeGxZWE5sS0hOb1lYQmxRMjlzYkdWamRHbHZiaWs3WEhKY2JseDBYSFJwWmloZmJHVnVaM1JvSUQwOVBTQmZiV0Y0VEdWdVozUm9LU0I3WEhKY2JseDBYSFJjZEhCdmIyd2dQU0J3YjI5c2FXNW5MbVJ2ZFdKc1pTaHdiMjlzS1R0Y2NseHVYSFJjZEZ4MFgyMWhlRXhsYm1kMGFDQTlJRjl0WVhoTVpXNW5kR2dxTWp0Y2NseHVYSFJjZEgxY2NseHVYSFJjZEhCdmIyeGJYMnhsYm1kMGFGMGdQU0J6YUdGd1pVTnZiR3hsWTNScGIyNDdYSEpjYmx4MFhIUmZiR1Z1WjNSb0lDczlJREU3WEhKY2JseDBmVnh5WEc1Y2NseHVYSEpjYmx4MGNtVjBkWEp1SUc5aU8xeHlYRzU5S0NrcE8xeHVablZ1WTNScGIyNGdRbUZ6WlZKbGJtUmxjbVZ5S0NsN2ZWeHlYRzVDWVhObFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTm9aV05yVEdGNVpYSnpJRDBnWm5WdVkzUnBiMjRvYm5WdEtYdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxteGhlV1Z5Y3k1c1pXNW5kR2dzSUdSaGRHRTdYSEpjYmlBZ0lDQjBhR2x6TG1OdmJYQnNaWFJsVEdGNVpYSnpJRDBnZEhKMVpUdGNjbHh1SUNBZ0lHWnZjaUFvYVNBOUlHeGxiaUF0SURFN0lHa2dQajBnTURzZ2FTMHRLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxtVnNaVzFsYm5SelcybGRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFZ1BTQjBhR2x6TG14aGVXVnljMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1pHRjBZUzVwY0NBdElHUmhkR0V1YzNRZ1BEMGdLRzUxYlNBdElIUm9hWE11YkdGNVpYSnpXMmxkTG5OMEtTQW1KaUJrWVhSaExtOXdJQzBnWkdGMFlTNXpkQ0ErSUNodWRXMGdMU0IwYUdsekxteGhlV1Z5YzF0cFhTNXpkQ2twWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZblZwYkdSSmRHVnRLR2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXRjR3hsZEdWTVlYbGxjbk1nUFNCMGFHbHpMbVZzWlcxbGJuUnpXMmxkSUQ4Z2RHaHBjeTVqYjIxd2JHVjBaVXhoZVdWeWN6cG1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVZMmhsWTJ0UVpXNWthVzVuUld4bGJXVnVkSE1vS1R0Y2NseHVmVHRjY2x4dVhISmNia0poYzJWU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsU1hSbGJTQTlJR1oxYm1OMGFXOXVLR3hoZVdWeUtYdGNjbHh1SUNBZ0lITjNhWFJqYUNoc1lYbGxjaTUwZVNsN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNBeU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpjbVZoZEdWSmJXRm5aU2hzWVhsbGNpazdYSEpjYmlBZ0lDQWdJQ0FnWTJGelpTQXdPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqY21WaGRHVkRiMjF3S0d4aGVXVnlLVHRjY2x4dUlDQWdJQ0FnSUNCallYTmxJREU2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OeVpXRjBaVk52Ykdsa0tHeGhlV1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQmpZWE5sSURRNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnlaV0YwWlZOb1lYQmxLR3hoZVdWeUtUdGNjbHh1SUNBZ0lDQWdJQ0JqWVhObElEVTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU55WldGMFpWUmxlSFFvYkdGNVpYSXBPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdNVE02WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OeVpXRjBaVU5oYldWeVlTaHNZWGxsY2lrN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNBNU9UcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTVqY21WaGRHVkNZWE5sS0d4aGVXVnlLVHRjY2x4dWZUdGNjbHh1WEhKY2JrSmhjMlZTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxRMkZ0WlhKaElEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25XVzkxWEZ3bmNtVWdkWE5wYm1jZ1lTQXpaQ0JqWVcxbGNtRXVJRlJ5ZVNCMGFHVWdhSFJ0YkNCeVpXNWtaWEpsY2k0bktUdGNjbHh1ZlZ4eVhHNWNjbHh1UW1GelpWSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWlkV2xzWkVGc2JFbDBaVzF6SUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxteGhlV1Z5Y3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WW5WcGJHUkpkR1Z0S0drcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTVqYUdWamExQmxibVJwYm1kRmJHVnRaVzUwY3lncE8xeHlYRzU5TzF4eVhHNWNjbHh1UW1GelpWSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNXBibU5zZFdSbFRHRjVaWEp6SUQwZ1puVnVZM1JwYjI0b2JtVjNUR0Y1WlhKektYdGNjbHh1SUNBZ0lIUm9hWE11WTI5dGNHeGxkR1ZNWVhsbGNuTWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0J1WlhkTVlYbGxjbk11YkdWdVozUm9PMXh5WEc0Z0lDQWdkbUZ5SUdvc0lHcE1aVzRnUFNCMGFHbHpMbXhoZVdWeWN5NXNaVzVuZEdnN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJR29nUFNBd08xeHlYRzRnSUNBZ0lDQWdJSGRvYVd4bEtHbzhha3hsYmlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11YkdGNVpYSnpXMnBkTG1sa0lEMDlJRzVsZDB4aGVXVnljMXRwWFM1cFpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5YzF0cVhTQTlJRzVsZDB4aGVXVnljMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR29nS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNUNZWE5sVW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG5ObGRGQnliMnBsWTNSSmJuUmxjbVpoWTJVZ1BTQm1kVzVqZEdsdmJpaHdTVzUwWlhKbVlXTmxLWHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXdjbTlxWldOMFNXNTBaWEptWVdObElEMGdjRWx1ZEdWeVptRmpaVHRjY2x4dWZUdGNjbHh1WEhKY2JrSmhjMlZTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1YVc1cGRFbDBaVzF6SUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxtZHNiMkpoYkVSaGRHRXVjSEp2WjNKbGMzTnBkbVZNYjJGa0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtSjFhV3hrUVd4c1NYUmxiWE1vS1R0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVFtRnpaVkpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzVpZFdsc1pFVnNaVzFsYm5SUVlYSmxiblJwYm1jZ1BTQm1kVzVqZEdsdmJpaGxiR1Z0Wlc1MExDQndZWEpsYm5ST1lXMWxMQ0JvYVdWeVlYSmphSGtwZTF4eVhHNGdJQ0FnYUdsbGNtRnlZMmg1SUQwZ2FHbGxjbUZ5WTJoNUlIeDhJRnRkTzF4eVhHNGdJQ0FnZG1GeUlHVnNaVzFsYm5SeklEMGdkR2hwY3k1bGJHVnRaVzUwY3p0Y2NseHVJQ0FnSUhaaGNpQnNZWGxsY25NZ1BTQjBhR2x6TG14aGVXVnljenRjY2x4dUlDQWdJSFpoY2lCcFBUQXNJR3hsYmlBOUlHeGhlV1Z5Y3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0IzYUdsc1pTaHBQR3hsYmlsN1hISmNiaUFnSUNBZ0lDQWdhV1lvYkdGNVpYSnpXMmxkTG1sdVpDQTlQU0J3WVhKbGJuUk9ZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lXVnNaVzFsYm5SelcybGRJSHg4SUdWc1pXMWxiblJ6VzJsZElEMDlQU0IwY25WbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVluVnBiR1JKZEdWdEtHa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhaR1JRWlc1a2FXNW5SV3hsYldWdWRDaGxiR1Z0Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtHeGhlV1Z5YzF0cFhTNXdZWEpsYm5RZ0lUMDlJSFZ1WkdWbWFXNWxaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb2FXVnlZWEpqYUhrdWNIVnphQ2hsYkdWdFpXNTBjMXRwWFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MGMxdHBYUzVmYVhOUVlYSmxiblFnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlkV2xzWkVWc1pXMWxiblJRWVhKbGJuUnBibWNvWld4bGJXVnVkQ3hzWVhsbGNuTmJhVjB1Y0dGeVpXNTBMQ0JvYVdWeVlYSmphSGtwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdsbGNtRnlZMmg1TG5CMWMyZ29aV3hsYldWdWRITmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEhOYmFWMHVYMmx6VUdGeVpXNTBJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzWlcxbGJuUXVjMlYwU0dsbGNtRnlZMmg1S0docFpYSmhjbU5vZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1Q1lYTmxVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbUZrWkZCbGJtUnBibWRGYkdWdFpXNTBJRDBnWm5WdVkzUnBiMjRvWld4bGJXVnVkQ2w3WEhKY2JpQWdJQ0IwYUdsekxuQmxibVJwYm1kRmJHVnRaVzUwY3k1d2RYTm9LR1ZzWlcxbGJuUXBPMXh5WEc1OU8xeHVablZ1WTNScGIyNGdVMVpIVW1WdVpHVnlaWElvWVc1cGJXRjBhVzl1U1hSbGJTd2dZMjl1Wm1sbktYdGNjbHh1SUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTQTlJR0Z1YVcxaGRHbHZia2wwWlcwN1hISmNiaUFnSUNCMGFHbHpMbXhoZVdWeWN5QTlJRzUxYkd3N1hISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNtVmtSbkpoYldVZ1BTQXRNVHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTQTlJSHRjY2x4dUlDQWdJQ0FnSUNCbWNtRnRaVTUxYlRvZ0xURmNjbHh1SUNBZ0lIMDdYSEpjYmlBZ0lDQjBhR2x6TG5KbGJtUmxja052Ym1acFp5QTlJSHRjY2x4dUlDQWdJQ0FnSUNCd2NtVnpaWEoyWlVGemNHVmpkRkpoZEdsdk9pQW9ZMjl1Wm1sbklDWW1JR052Ym1acFp5NXdjbVZ6WlhKMlpVRnpjR1ZqZEZKaGRHbHZLU0I4ZkNBbmVFMXBaRmxOYVdRZ2JXVmxkQ2NzWEhKY2JpQWdJQ0FnSUNBZ2NISnZaM0psYzNOcGRtVk1iMkZrT2lBb1kyOXVabWxuSUNZbUlHTnZibVpwWnk1d2NtOW5jbVZ6YzJsMlpVeHZZV1FwSUh4OElHWmhiSE5sTEZ4eVhHNGdJQ0FnSUNBZ0lHaHBaR1ZQYmxSeVlXNXpjR0Z5Wlc1ME9pQW9ZMjl1Wm1sbklDWW1JR052Ym1acFp5NW9hV1JsVDI1VWNtRnVjM0JoY21WdWRDQTlQVDBnWm1Gc2MyVXBJRDhnWm1Gc2MyVWdPaUIwY25WbExGeHlYRzRnSUNBZ0lDQWdJSFpwWlhkQ2IzaFBibXg1T2lBb1kyOXVabWxuSUNZbUlHTnZibVpwWnk1MmFXVjNRbTk0VDI1c2VTa2dmSHdnWm1Gc2MyVXNYSEpjYmlBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsT2lBb1kyOXVabWxuSUNZbUlHTnZibVpwWnk1amJHRnpjMDVoYldVcElIeDhJQ2NuWEhKY2JpQWdJQ0I5TzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbkpsYm1SbGNrTnZibVpwWnlBOUlIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbk8xeHlYRzRnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTV3Wlc1a2FXNW5SV3hsYldWdWRITWdQU0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVaR1Z6ZEhKdmVXVmtJRDBnWm1Gc2MyVTdYSEpjYmx4eVhHNTlYSEpjYmx4eVhHNWxlSFJsYm1SUWNtOTBiM1I1Y0dVb1FtRnpaVkpsYm1SbGNtVnlMRk5XUjFKbGJtUmxjbVZ5S1R0Y2NseHVYSEpjYmxOV1IxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWQ1lYTmxJRDBnWm5WdVkzUnBiMjRnS0dSaGRHRXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQnVaWGNnVTFaSFFtRnpaVVZzWlcxbGJuUW9aR0YwWVN3Z2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5Rc2RHaHBjeTVuYkc5aVlXeEVZWFJoTEhSb2FYTXBPMXh5WEc1OU8xeHlYRzVjY2x4dVUxWkhVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU55WldGMFpWTm9ZWEJsSUQwZ1puVnVZM1JwYjI0Z0tHUmhkR0VwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NWTm9ZWEJsUld4bGJXVnVkQ2hrWVhSaExDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDeDBhR2x6TG1kc2IySmhiRVJoZEdFc2RHaHBjeWs3WEhKY2JuMDdYSEpjYmx4eVhHNVRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxWR1Y0ZENBOUlHWjFibU4wYVc5dUlDaGtZWFJoS1NCN1hISmNiaUFnSUNCeVpYUjFjbTRnYm1WM0lGTldSMVJsZUhSRmJHVnRaVzUwS0dSaGRHRXNJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMSFJvYVhNdVoyeHZZbUZzUkdGMFlTeDBhR2x6S1R0Y2NseHVYSEpjYm4wN1hISmNibHh5WEc1VFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFNXMWhaMlVnUFNCbWRXNWpkR2x2YmlBb1pHRjBZU2tnZTF4eVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCSlNXMWhaMlZGYkdWdFpXNTBLR1JoZEdFc0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExIUm9hWE11WjJ4dlltRnNSR0YwWVN4MGFHbHpLVHRjY2x4dWZUdGNjbHh1WEhKY2JsTldSMUpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzVqY21WaGRHVkRiMjF3SUQwZ1puVnVZM1JwYjI0Z0tHUmhkR0VwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NVTnZiWEJGYkdWdFpXNTBLR1JoZEdFc0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExIUm9hWE11WjJ4dlltRnNSR0YwWVN4MGFHbHpLVHRjY2x4dVhISmNibjA3WEhKY2JseHlYRzVUVmtkU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVTI5c2FXUWdQU0JtZFc1amRHbHZiaUFvWkdGMFlTa2dlMXh5WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJKVTI5c2FXUkZiR1Z0Wlc1MEtHUmhkR0VzSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTEhSb2FYTXVaMnh2WW1Gc1JHRjBZU3gwYUdsektUdGNjbHh1ZlR0Y2NseHVYSEpjYmxOV1IxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpiMjVtYVdkQmJtbHRZWFJwYjI0Z1BTQm1kVzVqZEdsdmJpaGhibWx0UkdGMFlTbDdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3bmMzWm5KeWs3WEhKY2JpQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb0ozaHRiRzV6Snl3bmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbktUdGNjbHh1SUNBZ0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duZG1sbGQwSnZlQ2NzSnpBZ01DQW5LMkZ1YVcxRVlYUmhMbmNySnlBbksyRnVhVzFFWVhSaExtZ3BPMXh5WEc0Z0lDQWdhV1lvSVhSb2FYTXVjbVZ1WkdWeVEyOXVabWxuTG5acFpYZENiM2hQYm14NUtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZDNhV1IwYUNjc1lXNXBiVVJoZEdFdWR5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZG9aV2xuYUhRbkxHRnVhVzFFWVhSaExtZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5OMGVXeGxMbmRwWkhSb0lEMGdKekV3TUNVbk8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbk4wZVd4bExtaGxhV2RvZENBOUlDY3hNREFsSnp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxtTnNZWE56VG1GdFpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25ZMnhoYzNNbkxDQjBhR2x6TG5KbGJtUmxja052Ym1acFp5NWpiR0Z6YzA1aGJXVXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0Nkd2NtVnpaWEoyWlVGemNHVmpkRkpoZEdsdkp5eDBhR2x6TG5KbGJtUmxja052Ym1acFp5NXdjbVZ6WlhKMlpVRnpjR1ZqZEZKaGRHbHZLVHRjY2x4dUlDQWdJQzh2ZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzNSNWJHVXVkSEpoYm5ObWIzSnRJRDBnSjNSeVlXNXpiR0YwWlROa0tEQXNNQ3d3S1NjN1hISmNiaUFnSUNBdkwzUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExuTjBlV3hsTG5SeVlXNXpabTl5YlU5eWFXZHBiaUE5SUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5OMGVXeGxMbTF2ZWxSeVlXNXpabTl5YlU5eWFXZHBiaUE5SUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5OMGVXeGxMbmRsWW10cGRGUnlZVzV6Wm05eWJVOXlhV2RwYmlBOUlIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExuTjBlV3hsV3ljdGQyVmlhMmwwTFhSeVlXNXpabTl5YlNkZElEMGdYQ0l3Y0hnZ01IQjRJREJ3ZUZ3aU8xeHlYRzRnSUNBZ2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdExuZHlZWEJ3WlhJdVlYQndaVzVrUTJocGJHUW9kR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdMeTlOWVhOcklHRnVhVzFoZEdsdmJseHlYRzRnSUNBZ2RtRnlJR1JsWm5NZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSUNka1pXWnpKeWs3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaR1ZtY3lBOUlHUmxabk03WEhKY2JpQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzVoY0hCbGJtUkRhR2xzWkNoa1pXWnpLVHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNW5aWFJCYzNObGRFUmhkR0VnUFNCMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwdVoyVjBRWE56WlhSRVlYUmhMbUpwYm1Rb2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdEtUdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1blpYUkJjM05sZEhOUVlYUm9JRDBnZEdocGN5NWhibWx0WVhScGIyNUpkR1Z0TG1kbGRFRnpjMlYwYzFCaGRHZ3VZbWx1WkNoMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwcE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG5CeWIyZHlaWE56YVhabFRHOWhaQ0E5SUhSb2FYTXVjbVZ1WkdWeVEyOXVabWxuTG5CeWIyZHlaWE56YVhabFRHOWhaRHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlVsa0lEMGdNRHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXViU0E5SUdGdWFXMUVZWFJoTG01dE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJSGM2SUdGdWFXMUVZWFJoTG5jc1hISmNiaUFnSUNBZ0lDQWdhRG9nWVc1cGJVUmhkR0V1YUZ4eVhHNGdJQ0FnZlR0Y2NseHVJQ0FnSUhSb2FYTXVaR0YwWVNBOUlHRnVhVzFFWVhSaE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlNBOUlHRnVhVzFFWVhSaExtWnlPMXh5WEc0Z0lDQWdkbUZ5SUcxaGMydEZiR1Z0Wlc1MElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENBblkyeHBjRkJoZEdnbktUdGNjbHh1SUNBZ0lIWmhjaUJ5WldOMElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkeVpXTjBKeWs3WEhKY2JpQWdJQ0J5WldOMExuTmxkRUYwZEhKcFluVjBaU2duZDJsa2RHZ25MR0Z1YVcxRVlYUmhMbmNwTzF4eVhHNGdJQ0FnY21WamRDNXpaWFJCZEhSeWFXSjFkR1VvSjJobGFXZG9kQ2NzWVc1cGJVUmhkR0V1YUNrN1hISmNiaUFnSUNCeVpXTjBMbk5sZEVGMGRISnBZblYwWlNnbmVDY3NNQ2s3WEhKY2JpQWdJQ0J5WldOMExuTmxkRUYwZEhKcFluVjBaU2duZVNjc01DazdYSEpjYmlBZ0lDQjJZWElnYldGemEwbGtJRDBnSjJGdWFXMWhkR2x2YmsxaGMydGZKeXR5WVc1a2IyMVRkSEpwYm1jb01UQXBPMXh5WEc0Z0lDQWdiV0Z6YTBWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzSUcxaGMydEpaQ2s3WEhKY2JpQWdJQ0J0WVhOclJXeGxiV1Z1ZEM1aGNIQmxibVJEYUdsc1pDaHlaV04wS1R0Y2NseHVJQ0FnSUhaaGNpQnRZWE5yWldSRmJHVnRaVzUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RuSnlrN1hISmNiaUFnSUNCdFlYTnJaV1JGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNoY0ltTnNhWEF0Y0dGMGFGd2lMQ0JjSW5WeWJDaGNJaUFySUd4dlkyRjBhVzl1U0hKbFppQXJJRndpSTF3aUsyMWhjMnRKWkN0Y0lpbGNJaWs3WEhKY2JpQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzVoY0hCbGJtUkRhR2xzWkNodFlYTnJaV1JGYkdWdFpXNTBLVHRjY2x4dUlDQWdJR1JsWm5NdVlYQndaVzVrUTJocGJHUW9iV0Z6YTBWc1pXMWxiblFwTzF4eVhHNGdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCdFlYTnJaV1JGYkdWdFpXNTBPMXh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxjbk1nUFNCaGJtbHRSR0YwWVM1c1lYbGxjbk03WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWElnUFNCdVpYY2dSbTl1ZEUxaGJtRm5aWElvS1R0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVtYjI1MFRXRnVZV2RsY2k1aFpHUkRhR0Z5Y3loaGJtbHRSR0YwWVM1amFHRnljeWs3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWEl1WVdSa1JtOXVkSE1vWVc1cGJVUmhkR0V1Wm05dWRITXNaR1ZtY3lrN1hISmNiaUFnSUNCMGFHbHpMbVZzWlcxbGJuUnpJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PbUZ1YVcxRVlYUmhMbXhoZVdWeWN5NXNaVzVuZEdoOUtUdGNjbHh1ZlR0Y2NseHVYSEpjYmx4eVhHNVRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNTNjbUZ3Y0dWeUxtbHVibVZ5U0ZSTlRDQTlJQ2NuTzF4eVhHNGdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtUmxabk1nUFNCdWRXeHNPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhSb2FYTXViR0Y1WlhKeklEOGdkR2hwY3k1c1lYbGxjbk11YkdWdVozUm9JRG9nTUR0Y2NseHVJQ0FnSUdadmNpQW9hU0E5SURBN0lHa2dQQ0JzWlc0N0lHa3JLeWtnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExtUmxjM1J5YjNrb0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFsYm5SekxteGxibWQwYUNBOUlEQTdYSEpjYmlBZ0lDQjBhR2x6TG1SbGMzUnliM2xsWkNBOUlIUnlkV1U3WEhKY2JpQWdJQ0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzBnUFNCdWRXeHNPMXh5WEc1OU8xeHlYRzVjY2x4dVUxWkhVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMblZ3WkdGMFpVTnZiblJoYVc1bGNsTnBlbVVnUFNCbWRXNWpkR2x2YmlBb0tTQjdYSEpjYm4wN1hISmNibHh5WEc1VFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdSSmRHVnRJQ0E5SUdaMWJtTjBhVzl1S0hCdmN5bDdYSEpjYmlBZ0lDQjJZWElnWld4bGJXVnVkSE1nUFNCMGFHbHpMbVZzWlcxbGJuUnpPMXh5WEc0Z0lDQWdhV1lvWld4bGJXVnVkSE5iY0c5elhTQjhmQ0IwYUdsekxteGhlV1Z5YzF0d2IzTmRMblI1SUQwOUlEazVLWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JsYkdWdFpXNTBjMXR3YjNOZElEMGdkSEoxWlR0Y2NseHVJQ0FnSUhaaGNpQmxiR1Z0Wlc1MElEMGdkR2hwY3k1amNtVmhkR1ZKZEdWdEtIUm9hWE11YkdGNVpYSnpXM0J2YzEwcE8xeHlYRzVjY2x4dUlDQWdJR1ZzWlcxbGJuUnpXM0J2YzEwZ1BTQmxiR1Z0Wlc1ME8xeHlYRzRnSUNBZ2FXWW9aWGh3Y21WemMybHZibk5RYkhWbmFXNHBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11YkdGNVpYSnpXM0J2YzEwdWRIa2dQVDA5SURBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Y0hKdmFtVmpkRWx1ZEdWeVptRmpaUzV5WldkcGMzUmxja052YlhCdmMybDBhVzl1S0dWc1pXMWxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbWx1YVhSRmVIQnlaWE56YVc5dWN5Z3BPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1aGNIQmxibVJGYkdWdFpXNTBTVzVRYjNNb1pXeGxiV1Z1ZEN4d2IzTXBPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NXNZWGxsY25OYmNHOXpYUzUwZENsN1hISmNiaUFnSUNBZ0lDQWdhV1lvSVhSb2FYTXVaV3hsYldWdWRITmJjRzl6SUMwZ01WMGdmSHdnZEdocGN5NWxiR1Z0Wlc1MGMxdHdiM01nTFNBeFhTQTlQVDBnZEhKMVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW5WcGJHUkpkR1Z0S0hCdmN5QXRJREVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1MEtHVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RdWMyVjBUV0YwZEdVb1pXeGxiV1Z1ZEhOYmNHOXpJQzBnTVYwdWJHRjVaWEpKWkNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OU8xeHlYRzVjY2x4dVUxWkhVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU5vWldOclVHVnVaR2x1WjBWc1pXMWxiblJ6SUNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjNhR2xzWlNoMGFHbHpMbkJsYm1ScGJtZEZiR1Z0Wlc1MGN5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCbGJHVnRaVzUwSUQwZ2RHaHBjeTV3Wlc1a2FXNW5SV3hsYldWdWRITXVjRzl3S0NrN1hISmNiaUFnSUNBZ0lDQWdaV3hsYldWdWRDNWphR1ZqYTFCaGNtVnVkR2x1WnlncE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0dWc1pXMWxiblF1WkdGMFlTNTBkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcElEMGdNQ3dnYkdWdUlEMGdkR2hwY3k1bGJHVnRaVzUwY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bEtHazhiR1Z1S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMGdQVDA5SUdWc1pXMWxiblFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzWlcxbGJuUXVjMlYwVFdGMGRHVW9kR2hwY3k1bGJHVnRaVzUwYzF0cElDMGdNVjB1YkdGNVpYSkpaQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNVRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaHVkVzBwZTF4eVhHNGdJQ0FnYVdZb2RHaHBjeTV5Wlc1a1pYSmxaRVp5WVcxbElEMDlJRzUxYlNCOGZDQjBhR2x6TG1SbGMzUnliM2xsWkNsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9iblZ0SUQwOVBTQnVkV3hzS1h0Y2NseHVJQ0FnSUNBZ0lDQnVkVzBnUFNCMGFHbHpMbkpsYm1SbGNtVmtSbkpoYldVN1hISmNiaUFnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNtVmtSbkpoYldVZ1BTQnVkVzA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F2TDJOc1pXRnlVRzlwYm5SektDazdYSEpjYmlBZ0lDQXZLbU52Ym5OdmJHVXViRzluS0NjdExTMHRMUzB0SnlrN1hISmNiaUFnSUNCamIyNXpiMnhsTG14dlp5Z25SbEpCVFVVZ0p5eHVkVzBwT3lvdlhISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVk9kVzBnUFNCdWRXMDdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZKWkNBclBTQXhPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExuQnliMnBsWTNSSmJuUmxjbVpoWTJVdVkzVnljbVZ1ZEVaeVlXMWxJRDBnYm5WdE8xeHlYRzRnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSFJvYVhNdWJHRjVaWEp6TG14bGJtZDBhRHRjY2x4dUlDQWdJR2xtS0NGMGFHbHpMbU52YlhCc1pYUmxUR0Y1WlhKektYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTm9aV05yVEdGNVpYSnpLRzUxYlNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCbWIzSWdLR2tnUFNCc1pXNGdMU0F4T3lCcElENDlJREE3SUdrdExTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WTI5dGNHeGxkR1ZNWVhsbGNuTWdmSHdnZEdocGN5NWxiR1Z0Wlc1MGMxdHBYU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMHVjSEpsY0dGeVpVWnlZVzFsS0c1MWJTQXRJSFJvYVhNdWJHRjVaWEp6VzJsZExuTjBLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCbWIzSWdLR2tnUFNCc1pXNGdMU0F4T3lCcElENDlJREE3SUdrdExTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WTI5dGNHeGxkR1ZNWVhsbGNuTWdmSHdnZEdocGN5NWxiR1Z0Wlc1MGMxdHBYU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMHVjbVZ1WkdWeVJuSmhiV1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1VFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZWEJ3Wlc1a1JXeGxiV1Z1ZEVsdVVHOXpJRDBnWm5WdVkzUnBiMjRvWld4bGJXVnVkQ3dnY0c5ektYdGNjbHh1SUNBZ0lIWmhjaUJ1WlhkRmJHVnRaVzUwSUQwZ1pXeGxiV1Z1ZEM1blpYUkNZWE5sUld4bGJXVnVkQ2dwTzF4eVhHNGdJQ0FnYVdZb0lXNWxkMFZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFpoY2lCcElEMGdNRHRjY2x4dUlDQWdJSFpoY2lCdVpYaDBSV3hsYldWdWREdGNjbHh1SUNBZ0lIZG9hV3hsS0drOGNHOXpLWHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhR2x6TG1Wc1pXMWxiblJ6VzJsZElDWW1JSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMGhQVDBnZEhKMVpTQW1KaUIwYUdsekxtVnNaVzFsYm5SelcybGRMbWRsZEVKaGMyVkZiR1Z0Wlc1MEtDa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVaWGgwUld4bGJXVnVkQ0E5SUhSb2FYTXVaV3hsYldWdWRITmJhVjB1WjJWMFFtRnpaVVZzWlcxbGJuUW9LVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhU0FyUFNBeE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9ibVY0ZEVWc1pXMWxiblFwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExtbHVjMlZ5ZEVKbFptOXlaU2h1WlhkRmJHVnRaVzUwTENCdVpYaDBSV3hsYldWdWRDazdYSEpjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0c1bGQwVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1VTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtaHBaR1VnUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMzUjViR1V1WkdsemNHeGhlU0E5SUNkdWIyNWxKenRjY2x4dWZUdGNjbHh1WEhKY2JsTldSMUpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzV6YUc5M0lEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQW5ZbXh2WTJzbk8xeHlYRzU5TzF4eVhHNWNjbHh1VTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExuTmxZWEpqYUVWNGRISmhRMjl0Y0c5emFYUnBiMjV6SUQwZ1puVnVZM1JwYjI0b1lYTnpaWFJ6S1h0Y2NseHVJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQmhjM05sZEhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnZG1GeUlHWnNiMkYwYVc1blEyOXVkR0ZwYm1WeUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbkp5azdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHRnpjMlYwYzF0cFhTNTRkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCamIyMXdJRDBnZEdocGN5NWpjbVZoZEdWRGIyMXdLR0Z6YzJWMGMxdHBYU3htYkc5aGRHbHVaME52Ym5SaGFXNWxjaXgwYUdsekxtZHNiMkpoYkVSaGRHRXVZMjl0Y0N4dWRXeHNLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl0Y0M1cGJtbDBSWGh3Y21WemMybHZibk1vS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5amIyMXdMbU52YlhCSmJuUmxjbVpoWTJVZ1BTQkRiMjF3Ulhod2NtVnpjMmx2YmtsdWRHVnlabUZqWlNoamIyMXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTlGZUhCeVpYTnphVzl1Y3k1aFpHUk1ZWGxsY25OSmJuUmxjbVpoWTJVb1kyOXRjQzVsYkdWdFpXNTBjeXdnZEdocGN5NW5iRzlpWVd4RVlYUmhMbkJ5YjJwbFkzUkpiblJsY21aaFkyVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNISnZhbVZqZEVsdWRHVnlabUZqWlM1eVpXZHBjM1JsY2tOdmJYQnZjMmwwYVc5dUtHTnZiWEFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYRzVtZFc1amRHbHZiaUJOWVhOclJXeGxiV1Z1ZENoa1lYUmhMR1ZzWlcxbGJuUXNaMnh2WW1Gc1JHRjBZU2tnZTF4eVhHNGdJQ0FnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5QTlJRnRkTzF4eVhHNGdJQ0FnZEdocGN5NWtZWFJoSUQwZ1pHRjBZVHRjY2x4dUlDQWdJSFJvYVhNdVpXeGxiV1Z1ZENBOUlHVnNaVzFsYm5RN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0VnUFNCbmJHOWlZV3hFWVhSaE8xeHlYRzRnSUNBZ2RHaHBjeTV6ZEc5eVpXUkVZWFJoSUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG0xaGMydHpVSEp2Y0dWeWRHbGxjeUE5SUhSb2FYTXVaR0YwWVM1dFlYTnJjMUJ5YjNCbGNuUnBaWE03WEhKY2JpQWdJQ0IwYUdsekxuWnBaWGRFWVhSaElEMGdRWEp5WVhrdVlYQndiSGtvYm5Wc2JDeDdiR1Z1WjNSb09uUm9hWE11YldGemEzTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFIMHBPMXh5WEc0Z0lDQWdkR2hwY3k1dFlYTnJSV3hsYldWdWRDQTlJRzUxYkd3N1hISmNiaUFnSUNCMGFHbHpMbVpwY25OMFJuSmhiV1VnUFNCMGNuVmxPMXh5WEc0Z0lDQWdkbUZ5SUdSbFpuTWdQU0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaR1ZtY3p0Y2NseHVJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjBhR2x6TG0xaGMydHpVSEp2Y0dWeWRHbGxjeTVzWlc1bmRHZzdYSEpjYmx4eVhHNWNjbHh1SUNBZ0lIWmhjaUJ3WVhSb0xDQndjbTl3WlhKMGFXVnpJRDBnZEdocGN5NXRZWE5yYzFCeWIzQmxjblJwWlhNN1hISmNiaUFnSUNCMllYSWdZMjkxYm5RZ1BTQXdPMXh5WEc0Z0lDQWdkbUZ5SUdOMWNuSmxiblJOWVhOcmN5QTlJRnRkTzF4eVhHNGdJQ0FnZG1GeUlHb3NJR3BNWlc0N1hISmNiaUFnSUNCMllYSWdiR0Y1WlhKSlpDQTlJSEpoYm1SdmJWTjBjbWx1WnlneE1DazdYSEpjYmlBZ0lDQjJZWElnY21WamRDd2daWGh3WVc1emIzSXNJR1psVFc5eWNHZ3NlRHRjY2x4dUlDQWdJSFpoY2lCdFlYTnJWSGx3WlNBOUlDZGpiR2x3VUdGMGFDY3NJRzFoYzJ0U1pXWWdQU0FuWTJ4cGNDMXdZWFJvSnp0Y2NseHVJQ0FnSUdadmNpQW9hU0E5SURBN0lHa2dQQ0JzWlc0N0lHa3JLeWtnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlnb2NISnZjR1Z5ZEdsbGMxdHBYUzV0YjJSbElDRTlQU0FuWVNjZ0ppWWdjSEp2Y0dWeWRHbGxjMXRwWFM1dGIyUmxJQ0U5UFNBbmJpY3BmSHdnY0hKdmNHVnlkR2xsYzF0cFhTNXBibllnZkh3Z2NISnZjR1Z5ZEdsbGMxdHBYUzV2TG1zZ0lUMDlJREV3TUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGMydFVlWEJsSUQwZ0oyMWhjMnNuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhOclVtVm1JRDBnSjIxaGMyc25PMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb0tIQnliM0JsY25ScFpYTmJhVjB1Ylc5a1pTQTlQU0FuY3ljZ2ZId2djSEp2Y0dWeWRHbGxjMXRwWFM1dGIyUmxJRDA5SUNkcEp5a2dKaVlnWTI5MWJuUWdQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFkzUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0lDZHlaV04wSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFkzUXVjMlYwUVhSMGNtbGlkWFJsS0NkbWFXeHNKeXdnSnlObVptWm1abVluS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WamRDNXpaWFJCZEhSeWFXSjFkR1VvSjNkcFpIUm9KeXdnZEdocGN5NWxiR1Z0Wlc1MExtTnZiWEF1WkdGMFlTNTNLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZqZEM1elpYUkJkSFJ5YVdKMWRHVW9KMmhsYVdkb2RDY3NJSFJvYVhNdVpXeGxiV1Z1ZEM1amIyMXdMbVJoZEdFdWFDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5STllYTnJjeTV3ZFhOb0tISmxZM1FwTzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFkzUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdjR0YwYUNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXdnSjNCaGRHZ25LVHRjY2x4dUlDQWdJQ0FnSUNCcFppaHdjbTl3WlhKMGFXVnpXMmxkTG0xdlpHVWdQVDBnSjI0bktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZG1sbGQwUmhkR0ZiYVYwZ1BTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y0RvZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvZEdocGN5NWxiR1Z0Wlc1MExIQnliM0JsY25ScFpYTmJhVjB1Ynl3d0xEQXVNREVzZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5a3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y205d09pQlRhR0Z3WlZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSVGFHRndaVkJ5YjNBb2RHaHBjeTVsYkdWdFpXNTBMSEJ5YjNCbGNuUnBaWE5iYVYwc015eDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6TEc1MWJHd3BMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4bGJUb2djR0YwYUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWldaekxtRndjR1Z1WkVOb2FXeGtLSEJoZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWTI5MWJuUWdLejBnTVR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb2NISnZjR1Z5ZEdsbGMxdHBYUzV0YjJSbElEMDlJQ2R6SnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCaGRHZ3VjMlYwUVhSMGNtbGlkWFJsS0NkbWFXeHNKeXdnSnlNd01EQXdNREFuS1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFDNXpaWFJCZEhSeWFXSjFkR1VvSjJacGJHd25MQ0FuSTJabVptWm1aaWNwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J3WVhSb0xuTmxkRUYwZEhKcFluVjBaU2duWTJ4cGNDMXlkV3hsSnl3bmJtOXVlbVZ5YnljcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppaHdjbTl3WlhKMGFXVnpXMmxkTG5ndWF5QWhQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGMydFVlWEJsSUQwZ0oyMWhjMnNuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhOclVtVm1JRDBnSjIxaGMyc25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjRJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9kR2hwY3k1bGJHVnRaVzUwTEhCeWIzQmxjblJwWlhOYmFWMHVlQ3d3TEc1MWJHd3NkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQm1hV3gwWlhKSlJDQTlJQ2RtYVY4bkszSmhibVJ2YlZOMGNtbHVaeWd4TUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWNGNHRnVjMjl5SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RtYVd4MFpYSW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaWGh3WVc1emIzSXVjMlYwUVhSMGNtbGlkWFJsS0NkcFpDY3NabWxzZEdWeVNVUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1aVTF2Y25Cb0lEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbVpVMXZjbkJvYjJ4dloza25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabVZOYjNKd2FDNXpaWFJCZEhSeWFXSjFkR1VvSjI5d1pYSmhkRzl5Snl3blpHbHNZWFJsSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdabFRXOXljR2d1YzJWMFFYUjBjbWxpZFhSbEtDZHBiaWNzSjFOdmRYSmpaVWR5WVhCb2FXTW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabVZOYjNKd2FDNXpaWFJCZEhSeWFXSjFkR1VvSjNKaFpHbDFjeWNzSnpBbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pYaHdZVzV6YjNJdVlYQndaVzVrUTJocGJHUW9abVZOYjNKd2FDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxabk11WVhCd1pXNWtRMmhwYkdRb1pYaHdZVzV6YjNJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHdjbTl3WlhKMGFXVnpXMmxkTG0xdlpHVWdQVDBnSjNNbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVW5MQ0FuSXpBd01EQXdNQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVW5MQ0FuSTJabVptWm1aaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1psVFc5eWNHZ2dQU0J1ZFd4c08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCNElEMGdiblZzYkR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTjBiM0psWkVSaGRHRmJhVjBnUFNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNCbGJHVnRPaUJ3WVhSb0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ2VEb2dlQ3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJR1Y0Y0dGdU9pQm1aVTF2Y25Cb0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lYTjBVR0YwYURvZ0p5Y3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGhjM1JQY0dWeVlYUnZjam9uSnl4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm1sc2RHVnlTV1E2Wm1sc2RHVnlTVVFzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSU1lXUnBkWE02TUZ4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2NISnZjR1Z5ZEdsbGMxdHBYUzV0YjJSbElEMDlJQ2RwSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdwTVpXNGdQU0JqZFhKeVpXNTBUV0Z6YTNNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1p5QTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blp5Y3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYWowd08ybzhha3hsYmp0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdjdVlYQndaVzVrUTJocGJHUW9ZM1Z5Y21WdWRFMWhjMnR6VzJwZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiV0Z6YXlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduYldGemF5Y3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWE5yTG5ObGRFRjBkSEpwWW5WMFpTZ25iV0Z6YXkxMGVYQmxKeXduWVd4d2FHRW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z6YXk1elpYUkJkSFJ5YVdKMWRHVW9KMmxrSnl4c1lYbGxja2xrS3lkZkp5dGpiM1Z1ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGMyc3VZWEJ3Wlc1a1EyaHBiR1FvY0dGMGFDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxabk11WVhCd1pXNWtRMmhwYkdRb2JXRnpheWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2N1YzJWMFFYUjBjbWxpZFhSbEtDZHRZWE5ySnl3bmRYSnNLQ2NnS3lCc2IyTmhkR2x2YmtoeVpXWWdLeUFuSXljcmJHRjVaWEpKWkNzblh5Y3JZMjkxYm5Rckp5a25LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJOWVhOcmN5NXNaVzVuZEdnZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkWEp5Wlc1MFRXRnphM011Y0hWemFDaG5LVHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRFMWhjMnR6TG5CMWMyZ29jR0YwYUNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtIQnliM0JsY25ScFpYTmJhVjB1YVc1MklDWW1JQ0YwYUdsekxuTnZiR2xrVUdGMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzI5c2FXUlFZWFJvSUQwZ2RHaHBjeTVqY21WaGRHVk1ZWGxsY2xOdmJHbGtVR0YwYUNncE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblpwWlhkRVlYUmhXMmxkSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJHVnRPaUJ3WVhSb0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lYTjBVR0YwYURvZ0p5Y3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXdPaUJRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaDBhR2x6TG1Wc1pXMWxiblFzY0hKdmNHVnlkR2xsYzF0cFhTNXZMREFzTUM0d01TeDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6S1N4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNEcFRhR0Z3WlZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSVGFHRndaVkJ5YjNBb2RHaHBjeTVsYkdWdFpXNTBMSEJ5YjNCbGNuUnBaWE5iYVYwc015eDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6TEc1MWJHd3BYSEpjYmlBZ0lDQWdJQ0FnZlR0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh5WldOMEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUyYVdWM1JHRjBZVnRwWFM1cGJuWlNaV04wSUQwZ2NtVmpkRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvSVhSb2FYTXVkbWxsZDBSaGRHRmJhVjB1Y0hKdmNDNXJLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1a2NtRjNVR0YwYUNod2NtOXdaWEowYVdWelcybGRMSFJvYVhNdWRtbGxkMFJoZEdGYmFWMHVjSEp2Y0M1MkxIUm9hWE11ZG1sbGQwUmhkR0ZiYVYwcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCMGFHbHpMbTFoYzJ0RmJHVnRaVzUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ0J0WVhOclZIbHdaU2s3WEhKY2JseHlYRzRnSUNBZ2JHVnVJRDBnWTNWeWNtVnVkRTFoYzJ0ekxteGxibWQwYUR0Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJSV3hsYldWdWRDNWhjSEJsYm1SRGFHbHNaQ2hqZFhKeVpXNTBUV0Z6YTNOYmFWMHBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhSb2FYTXViV0Z6YTBWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzSUd4aGVXVnlTV1FwTzF4eVhHNGdJQ0FnYVdZb1kyOTFiblFnUGlBd0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzFsYm5RdWJXRnphMlZrUld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb2JXRnphMUpsWml3Z1hDSjFjbXdvWENJZ0t5QnNiMk5oZEdsdmJraHlaV1lnS3lCY0lpTmNJaUFySUd4aGVXVnlTV1FnS3lCY0lpbGNJaWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1pHVm1jeTVoY0hCbGJtUkRhR2xzWkNoMGFHbHpMbTFoYzJ0RmJHVnRaVzUwS1R0Y2NseHVmVHRjY2x4dVhISmNiazFoYzJ0RmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1blpYUk5ZWE5yVUhKdmNHVnlkSGtnUFNCbWRXNWpkR2x2Ymlod2IzTXBlMXh5WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE11ZG1sbGQwUmhkR0ZiY0c5elhTNXdjbTl3TzF4eVhHNTlPMXh5WEc1Y2NseHVUV0Z6YTBWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5CeVpYQmhjbVZHY21GdFpTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTmJhVjB1WjJWMFZtRnNkV1VvS1R0Y2NseHVYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1TllYTnJSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVJuSmhiV1VnUFNCbWRXNWpkR2x2YmlBb1ptbHVZV3hOWVhRcElIdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtMWhjMnR6VUhKdmNHVnlkR2xsY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0JtYjNJZ0tHa2dQU0F3T3lCcElEd2diR1Z1T3lCcEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhR2x6TG5acFpYZEVZWFJoVzJsZExuQnliM0F1YldSbUlIeDhJSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WkhKaGQxQmhkR2dvZEdocGN5NXRZWE5yYzFCeWIzQmxjblJwWlhOYmFWMHNkR2hwY3k1MmFXVjNSR0YwWVZ0cFhTNXdjbTl3TG5Zc2RHaHBjeTUyYVdWM1JHRjBZVnRwWFNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11ZG1sbGQwUmhkR0ZiYVYwdWIzQXViV1JtSUh4OElIUm9hWE11Wm1seWMzUkdjbUZ0WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkbWxsZDBSaGRHRmJhVjB1Wld4bGJTNXpaWFJCZEhSeWFXSjFkR1VvSjJacGJHd3RiM0JoWTJsMGVTY3NkR2hwY3k1MmFXVjNSR0YwWVZ0cFhTNXZjQzUyS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV0WVhOcmMxQnliM0JsY25ScFpYTmJhVjB1Ylc5a1pTQWhQVDBnSjI0bktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1MmFXVjNSR0YwWVZ0cFhTNXBiblpTWldOMElDWW1JQ2gwYUdsekxtVnNaVzFsYm5RdVptbHVZV3hVY21GdWMyWnZjbTB1YlZCeWIzQXViV1JtSUh4OElIUm9hWE11Wm1seWMzUkdjbUZ0WlNrcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MmFXVjNSR0YwWVZ0cFhTNXBiblpTWldOMExuTmxkRUYwZEhKcFluVjBaU2duZUNjc0lDMW1hVzVoYkUxaGRDNXdjbTl3YzFzeE1sMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJhV1YzUkdGMFlWdHBYUzVwYm5aU1pXTjBMbk5sZEVGMGRISnBZblYwWlNnbmVTY3NJQzFtYVc1aGJFMWhkQzV3Y205d2Mxc3hNMTBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVjM1J2Y21Wa1JHRjBZVnRwWFM1NElDWW1JQ2gwYUdsekxuTjBiM0psWkVSaGRHRmJhVjB1ZUM1dFpHWWdmSHdnZEdocGN5NW1hWEp6ZEVaeVlXMWxLU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdabVZOYjNKd2FDQTlJSFJvYVhNdWMzUnZjbVZrUkdGMFlWdHBYUzVsZUhCaGJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVjM1J2Y21Wa1JHRjBZVnRwWFM1NExuWWdQQ0F3S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbk4wYjNKbFpFUmhkR0ZiYVYwdWJHRnpkRTl3WlhKaGRHOXlJQ0U5UFNBblpYSnZaR1VuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6ZEc5eVpXUkVZWFJoVzJsZExteGhjM1JQY0dWeVlYUnZjaUE5SUNkbGNtOWtaU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjM1J2Y21Wa1JHRjBZVnRwWFM1bGJHVnRMbk5sZEVGMGRISnBZblYwWlNnblptbHNkR1Z5Snl3bmRYSnNLQ2NnS3lCc2IyTmhkR2x2YmtoeVpXWWdLeUFuSXljcmRHaHBjeTV6ZEc5eVpXUkVZWFJoVzJsZExtWnBiSFJsY2tsa0t5Y3BKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmxUVzl5Y0dndWMyVjBRWFIwY21saWRYUmxLQ2R5WVdScGRYTW5MQzEwYUdsekxuTjBiM0psWkVSaGRHRmJhVjB1ZUM1MktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11YzNSdmNtVmtSR0YwWVZ0cFhTNXNZWE4wVDNCbGNtRjBiM0lnSVQwOUlDZGthV3hoZEdVbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emRHOXlaV1JFWVhSaFcybGRMbXhoYzNSUGNHVnlZWFJ2Y2lBOUlDZGthV3hoZEdVbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5OMGIzSmxaRVJoZEdGYmFWMHVaV3hsYlM1elpYUkJkSFJ5YVdKMWRHVW9KMlpwYkhSbGNpY3NiblZzYkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMzUnZjbVZrUkdGMFlWdHBYUzVsYkdWdExuTmxkRUYwZEhKcFluVjBaU2duYzNSeWIydGxMWGRwWkhSb0p5d2dkR2hwY3k1emRHOXlaV1JFWVhSaFcybGRMbmd1ZGlveUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQm1ZV3h6WlR0Y2NseHVmVHRjY2x4dVhISmNiazFoYzJ0RmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1blpYUk5ZWE5yWld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFoYzJ0RmJHVnRaVzUwTzF4eVhHNTlPMXh5WEc1Y2NseHVUV0Z6YTBWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVXhoZVdWeVUyOXNhV1JRWVhSb0lEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFpoY2lCd1lYUm9JRDBnSjAwd0xEQWdKenRjY2x4dUlDQWdJSEJoZEdnZ0t6MGdKeUJvSnlBcklIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlM1M0lEdGNjbHh1SUNBZ0lIQmhkR2dnS3owZ0p5QjJKeUFySUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVqYjIxd1UybDZaUzVvSUR0Y2NseHVJQ0FnSUhCaGRHZ2dLejBnSnlCb0xTY2dLeUIwYUdsekxtZHNiMkpoYkVSaGRHRXVZMjl0Y0ZOcGVtVXVkeUE3WEhKY2JpQWdJQ0J3WVhSb0lDczlJQ2NnZGkwbklDc2dkR2hwY3k1bmJHOWlZV3hFWVhSaExtTnZiWEJUYVhwbExtZ2dLeUFuSUNjN1hISmNiaUFnSUNCeVpYUjFjbTRnY0dGMGFEdGNjbHh1ZlR0Y2NseHVYSEpjYmsxaGMydEZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWtjbUYzVUdGMGFDQTlJR1oxYm1OMGFXOXVLSEJoZEdoRVlYUmhMSEJoZEdoT2IyUmxjeXgyYVdWM1JHRjBZU2w3WEhKY2JpQWdJQ0IyWVhJZ2NHRjBhRk4wY21sdVp5QTlJRndpSUUxY0lpdHdZWFJvVG05a1pYTXVkbHN3WFZzd1hTc25MQ2NyY0dGMGFFNXZaR1Z6TG5aYk1GMWJNVjA3WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1TzF4eVhHNGdJQ0FnYkdWdUlEMGdjR0YwYUU1dlpHVnpMbDlzWlc1bmRHZzdYSEpjYmlBZ0lDQm1iM0lvYVQweE8yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUM4dmNHRjBhRk4wY21sdVp5QXJQU0JjSWlCRFhDSXJjR0YwYUU1dlpHVnpMbTliYVMweFhWc3dYU3NuTENjcmNHRjBhRTV2WkdWekxtOWJhUzB4WFZzeFhTQXJJRndpSUZ3aUszQmhkR2hPYjJSbGN5NXBXMmxkV3pCZEt5Y3NKeXR3WVhSb1RtOWtaWE11YVZ0cFhWc3hYU0FySUZ3aUlGd2lLM0JoZEdoT2IyUmxjeTUyVzJsZFd6QmRLeWNzSnl0d1lYUm9UbTlrWlhNdWRsdHBYVnN4WFR0Y2NseHVJQ0FnSUNBZ0lDQndZWFJvVTNSeWFXNW5JQ3M5SUZ3aUlFTmNJaXRpYlY5eWJtUW9jR0YwYUU1dlpHVnpMbTliYVMweFhWc3dYU2tySnl3bksySnRYM0p1WkNod1lYUm9UbTlrWlhNdWIxdHBMVEZkV3pGZEtTQXJJRndpSUZ3aUsySnRYM0p1WkNod1lYUm9UbTlrWlhNdWFWdHBYVnN3WFNrckp5d25LMkp0WDNKdVpDaHdZWFJvVG05a1pYTXVhVnRwWFZzeFhTa2dLeUJjSWlCY0lpdGliVjl5Ym1Rb2NHRjBhRTV2WkdWekxuWmJhVjFiTUYwcEt5Y3NKeXRpYlY5eWJtUW9jR0YwYUU1dlpHVnpMblpiYVYxYk1WMHBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUM4dmNHRjBhRk4wY21sdVp5QXJQU0JjSWlCRFhDSXJjR0YwYUU1dlpHVnpMbTliYVMweFhWc3dYU3NuTENjcmNHRjBhRTV2WkdWekxtOWJhUzB4WFZzeFhTQXJJRndpSUZ3aUszQmhkR2hPYjJSbGN5NXBXekJkV3pCZEt5Y3NKeXR3WVhSb1RtOWtaWE11YVZzd1hWc3hYU0FySUZ3aUlGd2lLM0JoZEdoT2IyUmxjeTUyV3pCZFd6QmRLeWNzSnl0d1lYUm9UbTlrWlhNdWRsc3dYVnN4WFR0Y2NseHVJQ0FnSUdsbUtIQmhkR2hPYjJSbGN5NWpJQ1ltSUd4bGJpQStJREVwZTF4eVhHNGdJQ0FnSUNBZ0lIQmhkR2hUZEhKcGJtY2dLejBnWENJZ1Exd2lLMkp0WDNKdVpDaHdZWFJvVG05a1pYTXViMXRwTFRGZFd6QmRLU3NuTENjclltMWZjbTVrS0hCaGRHaE9iMlJsY3k1dlcya3RNVjFiTVYwcElDc2dYQ0lnWENJclltMWZjbTVrS0hCaGRHaE9iMlJsY3k1cFd6QmRXekJkS1NzbkxDY3JZbTFmY201a0tIQmhkR2hPYjJSbGN5NXBXekJkV3pGZEtTQXJJRndpSUZ3aUsySnRYM0p1WkNod1lYUm9UbTlrWlhNdWRsc3dYVnN3WFNrckp5d25LMkp0WDNKdVpDaHdZWFJvVG05a1pYTXVkbHN3WFZzeFhTazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXZMM0JoZEdoT2IyUmxjeTVmWDNKbGJtUmxjbVZrVTNSeWFXNW5JRDBnY0dGMGFGTjBjbWx1Wnp0Y2NseHVYSEpjYmx4eVhHNGdJQ0FnYVdZb2RtbGxkMFJoZEdFdWJHRnpkRkJoZEdnZ0lUMDlJSEJoZEdoVGRISnBibWNwZTF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFpwWlhkRVlYUmhMbVZzWlcwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2hjR0YwYUU1dlpHVnpMbU1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtbGxkMFJoZEdFdVpXeGxiUzV6WlhSQmRIUnlhV0oxZEdVb0oyUW5MQ2NuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvY0dGMGFFUmhkR0V1YVc1MktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpwWlhkRVlYUmhMbVZzWlcwdWMyVjBRWFIwY21saWRYUmxLQ2RrSnl4MGFHbHpMbk52Ykdsa1VHRjBhQ0FySUhCaGRHaFRkSEpwYm1jcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhacFpYZEVZWFJoTG1Wc1pXMHVjMlYwUVhSMGNtbGlkWFJsS0Nka0p5eHdZWFJvVTNSeWFXNW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjJhV1YzUkdGMFlTNXNZWE4wVUdGMGFDQTlJSEJoZEdoVGRISnBibWM3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNU5ZWE5yUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMGFHbHpMbVZzWlcxbGJuUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoSUQwZ2JuVnNiRHRjY2x4dUlDQWdJSFJvYVhNdWJXRnphMFZzWlcxbGJuUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVrWVhSaElEMGdiblZzYkR0Y2NseHVJQ0FnSUhSb2FYTXViV0Z6YTNOUWNtOXdaWEowYVdWeklEMGdiblZzYkR0Y2NseHVmVHRjYm1aMWJtTjBhVzl1SUVKaGMyVkZiR1Z0Wlc1MEtDbDdYSEpjYm4wN1hISmNia0poYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amFHVmphMDFoYzJ0eklEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJR2xtS0NGMGFHbHpMbVJoZEdFdWFHRnpUV0Z6YXlsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlHa2dQU0F3TENCc1pXNGdQU0IwYUdsekxtUmhkR0V1YldGemEzTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIZG9hV3hsS0drOGJHVnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9LSFJvYVhNdVpHRjBZUzV0WVhOcmMxQnliM0JsY25ScFpYTmJhVjB1Ylc5a1pTQWhQVDBnSjI0bklDWW1JSFJvYVhNdVpHRjBZUzV0WVhOcmMxQnliM0JsY25ScFpYTmJhVjB1WTJ3Z0lUMDlJR1poYkhObEtTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhU0FyUFNBeE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh5WEc1OVhISmNibHh5WEc1Q1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZMmhsWTJ0UVlYSmxiblJwYm1jZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG5CaGNtVnVkQ0FoUFQwZ2RXNWtaV1pwYm1Wa0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiWEF1WW5WcGJHUkZiR1Z0Wlc1MFVHRnlaVzUwYVc1bktIUm9hWE1zSUhSb2FYTXVaR0YwWVM1d1lYSmxiblFwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNUNZWE5sUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y0hKbGNHRnlaVVp5WVcxbElEMGdablZ1WTNScGIyNG9iblZ0S1h0Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNXBjQ0F0SUhSb2FYTXVaR0YwWVM1emRDQThQU0J1ZFcwZ0ppWWdkR2hwY3k1a1lYUmhMbTl3SUMwZ2RHaHBjeTVrWVhSaExuTjBJRDRnYm5WdEtWeHlYRzRnSUNBZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVhWE5XYVhOcFlteGxJQ0U5UFNCMGNuVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bGJHVnRUV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtMWtaaUE5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVhOV2FYTnBZbXhsSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWFYSnpkRVp5WVcxbElEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtaGhjMDFoYzJzcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYTnJUV0Z1WVdkbGNpNW1hWEp6ZEVaeVlXMWxJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVhWE5XYVhOcFlteGxJQ0U5UFNCbVlXeHpaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiVTFrWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXRaR1lnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1selZtbHphV0pzWlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWekxteGxibWQwYUR0Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NXBjMVpwYzJsaWJHVWdmSHdnS0hSb2FYTXVYMmx6VUdGeVpXNTBJQ1ltSUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTmJhVjB1ZEhsd1pTQTlQVDBnSjNSeVlXNXpabTl5YlNjcEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjMXRwWFM1blpYUldZV3gxWlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6VzJsZExtMWtaaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxTlpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtMWtaaUE5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWFHRnpUV0Z6YXlBbUppQjBhR2x6TG1selZtbHphV0pzWlNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJUV0Z1WVdkbGNpNXdjbVZ3WVhKbFJuSmhiV1VvYm5WdEtuUm9hWE11WkdGMFlTNXpjaWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JjY2x4dUlDQWdJQzhxSUZSUFJFOGdZMmhsWTJzZ2RHaHBjMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG5ONUtYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWMzbGJNRjB1Y21WdVpHVnlaV1JFWVhSaFcyNTFiVjBwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWMzbGJNRjB1Y21WdVpHVnlaV1JFWVhSaFcyNTFiVjB1WXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1abFJteHZiMlF1YzJWMFFYUjBjbWxpZFhSbEtDZG1iRzl2WkMxamIyeHZjaWNzSjNKbllpZ25LMDFoZEdndWNtOTFibVFvZEdocGN5NWtZWFJoTG5ONVd6QmRMbkpsYm1SbGNtVmtSR0YwWVZ0dWRXMWRMbU5iTUYwcEt5Y3NKeXROWVhSb0xuSnZkVzVrS0hSb2FYTXVaR0YwWVM1emVWc3dYUzV5Wlc1a1pYSmxaRVJoZEdGYmJuVnRYUzVqV3pGZEtTc25MQ2NyVFdGMGFDNXliM1Z1WkNoMGFHbHpMbVJoZEdFdWMzbGJNRjB1Y21WdVpHVnlaV1JFWVhSaFcyNTFiVjB1WTFzeVhTa3JKeWtuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWMzbGJNRjB1Y21WdVpHVnlaV1JFWVhSaFcyNTFiVjB1Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1abFRXOXljR2d1YzJWMFFYUjBjbWxpZFhSbEtDZHlZV1JwZFhNbkxIUm9hWE11WkdGMFlTNXplVnN3WFM1eVpXNWtaWEpsWkVSaGRHRmJiblZ0WFM1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ292WEhKY2JseHlYRzVjY2x4dUlDQWdJSFJvYVhNdVkzVnljbVZ1ZEVaeVlXMWxUblZ0SUQwZ2JuVnRLblJvYVhNdVpHRjBZUzV6Y2p0Y2NseHVJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpWbWx6YVdKc1pUdGNjbHh1ZlR0Y2NseHVYSEpjYmtKaGMyVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNW5iRzlpWVd4VWIweHZZMkZzSUQwZ1puVnVZM1JwYjI0b2NIUXBlMXh5WEc0Z0lDQWdkbUZ5SUhSeVlXNXpabTl5YlhNZ1BTQmJYVHRjY2x4dUlDQWdJSFJ5WVc1elptOXliWE11Y0hWemFDaDBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRLVHRjY2x4dUlDQWdJSFpoY2lCbWJHRm5JRDBnZEhKMVpUdGNjbHh1SUNBZ0lIWmhjaUJqYjIxd0lEMGdkR2hwY3k1amIyMXdPMXh5WEc0Z0lDQWdkMmhwYkdVb1pteGhaeWw3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9ZMjl0Y0M1bWFXNWhiRlJ5WVc1elptOXliU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0dOdmJYQXVaR0YwWVM1b1lYTk5ZWE5yS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJYTXVjM0JzYVdObEtEQXNNQ3hqYjIxd0xtWnBibUZzVkhKaGJuTm1iM0p0S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjIxd0lEMGdZMjl0Y0M1amIyMXdPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWVdjZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnZEhKaGJuTm1iM0p0Y3k1c1pXNW5kR2dzY0hST1pYYzdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUhCMFRtVjNJRDBnZEhKaGJuTm1iM0p0YzF0cFhTNXRZWFF1WVhCd2JIbFViMUJ2YVc1MFFYSnlZWGtvTUN3d0xEQXBPMXh5WEc0Z0lDQWdJQ0FnSUM4dmNIUk9aWGNnUFNCMGNtRnVjMlp2Y20xelcybGRMbTFoZEM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNod2RGc3dYU3h3ZEZzeFhTeHdkRnN5WFNrN1hISmNiaUFnSUNBZ0lDQWdjSFFnUFNCYmNIUmJNRjBnTFNCd2RFNWxkMXN3WFN4d2RGc3hYU0F0SUhCMFRtVjNXekZkTERCZE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUhCME8xeHlYRzU5TzF4eVhHNWNjbHh1UW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtbHVhWFJGZUhCeVpYTnphVzl1Y3lBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnlTVzUwWlhKbVlXTmxJRDBnVEdGNVpYSkZlSEJ5WlhOemFXOXVTVzUwWlhKbVlXTmxLSFJvYVhNcE8xeHlYRzRnSUNBZ0x5OXNZWGxsY25OYmFWMHViR0Y1WlhKSmJuUmxjbVpoWTJVZ1BTQk1ZWGxsY2tWNGNISmxjM05wYjI1SmJuUmxjbVpoWTJVb2JHRjVaWEp6VzJsZEtUdGNjbHh1SUNBZ0lDOHZiR0Y1WlhKelcybGRMbXhoZVdWeVNXNTBaWEptWVdObElEMGdUR0Y1WlhKRmVIQnlaWE56YVc5dVNXNTBaWEptWVdObEtHeGhlV1Z5YzF0cFhTazdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1YUdGelRXRnpheWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrbHVkR1Z5Wm1GalpTNXlaV2RwYzNSbGNrMWhjMnRKYm5SbGNtWmhZMlVvZEdocGN5NXRZWE5yVFdGdVlXZGxjaWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ1pXWm1aV04wYzBsdWRHVnlabUZqWlNBOUlFVm1abVZqZEhORmVIQnlaWE56YVc5dVNXNTBaWEptWVdObExtTnlaV0YwWlVWbVptVmpkSE5KYm5SbGNtWmhZMlVvZEdocGN5eDBhR2x6TG14aGVXVnlTVzUwWlhKbVlXTmxLVHRjY2x4dUlDQWdJSFJvYVhNdWJHRjVaWEpKYm5SbGNtWmhZMlV1Y21WbmFYTjBaWEpGWm1abFkzUnpTVzUwWlhKbVlXTmxLR1ZtWm1WamRITkpiblJsY21aaFkyVXBPMXh5WEc1Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNTBlU0E5UFQwZ01DQjhmQ0IwYUdsekxtUmhkR0V1ZUhRcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXRjRWx1ZEdWeVptRmpaU0E5SUVOdmJYQkZlSEJ5WlhOemFXOXVTVzUwWlhKbVlXTmxLSFJvYVhNcE8xeHlYRzRnSUNBZ2ZTQmxiSE5sSUdsbUtIUm9hWE11WkdGMFlTNTBlU0E5UFQwZ05DbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tsdWRHVnlabUZqWlM1emFHRndaVWx1ZEdWeVptRmpaU0E5SUZOb1lYQmxSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaUzVqY21WaGRHVlRhR0Z3WlVsdWRHVnlabUZqWlNoMGFHbHpMbk5vWVhCbGMwUmhkR0VzZEdocGN5NXBkR1Z0YzBSaGRHRXNkR2hwY3k1c1lYbGxja2x1ZEdWeVptRmpaU2s3WEhKY2JpQWdJQ0I5SUdWc2MyVWdhV1lvZEdocGN5NWtZWFJoTG5SNUlEMDlQU0ExS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlTVzUwWlhKbVlXTmxMblJsZUhSSmJuUmxjbVpoWTJVZ1BTQlVaWGgwUlhod2NtVnpjMmx2YmtsdWRHVnlabUZqWlNoMGFHbHpLVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbk5sZEVKc1pXNWtUVzlrWlNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjJZWElnWW14bGJtUk5iMlJsVm1Gc2RXVWdQU0FuSnp0Y2NseHVJQ0FnSUhOM2FYUmphQ2gwYUdsekxtUmhkR0V1WW0wcGUxeHlYRzRnSUNBZ0lDQWdJR05oYzJVZ01UcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBbmJYVnNkR2x3Ykhrbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNCallYTmxJREk2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a1RXOWtaVlpoYkhWbElEMGdKM05qY21WbGJpYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lHTmhjMlVnTXpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW14bGJtUk5iMlJsVm1Gc2RXVWdQU0FuYjNabGNteGhlU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJR05oYzJVZ05EcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBblpHRnlhMlZ1Snp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnWTJGelpTQTFPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliR1Z1WkUxdlpHVldZV3gxWlNBOUlDZHNhV2RvZEdWdUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ1kyRnpaU0EyT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2RqYjJ4dmNpMWtiMlJuWlNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdOenBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxWbUZzZFdVZ1BTQW5ZMjlzYjNJdFluVnliaWM3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJR05oYzJVZ09EcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBbmFHRnlaQzFzYVdkb2RDYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lHTmhjMlVnT1RwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW14bGJtUk5iMlJsVm1Gc2RXVWdQU0FuYzI5bWRDMXNhV2RvZENjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdNVEE2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a1RXOWtaVlpoYkhWbElEMGdKMlJwWm1abGNtVnVZMlVuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0JqWVhObElERXhPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliR1Z1WkUxdlpHVldZV3gxWlNBOUlDZGxlR05zZFhOcGIyNG5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQmpZWE5sSURFeU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWJHVnVaRTF2WkdWV1lXeDFaU0E5SUNkb2RXVW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQmpZWE5sSURFek9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWJHVnVaRTF2WkdWV1lXeDFaU0E5SUNkellYUjFjbUYwYVc5dUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ1kyRnpaU0F4TkRwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW14bGJtUk5iMlJsVm1Gc2RXVWdQU0FuWTI5c2IzSW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQmpZWE5sSURFMU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWJHVnVaRTF2WkdWV1lXeDFaU0E5SUNkc2RXMXBibTl6YVhSNUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ1pXeGxiU0E5SUhSb2FYTXVZbUZ6WlVWc1pXMWxiblFnZkh3Z2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RN1hISmNibHh5WEc0Z0lDQWdaV3hsYlM1emRIbHNaVnNuYldsNExXSnNaVzVrTFcxdlpHVW5YU0E5SUdKc1pXNWtUVzlrWlZaaGJIVmxPMXh5WEc1OVhISmNibHh5WEc1Q1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVhVzVwZENBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQnBaaWdoZEdocGN5NWtZWFJoTG5OeUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtUmhkR0V1YzNJZ1BTQXhPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lBOUlIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1nZkh3Z1cxMDdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1WldZcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXWm1aV04wY3lBOUlHNWxkeUJGWm1abFkzUnpUV0Z1WVdkbGNpaDBhR2x6TG1SaGRHRXNkR2hwY3l4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNBdkwzUm9hWE11WldabVpXTjBJRDBnZEdocGN5NWxabVpsWTNSelRXRnVZV2RsY2k1aWFXNWtLSFJvYVhNdVpXWm1aV04wYzAxaGJtRm5aWElwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHk5MGFHbHpMbVZzWlcxSmJuUmxjbVpoWTJVZ1BTQmlkV2xzWkV4aGVXVnlSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU2gwYUdsektUdGNjbHh1SUNBZ0lIUm9hWE11YUdsa1pHVnVJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnZEdocGN5NXBjMVpwYzJsaWJHVWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIUm9hWE11WDJselVHRnlaVzUwSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0IwYUdsekxtTjFjbkpsYm5SR2NtRnRaVTUxYlNBOUlDMDVPVGs1T1R0Y2NseHVJQ0FnSUhSb2FYTXViR0Z6ZEU1MWJTQTlJQzA1T1RrNU9UdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVpHRjBZUzVyY3lsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliU0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYlZCeWIzQTZJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d0tIUm9hWE1zZEdocGN5NWtZWFJoTG10ekxESXNiblZzYkN4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0YwVFdSbU9pQm1ZV3h6WlN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNCTlpHWTZJR1poYkhObExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYUTZJRzVsZHlCTllYUnlhWGdvS1N4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTVZ4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtRnZLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNWhkWFJ2VDNKcFpXNTBaV1FnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTl3SUQwZ2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXRVSEp2Y0M1dk8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdElEMGdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNEdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWRIa2dJVDA5SURFeEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqY21WaGRHVkZiR1Z0Wlc1MGN5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtUmhkR0V1YUdGelRXRnpheWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtUV0Z6YTNNb2RHaHBjeTVrWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFOWkdZZ1BTQm1ZV3h6WlR0Y2NseHVmVHRjY2x4dVFtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbWRsZEZSNWNHVWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWRIbHdaVHRjY2x4dWZUdGNjbHh1WEhKY2JrSmhjMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5WlhObGRFaHBaWEpoY21Ob2VTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTVvYVdWeVlYSmphSGtwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YUdsbGNtRnlZMmg1SUQwZ1cxMDdYSEpjYmlBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1ocFpYSmhjbU5vZVM1c1pXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1UW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtZGxkRWhwWlhKaGNtTm9lU0E5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCcFppZ2hkR2hwY3k1b2FXVnlZWEpqYUhrcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFHbGxjbUZ5WTJoNUlEMGdXMTA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1b2FXVnlZWEpqYUhrN1hISmNibjA3WEhKY2JseHlYRzVDWVhObFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWMyVjBTR2xsY21GeVkyaDVJRDBnWm5WdVkzUnBiMjRvYUdsbGNtRnlZMmg1S1h0Y2NseHVJQ0FnSUhSb2FYTXVhR2xsY21GeVkyaDVJRDBnYUdsbGNtRnlZMmg1TzF4eVhHNTlPMXh5WEc1Y2NseHVRbUZ6WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1kbGRFeGhlV1Z5VTJsNlpTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWRIa2dQVDA5SURVcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdkenAwYUdsekxtUmhkR0V1ZEdWNGRFUmhkR0V1ZDJsa2RHZ3NhRHAwYUdsekxtUmhkR0V1ZEdWNGRFUmhkR0V1YUdWcFoyaDBmVHRjY2x4dUlDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdkenAwYUdsekxtUmhkR0V1ZDJsa2RHZ3NhRHAwYUdsekxtUmhkR0V1YUdWcFoyaDBmVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JrSmhjMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVvYVdSbElEMGdablZ1WTNScGIyNG9LWHRjY2x4dVhISmNibjA3WEhKY2JseHlYRzVDWVhObFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWMyOTFjbU5sVW1WamRFRjBWR2x0WlNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQnlaWFIxY200Z2UxeHlYRzRnSUNBZ0lDQWdJSFJ2Y0Rvd0xGeHlYRzRnSUNBZ0lDQWdJR3hsWm5RNk1DeGNjbHh1SUNBZ0lDQWdJQ0IzYVdSMGFEb3hNREFzWEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2pFd01GeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1UW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtMUlaV3h3WlhJZ1BTQnVaWGNnVFdGMGNtbDRLQ2s3WEc1bWRXNWpkR2x2YmlCVFZrZENZWE5sUld4bGJXVnVkQ2hrWVhSaExIQmhjbVZ1ZEVOdmJuUmhhVzVsY2l4bmJHOWlZV3hFWVhSaExHTnZiWEFzSUhCc1lXTmxhRzlzWkdWeUtYdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVNBOUlHZHNiMkpoYkVSaGRHRTdYSEpjYmlBZ0lDQjBhR2x6TG1OdmJYQWdQU0JqYjIxd08xeHlYRzRnSUNBZ2RHaHBjeTVrWVhSaElEMGdaR0YwWVR0Y2NseHVJQ0FnSUhSb2FYTXViV0YwZEdWRmJHVnRaVzUwSUQwZ2JuVnNiRHRjY2x4dUlDQWdJSFJvYVhNdWRISmhibk5tYjNKdFpXUkZiR1Z0Wlc1MElEMGdiblZzYkR0Y2NseHVJQ0FnSUhSb2FYTXVhWE5VY21GdWMzQmhjbVZ1ZENBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZEdocGN5NXdZWEpsYm5SRGIyNTBZV2x1WlhJZ1BTQndZWEpsYm5SRGIyNTBZV2x1WlhJN1hISmNiaUFnSUNCMGFHbHpMbXhoZVdWeVNXUWdQU0J3YkdGalpXaHZiR1JsY2lBL0lIQnNZV05sYUc5c1pHVnlMbXhoZVdWeVNXUWdPaUFuYkhsZkp5dHlZVzVrYjIxVGRISnBibWNvTVRBcE8xeHlYRzRnSUNBZ2RHaHBjeTV3YkdGalpXaHZiR1JsY2lBOUlIQnNZV05sYUc5c1pHVnlPMXh5WEc0Z0lDQWdkR2hwY3k1ZmMybDZaVU5vWVc1blpXUWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIUm9hWE11YVc1cGRDZ3BPMXh5WEc1OU8xeHlYRzVjY2x4dVkzSmxZWFJsUld4bGJXVnVkQ2hDWVhObFJXeGxiV1Z1ZEN3Z1UxWkhRbUZ6WlVWc1pXMWxiblFwTzF4eVhHNWNjbHh1VTFaSFFtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVVnNaVzFsYm5SeklEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZG5KeWs3WEhKY2JpQWdJQ0IwYUdsekxuUnlZVzV6Wm05eWJXVmtSV3hsYldWdWRDQTlJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG1oaGMwMWhjMnNwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldGemEyVmtSV3hsYldWdWRDQTlJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkbUZ5SUd4aGVXVnlSV3hsYldWdWRGQmhjbVZ1ZENBOUlHNTFiR3c3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWRHUXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNTBaQ0E5UFNBeklIeDhJSFJvYVhNdVpHRjBZUzUwWkNBOVBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUcxaGMydGxjaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25iV0Z6YXljcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYTnJaWEl1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzZEdocGN5NXNZWGxsY2tsa0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnphMlZ5TG5ObGRFRjBkSEpwWW5WMFpTZ25iV0Z6YXkxMGVYQmxKeXgwYUdsekxtUmhkR0V1ZEdRZ1BUMGdNeUEvSUNkc2RXMXBibUZ1WTJVbk9pZGhiSEJvWVNjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYTnJaWEl1WVhCd1pXNWtRMmhwYkdRb2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lYbGxja1ZzWlcxbGJuUlFZWEpsYm5RZ1BTQnRZWE5yWlhJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVrWldaekxtRndjR1Z1WkVOb2FXeGtLRzFoYzJ0bGNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZMeTh2THlCVWFHbHpJR2x6SUc5dWJIa2dabTl5SUVsRklHRnVaQ0JGWkdkbElIZG9aVzRnYldGemF5QnBaaUJ2WmlCMGVYQmxJR0ZzY0doaFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRm1aV0YwZFhKbFUzVndjRzl5ZEM1dFlYTnJWSGx3WlNBbUppQjBhR2x6TG1SaGRHRXVkR1FnUFQwZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhOclpYSXVjMlYwUVhSMGNtbGlkWFJsS0NkdFlYTnJMWFI1Y0dVbkxDZHNkVzFwYm1GdVkyVW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQm1hV3hKWkNBOUlISmhibVJ2YlZOMGNtbHVaeWd4TUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWm1sc0lEMGdabWxzZEdWeWMwWmhZM1J2Y25rdVkzSmxZWFJsUm1sc2RHVnlLR1pwYkVsa0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNWtaV1p6TG1Gd2NHVnVaRU5vYVd4a0tHWnBiQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWFXd3VZWEJ3Wlc1a1EyaHBiR1FvWm1sc2RHVnljMFpoWTNSdmNua3VZM0psWVhSbFFXeHdhR0ZVYjB4MWJXbHVZVzVqWlVacGJIUmxjaWdwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJuWnlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWnljcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMmN1WVhCd1pXNWtRMmhwYkdRb2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0Y1WlhKRmJHVnRaVzUwVUdGeVpXNTBJRDBnWjJjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWE5yWlhJdVlYQndaVzVrUTJocGJHUW9aMmNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyY3VjMlYwUVhSMGNtbGlkWFJsS0NkbWFXeDBaWEluTENkMWNtd29KeUFySUd4dlkyRjBhVzl1U0hKbFppQXJJQ2NqSnl0bWFXeEpaQ3NuS1NjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kR2hwY3k1a1lYUmhMblJrSUQwOUlESXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYldGemEwZHliM1Z3SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2R0WVhOckp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjMnRIY205MWNDNXpaWFJCZEhSeWFXSjFkR1VvSjJsa0p5eDBhR2x6TG14aGVXVnlTV1FwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhOclIzSnZkWEF1YzJWMFFYUjBjbWxpZFhSbEtDZHRZWE5yTFhSNWNHVW5MQ2RoYkhCb1lTY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYldGemEwZHliM1Z3WlhJZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJjbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnphMGR5YjNWd0xtRndjR1Z1WkVOb2FXeGtLRzFoYzJ0SGNtOTFjR1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHWnBiRWxrSUQwZ2NtRnVaRzl0VTNSeWFXNW5LREV3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHWnBiQ0E5SUdacGJIUmxjbk5HWVdOMGIzSjVMbU55WldGMFpVWnBiSFJsY2lobWFXeEpaQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2THk5Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJtWlVOdmJHOXlUV0YwY21sNElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbVpVTnZiRzl5VFdGMGNtbDRKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1psUTI5c2IzSk5ZWFJ5YVhndWMyVjBRWFIwY21saWRYUmxLQ2QwZVhCbEp5d25iV0YwY21sNEp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWmxRMjlzYjNKTllYUnlhWGd1YzJWMFFYUjBjbWxpZFhSbEtDZGpiMnh2Y2kxcGJuUmxjbkJ2YkdGMGFXOXVMV1pwYkhSbGNuTW5MQ2R6VWtkQ0p5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWmxRMjlzYjNKTllYUnlhWGd1YzJWMFFYUjBjbWxpZFhSbEtDZDJZV3gxWlhNbkxDY3hJREFnTUNBd0lEQWdNQ0F4SURBZ01DQXdJREFnTUNBeElEQWdNQ0F3SURBZ01DQXRNU0F4SnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJDNWhjSEJsYm1SRGFHbHNaQ2htWlVOdmJHOXlUV0YwY21sNEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2THk5Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHlwMllYSWdabVZEVkhJZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJabFEyOXRjRzl1Wlc1MFZISmhibk5tWlhJbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptVkRWSEl1YzJWMFFYUjBjbWxpZFhSbEtDZHBiaWNzSjFOdmRYSmpaVWR5WVhCb2FXTW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabWxzTG1Gd2NHVnVaRU5vYVd4a0tHWmxRMVJ5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHWmxSblZ1WXlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWm1WR2RXNWpRU2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtWlVaMWJtTXVjMlYwUVhSMGNtbGlkWFJsS0NkMGVYQmxKeXduZEdGaWJHVW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabVZHZFc1akxuTmxkRUYwZEhKcFluVjBaU2duZEdGaWJHVldZV3gxWlhNbkxDY3hMakFnTUM0d0p5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWmxRMVJ5TG1Gd2NHVnVaRU5vYVd4a0tHWmxSblZ1WXlrN0tpOWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1SbFpuTXVZWEJ3Wlc1a1EyaHBiR1FvWm1sc0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0ZzY0doaFVtVmpkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25jbVZqZENjcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGJIQm9ZVkpsWTNRdWMyVjBRWFIwY21saWRYUmxLQ2QzYVdSMGFDY3NkR2hwY3k1amIyMXdMbVJoZEdFdWR5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnNjR2hoVW1WamRDNXpaWFJCZEhSeWFXSjFkR1VvSjJobGFXZG9kQ2NzZEdocGN5NWpiMjF3TG1SaGRHRXVhQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaFVtVmpkQzV6WlhSQmRIUnlhV0oxZEdVb0ozZ25MQ2N3SnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGc2NHaGhVbVZqZEM1elpYUkJkSFJ5YVdKMWRHVW9KM2tuTENjd0p5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnNjR2hoVW1WamRDNXpaWFJCZEhSeWFXSjFkR1VvSjJacGJHd25MQ2NqWm1abVptWm1KeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzY0doaFVtVmpkQzV6WlhSQmRIUnlhV0oxZEdVb0oyOXdZV05wZEhrbkxDY3dKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoYzJ0SGNtOTFjR1Z5TG5ObGRFRjBkSEpwWW5WMFpTZ25abWxzZEdWeUp5d25kWEpzS0NjZ0t5QnNiMk5oZEdsdmJraHlaV1lnS3lBbkl5Y3JabWxzU1dRckp5a25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z6YTBkeWIzVndaWEl1WVhCd1pXNWtRMmhwYkdRb1lXeHdhR0ZTWldOMEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnphMGR5YjNWd1pYSXVZWEJ3Wlc1a1EyaHBiR1FvZEdocGN5NXNZWGxsY2tWc1pXMWxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNrVnNaVzFsYm5SUVlYSmxiblFnUFNCdFlYTnJSM0p2ZFhCbGNqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JV1psWVhSMWNtVlRkWEJ3YjNKMExtMWhjMnRVZVhCbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoYzJ0SGNtOTFjQzV6WlhSQmRIUnlhV0oxZEdVb0oyMWhjMnN0ZEhsd1pTY3NKMngxYldsdVlXNWpaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptbHNMbUZ3Y0dWdVpFTm9hV3hrS0dacGJIUmxjbk5HWVdOMGIzSjVMbU55WldGMFpVRnNjR2hoVkc5TWRXMXBibUZ1WTJWR2FXeDBaWElvS1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWjJjZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJjbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoYzJ0SGNtOTFjR1Z5TG1Gd2NHVnVaRU5vYVd4a0tHRnNjR2hoVW1WamRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWnk1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG14aGVXVnlSV3hsYldWdWRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNrVnNaVzFsYm5SUVlYSmxiblFnUFNCblp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoYzJ0SGNtOTFjR1Z5TG1Gd2NHVnVaRU5vYVd4a0tHZG5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVpHVm1jeTVoY0hCbGJtUkRhR2xzWkNodFlYTnJSM0p2ZFhBcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFsYkhObElHbG1LSFJvYVhNdVpHRjBZUzVvWVhOTllYTnJJSHg4SUhSb2FYTXVaR0YwWVM1MGRDbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVrWVhSaExuUjBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYUjBaVVZzWlcxbGJuUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyY25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYUjBaVVZzWlcxbGJuUXVZWEJ3Wlc1a1EyaHBiR1FvZEdocGN5NXNZWGxsY2tWc1pXMWxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWVhsbGNrVnNaVzFsYm5SUVlYSmxiblFnUFNCMGFHbHpMbTFoZEhSbFJXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlZWE5sUld4bGJXVnVkQ0E5SUhSb2FYTXViV0YwZEdWRmJHVnRaVzUwTzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtSmhjMlZGYkdWdFpXNTBJRDBnZEdocGN5NXNZWGxsY2tWc1pXMWxiblE3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVpWVhObFJXeGxiV1Z1ZENBOUlIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9LSFJvYVhNdVpHRjBZUzVzYmlCOGZDQjBhR2x6TG1SaGRHRXVZMndwSUNZbUlDaDBhR2x6TG1SaGRHRXVkSGtnUFQwOUlEUWdmSHdnZEdocGN5NWtZWFJoTG5SNUlEMDlQU0F3S1NsN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWtZWFJoTG14dUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RwWkNjc2RHaHBjeTVrWVhSaExteHVLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWtZWFJoTG1Oc0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RqYkdGemN5Y3NkR2hwY3k1a1lYUmhMbU5zS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1ZEhrZ1BUMDlJREFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kzQWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0lDZGpiR2x3VUdGMGFDY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0hRZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjNCaGRHZ25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSFF1YzJWMFFYUjBjbWxpZFhSbEtDZGtKeXduVFRBc01DQk1KeXQwYUdsekxtUmhkR0V1ZHlzbkxEQW5LeWNnVENjcmRHaHBjeTVrWVhSaExuY3JKeXduSzNSb2FYTXVaR0YwWVM1b0t5Y2dUREFzSnl0MGFHbHpMbVJoZEdFdWFDc25laWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyeHBjRWxrSUQwZ0oyTndYeWNyY21GdVpHOXRVM1J5YVc1bktEZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpjQzV6WlhSQmRIUnlhV0oxZEdVb0oybGtKeXhqYkdsd1NXUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpjQzVoY0hCbGJtUkRhR2xzWkNod2RDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1a1pXWnpMbUZ3Y0dWdVpFTm9hV3hrS0dOd0tUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbU5vWldOclRXRnphM01vS1NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpjRWR5YjNWd0lEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbkp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTndSM0p2ZFhBdWMyVjBRWFIwY21saWRYUmxLQ2RqYkdsd0xYQmhkR2duTENkMWNtd29KeUFySUd4dlkyRjBhVzl1U0hKbFppQXJJQ2NqSnl0amJHbHdTV1FySnlrbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kzQkhjbTkxY0M1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG14aGVXVnlSV3hsYldWdWRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0WldSRmJHVnRaVzUwSUQwZ1kzQkhjbTkxY0R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRjVaWEpGYkdWdFpXNTBVR0Z5Wlc1MEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoZVdWeVJXeGxiV1Z1ZEZCaGNtVnVkQzVoY0hCbGJtUkRhR2xzWkNoMGFHbHpMblJ5WVc1elptOXliV1ZrUld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtSmhjMlZGYkdWdFpXNTBJRDBnZEdocGN5NTBjbUZ1YzJadmNtMWxaRVZzWlcxbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJOc2FYQXRjR0YwYUNjc0ozVnliQ2duSUNzZ2JHOWpZWFJwYjI1SWNtVm1JQ3NnSnlNbksyTnNhWEJKWkNzbktTY3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LSFJvYVhNdVpHRjBZUzVpYlNBaFBUMGdNQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSQ2JHVnVaRTF2WkdVb0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJQ0U5UFNCMGFHbHpMbkJoY21WdWRFTnZiblJoYVc1bGNpbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdiR0ZqWldodmJHUmxjaUE5SUc1MWJHdzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXZLaUJVYjJSdklIQmxjbVp2Y20xaGJtTmxJR3RwYkd4bGNseHlYRzRnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMbk41S1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWm1sc2RHVnlTVVFnUFNBbmMzUmZKeXR5WVc1a2IyMVRkSEpwYm1jb01UQXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpJRDBnZEdocGN5NWtZWFJoTG5ONVd6QmRMbU11YXp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY2lBOUlIUm9hWE11WkdGMFlTNXplVnN3WFM1ekxtczdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHVjRjR0Z1YzI5eUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbWFXeDBaWEluS1R0Y2NseHVJQ0FnSUNBZ0lDQmxlSEJoYm5OdmNpNXpaWFJCZEhSeWFXSjFkR1VvSjJsa0p5eG1hV3gwWlhKSlJDazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHWmxSbXh2YjJRZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJabFJteHZiMlFuS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1abFJteHZiMlFnUFNCbVpVWnNiMjlrTzF4eVhHNGdJQ0FnSUNBZ0lHbG1LQ0ZqV3pCZExtVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1aVVpzYjI5a0xuTmxkRUYwZEhKcFluVjBaU2duWm14dmIyUXRZMjlzYjNJbkxDZHlaMklvSnl0ald6QmRLeWNzSnl0ald6RmRLeWNzSnl0ald6SmRLeWNwSnlrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdabFJteHZiMlF1YzJWMFFYUjBjbWxpZFhSbEtDZHlaWE4xYkhRbkxDZGlZWE5sSnlrN1hISmNiaUFnSUNBZ0lDQWdaWGh3WVc1emIzSXVZWEJ3Wlc1a1EyaHBiR1FvWm1WR2JHOXZaQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR1psVFc5eWNHZ2dQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyWmxUVzl5Y0dodmJHOW5lU2NwTzF4eVhHNGdJQ0FnSUNBZ0lHWmxUVzl5Y0dndWMyVjBRWFIwY21saWRYUmxLQ2R2Y0dWeVlYUnZjaWNzSjJScGJHRjBaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lHWmxUVzl5Y0dndWMyVjBRWFIwY21saWRYUmxLQ2RwYmljc0oxTnZkWEpqWlVkeVlYQm9hV01uS1R0Y2NseHVJQ0FnSUNBZ0lDQm1aVTF2Y25Cb0xuTmxkRUYwZEhKcFluVjBaU2duY21WemRXeDBKeXduWW1sbloyVnlKeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtWlUxdmNuQm9JRDBnWm1WTmIzSndhRHRjY2x4dUlDQWdJQ0FnSUNCcFppZ2hjaTVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1aVTF2Y25Cb0xuTmxkRUYwZEhKcFluVjBaU2duY21Ga2FYVnpKeXgwYUdsekxtUmhkR0V1YzNsYk1GMHVjeTVyS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWlhod1lXNXpiM0l1WVhCd1pXNWtRMmhwYkdRb1ptVk5iM0p3YUNrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdabFEyOXNiM0pOWVhSeWFYZ2dQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyWmxRMjlzYjNKTllYUnlhWGduS1R0Y2NseHVJQ0FnSUNBZ0lDQm1aVU52Ykc5eVRXRjBjbWw0TG5ObGRFRjBkSEpwWW5WMFpTZ25jbVZ6ZFd4MEp5d25iV0Z6YXljcE8xeHlYRzRnSUNBZ0lDQWdJR1psUTI5c2IzSk5ZWFJ5YVhndWMyVjBRWFIwY21saWRYUmxLQ2RwYmljc0oySnBaMmRsY2ljcE8xeHlYRzRnSUNBZ0lDQWdJR1psUTI5c2IzSk5ZWFJ5YVhndWMyVjBRWFIwY21saWRYUmxLQ2QwZVhCbEp5d25iV0YwY21sNEp5azdYSEpjYmlBZ0lDQWdJQ0FnWm1WRGIyeHZjazFoZEhKcGVDNXpaWFJCZEhSeWFXSjFkR1VvSjNaaGJIVmxjeWNzSnpBZ01DQXdJREFnTUNBd0lEQWdNQ0F3SURBZ01DQXdJREFnTUNBd0lEQWdNQ0F3SURFZ01DY3BPMXh5WEc0Z0lDQWdJQ0FnSUdWNGNHRnVjMjl5TG1Gd2NHVnVaRU5vYVd4a0tHWmxRMjlzYjNKTllYUnlhWGdwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJtWlVOdmJYQnZjMmwwWlNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWm1WRGIyMXdiM05wZEdVbktUdGNjbHh1SUNBZ0lDQWdJQ0JtWlVOdmJYQnZjMmwwWlM1elpYUkJkSFJ5YVdKMWRHVW9KM0psYzNWc2RDY3NKMlJ5YjNBbktUdGNjbHh1SUNBZ0lDQWdJQ0JtWlVOdmJYQnZjMmwwWlM1elpYUkJkSFJ5YVdKMWRHVW9KMmx1Snl3blltRnpaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lHWmxRMjl0Y0c5emFYUmxMbk5sZEVGMGRISnBZblYwWlNnbmFXNHlKeXduYldGemF5Y3BPMXh5WEc0Z0lDQWdJQ0FnSUdabFEyOXRjRzl6YVhSbExuTmxkRUYwZEhKcFluVjBaU2duYjNCbGNtRjBiM0luTENkcGJpY3BPMXh5WEc0Z0lDQWdJQ0FnSUdWNGNHRnVjMjl5TG1Gd2NHVnVaRU5vYVd4a0tHWmxRMjl0Y0c5emFYUmxLVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdabVZDYkdWdVpDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blptVkNiR1Z1WkNjcE8xeHlYRzRnSUNBZ0lDQWdJR1psUW14bGJtUXVjMlYwUVhSMGNtbGlkWFJsS0NkcGJpY3NKMU52ZFhKalpVZHlZWEJvYVdNbktUdGNjbHh1SUNBZ0lDQWdJQ0JtWlVKc1pXNWtMbk5sZEVGMGRISnBZblYwWlNnbmFXNHlKeXduWkhKdmNDY3BPMXh5WEc0Z0lDQWdJQ0FnSUdabFFteGxibVF1YzJWMFFYUjBjbWxpZFhSbEtDZHRiMlJsSnl3bmJtOXliV0ZzSnlrN1hISmNiaUFnSUNBZ0lDQWdaWGh3WVc1emIzSXVZWEJ3Wlc1a1EyaHBiR1FvWm1WQ2JHVnVaQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1SbFpuTXVZWEJ3Wlc1a1EyaHBiR1FvWlhod1lXNXpiM0lwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJqYjI1MElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbkp5azdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RZ1BUMDlJSFJvYVhNdWNHRnlaVzUwUTI5dWRHRnBibVZ5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCamIyNTBPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwTG1Gd2NHVnVaRU5vYVd4a0tIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1kyOXVkQzV6WlhSQmRIUnlhV0oxZEdVb0oyWnBiSFJsY2ljc0ozVnliQ2dqSnl0bWFXeDBaWEpKUkNzbktTY3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNTBaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5RdWMyVjBRWFIwY21saWRYUmxLQ2RrWVhSaExYUmtKeXgwYUdsekxtUmhkR0V1ZEdRcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaDBhR2x6TG1SaGRHRXVkR1FnUFQwZ015bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1a1pXWnpMbUZ3Y0dWdVpFTm9hV3hrS0dOdmJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxJR2xtS0hSb2FYTXVaR0YwWVM1MFpDQTlQU0F5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGemEwZHliM1Z3WlhJdVlYQndaVzVrUTJocGJHUW9ZMjl1ZENrN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kR2hwY3k1a1lYUmhMblJrSUQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWE5yWlhJdVlYQndaVzVrUTJocGJHUW9ZMjl1ZENrN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNW9ZWE5OWVhOcklDWW1JSFJvYVhNdVpHRjBZUzUwZENsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRIUmxSV3hsYldWdWRDNWhjSEJsYm1SRGFHbHNaQ2hqYjI1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZ3Y0dWdVpFNXZaR1ZVYjFCaGNtVnVkQ2hqYjI1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDBxTDF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtVm1LWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZtWm1WamRITk5ZVzVoWjJWeUlEMGdibVYzSUZOV1IwVm1abVZqZEhNb2RHaHBjeWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtTm9aV05yVUdGeVpXNTBhVzVuS0NrN1hISmNibjA3WEhKY2JseHlYRzVjY2x4dVUxWkhRbUZ6WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5ObGRFSnNaVzVrVFc5a1pTQTlJRUpoYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1elpYUkNiR1Z1WkUxdlpHVTdYSEpjYmx4eVhHNVRWa2RDWVhObFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JtZFc1amRHbHZiaWh3WVhKbGJuUlVjbUZ1YzJadmNtMHBlMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG5SNUlEMDlQU0F6SUh4OElIUm9hWE11WkdGMFlTNW9aQ0I4ZkNBaGRHaHBjeTVwYzFacGMybGliR1VwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCMGFHbHpMbXhoYzNST2RXMGdQU0IwYUdsekxtTjFjbkpsYm5SR2NtRnRaVTUxYlR0Y2NseHVJQ0FnSUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQk5aR1lnUFNCMGFHbHpMbVpwY25OMFJuSmhiV1VnZkh3Z2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXZjQzV0WkdZN1hISmNiaUFnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUm9hWE11Wm1seWMzUkdjbUZ0WlNCOGZDQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTFRY205d0xtMWtaanRjY2x4dUlDQWdJSFJvYVhNdVptbHVZV3hVY21GdWMyWnZjbTB1YjNCaFkybDBlU0E5SUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQXVkanRjY2x4dVhISmNiaUFnSUNCMllYSWdiV0YwTzF4eVhHNGdJQ0FnZG1GeUlHWnBibUZzVFdGMElEMGdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0WVhRN1hISmNibHh5WEc0Z0lDQWdhV1lvZEdocGN5NW9hV1Z5WVhKamFIa3BlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBJRDBnTUN3Z2JHVnVJRDBnZEdocGN5NW9hV1Z5WVhKamFIa3ViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR2xtS0NGMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FHbHNaU2hwSUR3Z2JHVnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1ocFpYSmhjbU5vZVZ0cFhTNW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjQzV0WkdZcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dFlYUk5aR1lwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGMElEMGdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNTJMbkJ5YjNCek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXNWhiRTFoZEM1amJHOXVaVVp5YjIxUWNtOXdjeWh0WVhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwSUQwZ2RHaHBjeTVvYVdWeVlYSmphSGxiYVYwdVptbHVZV3hVY21GdWMyWnZjbTB1YlZCeWIzQXVkaTV3Y205d2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pwYm1Gc1RXRjBMblJ5WVc1elptOXliU2h0WVhSYk1GMHNiV0YwV3pGZExHMWhkRnN5WFN4dFlYUmJNMTBzYldGMFd6UmRMRzFoZEZzMVhTeHRZWFJiTmwwc2JXRjBXemRkTEcxaGRGczRYU3h0WVhSYk9WMHNiV0YwV3pFd1hTeHRZWFJiTVRGZExHMWhkRnN4TWwwc2JXRjBXekV6WFN4dFlYUmJNVFJkTEcxaGRGc3hOVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJRnh5WEc0Z0lDQWdmV1ZzYzJVZ2FXWW9kR2hwY3k1cGMxWnBjMmxpYkdVcGUxeHlYRzRnSUNBZ0lDQWdJR1pwYm1Gc1RXRjBJRDBnZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjQzUyTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXRZWFJOWkdZZ0ppWWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkSEpoYm5ObWIzSnRaV1JGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmRISmhibk5tYjNKdEp5eG1hVzVoYkUxaGRDNTBiekprUTFOVEtDa3BPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dmNFMWtaaUFtSmlCMGFHbHpMbXhoZVdWeVJXeGxiV1Z1ZENsN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dmNDNTJJRHc5SURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JWFJvYVhNdWFYTlVjbUZ1YzNCaGNtVnVkQ0FtSmlCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Y21WdVpHVnlRMjl1Wm1sbkxtaHBaR1ZQYmxSeVlXNXpjR0Z5Wlc1MEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFYTlVjbUZ1YzNCaGNtVnVkQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtaHBaR1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaDBhR2x6TG1ocFpHUmxiaUFtSmlCMGFHbHpMbWx6VkhKaGJuTndZWEpsYm5RcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWx6VkhKaGJuTndZWEpsYm5RZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXphRzkzS0NrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkSEpoYm5ObWIzSnRaV1JGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmIzQmhZMmwwZVNjc2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXZjQzUyS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1YUdGelRXRnpheWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOclRXRnVZV2RsY2k1eVpXNWtaWEpHY21GdFpTaG1hVzVoYkUxaGRDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWgwYUdsekxtVm1abVZqZEhOTllXNWhaMlZ5S1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1WbVptVmpkSE5OWVc1aFoyVnlMbkpsYm1SbGNrWnlZVzFsS0hSb2FYTXVabWx5YzNSR2NtRnRaU2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMxWnBjMmxpYkdVN1hISmNibjA3WEhKY2JseHlYRzVUVmtkQ1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ0E5SUc1MWJHdzdYSEpjYmlBZ0lDQjBhR2x6TG5CaGNtVnVkRU52Ym5SaGFXNWxjaUE5SUc1MWJHdzdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtMWhkSFJsUld4bGJXVnVkQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldGMGRHVkZiR1Z0Wlc1MElEMGdiblZzYkR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11YldGemEwMWhibUZuWlhJcElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnROWVc1aFoyVnlMbVJsYzNSeWIza29LVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JsTldSMEpoYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1blpYUkNZWE5sUld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NWlZWE5sUld4bGJXVnVkRHRjY2x4dWZUdGNjbHh1VTFaSFFtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUZrWkUxaGMydHpJRDBnWm5WdVkzUnBiMjRvWkdGMFlTbDdYSEpjYmlBZ0lDQjBhR2x6TG0xaGMydE5ZVzVoWjJWeUlEMGdibVYzSUUxaGMydEZiR1Z0Wlc1MEtHUmhkR0VzZEdocGN5eDBhR2x6TG1kc2IySmhiRVJoZEdFcE8xeHlYRzU5TzF4eVhHNWNjbHh1VTFaSFFtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbk5sZEUxaGRIUmxJRDBnWm5WdVkzUnBiMjRvYVdRcGUxeHlYRzRnSUNBZ2FXWW9JWFJvYVhNdWJXRjBkR1ZGYkdWdFpXNTBLWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtMWhkSFJsUld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb1hDSnRZWE5yWENJc0lGd2lkWEpzS0Z3aUlDc2diRzlqWVhScGIyNUljbVZtSUNzZ1hDSWpYQ0lnS3lCcFpDQXJJRndpS1Z3aUtUdGNjbHh1ZlR0Y2NseHVYSEpjYmxOV1IwSmhjMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVvYVdSbElEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJR2xtS0NGMGFHbHpMbWhwWkdSbGJpbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJQ2R1YjI1bEp6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtaHBaR1JsYmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNVRWa2RDWVhObFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWMyaHZkeUE5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCcFppaDBhR2x6TG1selZtbHphV0pzWlNBbUppQWhkR2hwY3k1cGMxUnlZVzV6Y0dGeVpXNTBLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWhwWkdSbGJpQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQW5ZbXh2WTJzbk8xeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNibVoxYm1OMGFXOXVJRWxUYUdGd1pVVnNaVzFsYm5Rb1pHRjBZU3h3WVhKbGJuUkRiMjUwWVdsdVpYSXNaMnh2WW1Gc1JHRjBZU3hqYjIxd0xDQndiR0ZqWldodmJHUmxjaWw3WEhKY2JpQWdJQ0IwYUdsekxuTm9ZWEJsY3lBOUlGdGRPMXh5WEc0Z0lDQWdkR2hwY3k1emFHRndaWE5FWVhSaElEMGdaR0YwWVM1emFHRndaWE03WEhKY2JpQWdJQ0IwYUdsekxuTjBlV3hsYzB4cGMzUWdQU0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVhWFJsYlhORVlYUmhJRDBnVzEwN1hISmNiaUFnSUNCMGFHbHpMbkJ5WlhaV2FXVjNSR0YwWVNBOUlGdGRPMXh5WEc0Z0lDQWdkR2hwY3k1emFHRndaVTF2WkdsbWFXVnljeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTV3Y205alpYTnpaV1JGYkdWdFpXNTBjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTVmY0dGeVpXNTBMbU52Ym5OMGNuVmpkRzl5TG1OaGJHd29kR2hwY3l4a1lYUmhMSEJoY21WdWRFTnZiblJoYVc1bGNpeG5iRzlpWVd4RVlYUmhMR052YlhBc0lIQnNZV05sYUc5c1pHVnlLVHRjY2x4dWZWeHlYRzVqY21WaGRHVkZiR1Z0Wlc1MEtGTldSMEpoYzJWRmJHVnRaVzUwTENCSlUyaGhjR1ZGYkdWdFpXNTBLVHRjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtbGtaVzUwYVhSNVRXRjBjbWw0SUQwZ2JtVjNJRTFoZEhKcGVDZ3BPMXh5WEc1Y2NseHVTVk5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWJHTkZiblZ0SUQwZ2UxeHlYRzRnSUNBZ0p6RW5PaUFuWW5WMGRDY3NYSEpjYmlBZ0lDQW5NaWM2SUNkeWIzVnVaQ2NzWEhKY2JpQWdJQ0FuTXljNklDZHpjWFZoY21VblhISmNibjFjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExteHFSVzUxYlNBOUlIdGNjbHh1SUNBZ0lDY3hKem9nSjIxcGRHVnlKeXhjY2x4dUlDQWdJQ2N5SnpvZ0ozSnZkVzVrSnl4Y2NseHVJQ0FnSUNjekp6b2dKMkoxZEhRblhISmNibjFjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuTmxZWEpqYUZCeWIyTmxjM05sWkVWc1pXMWxiblFnUFNCbWRXNWpkR2x2YmlobGJHVnRLWHRjY2x4dUlDQWdJSFpoY2lCcElEMGdkR2hwY3k1d2NtOWpaWE56WldSRmJHVnRaVzUwY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0IzYUdsc1pTaHBLWHRjY2x4dUlDQWdJQ0FnSUNCcElDMDlJREU3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1d2NtOWpaWE56WldSRmJHVnRaVzUwYzF0cFhTNWxiR1Z0SUQwOVBTQmxiR1Z0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNISnZZMlZ6YzJWa1JXeGxiV1Z1ZEhOYmFWMHVjRzl6TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lISmxkSFZ5YmlBd08xeHlYRzU5TzF4eVhHNWNjbHh1U1ZOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZV1JrVUhKdlkyVnpjMlZrUld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0dWc1pXMHNJSEJ2Y3lsN1hISmNiaUFnSUNCMllYSWdhU0E5SUhSb2FYTXVjSEp2WTJWemMyVmtSV3hsYldWdWRITXViR1Z1WjNSb08xeHlYRzRnSUNBZ2QyaHBiR1VvYVNsN1hISmNiaUFnSUNBZ0lDQWdhU0F0UFNBeE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVjSEp2WTJWemMyVmtSV3hsYldWdWRITmJhVjB1Wld4bGJTQTlQVDBnWld4bGJTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0hKdlkyVnpjMlZrUld4bGJXVnVkSE5iYVYwdWNHOXpJRDBnY0c5ek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaHBJRDA5UFNBd0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnliMk5sYzNObFpFVnNaVzFsYm5SekxuQjFjMmdvZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkdWdE9pQmxiR1Z0TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjNNNklIQnZjMXh5WEc0Z0lDQWdJQ0FnSUgwcFhISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVKVTJoaGNHVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWlkV2xzWkVWNGNISmxjM05wYjI1SmJuUmxjbVpoWTJVZ1BTQm1kVzVqZEdsdmJpZ3BlMzA3WEhKY2JseHlYRzVKVTJoaGNHVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWpjbVZoZEdWRmJHVnRaVzUwY3lBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQXZMMVJQUkU4Z1kyaGxZMnNnYVdZZ1NTQmpZVzRnZFhObElITjViV0p2YkNCemJ5QnBJR05oYmlCelpYUWdhWFJ6SUhacFpYZENiM2hjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1amNtVmhkR1ZGYkdWdFpXNTBjeTVqWVd4c0tIUm9hWE1wTzF4eVhHNGdJQ0FnZEdocGN5NXpaV0Z5WTJoVGFHRndaWE1vZEdocGN5NXphR0Z3WlhORVlYUmhMSFJvYVhNdWFYUmxiWE5FWVhSaExIUm9hWE11Y0hKbGRsWnBaWGRFWVhSaExIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1zSURBc0lGdGRMQ0IwY25WbEtUdGNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxtUmhkR0V1YUdRZ2ZId2dkR2hwY3k1a1lYUmhMblJrS1h0Y2NseHVJQ0FnSUNBZ0lDQnpkSGxzWlZWdWMyVnNaV04wWVdKc1pVUnBkaWgwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNUpVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1elpYUkhjbUZrYVdWdWRFUmhkR0VnUFNCbWRXNWpkR2x2Ymlod1lYUm9SV3hsYldWdWRDeGhjbklzWkdGMFlTbDdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHZHlZV1JwWlc1MFNXUWdQU0FuWjNKZkp5dHlZVzVrYjIxVGRISnBibWNvTVRBcE8xeHlYRzRnSUNBZ2RtRnlJR2RtYVd4c08xeHlYRzRnSUNBZ2FXWW9ZWEp5TG5RZ1BUMDlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lHZG1hV3hzSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RzYVc1bFlYSkhjbUZrYVdWdWRDY3BPMXh5WEc0Z0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0JuWm1sc2JDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3bmNtRmthV0ZzUjNKaFpHbGxiblFuS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdkbWFXeHNMbk5sZEVGMGRISnBZblYwWlNnbmFXUW5MR2R5WVdScFpXNTBTV1FwTzF4eVhHNGdJQ0FnWjJacGJHd3VjMlYwUVhSMGNtbGlkWFJsS0NkemNISmxZV1JOWlhSb2IyUW5MQ2R3WVdRbktUdGNjbHh1SUNBZ0lHZG1hV3hzTG5ObGRFRjBkSEpwWW5WMFpTZ25aM0poWkdsbGJuUlZibWwwY3ljc0ozVnpaWEpUY0dGalpVOXVWWE5sSnlrN1hISmNiaUFnSUNCMllYSWdjM1J2Y0hNZ1BTQmJYVHRjY2x4dUlDQWdJSFpoY2lCemRHOXdMQ0JxTENCcVRHVnVPMXh5WEc0Z0lDQWdha3hsYmlBOUlHRnljaTVuTG5BcU5EdGNjbHh1SUNBZ0lHWnZjaWhxUFRBN2FqeHFUR1Z1TzJvclBUUXBlMXh5WEc0Z0lDQWdJQ0FnSUhOMGIzQWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0ozTjBiM0FuS1R0Y2NseHVJQ0FnSUNBZ0lDQm5abWxzYkM1aGNIQmxibVJEYUdsc1pDaHpkRzl3S1R0Y2NseHVJQ0FnSUNBZ0lDQnpkRzl3Y3k1d2RYTm9LSE4wYjNBcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NHRjBhRVZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NCaGNuSXVkSGtnUFQwOUlDZG5aaWNnUHlBblptbHNiQ2M2SjNOMGNtOXJaU2NzSjNWeWJDZ2pKeXRuY21Ga2FXVnVkRWxrS3ljcEp5azdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVpHVm1jeTVoY0hCbGJtUkRhR2xzWkNoblptbHNiQ2s3WEhKY2JpQWdJQ0JrWVhSaExtZG1JRDBnWjJacGJHdzdYSEpjYmlBZ0lDQmtZWFJoTG1OemRDQTlJSE4wYjNCek8xeHlYRzU5WEhKY2JseHlYRzVKVTJoaGNHVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXpaWFJIY21Ga2FXVnVkRTl3WVdOcGRIa2dQU0JtZFc1amRHbHZiaWhoY25Jc0lHUmhkR0VzSUhOMGVXeGxUMklwZTF4eVhHNGdJQ0FnYVdZb0tHRnljaTVuTG1zdWExc3dYUzV6SUNZbUlHRnljaTVuTG1zdWExc3dYUzV6TG14bGJtZDBhQ0ErSUdGeWNpNW5MbkFxTkNrZ2ZId2dZWEp5TG1jdWF5NXJMbXhsYm1kMGFDQStJR0Z5Y2k1bkxuQXFOQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzl3Um1sc2JEdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2MzUnZjQ3dnYWl3Z2FreGxianRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiV0Z6YXlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXhjSW0xaGMydGNJaWs3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJRzFoYzJ0RmJHVnRaVzUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ0FuY0dGMGFDY3BPMXh5WEc0Z0lDQWdJQ0FnSUcxaGMyc3VZWEJ3Wlc1a1EyaHBiR1FvYldGemEwVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdmNHRmphWFI1U1dRZ1BTQW5iM0JmSnl0eVlXNWtiMjFUZEhKcGJtY29NVEFwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ0WVhOclNXUWdQU0FuYld0Zkp5dHlZVzVrYjIxVGRISnBibWNvTVRBcE8xeHlYRzRnSUNBZ0lDQWdJRzFoYzJzdWMyVjBRWFIwY21saWRYUmxLQ2RwWkNjc2JXRnphMGxrS1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhoY25JdWRDQTlQVDBnTVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc5d1JtbHNiQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25iR2x1WldGeVIzSmhaR2xsYm5RbktUdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZjRVpwYkd3Z1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjNKaFpHbGhiRWR5WVdScFpXNTBKeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJRzl3Um1sc2JDNXpaWFJCZEhSeWFXSjFkR1VvSjJsa0p5eHZjR0ZqYVhSNVNXUXBPMXh5WEc0Z0lDQWdJQ0FnSUc5d1JtbHNiQzV6WlhSQmRIUnlhV0oxZEdVb0ozTndjbVZoWkUxbGRHaHZaQ2NzSjNCaFpDY3BPMXh5WEc0Z0lDQWdJQ0FnSUc5d1JtbHNiQzV6WlhSQmRIUnlhV0oxZEdVb0oyZHlZV1JwWlc1MFZXNXBkSE1uTENkMWMyVnlVM0JoWTJWUGJsVnpaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lHcE1aVzRnUFNCaGNuSXVaeTVyTG10Yk1GMHVjeUEvSUdGeWNpNW5MbXN1YTFzd1hTNXpMbXhsYm1kMGFDQTZJR0Z5Y2k1bkxtc3VheTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITjBiM0J6SUQwZ1cxMDdYSEpjYmlBZ0lDQWdJQ0FnWm05eUtHbzlZWEp5TG1jdWNDbzBPMm84YWt4bGJqdHFLejB5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSdmNDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3bmMzUnZjQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZEc5d0xuTmxkRUYwZEhKcFluVjBaU2duYzNSdmNDMWpiMnh2Y2ljc0ozSm5ZaWd5TlRVc01qVTFMREkxTlNrbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OXpkRzl3TG5ObGRFRjBkSEpwWW5WMFpTZ25iMlptYzJWMEp5eE5ZWFJvTG5KdmRXNWtLR0Z5Y2k1NVcycGRXekJkS2pFd01Da3JKeVVuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5emRHOXdMbk5sZEVGMGRISnBZblYwWlNnbmMzUjViR1VuTENkemRHOXdMV052Ykc5eU9uSm5ZaWd5TlRVc01qVTFMREkxTlNrN2MzUnZjQzF2Y0dGamFYUjVPaWNyWVhKeUxubGJhbDFiTVYwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdmNFWnBiR3d1WVhCd1pXNWtRMmhwYkdRb2MzUnZjQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE4wYjNCekxuQjFjMmdvYzNSdmNDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHMWhjMnRGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnZ1lYSnlMblI1SUQwOVBTQW5aMlluSUQ4Z0oyWnBiR3duT2lkemRISnZhMlVuTENkMWNtd29JeWNyYjNCaFkybDBlVWxrS3ljcEp5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbVJsWm5NdVlYQndaVzVrUTJocGJHUW9iM0JHYVd4c0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaR1ZtY3k1aGNIQmxibVJEYUdsc1pDaHRZWE5yS1R0Y2NseHVJQ0FnSUNBZ0lDQmtZWFJoTG05bUlEMGdiM0JHYVd4c08xeHlYRzRnSUNBZ0lDQWdJR1JoZEdFdWIzTjBJRDBnYzNSdmNITTdYSEpjYmlBZ0lDQWdJQ0FnYzNSNWJHVlBZaTV0YzBWc1pXMGdQU0J0WVhOclJXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXRnphMGxrTzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVTVk5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVTNSNWJHVkZiR1Z0Wlc1MElEMGdablZ1WTNScGIyNG9aR0YwWVN3Z2JHVjJaV3dzSUdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1h0Y2NseHVJQ0FnSUhaaGNpQmxiR1Z0Wlc1MFJHRjBZU0E5SUh0Y2NseHVJQ0FnSUgwN1hISmNiaUFnSUNCMllYSWdjM1I1YkdWUFlpQTlJSHRjY2x4dUlDQWdJQ0FnSUNCa1lYUmhPaUJrWVhSaExGeHlYRzRnSUNBZ0lDQWdJSFI1Y0dVNklHUmhkR0V1ZEhrc1hISmNiaUFnSUNBZ0lDQWdaRG9nSnljc1hISmNiaUFnSUNBZ0lDQWdiR1E2SUNjbkxGeHlYRzRnSUNBZ0lDQWdJR3gyYkRvZ2JHVjJaV3dzWEhKY2JpQWdJQ0FnSUNBZ2JXUm1PaUJtWVd4elpTeGNjbHh1SUNBZ0lDQWdJQ0JqYkc5elpXUTZJR1poYkhObFhISmNiaUFnSUNCOU8xeHlYRzRnSUNBZ2RtRnlJSEJoZEdoRmJHVnRaVzUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ0JjSW5CaGRHaGNJaWs3WEhKY2JpQWdJQ0JsYkdWdFpXNTBSR0YwWVM1dklEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb2RHaHBjeXhrWVhSaExtOHNNQ3d3TGpBeExHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lHbG1LR1JoZEdFdWRIa2dQVDBnSjNOMEp5QjhmQ0JrWVhSaExuUjVJRDA5SUNkbmN5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNCd1lYUm9SV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjNOMGNtOXJaUzFzYVc1bFkyRndKeXdnZEdocGN5NXNZMFZ1ZFcxYlpHRjBZUzVzWTEwZ2ZId2dKM0p2ZFc1a0p5azdYSEpjYmlBZ0lDQWdJQ0FnTHk4dkwzQmhkR2hGYkdWdFpXNTBMbk4wZVd4bExuTjBjbTlyWlV4cGJtVmpZWEFnUFNCMGFHbHpMbXhqUlc1MWJWdGtZWFJoTG14alhTQjhmQ0FuY205MWJtUW5PMXh5WEc0Z0lDQWdJQ0FnSUhCaGRHaEZiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duYzNSeWIydGxMV3hwYm1WcWIybHVKeXgwYUdsekxteHFSVzUxYlZ0a1lYUmhMbXhxWFNCOGZDQW5jbTkxYm1RbktUdGNjbHh1SUNBZ0lDQWdJQ0F2THk4dmNHRjBhRVZzWlcxbGJuUXVjM1I1YkdVdWMzUnliMnRsVEdsdVpXcHZhVzRnUFNCMGFHbHpMbXhxUlc1MWJWdGtZWFJoTG14cVhTQjhmQ0FuY205MWJtUW5PMXh5WEc0Z0lDQWdJQ0FnSUhCaGRHaEZiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duWm1sc2JDMXZjR0ZqYVhSNUp5d25NQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lDOHZMeTl3WVhSb1JXeGxiV1Z1ZEM1emRIbHNaUzVtYVd4c1QzQmhZMmwwZVNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1pHRjBZUzVzYWlBOVBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdoRmJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25jM1J5YjJ0bExXMXBkR1Z5YkdsdGFYUW5MR1JoZEdFdWJXd3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeTh2Y0dGMGFFVnNaVzFsYm5RdWMzUjViR1V1YzNSeWIydGxUV2wwWlhKc2FXMXBkQ0E5SUdSaGRHRXViV3c3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwUkdGMFlTNTNJRDBnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQW9kR2hwY3l4a1lYUmhMbmNzTUN4dWRXeHNMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNCcFppaGtZWFJoTG1RcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaQ0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSRVlYTm9VSEp2Y0NoMGFHbHpMR1JoZEdFdVpDd25jM1puSnl4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRmtMbXNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRjBhRVZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlV0WkdGemFHRnljbUY1Snl3Z1pDNWtZWE5vWVhKeVlYa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4dkwzQmhkR2hGYkdWdFpXNTBMbk4wZVd4bExuTjBjbTlyWlVSaGMyaGhjbkpoZVNBOUlHUXVaR0Z6YUdGeWNtRjVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFFVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVXRaR0Z6YUc5bVpuTmxkQ2NzSUdRdVpHRnphRzltWm5ObGRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THk4dmNHRjBhRVZzWlcxbGJuUXVjM1I1YkdVdWMzUnliMnRsUkdGemFHOW1abk5sZENBOUlHUXVaR0Z6YUc5bVpuTmxkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MFJHRjBZUzVrSUQwZ1pEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9aR0YwWVM1MGVTQTlQU0FuWm13bklIeDhJR1JoZEdFdWRIa2dQVDBnSjNOMEp5bDdYSEpjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkRVJoZEdFdVl5QTlJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJRY205d0tIUm9hWE1zWkdGMFlTNWpMREVzTWpVMUxHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdaV3hsYldWdWRFUmhkR0V1WnlBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUkhjbUZrYVdWdWRGQnliM0FvZEdocGN5eGtZWFJoTG1jc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0dSaGRHRXVkQ0E5UFNBeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEVSaGRHRXVhQ0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLSFJvYVhNc1pHRjBZUzVvTERBc01DNHdNU3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzWlcxbGJuUkVZWFJoTG1FZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdVlTd3dMR1JsWjFSdlVtRmtjeXhrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1ZzWlcxbGJuUkVZWFJoTG5NZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdWN5d3hMRzUxYkd3c1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJR1ZzWlcxbGJuUkVZWFJoTG1VZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdVpTd3hMRzUxYkd3c1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBSM0poWkdsbGJuUkVZWFJoS0hCaGRHaEZiR1Z0Wlc1MExHUmhkR0VzWld4bGJXVnVkRVJoZEdFc0lITjBlV3hsVDJJcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdFlYTnJTV1FnUFNCMGFHbHpMbk5sZEVkeVlXUnBaVzUwVDNCaFkybDBlU2hrWVhSaExHVnNaVzFsYm5SRVlYUmhMQ0J6ZEhsc1pVOWlLVHRjY2x4dUlDQWdJQ0FnSUNCcFppaHRZWE5yU1dRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lYUm9SV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjIxaGMyc25MQ2QxY213b0l5Y3JiV0Z6YTBsa0t5Y3BKeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1pXeGxiV1Z1ZEVSaGRHRXVaV3hsYlNBOUlIQmhkR2hGYkdWdFpXNTBPMXh5WEc0Z0lDQWdMeTlqYjI1MFlXbHVaWEl1WVhCd1pXNWtRMmhwYkdRb2NHRjBhRVZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdhV1lvWkdGMFlTNXlJRDA5UFNBeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnY0dGMGFFVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RtYVd4c0xYSjFiR1VuTENBblpYWmxibTlrWkNjcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2xtS0dSaGRHRXViRzRwZTF4eVhHNGdJQ0FnSUNBZ0lIQmhkR2hGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbmFXUW5MR1JoZEdFdWJHNHBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvWkdGMFlTNWpiQ2w3WEhKY2JpQWdJQ0FnSUNBZ2NHRjBhRVZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkamJHRnpjeWNzWkdGMFlTNWpiQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J6ZEhsc1pVOWlMbkJGYkdWdElEMGdjR0YwYUVWc1pXMWxiblE3WEhKY2JpQWdJQ0IwYUdsekxuTjBlV3hsYzB4cGMzUXVjSFZ6YUNoemRIbHNaVTlpS1R0Y2NseHVJQ0FnSUdWc1pXMWxiblJFWVhSaExuTjBlV3hsSUQwZ2MzUjViR1ZQWWp0Y2NseHVJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBSR0YwWVR0Y2NseHVmVnh5WEc1Y2NseHVTVk5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsUjNKdmRYQkZiR1Z0Wlc1MElEMGdablZ1WTNScGIyNG9aR0YwWVNrZ2UxeHlYRzRnSUNBZ2RtRnlJR1ZzWlcxbGJuUkVZWFJoSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJR2wwT2lCYlhTeGNjbHh1SUNBZ0lDQWdJQ0J3Y21WMlZtbGxkMFJoZEdFNklGdGRYSEpjYmlBZ0lDQjlPMXh5WEc0Z0lDQWdkbUZ5SUdjZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJjbktUdGNjbHh1SUNBZ0lHVnNaVzFsYm5SRVlYUmhMbWR5SUQwZ1p6dGNjbHh1SUNBZ0lHbG1LR1JoZEdFdWJHNHBlMXh5WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblJFWVhSaExtZHlMbk5sZEVGMGRISnBZblYwWlNnbmFXUW5MR1JoZEdFdWJHNHBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlHVnNaVzFsYm5SRVlYUmhPMXh5WEc1OVhISmNibHh5WEc1SlUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVqY21WaGRHVlVjbUZ1YzJadmNtMUZiR1Z0Wlc1MElEMGdablZ1WTNScGIyNG9aR0YwWVN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcElIdGNjbHh1SUNBZ0lIWmhjaUJsYkdWdFpXNTBSR0YwWVNBOUlIdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTBnT2lCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc5d09pQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdWJ5d3dMREF1TURFc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcExGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFVISnZjSE02SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLSFJvYVhNc1pHRjBZU3d5TEc1MWJHd3NaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBYSEpjYmlBZ0lDQWdJQ0FnZlN4Y2NseHVJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MGN6b2dXMTFjY2x4dUlDQWdJSDA3WEhKY2JpQWdJQ0J5WlhSMWNtNGdaV3hsYldWdWRFUmhkR0U3WEhKY2JuMWNjbHh1WEhKY2JrbFRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVk5vWVhCbFJXeGxiV1Z1ZENBOUlHWjFibU4wYVc5dUtHUmhkR0VzSUc5M2JsUnlZVzV6Wm05eWJXVnljeXdnYkdWMlpXd3NJR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLU0I3WEhKY2JpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZEVSaGRHRWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEhNZ09pQmJYU3hjY2x4dUlDQWdJQ0FnSUNCallXTm9aWE02VzEwc1hISmNiaUFnSUNBZ0lDQWdjM1I1YkdWeklEb2dXMTBzWEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdFpYSnpPaUJ2ZDI1VWNtRnVjMlp2Y20xbGNuTXNYSEpjYmlBZ0lDQWdJQ0FnYkZOMGNqb2dKeWRjY2x4dUlDQWdJSDA3WEhKY2JpQWdJQ0IyWVhJZ2RIa2dQU0EwTzF4eVhHNGdJQ0FnYVdZb1pHRjBZUzUwZVNBOVBTQW5jbU1uS1h0Y2NseHVJQ0FnSUNBZ0lDQjBlU0E5SURVN1hISmNiaUFnSUNCOVpXeHpaU0JwWmloa1lYUmhMblI1SUQwOUlDZGxiQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lIUjVJRDBnTmp0Y2NseHVJQ0FnSUgxbGJITmxJR2xtS0dSaGRHRXVkSGtnUFQwZ0ozTnlKeWw3WEhKY2JpQWdJQ0FnSUNBZ2RIa2dQU0EzTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnWld4bGJXVnVkRVJoZEdFdWMyZ2dQU0JUYUdGd1pWQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlRhR0Z3WlZCeWIzQW9kR2hwY3l4a1lYUmhMSFI1TEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUdWc1pXMWxiblJFWVhSaExteDJiQ0E5SUd4bGRtVnNPMXh5WEc0Z0lDQWdkR2hwY3k1emFHRndaWE11Y0hWemFDaGxiR1Z0Wlc1MFJHRjBZUzV6YUNrN1hISmNiaUFnSUNCMGFHbHpMbUZrWkZOb1lYQmxWRzlOYjJScFptbGxjbk1vWld4bGJXVnVkRVJoZEdFcE8xeHlYRzRnSUNBZ2NtVjBkWEp1SUdWc1pXMWxiblJFWVhSaE8xeHlYRzU5WEhKY2JseHlYRzUyWVhJZ1kyOXVkQ0E5SURBN1hISmNibHh5WEc1SlUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV6WlhSRmJHVnRaVzUwVTNSNWJHVnpJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUhaaGNpQnFMQ0JxVEdWdUlEMGdkR2hwY3k1emRIbHNaWE5NYVhOMExteGxibWQwYUR0Y2NseHVJQ0FnSUhaaGNpQmhjbklnUFNCYlhUdGNjbHh1SUNBZ0lHWnZjaWhxUFRBN2FqeHFUR1Z1TzJvclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtDRjBhR2x6TG5OMGVXeGxjMHhwYzNSYmFsMHVZMnh2YzJWa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lYSnlMbkIxYzJnb2RHaHBjeTV6ZEhsc1pYTk1hWE4wVzJwZEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdZWEp5TzF4eVhHNTlYSEpjYmx4eVhHNUpVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1eVpXeHZZV1JUYUdGd1pYTWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnZEdocGN5NW1hWEp6ZEVaeVlXMWxJRDBnZEhKMVpUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtbDBaVzF6UkdGMFlTNXNaVzVuZEdnN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNISmxkbFpwWlhkRVlYUmhXMmxkSUQwZ2RHaHBjeTVwZEdWdGMwUmhkR0ZiYVYwN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbk5sWVhKamFGTm9ZWEJsY3loMGFHbHpMbk5vWVhCbGMwUmhkR0VzZEdocGN5NXBkR1Z0YzBSaGRHRXNkR2hwY3k1d2NtVjJWbWxsZDBSaGRHRXNkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3l3Z01Dd2dXMTBzSUhSeWRXVXBPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXViR1Z1WjNSb08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWelcybGRMbWRsZEZaaGJIVmxLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxuSmxibVJsY2sxdlpHbG1hV1Z5Y3lncE8xeHlYRzU5WEhKY2JseHlYRzVKVTJoaGNHVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXpaV0Z5WTJoVGFHRndaWE1nUFNCbWRXNWpkR2x2YmloaGNuSXNhWFJsYlhORVlYUmhMSEJ5WlhaV2FXVjNSR0YwWVN4amIyNTBZV2x1WlhJc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNc0lHeGxkbVZzTENCMGNtRnVjMlp2Y20xbGNuTXNJSEpsYm1SbGNpbDdYSEpjYmlBZ0lDQjJZWElnYjNkdVZISmhibk5tYjNKdFpYSnpJRDBnVzEwdVkyOXVZMkYwS0hSeVlXNXpabTl5YldWeWN5azdYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnWVhKeUxteGxibWQwYUNBdElERTdYSEpjYmlBZ0lDQjJZWElnYWl3Z2FreGxianRjY2x4dUlDQWdJSFpoY2lCdmQyNVRkSGxzWlhNZ1BTQmJYU3dnYjNkdVRXOWthV1pwWlhKeklEMGdXMTBzSUhOMGVXeGxUMklzSUdOMWNuSmxiblJVY21GdWMyWnZjbTBzSUcxdlpHbG1hV1Z5TENCd2NtOWpaWE56WldSUWIzTTdYSEpjYmlBZ0lDQm1iM0lvYVQxc1pXNDdhVDQ5TUR0cExUMHhLWHRjY2x4dUlDQWdJQ0FnSUNCd2NtOWpaWE56WldSUWIzTWdQU0IwYUdsekxuTmxZWEpqYUZCeWIyTmxjM05sWkVWc1pXMWxiblFvWVhKeVcybGRLVHRjY2x4dUlDQWdJQ0FnSUNCcFppZ2hjSEp2WTJWemMyVmtVRzl6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVcybGRMbDl5Wlc1a1pYSWdQU0J5Wlc1a1pYSTdYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhWFJsYlhORVlYUmhXMmxkSUQwZ2NISmxkbFpwWlhkRVlYUmhXM0J5YjJObGMzTmxaRkJ2Y3lBdElERmRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWhoY25KYmFWMHVkSGtnUFQwZ0oyWnNKeUI4ZkNCaGNuSmJhVjB1ZEhrZ1BUMGdKM04wSnlCOGZDQmhjbkpiYVYwdWRIa2dQVDBnSjJkbUp5QjhmQ0JoY25KYmFWMHVkSGtnUFQwZ0oyZHpKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGd2NtOWpaWE56WldSUWIzTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJYTkVZWFJoVzJsZElEMGdkR2hwY3k1amNtVmhkR1ZUZEhsc1pVVnNaVzFsYm5Rb1lYSnlXMmxkTENCc1pYWmxiQ3dnWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJYTkVZWFJoVzJsZExuTjBlV3hsTG1Oc2IzTmxaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR0Z5Y2x0cFhTNWZjbVZ1WkdWeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5SaGFXNWxjaTVoY0hCbGJtUkRhR2xzWkNocGRHVnRjMFJoZEdGYmFWMHVaV3hsYlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNkdVUzUjViR1Z6TG5CMWMyZ29hWFJsYlhORVlYUmhXMmxkTG5OMGVXeGxLVHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaU0JwWmloaGNuSmJhVjB1ZEhrZ1BUMGdKMmR5SnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRndjbTlqWlhOelpXUlFiM01wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiWE5FWVhSaFcybGRJRDBnZEdocGN5NWpjbVZoZEdWSGNtOTFjRVZzWlcxbGJuUW9ZWEp5VzJsZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHcE1aVzRnUFNCcGRHVnRjMFJoZEdGYmFWMHVhWFF1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJYTkVZWFJoVzJsZExuQnlaWFpXYVdWM1JHRjBZVnRxWFNBOUlHbDBaVzF6UkdGMFlWdHBYUzVwZEZ0cVhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObFlYSmphRk5vWVhCbGN5aGhjbkpiYVYwdWFYUXNhWFJsYlhORVlYUmhXMmxkTG1sMExHbDBaVzF6UkdGMFlWdHBYUzV3Y21WMlZtbGxkMFJoZEdFc2FYUmxiWE5FWVhSaFcybGRMbWR5TEdSNWJtRnRhV05RY205d1pYSjBhV1Z6TENCc1pYWmxiQ0FySURFc0lHOTNibFJ5WVc1elptOXliV1Z5Y3l3Z2NtVnVaR1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1lYSnlXMmxkTGw5eVpXNWtaWElwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR0ZwYm1WeUxtRndjR1Z1WkVOb2FXeGtLR2wwWlcxelJHRjBZVnRwWFM1bmNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWhoY25KYmFWMHVkSGtnUFQwZ0ozUnlKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGd2NtOWpaWE56WldSUWIzTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJYTkVZWFJoVzJsZElEMGdkR2hwY3k1amNtVmhkR1ZVY21GdWMyWnZjbTFGYkdWdFpXNTBLR0Z5Y2x0cFhTd2daSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbkpsYm5SVWNtRnVjMlp2Y20wZ1BTQnBkR1Z0YzBSaGRHRmJhVjB1ZEhKaGJuTm1iM0p0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZDI1VWNtRnVjMlp2Y20xbGNuTXVjSFZ6YUNoamRYSnlaVzUwVkhKaGJuTm1iM0p0S1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaGhjbkpiYVYwdWRIa2dQVDBnSjNOb0p5QjhmQ0JoY25KYmFWMHVkSGtnUFQwZ0ozSmpKeUI4ZkNCaGNuSmJhVjB1ZEhrZ1BUMGdKMlZzSnlCOGZDQmhjbkpiYVYwdWRIa2dQVDBnSjNOeUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0Z3Y205alpYTnpaV1JRYjNNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhWFJsYlhORVlYUmhXMmxkSUQwZ2RHaHBjeTVqY21WaGRHVlRhR0Z3WlVWc1pXMWxiblFvWVhKeVcybGRMQ0J2ZDI1VWNtRnVjMlp2Y20xbGNuTXNJR3hsZG1Wc0xDQmtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiWE5FWVhSaFcybGRMbVZzWlcxbGJuUnpJRDBnZEdocGN5NXpaWFJGYkdWdFpXNTBVM1I1YkdWektDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtHRnljbHRwWFM1MGVTQTlQU0FuZEcwbklIeDhJR0Z5Y2x0cFhTNTBlU0E5UFNBbmNtUW5JSHg4SUdGeWNsdHBYUzUwZVNBOVBTQW5iWE1uS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lYQnliMk5sYzNObFpGQnZjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGIyUnBabWxsY2lBOUlGTm9ZWEJsVFc5a2FXWnBaWEp6TG1kbGRFMXZaR2xtYVdWeUtHRnljbHRwWFM1MGVTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YjJScFptbGxjaTVwYm1sMEtIUm9hWE1zWVhKeVcybGRMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMXpSR0YwWVZ0cFhTQTlJRzF2WkdsbWFXVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXphR0Z3WlUxdlpHbG1hV1Z5Y3k1d2RYTm9LRzF2WkdsbWFXVnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzF2WkdsbWFXVnlJRDBnYVhSbGJYTkVZWFJoVzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiVzlrYVdacFpYSXVZMnh2YzJWa0lEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNkdVRXOWthV1pwWlhKekxuQjFjMmdvYlc5a2FXWnBaWElwTzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtHRnljbHRwWFM1MGVTQTlQU0FuY25BbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JWEJ5YjJObGMzTmxaRkJ2Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRiMlJwWm1sbGNpQTlJRk5vWVhCbFRXOWthV1pwWlhKekxtZGxkRTF2WkdsbWFXVnlLR0Z5Y2x0cFhTNTBlU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRjMFJoZEdGYmFWMGdQU0J0YjJScFptbGxjanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxdlpHbG1hV1Z5TG1sdWFYUW9kR2hwY3l4aGNuSXNhU3hwZEdWdGMwUmhkR0VzWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6YUdGd1pVMXZaR2xtYVdWeWN5NXdkWE5vS0cxdlpHbG1hV1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY2lBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzF2WkdsbWFXVnlJRDBnYVhSbGJYTkVZWFJoVzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiVzlrYVdacFpYSXVZMnh2YzJWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZDI1TmIyUnBabWxsY25NdWNIVnphQ2h0YjJScFptbGxjaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVlXUmtVSEp2WTJWemMyVmtSV3hsYldWdWRDaGhjbkpiYVYwc0lHa2dLeUF4S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUd4bGJpQTlJRzkzYmxOMGVXeGxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUc5M2JsTjBlV3hsYzF0cFhTNWpiRzl6WldRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYkdWdUlEMGdiM2R1VFc5a2FXWnBaWEp6TG14bGJtZDBhRHRjY2x4dUlDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ2IzZHVUVzlrYVdacFpYSnpXMmxkTG1Oc2IzTmxaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1SlUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVoWkdSVGFHRndaVlJ2VFc5a2FXWnBaWEp6SUQwZ1puVnVZM1JwYjI0b1pHRjBZU2tnZTF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11YzJoaGNHVk5iMlJwWm1sbGNuTXViR1Z1WjNSb08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTm9ZWEJsVFc5a2FXWnBaWEp6VzJsZExtRmtaRk5vWVhCbEtHUmhkR0VwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVTVk5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5VFc5a2FXWnBaWEp6SUQwZ1puVnVZM1JwYjI0b0tTQjdYSEpjYmlBZ0lDQnBaaWdoZEdocGN5NXphR0Z3WlUxdlpHbG1hV1Z5Y3k1c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjBhR2x6TG5Ob1lYQmxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMmhoY0dWelcybGRMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNWNjbHh1SUNBZ0lHeGxiaUE5SUhSb2FYTXVjMmhoY0dWTmIyUnBabWxsY25NdWJHVnVaM1JvTzF4eVhHNWNjbHh1SUNBZ0lHWnZjaWhwUFd4bGJpMHhPMmsrUFRBN2FTMDlNU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6YUdGd1pVMXZaR2xtYVdWeWMxdHBYUzV3Y205alpYTnpVMmhoY0dWektIUm9hWE11Wm1seWMzUkdjbUZ0WlNrN1hISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVKVTJoaGNHVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXlaVzVrWlhKR2NtRnRaU0E5SUdaMWJtTjBhVzl1S0hCaGNtVnVkRTFoZEhKcGVDbDdYSEpjYmlBZ0lDQXZMM1JvYVhNdWNtVnNiMkZrVTJoaGNHVnpLQ2s3WEhKY2JpQWdJQ0IyWVhJZ2NtVnVaR1Z5VUdGeVpXNTBJRDBnZEdocGN5NWZjR0Z5Wlc1MExuSmxibVJsY2taeVlXMWxMbU5oYkd3b2RHaHBjeXh3WVhKbGJuUk5ZWFJ5YVhncE8xeHlYRzRnSUNBZ2FXWW9jbVZ1WkdWeVVHRnlaVzUwUFQwOVptRnNjMlVwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YUdsa1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhR2xrWkdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzV6ZEhsc1pTNWthWE53YkdGNUlEMGdKMkpzYjJOckp6dGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtaHBaR1JsYmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NXlaVzVrWlhKTmIyUnBabWxsY25Nb0tUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxuTjBlV3hsYzB4cGMzUXViR1Z1WjNSb08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTjBlV3hsYzB4cGMzUmJhVjB1WkNBOUlDY25PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1dFpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11Y21WdVpHVnlVMmhoY0dVb2RHaHBjeTV6YUdGd1pYTkVZWFJoTEhSb2FYTXVhWFJsYlhORVlYUmhMQ0J1ZFd4c0tUdGNjbHh1WEhKY2JpQWdJQ0JtYjNJZ0tHa2dQU0F3T3lCcElEd2diR1Z1T3lCcElDczlJREVwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG14a0lEMDlQU0FuTUNjcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6ZEhsc1pYTk1hWE4wVzJsZExteGtJRDBnSnpFbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdWNFVnNaVzB1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJQ2RpYkc5amF5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZkR2hwY3k1emRIbHNaWE5NYVhOMFcybGRMbkJoY21WdWRDNWhjSEJsYm1SRGFHbHNaQ2gwYUdsekxuTjBlV3hsYzB4cGMzUmJhVjB1Y0VWc1pXMHBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG0xa1ppQjhmQ0IwYUdsekxtWnBjbk4wUm5KaGJXVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emRIbHNaWE5NYVhOMFcybGRMbkJGYkdWdExuTmxkRUYwZEhKcFluVjBaU2duWkNjc0lIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cFhTNWtLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG0xelJXeGxiU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdWJYTkZiR1Z0TG5ObGRFRjBkSEpwWW5WMFpTZ25aQ2NzSUhSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1a0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtSUNoMGFHbHpMbVpwY25OMFJuSmhiV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtaHBaR1VnUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2FXWW9JWFJvYVhNdWFHbGtaR1Z1S1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ0oyNXZibVVuTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxuTjBlV3hsYzB4cGMzUXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBXeGxiaTB4TzJrK1BUQTdhUzA5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cFhTNXNaQ0FoUFQwZ0p6QW5LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1c1pDQTlJQ2N3Snp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cFhTNXdSV3hsYlM1emRIbHNaUzVrYVhOd2JHRjVJRDBnSjI1dmJtVW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV6ZEhsc1pYTk1hWE4wVzJsZExuQkZiR1Z0TG5CaGNtVnVkRTV2WkdVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1d1lYSmxiblFnUFNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdWNFVnNaVzB1Y0dGeVpXNTBUbTlrWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2TDNSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1d1JXeGxiUzV3WVhKbGJuUk9iMlJsTG5KbGJXOTJaVU5vYVd4a0tIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cFhTNXdSV3hsYlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVvYVdSa1pXNGdQU0IwY25WbE8xeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1U1ZOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVUyaGhjR1VnUFNCbWRXNWpkR2x2YmlocGRHVnRjeXhrWVhSaExDQmpiMjUwWVdsdVpYSXBlMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUdsMFpXMXpMbXhsYm1kMGFDQXRJREU3WEhKY2JpQWdJQ0IyWVhJZ2RIazdYSEpjYmlBZ0lDQm1iM0lvYVQxc1pXNDdhVDQ5TUR0cExUMHhLWHRjY2x4dUlDQWdJQ0FnSUNCMGVTQTlJR2wwWlcxelcybGRMblI1TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFI1SUQwOUlDZDBjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVpwY25OMFJuSmhiV1VnZkh3Z1pHRjBZVnRwWFM1MGNtRnVjMlp2Y20wdWIzQXViV1JtSUNZbUlHTnZiblJoYVc1bGNpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFlXbHVaWEl1YzJWMFFYUjBjbWxpZFhSbEtDZHZjR0ZqYVhSNUp5eGtZWFJoVzJsZExuUnlZVzV6Wm05eWJTNXZjQzUyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVpwY25OMFJuSmhiV1VnZkh3Z1pHRjBZVnRwWFM1MGNtRnVjMlp2Y20wdWJWQnliM0J6TG0xa1ppQW1KaUJqYjI1MFlXbHVaWElwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR0ZwYm1WeUxuTmxkRUYwZEhKcFluVjBaU2duZEhKaGJuTm1iM0p0Snl4a1lYUmhXMmxkTG5SeVlXNXpabTl5YlM1dFVISnZjSE11ZGk1MGJ6SmtRMU5US0NrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kSGtnUFQwZ0ozTm9KeUI4ZkNCMGVTQTlQU0FuWld3bklIeDhJSFI1SUQwOUlDZHlZeWNnZkh3Z2RIa2dQVDBnSjNOeUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlVR0YwYUNocGRHVnRjMXRwWFN4a1lYUmhXMmxkS1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaDBlU0E5UFNBblptd25LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eVpXNWtaWEpHYVd4c0tHbDBaVzF6VzJsZExHUmhkR0ZiYVYwcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LSFI1SUQwOUlDZG5aaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2tkeVlXUnBaVzUwS0dsMFpXMXpXMmxkTEdSaGRHRmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtIUjVJRDA5SUNkbmN5Y3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxja2R5WVdScFpXNTBLR2wwWlcxelcybGRMR1JoZEdGYmFWMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxjbE4wY205clpTaHBkR1Z0YzF0cFhTeGtZWFJoVzJsZEtUdGNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWgwZVNBOVBTQW5jM1FuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhKVGRISnZhMlVvYVhSbGJYTmJhVjBzWkdGMFlWdHBYU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb2RIa2dQVDBnSjJkeUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlVMmhoY0dVb2FYUmxiWE5iYVYwdWFYUXNaR0YwWVZ0cFhTNXBkQ3dnWkdGMFlWdHBYUzVuY2lrN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9kSGtnUFQwZ0ozUnRKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dWZUdGNjbHh1WEhKY2JrbFRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1KMWFXeGtVMmhoY0dWVGRISnBibWNnUFNCbWRXNWpkR2x2Ymlod1lYUm9UbTlrWlhNc0lHeGxibWQwYUN3Z1kyeHZjMlZrTENCdFlYUXBJSHRjY2x4dUlDQWdJSFpoY2lCcExDQnphR0Z3WlZOMGNtbHVaeUE5SUNjbk8xeHlYRzRnSUNBZ1ptOXlLR2tnUFNBeE95QnBJRHdnYkdWdVozUm9PeUJwSUNzOUlERXBJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9hU0E5UFQwZ01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlZOMGNtbHVaeUFyUFNCY0lpQk5YQ0lnS3lCdFlYUXVZWEJ3YkhsVWIxQnZhVzUwVTNSeWFXNW5hV1pwWldRb2NHRjBhRTV2WkdWekxuWmJNRjFiTUYwc0lIQmhkR2hPYjJSbGN5NTJXekJkV3pGZEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2MyaGhjR1ZUZEhKcGJtY2dLejBnWENJZ1Exd2lJQ3NnYldGMExtRndjR3g1Vkc5UWIybHVkRk4wY21sdVoybG1hV1ZrS0hCaGRHaE9iMlJsY3k1dlcya2dMU0F4WFZzd1hTd2djR0YwYUU1dlpHVnpMbTliYVNBdElERmRXekZkS1NBcklGd2lJRndpSUNzZ2JXRjBMbUZ3Y0d4NVZHOVFiMmx1ZEZOMGNtbHVaMmxtYVdWa0tIQmhkR2hPYjJSbGN5NXBXMmxkV3pCZExDQndZWFJvVG05a1pYTXVhVnRwWFZzeFhTa2dLeUJjSWlCY0lpQXJJRzFoZEM1aGNIQnNlVlJ2VUc5cGJuUlRkSEpwYm1kcFptbGxaQ2h3WVhSb1RtOWtaWE11ZGx0cFhWc3dYU3dnY0dGMGFFNXZaR1Z6TG5aYmFWMWJNVjBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZZ0tHeGxibWQwYUNBOVBUMGdNU2tnZTF4eVhHNGdJQ0FnSUNBZ0lITm9ZWEJsVTNSeWFXNW5JQ3M5SUZ3aUlFMWNJaUFySUcxaGRDNWhjSEJzZVZSdlVHOXBiblJUZEhKcGJtZHBabWxsWkNod1lYUm9UbTlrWlhNdWRsc3dYVnN3WFN3Z2NHRjBhRTV2WkdWekxuWmJNRjFiTVYwcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWWdLR05zYjNObFpDQW1KaUJzWlc1bmRHZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCemFHRndaVk4wY21sdVp5QXJQU0JjSWlCRFhDSWdLeUJ0WVhRdVlYQndiSGxVYjFCdmFXNTBVM1J5YVc1bmFXWnBaV1FvY0dGMGFFNXZaR1Z6TG05YmFTQXRJREZkV3pCZExDQndZWFJvVG05a1pYTXViMXRwSUMwZ01WMWJNVjBwSUNzZ1hDSWdYQ0lnS3lCdFlYUXVZWEJ3YkhsVWIxQnZhVzUwVTNSeWFXNW5hV1pwWldRb2NHRjBhRTV2WkdWekxtbGJNRjFiTUYwc0lIQmhkR2hPYjJSbGN5NXBXekJkV3pGZEtTQXJJRndpSUZ3aUlDc2diV0YwTG1Gd2NHeDVWRzlRYjJsdWRGTjBjbWx1WjJsbWFXVmtLSEJoZEdoT2IyUmxjeTUyV3pCZFd6QmRMQ0J3WVhSb1RtOWtaWE11ZGxzd1hWc3hYU2s3WEhKY2JpQWdJQ0FnSUNBZ2MyaGhjR1ZUZEhKcGJtY2dLejBnSjNvbk8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUhOb1lYQmxVM1J5YVc1bk8xeHlYRzU5TzF4eVhHNWNjbHh1U1ZOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVVHRjBhQ0E5SUdaMWJtTjBhVzl1S0hCaGRHaEVZWFJoTEdsMFpXMUVZWFJoS1h0Y2NseHVJQ0FnSUhaaGNpQnNaVzRzSUdrc0lHb3NJR3BNWlc0c2NHRjBhRk4wY21sdVoxUnlZVzV6Wm05eWJXVmtMSEpsWkhKaGR5eHdZWFJvVG05a1pYTXNiQ3dnYkV4bGJpQTlJR2wwWlcxRVlYUmhMbVZzWlcxbGJuUnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIWmhjaUJzZG13Z1BTQnBkR1Z0UkdGMFlTNXNkbXc3WEhKY2JpQWdJQ0JwWmlnaGNHRjBhRVJoZEdFdVgzSmxibVJsY2lsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1ptOXlLR3c5TUR0c1BHeE1aVzQ3YkNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2FYUmxiVVJoZEdFdVpXeGxiV1Z1ZEhOYmJGMHVaR0YwWVM1ZmNtVnVaR1Z5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21Wa2NtRjNJRDBnYVhSbGJVUmhkR0V1YzJndWJXUm1JSHg4SUhSb2FYTXVabWx5YzNSR2NtRnRaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0YwYUZOMGNtbHVaMVJ5WVc1elptOXliV1ZrSUQwZ0owMHdJREFuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHRjBhSE1nUFNCcGRHVnRSR0YwWVM1emFDNXdZWFJvY3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYWt4bGJpQTlJSEJoZEdoekxsOXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHbDBaVzFFWVhSaExtVnNaVzFsYm5SelcyeGRMbXgyYkNBOElHeDJiQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiV0YwSUQwZ2RHaHBjeTV0U0dWc2NHVnlMbkpsYzJWMEtDa3NJSEJ5YjNCek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsMFpYSmhkR2x2Ym5NZ1BTQnNkbXdnTFNCcGRHVnRSR0YwWVM1bGJHVnRaVzUwYzF0c1hTNXNkbXc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdheUE5SUdsMFpXMUVZWFJoTG5SeVlXNXpabTl5YldWeWN5NXNaVzVuZEdndE1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bEtHbDBaWEpoZEdsdmJuTWdQaUF3S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21Wa2NtRjNJRDBnYVhSbGJVUmhkR0V1ZEhKaGJuTm1iM0p0WlhKelcydGRMbTFRY205d2N5NXRaR1lnZkh3Z2NtVmtjbUYzTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCeklEMGdhWFJsYlVSaGRHRXVkSEpoYm5ObWIzSnRaWEp6VzJ0ZExtMVFjbTl3Y3k1MkxuQnliM0J6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoZEM1MGNtRnVjMlp2Y20wb2NISnZjSE5iTUYwc2NISnZjSE5iTVYwc2NISnZjSE5iTWwwc2NISnZjSE5iTTEwc2NISnZjSE5iTkYwc2NISnZjSE5iTlYwc2NISnZjSE5iTmwwc2NISnZjSE5iTjEwc2NISnZjSE5iT0Ywc2NISnZjSE5iT1Ywc2NISnZjSE5iTVRCZExIQnliM0J6V3pFeFhTeHdjbTl3YzFzeE1sMHNjSEp2Y0hOYk1UTmRMSEJ5YjNCeld6RTBYU3h3Y205d2Mxc3hOVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2wwWlhKaGRHbHZibk1nTFMwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYXlBdExUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtISmxaSEpoZHlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2hPYjJSbGN5QTlJSEJoZEdoekxuTm9ZWEJsYzF0cVhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvY0dGMGFFNXZaR1Z6SUNZbUlIQmhkR2hPYjJSbGN5NWZiR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaFRkSEpwYm1kVWNtRnVjMlp2Y20xbFpDQXJQU0IwYUdsekxtSjFhV3hrVTJoaGNHVlRkSEpwYm1jb2NHRjBhRTV2WkdWekxDQndZWFJvVG05a1pYTXVYMnhsYm1kMGFDd2djR0YwYUU1dlpHVnpMbU1zSUcxaGRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiVVJoZEdFdVkyRmphR1Z6VzJ4ZElEMGdjR0YwYUZOMGNtbHVaMVJ5WVc1elptOXliV1ZrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb1UzUnlhVzVuVkhKaGJuTm1iM0p0WldRZ1BTQnBkR1Z0UkdGMFlTNWpZV05vWlhOYmJGMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloeVpXUnlZWGNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locVBUQTdhanhxVEdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lYUm9UbTlrWlhNZ1BTQndZWFJvY3k1emFHRndaWE5iYWwwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEJoZEdoT2IyUmxjeUFtSmlCd1lYUm9UbTlrWlhNdVgyeGxibWQwYUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb1UzUnlhVzVuVkhKaGJuTm1iM0p0WldRZ0t6MGdkR2hwY3k1aWRXbHNaRk5vWVhCbFUzUnlhVzVuS0hCaGRHaE9iMlJsY3l3Z2NHRjBhRTV2WkdWekxsOXNaVzVuZEdnc0lIQmhkR2hPYjJSbGN5NWpMQ0IwYUdsekxtbGtaVzUwYVhSNVRXRjBjbWw0S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdFJHRjBZUzVqWVdOb1pYTmJiRjBnUFNCd1lYUm9VM1J5YVc1blZISmhibk5tYjNKdFpXUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2hUZEhKcGJtZFVjbUZ1YzJadmNtMWxaQ0E5SUdsMFpXMUVZWFJoTG1OaFkyaGxjMXRzWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRSR0YwWVM1bGJHVnRaVzUwYzF0c1hTNWtJQ3M5SUhCaGRHaFRkSEpwYm1kVWNtRnVjMlp2Y20xbFpEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiVVJoZEdFdVpXeGxiV1Z1ZEhOYmJGMHViV1JtSUQwZ2NtVmtjbUYzSUh4OElHbDBaVzFFWVhSaExtVnNaVzFsYm5SelcyeGRMbTFrWmp0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRSR0YwWVM1bGJHVnRaVzUwYzF0c1hTNXRaR1lnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxibVJsY2tacGJHd2dQU0JtZFc1amRHbHZiaWh6ZEhsc1pVUmhkR0VzYVhSbGJVUmhkR0VwZTF4eVhHNGdJQ0FnZG1GeUlITjBlV3hsUld4bGJTQTlJR2wwWlcxRVlYUmhMbk4wZVd4bE8xeHlYRzVjY2x4dUlDQWdJR2xtS0dsMFpXMUVZWFJoTG1NdWJXUm1JSHg4SUhSb2FYTXVabWx5YzNSR2NtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2MzUjViR1ZGYkdWdExuQkZiR1Z0TG5ObGRFRjBkSEpwWW5WMFpTZ25abWxzYkNjc0ozSm5ZaWduSzJKdFgyWnNiMjl5S0dsMFpXMUVZWFJoTG1NdWRsc3dYU2tySnl3bksySnRYMlpzYjI5eUtHbDBaVzFFWVhSaExtTXVkbHN4WFNrckp5d25LMkp0WDJac2IyOXlLR2wwWlcxRVlYUmhMbU11ZGxzeVhTa3JKeWtuS1R0Y2NseHVJQ0FnSUNBZ0lDQXZMeTh2YzNSNWJHVkZiR1Z0TG5CRmJHVnRMbk4wZVd4bExtWnBiR3dnUFNBbmNtZGlLQ2NyWW0xZlpteHZiM0lvYVhSbGJVUmhkR0V1WXk1Mld6QmRLU3NuTENjclltMWZabXh2YjNJb2FYUmxiVVJoZEdFdVl5NTJXekZkS1NzbkxDY3JZbTFmWm14dmIzSW9hWFJsYlVSaGRHRXVZeTUyV3pKZEtTc25LU2M3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmlocGRHVnRSR0YwWVM1dkxtMWtaaUI4ZkNCMGFHbHpMbVpwY25OMFJuSmhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lITjBlV3hsUld4bGJTNXdSV3hsYlM1elpYUkJkSFJ5YVdKMWRHVW9KMlpwYkd3dGIzQmhZMmwwZVNjc2FYUmxiVVJoZEdFdWJ5NTJLVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JrbFRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5KbGJtUmxja2R5WVdScFpXNTBJRDBnWm5WdVkzUnBiMjRvYzNSNWJHVkVZWFJoTEdsMFpXMUVZWFJoS1h0Y2NseHVJQ0FnSUhaaGNpQm5abWxzYkNBOUlHbDBaVzFFWVhSaExtZG1PMXh5WEc0Z0lDQWdkbUZ5SUc5d1JtbHNiQ0E5SUdsMFpXMUVZWFJoTG05bU8xeHlYRzRnSUNBZ2RtRnlJSEIwTVNBOUlHbDBaVzFFWVhSaExuTXVkaXh3ZERJZ1BTQnBkR1Z0UkdGMFlTNWxMblk3WEhKY2JseHlYRzRnSUNBZ2FXWW9hWFJsYlVSaGRHRXVieTV0WkdZZ2ZId2dkR2hwY3k1bWFYSnpkRVp5WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1lYUjBjaUE5SUhOMGVXeGxSR0YwWVM1MGVTQTlQVDBnSjJkbUp5QS9JQ2RtYVd4c0xXOXdZV05wZEhrbk9pZHpkSEp2YTJVdGIzQmhZMmwwZVNjN1hISmNiaUFnSUNBZ0lDQWdhWFJsYlVSaGRHRXVaV3hsYlM1elpYUkJkSFJ5YVdKMWRHVW9ZWFIwY2l4cGRHVnRSR0YwWVM1dkxuWXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMeTlqYkdsd2NHVmtSV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjNSeVlXNXpabTl5YlNjc0oyMWhkSEpwZUNneExEQXNNQ3d4TEMweE1EQXNNQ2tuS1R0Y2NseHVJQ0FnSUdsbUtHbDBaVzFFWVhSaExuTXViV1JtSUh4OElIUm9hWE11Wm1seWMzUkdjbUZ0WlNsN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGMGRISXhJRDBnYzNSNWJHVkVZWFJoTG5RZ1BUMDlJREVnUHlBbmVERW5PaWRqZUNjN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGMGRISXlJRDBnWVhSMGNqRWdQVDA5SUNkNE1TY2dQeUFuZVRFbk9pZGplU2M3WEhKY2JpQWdJQ0FnSUNBZ1oyWnBiR3d1YzJWMFFYUjBjbWxpZFhSbEtHRjBkSEl4TEhCME1Wc3dYU2s3WEhKY2JpQWdJQ0FnSUNBZ1oyWnBiR3d1YzJWMFFYUjBjbWxpZFhSbEtHRjBkSEl5TEhCME1Wc3hYU2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9iM0JHYVd4c0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2IzQkdhV3hzTG5ObGRFRjBkSEpwWW5WMFpTaGhkSFJ5TVN4d2RERmJNRjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2Y0VacGJHd3VjMlYwUVhSMGNtbGlkWFJsS0dGMGRISXlMSEIwTVZzeFhTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlITjBiM0J6TENCcExDQnNaVzRzSUhOMGIzQTdYSEpjYmlBZ0lDQnBaaWhwZEdWdFJHRjBZUzVuTG1OdFpHWWdmSHdnZEdocGN5NW1hWEp6ZEVaeVlXMWxLWHRjY2x4dUlDQWdJQ0FnSUNCemRHOXdjeUE5SUdsMFpXMUVZWFJoTG1OemREdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kxWmhiSFZsY3lBOUlHbDBaVzFFWVhSaExtY3VZenRjY2x4dUlDQWdJQ0FnSUNCc1pXNGdQU0J6ZEc5d2N5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjM1J2Y0NBOUlITjBiM0J6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCemRHOXdMbk5sZEVGMGRISnBZblYwWlNnbmIyWm1jMlYwSnl4alZtRnNkV1Z6VzJrcU5GMHJKeVVuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSdmNDNXpaWFJCZEhSeWFXSjFkR1VvSjNOMGIzQXRZMjlzYjNJbkxDZHlaMklvSnl0alZtRnNkV1Z6VzJrcU5Dc3hYU3NuTENjclkxWmhiSFZsYzF0cEtqUXJNbDBySnl3bksyTldZV3gxWlhOYmFTbzBLek5kS3ljcEp5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2IzQkdhV3hzSUNZbUlDaHBkR1Z0UkdGMFlTNW5MbTl0WkdZZ2ZId2dkR2hwY3k1bWFYSnpkRVp5WVcxbEtTbDdYSEpjYmlBZ0lDQWdJQ0FnYzNSdmNITWdQU0JwZEdWdFJHRjBZUzV2YzNRN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUc5V1lXeDFaWE1nUFNCcGRHVnRSR0YwWVM1bkxtODdYSEpjYmlBZ0lDQWdJQ0FnYkdWdUlEMGdjM1J2Y0hNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITjBiM0FnUFNCemRHOXdjMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSdmNDNXpaWFJCZEhSeWFXSjFkR1VvSjI5bVpuTmxkQ2NzYjFaaGJIVmxjMXRwS2pKZEt5Y2xKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSE4wYjNBdWMyVjBRWFIwY21saWRYUmxLQ2R6ZEc5d0xXOXdZV05wZEhrbkxHOVdZV3gxWlhOYmFTb3lLekZkS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWh6ZEhsc1pVUmhkR0V1ZENBOVBUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9hWFJsYlVSaGRHRXVaUzV0WkdZZ0lIeDhJSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHZG1hV3hzTG5ObGRFRjBkSEpwWW5WMFpTZ25lREluTEhCME1sc3dYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2RtYVd4c0xuTmxkRUYwZEhKcFluVjBaU2duZVRJbkxIQjBNbHN4WFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHOXdSbWxzYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZjRVpwYkd3dWMyVjBRWFIwY21saWRYUmxLQ2Q0TWljc2NIUXlXekJkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdSbWxzYkM1elpYUkJkSFJ5YVdKMWRHVW9KM2t5Snl4d2RESmJNVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnY21Ga08xeHlYRzRnSUNBZ0lDQWdJR2xtS0dsMFpXMUVZWFJoTG5NdWJXUm1JSHg4SUdsMFpXMUVZWFJoTG1VdWJXUm1JSHg4SUhSb2FYTXVabWx5YzNSR2NtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpoWkNBOUlFMWhkR2d1YzNGeWRDaE5ZWFJvTG5CdmR5aHdkREZiTUYwdGNIUXlXekJkTERJcEswMWhkR2d1Y0c5M0tIQjBNVnN4WFMxd2RESmJNVjBzTWlrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblptbHNiQzV6WlhSQmRIUnlhV0oxZEdVb0ozSW5MSEpoWkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHOXdSbWxzYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZjRVpwYkd3dWMyVjBRWFIwY21saWRYUmxLQ2R5Snl4eVlXUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LR2wwWlcxRVlYUmhMbVV1YldSbUlIeDhJR2wwWlcxRVlYUmhMbWd1YldSbUlIeDhJR2wwWlcxRVlYUmhMbUV1YldSbUlIeDhJSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0Z5WVdRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbUZrSUQwZ1RXRjBhQzV6Y1hKMEtFMWhkR2d1Y0c5M0tIQjBNVnN3WFMxd2RESmJNRjBzTWlrclRXRjBhQzV3YjNjb2NIUXhXekZkTFhCME1sc3hYU3d5S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHRnVaeUE5SUUxaGRHZ3VZWFJoYmpJb2NIUXlXekZkTFhCME1Wc3hYU3dnY0hReVd6QmRMWEIwTVZzd1hTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHVnlZMlZ1ZENBOUlHbDBaVzFFWVhSaExtZ3VkaUErUFNBeElEOGdNQzQ1T1NBNklHbDBaVzFFWVhSaExtZ3VkaUE4UFNBdE1TQS9JQzB3TGprNU9tbDBaVzFFWVhSaExtZ3VkanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdScGMzUWdQU0J5WVdRcWNHVnlZMlZ1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIZ2dQU0JOWVhSb0xtTnZjeWhoYm1jZ0t5QnBkR1Z0UkdGMFlTNWhMbllwS21ScGMzUWdLeUJ3ZERGYk1GMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUI1SUQwZ1RXRjBhQzV6YVc0b1lXNW5JQ3NnYVhSbGJVUmhkR0V1WVM1MktTcGthWE4wSUNzZ2NIUXhXekZkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuWm1sc2JDNXpaWFJCZEhSeWFXSjFkR1VvSjJaNEp5eDRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaMlpwYkd3dWMyVjBRWFIwY21saWRYUmxLQ2RtZVNjc2VTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzl3Um1sc2JDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y0VacGJHd3VjMlYwUVhSMGNtbGlkWFJsS0NkbWVDY3NlQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNFWnBiR3d1YzJWMFFYUjBjbWxpZFhSbEtDZG1lU2NzZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnTHk5blptbHNiQzV6WlhSQmRIUnlhV0oxZEdVb0oyWjVKeXduTWpBd0p5azdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1SlUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSlRkSEp2YTJVZ1BTQm1kVzVqZEdsdmJpaHpkSGxzWlVSaGRHRXNhWFJsYlVSaGRHRXBlMXh5WEc0Z0lDQWdkbUZ5SUhOMGVXeGxSV3hsYlNBOUlHbDBaVzFFWVhSaExuTjBlV3hsTzF4eVhHNGdJQ0FnTHk5VVQwUlBJR1pwZUNCa1lYTm9aWE5jY2x4dUlDQWdJSFpoY2lCa0lEMGdhWFJsYlVSaGRHRXVaRHRjY2x4dUlDQWdJSFpoY2lCa1lYTm9ZWEp5WVhrc1pHRnphRzltWm5ObGREdGNjbHh1SUNBZ0lHbG1LR1FnSmlZZ1pDNXJJQ1ltSUNoa0xtMWtaaUI4ZkNCMGFHbHpMbVpwY25OMFJuSmhiV1VwS1h0Y2NseHVJQ0FnSUNBZ0lDQnpkSGxzWlVWc1pXMHVjRVZzWlcwdWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVXRaR0Z6YUdGeWNtRjVKeXdnWkM1a1lYTm9ZWEp5WVhrcE8xeHlYRzRnSUNBZ0lDQWdJQzh2THk5emRIbHNaVVZzWlcwdWNFVnNaVzB1YzNSNWJHVXVjM1J5YjJ0bFJHRnphR0Z5Y21GNUlEMGdaQzVrWVhOb1lYSnlZWGs3WEhKY2JpQWdJQ0FnSUNBZ2MzUjViR1ZGYkdWdExuQkZiR1Z0TG5ObGRFRjBkSEpwWW5WMFpTZ25jM1J5YjJ0bExXUmhjMmh2Wm1aelpYUW5MQ0JrTG1SaGMyaHZabVp6WlhRcE8xeHlYRzRnSUNBZ0lDQWdJQzh2THk5emRIbHNaVVZzWlcwdWNFVnNaVzB1YzNSNWJHVXVjM1J5YjJ0bFJHRnphRzltWm5ObGRDQTlJR1F1WkdGemFHOW1abk5sZER0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtHbDBaVzFFWVhSaExtTWdKaVlnS0dsMFpXMUVZWFJoTG1NdWJXUm1JSHg4SUhSb2FYTXVabWx5YzNSR2NtRnRaU2twZTF4eVhHNGdJQ0FnSUNBZ0lITjBlV3hsUld4bGJTNXdSV3hsYlM1elpYUkJkSFJ5YVdKMWRHVW9KM04wY205clpTY3NKM0puWWlnbksySnRYMlpzYjI5eUtHbDBaVzFFWVhSaExtTXVkbHN3WFNrckp5d25LMkp0WDJac2IyOXlLR2wwWlcxRVlYUmhMbU11ZGxzeFhTa3JKeXduSzJKdFgyWnNiMjl5S0dsMFpXMUVZWFJoTG1NdWRsc3lYU2tySnlrbktUdGNjbHh1SUNBZ0lDQWdJQ0F2THk4dmMzUjViR1ZGYkdWdExuQkZiR1Z0TG5OMGVXeGxMbk4wY205clpTQTlJQ2R5WjJJb0p5dGliVjltYkc5dmNpaHBkR1Z0UkdGMFlTNWpMblpiTUYwcEt5Y3NKeXRpYlY5bWJHOXZjaWhwZEdWdFJHRjBZUzVqTG5aYk1WMHBLeWNzSnl0aWJWOW1iRzl2Y2locGRHVnRSR0YwWVM1akxuWmJNbDBwS3ljcEp6dGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LR2wwWlcxRVlYUmhMbTh1YldSbUlIeDhJSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnYzNSNWJHVkZiR1Z0TG5CRmJHVnRMbk5sZEVGMGRISnBZblYwWlNnbmMzUnliMnRsTFc5d1lXTnBkSGtuTEdsMFpXMUVZWFJoTG04dWRpazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWhwZEdWdFJHRjBZUzUzTG0xa1ppQjhmQ0IwYUdsekxtWnBjbk4wUm5KaGJXVXBlMXh5WEc0Z0lDQWdJQ0FnSUhOMGVXeGxSV3hsYlM1d1JXeGxiUzV6WlhSQmRIUnlhV0oxZEdVb0ozTjBjbTlyWlMxM2FXUjBhQ2NzYVhSbGJVUmhkR0V1ZHk1MktUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloemRIbHNaVVZzWlcwdWJYTkZiR1Z0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSNWJHVkZiR1Z0TG0xelJXeGxiUzV6WlhSQmRIUnlhV0oxZEdVb0ozTjBjbTlyWlMxM2FXUjBhQ2NzYVhSbGJVUmhkR0V1ZHk1MktUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0x5OHZMM04wZVd4bFJXeGxiUzV3Uld4bGJTNXpkSGxzWlM1emRISnZhMlZYYVdSMGFDQTlJR2wwWlcxRVlYUmhMbmN1ZGp0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia2xUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtUmxjM1J5YjNrZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkR2hwY3k1ZmNHRnlaVzUwTG1SbGMzUnliM2t1WTJGc2JDaDBhR2x6TGw5d1lYSmxiblFwTzF4eVhHNGdJQ0FnZEdocGN5NXphR0Z3WlVSaGRHRWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVwZEdWdGMwUmhkR0VnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1d1lYSmxiblJEYjI1MFlXbHVaWElnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1d2JHRmpaV2h2YkdSbGNpQTlJRzUxYkd3N1hISmNibjA3WEhKY2JseHVablZ1WTNScGIyNGdTVlJsZUhSRmJHVnRaVzUwS0dSaGRHRXNJR0Z1YVcxaGRHbHZia2wwWlcwc2NHRnlaVzUwUTI5dWRHRnBibVZ5TEdkc2IySmhiRVJoZEdFcGUxeHlYRzU5WEhKY2JrbFVaWGgwUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1YVc1cGRDQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxteGxkSFJsY25ORGFHRnVaMlZrUm14aFp5QTlJSFJ5ZFdVN1hISmNiaUFnSUNCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpJRDBnZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5QjhmQ0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVkR1Y0ZEVGdWFXMWhkRzl5SUQwZ2JtVjNJRlJsZUhSQmJtbHRZWFJ2Y2xCeWIzQmxjblI1S0hSb2FYTXVaR0YwWVM1MExDQjBhR2x6TG5KbGJtUmxjbFI1Y0dVc0lIUm9hWE1wTzF4eVhHNGdJQ0FnZEdocGN5NTBaWGgwVUhKdmNHVnlkSGtnUFNCdVpYY2dWR1Y0ZEZCeWIzQmxjblI1S0hSb2FYTXNJSFJvYVhNdVpHRjBZUzUwTENCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1cGJtbDBMbU5oYkd3b2RHaHBjeWs3WEhKY2JpQWdJQ0IwYUdsekxuUmxlSFJCYm1sdFlYUnZjaTV6WldGeVkyaFFjbTl3WlhKMGFXVnpLSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzU5TzF4eVhHNWNjbHh1U1ZSbGVIUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXdjbVZ3WVhKbFJuSmhiV1VnUFNCbWRXNWpkR2x2YmlodWRXMHBJSHRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1d2NtVndZWEpsUm5KaGJXVXVZMkZzYkNoMGFHbHpMQ0J1ZFcwcE8xeHlYRzRnSUNBZ2FXWW9kR2hwY3k1MFpYaDBVSEp2Y0dWeWRIa3ViV1JtSUh4OElIUm9hWE11ZEdWNGRGQnliM0JsY25SNUxtWnBjbk4wUm5KaGJXVXBJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUoxYVd4a1RtVjNWR1Y0ZENncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRHVjRkRkJ5YjNCbGNuUjVMbVpwY25OMFJuSmhiV1VnUFNCbVlXeHpaVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVNWUmxlSFJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVqY21WaGRHVlFZWFJvVTJoaGNHVWdQU0JtZFc1amRHbHZiaWh0WVhSeWFYaElaV3h3WlhJc0lITm9ZWEJsY3lrZ2UxeHlYRzRnSUNBZ2RtRnlJR29zYWt4bGJpQTlJSE5vWVhCbGN5NXNaVzVuZEdnN1hISmNiaUFnSUNCMllYSWdheXdnYTB4bGJpd2djR0YwYUU1dlpHVnpPMXh5WEc0Z0lDQWdkbUZ5SUhOb1lYQmxVM1J5SUQwZ0p5YzdYSEpjYmlBZ0lDQm1iM0lvYWowd08ybzhha3hsYmp0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNCd1lYUm9UbTlrWlhNZ1BTQnphR0Z3WlhOYmFsMHVhM011YXp0Y2NseHVJQ0FnSUNBZ0lDQnphR0Z3WlZOMGNpQXJQU0IwYUdsekxtSjFhV3hrVTJoaGNHVlRkSEpwYm1jb2NHRjBhRTV2WkdWekxDQndZWFJvVG05a1pYTXVhUzVzWlc1bmRHZ3NJSFJ5ZFdVc0lHMWhkSEpwZUVobGJIQmxjaWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdjMmhoY0dWVGRISTdYSEpjYm4wN1hISmNibHh5WEc1SlZHVjRkRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMblZ3WkdGMFpVUnZZM1Z0Wlc1MFJHRjBZU0E5SUdaMWJtTjBhVzl1S0c1bGQwUmhkR0VzSUdsdVpHVjRLU0I3WEhKY2JpQWdJQ0IwYUdsekxuUmxlSFJRY205d1pYSjBlUzUxY0dSaGRHVkViMk4xYldWdWRFUmhkR0VvYm1WM1JHRjBZU3dnYVc1a1pYZ3BPMXh5WEc1OVhISmNibHh5WEc1SlZHVjRkRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUZ3Y0d4NVZHVjRkRkJ5YjNCbGNuUnBaWE5VYjAxaGRISnBlQ0E5SUdaMWJtTjBhVzl1S0dSdlkzVnRaVzUwUkdGMFlTd2diV0YwY21sNFNHVnNjR1Z5TENCc2FXNWxUblZ0WW1WeUxDQjRVRzl6TENCNVVHOXpLU0I3WEhKY2JpQWdJQ0JwWmloa2IyTjFiV1Z1ZEVSaGRHRXVjSE1wZTF4eVhHNGdJQ0FnSUNBZ0lHMWhkSEpwZUVobGJIQmxjaTUwY21GdWMyeGhkR1VvWkc5amRXMWxiblJFWVhSaExuQnpXekJkTEdSdlkzVnRaVzUwUkdGMFlTNXdjMXN4WFNBcklHUnZZM1Z0Wlc1MFJHRjBZUzVoYzJObGJuUXNNQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J0WVhSeWFYaElaV3h3WlhJdWRISmhibk5zWVhSbEtEQXNMV1J2WTNWdFpXNTBSR0YwWVM1c2N5d3dLVHRjY2x4dUlDQWdJSE4zYVhSamFDaGtiMk4xYldWdWRFUmhkR0V1YWlsN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNBeE9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVkSEpoYm5Oc1lYUmxLR1J2WTNWdFpXNTBSR0YwWVM1cWRYTjBhV1o1VDJabWMyVjBJQ3NnS0dSdlkzVnRaVzUwUkdGMFlTNWliM2hYYVdSMGFDQXRJR1J2WTNWdFpXNTBSR0YwWVM1c2FXNWxWMmxrZEdoelcyeHBibVZPZFcxaVpYSmRLU3d3TERBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNCallYTmxJREk2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZEhKcGVFaGxiSEJsY2k1MGNtRnVjMnhoZEdVb1pHOWpkVzFsYm5SRVlYUmhMbXAxYzNScFpubFBabVp6WlhRZ0t5QW9aRzlqZFcxbGJuUkVZWFJoTG1KdmVGZHBaSFJvSUMwZ1pHOWpkVzFsYm5SRVlYUmhMbXhwYm1WWGFXUjBhSE5iYkdsdVpVNTFiV0psY2wwZ0tTOHlMREFzTUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdiV0YwY21sNFNHVnNjR1Z5TG5SeVlXNXpiR0YwWlNoNFVHOXpMQ0I1VUc5ekxDQXdLVHRjY2x4dWZWeHlYRzVjY2x4dVNWUmxlSFJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVpZFdsc1pFTnZiRzl5SUQwZ1puVnVZM1JwYjI0b1kyOXNiM0pFWVhSaEtTQjdYSEpjYmlBZ0lDQnlaWFIxY200Z0ozSm5ZaWduSUNzZ1RXRjBhQzV5YjNWdVpDaGpiMnh2Y2tSaGRHRmJNRjBxTWpVMUtTQXJJQ2NzSnlBcklFMWhkR2d1Y205MWJtUW9ZMjlzYjNKRVlYUmhXekZkS2pJMU5Ta2dLeUFuTENjZ0t5Qk5ZWFJvTG5KdmRXNWtLR052Ykc5eVJHRjBZVnN5WFNveU5UVXBJQ3NnSnlrbk8xeHlYRzU5WEhKY2JseHlYRzVKVkdWNGRFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtSjFhV3hrVTJoaGNHVlRkSEpwYm1jZ1BTQkpVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1aWRXbHNaRk5vWVhCbFUzUnlhVzVuTzF4eVhHNWNjbHh1U1ZSbGVIUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWxiWEIwZVZCeWIzQWdQU0J1WlhjZ1RHVjBkR1Z5VUhKdmNITW9LVHRjY2x4dVhISmNia2xVWlhoMFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVpHVnpkSEp2ZVNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjBhR2x6TGw5d1lYSmxiblF1WkdWemRISnZlUzVqWVd4c0tIUm9hWE11WDNCaGNtVnVkQ2s3WEhKY2JuMDdYRzVtZFc1amRHbHZiaUJUVmtkVVpYaDBSV3hsYldWdWRDaGtZWFJoTEhCaGNtVnVkRU52Ym5SaGFXNWxjaXhuYkc5aVlXeEVZWFJoTEdOdmJYQXNJSEJzWVdObGFHOXNaR1Z5S1h0Y2NseHVJQ0FnSUhSb2FYTXVkR1Y0ZEZOd1lXNXpJRDBnVzEwN1hISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNsUjVjR1VnUFNBbmMzWm5KenRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1amIyNXpkSEoxWTNSdmNpNWpZV3hzS0hSb2FYTXNaR0YwWVN4d1lYSmxiblJEYjI1MFlXbHVaWElzWjJ4dlltRnNSR0YwWVN4amIyMXdMQ0J3YkdGalpXaHZiR1JsY2lrN1hISmNibjFjY2x4dVkzSmxZWFJsUld4bGJXVnVkQ2hUVmtkQ1lYTmxSV3hsYldWdWRDd2dVMVpIVkdWNGRFVnNaVzFsYm5RcE8xeHlYRzVjY2x4dVpYaDBaVzVrVUhKdmRHOTBlWEJsS0VsVVpYaDBSV3hsYldWdWRDd2dVMVpIVkdWNGRFVnNaVzFsYm5RcE8xeHlYRzVjY2x4dVUxWkhWR1Y0ZEVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVVZzWlcxbGJuUnpJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVYSEpjYmlBZ0lDQjBhR2x6TGw5d1lYSmxiblF1WTNKbFlYUmxSV3hsYldWdWRITXVZMkZzYkNoMGFHbHpLVHRjY2x4dVhISmNibHh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG14dUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb0oybGtKeXgwYUdsekxtUmhkR0V1Ykc0cE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMbU5zS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJOc1lYTnpKeXgwYUdsekxtUmhkR0V1WTJ3cE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWWdLSFJvYVhNdVpHRjBZUzV6YVc1bmJHVlRhR0Z3WlNBbUppQWhkR2hwY3k1bmJHOWlZV3hFWVhSaExtWnZiblJOWVc1aFoyVnlMbU5vWVhKektTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwUTI5dWRHRnBibVZ5SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2QwWlhoMEp5azdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1VFZrZFVaWGgwUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WW5WcGJHUk9aWGRVWlhoMElEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzQ3WEhKY2JseHlYRzRnSUNBZ2RtRnlJR1J2WTNWdFpXNTBSR0YwWVNBOUlIUm9hWE11ZEdWNGRGQnliM0JsY25SNUxtTjFjbkpsYm5SRVlYUmhPMXh5WEc0Z0lDQWdkR2hwY3k1eVpXNWtaWEpsWkV4bGRIUmxjbk1nUFNCQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2Wkc5amRXMWxiblJFWVhSaElEOGdaRzlqZFcxbGJuUkVZWFJoTG13dWJHVnVaM1JvSURvZ01IMHBPMXh5WEc0Z0lDQWdhV1lvWkc5amRXMWxiblJFWVhSaExtWmpLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RtYVd4c0p5d2dkR2hwY3k1aWRXbHNaRU52Ykc5eUtHUnZZM1Z0Wlc1MFJHRjBZUzVtWXlrcE8xeHlYRzRnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RtYVd4c0p5d2dKM0puWW1Fb01Dd3dMREFzTUNrbktUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LR1J2WTNWdFpXNTBSR0YwWVM1ell5bDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSEp2YTJVbkxDQjBhR2x6TG1KMWFXeGtRMjlzYjNJb1pHOWpkVzFsYm5SRVlYUmhMbk5qS1NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlV0ZDJsa2RHZ25MQ0JrYjJOMWJXVnVkRVJoZEdFdWMzY3BPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkbWIyNTBMWE5wZW1VbkxDQmtiMk4xYldWdWRFUmhkR0V1Y3lrN1hISmNiaUFnSUNCMllYSWdabTl1ZEVSaGRHRWdQU0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWEl1WjJWMFJtOXVkRUo1VG1GdFpTaGtiMk4xYldWdWRFUmhkR0V1WmlrN1hISmNiaUFnSUNCcFppaG1iMjUwUkdGMFlTNW1RMnhoYzNNcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnblkyeGhjM01uTEdadmJuUkVZWFJoTG1aRGJHRnpjeWs3WEhKY2JpQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25abTl1ZEMxbVlXMXBiSGtuTENCbWIyNTBSR0YwWVM1bVJtRnRhV3g1S1R0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWmxkbGFXZG9kQ0E5SUdSdlkzVnRaVzUwUkdGMFlTNW1WMlZwWjJoMExDQm1VM1I1YkdVZ1BTQmtiMk4xYldWdWRFUmhkR0V1WmxOMGVXeGxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25abTl1ZEMxemRIbHNaU2NzSUdaVGRIbHNaU2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RtYjI1MExYZGxhV2RvZENjc0lHWlhaV2xuYUhRcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSFpoY2lCc1pYUjBaWEp6SUQwZ1pHOWpkVzFsYm5SRVlYUmhMbXdnZkh3Z1cxMDdYSEpjYmlBZ0lDQjJZWElnZFhObGMwZHNlWEJvY3lBOUlIUm9hWE11WjJ4dlltRnNSR0YwWVM1bWIyNTBUV0Z1WVdkbGNpNWphR0Z5Y3p0Y2NseHVJQ0FnSUd4bGJpQTlJR3hsZEhSbGNuTXViR1Z1WjNSb08xeHlYRzRnSUNBZ2FXWW9JV3hsYmlsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RtRnlJSFJUY0dGdU8xeHlYRzRnSUNBZ2RtRnlJRzFoZEhKcGVFaGxiSEJsY2lBOUlIUm9hWE11YlVobGJIQmxjanRjY2x4dUlDQWdJSFpoY2lCemFHRndaWE1zSUhOb1lYQmxVM1J5SUQwZ0p5Y3NJSE5wYm1kc1pWTm9ZWEJsSUQwZ2RHaHBjeTVrWVhSaExuTnBibWRzWlZOb1lYQmxPMXh5WEc0Z0lDQWdkbUZ5SUhoUWIzTWdQU0F3TENCNVVHOXpJRDBnTUN3Z1ptbHljM1JNYVc1bElEMGdkSEoxWlR0Y2NseHVJQ0FnSUhaaGNpQjBjbUZqYTJsdVowOW1abk5sZENBOUlHUnZZM1Z0Wlc1MFJHRjBZUzUwY2k4eE1EQXdLbVJ2WTNWdFpXNTBSR0YwWVM1ek8xeHlYRzRnSUNBZ2FXWW9jMmx1WjJ4bFUyaGhjR1VnSmlZZ0lYVnpaWE5IYkhsd2FITXBJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdkRVZzWlcxbGJuUWdQU0IwYUdsekxuUmxlSFJEYjI1MFlXbHVaWEk3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR3AxYzNScFpua2dQU0FuSnp0Y2NseHVJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pHOWpkVzFsYm5SRVlYUmhMbW9wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXhPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW5WemRHbG1lU0E5SUNkbGJtUW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTWpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHcDFjM1JwWm5rZ1BTQW5iV2xrWkd4bEp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREk2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcWRYTjBhV1o1SUQwZ0ozTjBZWEowSnp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IwUld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb0ozUmxlSFF0WVc1amFHOXlKeXhxZFhOMGFXWjVLVHRjY2x4dUlDQWdJQ0FnSUNCMFJXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMnhsZEhSbGNpMXpjR0ZqYVc1bkp5eDBjbUZqYTJsdVowOW1abk5sZENrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhSbGVIUkRiMjUwWlc1MElEMGdaRzlqZFcxbGJuUkVZWFJoTG5RdWMzQnNhWFFvVTNSeWFXNW5MbVp5YjIxRGFHRnlRMjlrWlNneE15a3BPMXh5WEc0Z0lDQWdJQ0FnSUd4bGJpQTlJSFJsZUhSRGIyNTBaVzUwTG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdlVkJ2Y3lBOUlHUnZZM1Z0Wlc1MFJHRjBZUzV3Y3lBL0lHUnZZM1Z0Wlc1MFJHRjBZUzV3YzFzeFhTQXJJR1J2WTNWdFpXNTBSR0YwWVM1aGMyTmxiblFnT2lBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2lBb0lHa2dQU0F3T3lCcElEd2diR1Z1T3lCcElDczlJREVwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEZOd1lXNGdQU0IwYUdsekxuUmxlSFJUY0dGdWMxdHBYU0I4ZkNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBUbE1vYzNablRsTXNKM1J6Y0dGdUp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUlRjR0Z1TG5SbGVIUkRiMjUwWlc1MElEMGdkR1Y0ZEVOdmJuUmxiblJiYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSVGNHRnVMbk5sZEVGMGRISnBZblYwWlNnbmVDY3NJREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwVTNCaGJpNXpaWFJCZEhSeWFXSjFkR1VvSjNrbkxDQjVVRzl6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEZOd1lXNHVjM1I1YkdVdVpHbHpjR3hoZVNBOUlDZHBibWhsY21sMEp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RFVnNaVzFsYm5RdVlYQndaVzVrUTJocGJHUW9kRk53WVc0cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblJsZUhSVGNHRnVjMXRwWFNBOUlIUlRjR0Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I1VUc5eklDczlJR1J2WTNWdFpXNTBSR0YwWVM1c2FEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVZWEJ3Wlc1a1EyaHBiR1FvZEVWc1pXMWxiblFwTzF4eVhHNGdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZMkZqYUdWa1UzQmhibk5NWlc1bmRHZ2dQU0IwYUdsekxuUmxlSFJUY0dGdWN5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhOb1lYQmxSR0YwWVN3Z1kyaGhja1JoZEdFN1hISmNiaUFnSUNBZ0lDQWdabTl5SUNocElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGMWMyVnpSMng1Y0doeklIeDhJQ0Z6YVc1bmJHVlRhR0Z3WlNCOGZDQnBJRDA5UFNBd0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJUY0dGdUlEMGdZMkZqYUdWa1UzQmhibk5NWlc1bmRHZ2dQaUJwSUQ4Z2RHaHBjeTUwWlhoMFUzQmhibk5iYVYwZ09pQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zZFhObGMwZHNlWEJvY3o4bmNHRjBhQ2M2SjNSbGVIUW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpZV05vWldSVGNHRnVjMHhsYm1kMGFDQThQU0JwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEZOd1lXNHVjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlV0YkdsdVpXTmhjQ2NzSUNkaWRYUjBKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRk53WVc0dWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVXRiR2x1WldwdmFXNG5MQ2R5YjNWdVpDY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUlRjR0Z1TG5ObGRFRjBkSEpwWW5WMFpTZ25jM1J5YjJ0bExXMXBkR1Z5YkdsdGFYUW5MQ2MwSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwVTNCaGJuTmJhVjBnUFNCMFUzQmhianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDNWhjSEJsYm1SRGFHbHNaQ2gwVTNCaGJpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFUzQmhiaTV6ZEhsc1pTNWthWE53YkdGNUlEMGdKMmx1YUdWeWFYUW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYUnlhWGhJWld4d1pYSXVjbVZ6WlhRb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kWE5sYzBkc2VYQm9jeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMbk5qWVd4bEtHUnZZM1Z0Wlc1MFJHRjBZUzV6SUM4Z01UQXdMQ0JrYjJOMWJXVnVkRVJoZEdFdWN5QXZJREV3TUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzJsdVoyeGxVMmhoY0dVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHNaWFIwWlhKelcybGRMbTRwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VGQnZjeUE5SUMxMGNtRmphMmx1WjA5bVpuTmxkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVZCdmN5QXJQU0JrYjJOMWJXVnVkRVJoZEdFdWVVOW1abk5sZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VWQnZjeUFyUFNCbWFYSnpkRXhwYm1VZ1B5QXhJRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptbHljM1JNYVc1bElEMGdabUZzYzJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlYQndiSGxVWlhoMFVISnZjR1Z5ZEdsbGMxUnZUV0YwY21sNEtHUnZZM1Z0Wlc1MFJHRjBZU3dnYldGMGNtbDRTR1ZzY0dWeUxDQnNaWFIwWlhKelcybGRMbXhwYm1Vc0lIaFFiM01zSUhsUWIzTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIaFFiM01nS3owZ2JHVjBkR1Z5YzF0cFhTNXNJSHg4SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk5NFVHOXpJQ3M5SUd4bGRIUmxjbk5iYVYwdWRtRnNJRDA5UFNBbklDY2dQeUF3SURvZ2RISmhZMnRwYm1kUFptWnpaWFE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlRkJ2Y3lBclBTQjBjbUZqYTJsdVowOW1abk5sZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05vWVhKRVlYUmhJRDBnZEdocGN5NW5iRzlpWVd4RVlYUmhMbVp2Ym5STllXNWhaMlZ5TG1kbGRFTm9ZWEpFWVhSaEtHUnZZM1Z0Wlc1MFJHRjBZUzUwTG1Ob1lYSkJkQ2hwS1N3Z1ptOXVkRVJoZEdFdVpsTjBlV3hsTENCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Wm05dWRFMWhibUZuWlhJdVoyVjBSbTl1ZEVKNVRtRnRaU2hrYjJOMWJXVnVkRVJoZEdFdVppa3Vaa1poYldsc2VTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pVUmhkR0VnUFNCamFHRnlSR0YwWVNBbUppQmphR0Z5UkdGMFlTNWtZWFJoSUh4OElIdDlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVnpJRDBnYzJoaGNHVkVZWFJoTG5Ob1lYQmxjeUEvSUhOb1lYQmxSR0YwWVM1emFHRndaWE5iTUYwdWFYUWdPaUJiWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0Z6YVc1bmJHVlRhR0Z3WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEZOd1lXNHVjMlYwUVhSMGNtbGlkWFJsS0Nka0p5eDBhR2x6TG1OeVpXRjBaVkJoZEdoVGFHRndaU2h0WVhSeWFYaElaV3h3WlhJc2MyaGhjR1Z6S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxVM1J5SUNzOUlIUm9hWE11WTNKbFlYUmxVR0YwYUZOb1lYQmxLRzFoZEhKcGVFaGxiSEJsY2l4emFHRndaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGTndZVzR1ZEdWNGRFTnZiblJsYm5RZ1BTQnNaWFIwWlhKelcybGRMblpoYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUlRjR0Z1TG5ObGRFRjBkSEpwWW5WMFpVNVRLRndpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2V0UxTUx6RTVPVGd2Ym1GdFpYTndZV05sWENJc0lGd2llRzFzT25Od1lXTmxYQ0lzWENKd2NtVnpaWEoyWlZ3aUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwxeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppQW9jMmx1WjJ4bFUyaGhjR1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEZOd1lXNHVjMlYwUVhSMGNtbGlkWFJsS0Nka0p5eHphR0Z3WlZOMGNpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZDJocGJHVWdLR2tnUENCMGFHbHpMblJsZUhSVGNHRnVjeTVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEZOd1lXNXpXMmxkTG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuYm05dVpTYzdYSEpjYmlBZ0lDQWdJQ0FnYVNBclBTQXhPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdYSEpjYmlBZ0lDQjBhR2x6TGw5emFYcGxRMmhoYm1kbFpDQTlJSFJ5ZFdVN1hISmNibjFjY2x4dVhISmNibE5XUjFSbGVIUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXpiM1Z5WTJWU1pXTjBRWFJVYVcxbElEMGdablZ1WTNScGIyNG9kR2x0WlNsN1hISmNiaUFnSUNCMGFHbHpMbkJ5WlhCaGNtVkdjbUZ0WlNoMGFHbHpMbU52YlhBdWNtVnVaR1Z5WldSR2NtRnRaU0F0SUhSb2FYTXVaR0YwWVM1emRDazdYSEpjYmlBZ0lDQjBhR2x6TG5KbGJtUmxja3hsZEhSbGNuTW9LVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVYM05wZW1WRGFHRnVaMlZrS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5emFYcGxRMmhoYm1kbFpDQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCMFpYaDBRbTk0SUQwZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdVoyVjBRa0p2ZUNncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVltSnZlQ0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5d09pQjBaWGgwUW05NExua3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2SUhSbGVIUkNiM2d1ZUN4Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJSFJsZUhSQ2IzZ3VkMmxrZEdnc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEdWNGRFSnZlQzVvWldsbmFIUmNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aVltOTRPMXh5WEc1OVhISmNibHh5WEc1VFZrZFVaWGgwUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WdVpHVnlUR1YwZEdWeWN5QTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JseHlYRzRnSUNBZ2FXWW9JWFJvYVhNdVpHRjBZUzV6YVc1bmJHVlRhR0Z3WlNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1MFpYaDBRVzVwYldGMGIzSXVaMlYwVFdWaGMzVnlaWE1vZEdocGN5NTBaWGgwVUhKdmNHVnlkSGt1WTNWeWNtVnVkRVJoZEdFc0lIUm9hWE11YkdWMGRHVnljME5vWVc1blpXUkdiR0ZuS1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxteGxkSFJsY25ORGFHRnVaMlZrUm14aFp5QjhmQ0IwYUdsekxuUmxlSFJCYm1sdFlYUnZjaTVzWlhSMFpYSnpRMmhoYm1kbFpFWnNZV2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXphWHBsUTJoaGJtZGxaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUFnYVN4c1pXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ5Wlc1a1pYSmxaRXhsZEhSbGNuTWdQU0IwYUdsekxuUmxlSFJCYm1sdFlYUnZjaTV5Wlc1a1pYSmxaRXhsZEhSbGNuTTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHVjBkR1Z5Y3lBOUlIUm9hWE11ZEdWNGRGQnliM0JsY25SNUxtTjFjbkpsYm5SRVlYUmhMbXc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXNGdQU0JzWlhSMFpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEpsYm1SbGNtVmtUR1YwZEdWeUxDQjBaWGgwVTNCaGJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0d4bGRIUmxjbk5iYVYwdWJpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxaRXhsZEhSbGNpQTlJSEpsYm1SbGNtVmtUR1YwZEdWeWMxdHBYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSbGVIUlRjR0Z1SUQwZ2RHaHBjeTUwWlhoMFUzQmhibk5iYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh5Wlc1a1pYSmxaRXhsZEhSbGNpNXRaR1l1YlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSbGVIUlRjR0Z1TG5ObGRFRjBkSEpwWW5WMFpTZ25kSEpoYm5ObWIzSnRKeXh5Wlc1a1pYSmxaRXhsZEhSbGNpNXRLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEpsYm1SbGNtVmtUR1YwZEdWeUxtMWtaaTV2S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRGTndZVzR1YzJWMFFYUjBjbWxpZFhSbEtDZHZjR0ZqYVhSNUp5eHlaVzVrWlhKbFpFeGxkSFJsY2k1dktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtISmxibVJsY21Wa1RHVjBkR1Z5TG0xa1ppNXpkeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEZOd1lXNHVjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlV0ZDJsa2RHZ25MSEpsYm1SbGNtVmtUR1YwZEdWeUxuTjNLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEpsYm1SbGNtVmtUR1YwZEdWeUxtMWtaaTV6WXlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRGTndZVzR1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSEp2YTJVbkxISmxibVJsY21Wa1RHVjBkR1Z5TG5OaktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtISmxibVJsY21Wa1RHVjBkR1Z5TG0xa1ppNW1ZeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEZOd1lXNHVjMlYwUVhSMGNtbGlkWFJsS0NkbWFXeHNKeXh5Wlc1a1pYSmxaRXhsZEhSbGNpNW1ZeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmxOV1IxUmxlSFJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSkdjbUZ0WlNBOUlHWjFibU4wYVc5dUtIQmhjbVZ1ZEUxaGRISnBlQ2w3WEhKY2JseHlYRzRnSUNBZ2RtRnlJSEpsYm1SbGNsQmhjbVZ1ZENBOUlIUm9hWE11WDNCaGNtVnVkQzV5Wlc1a1pYSkdjbUZ0WlM1allXeHNLSFJvYVhNc2NHRnlaVzUwVFdGMGNtbDRLVHRjY2x4dUlDQWdJR2xtS0hKbGJtUmxjbEJoY21WdWREMDlQV1poYkhObEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtaHBaR1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaDBhR2x6TG1ocFpHUmxiaWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6YUc5M0tDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQnBaaWgwYUdsekxtWnBjbk4wUm5KaGJXVXBJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVpwY25OMFJuSmhiV1VnUFNCbVlXeHpaVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWNtVnVaR1Z5VEdWMGRHVnljeWdwTzF4eVhHNTlYRzVtZFc1amRHbHZiaUJUVmtkVWFXNTBSbWxzZEdWeUtHWnBiSFJsY2l3Z1ptbHNkR1Z5VFdGdVlXZGxjaWw3WEhKY2JpQWdJQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWElnUFNCbWFXeDBaWEpOWVc1aFoyVnlPMXh5WEc0Z0lDQWdkbUZ5SUdabFEyOXNiM0pOWVhSeWFYZ2dQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyWmxRMjlzYjNKTllYUnlhWGduS1R0Y2NseHVJQ0FnSUdabFEyOXNiM0pOWVhSeWFYZ3VjMlYwUVhSMGNtbGlkWFJsS0NkMGVYQmxKeXduYldGMGNtbDRKeWs3WEhKY2JpQWdJQ0JtWlVOdmJHOXlUV0YwY21sNExuTmxkRUYwZEhKcFluVjBaU2duWTI5c2IzSXRhVzUwWlhKd2IyeGhkR2x2YmkxbWFXeDBaWEp6Snl3bmJHbHVaV0Z5VWtkQ0p5azdYSEpjYmlBZ0lDQm1aVU52Ykc5eVRXRjBjbWw0TG5ObGRFRjBkSEpwWW5WMFpTZ25kbUZzZFdWekp5d25NQzR6TXpNeklEQXVNek16TXlBd0xqTXpNek1nTUNBd0lEQXVNek16TXlBd0xqTXpNek1nTUM0ek16TXpJREFnTUNBd0xqTXpNek1nTUM0ek16TXpJREF1TXpNek15QXdJREFnTUNBd0lEQWdNU0F3SnlrN1hISmNiaUFnSUNCbVpVTnZiRzl5VFdGMGNtbDRMbk5sZEVGMGRISnBZblYwWlNnbmNtVnpkV3gwSnl3blpqRW5LVHRjY2x4dUlDQWdJR1pwYkhSbGNpNWhjSEJsYm1SRGFHbHNaQ2htWlVOdmJHOXlUV0YwY21sNEtUdGNjbHh1SUNBZ0lHWmxRMjlzYjNKTllYUnlhWGdnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBUbE1vYzNablRsTXNKMlpsUTI5c2IzSk5ZWFJ5YVhnbktUdGNjbHh1SUNBZ0lHWmxRMjlzYjNKTllYUnlhWGd1YzJWMFFYUjBjbWxpZFhSbEtDZDBlWEJsSnl3bmJXRjBjbWw0SnlrN1hISmNiaUFnSUNCbVpVTnZiRzl5VFdGMGNtbDRMbk5sZEVGMGRISnBZblYwWlNnblkyOXNiM0l0YVc1MFpYSndiMnhoZEdsdmJpMW1hV3gwWlhKekp5d25jMUpIUWljcE8xeHlYRzRnSUNBZ1ptVkRiMnh2Y2sxaGRISnBlQzV6WlhSQmRIUnlhV0oxZEdVb0ozWmhiSFZsY3ljc0p6RWdNQ0F3SURBZ01DQXdJREVnTUNBd0lEQWdNQ0F3SURFZ01DQXdJREFnTUNBd0lERWdNQ2NwTzF4eVhHNGdJQ0FnWm1WRGIyeHZjazFoZEhKcGVDNXpaWFJCZEhSeWFXSjFkR1VvSjNKbGMzVnNkQ2NzSjJZeUp5azdYSEpjYmlBZ0lDQm1hV3gwWlhJdVlYQndaVzVrUTJocGJHUW9abVZEYjJ4dmNrMWhkSEpwZUNrN1hISmNiaUFnSUNCMGFHbHpMbTFoZEhKcGVFWnBiSFJsY2lBOUlHWmxRMjlzYjNKTllYUnlhWGc3WEhKY2JpQWdJQ0JwWmlobWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6SmRMbkF1ZGlBaFBUMGdNVEF3SUh4OElHWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJNbDB1Y0M1cktYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1ptVk5aWEpuWlNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWm1WTlpYSm5aU2NwTzF4eVhHNGdJQ0FnSUNBZ0lHWnBiSFJsY2k1aGNIQmxibVJEYUdsc1pDaG1aVTFsY21kbEtUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1ptVk5aWEpuWlU1dlpHVTdYSEpjYmlBZ0lDQWdJQ0FnWm1WTlpYSm5aVTV2WkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJabFRXVnlaMlZPYjJSbEp5azdYSEpjYmlBZ0lDQWdJQ0FnWm1WTlpYSm5aVTV2WkdVdWMyVjBRWFIwY21saWRYUmxLQ2RwYmljc0oxTnZkWEpqWlVkeVlYQm9hV01uS1R0Y2NseHVJQ0FnSUNBZ0lDQm1aVTFsY21kbExtRndjR1Z1WkVOb2FXeGtLR1psVFdWeVoyVk9iMlJsS1R0Y2NseHVJQ0FnSUNBZ0lDQm1aVTFsY21kbFRtOWtaU0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25abVZOWlhKblpVNXZaR1VuS1R0Y2NseHVJQ0FnSUNBZ0lDQm1aVTFsY21kbFRtOWtaUzV6WlhSQmRIUnlhV0oxZEdVb0oybHVKeXduWmpJbktUdGNjbHh1SUNBZ0lDQWdJQ0JtWlUxbGNtZGxMbUZ3Y0dWdVpFTm9hV3hrS0dabFRXVnlaMlZPYjJSbEtUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1VTFaSFZHbHVkRVpwYkhSbGNpNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVJuSmhiV1VnUFNCbWRXNWpkR2x2YmlobWIzSmpaVkpsYm1SbGNpbDdYSEpjYmlBZ0lDQnBaaWhtYjNKalpWSmxibVJsY2lCOGZDQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXViV1JtS1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWTI5c2IzSkNiR0ZqYXlBOUlIUm9hWE11Wm1sc2RHVnlUV0Z1WVdkbGNpNWxabVpsWTNSRmJHVnRaVzUwYzFzd1hTNXdMblk3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR052Ykc5eVYyaHBkR1VnUFNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTVYwdWNDNTJPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnZjR0ZqYVhSNUlEMGdkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6SmRMbkF1ZGk4eE1EQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXRZWFJ5YVhoR2FXeDBaWEl1YzJWMFFYUjBjbWxpZFhSbEtDZDJZV3gxWlhNbkxDaGpiMnh2Y2xkb2FYUmxXekJkTFNCamIyeHZja0pzWVdOcld6QmRLU3NuSURBZ01DQXdJQ2NySUdOdmJHOXlRbXhoWTJ0Yk1GMGdLeWNnSnlzZ0tHTnZiRzl5VjJocGRHVmJNVjB0SUdOdmJHOXlRbXhoWTJ0Yk1WMHBJQ3NuSURBZ01DQXdJQ2NySUdOdmJHOXlRbXhoWTJ0Yk1WMGdLeWNnSnlzZ0tHTnZiRzl5VjJocGRHVmJNbDB0SUdOdmJHOXlRbXhoWTJ0Yk1sMHBJQ3NuSURBZ01DQXdJQ2NySUdOdmJHOXlRbXhoWTJ0Yk1sMGdLeWNnTUNBd0lEQWdKeUFySUc5d1lXTnBkSGtnS3lBbklEQW5LVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNibVoxYm1OMGFXOXVJRk5XUjBacGJHeEdhV3gwWlhJb1ptbHNkR1Z5TENCbWFXeDBaWEpOWVc1aFoyVnlLWHRjY2x4dUlDQWdJSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaUE5SUdacGJIUmxjazFoYm1GblpYSTdYSEpjYmlBZ0lDQjJZWElnWm1WRGIyeHZjazFoZEhKcGVDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blptVkRiMnh2Y2sxaGRISnBlQ2NwTzF4eVhHNGdJQ0FnWm1WRGIyeHZjazFoZEhKcGVDNXpaWFJCZEhSeWFXSjFkR1VvSjNSNWNHVW5MQ2R0WVhSeWFYZ25LVHRjY2x4dUlDQWdJR1psUTI5c2IzSk5ZWFJ5YVhndWMyVjBRWFIwY21saWRYUmxLQ2RqYjJ4dmNpMXBiblJsY25CdmJHRjBhVzl1TFdacGJIUmxjbk1uTENkelVrZENKeWs3WEhKY2JpQWdJQ0JtWlVOdmJHOXlUV0YwY21sNExuTmxkRUYwZEhKcFluVjBaU2duZG1Gc2RXVnpKeXduTVNBd0lEQWdNQ0F3SURBZ01TQXdJREFnTUNBd0lEQWdNU0F3SURBZ01DQXdJREFnTVNBd0p5azdYSEpjYmlBZ0lDQm1hV3gwWlhJdVlYQndaVzVrUTJocGJHUW9abVZEYjJ4dmNrMWhkSEpwZUNrN1hISmNiaUFnSUNCMGFHbHpMbTFoZEhKcGVFWnBiSFJsY2lBOUlHWmxRMjlzYjNKTllYUnlhWGc3WEhKY2JuMWNjbHh1VTFaSFJtbHNiRVpwYkhSbGNpNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVJuSmhiV1VnUFNCbWRXNWpkR2x2YmlobWIzSmpaVkpsYm1SbGNpbDdYSEpjYmlBZ0lDQnBaaWhtYjNKalpWSmxibVJsY2lCOGZDQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXViV1JtS1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWTI5c2IzSWdQU0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJNbDB1Y0M1Mk8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdmNHRmphWFI1SUQwZ2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3paZExuQXVkanRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTFoZEhKcGVFWnBiSFJsY2k1elpYUkJkSFJ5YVdKMWRHVW9KM1poYkhWbGN5Y3NKekFnTUNBd0lEQWdKeXRqYjJ4dmNsc3dYU3NuSURBZ01DQXdJREFnSnl0amIyeHZjbHN4WFNzbklEQWdNQ0F3SURBZ0p5dGpiMnh2Y2xzeVhTc25JREFnTUNBd0lDY3JiM0JoWTJsMGVTc25JREFuS1R0Y2NseHVJQ0FnSUgxY2NseHVmVHRjYm1aMWJtTjBhVzl1SUZOV1IxTjBjbTlyWlVWbVptVmpkQ2hsYkdWdExDQm1hV3gwWlhKTllXNWhaMlZ5S1h0Y2NseHVJQ0FnSUhSb2FYTXVhVzVwZEdsaGJHbDZaV1FnUFNCbVlXeHpaVHRjY2x4dUlDQWdJSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaUE5SUdacGJIUmxjazFoYm1GblpYSTdYSEpjYmlBZ0lDQjBhR2x6TG1Wc1pXMGdQU0JsYkdWdE8xeHlYRzRnSUNBZ2RHaHBjeTV3WVhSb2N5QTlJRnRkTzF4eVhHNTlYSEpjYmx4eVhHNVRWa2RUZEhKdmEyVkZabVpsWTNRdWNISnZkRzkwZVhCbExtbHVhWFJwWVd4cGVtVWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJsYkdWdFEyaHBiR1J5Wlc0Z1BTQjBhR2x6TG1Wc1pXMHViR0Y1WlhKRmJHVnRaVzUwTG1Ob2FXeGtjbVZ1SUh4OElIUm9hWE11Wld4bGJTNXNZWGxsY2tWc1pXMWxiblF1WTJocGJHUk9iMlJsY3p0Y2NseHVJQ0FnSUhaaGNpQndZWFJvTEdkeWIzVndVR0YwYUN3Z2FTd2diR1Z1TzF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pGZExuQXVkaUE5UFQwZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnYkdWdUlEMGdkR2hwY3k1bGJHVnRMbTFoYzJ0TllXNWhaMlZ5TG0xaGMydHpVSEp2Y0dWeWRHbGxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnYVNBOUlEQTdYSEpjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJR2tnUFNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTUYwdWNDNTJJQzBnTVR0Y2NseHVJQ0FnSUNBZ0lDQnNaVzRnUFNCcElDc2dNVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2R5YjNWd1VHRjBhQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25aeWNwT3lCY2NseHVJQ0FnSUdkeWIzVndVR0YwYUM1elpYUkJkSFJ5YVdKMWRHVW9KMlpwYkd3bkxDZHViMjVsSnlrN1hISmNiaUFnSUNCbmNtOTFjRkJoZEdndWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVXRiR2x1WldOaGNDY3NKM0p2ZFc1a0p5azdYSEpjYmlBZ0lDQm5jbTkxY0ZCaGRHZ3VjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlV0WkdGemFHOW1abk5sZENjc01TazdYSEpjYmlBZ0lDQm1iM0lvYVR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0J3WVhSb0lEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkd1lYUm9KeWs3WEhKY2JpQWdJQ0FnSUNBZ1ozSnZkWEJRWVhSb0xtRndjR1Z1WkVOb2FXeGtLSEJoZEdncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHRjBhSE11Y0hWemFDaDdjRHB3WVhSb0xHMDZhWDBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pFd1hTNXdMbllnUFQwOUlETXBlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnRZWE5ySUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2R0WVhOckp5azdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbGtJRDBnSjNOMGJYTmZKeUFySUhKaGJtUnZiVk4wY21sdVp5Z3hNQ2s3WEhKY2JpQWdJQ0FnSUNBZ2JXRnpheTV6WlhSQmRIUnlhV0oxZEdVb0oybGtKeXhwWkNrN1hISmNiaUFnSUNBZ0lDQWdiV0Z6YXk1elpYUkJkSFJ5YVdKMWRHVW9KMjFoYzJzdGRIbHdaU2NzSjJGc2NHaGhKeWs3WEhKY2JpQWdJQ0FnSUNBZ2JXRnpheTVoY0hCbGJtUkRhR2xzWkNobmNtOTFjRkJoZEdncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVpXeGxiUzVuYkc5aVlXeEVZWFJoTG1SbFpuTXVZWEJ3Wlc1a1EyaHBiR1FvYldGemF5azdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHY2dQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyY25LVHRjY2x4dUlDQWdJQ0FnSUNCbkxuTmxkRUYwZEhKcFluVjBaU2duYldGemF5Y3NKM1Z5YkNnbklDc2diRzlqWVhScGIyNUljbVZtSUNzZ0p5TW5LMmxrS3ljcEp5azdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1pXeGxiVU5vYVd4a2NtVnVXekJkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWnk1aGNIQmxibVJEYUdsc1pDaGxiR1Z0UTJocGJHUnlaVzViTUYwcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZzWlcwdWJHRjVaWEpGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0djcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXRnphMlZ5SUQwZ2JXRnphenRjY2x4dUlDQWdJQ0FnSUNCbmNtOTFjRkJoZEdndWMyVjBRWFIwY21saWRYUmxLQ2R6ZEhKdmEyVW5MQ2NqWm1abUp5azdYSEpjYmlBZ0lDQjlJR1ZzYzJVZ2FXWW9kR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6RXdYUzV3TG5ZZ1BUMDlJREVnZkh3Z2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pFd1hTNXdMbllnUFQwOUlESXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11Wm1sc2RHVnlUV0Z1WVdkbGNpNWxabVpsWTNSRmJHVnRaVzUwYzFzeE1GMHVjQzUySUQwOVBTQXlLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdWc1pXMURhR2xzWkhKbGJpQTlJSFJvYVhNdVpXeGxiUzVzWVhsbGNrVnNaVzFsYm5RdVkyaHBiR1J5Wlc0Z2ZId2dkR2hwY3k1bGJHVnRMbXhoZVdWeVJXeGxiV1Z1ZEM1amFHbHNaRTV2WkdWek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FHbHNaU2hsYkdWdFEyaHBiR1J5Wlc0dWJHVnVaM1JvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJTNXNZWGxsY2tWc1pXMWxiblF1Y21WdGIzWmxRMmhwYkdRb1pXeGxiVU5vYVd4a2NtVnVXekJkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnNaVzB1YkdGNVpYSkZiR1Z0Wlc1MExtRndjR1Z1WkVOb2FXeGtLR2R5YjNWd1VHRjBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdExteGhlV1Z5Uld4bGJXVnVkQzV5WlcxdmRtVkJkSFJ5YVdKMWRHVW9KMjFoYzJzbktUdGNjbHh1SUNBZ0lDQWdJQ0JuY205MWNGQmhkR2d1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSEp2YTJVbkxDY2pabVptSnlrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbWx1YVhScFlXeHBlbVZrSUQwZ2RISjFaVHRjY2x4dUlDQWdJSFJvYVhNdWNHRjBhRTFoYzJ0bGNpQTlJR2R5YjNWd1VHRjBhRHRjY2x4dWZWeHlYRzVjY2x4dVUxWkhVM1J5YjJ0bFJXWm1aV04wTG5CeWIzUnZkSGx3WlM1eVpXNWtaWEpHY21GdFpTQTlJR1oxYm1OMGFXOXVLR1p2Y21ObFVtVnVaR1Z5S1h0Y2NseHVJQ0FnSUdsbUtDRjBhR2x6TG1sdWFYUnBZV3hwZW1Wa0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtbHVhWFJwWVd4cGVtVW9LVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzRnUFNCMGFHbHpMbkJoZEdoekxteGxibWQwYUR0Y2NseHVJQ0FnSUhaaGNpQnRZWE5yTENCd1lYUm9PMXh5WEc0Z0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNCdFlYTnJJRDBnZEdocGN5NWxiR1Z0TG0xaGMydE5ZVzVoWjJWeUxuWnBaWGRFWVhSaFczUm9hWE11Y0dGMGFITmJhVjB1YlYwN1hISmNiaUFnSUNBZ0lDQWdjR0YwYUNBOUlIUm9hWE11Y0dGMGFITmJhVjB1Y0R0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhtYjNKalpWSmxibVJsY2lCOGZDQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXViV1JtSUh4OElHMWhjMnN1Y0hKdmNDNXRaR1lwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVhSb0xuTmxkRUYwZEhKcFluVjBaU2duWkNjc2JXRnpheTVzWVhOMFVHRjBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0dadmNtTmxVbVZ1WkdWeUlIeDhJSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxczVYUzV3TG0xa1ppQjhmQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJORjB1Y0M1dFpHWWdmSHdnZEdocGN5NW1hV3gwWlhKTllXNWhaMlZ5TG1WbVptVmpkRVZzWlcxbGJuUnpXemRkTG5BdWJXUm1JSHg4SUhSb2FYTXVabWxzZEdWeVRXRnVZV2RsY2k1bFptWmxZM1JGYkdWdFpXNTBjMXM0WFM1d0xtMWtaaUI4ZkNCdFlYTnJMbkJ5YjNBdWJXUm1LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdSaGMyaGhjbkpoZVZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJOMTB1Y0M1MklDRTlQU0F3SUh4OElIUm9hWE11Wm1sc2RHVnlUV0Z1WVdkbGNpNWxabVpsWTNSRmJHVnRaVzUwYzFzNFhTNXdMbllnSVQwOUlERXdNQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjeUE5SUUxaGRHZ3ViV2x1S0hSb2FYTXVabWxzZEdWeVRXRnVZV2RsY2k1bFptWmxZM1JGYkdWdFpXNTBjMXMzWFM1d0xuWXNkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6aGRMbkF1ZGlrdk1UQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHVWdQU0JOWVhSb0xtMWhlQ2gwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJOMTB1Y0M1MkxIUm9hWE11Wm1sc2RHVnlUV0Z1WVdkbGNpNWxabVpsWTNSRmJHVnRaVzUwYzFzNFhTNXdMbllwTHpFd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCc0lEMGdjR0YwYUM1blpYUlViM1JoYkV4bGJtZDBhQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRnphR0Z5Y21GNVZtRnNkV1VnUFNBbk1DQXdJREFnSnlBcklHd3FjeUFySUNjZ0p6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCc2FXNWxUR1Z1WjNSb0lEMGdiQ29vWlMxektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCelpXZHRaVzUwSUQwZ01TdDBhR2x6TG1acGJIUmxjazFoYm1GblpYSXVaV1ptWldOMFJXeGxiV1Z1ZEhOYk5GMHVjQzUyS2pJcWRHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3psZExuQXVkaTh4TURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnZFc1cGRITWdQU0JOWVhSb0xtWnNiMjl5S0d4cGJtVk1aVzVuZEdndmMyVm5iV1Z1ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhxUFRBN2FqeDFibWwwY3p0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWE5vWVhKeVlYbFdZV3gxWlNBclBTQW5NU0FuSUNzZ2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pSZExuQXVkaW95S25Sb2FYTXVabWxzZEdWeVRXRnVZV2RsY2k1bFptWmxZM1JGYkdWdFpXNTBjMXM1WFM1d0xuWXZNVEF3SUNzZ0p5QW5PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRnphR0Z5Y21GNVZtRnNkV1VnS3owZ0p6QWdKeUFySUd3cU1UQWdLeUFuSURBZ01DYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWE5vWVhKeVlYbFdZV3gxWlNBOUlDY3hJQ2NnS3lCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTkYwdWNDNTJLaklxZEdocGN5NW1hV3gwWlhKTllXNWhaMlZ5TG1WbVptVmpkRVZzWlcxbGJuUnpXemxkTG5BdWRpOHhNREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0YwYUM1elpYUkJkSFJ5YVdKMWRHVW9KM04wY205clpTMWtZWE5vWVhKeVlYa25MR1JoYzJoaGNuSmhlVlpoYkhWbEtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmlobWIzSmpaVkpsYm1SbGNpQjhmQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJORjB1Y0M1dFpHWXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0YwYUUxaGMydGxjaTV6WlhSQmRIUnlhV0oxZEdVb0ozTjBjbTlyWlMxM2FXUjBhQ2NzZEdocGN5NW1hV3gwWlhKTllXNWhaMlZ5TG1WbVptVmpkRVZzWlcxbGJuUnpXelJkTG5BdWRpb3lLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRnh5WEc0Z0lDQWdhV1lvWm05eVkyVlNaVzVrWlhJZ2ZId2dkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6WmRMbkF1YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQmhkR2hOWVhOclpYSXVjMlYwUVhSMGNtbGlkWFJsS0NkdmNHRmphWFI1Snl4MGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTmwwdWNDNTJLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVabWxzZEdWeVRXRnVZV2RsY2k1bFptWmxZM1JGYkdWdFpXNTBjMXN4TUYwdWNDNTJJRDA5UFNBeElIeDhJSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxc3hNRjB1Y0M1MklEMDlQU0F5S1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhtYjNKalpWSmxibVJsY2lCOGZDQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXVaV1ptWldOMFJXeGxiV1Z1ZEhOYk0xMHVjQzV0WkdZcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZMjlzYjNJZ1BTQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXVaV1ptWldOMFJXeGxiV1Z1ZEhOYk0xMHVjQzUyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQmhkR2hOWVhOclpYSXVjMlYwUVhSMGNtbGlkWFJsS0NkemRISnZhMlVuTENkeVoySW9KeXRpYlY5bWJHOXZjaWhqYjJ4dmNsc3dYU295TlRVcEt5Y3NKeXRpYlY5bWJHOXZjaWhqYjJ4dmNsc3hYU295TlRVcEt5Y3NKeXRpYlY5bWJHOXZjaWhqYjJ4dmNsc3lYU295TlRVcEt5Y3BKeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4dVpuVnVZM1JwYjI0Z1UxWkhWSEpwZEc5dVpVWnBiSFJsY2lobWFXeDBaWElzSUdacGJIUmxjazFoYm1GblpYSXBlMXh5WEc0Z0lDQWdkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlJRDBnWm1sc2RHVnlUV0Z1WVdkbGNqdGNjbHh1SUNBZ0lIWmhjaUJtWlVOdmJHOXlUV0YwY21sNElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbVpVTnZiRzl5VFdGMGNtbDRKeWs3WEhKY2JpQWdJQ0JtWlVOdmJHOXlUV0YwY21sNExuTmxkRUYwZEhKcFluVjBaU2duZEhsd1pTY3NKMjFoZEhKcGVDY3BPMXh5WEc0Z0lDQWdabVZEYjJ4dmNrMWhkSEpwZUM1elpYUkJkSFJ5YVdKMWRHVW9KMk52Ykc5eUxXbHVkR1Z5Y0c5c1lYUnBiMjR0Wm1sc2RHVnljeWNzSjJ4cGJtVmhjbEpIUWljcE8xeHlYRzRnSUNBZ1ptVkRiMnh2Y2sxaGRISnBlQzV6WlhSQmRIUnlhV0oxZEdVb0ozWmhiSFZsY3ljc0p6QXVNek16TXlBd0xqTXpNek1nTUM0ek16TXpJREFnTUNBd0xqTXpNek1nTUM0ek16TXpJREF1TXpNek15QXdJREFnTUM0ek16TXpJREF1TXpNek15QXdMak16TXpNZ01DQXdJREFnTUNBd0lERWdNQ2NwTzF4eVhHNGdJQ0FnWm1WRGIyeHZjazFoZEhKcGVDNXpaWFJCZEhSeWFXSjFkR1VvSjNKbGMzVnNkQ2NzSjJZeEp5azdYSEpjYmlBZ0lDQm1hV3gwWlhJdVlYQndaVzVrUTJocGJHUW9abVZEYjJ4dmNrMWhkSEpwZUNrN1hISmNiaUFnSUNCMllYSWdabVZEYjIxd2IyNWxiblJVY21GdWMyWmxjaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25abVZEYjIxd2IyNWxiblJVY21GdWMyWmxjaWNwTzF4eVhHNGdJQ0FnWm1WRGIyMXdiMjVsYm5SVWNtRnVjMlpsY2k1elpYUkJkSFJ5YVdKMWRHVW9KMk52Ykc5eUxXbHVkR1Z5Y0c5c1lYUnBiMjR0Wm1sc2RHVnljeWNzSjNOU1IwSW5LVHRjY2x4dUlDQWdJR1pwYkhSbGNpNWhjSEJsYm1SRGFHbHNaQ2htWlVOdmJYQnZibVZ1ZEZSeVlXNXpabVZ5S1R0Y2NseHVJQ0FnSUhSb2FYTXViV0YwY21sNFJtbHNkR1Z5SUQwZ1ptVkRiMjF3YjI1bGJuUlVjbUZ1YzJabGNqdGNjbHh1SUNBZ0lIWmhjaUJtWlVaMWJtTlNJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZG1aVVoxYm1OU0p5azdYSEpjYmlBZ0lDQm1aVVoxYm1OU0xuTmxkRUYwZEhKcFluVjBaU2duZEhsd1pTY3NKM1JoWW14bEp5azdYSEpjYmlBZ0lDQm1aVU52YlhCdmJtVnVkRlJ5WVc1elptVnlMbUZ3Y0dWdVpFTm9hV3hrS0dabFJuVnVZMUlwTzF4eVhHNGdJQ0FnZEdocGN5NW1aVVoxYm1OU0lEMGdabVZHZFc1alVqdGNjbHh1SUNBZ0lIWmhjaUJtWlVaMWJtTkhJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZG1aVVoxYm1OSEp5azdYSEpjYmlBZ0lDQm1aVVoxYm1OSExuTmxkRUYwZEhKcFluVjBaU2duZEhsd1pTY3NKM1JoWW14bEp5azdYSEpjYmlBZ0lDQm1aVU52YlhCdmJtVnVkRlJ5WVc1elptVnlMbUZ3Y0dWdVpFTm9hV3hrS0dabFJuVnVZMGNwTzF4eVhHNGdJQ0FnZEdocGN5NW1aVVoxYm1OSElEMGdabVZHZFc1alJ6dGNjbHh1SUNBZ0lIWmhjaUJtWlVaMWJtTkNJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZG1aVVoxYm1OQ0p5azdYSEpjYmlBZ0lDQm1aVVoxYm1OQ0xuTmxkRUYwZEhKcFluVjBaU2duZEhsd1pTY3NKM1JoWW14bEp5azdYSEpjYmlBZ0lDQm1aVU52YlhCdmJtVnVkRlJ5WVc1elptVnlMbUZ3Y0dWdVpFTm9hV3hrS0dabFJuVnVZMElwTzF4eVhHNGdJQ0FnZEdocGN5NW1aVVoxYm1OQ0lEMGdabVZHZFc1alFqdGNjbHh1ZlZ4eVhHNWNjbHh1VTFaSFZISnBkRzl1WlVacGJIUmxjaTV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaG1iM0pqWlZKbGJtUmxjaWw3WEhKY2JpQWdJQ0JwWmlobWIzSmpaVkpsYm1SbGNpQjhmQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kyOXNiM0l4SUQwZ2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pCZExuQXVkanRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZMjlzYjNJeUlEMGdkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6RmRMbkF1ZGp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWTI5c2IzSXpJRDBnZEdocGN5NW1hV3gwWlhKTllXNWhaMlZ5TG1WbVptVmpkRVZzWlcxbGJuUnpXekpkTG5BdWRqdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RHRmliR1ZTSUQwZ1kyOXNiM0l6V3pCZElDc2dKeUFuSUNzZ1kyOXNiM0l5V3pCZElDc2dKeUFuSUNzZ1kyOXNiM0l4V3pCZFhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhSaFlteGxSeUE5SUdOdmJHOXlNMXN4WFNBcklDY2dKeUFySUdOdmJHOXlNbHN4WFNBcklDY2dKeUFySUdOdmJHOXlNVnN4WFZ4eVhHNGdJQ0FnSUNBZ0lIWmhjaUIwWVdKc1pVSWdQU0JqYjJ4dmNqTmJNbDBnS3lBbklDY2dLeUJqYjJ4dmNqSmJNbDBnS3lBbklDY2dLeUJqYjJ4dmNqRmJNbDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVpsUm5WdVkxSXVjMlYwUVhSMGNtbGlkWFJsS0NkMFlXSnNaVlpoYkhWbGN5Y3NJSFJoWW14bFVpazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW1aVVoxYm1OSExuTmxkRUYwZEhKcFluVjBaU2duZEdGaWJHVldZV3gxWlhNbkxDQjBZV0pzWlVjcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVptVkdkVzVqUWk1elpYUkJkSFJ5YVdKMWRHVW9KM1JoWW14bFZtRnNkV1Z6Snl3Z2RHRmliR1ZDS1R0Y2NseHVJQ0FnSUNBZ0lDQXZMM1poY2lCdmNHRmphWFI1SUQwZ2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pKZExuQXVkaTh4TURBN1hISmNiaUFnSUNBZ0lDQWdMeTkwYUdsekxtMWhkSEpwZUVacGJIUmxjaTV6WlhSQmRIUnlhV0oxZEdVb0ozWmhiSFZsY3ljc0tHTnZiRzl5VjJocGRHVmJNRjB0SUdOdmJHOXlRbXhoWTJ0Yk1GMHBLeWNnTUNBd0lEQWdKeXNnWTI5c2IzSkNiR0ZqYTFzd1hTQXJKeUFuS3lBb1kyOXNiM0pYYUdsMFpWc3hYUzBnWTI5c2IzSkNiR0ZqYTFzeFhTa2dLeWNnTUNBd0lEQWdKeXNnWTI5c2IzSkNiR0ZqYTFzeFhTQXJKeUFuS3lBb1kyOXNiM0pYYUdsMFpWc3lYUzBnWTI5c2IzSkNiR0ZqYTFzeVhTa2dLeWNnTUNBd0lEQWdKeXNnWTI5c2IzSkNiR0ZqYTFzeVhTQXJKeUF3SURBZ01DQW5JQ3NnYjNCaFkybDBlU0FySUNjZ01DY3BPMXh5WEc0Z0lDQWdmVnh5WEc1OU8xeHVablZ1WTNScGIyNGdVMVpIVUhKdlRHVjJaV3h6Um1sc2RHVnlLR1pwYkhSbGNpd2dabWxzZEdWeVRXRnVZV2RsY2lsN1hISmNiaUFnSUNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJZ1BTQm1hV3gwWlhKTllXNWhaMlZ5TzF4eVhHNGdJQ0FnZG1GeUlHVm1abVZqZEVWc1pXMWxiblJ6SUQwZ2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6TzF4eVhHNGdJQ0FnZG1GeUlHWmxRMjl0Y0c5dVpXNTBWSEpoYm5ObVpYSWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0oyWmxRMjl0Y0c5dVpXNTBWSEpoYm5ObVpYSW5LVHRjY2x4dUlDQWdJSFpoY2lCbVpVWjFibU5TTENCbVpVWjFibU5ITENCbVpVWjFibU5DTzF4eVhHNGdJQ0FnWEhKY2JpQWdJQ0JwWmlobFptWmxZM1JGYkdWdFpXNTBjMXM1WFM1d0xtc2dmSHdnWldabVpXTjBSV3hsYldWdWRITmJPVjB1Y0M1MklDRTlQU0F3SUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pFd1hTNXdMbXNnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTVRCZExuQXVkaUFoUFQwZ01TQjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3hNVjB1Y0M1cklIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6RXhYUzV3TG5ZZ0lUMDlJREVnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTVRKZExuQXVheUI4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN4TWwwdWNDNTJJQ0U5UFNBd0lIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6RXpYUzV3TG1zZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk1UTmRMbkF1ZGlBaFBUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtWlVaMWJtTlNJRDBnZEdocGN5NWpjbVZoZEdWR1pVWjFibU1vSjJabFJuVnVZMUluTENCbVpVTnZiWEJ2Ym1WdWRGUnlZVzV6Wm1WeUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LR1ZtWm1WamRFVnNaVzFsYm5Seld6RTJYUzV3TG1zZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk1UWmRMbkF1ZGlBaFBUMGdNQ0I4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN4TjEwdWNDNXJJSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXekUzWFM1d0xuWWdJVDA5SURFZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk1UaGRMbkF1YXlCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzeE9GMHVjQzUySUNFOVBTQXhJSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXekU1WFM1d0xtc2dmSHdnWldabVpXTjBSV3hsYldWdWRITmJNVGxkTG5BdWRpQWhQVDBnTUNCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzeU1GMHVjQzVySUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pJd1hTNXdMbllnSVQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabVZHZFc1alJ5QTlJSFJvYVhNdVkzSmxZWFJsUm1WR2RXNWpLQ2RtWlVaMWJtTkhKeXdnWm1WRGIyMXdiMjVsYm5SVWNtRnVjMlpsY2lrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaGxabVpsWTNSRmJHVnRaVzUwYzFzeU0xMHVjQzVySUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pJelhTNXdMbllnSVQwOUlEQWdmSHdnWldabVpXTjBSV3hsYldWdWRITmJNalJkTG5BdWF5QjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3lORjB1Y0M1MklDRTlQU0F4SUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pJMVhTNXdMbXNnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTWpWZExuQXVkaUFoUFQwZ01TQjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3lObDB1Y0M1cklIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6STJYUzV3TG5ZZ0lUMDlJREFnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTWpkZExuQXVheUI4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN5TjEwdWNDNTJJQ0U5UFNBeEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWmxSblZ1WTBJZ1BTQjBhR2x6TG1OeVpXRjBaVVpsUm5WdVl5Z25abVZHZFc1alFpY3NJR1psUTI5dGNHOXVaVzUwVkhKaGJuTm1aWElwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb1pXWm1aV04wUld4bGJXVnVkSE5iTXpCZExuQXVheUI4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN6TUYwdWNDNTJJQ0U5UFNBd0lIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6TXhYUzV3TG1zZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk16RmRMbkF1ZGlBaFBUMGdNU0I4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN6TWwwdWNDNXJJSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXek15WFM1d0xuWWdJVDA5SURFZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk16TmRMbkF1YXlCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzek0xMHVjQzUySUNFOVBTQXdJSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXek0wWFM1d0xtc2dmSHdnWldabVpXTjBSV3hsYldWdWRITmJNelJkTG5BdWRpQWhQVDBnTVNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bVpVWjFibU5CSUQwZ2RHaHBjeTVqY21WaGRHVkdaVVoxYm1Nb0oyWmxSblZ1WTBFbkxDQm1aVU52YlhCdmJtVnVkRlJ5WVc1elptVnlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRnh5WEc0Z0lDQWdhV1lvZEdocGN5NW1aVVoxYm1OU0lIeDhJSFJvYVhNdVptVkdkVzVqUnlCOGZDQjBhR2x6TG1abFJuVnVZMElnZkh3Z2RHaHBjeTVtWlVaMWJtTkJLWHRjY2x4dUlDQWdJQ0FnSUNCbVpVTnZiWEJ2Ym1WdWRGUnlZVzV6Wm1WeUxuTmxkRUYwZEhKcFluVjBaU2duWTI5c2IzSXRhVzUwWlhKd2IyeGhkR2x2YmkxbWFXeDBaWEp6Snl3bmMxSkhRaWNwTzF4eVhHNGdJQ0FnSUNBZ0lHWnBiSFJsY2k1aGNIQmxibVJEYUdsc1pDaG1aVU52YlhCdmJtVnVkRlJ5WVc1elptVnlLVHRjY2x4dUlDQWdJQ0FnSUNCbVpVTnZiWEJ2Ym1WdWRGUnlZVzV6Wm1WeUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbVpVTnZiWEJ2Ym1WdWRGUnlZVzV6Wm1WeUp5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYVdZb1pXWm1aV04wUld4bGJXVnVkSE5iTWwwdWNDNXJJSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXekpkTG5BdWRpQWhQVDBnTUNCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzelhTNXdMbXNnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTTEwdWNDNTJJQ0U5UFNBeElIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6UmRMbkF1YXlCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzMFhTNXdMbllnSVQwOUlERWdmSHdnWldabVpXTjBSV3hsYldWdWRITmJOVjB1Y0M1cklIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6VmRMbkF1ZGlBaFBUMGdNQ0I4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXMyWFM1d0xtc2dmSHdnWldabVpXTjBSV3hsYldWdWRITmJObDB1Y0M1MklDRTlQU0F4S1h0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm1WRGIyMXdiMjVsYm5SVWNtRnVjMlpsY2k1elpYUkJkSFJ5YVdKMWRHVW9KMk52Ykc5eUxXbHVkR1Z5Y0c5c1lYUnBiMjR0Wm1sc2RHVnljeWNzSjNOU1IwSW5LVHRjY2x4dUlDQWdJQ0FnSUNCbWFXeDBaWEl1WVhCd1pXNWtRMmhwYkdRb1ptVkRiMjF3YjI1bGJuUlVjbUZ1YzJabGNpazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW1aVVoxYm1OU1EyOXRjRzl6WldRZ1BTQjBhR2x6TG1OeVpXRjBaVVpsUm5WdVl5Z25abVZHZFc1alVpY3NJR1psUTI5dGNHOXVaVzUwVkhKaGJuTm1aWElwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wm1WR2RXNWpSME52YlhCdmMyVmtJRDBnZEdocGN5NWpjbVZoZEdWR1pVWjFibU1vSjJabFJuVnVZMGNuTENCbVpVTnZiWEJ2Ym1WdWRGUnlZVzV6Wm1WeUtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWmxSblZ1WTBKRGIyMXdiM05sWkNBOUlIUm9hWE11WTNKbFlYUmxSbVZHZFc1aktDZG1aVVoxYm1OQ0p5d2dabVZEYjIxd2IyNWxiblJVY21GdWMyWmxjaWs3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JsTldSMUJ5YjB4bGRtVnNjMFpwYkhSbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFJtVkdkVzVqSUQwZ1puVnVZM1JwYjI0b2RIbHdaU3dnWm1WRGIyMXdiMjVsYm5SVWNtRnVjMlpsY2lrZ2UxeHlYRzRnSUNBZ2RtRnlJR1psUm5WdVl5QTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl4MGVYQmxLVHRjY2x4dUlDQWdJR1psUm5WdVl5NXpaWFJCZEhSeWFXSjFkR1VvSjNSNWNHVW5MQ2QwWVdKc1pTY3BPMXh5WEc0Z0lDQWdabVZEYjIxd2IyNWxiblJVY21GdWMyWmxjaTVoY0hCbGJtUkRhR2xzWkNobVpVWjFibU1wTzF4eVhHNGdJQ0FnY21WMGRYSnVJR1psUm5WdVl6dGNjbHh1ZlR0Y2NseHVYSEpjYmxOV1IxQnliMHhsZG1Wc2MwWnBiSFJsY2k1d2NtOTBiM1I1Y0dVdVoyVjBWR0ZpYkdWV1lXeDFaU0E5SUdaMWJtTjBhVzl1S0dsdWNIVjBRbXhoWTJzc0lHbHVjSFYwVjJocGRHVXNJR2RoYlcxaExDQnZkWFJ3ZFhSQ2JHRmpheXdnYjNWMGNIVjBWMmhwZEdVcElIdGNjbHh1SUNBZ0lIWmhjaUJqYm5RZ1BTQXdPMXh5WEc0Z0lDQWdkbUZ5SUhObFoyMWxiblJ6SUQwZ01qVTJPMXh5WEc0Z0lDQWdkbUZ5SUhCbGNtTTdYSEpjYmlBZ0lDQjJZWElnYldsdUlEMGdUV0YwYUM1dGFXNG9hVzV3ZFhSQ2JHRmpheXdnYVc1d2RYUlhhR2wwWlNrN1hISmNiaUFnSUNCMllYSWdiV0Y0SUQwZ1RXRjBhQzV0WVhnb2FXNXdkWFJDYkdGamF5d2dhVzV3ZFhSWGFHbDBaU2s3WEhKY2JpQWdJQ0IyWVhJZ2RHRmliR1VnUFNCQmNuSmhlUzVqWVd4c0tHNTFiR3dzZTJ4bGJtZDBhRHB6WldkdFpXNTBjMzBwTzF4eVhHNGdJQ0FnZG1GeUlHTnZiRzl5Vm1Gc2RXVTdYSEpjYmlBZ0lDQjJZWElnY0c5eklEMGdNRHRjY2x4dUlDQWdJSFpoY2lCdmRYUndkWFJFWld4MFlTQTlJRzkxZEhCMWRGZG9hWFJsSUMwZ2IzVjBjSFYwUW14aFkyczdJRnh5WEc0Z0lDQWdkbUZ5SUdsdWNIVjBSR1ZzZEdFZ1BTQnBibkIxZEZkb2FYUmxJQzBnYVc1d2RYUkNiR0ZqYXpzZ1hISmNiaUFnSUNCM2FHbHNaU2hqYm5RZ1BEMGdNalUyS1NCN1hISmNiaUFnSUNBZ0lDQWdjR1Z5WXlBOUlHTnVkQzh5TlRZN1hISmNiaUFnSUNBZ0lDQWdhV1lvY0dWeVl5QThQU0J0YVc0cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjbFpoYkhWbElEMGdhVzV3ZFhSRVpXeDBZU0E4SURBZ1B5QnZkWFJ3ZFhSWGFHbDBaU0E2SUc5MWRIQjFkRUpzWVdOck8xeHlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaWh3WlhKaklENDlJRzFoZUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlWbUZzZFdVZ1BTQnBibkIxZEVSbGJIUmhJRHdnTUNBL0lHOTFkSEIxZEVKc1lXTnJJRG9nYjNWMGNIVjBWMmhwZEdVN1hISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0pXWVd4MVpTQTlJQ2h2ZFhSd2RYUkNiR0ZqYXlBcklHOTFkSEIxZEVSbGJIUmhJQ29nVFdGMGFDNXdiM2NvS0hCbGNtTWdMU0JwYm5CMWRFSnNZV05yS1NBdklHbHVjSFYwUkdWc2RHRXNJREVnTHlCbllXMXRZU2twTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IwWVdKc1pWdHdiM01ySzEwZ1BTQmpiMnh2Y2xaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUdOdWRDQXJQU0F5TlRZdktITmxaMjFsYm5SekxURXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdjbVYwZFhKdUlIUmhZbXhsTG1wdmFXNG9KeUFuS1R0Y2NseHVmVHRjY2x4dVhISmNibE5XUjFCeWIweGxkbVZzYzBacGJIUmxjaTV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaG1iM0pqWlZKbGJtUmxjaWw3WEhKY2JpQWdJQ0JwWmlobWIzSmpaVkpsYm1SbGNpQjhmQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1YldSbUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RtRnNMQ0JqYm5Rc0lIQmxjbU1zSUdKbGVtbGxjanRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaV1ptWldOMFJXeGxiV1Z1ZEhNZ1BTQjBhR2x6TG1acGJIUmxjazFoYm1GblpYSXVaV1ptWldOMFJXeGxiV1Z1ZEhNN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NW1aVVoxYm1OU1EyOXRjRzl6WldRZ0ppWWdLR1p2Y21ObFVtVnVaR1Z5SUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pKZExuQXViV1JtSUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pOZExuQXViV1JtSUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pSZExuQXViV1JtSUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pWZExuQXViV1JtSUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3paZExuQXViV1JtS1NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJDQTlJSFJvYVhNdVoyVjBWR0ZpYkdWV1lXeDFaU2hsWm1abFkzUkZiR1Z0Wlc1MGMxc3lYUzV3TG5Zc1pXWm1aV04wUld4bGJXVnVkSE5iTTEwdWNDNTJMR1ZtWm1WamRFVnNaVzFsYm5Seld6UmRMbkF1ZGl4bFptWmxZM1JGYkdWdFpXNTBjMXMxWFM1d0xuWXNaV1ptWldOMFJXeGxiV1Z1ZEhOYk5sMHVjQzUyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW1aVVoxYm1OU1EyOXRjRzl6WldRdWMyVjBRWFIwY21saWRYUmxLQ2QwWVdKc1pWWmhiSFZsY3ljc2RtRnNLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bVpVWjFibU5IUTI5dGNHOXpaV1F1YzJWMFFYUjBjbWxpZFhSbEtDZDBZV0pzWlZaaGJIVmxjeWNzZG1Gc0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtWlVaMWJtTkNRMjl0Y0c5elpXUXVjMlYwUVhSMGNtbGlkWFJsS0NkMFlXSnNaVlpoYkhWbGN5Y3NkbUZzS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVptVkdkVzVqVWlBbUppQW9abTl5WTJWU1pXNWtaWElnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iT1YwdWNDNXRaR1lnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTVRCZExuQXViV1JtSUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pFeFhTNXdMbTFrWmlCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzeE1sMHVjQzV0WkdZZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk1UTmRMbkF1YldSbUtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiQ0E5SUhSb2FYTXVaMlYwVkdGaWJHVldZV3gxWlNobFptWmxZM1JGYkdWdFpXNTBjMXM1WFM1d0xuWXNaV1ptWldOMFJXeGxiV1Z1ZEhOYk1UQmRMbkF1ZGl4bFptWmxZM1JGYkdWdFpXNTBjMXN4TVYwdWNDNTJMR1ZtWm1WamRFVnNaVzFsYm5Seld6RXlYUzV3TG5Zc1pXWm1aV04wUld4bGJXVnVkSE5iTVROZExuQXVkaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptVkdkVzVqVWk1elpYUkJkSFJ5YVdKMWRHVW9KM1JoWW14bFZtRnNkV1Z6Snl4MllXd3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVtWlVaMWJtTkhJQ1ltSUNobWIzSmpaVkpsYm1SbGNpQjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3hObDB1Y0M1dFpHWWdmSHdnWldabVpXTjBSV3hsYldWdWRITmJNVGRkTG5BdWJXUm1JSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXekU0WFM1d0xtMWtaaUI4ZkNCbFptWmxZM1JGYkdWdFpXNTBjMXN4T1YwdWNDNXRaR1lnZkh3Z1pXWm1aV04wUld4bGJXVnVkSE5iTWpCZExuQXViV1JtS1NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJDQTlJSFJvYVhNdVoyVjBWR0ZpYkdWV1lXeDFaU2hsWm1abFkzUkZiR1Z0Wlc1MGMxc3hObDB1Y0M1MkxHVm1abVZqZEVWc1pXMWxiblJ6V3pFM1hTNXdMbllzWldabVpXTjBSV3hsYldWdWRITmJNVGhkTG5BdWRpeGxabVpsWTNSRmJHVnRaVzUwYzFzeE9WMHVjQzUyTEdWbVptVmpkRVZzWlcxbGJuUnpXekl3WFM1d0xuWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1abFJuVnVZMGN1YzJWMFFYUjBjbWxpZFhSbEtDZDBZV0pzWlZaaGJIVmxjeWNzZG1Gc0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVabVZHZFc1alFpQW1KaUFvWm05eVkyVlNaVzVrWlhJZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk1qTmRMbkF1YldSbUlIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6STBYUzV3TG0xa1ppQjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3lOVjB1Y0M1dFpHWWdmSHdnWldabVpXTjBSV3hsYldWdWRITmJNalpkTG5BdWJXUm1JSHg4SUdWbVptVmpkRVZzWlcxbGJuUnpXekkzWFM1d0xtMWtaaWtwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVd3Z1BTQjBhR2x6TG1kbGRGUmhZbXhsVm1Gc2RXVW9aV1ptWldOMFJXeGxiV1Z1ZEhOYk1qTmRMbkF1ZGl4bFptWmxZM1JGYkdWdFpXNTBjMXN5TkYwdWNDNTJMR1ZtWm1WamRFVnNaVzFsYm5Seld6STFYUzV3TG5Zc1pXWm1aV04wUld4bGJXVnVkSE5iTWpaZExuQXVkaXhsWm1abFkzUkZiR1Z0Wlc1MGMxc3lOMTB1Y0M1MktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtWlVaMWJtTkNMbk5sZEVGMGRISnBZblYwWlNnbmRHRmliR1ZXWVd4MVpYTW5MSFpoYkNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtWmxSblZ1WTBFZ0ppWWdLR1p2Y21ObFVtVnVaR1Z5SUh4OElHVm1abVZqZEVWc1pXMWxiblJ6V3pNd1hTNXdMbTFrWmlCOGZDQmxabVpsWTNSRmJHVnRaVzUwYzFzek1WMHVjQzV0WkdZZ2ZId2daV1ptWldOMFJXeGxiV1Z1ZEhOYk16SmRMbkF1YldSbUlIeDhJR1ZtWm1WamRFVnNaVzFsYm5Seld6TXpYUzV3TG0xa1ppQjhmQ0JsWm1abFkzUkZiR1Z0Wlc1MGMxc3pORjB1Y0M1dFpHWXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZzSUQwZ2RHaHBjeTVuWlhSVVlXSnNaVlpoYkhWbEtHVm1abVZqZEVWc1pXMWxiblJ6V3pNd1hTNXdMbllzWldabVpXTjBSV3hsYldWdWRITmJNekZkTG5BdWRpeGxabVpsWTNSRmJHVnRaVzUwYzFzek1sMHVjQzUyTEdWbVptVmpkRVZzWlcxbGJuUnpXek16WFM1d0xuWXNaV1ptWldOMFJXeGxiV1Z1ZEhOYk16UmRMbkF1ZGlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabVZHZFc1alFTNXpaWFJCZEhSeWFXSjFkR1VvSjNSaFlteGxWbUZzZFdWekp5eDJZV3dwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JjY2x4dUlDQWdJSDFjY2x4dWZUdGNibVoxYm1OMGFXOXVJRk5XUjBSeWIzQlRhR0ZrYjNkRlptWmxZM1FvWm1sc2RHVnlMQ0JtYVd4MFpYSk5ZVzVoWjJWeUtYdGNjbHh1SUNBZ0lDOHFQR1psUjJGMWMzTnBZVzVDYkhWeUlHbHVQVndpVTI5MWNtTmxRV3h3YUdGY0lpQnpkR1JFWlhacFlYUnBiMjQ5WENJelhDSXZQaUE4SVMwdElITjBaRVJsZG1saGRHbHZiaUJwY3lCb2IzY2diWFZqYUNCMGJ5QmliSFZ5SUMwdFBseHlYRzRnSUR4bVpVOW1abk5sZENCa2VEMWNJakpjSWlCa2VUMWNJakpjSWlCeVpYTjFiSFE5WENKdlptWnpaWFJpYkhWeVhDSXZQaUE4SVMwdElHaHZkeUJ0ZFdOb0lIUnZJRzltWm5ObGRDQXRMVDVjY2x4dUlDQThabVZOWlhKblpUNGdYSEpjYmlBZ0lDQThabVZOWlhKblpVNXZaR1V2UGlBOElTMHRJSFJvYVhNZ1kyOXVkR0ZwYm5NZ2RHaGxJRzltWm5ObGRDQmliSFZ5Y21Wa0lHbHRZV2RsSUMwdFBseHlYRzRnSUNBZ1BHWmxUV1Z5WjJWT2IyUmxJR2x1UFZ3aVUyOTFjbU5sUjNKaGNHaHBZMXdpTHo0Z1BDRXRMU0IwYUdseklHTnZiblJoYVc1eklIUm9aU0JsYkdWdFpXNTBJSFJvWVhRZ2RHaGxJR1pwYkhSbGNpQnBjeUJoY0hCc2FXVmtJSFJ2SUMwdFBseHlYRzRnSUR3dlptVk5aWEpuWlQ0cUwxeHlYRzRnSUM4cVBHWmxSbXh2YjJRZ1pteHZiMlF0WTI5c2IzSTlYQ0lqTTBRME5UYzBYQ0lnWm14dmIyUXRiM0JoWTJsMGVUMWNJakF1TlZ3aUlISmxjM1ZzZEQxY0ltOW1abk5sZEVOdmJHOXlYQ0l2UGlvdlhISmNiaUFnSUNCbWFXeDBaWEl1YzJWMFFYUjBjbWxpZFhSbEtDZDRKeXduTFRFd01DVW5LVHRjY2x4dUlDQWdJR1pwYkhSbGNpNXpaWFJCZEhSeWFXSjFkR1VvSjNrbkxDY3RNVEF3SlNjcE8xeHlYRzRnSUNBZ1ptbHNkR1Z5TG5ObGRFRjBkSEpwWW5WMFpTZ25kMmxrZEdnbkxDYzBNREFsSnlrN1hISmNiaUFnSUNCbWFXeDBaWEl1YzJWMFFYUjBjbWxpZFhSbEtDZG9aV2xuYUhRbkxDYzBNREFsSnlrN1hISmNiaUFnSUNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJZ1BTQm1hV3gwWlhKTllXNWhaMlZ5TzF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJtWlVkaGRYTnphV0Z1UW14MWNpQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blptVkhZWFZ6YzJsaGJrSnNkWEluS1R0Y2NseHVJQ0FnSUdabFIyRjFjM05wWVc1Q2JIVnlMbk5sZEVGMGRISnBZblYwWlNnbmFXNG5MQ2RUYjNWeVkyVkJiSEJvWVNjcE8xeHlYRzRnSUNBZ1ptVkhZWFZ6YzJsaGJrSnNkWEl1YzJWMFFYUjBjbWxpZFhSbEtDZHlaWE4xYkhRbkxDZGtjbTl3WDNOb1lXUnZkMTh4SnlrN1hISmNiaUFnSUNCbVpVZGhkWE56YVdGdVFteDFjaTV6WlhSQmRIUnlhV0oxZEdVb0ozTjBaRVJsZG1saGRHbHZiaWNzSnpBbktUdGNjbHh1SUNBZ0lIUm9hWE11Wm1WSFlYVnpjMmxoYmtKc2RYSWdQU0JtWlVkaGRYTnphV0Z1UW14MWNqdGNjbHh1SUNBZ0lHWnBiSFJsY2k1aGNIQmxibVJEYUdsc1pDaG1aVWRoZFhOemFXRnVRbXgxY2lrN1hISmNibHh5WEc0Z0lDQWdkbUZ5SUdabFQyWm1jMlYwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RtWlU5bVpuTmxkQ2NwTzF4eVhHNGdJQ0FnWm1WUFptWnpaWFF1YzJWMFFYUjBjbWxpZFhSbEtDZGtlQ2NzSnpJMUp5azdYSEpjYmlBZ0lDQm1aVTltWm5ObGRDNXpaWFJCZEhSeWFXSjFkR1VvSjJSNUp5d25NQ2NwTzF4eVhHNGdJQ0FnWm1WUFptWnpaWFF1YzJWMFFYUjBjbWxpZFhSbEtDZHBiaWNzSjJSeWIzQmZjMmhoWkc5M1h6RW5LVHRjY2x4dUlDQWdJR1psVDJabWMyVjBMbk5sZEVGMGRISnBZblYwWlNnbmNtVnpkV3gwSnl3blpISnZjRjl6YUdGa2IzZGZNaWNwTzF4eVhHNGdJQ0FnZEdocGN5NW1aVTltWm5ObGRDQTlJR1psVDJabWMyVjBPMXh5WEc0Z0lDQWdabWxzZEdWeUxtRndjR1Z1WkVOb2FXeGtLR1psVDJabWMyVjBLVHRjY2x4dUlDQWdJSFpoY2lCbVpVWnNiMjlrSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RtWlVac2IyOWtKeWs3WEhKY2JpQWdJQ0JtWlVac2IyOWtMbk5sZEVGMGRISnBZblYwWlNnblpteHZiMlF0WTI5c2IzSW5MQ2NqTURCbVpqQXdKeWs3WEhKY2JpQWdJQ0JtWlVac2IyOWtMbk5sZEVGMGRISnBZblYwWlNnblpteHZiMlF0YjNCaFkybDBlU2NzSnpFbktUdGNjbHh1SUNBZ0lHWmxSbXh2YjJRdWMyVjBRWFIwY21saWRYUmxLQ2R5WlhOMWJIUW5MQ2RrY205d1gzTm9ZV1J2ZDE4ekp5azdYSEpjYmlBZ0lDQjBhR2x6TG1abFJteHZiMlFnUFNCbVpVWnNiMjlrTzF4eVhHNGdJQ0FnWm1sc2RHVnlMbUZ3Y0dWdVpFTm9hV3hrS0dabFJteHZiMlFwTzF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJtWlVOdmJYQnZjMmwwWlNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWm1WRGIyMXdiM05wZEdVbktUdGNjbHh1SUNBZ0lHWmxRMjl0Y0c5emFYUmxMbk5sZEVGMGRISnBZblYwWlNnbmFXNG5MQ2RrY205d1gzTm9ZV1J2ZDE4ekp5azdYSEpjYmlBZ0lDQm1aVU52YlhCdmMybDBaUzV6WlhSQmRIUnlhV0oxZEdVb0oybHVNaWNzSjJSeWIzQmZjMmhoWkc5M1h6SW5LVHRjY2x4dUlDQWdJR1psUTI5dGNHOXphWFJsTG5ObGRFRjBkSEpwWW5WMFpTZ25iM0JsY21GMGIzSW5MQ2RwYmljcE8xeHlYRzRnSUNBZ1ptVkRiMjF3YjNOcGRHVXVjMlYwUVhSMGNtbGlkWFJsS0NkeVpYTjFiSFFuTENka2NtOXdYM05vWVdSdmQxODBKeWs3WEhKY2JpQWdJQ0JtYVd4MFpYSXVZWEJ3Wlc1a1EyaHBiR1FvWm1WRGIyMXdiM05wZEdVcE8xeHlYRzVjY2x4dVhISmNiaUFnSUNCMllYSWdabVZOWlhKblpTQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blptVk5aWEpuWlNjcE8xeHlYRzRnSUNBZ1ptbHNkR1Z5TG1Gd2NHVnVaRU5vYVd4a0tHWmxUV1Z5WjJVcE8xeHlYRzRnSUNBZ2RtRnlJR1psVFdWeVoyVk9iMlJsTzF4eVhHNGdJQ0FnWm1WTlpYSm5aVTV2WkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJabFRXVnlaMlZPYjJSbEp5azdYSEpjYmlBZ0lDQm1aVTFsY21kbExtRndjR1Z1WkVOb2FXeGtLR1psVFdWeVoyVk9iMlJsS1R0Y2NseHVJQ0FnSUdabFRXVnlaMlZPYjJSbElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkbVpVMWxjbWRsVG05a1pTY3BPMXh5WEc0Z0lDQWdabVZOWlhKblpVNXZaR1V1YzJWMFFYUjBjbWxpZFhSbEtDZHBiaWNzSjFOdmRYSmpaVWR5WVhCb2FXTW5LVHRjY2x4dUlDQWdJSFJvYVhNdVptVk5aWEpuWlU1dlpHVWdQU0JtWlUxbGNtZGxUbTlrWlR0Y2NseHVJQ0FnSUhSb2FYTXVabVZOWlhKblpTQTlJR1psVFdWeVoyVTdYSEpjYmlBZ0lDQjBhR2x6TG05eWFXZHBibUZzVG05a1pVRmtaR1ZrSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0JtWlUxbGNtZGxMbUZ3Y0dWdVpFTm9hV3hrS0dabFRXVnlaMlZPYjJSbEtUdGNjbHh1ZlZ4eVhHNWNjbHh1VTFaSFJISnZjRk5vWVdSdmQwVm1abVZqZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JtZFc1amRHbHZiaWhtYjNKalpWSmxibVJsY2lsN1hISmNiaUFnSUNCcFppaG1iM0pqWlZKbGJtUmxjaUI4ZkNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdWJXUm1LWHRjY2x4dUlDQWdJQ0FnSUNCcFppaG1iM0pqWlZKbGJtUmxjaUI4ZkNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTkYwdWNDNXRaR1lwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWmxSMkYxYzNOcFlXNUNiSFZ5TG5ObGRFRjBkSEpwWW5WMFpTZ25jM1JrUkdWMmFXRjBhVzl1Snl3Z2RHaHBjeTVtYVd4MFpYSk5ZVzVoWjJWeUxtVm1abVZqZEVWc1pXMWxiblJ6V3pSZExuQXVkaUF2SURRcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaG1iM0pqWlZKbGJtUmxjaUI4ZkNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTUYwdWNDNXRaR1lwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyOXNJRDBnZEdocGN5NW1hV3gwWlhKTllXNWhaMlZ5TG1WbVptVmpkRVZzWlcxbGJuUnpXekJkTG5BdWRqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtWlVac2IyOWtMbk5sZEVGMGRISnBZblYwWlNnblpteHZiMlF0WTI5c2IzSW5MSEpuWWxSdlNHVjRLRTFoZEdndWNtOTFibVFvWTI5c1d6QmRLakkxTlNrc1RXRjBhQzV5YjNWdVpDaGpiMnhiTVYwcU1qVTFLU3hOWVhSb0xuSnZkVzVrS0dOdmJGc3lYU295TlRVcEtTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LR1p2Y21ObFVtVnVaR1Z5SUh4OElIUm9hWE11Wm1sc2RHVnlUV0Z1WVdkbGNpNWxabVpsWTNSRmJHVnRaVzUwYzFzeFhTNXdMbTFrWmlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabVZHYkc5dlpDNXpaWFJCZEhSeWFXSjFkR1VvSjJac2IyOWtMVzl3WVdOcGRIa25MSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxc3hYUzV3TG5Zdk1qVTFLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvWm05eVkyVlNaVzVrWlhJZ2ZId2dkR2hwY3k1bWFXeDBaWEpOWVc1aFoyVnlMbVZtWm1WamRFVnNaVzFsYm5Seld6SmRMbkF1YldSbUlIeDhJSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxc3pYUzV3TG0xa1ppbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrYVhOMFlXNWpaU0E5SUhSb2FYTXVabWxzZEdWeVRXRnVZV2RsY2k1bFptWmxZM1JGYkdWdFpXNTBjMXN6WFM1d0xuWmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0Z1WjJ4bElEMGdLSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxc3lYUzV3TG5ZZ0xTQTVNQ2tnS2lCa1pXZFViMUpoWkhOY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIZ2dQU0JrYVhOMFlXNWpaU0FxSUUxaGRHZ3VZMjl6S0dGdVoyeGxLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnZVNBOUlHUnBjM1JoYm1ObElDb2dUV0YwYUM1emFXNG9ZVzVuYkdVcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabVZQWm1aelpYUXVjMlYwUVhSMGNtbGlkWFJsS0Nka2VDY3NJSGdwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWmxUMlptYzJWMExuTmxkRUYwZEhKcFluVjBaU2duWkhrbkxDQjVLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdMeXBwWmlobWIzSmpaVkpsYm1SbGNpQjhmQ0IwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJOVjB1Y0M1dFpHWXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtWnBiSFJsY2sxaGJtRm5aWEl1WldabVpXTjBSV3hsYldWdWRITmJOVjB1Y0M1MklEMDlQU0F4SUNZbUlIUm9hWE11YjNKcFoybHVZV3hPYjJSbFFXUmtaV1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm1WTlpYSm5aUzV5WlcxdmRtVkRhR2xzWkNoMGFHbHpMbVpsVFdWeVoyVk9iMlJsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjNKcFoybHVZV3hPYjJSbFFXUmtaV1FnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1LSFJvYVhNdVptbHNkR1Z5VFdGdVlXZGxjaTVsWm1abFkzUkZiR1Z0Wlc1MGMxczFYUzV3TG5ZZ1BUMDlJREFnSmlZZ0lYUm9hWE11YjNKcFoybHVZV3hPYjJSbFFXUmtaV1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm1WTlpYSm5aUzVoY0hCbGJtUkRhR2xzWkNoMGFHbHpMbVpsVFdWeVoyVk9iMlJsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjNKcFoybHVZV3hPYjJSbFFXUmtaV1FnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNvdlhISmNiaUFnSUNCOVhISmNibjA3WEc1bWRXNWpkR2x2YmlCVFZrZE5ZWFIwWlRORlptWmxZM1FvWm1sc2RHVnlSV3hsYlN3Z1ptbHNkR1Z5VFdGdVlXZGxjaXdnWld4bGJTbDdYSEpjYmlBZ0lDQjBhR2x6TG1sdWFYUnBZV3hwZW1Wa0lEMGdabUZzYzJVN1hISmNiaUFnSUNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJZ1BTQm1hV3gwWlhKTllXNWhaMlZ5TzF4eVhHNGdJQ0FnZEdocGN5NW1hV3gwWlhKRmJHVnRJRDBnWm1sc2RHVnlSV3hsYlR0Y2NseHVJQ0FnSUhSb2FYTXVaV3hsYlNBOUlHVnNaVzA3WEhKY2JpQWdJQ0JsYkdWdExtMWhkSFJsUld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25aeWNwTzF4eVhHNGdJQ0FnWld4bGJTNXRZWFIwWlVWc1pXMWxiblF1WVhCd1pXNWtRMmhwYkdRb1pXeGxiUzVzWVhsbGNrVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ1pXeGxiUzV0WVhSMFpVVnNaVzFsYm5RdVlYQndaVzVrUTJocGJHUW9aV3hsYlM1MGNtRnVjMlp2Y20xbFpFVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ1pXeGxiUzVpWVhObFJXeGxiV1Z1ZENBOUlHVnNaVzB1YldGMGRHVkZiR1Z0Wlc1ME8xeHlYRzU5WEhKY2JseHlYRzVUVmtkTllYUjBaVE5GWm1abFkzUXVjSEp2ZEc5MGVYQmxMbk5sZEVWc1pXMWxiblJCYzAxaGMyc2dQU0JtZFc1amRHbHZiaWhsYkdWdExDQnRZWE5yS1NCN1hISmNiaUFnSUNCMllYSWdiV0Z6YTJWeUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkdFlYTnJKeWs3WEhKY2JpQWdJQ0J0WVhOclpYSXVjMlYwUVhSMGNtbGlkWFJsS0NkcFpDY3NiV0Z6YXk1c1lYbGxja2xrS1R0Y2NseHVJQ0FnSUcxaGMydGxjaTV6WlhSQmRIUnlhV0oxZEdVb0oyMWhjMnN0ZEhsd1pTY3NKMkZzY0doaEp5azdYSEpjYmlBZ0lDQnRZWE5yWlhJdVlYQndaVzVrUTJocGJHUW9iV0Z6YXk1c1lYbGxja1ZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdaV3hsYlM1elpYUk5ZWFIwWlNodFlYTnJMbXhoZVdWeVNXUXBPMXh5WEc0Z0lDQWdiV0Z6YXk1a1lYUmhMbWhrSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0IyWVhJZ1pHVm1jeUE5SUdWc1pXMHVaMnh2WW1Gc1JHRjBZUzVrWldaek8xeHlYRzRnSUNBZ1pHVm1jeTVoY0hCbGJtUkRhR2xzWkNodFlYTnJaWElwTzF4eVhHNTlYSEpjYmx4eVhHNVRWa2ROWVhSMFpUTkZabVpsWTNRdWNISnZkRzkwZVhCbExtbHVhWFJwWVd4cGVtVWdQU0JtZFc1amRHbHZiaWdwSUh0Y2NseHVJQ0FnSUhaaGNpQnBibVFnUFNCMGFHbHpMbVpwYkhSbGNrMWhibUZuWlhJdVpXWm1aV04wUld4bGJXVnVkSE5iTUYwdWNDNTJPMXh5WEc0Z0lDQWdkbUZ5SUdrZ1BTQXdMQ0JzWlc0Z1BTQjBhR2x6TG1Wc1pXMHVZMjl0Y0M1bGJHVnRaVzUwY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0IzYUdsc1pTaHBJRHdnYkdWdUtTQjdYSEpjYmlBZ0lDQmNkR2xtS0hSb2FYTXVaV3hsYlM1amIyMXdMbVZzWlcxbGJuUnpXMmxkTG1SaGRHRXVhVzVrSUQwOVBTQnBibVFwSUh0Y2NseHVJQ0FnSUZ4MFhIUjBhR2x6TG5ObGRFVnNaVzFsYm5SQmMwMWhjMnNvZEdocGN5NWxiR1Z0TENCMGFHbHpMbVZzWlcwdVkyOXRjQzVsYkdWdFpXNTBjMXRwWFNrN1hISmNiaUFnSUNCY2RIMWNjbHh1SUNBZ0lGeDBhU0FyUFNBeE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTVwYm1sMGFXRnNhWHBsWkNBOUlIUnlkV1U3WEhKY2JuMWNjbHh1WEhKY2JsTldSMDFoZEhSbE0wVm1abVZqZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JtZFc1amRHbHZiaWdwSUh0Y2NseHVYSFJwWmlnaGRHaHBjeTVwYm1sMGFXRnNhWHBsWkNrZ2UxeHlYRzVjZEZ4MGRHaHBjeTVwYm1sMGFXRnNhWHBsS0NrN1hISmNibHgwZlZ4eVhHNTlYRzVtZFc1amRHbHZiaUJUVmtkRlptWmxZM1J6S0dWc1pXMHBlMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUdWc1pXMHVaR0YwWVM1bFppNXNaVzVuZEdnN1hISmNiaUFnSUNCMllYSWdabWxzU1dRZ1BTQnlZVzVrYjIxVGRISnBibWNvTVRBcE8xeHlYRzRnSUNBZ2RtRnlJR1pwYkNBOUlHWnBiSFJsY25OR1lXTjBiM0o1TG1OeVpXRjBaVVpwYkhSbGNpaG1hV3hKWkNrN1hISmNiaUFnSUNCMllYSWdZMjkxYm5RZ1BTQXdPMXh5WEc0Z0lDQWdkR2hwY3k1bWFXeDBaWEp6SUQwZ1cxMDdYSEpjYmlBZ0lDQjJZWElnWm1sc2RHVnlUV0Z1WVdkbGNqdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1pXeGxiUzVrWVhSaExtVm1XMmxkTG5SNUlEMDlQU0F5TUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmRXNTBJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJIUmxjazFoYm1GblpYSWdQU0J1WlhjZ1UxWkhWR2x1ZEVacGJIUmxjaWhtYVd3c0lHVnNaVzB1WldabVpXTjBjeTVsWm1abFkzUkZiR1Z0Wlc1MGMxdHBYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHNkR1Z5Y3k1d2RYTm9LR1pwYkhSbGNrMWhibUZuWlhJcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LR1ZzWlcwdVpHRjBZUzVsWmx0cFhTNTBlU0E5UFQwZ01qRXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1hV3gwWlhKTllXNWhaMlZ5SUQwZ2JtVjNJRk5XUjBacGJHeEdhV3gwWlhJb1ptbHNMQ0JsYkdWdExtVm1abVZqZEhNdVpXWm1aV04wUld4bGJXVnVkSE5iYVYwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVpwYkhSbGNuTXVjSFZ6YUNobWFXeDBaWEpOWVc1aFoyVnlLVHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaU0JwWmlobGJHVnRMbVJoZEdFdVpXWmJhVjB1ZEhrZ1BUMDlJREl5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm1sc2RHVnlUV0Z1WVdkbGNpQTlJRzVsZHlCVFZrZFRkSEp2YTJWRlptWmxZM1FvWld4bGJTd2daV3hsYlM1bFptWmxZM1J6TG1WbVptVmpkRVZzWlcxbGJuUnpXMmxkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW1hV3gwWlhKekxuQjFjMmdvWm1sc2RHVnlUV0Z1WVdkbGNpazdYSEpjYmlBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvWld4bGJTNWtZWFJoTG1WbVcybGRMblI1SUQwOVBTQXlNeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052ZFc1MElDczlJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1pwYkhSbGNrMWhibUZuWlhJZ1BTQnVaWGNnVTFaSFZISnBkRzl1WlVacGJIUmxjaWhtYVd3c0lHVnNaVzB1WldabVpXTjBjeTVsWm1abFkzUkZiR1Z0Wlc1MGMxdHBYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHNkR1Z5Y3k1d2RYTm9LR1pwYkhSbGNrMWhibUZuWlhJcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LR1ZzWlcwdVpHRjBZUzVsWmx0cFhTNTBlU0E5UFQwZ01qUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1hV3gwWlhKTllXNWhaMlZ5SUQwZ2JtVjNJRk5XUjFCeWIweGxkbVZzYzBacGJIUmxjaWhtYVd3c0lHVnNaVzB1WldabVpXTjBjeTVsWm1abFkzUkZiR1Z0Wlc1MGMxdHBYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHNkR1Z5Y3k1d2RYTm9LR1pwYkhSbGNrMWhibUZuWlhJcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LR1ZzWlcwdVpHRjBZUzVsWmx0cFhTNTBlU0E5UFQwZ01qVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1hV3gwWlhKTllXNWhaMlZ5SUQwZ2JtVjNJRk5XUjBSeWIzQlRhR0ZrYjNkRlptWmxZM1FvWm1sc0xDQmxiR1Z0TG1WbVptVmpkSE11WldabVpXTjBSV3hsYldWdWRITmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtWnBiSFJsY25NdWNIVnphQ2htYVd4MFpYSk5ZVzVoWjJWeUtUdGNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWhsYkdWdExtUmhkR0V1WldaYmFWMHVkSGtnUFQwOUlESTRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTlqYjNWdWRDQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYVd4MFpYSk5ZVzVoWjJWeUlEMGdibVYzSUZOV1IwMWhkSFJsTTBWbVptVmpkQ2htYVd3c0lHVnNaVzB1WldabVpXTjBjeTVsWm1abFkzUkZiR1Z0Wlc1MGMxdHBYU3dnWld4bGJTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm1sc2RHVnljeTV3ZFhOb0tHWnBiSFJsY2sxaGJtRm5aWElwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LR052ZFc1MEtYdGNjbHh1SUNBZ0lDQWdJQ0JsYkdWdExtZHNiMkpoYkVSaGRHRXVaR1ZtY3k1aGNIQmxibVJEYUdsc1pDaG1hV3dwTzF4eVhHNGdJQ0FnSUNBZ0lHVnNaVzB1YkdGNVpYSkZiR1Z0Wlc1MExuTmxkRUYwZEhKcFluVjBaU2duWm1sc2RHVnlKeXduZFhKc0tDY2dLeUJzYjJOaGRHbHZia2h5WldZZ0t5QW5JeWNyWm1sc1NXUXJKeWtuS1R0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVVMVpIUldabVpXTjBjeTV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaG1hWEp6ZEVaeVlXMWxLWHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzRnUFNCMGFHbHpMbVpwYkhSbGNuTXViR1Z1WjNSb08xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWnBiSFJsY25OYmFWMHVjbVZ1WkdWeVJuSmhiV1VvWm1seWMzUkdjbUZ0WlNrN1hISmNiaUFnSUNCOVhISmNibjA3WEc1bWRXNWpkR2x2YmlCSlEyOXRjRVZzWlcxbGJuUW9aR0YwWVN4d1lYSmxiblJEYjI1MFlXbHVaWElzWjJ4dlltRnNSR0YwWVN4amIyMXdMQ0J3YkdGalpXaHZiR1JsY2lsN1hISmNiaUFnSUNCMGFHbHpMbDl3WVhKbGJuUXVZMjl1YzNSeWRXTjBiM0l1WTJGc2JDaDBhR2x6TEdSaGRHRXNjR0Z5Wlc1MFEyOXVkR0ZwYm1WeUxHZHNiMkpoYkVSaGRHRXNZMjl0Y0N3Z2NHeGhZMlZvYjJ4a1pYSXBPMXh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxjbk1nUFNCa1lYUmhMbXhoZVdWeWN6dGNjbHh1SUNBZ0lIUm9hWE11YzNWd2NHOXlkSE16WkNBOUlIUnlkV1U3WEhKY2JpQWdJQ0IwYUdsekxtTnZiWEJzWlhSbFRHRjVaWEp6SUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0IwYUdsekxuQmxibVJwYm1kRmJHVnRaVzUwY3lBOUlGdGRPMXh5WEc0Z0lDQWdkR2hwY3k1bGJHVnRaVzUwY3lBOUlIUm9hWE11YkdGNVpYSnpJRDhnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PblJvYVhNdWJHRjVaWEp6TG14bGJtZDBhSDBwSURvZ1cxMDdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1ZEcwcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRHMGdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaDBhR2x6TEhSb2FYTXVaR0YwWVM1MGJTd3dMR2RzYjJKaGJFUmhkR0V1Wm5KaGJXVlNZWFJsTEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG5oMEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25aeWNwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WW5WcGJHUkJiR3hKZEdWdGN5Z3BPMXh5WEc0Z0lDQWdmU0JsYkhObElHbG1LQ0ZuYkc5aVlXeEVZWFJoTG5CeWIyZHlaWE56YVhabFRHOWhaQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVpZFdsc1pFRnNiRWwwWlcxektDazdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVZM0psWVhSbFJXeGxiV1Z1ZENoVFZrZENZWE5sUld4bGJXVnVkQ3dnU1VOdmJYQkZiR1Z0Wlc1MEtUdGNjbHh1WEhKY2JrbERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1YUdsa1pTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTVvYVdSa1pXNHBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNW9hV1JsTG1OaGJHd29kR2hwY3lrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdrc2JHVnVJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5NXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdabTl5S0NCcElEMGdNRHNnYVNBOElHeGxianNnYVNzOU1TQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtVnNaVzFsYm5SelcybGRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRITmJhVjB1YUdsa1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVTVU52YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1d2NtVndZWEpsUm5KaGJXVWdQU0JtZFc1amRHbHZiaWh1ZFcwcGUxeHlYRzRnSUNBZ2RHaHBjeTVmY0dGeVpXNTBMbkJ5WlhCaGNtVkdjbUZ0WlM1allXeHNLSFJvYVhNc2JuVnRLVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVhWE5XYVhOcFlteGxQVDA5Wm1Gc2MyVWdKaVlnSVhSb2FYTXVaR0YwWVM1NGRDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdsbUtIUm9hWE11ZEcwcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCMGFXMWxVbVZ0WVhCd1pXUWdQU0IwYUdsekxuUnRMblk3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2x0WlZKbGJXRndjR1ZrSUQwOVBTQjBhR2x6TG1SaGRHRXViM0FwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbFVtVnRZWEJ3WldRZ1BTQjBhR2x6TG1SaGRHRXViM0FnTFNBeE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNtVmtSbkpoYldVZ1BTQjBhVzFsVW1WdFlYQndaV1E3WEhKY2JpQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpXUkdjbUZ0WlNBOUlHNTFiUzkwYUdsekxtUmhkR0V1YzNJN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMllYSWdhU3hzWlc0Z1BTQjBhR2x6TG1Wc1pXMWxiblJ6TG14bGJtZDBhRHRjY2x4dUlDQWdJR2xtS0NGMGFHbHpMbU52YlhCc1pYUmxUR0Y1WlhKektYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTm9aV05yVEdGNVpYSnpLSFJvYVhNdWNtVnVaR1Z5WldSR2NtRnRaU2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JtYjNJb0lHa2dQU0F3T3lCcElEd2diR1Z1T3lCcEt6MHhJQ2w3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1amIyMXdiR1YwWlV4aGVXVnljeUI4ZkNCMGFHbHpMbVZzWlcxbGJuUnpXMmxkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MGMxdHBYUzV3Y21Wd1lYSmxSbkpoYldVb2RHaHBjeTV5Wlc1a1pYSmxaRVp5WVcxbElDMGdkR2hwY3k1c1lYbGxjbk5iYVYwdWMzUXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia2xEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JtZFc1amRHbHZiaWh3WVhKbGJuUk5ZWFJ5YVhncGUxeHlYRzRnSUNBZ2RtRnlJSEpsYm1SbGNsQmhjbVZ1ZENBOUlIUm9hWE11WDNCaGNtVnVkQzV5Wlc1a1pYSkdjbUZ0WlM1allXeHNLSFJvYVhNc2NHRnlaVzUwVFdGMGNtbDRLVHRjY2x4dUlDQWdJSFpoY2lCcExHeGxiaUE5SUhSb2FYTXViR0Y1WlhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUdsbUtISmxibVJsY2xCaGNtVnVkRDA5UFdaaGJITmxLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWhwWkdVb0tUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYVdZb2RHaHBjeTVvYVdSa1pXNHBJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbk5vYjNjb0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHWnZjaWdnYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tyUFRFZ0tYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbU52YlhCc1pYUmxUR0Y1WlhKeklIeDhJSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExuSmxibVJsY2taeVlXMWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9kR2hwY3k1bWFYSnpkRVp5WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWnBjbk4wUm5KaGJXVWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtsRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjMlYwUld4bGJXVnVkSE1nUFNCbWRXNWpkR2x2YmlobGJHVnRjeWw3WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFsYm5SeklEMGdaV3hsYlhNN1hISmNibjA3WEhKY2JseHlYRzVKUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtZGxkRVZzWlcxbGJuUnpJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUhKbGRIVnliaUIwYUdsekxtVnNaVzFsYm5Sek8xeHlYRzU5TzF4eVhHNWNjbHh1U1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWtaWE4wY205NUlEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1a1pYTjBjbTk1TG1OaGJHd29kR2hwY3k1ZmNHRnlaVzUwS1R0Y2NseHVJQ0FnSUhaaGNpQnBMR3hsYmlBOUlIUm9hWE11YkdGNVpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaWdnYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tyUFRFZ0tYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVZzWlcxbGJuUnpXMmxkS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MGMxdHBYUzVrWlhOMGNtOTVLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1U1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWphR1ZqYTB4aGVXVnljeUE5SUZOV1IxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWphR1ZqYTB4aGVXVnljenRjY2x4dVNVTnZiWEJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVpZFdsc1pFbDBaVzBnUFNCVFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdSSmRHVnRPMXh5WEc1SlEyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUoxYVd4a1FXeHNTWFJsYlhNZ1BTQlRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WW5WcGJHUkJiR3hKZEdWdGN6dGNjbHh1U1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWlkV2xzWkVWc1pXMWxiblJRWVhKbGJuUnBibWNnUFNCVFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdSRmJHVnRaVzUwVUdGeVpXNTBhVzVuTzF4eVhHNUpRMjl0Y0VWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVWwwWlcwZ1BTQlRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxTWFJsYlR0Y2NseHVTVU52YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZKYldGblpTQTlJRk5XUjFKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZKYldGblpUdGNjbHh1U1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWpjbVZoZEdWRGIyMXdJRDBnVTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTnlaV0YwWlVOdmJYQTdYSEpjYmtsRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZM0psWVhSbFUyOXNhV1FnUFNCVFZrZFNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFUyOXNhV1E3WEhKY2JrbERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxVMmhoY0dVZ1BTQlRWa2RTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxVMmhoY0dVN1hISmNia2xEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVkdWNGRDQTlJRk5XUjFKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZVWlhoME8xeHlYRzVKUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTnlaV0YwWlVKaGMyVWdQU0JUVmtkU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsUW1GelpUdGNjbHh1U1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWhjSEJsYm1SRmJHVnRaVzUwU1c1UWIzTWdQU0JUVmtkU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVlYQndaVzVrUld4bGJXVnVkRWx1VUc5ek8xeHlYRzVKUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTm9aV05yVUdWdVpHbHVaMFZzWlcxbGJuUnpJRDBnVTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTm9aV05yVUdWdVpHbHVaMFZzWlcxbGJuUnpPMXh5WEc1SlEyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUZrWkZCbGJtUnBibWRGYkdWdFpXNTBJRDBnVTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1ME8xeHVablZ1WTNScGIyNGdTVWx0WVdkbFJXeGxiV1Z1ZENoa1lYUmhMSEJoY21WdWRFTnZiblJoYVc1bGNpeG5iRzlpWVd4RVlYUmhMR052YlhBc2NHeGhZMlZvYjJ4a1pYSXBlMXh5WEc0Z0lDQWdkR2hwY3k1aGMzTmxkRVJoZEdFZ1BTQm5iRzlpWVd4RVlYUmhMbWRsZEVGemMyVjBSR0YwWVNoa1lYUmhMbkpsWmtsa0tUdGNjbHh1SUNBZ0lIUm9hWE11WDNCaGNtVnVkQzVqYjI1emRISjFZM1J2Y2k1allXeHNLSFJvYVhNc1pHRjBZU3h3WVhKbGJuUkRiMjUwWVdsdVpYSXNaMnh2WW1Gc1JHRjBZU3hqYjIxd0xIQnNZV05sYUc5c1pHVnlLVHRjY2x4dWZWeHlYRzVqY21WaGRHVkZiR1Z0Wlc1MEtGTldSMEpoYzJWRmJHVnRaVzUwTENCSlNXMWhaMlZGYkdWdFpXNTBLVHRjY2x4dVhISmNia2xKYldGblpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTnlaV0YwWlVWc1pXMWxiblJ6SUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ1lYTnpaWFJRWVhSb0lEMGdkR2hwY3k1bmJHOWlZV3hFWVhSaExtZGxkRUZ6YzJWMGMxQmhkR2dvZEdocGN5NWhjM05sZEVSaGRHRXBPMXh5WEc1Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWpjbVZoZEdWRmJHVnRaVzUwY3k1allXeHNLSFJvYVhNcE8xeHlYRzVjY2x4dUlDQWdJSFJvYVhNdWFXNXVaWEpGYkdWdElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkcGJXRm5aU2NwTzF4eVhHNGdJQ0FnZEdocGN5NXBibTVsY2tWc1pXMHVjMlYwUVhSMGNtbGlkWFJsS0NkM2FXUjBhQ2NzZEdocGN5NWhjM05sZEVSaGRHRXVkeXRjSW5CNFhDSXBPMXh5WEc0Z0lDQWdkR2hwY3k1cGJtNWxja1ZzWlcwdWMyVjBRWFIwY21saWRYUmxLQ2RvWldsbmFIUW5MSFJvYVhNdVlYTnpaWFJFWVhSaExtZ3JYQ0p3ZUZ3aUtUdGNjbHh1SUNBZ0lIUm9hWE11YVc1dVpYSkZiR1Z0TG5ObGRFRjBkSEpwWW5WMFpTZ25jSEpsYzJWeWRtVkJjM0JsWTNSU1lYUnBieWNzSjNoTmFXUlpUV2xrSUhOc2FXTmxKeWs3WEhKY2JpQWdJQ0IwYUdsekxtbHVibVZ5Uld4bGJTNXpaWFJCZEhSeWFXSjFkR1ZPVXlnbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1UazVPUzk0YkdsdWF5Y3NKMmh5WldZbkxHRnpjMlYwVUdGMGFDazdYSEpjYmlBZ0lDQjBhR2x6TG0xaGMydGxaRVZzWlcxbGJuUWdQU0IwYUdsekxtbHVibVZ5Uld4bGJUdGNjbHh1SUNBZ0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExtRndjR1Z1WkVOb2FXeGtLSFJvYVhNdWFXNXVaWEpGYkdWdEtUdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVpHRjBZUzVzYmlsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkcFpDY3NkR2hwY3k1a1lYUmhMbXh1S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNWpiQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RqYkdGemN5Y3NkR2hwY3k1a1lYUmhMbU5zS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYm4wN1hISmNibHh5WEc1SlNXMWhaMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSkdjbUZ0WlNBOUlHWjFibU4wYVc5dUtIQmhjbVZ1ZEUxaGRISnBlQ2w3WEhKY2JpQWdJQ0IyWVhJZ2NtVnVaR1Z5VUdGeVpXNTBJRDBnZEdocGN5NWZjR0Z5Wlc1MExuSmxibVJsY2taeVlXMWxMbU5oYkd3b2RHaHBjeXh3WVhKbGJuUk5ZWFJ5YVhncE8xeHlYRzRnSUNBZ2FXWW9jbVZ1WkdWeVVHRnlaVzUwUFQwOVptRnNjMlVwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YUdsa1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhR2xrWkdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTm9iM2NvS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11Wm1seWMzUkdjbUZ0WlNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bWFYSnpkRVp5WVcxbElEMGdabUZzYzJVN1hISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVKU1cxaFoyVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWtaWE4wY205NUlEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1a1pYTjBjbTk1TG1OaGJHd29kR2hwY3k1ZmNHRnlaVzUwS1R0Y2NseHVJQ0FnSUhSb2FYTXVhVzV1WlhKRmJHVnRJRDBnSUc1MWJHdzdYSEpjYm4wN1hHNW1kVzVqZEdsdmJpQkpVMjlzYVdSRmJHVnRaVzUwS0dSaGRHRXNjR0Z5Wlc1MFEyOXVkR0ZwYm1WeUxHZHNiMkpoYkVSaGRHRXNZMjl0Y0N3Z2NHeGhZMlZvYjJ4a1pYSXBlMXh5WEc0Z0lDQWdkR2hwY3k1ZmNHRnlaVzUwTG1OdmJuTjBjblZqZEc5eUxtTmhiR3dvZEdocGN5eGtZWFJoTEhCaGNtVnVkRU52Ym5SaGFXNWxjaXhuYkc5aVlXeEVZWFJoTEdOdmJYQXNJSEJzWVdObGFHOXNaR1Z5S1R0Y2NseHVmVnh5WEc1amNtVmhkR1ZGYkdWdFpXNTBLRk5XUjBKaGMyVkZiR1Z0Wlc1MExDQkpVMjlzYVdSRmJHVnRaVzUwS1R0Y2NseHVYSEpjYmtsVGIyeHBaRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVVnNaVzFsYm5SeklEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdVgzQmhjbVZ1ZEM1amNtVmhkR1ZGYkdWdFpXNTBjeTVqWVd4c0tIUm9hWE1wTzF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJ5WldOMElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkeVpXTjBKeWs3WEhKY2JpQWdJQ0F2THk4dmNtVmpkQzV6ZEhsc1pTNTNhV1IwYUNBOUlIUm9hWE11WkdGMFlTNXpkenRjY2x4dUlDQWdJQzh2THk5eVpXTjBMbk4wZVd4bExtaGxhV2RvZENBOUlIUm9hWE11WkdGMFlTNXphRHRjY2x4dUlDQWdJQzh2THk5eVpXTjBMbk4wZVd4bExtWnBiR3dnUFNCMGFHbHpMbVJoZEdFdWMyTTdYSEpjYmlBZ0lDQnlaV04wTG5ObGRFRjBkSEpwWW5WMFpTZ25kMmxrZEdnbkxIUm9hWE11WkdGMFlTNXpkeWs3WEhKY2JpQWdJQ0J5WldOMExuTmxkRUYwZEhKcFluVjBaU2duYUdWcFoyaDBKeXgwYUdsekxtUmhkR0V1YzJncE8xeHlYRzRnSUNBZ2NtVmpkQzV6WlhSQmRIUnlhV0oxZEdVb0oyWnBiR3duTEhSb2FYTXVaR0YwWVM1ell5azdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDNWhjSEJsYm1SRGFHbHNaQ2h5WldOMEtUdGNjbHh1SUNBZ0lIUm9hWE11YVc1dVpYSkZiR1Z0SUQwZ2NtVmpkRHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaR0YwWVM1c2JpbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzZEdocGN5NWtZWFJoTG14dUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LSFJvYVhNdVpHRjBZUzVqYkNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0NkamJHRnpjeWNzZEdocGN5NWtZWFJoTG1Oc0tUdGNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtsVGIyeHBaRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbkpsYm1SbGNrWnlZVzFsSUQwZ1NVbHRZV2RsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVN1hISmNia2xUYjJ4cFpFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtUmxjM1J5YjNrZ1BTQkpTVzFoWjJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1a1pYTjBjbTk1TzF4eVhHNWNiblpoY2lCaGJtbHRZWFJwYjI1TllXNWhaMlZ5SUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjJZWElnYlc5a2RXeGxUMklnUFNCN2ZUdGNjbHh1SUNBZ0lIWmhjaUJ5WldkcGMzUmxjbVZrUVc1cGJXRjBhVzl1Y3lBOUlGdGRPMXh5WEc0Z0lDQWdkbUZ5SUdsdWFYUlVhVzFsSUQwZ01EdGNjbHh1SUNBZ0lIWmhjaUJzWlc0Z1BTQXdPMXh5WEc0Z0lDQWdkbUZ5SUdsa2JHVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lIWmhjaUJ3YkdGNWFXNW5RVzVwYldGMGFXOXVjMDUxYlNBOUlEQTdYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnY21WdGIzWmxSV3hsYldWdWRDaGxkaWw3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCaGJtbHRTWFJsYlNBOUlHVjJMblJoY21kbGREdGNjbHh1SUNBZ0lDQWdJQ0IzYUdsc1pTaHBQR3hsYmlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jbVZuYVhOMFpYSmxaRUZ1YVcxaGRHbHZibk5iYVYwdVlXNXBiV0YwYVc5dUlEMDlQU0JoYm1sdFNYUmxiU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVm5hWE4wWlhKbFpFRnVhVzFoZEdsdmJuTXVjM0JzYVdObEtHa3NJREVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQXRQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVnVJQzA5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWdoWVc1cGJVbDBaVzB1YVhOUVlYVnpaV1FwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4xWW5SeVlXTjBVR3hoZVdsdVowTnZkVzUwS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FTQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ5WldkcGMzUmxja0Z1YVcxaGRHbHZiaWhsYkdWdFpXNTBMQ0JoYm1sdFlYUnBiMjVFWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaFpXeGxiV1Z1ZENsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVDB3TzF4eVhHNGdJQ0FnSUNBZ0lIZG9hV3hsS0drOGJHVnVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvY21WbmFYTjBaWEpsWkVGdWFXMWhkR2x2Ym5OYmFWMHVaV3hsYlNBOVBTQmxiR1Z0Wlc1MElDWW1JSEpsWjJsemRHVnlaV1JCYm1sdFlYUnBiMjV6VzJsZExtVnNaVzBnSVQwOUlHNTFiR3dnS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCeVpXZHBjM1JsY21Wa1FXNXBiV0YwYVc5dWMxdHBYUzVoYm1sdFlYUnBiMjQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhU3M5TVR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHRnVhVzFKZEdWdElEMGdibVYzSUVGdWFXMWhkR2x2YmtsMFpXMG9LVHRjY2x4dUlDQWdJQ0FnSUNCelpYUjFjRUZ1YVcxaGRHbHZiaWhoYm1sdFNYUmxiU3dnWld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ1lXNXBiVWwwWlcwdWMyVjBSR0YwWVNobGJHVnRaVzUwTENCaGJtbHRZWFJwYjI1RVlYUmhLVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWVc1cGJVbDBaVzA3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1lXUmtVR3hoZVdsdVowTnZkVzUwS0NsN1hISmNiaUFnSUNBZ0lDQWdjR3hoZVdsdVowRnVhVzFoZEdsdmJuTk9kVzBnS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0JoWTNScGRtRjBaU2dwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITjFZblJ5WVdOMFVHeGhlV2x1WjBOdmRXNTBLQ2w3WEhKY2JpQWdJQ0FnSUNBZ2NHeGhlV2x1WjBGdWFXMWhkR2x2Ym5OT2RXMGdMVDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh3YkdGNWFXNW5RVzVwYldGMGFXOXVjMDUxYlNBOVBUMGdNQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xrYkdWa0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYzJWMGRYQkJibWx0WVhScGIyNG9ZVzVwYlVsMFpXMHNJR1ZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdJQ0FnSUdGdWFXMUpkR1Z0TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJSbGMzUnliM2tuTEhKbGJXOTJaVVZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUdGdWFXMUpkR1Z0TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjE5aFkzUnBkbVVuTEdGa1pGQnNZWGxwYm1kRGIzVnVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ1lXNXBiVWwwWlcwdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblgybGtiR1VuTEhOMVluUnlZV04wVUd4aGVXbHVaME52ZFc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0J5WldkcGMzUmxjbVZrUVc1cGJXRjBhVzl1Y3k1d2RYTm9LSHRsYkdWdE9pQmxiR1Z0Wlc1MExHRnVhVzFoZEdsdmJqcGhibWx0U1hSbGJYMHBPMXh5WEc0Z0lDQWdJQ0FnSUd4bGJpQXJQU0F4TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHeHZZV1JCYm1sdFlYUnBiMjRvY0dGeVlXMXpLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZVzVwYlVsMFpXMGdQU0J1WlhjZ1FXNXBiV0YwYVc5dVNYUmxiU2dwTzF4eVhHNGdJQ0FnSUNBZ0lITmxkSFZ3UVc1cGJXRjBhVzl1S0dGdWFXMUpkR1Z0TENCdWRXeHNLVHRjY2x4dUlDQWdJQ0FnSUNCaGJtbHRTWFJsYlM1elpYUlFZWEpoYlhNb2NHRnlZVzF6S1R0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1lXNXBiVWwwWlcwN1hISmNiaUFnSUNCOVhISmNibHh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhObGRGTndaV1ZrS0haaGJDeGhibWx0WVhScGIyNHBlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFoybHpkR1Z5WldSQmJtbHRZWFJwYjI1elcybGRMbUZ1YVcxaGRHbHZiaTV6WlhSVGNHVmxaQ2gyWVd3c0lHRnVhVzFoZEdsdmJpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxkRVJwY21WamRHbHZiaWgyWVd3c0lHRnVhVzFoZEdsdmJpbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHazdYSEpjYmlBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WbmFYTjBaWEpsWkVGdWFXMWhkR2x2Ym5OYmFWMHVZVzVwYldGMGFXOXVMbk5sZEVScGNtVmpkR2x2YmloMllXd3NJR0Z1YVcxaGRHbHZiaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSEJzWVhrb1lXNXBiV0YwYVc5dUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FUdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WldkcGMzUmxjbVZrUVc1cGJXRjBhVzl1YzF0cFhTNWhibWx0WVhScGIyNHVjR3hoZVNoaGJtbHRZWFJwYjI0cE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCdGIzWmxSbkpoYldVZ0tIWmhiSFZsTENCaGJtbHRZWFJwYjI0cElIdGNjbHh1SUNBZ0lDQWdJQ0JwYm1sMFZHbHRaU0E5SUVSaGRHVXVibTkzS0NrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdrN1hISmNiaUFnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZuYVhOMFpYSmxaRUZ1YVcxaGRHbHZibk5iYVYwdVlXNXBiV0YwYVc5dUxtMXZkbVZHY21GdFpTaDJZV3gxWlN4aGJtbHRZWFJwYjI0cE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCeVpYTjFiV1VvYm05M1ZHbHRaU2tnZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1pXeGhjSE5sWkZScGJXVWdQU0J1YjNkVWFXMWxJQzBnYVc1cGRGUnBiV1U3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2s3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVm5hWE4wWlhKbFpFRnVhVzFoZEdsdmJuTmJhVjB1WVc1cGJXRjBhVzl1TG1Ga2RtRnVZMlZVYVcxbEtHVnNZWEJ6WldSVWFXMWxLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhVzVwZEZScGJXVWdQU0J1YjNkVWFXMWxPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtDRnBaR3hsWkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXNWtiM2N1Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbEtISmxjM1Z0WlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdacGNuTjBLRzV2ZDFScGJXVXBlMXh5WEc0Z0lDQWdJQ0FnSUdsdWFYUlVhVzFsSUQwZ2JtOTNWR2x0WlR0Y2NseHVJQ0FnSUNBZ0lDQjNhVzVrYjNjdWNtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxLSEpsYzNWdFpTazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnY0dGMWMyVW9ZVzVwYldGMGFXOXVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2s3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVm5hWE4wWlhKbFpFRnVhVzFoZEdsdmJuTmJhVjB1WVc1cGJXRjBhVzl1TG5CaGRYTmxLR0Z1YVcxaGRHbHZiaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR2R2Vkc5QmJtUlRkRzl3S0haaGJIVmxMR2x6Um5KaGJXVXNZVzVwYldGMGFXOXVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2s3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVm5hWE4wWlhKbFpFRnVhVzFoZEdsdmJuTmJhVjB1WVc1cGJXRjBhVzl1TG1kdlZHOUJibVJUZEc5d0tIWmhiSFZsTEdselJuSmhiV1VzWVc1cGJXRjBhVzl1S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYzNSdmNDaGhibWx0WVhScGIyNHBJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXZHBjM1JsY21Wa1FXNXBiV0YwYVc5dWMxdHBYUzVoYm1sdFlYUnBiMjR1YzNSdmNDaGhibWx0WVhScGIyNHBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQjBiMmRuYkdWUVlYVnpaU2hoYm1sdFlYUnBiMjRwSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVR0Y2NseHVJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV2RwYzNSbGNtVmtRVzVwYldGMGFXOXVjMXRwWFM1aGJtbHRZWFJwYjI0dWRHOW5aMnhsVUdGMWMyVW9ZVzVwYldGMGFXOXVLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdaR1Z6ZEhKdmVTaGhibWx0WVhScGIyNHBJSHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDBvYkdWdUxURXBPMmsrUFRBN2FTMDlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsWjJsemRHVnlaV1JCYm1sdFlYUnBiMjV6VzJsZExtRnVhVzFoZEdsdmJpNWtaWE4wY205NUtHRnVhVzFoZEdsdmJpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxZWEpqYUVGdWFXMWhkR2x2Ym5Nb1lXNXBiV0YwYVc5dVJHRjBZU3dnYzNSaGJtUmhiRzl1WlN3Z2NtVnVaR1Z5WlhJcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCaGJtbHRSV3hsYldWdWRITWdQU0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwYzBKNVEyeGhjM05PWVcxbEtDZGliMlI1Ylc5MmFXNG5LVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdZVzVwYlVWc1pXMWxiblJ6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHlaVzVrWlhKbGNpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFJXeGxiV1Z1ZEhOYmFWMHVjMlYwUVhSMGNtbGlkWFJsS0Nka1lYUmhMV0p0TFhSNWNHVW5MSEpsYm1SbGNtVnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV2RwYzNSbGNrRnVhVzFoZEdsdmJpaGhibWx0Uld4bGJXVnVkSE5iYVYwc0lHRnVhVzFoZEdsdmJrUmhkR0VwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmloemRHRnVaR0ZzYjI1bElDWW1JR3hsYmlBOVBUMGdNQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGeVpXNWtaWEpsY2lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpQTlJQ2R6ZG1jbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmliMlI1SUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRITkNlVlJoWjA1aGJXVW9KMkp2WkhrbktWc3dYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbTlrZVM1cGJtNWxja2hVVFV3Z1BTQW5KenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdScGRpQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhZdWMzUjViR1V1ZDJsa2RHZ2dQU0FuTVRBd0pTYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBkaTV6ZEhsc1pTNW9aV2xuYUhRZ1BTQW5NVEF3SlNjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGRpNXpaWFJCZEhSeWFXSjFkR1VvSjJSaGRHRXRZbTB0ZEhsd1pTY3NjbVZ1WkdWeVpYSXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliMlI1TG1Gd2NHVnVaRU5vYVd4a0tHUnBkaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsWjJsemRHVnlRVzVwYldGMGFXOXVLR1JwZGl3Z1lXNXBiV0YwYVc5dVJHRjBZU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSEpsYzJsNlpTZ3BlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFoybHpkR1Z5WldSQmJtbHRZWFJwYjI1elcybGRMbUZ1YVcxaGRHbHZiaTV5WlhOcGVtVW9LVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjM1JoY25Rb0tYdGNjbHh1SUNBZ0lDQWdJQ0IzYVc1a2IzY3VjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0dacGNuTjBLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCaFkzUnBkbUYwWlNncGUxeHlYRzRnSUNBZ0lDQWdJR2xtS0dsa2JHVmtLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1JzWldRZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsdVpHOTNMbkpsY1hWbGMzUkJibWx0WVhScGIyNUdjbUZ0WlNobWFYSnpkQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzh2YzNSaGNuUW9LVHRjY2x4dVhISmNiaUFnSUNCelpYUlVhVzFsYjNWMEtITjBZWEowTERBcE8xeHlYRzVjY2x4dUlDQWdJRzF2WkhWc1pVOWlMbkpsWjJsemRHVnlRVzVwYldGMGFXOXVJRDBnY21WbmFYTjBaWEpCYm1sdFlYUnBiMjQ3WEhKY2JpQWdJQ0J0YjJSMWJHVlBZaTVzYjJGa1FXNXBiV0YwYVc5dUlEMGdiRzloWkVGdWFXMWhkR2x2Ymp0Y2NseHVJQ0FnSUcxdlpIVnNaVTlpTG5ObGRGTndaV1ZrSUQwZ2MyVjBVM0JsWldRN1hISmNiaUFnSUNCdGIyUjFiR1ZQWWk1elpYUkVhWEpsWTNScGIyNGdQU0J6WlhSRWFYSmxZM1JwYjI0N1hISmNiaUFnSUNCdGIyUjFiR1ZQWWk1d2JHRjVJRDBnY0d4aGVUdGNjbHh1SUNBZ0lHMXZaSFZzWlU5aUxtMXZkbVZHY21GdFpTQTlJRzF2ZG1WR2NtRnRaVHRjY2x4dUlDQWdJRzF2WkhWc1pVOWlMbkJoZFhObElEMGdjR0YxYzJVN1hISmNiaUFnSUNCdGIyUjFiR1ZQWWk1emRHOXdJRDBnYzNSdmNEdGNjbHh1SUNBZ0lHMXZaSFZzWlU5aUxuUnZaMmRzWlZCaGRYTmxJRDBnZEc5bloyeGxVR0YxYzJVN1hISmNiaUFnSUNCdGIyUjFiR1ZQWWk1elpXRnlZMmhCYm1sdFlYUnBiMjV6SUQwZ2MyVmhjbU5vUVc1cGJXRjBhVzl1Y3p0Y2NseHVJQ0FnSUcxdlpIVnNaVTlpTG5KbGMybDZaU0E5SUhKbGMybDZaVHRjY2x4dUlDQWdJRzF2WkhWc1pVOWlMbk4wWVhKMElEMGdjM1JoY25RN1hISmNiaUFnSUNCdGIyUjFiR1ZQWWk1bmIxUnZRVzVrVTNSdmNDQTlJR2R2Vkc5QmJtUlRkRzl3TzF4eVhHNGdJQ0FnYlc5a2RXeGxUMkl1WkdWemRISnZlU0E5SUdSbGMzUnliM2s3WEhKY2JpQWdJQ0J5WlhSMWNtNGdiVzlrZFd4bFQySTdYSEpjYm4wb0tTazdYSEpjYmx4dWRtRnlJRUZ1YVcxaGRHbHZia2wwWlcwZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0IwYUdsekxsOWpZbk1nUFNCYlhUdGNjbHh1SUNBZ0lIUm9hWE11Ym1GdFpTQTlJQ2NuTzF4eVhHNGdJQ0FnZEdocGN5NXdZWFJvSUQwZ0p5YzdYSEpjYmlBZ0lDQjBhR2x6TG1selRHOWhaR1ZrSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0IwYUdsekxtTjFjbkpsYm5SR2NtRnRaU0E5SURBN1hISmNiaUFnSUNCMGFHbHpMbU4xY25KbGJuUlNZWGRHY21GdFpTQTlJREE3WEhKY2JpQWdJQ0IwYUdsekxuUnZkR0ZzUm5KaGJXVnpJRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVabkpoYldWU1lYUmxJRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVabkpoYldWTmRXeDBJRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVjR3hoZVZOd1pXVmtJRDBnTVR0Y2NseHVJQ0FnSUhSb2FYTXVjR3hoZVVScGNtVmpkR2x2YmlBOUlERTdYSEpjYmlBZ0lDQjBhR2x6TG5CbGJtUnBibWRGYkdWdFpXNTBjeUE5SURBN1hISmNiaUFnSUNCMGFHbHpMbkJzWVhsRGIzVnVkQ0E5SURBN1hISmNiaUFnSUNCMGFHbHpMbkJ5WlhKbGJtUmxja1p5WVcxbGMwWnNZV2NnUFNCMGNuVmxPMXh5WEc0Z0lDQWdkR2hwY3k1aGJtbHRZWFJwYjI1RVlYUmhJRDBnZTMwN1hISmNiaUFnSUNCMGFHbHpMbXhoZVdWeWN5QTlJRnRkTzF4eVhHNGdJQ0FnZEdocGN5NWhjM05sZEhNZ1BTQmJYVHRjY2x4dUlDQWdJSFJvYVhNdWFYTlFZWFZ6WldRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnZEdocGN5NWhkWFJ2Y0d4aGVTQTlJR1poYkhObE8xeHlYRzRnSUNBZ2RHaHBjeTVzYjI5d0lEMGdkSEoxWlR0Y2NseHVJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpYSWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVoYm1sdFlYUnBiMjVKUkNBOUlISmhibVJ2YlZOMGNtbHVaeWd4TUNrN1hISmNiaUFnSUNCMGFHbHpMbk5qWVd4bFRXOWtaU0E5SUNkbWFYUW5PMXh5WEc0Z0lDQWdkR2hwY3k1aGMzTmxkSE5RWVhSb0lEMGdKeWM3WEhKY2JpQWdJQ0IwYUdsekxuUnBiV1ZEYjIxd2JHVjBaV1FnUFNBd08xeHlYRzRnSUNBZ2RHaHBjeTV6WldkdFpXNTBVRzl6SUQwZ01EdGNjbHh1SUNBZ0lIUm9hWE11YzNWaVpuSmhiV1ZGYm1GaWJHVmtJRDBnYzNWaVpuSmhiV1ZGYm1GaWJHVmtPMXh5WEc0Z0lDQWdkR2hwY3k1elpXZHRaVzUwY3lBOUlGdGRPMXh5WEc0Z0lDQWdkR2hwY3k1d1pXNWthVzVuVTJWbmJXVnVkQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdkR2hwY3k1ZmFXUnNaU0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjBhR2x6TG5CeWIycGxZM1JKYm5SbGNtWmhZMlVnUFNCUWNtOXFaV04wU1c1MFpYSm1ZV05sS0NrN1hISmNibjA3WEhKY2JseHlYRzVCYm1sdFlYUnBiMjVKZEdWdExuQnliM1J2ZEhsd1pTNXpaWFJRWVhKaGJYTWdQU0JtZFc1amRHbHZiaWh3WVhKaGJYTXBJSHRjY2x4dUlDQWdJSFpoY2lCelpXeG1JRDBnZEdocGN6dGNjbHh1SUNBZ0lHbG1LSEJoY21GdGN5NWpiMjUwWlhoMEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiblJsZUhRZ1BTQndZWEpoYlhNdVkyOXVkR1Y0ZER0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIQmhjbUZ0Y3k1M2NtRndjR1Z5SUh4OElIQmhjbUZ0Y3k1amIyNTBZV2x1WlhJcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWQzSmhjSEJsY2lBOUlIQmhjbUZ0Y3k1M2NtRndjR1Z5SUh4OElIQmhjbUZ0Y3k1amIyNTBZV2x1WlhJN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMllYSWdZVzVwYlZSNWNHVWdQU0J3WVhKaGJYTXVZVzVwYlZSNWNHVWdQeUJ3WVhKaGJYTXVZVzVwYlZSNWNHVWdPaUJ3WVhKaGJYTXVjbVZ1WkdWeVpYSWdQeUJ3WVhKaGJYTXVjbVZ1WkdWeVpYSWdPaUFuYzNabkp6dGNjbHh1SUNBZ0lITjNhWFJqYUNoaGJtbHRWSGx3WlNsN1hISmNiaUFnSUNBZ0lDQWdZMkZ6WlNBblkyRnVkbUZ6SnpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhKbGNpQTlJRzVsZHlCRFlXNTJZWE5TWlc1a1pYSmxjaWgwYUdsekxDQndZWEpoYlhNdWNtVnVaR1Z5WlhKVFpYUjBhVzVuY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUdOaGMyVWdKM04yWnljNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpYSWdQU0J1WlhjZ1UxWkhVbVZ1WkdWeVpYSW9kR2hwY3l3Z2NHRnlZVzF6TG5KbGJtUmxjbVZ5VTJWMGRHbHVaM01wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0JqWVhObElDZG9lV0p5YVdRbk9seHlYRzRnSUNBZ0lDQWdJR05oYzJVZ0oyaDBiV3duT2x4eVhHNGdJQ0FnSUNBZ0lHUmxabUYxYkhRNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpYSWdQU0J1WlhjZ1NIbGljbWxrVW1WdVpHVnlaWElvZEdocGN5d2djR0Z5WVcxekxuSmxibVJsY21WeVUyVjBkR2x1WjNNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWNtVnVaR1Z5WlhJdWMyVjBVSEp2YW1WamRFbHVkR1Z5Wm1GalpTaDBhR2x6TG5CeWIycGxZM1JKYm5SbGNtWmhZMlVwTzF4eVhHNGdJQ0FnZEdocGN5NWhibWx0Vkhsd1pTQTlJR0Z1YVcxVWVYQmxPMXh5WEc1Y2NseHVJQ0FnSUdsbUtIQmhjbUZ0Y3k1c2IyOXdJRDA5UFNBbkp5QjhmQ0J3WVhKaGJYTXViRzl2Y0NBOVBUMGdiblZzYkNsN1hISmNiaUFnSUNCOVpXeHpaU0JwWmlod1lYSmhiWE11Ykc5dmNDQTlQVDBnWm1Gc2MyVXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViRzl2Y0NBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZldWc2MyVWdhV1lvY0dGeVlXMXpMbXh2YjNBZ1BUMDlJSFJ5ZFdVcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHOXZjQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG14dmIzQWdQU0J3WVhKelpVbHVkQ2h3WVhKaGJYTXViRzl2Y0NrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbUYxZEc5d2JHRjVJRDBnSjJGMWRHOXdiR0Y1SnlCcGJpQndZWEpoYlhNZ1B5QndZWEpoYlhNdVlYVjBiM0JzWVhrZ09pQjBjblZsTzF4eVhHNGdJQ0FnZEdocGN5NXVZVzFsSUQwZ2NHRnlZVzF6TG01aGJXVWdQeUJ3WVhKaGJYTXVibUZ0WlNBNklDQW5KenRjY2x4dUlDQWdJSFJvYVhNdWNISmxjbVZ1WkdWeVJuSmhiV1Z6Um14aFp5QTlJQ2R3Y21WeVpXNWtaWEluSUdsdUlIQmhjbUZ0Y3lBL0lIQmhjbUZ0Y3k1d2NtVnlaVzVrWlhJZ09pQjBjblZsTzF4eVhHNGdJQ0FnZEdocGN5NWhkWFJ2Ykc5aFpGTmxaMjFsYm5SeklEMGdjR0Z5WVcxekxtaGhjMDkzYmxCeWIzQmxjblI1S0NkaGRYUnZiRzloWkZObFoyMWxiblJ6SnlrZ1B5QndZWEpoYlhNdVlYVjBiMnh2WVdSVFpXZHRaVzUwY3lBNklDQjBjblZsTzF4eVhHNGdJQ0FnYVdZb2NHRnlZVzF6TG1GdWFXMWhkR2x2YmtSaGRHRXBlMXh5WEc0Z0lDQWdJQ0FnSUhObGJHWXVZMjl1Wm1sblFXNXBiV0YwYVc5dUtIQmhjbUZ0Y3k1aGJtbHRZWFJwYjI1RVlYUmhLVHRjY2x4dUlDQWdJSDFsYkhObElHbG1LSEJoY21GdGN5NXdZWFJvS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh3WVhKaGJYTXVjR0YwYUM1emRXSnpkSElvTFRRcElDRTlJQ2RxYzI5dUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3WVhKaGJYTXVjR0YwYUM1emRXSnpkSElvTFRFc0lERXBJQ0U5SUNjdkp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGeVlXMXpMbkJoZEdnZ0t6MGdKeThuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY21GdGN5NXdZWFJvSUNzOUlDZGtZWFJoTG1wemIyNG5PMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIaG9jaUE5SUc1bGR5QllUVXhJZEhSd1VtVnhkV1Z6ZENncE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0hCaGNtRnRjeTV3WVhSb0xteGhjM1JKYm1SbGVFOW1LQ2RjWEZ4Y0p5a2dJVDBnTFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJoZEdnZ1BTQndZWEpoYlhNdWNHRjBhQzV6ZFdKemRISW9NQ3h3WVhKaGJYTXVjR0YwYUM1c1lYTjBTVzVrWlhoUFppZ25YRnhjWENjcEt6RXBPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CaGRHZ2dQU0J3WVhKaGJYTXVjR0YwYUM1emRXSnpkSElvTUN4d1lYSmhiWE11Y0dGMGFDNXNZWE4wU1c1a1pYaFBaaWduTHljcEt6RXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1GemMyVjBjMUJoZEdnZ1BTQndZWEpoYlhNdVlYTnpaWFJ6VUdGMGFEdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWnBiR1ZPWVcxbElEMGdjR0Z5WVcxekxuQmhkR2d1YzNWaWMzUnlLSEJoY21GdGN5NXdZWFJvTG14aGMzUkpibVJsZUU5bUtDY3ZKeWtyTVNrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bWFXeGxUbUZ0WlNBOUlIUm9hWE11Wm1sc1pVNWhiV1V1YzNWaWMzUnlLREFzZEdocGN5NW1hV3hsVG1GdFpTNXNZWE4wU1c1a1pYaFBaaWduTG1wemIyNG5LU2s3WEhKY2JpQWdJQ0FnSUNBZ2VHaHlMbTl3Wlc0b0owZEZWQ2NzSUhCaGNtRnRjeTV3WVhSb0xDQjBjblZsS1R0Y2NseHVJQ0FnSUNBZ0lDQjRhSEl1YzJWdVpDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhob2NpNXZibkpsWVdSNWMzUmhkR1ZqYUdGdVoyVWdQU0JtZFc1amRHbHZiaUFvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRhSEl1Y21WaFpIbFRkR0YwWlNBOVBTQTBLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDRhSEl1YzNSaGRIVnpJRDA5SURJd01DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVnNaaTVqYjI1bWFXZEJibWx0WVhScGIyNG9TbE5QVGk1d1lYSnpaU2g0YUhJdWNtVnpjRzl1YzJWVVpYaDBLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbmw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnlaWE53YjI1elpTQTlJRXBUVDA0dWNHRnljMlVvZUdoeUxuSmxjM0J2Ym5ObFZHVjRkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGJHWXVZMjl1Wm1sblFXNXBiV0YwYVc5dUtISmxjM0J2Ym5ObEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVkyRjBZMmdvWlhKeUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5TzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdWMyVjBSR0YwWVNBOUlHWjFibU4wYVc5dUlDaDNjbUZ3Y0dWeUxDQmhibWx0WVhScGIyNUVZWFJoS1NCN1hISmNiaUFnSUNCMllYSWdjR0Z5WVcxeklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhkeVlYQndaWEk2SUhkeVlYQndaWElzWEhKY2JpQWdJQ0FnSUNBZ1lXNXBiV0YwYVc5dVJHRjBZVG9nWVc1cGJXRjBhVzl1UkdGMFlTQS9JQ2gwZVhCbGIyWWdZVzVwYldGMGFXOXVSR0YwWVNBZ1BUMDlJRndpYjJKcVpXTjBYQ0lwSUQ4Z1lXNXBiV0YwYVc5dVJHRjBZU0E2SUVwVFQwNHVjR0Z5YzJVb1lXNXBiV0YwYVc5dVJHRjBZU2tnT2lCdWRXeHNYSEpjYmlBZ0lDQjlPMXh5WEc0Z0lDQWdkbUZ5SUhkeVlYQndaWEpCZEhSeWFXSjFkR1Z6SUQwZ2QzSmhjSEJsY2k1aGRIUnlhV0oxZEdWek8xeHlYRzVjY2x4dUlDQWdJSEJoY21GdGN5NXdZWFJvSUQwZ2QzSmhjSEJsY2tGMGRISnBZblYwWlhNdVoyVjBUbUZ0WldSSmRHVnRLQ2RrWVhSaExXRnVhVzFoZEdsdmJpMXdZWFJvSnlrZ1B5QjNjbUZ3Y0dWeVFYUjBjbWxpZFhSbGN5NW5aWFJPWVcxbFpFbDBaVzBvSjJSaGRHRXRZVzVwYldGMGFXOXVMWEJoZEdnbktTNTJZV3gxWlNBNklIZHlZWEJ3WlhKQmRIUnlhV0oxZEdWekxtZGxkRTVoYldWa1NYUmxiU2duWkdGMFlTMWliUzF3WVhSb0p5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WW0wdGNHRjBhQ2NwTG5aaGJIVmxJRG9nSUhkeVlYQndaWEpCZEhSeWFXSjFkR1Z6TG1kbGRFNWhiV1ZrU1hSbGJTZ25ZbTB0Y0dGMGFDY3BJRDhnZDNKaGNIQmxja0YwZEhKcFluVjBaWE11WjJWMFRtRnRaV1JKZEdWdEtDZGliUzF3WVhSb0p5a3VkbUZzZFdVZ09pQW5KenRjY2x4dUlDQWdJSEJoY21GdGN5NWhibWx0Vkhsd1pTQTlJSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFoYm1sdExYUjVjR1VuS1NBL0lIZHlZWEJ3WlhKQmRIUnlhV0oxZEdWekxtZGxkRTVoYldWa1NYUmxiU2duWkdGMFlTMWhibWx0TFhSNWNHVW5LUzUyWVd4MVpTQTZJSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFpYlMxMGVYQmxKeWtnUHlCM2NtRndjR1Z5UVhSMGNtbGlkWFJsY3k1blpYUk9ZVzFsWkVsMFpXMG9KMlJoZEdFdFltMHRkSGx3WlNjcExuWmhiSFZsSURvZ2QzSmhjSEJsY2tGMGRISnBZblYwWlhNdVoyVjBUbUZ0WldSSmRHVnRLQ2RpYlMxMGVYQmxKeWtnUHlCM2NtRndjR1Z5UVhSMGNtbGlkWFJsY3k1blpYUk9ZVzFsWkVsMFpXMG9KMkp0TFhSNWNHVW5LUzUyWVd4MVpTQTZJQ0IzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WW0wdGNtVnVaR1Z5WlhJbktTQS9JSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFpYlMxeVpXNWtaWEpsY2ljcExuWmhiSFZsSURvZ2QzSmhjSEJsY2tGMGRISnBZblYwWlhNdVoyVjBUbUZ0WldSSmRHVnRLQ2RpYlMxeVpXNWtaWEpsY2ljcElEOGdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0NkaWJTMXlaVzVrWlhKbGNpY3BMblpoYkhWbElEb2dKMk5oYm5aaGN5YzdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHeHZiM0FnUFNCM2NtRndjR1Z5UVhSMGNtbGlkWFJsY3k1blpYUk9ZVzFsWkVsMFpXMG9KMlJoZEdFdFlXNXBiUzFzYjI5d0p5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WVc1cGJTMXNiMjl3SnlrdWRtRnNkV1VnT2lBZ2QzSmhjSEJsY2tGMGRISnBZblYwWlhNdVoyVjBUbUZ0WldSSmRHVnRLQ2RrWVhSaExXSnRMV3h2YjNBbktTQS9JSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFpYlMxc2IyOXdKeWt1ZG1Gc2RXVWdPaUFnZDNKaGNIQmxja0YwZEhKcFluVjBaWE11WjJWMFRtRnRaV1JKZEdWdEtDZGliUzFzYjI5d0p5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oySnRMV3h2YjNBbktTNTJZV3gxWlNBNklDY25PMXh5WEc0Z0lDQWdhV1lvYkc5dmNDQTlQVDBnSnljcGUxeHlYRzRnSUNBZ2ZXVnNjMlVnYVdZb2JHOXZjQ0E5UFQwZ0oyWmhiSE5sSnlsN1hISmNiaUFnSUNBZ0lDQWdjR0Z5WVcxekxteHZiM0FnUFNCbVlXeHpaVHRjY2x4dUlDQWdJSDFsYkhObElHbG1LR3h2YjNBZ1BUMDlJQ2QwY25WbEp5bDdYSEpjYmlBZ0lDQWdJQ0FnY0dGeVlXMXpMbXh2YjNBZ1BTQjBjblZsTzF4eVhHNGdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnY0dGeVlXMXpMbXh2YjNBZ1BTQndZWEp6WlVsdWRDaHNiMjl3S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhaaGNpQmhkWFJ2Y0d4aGVTQTlJSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFoYm1sdExXRjFkRzl3YkdGNUp5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WVc1cGJTMWhkWFJ2Y0d4aGVTY3BMblpoYkhWbElEb2dJSGR5WVhCd1pYSkJkSFJ5YVdKMWRHVnpMbWRsZEU1aGJXVmtTWFJsYlNnblpHRjBZUzFpYlMxaGRYUnZjR3hoZVNjcElEOGdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0Nka1lYUmhMV0p0TFdGMWRHOXdiR0Y1SnlrdWRtRnNkV1VnT2lBZ2QzSmhjSEJsY2tGMGRISnBZblYwWlhNdVoyVjBUbUZ0WldSSmRHVnRLQ2RpYlMxaGRYUnZjR3hoZVNjcElEOGdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0NkaWJTMWhkWFJ2Y0d4aGVTY3BMblpoYkhWbElEb2dkSEoxWlR0Y2NseHVJQ0FnSUhCaGNtRnRjeTVoZFhSdmNHeGhlU0E5SUdGMWRHOXdiR0Y1SUNFOVBTQmNJbVpoYkhObFhDSTdYSEpjYmx4eVhHNGdJQ0FnY0dGeVlXMXpMbTVoYldVZ1BTQjNjbUZ3Y0dWeVFYUjBjbWxpZFhSbGN5NW5aWFJPWVcxbFpFbDBaVzBvSjJSaGRHRXRibUZ0WlNjcElEOGdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0Nka1lYUmhMVzVoYldVbktTNTJZV3gxWlNBNklDQjNjbUZ3Y0dWeVFYUjBjbWxpZFhSbGN5NW5aWFJPWVcxbFpFbDBaVzBvSjJSaGRHRXRZbTB0Ym1GdFpTY3BJRDhnZDNKaGNIQmxja0YwZEhKcFluVjBaWE11WjJWMFRtRnRaV1JKZEdWdEtDZGtZWFJoTFdKdExXNWhiV1VuS1M1MllXeDFaU0E2SUhkeVlYQndaWEpCZEhSeWFXSjFkR1Z6TG1kbGRFNWhiV1ZrU1hSbGJTZ25ZbTB0Ym1GdFpTY3BJRDhnZDNKaGNIQmxja0YwZEhKcFluVjBaWE11WjJWMFRtRnRaV1JKZEdWdEtDZGliUzF1WVcxbEp5a3VkbUZzZFdVZ09pQWdKeWM3WEhKY2JpQWdJQ0IyWVhJZ2NISmxjbVZ1WkdWeUlEMGdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0Nka1lYUmhMV0Z1YVcwdGNISmxjbVZ1WkdWeUp5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WVc1cGJTMXdjbVZ5Wlc1a1pYSW5LUzUyWVd4MVpTQTZJQ0IzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WW0wdGNISmxjbVZ1WkdWeUp5a2dQeUIzY21Gd2NHVnlRWFIwY21saWRYUmxjeTVuWlhST1lXMWxaRWwwWlcwb0oyUmhkR0V0WW0wdGNISmxjbVZ1WkdWeUp5a3VkbUZzZFdVZ09pQWdkM0poY0hCbGNrRjBkSEpwWW5WMFpYTXVaMlYwVG1GdFpXUkpkR1Z0S0NkaWJTMXdjbVZ5Wlc1a1pYSW5LU0EvSUhkeVlYQndaWEpCZEhSeWFXSjFkR1Z6TG1kbGRFNWhiV1ZrU1hSbGJTZ25ZbTB0Y0hKbGNtVnVaR1Z5SnlrdWRtRnNkV1VnT2lBbkp6dGNjbHh1WEhKY2JpQWdJQ0JwWmlod2NtVnlaVzVrWlhJZ1BUMDlJQ2RtWVd4elpTY3BlMXh5WEc0Z0lDQWdJQ0FnSUhCaGNtRnRjeTV3Y21WeVpXNWtaWElnUFNCbVlXeHpaVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWMyVjBVR0Z5WVcxektIQmhjbUZ0Y3lrN1hISmNibjA3WEhKY2JseHlYRzVCYm1sdFlYUnBiMjVKZEdWdExuQnliM1J2ZEhsd1pTNXBibU5zZFdSbFRHRjVaWEp6SUQwZ1puVnVZM1JwYjI0b1pHRjBZU2tnZTF4eVhHNGdJQ0FnYVdZb1pHRjBZUzV2Y0NBK0lIUm9hWE11WVc1cGJXRjBhVzl1UkdGMFlTNXZjQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExtOXdJRDBnWkdGMFlTNXZjRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblJ2ZEdGc1JuSmhiV1Z6SUQwZ1RXRjBhQzVtYkc5dmNpaGtZWFJoTG05d0lDMGdkR2hwY3k1aGJtbHRZWFJwYjI1RVlYUmhMbWx3S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1GdWFXMWhkR2x2YmtSaGRHRXVkR1lnUFNCMGFHbHpMblJ2ZEdGc1JuSmhiV1Z6TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlHeGhlV1Z5Y3lBOUlIUm9hWE11WVc1cGJXRjBhVzl1UkdGMFlTNXNZWGxsY25NN1hISmNiaUFnSUNCMllYSWdhU3dnYkdWdUlEMGdiR0Y1WlhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUhaaGNpQnVaWGRNWVhsbGNuTWdQU0JrWVhSaExteGhlV1Z5Y3p0Y2NseHVJQ0FnSUhaaGNpQnFMQ0JxVEdWdUlEMGdibVYzVEdGNVpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaWhxUFRBN2FqeHFUR1Z1TzJvclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUdrZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUhkb2FXeGxLR2s4YkdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iR0Y1WlhKelcybGRMbWxrSUQwOUlHNWxkMHhoZVdWeWMxdHFYUzVwWkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZWGxsY25OYmFWMGdQU0J1WlhkTVlYbGxjbk5iYWwwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb1pHRjBZUzVqYUdGeWN5QjhmQ0JrWVhSaExtWnZiblJ6S1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxjbVZ5TG1kc2IySmhiRVJoZEdFdVptOXVkRTFoYm1GblpYSXVZV1JrUTJoaGNuTW9aR0YwWVM1amFHRnljeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV5Wlc1a1pYSmxjaTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUxtRmtaRVp2Ym5SektHUmhkR0V1Wm05dWRITXNJSFJvYVhNdWNtVnVaR1Z5WlhJdVoyeHZZbUZzUkdGMFlTNWtaV1p6S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtHUmhkR0V1WVhOelpYUnpLWHRjY2x4dUlDQWdJQ0FnSUNCc1pXNGdQU0JrWVhSaExtRnpjMlYwY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBd095QnBJRHdnYkdWdU95QnBJQ3M5SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZ1YVcxaGRHbHZia1JoZEdFdVlYTnpaWFJ6TG5CMWMyZ29aR0YwWVM1aGMzTmxkSE5iYVYwcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzh2ZEdocGN5NTBiM1JoYkVaeVlXMWxjeUE5SURVd08xeHlYRzRnSUNBZ0x5OTBhR2x6TG1GdWFXMWhkR2x2YmtSaGRHRXVkR1lnUFNBMU1EdGNjbHh1SUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1UkdGMFlTNWZYMk52YlhCc1pYUmxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQmtZWFJoVFdGdVlXZGxjaTVqYjIxd2JHVjBaVVJoZEdFb2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExIUm9hWE11Y21WdVpHVnlaWEl1WjJ4dlltRnNSR0YwWVM1bWIyNTBUV0Z1WVdkbGNpazdYSEpjYmlBZ0lDQjBhR2x6TG5KbGJtUmxjbVZ5TG1sdVkyeDFaR1ZNWVhsbGNuTW9aR0YwWVM1c1lYbGxjbk1wTzF4eVhHNGdJQ0FnYVdZb1pYaHdjbVZ6YzJsdmJuTlFiSFZuYVc0cGUxeHlYRzRnSUNBZ0lDQWdJR1Y0Y0hKbGMzTnBiMjV6VUd4MVoybHVMbWx1YVhSRmVIQnlaWE56YVc5dWN5aDBhR2x6S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpYSXVjbVZ1WkdWeVJuSmhiV1VvYm5Wc2JDazdYSEpjYmlBZ0lDQjBhR2x6TG14dllXUk9aWGgwVTJWbmJXVnVkQ2dwTzF4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdWJHOWhaRTVsZUhSVFpXZHRaVzUwSUQwZ1puVnVZM1JwYjI0b0tTQjdYSEpjYmlBZ0lDQjJZWElnYzJWbmJXVnVkSE1nUFNCMGFHbHpMbUZ1YVcxaGRHbHZia1JoZEdFdWMyVm5iV1Z1ZEhNN1hISmNiaUFnSUNCcFppZ2hjMlZuYldWdWRITWdmSHdnYzJWbmJXVnVkSE11YkdWdVozUm9JRDA5UFNBd0lIeDhJQ0YwYUdsekxtRjFkRzlzYjJGa1UyVm5iV1Z1ZEhNcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISnBaMmRsY2lnblpHRjBZVjl5WldGa2VTY3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkR2x0WlVOdmJYQnNaWFJsWkNBOUlIUm9hWE11WVc1cGJXRjBhVzl1UkdGMFlTNTBaanRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2MyVm5iV1Z1ZENBOUlITmxaMjFsYm5SekxuTm9hV1owS0NrN1hISmNiaUFnSUNCMGFHbHpMblJwYldWRGIyMXdiR1YwWldRZ1BTQnpaV2R0Wlc1MExuUnBiV1VnS2lCMGFHbHpMbVp5WVcxbFVtRjBaVHRjY2x4dUlDQWdJSFpoY2lCNGFISWdQU0J1WlhjZ1dFMU1TSFIwY0ZKbGNYVmxjM1FvS1R0Y2NseHVJQ0FnSUhaaGNpQnpaV3htSUQwZ2RHaHBjenRjY2x4dUlDQWdJSFpoY2lCelpXZHRaVzUwVUdGMGFDQTlJSFJvYVhNdWNHRjBhQ3QwYUdsekxtWnBiR1ZPWVcxbEt5ZGZKeUFySUhSb2FYTXVjMlZuYldWdWRGQnZjeUFySUNjdWFuTnZiaWM3WEhKY2JpQWdJQ0IwYUdsekxuTmxaMjFsYm5SUWIzTWdLejBnTVR0Y2NseHVJQ0FnSUhob2NpNXZjR1Z1S0NkSFJWUW5MQ0J6WldkdFpXNTBVR0YwYUN3Z2RISjFaU2s3WEhKY2JpQWdJQ0I0YUhJdWMyVnVaQ2dwTzF4eVhHNGdJQ0FnZUdoeUxtOXVjbVZoWkhsemRHRjBaV05vWVc1blpTQTlJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZUdoeUxuSmxZV1I1VTNSaGRHVWdQVDBnTkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDRhSEl1YzNSaGRIVnpJRDA5SURJd01DbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtbHVZMngxWkdWTVlYbGxjbk1vU2xOUFRpNXdZWEp6WlNoNGFISXVjbVZ6Y0c5dWMyVlVaWGgwS1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNWUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnlaWE53YjI1elpTQTlJRXBUVDA0dWNHRnljMlVvZUdoeUxuSmxjM0J2Ym5ObFZHVjRkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1cGJtTnNkV1JsVEdGNVpYSnpLSEpsYzNCdmJuTmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxallYUmphQ2hsY25JcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVmVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExteHZZV1JUWldkdFpXNTBjeUE5SUdaMWJtTjBhVzl1S0NrZ2UxeHlYRzRnSUNBZ2RtRnlJSE5sWjIxbGJuUnpJRDBnZEdocGN5NWhibWx0WVhScGIyNUVZWFJoTG5ObFoyMWxiblJ6TzF4eVhHNGdJQ0FnYVdZb0lYTmxaMjFsYm5SektTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBhVzFsUTI5dGNHeGxkR1ZrSUQwZ2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExuUm1PMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1c2IyRmtUbVY0ZEZObFoyMWxiblFvS1R0Y2NseHVmVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtTnZibVpwWjBGdWFXMWhkR2x2YmlBOUlHWjFibU4wYVc5dUlDaGhibWx0UkdGMFlTa2dlMXh5WEc0Z0lDQWdkbUZ5SUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1SUNBZ0lHbG1LSFJvYVhNdWNtVnVaR1Z5WlhJZ0ppWWdkR2hwY3k1eVpXNWtaWEpsY2k1a1pYTjBjbTk1WldRcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvU2xOUFRpNXdZWEp6WlNoS1UwOU9Mbk4wY21sdVoybG1lU2hoYm1sdFJHRjBZU2twS1R0Y2NseHVJQ0FnSUM4dllXNXBiVVJoZEdFdWR5QTlJRTFoZEdndWNtOTFibVFvWVc1cGJVUmhkR0V1ZHk5aWJHbDBkR1Z5S1R0Y2NseHVJQ0FnSUM4dllXNXBiVVJoZEdFdWFDQTlJRTFoZEdndWNtOTFibVFvWVc1cGJVUmhkR0V1YUM5aWJHbDBkR1Z5S1R0Y2NseHVJQ0FnSUhSb2FYTXVZVzVwYldGMGFXOXVSR0YwWVNBOUlHRnVhVzFFWVhSaE8xeHlYRzRnSUNBZ2RHaHBjeTUwYjNSaGJFWnlZVzFsY3lBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1aGJtbHRZWFJwYjI1RVlYUmhMbTl3SUMwZ2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExtbHdLVHRjY2x4dUlDQWdJSFJvYVhNdVlXNXBiV0YwYVc5dVJHRjBZUzUwWmlBOUlIUm9hWE11ZEc5MFlXeEdjbUZ0WlhNN1hISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNtVnlMbU52Ym1acFowRnVhVzFoZEdsdmJpaGhibWx0UkdGMFlTazdYSEpjYmlBZ0lDQnBaaWdoWVc1cGJVUmhkR0V1WVhOelpYUnpLWHRjY2x4dUlDQWdJQ0FnSUNCaGJtbHRSR0YwWVM1aGMzTmxkSE1nUFNCYlhUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LR0Z1YVcxRVlYUmhMbU52YlhCektTQjdYSEpjYmlBZ0lDQWdJQ0FnWVc1cGJVUmhkR0V1WVhOelpYUnpJRDBnWVc1cGJVUmhkR0V1WVhOelpYUnpMbU52Ym1OaGRDaGhibWx0UkdGMFlTNWpiMjF3Y3lrN1hISmNiaUFnSUNBZ0lDQWdZVzVwYlVSaGRHRXVZMjl0Y0hNZ1BTQnVkV3hzTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NXlaVzVrWlhKbGNpNXpaV0Z5WTJoRmVIUnlZVU52YlhCdmMybDBhVzl1Y3loaGJtbHRSR0YwWVM1aGMzTmxkSE1wTzF4eVhHNWNjbHh1SUNBZ0lIUm9hWE11YkdGNVpYSnpJRDBnZEdocGN5NWhibWx0WVhScGIyNUVZWFJoTG14aGVXVnljenRjY2x4dUlDQWdJSFJvYVhNdVlYTnpaWFJ6SUQwZ2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExtRnpjMlYwY3p0Y2NseHVJQ0FnSUhSb2FYTXVabkpoYldWU1lYUmxJRDBnZEdocGN5NWhibWx0WVhScGIyNUVZWFJoTG1aeU8xeHlYRzRnSUNBZ2RHaHBjeTVtYVhKemRFWnlZVzFsSUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG1GdWFXMWhkR2x2YmtSaGRHRXVhWEFwTzF4eVhHNGdJQ0FnZEdocGN5NW1jbUZ0WlUxMWJIUWdQU0IwYUdsekxtRnVhVzFoZEdsdmJrUmhkR0V1Wm5JZ0x5QXhNREF3TzF4eVhHNGdJQ0FnZEdocGN5NTBjbWxuWjJWeUtDZGpiMjVtYVdkZmNtVmhaSGtuS1R0Y2NseHVJQ0FnSUhSb2FYTXVhVzFoWjJWUWNtVnNiMkZrWlhJZ1BTQnVaWGNnU1cxaFoyVlFjbVZzYjJGa1pYSW9LVHRjY2x4dUlDQWdJSFJvYVhNdWFXMWhaMlZRY21Wc2IyRmtaWEl1YzJWMFFYTnpaWFJ6VUdGMGFDaDBhR2x6TG1GemMyVjBjMUJoZEdncE8xeHlYRzRnSUNBZ2RHaHBjeTVwYldGblpWQnlaV3h2WVdSbGNpNXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDazdYSEpjYmlBZ0lDQjBhR2x6TG1sdFlXZGxVSEpsYkc5aFpHVnlMbXh2WVdSQmMzTmxkSE1vWVc1cGJVUmhkR0V1WVhOelpYUnpMQ0JtZFc1amRHbHZiaWhsY25JcElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaFpYSnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRjkwYUdsekxuUnlhV2RuWlhJb0oyeHZZV1JsWkY5cGJXRm5aWE1uS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlLVHRjY2x4dUlDQWdJSFJvYVhNdWJHOWhaRk5sWjIxbGJuUnpLQ2s3WEhKY2JpQWdJQ0IwYUdsekxuVndaR0ZHY21GdFpVMXZaR2xtYVdWeUtDazdYSEpjYmlBZ0lDQnBaaWgwYUdsekxuSmxibVJsY21WeUxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWElwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZDJGcGRFWnZja1p2Ym5SelRHOWhaR1ZrS0NrN1hISmNiaUFnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNCa1lYUmhUV0Z1WVdkbGNpNWpiMjF3YkdWMFpVUmhkR0VvZEdocGN5NWhibWx0WVhScGIyNUVZWFJoTEhSb2FYTXVjbVZ1WkdWeVpYSXVaMnh2WW1Gc1JHRjBZUzVtYjI1MFRXRnVZV2RsY2lrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amFHVmphMHh2WVdSbFpDZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1OU8xeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1ZDJGcGRFWnZja1p2Ym5SelRHOWhaR1ZrSUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmphR1ZqYTBadmJuUnpURzloWkdWa0tDbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV5Wlc1a1pYSmxjaTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUxteHZZV1JsWkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRk5ZVzVoWjJWeUxtTnZiWEJzWlhSbFJHRjBZU2gwYUdsekxtRnVhVzFoZEdsdmJrUmhkR0VzZEdocGN5NXlaVzVrWlhKbGNpNW5iRzlpWVd4RVlYUmhMbVp2Ym5STllXNWhaMlZ5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5MGFHbHpMbkpsYm1SbGNtVnlMbUoxYVd4a1NYUmxiWE1vZEdocGN5NWhibWx0WVhScGIyNUVZWFJoTG14aGVXVnljeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyaGxZMnRNYjJGa1pXUW9LVHRjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMlYwVkdsdFpXOTFkQ2hqYUdWamEwWnZiblJ6VEc5aFpHVmtMbUpwYm1Rb2RHaHBjeWtzTWpBcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQmphR1ZqYTBadmJuUnpURzloWkdWa0xtSnBibVFvZEdocGN5a29LVHRjY2x4dUlDQWdJSDFjY2x4dWZTZ3BLVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1MElEMGdablZ1WTNScGIyNGdLQ2tnZTF4eVhHNGdJQ0FnZEdocGN5NXdaVzVrYVc1blJXeGxiV1Z1ZEhNZ0t6MGdNVHRjY2x4dWZWeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1Wld4bGJXVnVkRXh2WVdSbFpDQTlJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUhSb2FYTXVjR1Z1WkdsdVowVnNaVzFsYm5SekxTMDdYSEpjYmlBZ0lDQjBhR2x6TG1Ob1pXTnJURzloWkdWa0tDazdYSEpjYm4wN1hISmNibHh5WEc1QmJtbHRZWFJwYjI1SmRHVnRMbkJ5YjNSdmRIbHdaUzVqYUdWamEweHZZV1JsWkNBOUlHWjFibU4wYVc5dUlDZ3BJSHRjY2x4dUlDQWdJR2xtSUNoMGFHbHpMbkJsYm1ScGJtZEZiR1Z0Wlc1MGN5QTlQVDBnTUNrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtS0dWNGNISmxjM05wYjI1elVHeDFaMmx1S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWlhod2NtVnpjMmx2Ym5OUWJIVm5hVzR1YVc1cGRFVjRjSEpsYzNOcGIyNXpLSFJvYVhNcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNtVnlMbWx1YVhSSmRHVnRjeWdwTzF4eVhHNGdJQ0FnSUNBZ0lITmxkRlJwYldWdmRYUW9ablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGNtbG5aMlZ5S0NkRVQwMU1iMkZrWldRbktUdGNjbHh1SUNBZ0lDQWdJQ0I5TG1KcGJtUW9kR2hwY3lrc01DazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXBjMHh2WVdSbFpDQTlJSFJ5ZFdVN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bmIzUnZSbkpoYldVb0tUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbUYxZEc5d2JHRjVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2JHRjVLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNjbHh1UVc1cGJXRjBhVzl1U1hSbGJTNXdjbTkwYjNSNWNHVXVjbVZ6YVhwbElEMGdablZ1WTNScGIyNGdLQ2tnZTF4eVhHNGdJQ0FnZEdocGN5NXlaVzVrWlhKbGNpNTFjR1JoZEdWRGIyNTBZV2x1WlhKVGFYcGxLQ2s3WEhKY2JuMDdYSEpjYmx4eVhHNUJibWx0WVhScGIyNUpkR1Z0TG5CeWIzUnZkSGx3WlM1elpYUlRkV0ptY21GdFpTQTlJR1oxYm1OMGFXOXVLR1pzWVdjcGUxeHlYRzRnSUNBZ2RHaHBjeTV6ZFdKbWNtRnRaVVZ1WVdKc1pXUWdQU0JtYkdGbklEOGdkSEoxWlNBNklHWmhiSE5sTzF4eVhHNTlYSEpjYmx4eVhHNUJibWx0WVhScGIyNUpkR1Z0TG5CeWIzUnZkSGx3WlM1bmIzUnZSbkpoYldVZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbk4xWW1aeVlXMWxSVzVoWW14bFpDbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWpkWEp5Wlc1MFJuSmhiV1VnUFNCMGFHbHpMbU4xY25KbGJuUlNZWGRHY21GdFpUdGNjbHh1SUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTNWeWNtVnVkRVp5WVcxbElEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxtTjFjbkpsYm5SU1lYZEdjbUZ0WlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdhV1lvZEdocGN5NTBhVzFsUTI5dGNHeGxkR1ZrSUNFOVBTQjBhR2x6TG5SdmRHRnNSbkpoYldWeklDWW1JSFJvYVhNdVkzVnljbVZ1ZEVaeVlXMWxJRDRnZEdocGN5NTBhVzFsUTI5dGNHeGxkR1ZrS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJHY21GdFpTQTlJSFJvYVhNdWRHbHRaVU52YlhCc1pYUmxaRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2lnblpXNTBaWEpHY21GdFpTY3BPMXh5WEc0Z0lDQWdkR2hwY3k1eVpXNWtaWEpHY21GdFpTZ3BPMXh5WEc1OU8xeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbWx6VEc5aFpHVmtJRDA5UFNCbVlXeHpaU2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHk5amIyNXpiMnhsTG14dlp5Z25kR2hwY3k1amRYSnlaVzUwUm5KaGJXVTZKeXgwYUdsekxtTjFjbkpsYm5SR2NtRnRaU0FySUhSb2FYTXVabWx5YzNSR2NtRnRaU2s3WEhKY2JpQWdJQ0IwYUdsekxuSmxibVJsY21WeUxuSmxibVJsY2taeVlXMWxLSFJvYVhNdVkzVnljbVZ1ZEVaeVlXMWxJQ3NnZEdocGN5NW1hWEp6ZEVaeVlXMWxLVHRjY2x4dWZUdGNjbHh1WEhKY2JrRnVhVzFoZEdsdmJrbDBaVzB1Y0hKdmRHOTBlWEJsTG5Cc1lYa2dQU0JtZFc1amRHbHZiaUFvYm1GdFpTa2dlMXh5WEc0Z0lDQWdhV1lvYm1GdFpTQW1KaUIwYUdsekxtNWhiV1VnSVQwZ2JtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVwYzFCaGRYTmxaQ0E5UFQwZ2RISjFaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwYzFCaGRYTmxaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11WDJsa2JHVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5cFpHeGxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEhKcFoyZGxjaWduWDJGamRHbDJaU2NwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbkJoZFhObElEMGdablZ1WTNScGIyNGdLRzVoYldVcElIdGNjbHh1SUNBZ0lHbG1LRzVoYldVZ0ppWWdkR2hwY3k1dVlXMWxJQ0U5SUc1aGJXVXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhWE5RWVhWelpXUWdQVDA5SUdaaGJITmxLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWx6VUdGMWMyVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaGRHaHBjeTV3Wlc1a2FXNW5VMlZuYldWdWRDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJsa2JHVWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblJ5YVdkblpYSW9KMTlwWkd4bEp5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdWRHOW5aMnhsVUdGMWMyVWdQU0JtZFc1amRHbHZiaUFvYm1GdFpTa2dlMXh5WEc0Z0lDQWdhV1lvYm1GdFpTQW1KaUIwYUdsekxtNWhiV1VnSVQwZ2JtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVwYzFCaGRYTmxaQ0E5UFQwZ2RISjFaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3YkdGNUtDazdYSEpjYmlBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CaGRYTmxLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNUJibWx0WVhScGIyNUpkR1Z0TG5CeWIzUnZkSGx3WlM1emRHOXdJRDBnWm5WdVkzUnBiMjRnS0c1aGJXVXBJSHRjY2x4dUlDQWdJR2xtS0c1aGJXVWdKaVlnZEdocGN5NXVZVzFsSUNFOUlHNWhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVjR0YxYzJVb0tUdGNjbHh1SUNBZ0lIUm9hWE11WTNWeWNtVnVkRVp5WVcxbElEMGdkR2hwY3k1amRYSnlaVzUwVW1GM1JuSmhiV1VnUFNBd08xeHlYRzRnSUNBZ2RHaHBjeTV3YkdGNVEyOTFiblFnUFNBd08xeHlYRzRnSUNBZ2RHaHBjeTVuYjNSdlJuSmhiV1VvS1R0Y2NseHVmVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtZHZWRzlCYm1SVGRHOXdJRDBnWm5WdVkzUnBiMjRnS0haaGJIVmxMQ0JwYzBaeVlXMWxMQ0J1WVcxbEtTQjdYSEpjYmlBZ0lDQnBaaWh1WVcxbElDWW1JSFJvYVhNdWJtRnRaU0FoUFNCdVlXMWxLWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmlocGMwWnlZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFTjFjbkpsYm5SU1lYZEdjbUZ0WlZaaGJIVmxLSFpoYkhWbEtUdGNjbHh1SUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWMFEzVnljbVZ1ZEZKaGQwWnlZVzFsVm1Gc2RXVW9kbUZzZFdVZ0tpQjBhR2x6TG1aeVlXMWxUVzlrYVdacFpYSXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1d1lYVnpaU2dwTzF4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdVoyOVViMEZ1WkZCc1lYa2dQU0JtZFc1amRHbHZiaUFvZG1Gc2RXVXNJR2x6Um5KaGJXVXNJRzVoYldVcElIdGNjbHh1SUNBZ0lIUm9hWE11WjI5VWIwRnVaRk4wYjNBb2RtRnNkV1VzSUdselJuSmhiV1VzSUc1aGJXVXBPMXh5WEc0Z0lDQWdkR2hwY3k1d2JHRjVLQ2s3WEhKY2JuMDdYSEpjYmx4eVhHNUJibWx0WVhScGIyNUpkR1Z0TG5CeWIzUnZkSGx3WlM1aFpIWmhibU5sVkdsdFpTQTlJR1oxYm1OMGFXOXVJQ2gyWVd4MVpTa2dlMXh5WEc0Z0lDQWdhV1lvZEdocGN5NXdaVzVrYVc1blUyVm5iV1Z1ZENsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1d1pXNWthVzVuVTJWbmJXVnVkQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZV1JxZFhOMFUyVm5iV1Z1ZENoMGFHbHpMbk5sWjIxbGJuUnpMbk5vYVdaMEtDa3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11YVhOUVlYVnpaV1FwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnNZWGtvS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lnS0hSb2FYTXVhWE5RWVhWelpXUWdQVDA5SUhSeWRXVWdmSHdnZEdocGN5NXBjMHh2WVdSbFpDQTlQVDBnWm1Gc2MyVXBJSHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxuTmxkRU4xY25KbGJuUlNZWGRHY21GdFpWWmhiSFZsS0hSb2FYTXVZM1Z5Y21WdWRGSmhkMFp5WVcxbElDc2dkbUZzZFdVZ0tpQjBhR2x6TG1aeVlXMWxUVzlrYVdacFpYSXBPMXh5WEc1OU8xeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1ZFhCa1lYUmxRVzVwYldGMGFXOXVJRDBnWm5WdVkzUnBiMjRnS0hCbGNtTXBJSHRjY2x4dUlDQWdJSFJvYVhNdWMyVjBRM1Z5Y21WdWRGSmhkMFp5WVcxbFZtRnNkV1VvZEdocGN5NTBiM1JoYkVaeVlXMWxjeUFxSUhCbGNtTXBPMXh5WEc1OU8xeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1Ylc5MlpVWnlZVzFsSUQwZ1puVnVZM1JwYjI0Z0tIWmhiSFZsTENCdVlXMWxLU0I3WEhKY2JpQWdJQ0JwWmlodVlXMWxJQ1ltSUhSb2FYTXVibUZ0WlNBaFBTQnVZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbk5sZEVOMWNuSmxiblJTWVhkR2NtRnRaVlpoYkhWbEtIUm9hWE11WTNWeWNtVnVkRkpoZDBaeVlXMWxLM1poYkhWbEtUdGNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbUZrYW5WemRGTmxaMjFsYm5RZ1BTQm1kVzVqZEdsdmJpaGhjbklwZTF4eVhHNGdJQ0FnZEdocGN5NXdiR0Y1UTI5MWJuUWdQU0F3TzF4eVhHNGdJQ0FnYVdZb1lYSnlXekZkSUR3Z1lYSnlXekJkS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtWnlZVzFsVFc5a2FXWnBaWElnUGlBd0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1d2JHRjVVM0JsWldRZ1BDQXdLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwVTNCbFpXUW9MWFJvYVhNdWNHeGhlVk53WldWa0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJWMFJHbHlaV04wYVc5dUtDMHhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5SdmRHRnNSbkpoYldWeklEMGdZWEp5V3pCZElDMGdZWEp5V3pGZE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVptbHljM1JHY21GdFpTQTlJR0Z5Y2xzeFhUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmxkRU4xY25KbGJuUlNZWGRHY21GdFpWWmhiSFZsS0hSb2FYTXVkRzkwWVd4R2NtRnRaWE1nTFNBd0xqQXhLVHRjY2x4dUlDQWdJSDBnWld4elpTQnBaaWhoY25KYk1WMGdQaUJoY25KYk1GMHBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11Wm5KaGJXVk5iMlJwWm1sbGNpQThJREFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbkJzWVhsVGNHVmxaQ0E4SURBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpYUlRjR1ZsWkNndGRHaHBjeTV3YkdGNVUzQmxaV1FwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJFYVhKbFkzUnBiMjRvTVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBiM1JoYkVaeVlXMWxjeUE5SUdGeWNsc3hYU0F0SUdGeWNsc3dYVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVpwY25OMFJuSmhiV1VnUFNCaGNuSmJNRjA3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSRGRYSnlaVzUwVW1GM1JuSmhiV1ZXWVd4MVpTZ3dLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2lnbmMyVm5iV1Z1ZEZOMFlYSjBKeWs3WEhKY2JuMDdYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbk5sZEZObFoyMWxiblFnUFNCbWRXNWpkR2x2YmlBb2FXNXBkQ3hsYm1RcElIdGNjbHh1SUNBZ0lIWmhjaUJ3Wlc1a2FXNW5SbkpoYldVZ1BTQXRNVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVhWE5RWVhWelpXUXBJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amRYSnlaVzUwVW1GM1JuSmhiV1VnS3lCMGFHbHpMbVpwY25OMFJuSmhiV1VnUENCcGJtbDBLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJsYm1ScGJtZEdjbUZ0WlNBOUlHbHVhWFE3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBhR2x6TG1OMWNuSmxiblJTWVhkR2NtRnRaU0FySUhSb2FYTXVabWx5YzNSR2NtRnRaU0ErSUdWdVpDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndaVzVrYVc1blJuSmhiV1VnUFNCbGJtUWdMU0JwYm1sMElDMGdNQzR3TVR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnZEdocGN5NW1hWEp6ZEVaeVlXMWxJRDBnYVc1cGREdGNjbHh1SUNBZ0lIUm9hWE11ZEc5MFlXeEdjbUZ0WlhNZ1BTQmxibVFnTFNCcGJtbDBPMXh5WEc0Z0lDQWdhV1lvY0dWdVpHbHVaMFp5WVcxbElDRTlQU0F0TVNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyOVViMEZ1WkZOMGIzQW9jR1Z1WkdsdVowWnlZVzFsTEhSeWRXVXBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QmJtbHRZWFJwYjI1SmRHVnRMbkJ5YjNSdmRIbHdaUzV3YkdGNVUyVm5iV1Z1ZEhNZ1BTQm1kVzVqZEdsdmJpQW9ZWEp5TEdadmNtTmxSbXhoWnlrZ2UxeHlYRzRnSUNBZ2FXWW9kSGx3Wlc5bUlHRnljbHN3WFNBOVBUMGdKMjlpYW1WamRDY3BlMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQmhjbkl1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMlZuYldWdWRITXVjSFZ6YUNoaGNuSmJhVjBwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWbmJXVnVkSE11Y0hWemFDaGhjbklwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb1ptOXlZMlZHYkdGbktYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtRmthblZ6ZEZObFoyMWxiblFvZEdocGN5NXpaV2R0Wlc1MGN5NXphR2xtZENncEtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LSFJvYVhNdWFYTlFZWFZ6WldRcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHeGhlU2dwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdWNtVnpaWFJUWldkdFpXNTBjeUE5SUdaMWJtTjBhVzl1SUNobWIzSmpaVVpzWVdjcElIdGNjbHh1SUNBZ0lIUm9hWE11YzJWbmJXVnVkSE11YkdWdVozUm9JRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVjMlZuYldWdWRITXVjSFZ6YUNoYmRHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExtbHdLblJvYVhNdVpuSmhiV1ZTWVhSbExFMWhkR2d1Wm14dmIzSW9kR2hwY3k1aGJtbHRZWFJwYjI1RVlYUmhMbTl3SUMwZ2RHaHBjeTVoYm1sdFlYUnBiMjVFWVhSaExtbHdLM1JvYVhNdVlXNXBiV0YwYVc5dVJHRjBZUzVwY0NwMGFHbHpMbVp5WVcxbFVtRjBaU2xkS1R0Y2NseHVJQ0FnSUdsbUtHWnZjbU5sUm14aFp5bDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhaR3AxYzNSVFpXZHRaVzUwS0hSb2FYTXVjMlZuYldWdWRITXVjMmhwWm5Rb0tTazdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtTm9aV05yVTJWbmJXVnVkSE1nUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2FXWW9kR2hwY3k1elpXZHRaVzUwY3k1c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0dWdVpHbHVaMU5sWjIxbGJuUWdQU0IwY25WbE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVCYm1sdFlYUnBiMjVKZEdWdExuQnliM1J2ZEhsd1pTNXlaVzF2ZG1VZ1BTQm1kVzVqZEdsdmJpQW9ibUZ0WlNrZ2UxeHlYRzRnSUNBZ2FXWW9ibUZ0WlNBbUppQjBhR2x6TG01aGJXVWdJVDBnYm1GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1eVpXNWtaWEpsY2k1a1pYTjBjbTk1S0NrN1hISmNibjA3WEhKY2JseHlYRzVCYm1sdFlYUnBiMjVKZEdWdExuQnliM1J2ZEhsd1pTNWtaWE4wY205NUlEMGdablZ1WTNScGIyNGdLRzVoYldVcElIdGNjbHh1SUNBZ0lHbG1LQ2h1WVcxbElDWW1JSFJvYVhNdWJtRnRaU0FoUFNCdVlXMWxLU0I4ZkNBb2RHaHBjeTV5Wlc1a1pYSmxjaUFtSmlCMGFHbHpMbkpsYm1SbGNtVnlMbVJsYzNSeWIzbGxaQ2twZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVjbVZ1WkdWeVpYSXVaR1Z6ZEhKdmVTZ3BPMXh5WEc0Z0lDQWdkR2hwY3k1MGNtbG5aMlZ5S0Nka1pYTjBjbTk1SnlrN1hISmNiaUFnSUNCMGFHbHpMbDlqWW5NZ1BTQnVkV3hzTzF4eVhHNGdJQ0FnZEdocGN5NXZia1Z1ZEdWeVJuSmhiV1VnUFNCMGFHbHpMbTl1VEc5dmNFTnZiWEJzWlhSbElEMGdkR2hwY3k1dmJrTnZiWEJzWlhSbElEMGdkR2hwY3k1dmJsTmxaMjFsYm5SVGRHRnlkQ0E5SUhSb2FYTXViMjVFWlhOMGNtOTVJRDBnYm5Wc2JEdGNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbk5sZEVOMWNuSmxiblJTWVhkR2NtRnRaVlpoYkhWbElEMGdablZ1WTNScGIyNG9kbUZzZFdVcGUxeHlYRzRnSUNBZ2RHaHBjeTVqZFhKeVpXNTBVbUYzUm5KaGJXVWdQU0IyWVd4MVpUdGNjbHh1SUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvZEdocGN5NTBiM1JoYkVaeVlXMWxjeWs3WEhKY2JpQWdJQ0JwWmlBb2RHaHBjeTVqZFhKeVpXNTBVbUYzUm5KaGJXVWdQajBnZEdocGN5NTBiM1JoYkVaeVlXMWxjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJobFkydFRaV2R0Wlc1MGN5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUm9hWE11Ykc5dmNDQTlQVDBnWm1Gc2MyVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJTWVhkR2NtRnRaU0E5SUhSb2FYTXVkRzkwWVd4R2NtRnRaWE1nTFNBd0xqQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kdmRHOUdjbUZ0WlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJoZFhObEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEhKcFoyZGxjaWduWTI5dGNHeGxkR1VuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5SeWFXZG5aWElvSjJ4dmIzQkRiMjF3YkdWMFpTY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5Cc1lYbERiM1Z1ZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWdvZEdocGN5NXNiMjl3SUNFOVBTQjBjblZsSUNZbUlIUm9hWE11Y0d4aGVVTnZkVzUwSUQwOUlIUm9hWE11Ykc5dmNDa2dmSHdnZEdocGN5NXdaVzVrYVc1blUyVm5iV1Z1ZENsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJTWVhkR2NtRnRaU0E5SUhSb2FYTXVkRzkwWVd4R2NtRnRaWE1nTFNBd0xqQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5iM1J2Um5KaGJXVW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjR0YxYzJVb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISnBaMmRsY2lnblkyOXRjR3hsZEdVbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTNWeWNtVnVkRkpoZDBaeVlXMWxJRDBnZEdocGN5NWpkWEp5Wlc1MFVtRjNSbkpoYldVZ0pTQjBhR2x6TG5SdmRHRnNSbkpoYldWek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2gwYUdsekxtTjFjbkpsYm5SU1lYZEdjbUZ0WlNBOElEQXBJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU5vWldOclUyVm5iV1Z1ZEhNb0tUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQnNZWGxEYjNWdWRDQXRQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWNHeGhlVU52ZFc1MElEd2dNQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHeGhlVU52ZFc1MElEMGdNRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NXNiMjl3SUQwOVBTQm1ZV3h6WlNBZ2ZId2dkR2hwY3k1d1pXNWthVzVuVTJWbmJXVnVkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEZKaGQwWnlZVzFsSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYjNSdlJuSmhiV1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdZWFZ6WlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblJ5YVdkblpYSW9KMk52YlhCc1pYUmxKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21sbloyVnlLQ2RzYjI5d1EyOXRjR3hsZEdVbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKeVpXNTBVbUYzUm5KaGJXVWdQU0FvZEdocGN5NTBiM1JoYkVaeVlXMWxjeUFySUhSb2FYTXVZM1Z5Y21WdWRGSmhkMFp5WVcxbEtTQWxJSFJvYVhNdWRHOTBZV3hHY21GdFpYTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjI5MGIwWnlZVzFsS0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdkR2hwY3k1bmIzUnZSbkpoYldVb0tUdGNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbk5sZEZOd1pXVmtJRDBnWm5WdVkzUnBiMjRnS0haaGJDa2dlMXh5WEc0Z0lDQWdkR2hwY3k1d2JHRjVVM0JsWldRZ1BTQjJZV3c3WEhKY2JpQWdJQ0IwYUdsekxuVndaR0ZHY21GdFpVMXZaR2xtYVdWeUtDazdYSEpjYm4wN1hISmNibHh5WEc1QmJtbHRZWFJwYjI1SmRHVnRMbkJ5YjNSdmRIbHdaUzV6WlhSRWFYSmxZM1JwYjI0Z1BTQm1kVzVqZEdsdmJpQW9kbUZzS1NCN1hISmNiaUFnSUNCMGFHbHpMbkJzWVhsRWFYSmxZM1JwYjI0Z1BTQjJZV3dnUENBd0lEOGdMVEVnT2lBeE8xeHlYRzRnSUNBZ2RHaHBjeTUxY0dSaFJuSmhiV1ZOYjJScFptbGxjaWdwTzF4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdWRYQmtZVVp5WVcxbFRXOWthV1pwWlhJZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0IwYUdsekxtWnlZVzFsVFc5a2FXWnBaWElnUFNCMGFHbHpMbVp5WVcxbFRYVnNkQ0FxSUhSb2FYTXVjR3hoZVZOd1pXVmtJQ29nZEdocGN5NXdiR0Y1UkdseVpXTjBhVzl1TzF4eVhHNTlPMXh5WEc1Y2NseHVRVzVwYldGMGFXOXVTWFJsYlM1d2NtOTBiM1I1Y0dVdVoyVjBVR0YwYUNBOUlHWjFibU4wYVc5dUlDZ3BJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGRHZzdYSEpjYm4wN1hISmNibHh5WEc1QmJtbHRZWFJwYjI1SmRHVnRMbkJ5YjNSdmRIbHdaUzVuWlhSQmMzTmxkSE5RWVhSb0lEMGdablZ1WTNScGIyNGdLR0Z6YzJWMFJHRjBZU2tnZTF4eVhHNGdJQ0FnZG1GeUlIQmhkR2dnUFNBbkp6dGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVlYTnpaWFJ6VUdGMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHbHRZV2RsVUdGMGFDQTlJR0Z6YzJWMFJHRjBZUzV3TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LR2x0WVdkbFVHRjBhQzVwYm1SbGVFOW1LQ2RwYldGblpYTXZKeWtnSVQwOUlDMHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWUVlYUm9JRDBnYVcxaFoyVlFZWFJvTG5Od2JHbDBLQ2N2SnlsYk1WMDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIQmhkR2dnUFNCMGFHbHpMbUZ6YzJWMGMxQmhkR2dnS3lCcGJXRm5aVkJoZEdnN1hISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lIQmhkR2dnUFNCMGFHbHpMbkJoZEdnN1hISmNiaUFnSUNBZ0lDQWdjR0YwYUNBclBTQmhjM05sZEVSaGRHRXVkU0EvSUdGemMyVjBSR0YwWVM1MUlEb2dKeWM3WEhKY2JpQWdJQ0FnSUNBZ2NHRjBhQ0FyUFNCaGMzTmxkRVJoZEdFdWNEdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lISmxkSFZ5YmlCd1lYUm9PMXh5WEc1OU8xeHlYRzVjY2x4dVFXNXBiV0YwYVc5dVNYUmxiUzV3Y205MGIzUjVjR1V1WjJWMFFYTnpaWFJFWVhSaElEMGdablZ1WTNScGIyNGdLR2xrS1NCN1hISmNiaUFnSUNCMllYSWdhU0E5SURBc0lHeGxiaUE5SUhSb2FYTXVZWE56WlhSekxteGxibWQwYUR0Y2NseHVJQ0FnSUhkb2FXeGxJQ2hwSUR3Z2JHVnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9hV1FnUFQwZ2RHaHBjeTVoYzNObGRITmJhVjB1YVdRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjM05sZEhOYmFWMDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHa2dLejBnTVR0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtaHBaR1VnUFNCbWRXNWpkR2x2YmlBb0tTQjdYSEpjYmlBZ0lDQjBhR2x6TG5KbGJtUmxjbVZ5TG1ocFpHVW9LVHRjY2x4dWZUdGNjbHh1WEhKY2JrRnVhVzFoZEdsdmJrbDBaVzB1Y0hKdmRHOTBlWEJsTG5Ob2IzY2dQU0JtZFc1amRHbHZiaUFvS1NCN1hISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNtVnlMbk5vYjNjb0tUdGNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMbWRsZEVGemMyVjBjeUE5SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ6YzJWMGN6dGNjbHh1ZlR0Y2NseHVYSEpjYmtGdWFXMWhkR2x2YmtsMFpXMHVjSEp2ZEc5MGVYQmxMblJ5YVdkblpYSWdQU0JtZFc1amRHbHZiaWh1WVcxbEtYdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVgyTmljeUFtSmlCMGFHbHpMbDlqWW5OYmJtRnRaVjBwZTF4eVhHNGdJQ0FnSUNBZ0lITjNhWFJqYUNodVlXMWxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBblpXNTBaWEpHY21GdFpTYzZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuUnlhV2RuWlhKRmRtVnVkQ2h1WVcxbExHNWxkeUJDVFVWdWRHVnlSbkpoYldWRmRtVnVkQ2h1WVcxbExIUm9hWE11WTNWeWNtVnVkRVp5WVcxbExIUm9hWE11ZEc5MFlXeEdjbUZ0WlhNc2RHaHBjeTVtY21GdFpVMTFiSFFwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDZHNiMjl3UTI5dGNHeGxkR1VuT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21sbloyVnlSWFpsYm5Rb2JtRnRaU3h1WlhjZ1FrMURiMjF3YkdWMFpVeHZiM0JGZG1WdWRDaHVZVzFsTEhSb2FYTXViRzl2Y0N4MGFHbHpMbkJzWVhsRGIzVnVkQ3gwYUdsekxtWnlZVzFsVFhWc2RDa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSjJOdmJYQnNaWFJsSnpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEhKcFoyZGxja1YyWlc1MEtHNWhiV1VzYm1WM0lFSk5RMjl0Y0d4bGRHVkZkbVZ1ZENodVlXMWxMSFJvYVhNdVpuSmhiV1ZOZFd4MEtTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FuYzJWbmJXVnVkRk4wWVhKMEp6cGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISnBaMmRsY2tWMlpXNTBLRzVoYldVc2JtVjNJRUpOVTJWbmJXVnVkRk4wWVhKMFJYWmxiblFvYm1GdFpTeDBhR2x6TG1acGNuTjBSbkpoYldVc2RHaHBjeTUwYjNSaGJFWnlZVzFsY3lrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdKMlJsYzNSeWIza25PbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBjbWxuWjJWeVJYWmxiblFvYm1GdFpTeHVaWGNnUWsxRVpYTjBjbTk1UlhabGJuUW9ibUZ0WlN4MGFHbHpLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISnBaMmRsY2tWMlpXNTBLRzVoYldVcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0c1aGJXVWdQVDA5SUNkbGJuUmxja1p5WVcxbEp5QW1KaUIwYUdsekxtOXVSVzUwWlhKR2NtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2YmtWdWRHVnlSbkpoYldVdVkyRnNiQ2gwYUdsekxHNWxkeUJDVFVWdWRHVnlSbkpoYldWRmRtVnVkQ2h1WVcxbExIUm9hWE11WTNWeWNtVnVkRVp5WVcxbExIUm9hWE11ZEc5MFlXeEdjbUZ0WlhNc2RHaHBjeTVtY21GdFpVMTFiSFFwS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtHNWhiV1VnUFQwOUlDZHNiMjl3UTI5dGNHeGxkR1VuSUNZbUlIUm9hWE11YjI1TWIyOXdRMjl0Y0d4bGRHVXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViMjVNYjI5d1EyOXRjR3hsZEdVdVkyRnNiQ2gwYUdsekxHNWxkeUJDVFVOdmJYQnNaWFJsVEc5dmNFVjJaVzUwS0c1aGJXVXNkR2hwY3k1c2IyOXdMSFJvYVhNdWNHeGhlVU52ZFc1MExIUm9hWE11Wm5KaGJXVk5kV3gwS1NrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaHVZVzFsSUQwOVBTQW5ZMjl0Y0d4bGRHVW5JQ1ltSUhSb2FYTXViMjVEYjIxd2JHVjBaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV2YmtOdmJYQnNaWFJsTG1OaGJHd29kR2hwY3l4dVpYY2dRazFEYjIxd2JHVjBaVVYyWlc1MEtHNWhiV1VzZEdocGN5NW1jbUZ0WlUxMWJIUXBLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0c1aGJXVWdQVDA5SUNkelpXZHRaVzUwVTNSaGNuUW5JQ1ltSUhSb2FYTXViMjVUWldkdFpXNTBVM1JoY25RcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWIyNVRaV2R0Wlc1MFUzUmhjblF1WTJGc2JDaDBhR2x6TEc1bGR5QkNUVk5sWjIxbGJuUlRkR0Z5ZEVWMlpXNTBLRzVoYldVc2RHaHBjeTVtYVhKemRFWnlZVzFsTEhSb2FYTXVkRzkwWVd4R2NtRnRaWE1wS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtHNWhiV1VnUFQwOUlDZGtaWE4wY205NUp5QW1KaUIwYUdsekxtOXVSR1Z6ZEhKdmVTbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXZia1JsYzNSeWIza3VZMkZzYkNoMGFHbHpMRzVsZHlCQ1RVUmxjM1J5YjNsRmRtVnVkQ2h1WVcxbExIUm9hWE1wS1R0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia0Z1YVcxaGRHbHZia2wwWlcwdWNISnZkRzkwZVhCbExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJZ1BTQmZZV1JrUlhabGJuUk1hWE4wWlc1bGNqdGNjbHh1UVc1cGJXRjBhVzl1U1hSbGJTNXdjbTkwYjNSNWNHVXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaUE5SUY5eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeU8xeHlYRzVCYm1sdFlYUnBiMjVKZEdWdExuQnliM1J2ZEhsd1pTNTBjbWxuWjJWeVJYWmxiblFnUFNCZmRISnBaMmRsY2tWMlpXNTBPMXh5WEc1Y2JtWjFibU4wYVc5dUlFTmhiblpoYzFKbGJtUmxjbVZ5S0dGdWFXMWhkR2x2YmtsMFpXMHNJR052Ym1acFp5bDdYSEpjYmlBZ0lDQjBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMGdQU0JoYm1sdFlYUnBiMjVKZEdWdE8xeHlYRzRnSUNBZ2RHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjZ1BTQjdYSEpjYmlBZ0lDQWdJQ0FnWTJ4bFlYSkRZVzUyWVhNNklDaGpiMjVtYVdjZ0ppWWdZMjl1Wm1sbkxtTnNaV0Z5UTJGdWRtRnpJQ0U5UFNCMWJtUmxabWx1WldRcElEOGdZMjl1Wm1sbkxtTnNaV0Z5UTJGdWRtRnpJRG9nZEhKMVpTeGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MFpYaDBPaUFvWTI5dVptbG5JQ1ltSUdOdmJtWnBaeTVqYjI1MFpYaDBLU0I4ZkNCdWRXeHNMRnh5WEc0Z0lDQWdJQ0FnSUhCeWIyZHlaWE56YVhabFRHOWhaRG9nS0dOdmJtWnBaeUFtSmlCamIyNW1hV2N1Y0hKdlozSmxjM05wZG1WTWIyRmtLU0I4ZkNCbVlXeHpaU3hjY2x4dUlDQWdJQ0FnSUNCd2NtVnpaWEoyWlVGemNHVmpkRkpoZEdsdk9pQW9ZMjl1Wm1sbklDWW1JR052Ym1acFp5NXdjbVZ6WlhKMlpVRnpjR1ZqZEZKaGRHbHZLU0I4ZkNBbmVFMXBaRmxOYVdRZ2JXVmxkQ2NzWEhKY2JpQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbE9pQW9ZMjl1Wm1sbklDWW1JR052Ym1acFp5NWpiR0Z6YzA1aGJXVXBJSHg4SUNjblhISmNiaUFnSUNCOU8xeHlYRzRnSUNBZ2RHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVpIQnlJRDBnS0dOdmJtWnBaeUFtSmlCamIyNW1hV2N1WkhCeUtTQjhmQ0F4TzF4eVhHNGdJQ0FnYVdZZ0tIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNTNjbUZ3Y0dWeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhKRGIyNW1hV2N1WkhCeUlEMGdLR052Ym1acFp5QW1KaUJqYjI1bWFXY3VaSEJ5S1NCOGZDQjNhVzVrYjNjdVpHVjJhV05sVUdsNFpXeFNZWFJwYnlCOGZDQXhPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1eVpXNWtaWEpsWkVaeVlXMWxJRDBnTFRFN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0VnUFNCN1hISmNiaUFnSUNBZ0lDQWdabkpoYldWT2RXMDZJQzB4WEhKY2JpQWdJQ0I5TzF4eVhHNGdJQ0FnZEdocGN5NWpiMjUwWlhoMFJHRjBZU0E5SUh0Y2NseHVJQ0FnSUNBZ0lDQnpZWFpsWkNBNklFRnljbUY1TG1Gd2NHeDVLRzUxYkd3c2UyeGxibWQwYURveE5YMHBMRnh5WEc0Z0lDQWdJQ0FnSUhOaGRtVmtUM0E2SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRG94TlgwcExGeHlYRzRnSUNBZ0lDQWdJR05CY25KUWIzTWdPaUF3TEZ4eVhHNGdJQ0FnSUNBZ0lHTlVjaUE2SUc1bGR5Qk5ZWFJ5YVhnb0tTeGNjbHh1SUNBZ0lDQWdJQ0JqVHlBNklERmNjbHh1SUNBZ0lIMDdYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnTVRVN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVjMkYyWldSYmFWMGdQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZNVFo5S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVaV3hsYldWdWRITWdQU0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVjR1Z1WkdsdVowVnNaVzFsYm5SeklEMGdXMTA3WEhKY2JpQWdJQ0IwYUdsekxuUnlZVzV6Wm05eWJVMWhkQ0E5SUc1bGR5Qk5ZWFJ5YVhnb0tUdGNjbHh1SUNBZ0lIUm9hWE11WTI5dGNHeGxkR1ZNWVhsbGNuTWdQU0JtWVd4elpUdGNjbHh1ZlZ4eVhHNWxlSFJsYm1SUWNtOTBiM1I1Y0dVb1FtRnpaVkpsYm1SbGNtVnlMRU5oYm5aaGMxSmxibVJsY21WeUtUdGNjbHh1WEhKY2JrTmhiblpoYzFKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZDWVhObElEMGdablZ1WTNScGIyNGdLR1JoZEdFcElIdGNjbHh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dRMVpDWVhObFJXeGxiV1Z1ZENoa1lYUmhMQ0IwYUdsekxDQjBhR2x6TG1kc2IySmhiRVJoZEdFcE8xeHlYRzU5TzF4eVhHNWNjbHh1UTJGdWRtRnpVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU55WldGMFpWTm9ZWEJsSUQwZ1puVnVZM1JwYjI0Z0tHUmhkR0VwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1ExWlRhR0Z3WlVWc1pXMWxiblFvWkdGMFlTd2dkR2hwY3l3Z2RHaHBjeTVuYkc5aVlXeEVZWFJoS1R0Y2NseHVmVHRjY2x4dVhISmNia05oYm5aaGMxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWVVpYaDBJRDBnWm5WdVkzUnBiMjRnS0dSaGRHRXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUTFaVVpYaDBSV3hsYldWdWRDaGtZWFJoTENCMGFHbHpMQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXBPMXh5WEc1OU8xeHlYRzVjY2x4dVEyRnVkbUZ6VW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVWx0WVdkbElEMGdablZ1WTNScGIyNGdLR1JoZEdFcElIdGNjbHh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dRMVpKYldGblpVVnNaVzFsYm5Rb1pHRjBZU3dnZEdocGN5d2dkR2hwY3k1bmJHOWlZV3hFWVhSaEtUdGNjbHh1ZlR0Y2NseHVYSEpjYmtOaGJuWmhjMUpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzVqY21WaGRHVkRiMjF3SUQwZ1puVnVZM1JwYjI0Z0tHUmhkR0VwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1ExWkRiMjF3Uld4bGJXVnVkQ2hrWVhSaExDQjBhR2x6TENCMGFHbHpMbWRzYjJKaGJFUmhkR0VwTzF4eVhHNTlPMXh5WEc1Y2NseHVRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTnlaV0YwWlZOdmJHbGtJRDBnWm5WdVkzUnBiMjRnS0dSaGRHRXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUTFaVGIyeHBaRVZzWlcxbGJuUW9aR0YwWVN3Z2RHaHBjeXdnZEdocGN5NW5iRzlpWVd4RVlYUmhLVHRjY2x4dWZUdGNjbHh1WEhKY2JrTmhiblpoYzFKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amRIaFVjbUZ1YzJadmNtMGdQU0JtZFc1amRHbHZiaWh3Y205d2N5bDdYSEpjYmlBZ0lDQnBaaWh3Y205d2Mxc3dYU0E5UFQwZ01TQW1KaUJ3Y205d2Mxc3hYU0E5UFQwZ01DQW1KaUJ3Y205d2MxczBYU0E5UFQwZ01DQW1KaUJ3Y205d2MxczFYU0E5UFQwZ01TQW1KaUJ3Y205d2Mxc3hNbDBnUFQwOUlEQWdKaVlnY0hKdmNITmJNVE5kSUQwOVBTQXdLWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVkyeGxZWEpEWVc1MllYTXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1MGNtRnVjMlp2Y20wb2NISnZjSE5iTUYwc2NISnZjSE5iTVYwc2NISnZjSE5iTkYwc2NISnZjSE5iTlYwc2NISnZjSE5iTVRKZExIQnliM0J6V3pFelhTazdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xTllYUXVZMnh2Ym1WR2NtOXRVSEp2Y0hNb2NISnZjSE1wTzF4eVhHNGdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMU5ZWFF1ZEhKaGJuTm1iM0p0S0hSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTFSeUxuQnliM0J6V3pCZExIUm9hWE11WTI5dWRHVjRkRVJoZEdFdVkxUnlMbkJ5YjNCeld6RmRMSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMVJ5TG5CeWIzQnpXekpkTEhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTFSeUxuQnliM0J6V3pOZExIUm9hWE11WTI5dWRHVjRkRVJoZEdFdVkxUnlMbkJ5YjNCeld6UmRMSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMVJ5TG5CeWIzQnpXelZkTEhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTFSeUxuQnliM0J6V3paZExIUm9hWE11WTI5dWRHVjRkRVJoZEdFdVkxUnlMbkJ5YjNCeld6ZGRMSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMVJ5TG5CeWIzQnpXemhkTEhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTFSeUxuQnliM0J6V3psZExIUm9hWE11WTI5dWRHVjRkRVJoZEdFdVkxUnlMbkJ5YjNCeld6RXdYU3gwYUdsekxtTnZiblJsZUhSRVlYUmhMbU5VY2k1d2NtOXdjMXN4TVYwc2RHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alZISXVjSEp2Y0hOYk1USmRMSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMVJ5TG5CeWIzQnpXekV6WFN4MGFHbHpMbU52Ym5SbGVIUkVZWFJoTG1OVWNpNXdjbTl3YzFzeE5GMHNkR2hwY3k1amIyNTBaWGgwUkdGMFlTNWpWSEl1Y0hKdmNITmJNVFZkS1Z4eVhHNGdJQ0FnTHk5MGFHbHpMbU52Ym5SbGVIUkVZWFJoTG1OVWNpNTBjbUZ1YzJadmNtMG9jSEp2Y0hOYk1GMHNjSEp2Y0hOYk1WMHNjSEp2Y0hOYk1sMHNjSEp2Y0hOYk0xMHNjSEp2Y0hOYk5GMHNjSEp2Y0hOYk5WMHNjSEp2Y0hOYk5sMHNjSEp2Y0hOYk4xMHNjSEp2Y0hOYk9GMHNjSEp2Y0hOYk9WMHNjSEp2Y0hOYk1UQmRMSEJ5YjNCeld6RXhYU3h3Y205d2Mxc3hNbDBzY0hKdmNITmJNVE5kTEhCeWIzQnpXekUwWFN4d2NtOXdjMXN4TlYwcE8xeHlYRzRnSUNBZ2RHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alZISXVZMnh2Ym1WR2NtOXRVSEp2Y0hNb2RHaHBjeTUwY21GdWMyWnZjbTFOWVhRdWNISnZjSE1wTzF4eVhHNGdJQ0FnZG1GeUlIUnlVSEp2Y0hNZ1BTQjBhR2x6TG1OdmJuUmxlSFJFWVhSaExtTlVjaTV3Y205d2N6dGNjbHh1SUNBZ0lIUm9hWE11WTJGdWRtRnpRMjl1ZEdWNGRDNXpaWFJVY21GdWMyWnZjbTBvZEhKUWNtOXdjMXN3WFN4MGNsQnliM0J6V3pGZExIUnlVSEp2Y0hOYk5GMHNkSEpRY205d2MxczFYU3gwY2xCeWIzQnpXekV5WFN4MGNsQnliM0J6V3pFelhTazdYSEpjYm4wN1hISmNibHh5WEc1RFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNSNFQzQmhZMmwwZVNBOUlHWjFibU4wYVc5dUtHOXdLWHRjY2x4dUlDQWdJR2xtS0c5d0lEMDlQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppZ2hkR2hwY3k1eVpXNWtaWEpEYjI1bWFXY3VZMnhsWVhKRFlXNTJZWE1wZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJGdWRtRnpRMjl1ZEdWNGRDNW5iRzlpWVd4QmJIQm9ZU0FxUFNCdmNDQThJREFnUHlBd0lEb2diM0E3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NWpiMjUwWlhoMFJHRjBZUzVqVHlBcVBTQnZjQ0E4SURBZ1B5QXdJRG9nYjNBN1hISmNiaUFnSUNCMGFHbHpMbU5oYm5aaGMwTnZiblJsZUhRdVoyeHZZbUZzUVd4d2FHRWdQU0IwYUdsekxtTnZiblJsZUhSRVlYUmhMbU5QTzF4eVhHNTlPMXh5WEc1Y2NseHVRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExuSmxjMlYwSUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxuSmxibVJsY2tOdmJtWnBaeTVqYkdWaGNrTmhiblpoY3lsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1allXNTJZWE5EYjI1MFpYaDBMbkpsYzNSdmNtVW9LVHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtTnZiblJsZUhSRVlYUmhMbU5CY25KUWIzTWdQU0F3TzF4eVhHNGdJQ0FnZEdocGN5NWpiMjUwWlhoMFJHRjBZUzVqVkhJdWNtVnpaWFFvS1R0Y2NseHVJQ0FnSUhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTA4Z1BTQXhPMXh5WEc1OU8xeHlYRzVjY2x4dVEyRnVkbUZ6VW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG5OaGRtVWdQU0JtZFc1amRHbHZiaWhoWTNScGIyNUdiR0ZuS1h0Y2NseHVJQ0FnSUdsbUtDRjBhR2x6TG5KbGJtUmxja052Ym1acFp5NWpiR1ZoY2tOaGJuWmhjeWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVqWVc1MllYTkRiMjUwWlhoMExuTmhkbVVvS1R0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaGhZM1JwYjI1R2JHRm5LWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU5oYm5aaGMwTnZiblJsZUhRdWMyRjJaU2dwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlIQnliM0J6SUQwZ2RHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alZISXVjSEp2Y0hNN1hISmNiaUFnSUNCcFppaDBhR2x6TG1OdmJuUmxlSFJFWVhSaExuTmhkbVZrVzNSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTBGeWNsQnZjMTBnUFQwOUlHNTFiR3dnZkh3Z2RHaHBjeTVqYjI1MFpYaDBSR0YwWVM1ellYWmxaRnQwYUdsekxtTnZiblJsZUhSRVlYUmhMbU5CY25KUWIzTmRJRDA5UFNCMWJtUmxabWx1WldRcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVjMkYyWldSYmRHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alFYSnlVRzl6WFNBOUlHNWxkeUJCY25KaGVTZ3hOaWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2FTeGhjbklnUFNCMGFHbHpMbU52Ym5SbGVIUkVZWFJoTG5OaGRtVmtXM1JvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMEZ5Y2xCdmMxMDdYSEpjYmlBZ0lDQm1iM0lvYVQwd08yazhNVFk3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnWVhKeVcybGRJRDBnY0hKdmNITmJhVjA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtTnZiblJsZUhSRVlYUmhMbk5oZG1Wa1QzQmJkR2hwY3k1amIyNTBaWGgwUkdGMFlTNWpRWEp5VUc5elhTQTlJSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMDg3WEhKY2JpQWdJQ0IwYUdsekxtTnZiblJsZUhSRVlYUmhMbU5CY25KUWIzTWdLejBnTVR0Y2NseHVmVHRjY2x4dVhISmNia05oYm5aaGMxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNXlaWE4wYjNKbElEMGdablZ1WTNScGIyNG9ZV04wYVc5dVJteGhaeWw3WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVkyeGxZWEpEWVc1MllYTXBlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1eVpYTjBiM0psS0NrN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9ZV04wYVc5dVJteGhaeWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVqWVc1MllYTkRiMjUwWlhoMExuSmxjM1J2Y21Vb0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11WTI5dWRHVjRkRVJoZEdFdVkwRnljbEJ2Y3lBdFBTQXhPMXh5WEc0Z0lDQWdkbUZ5SUhCdmNIQmxaQ0E5SUhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1YzJGMlpXUmJkR2hwY3k1amIyNTBaWGgwUkdGMFlTNWpRWEp5VUc5elhUdGNjbHh1SUNBZ0lIWmhjaUJwTEdGeWNpQTlJSFJvYVhNdVkyOXVkR1Y0ZEVSaGRHRXVZMVJ5TG5CeWIzQnpPMXh5WEc0Z0lDQWdabTl5S0drOU1EdHBQREUyTzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUdGeWNsdHBYU0E5SUhCdmNIQmxaRnRwWFR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1elpYUlVjbUZ1YzJadmNtMG9jRzl3Y0dWa1d6QmRMSEJ2Y0hCbFpGc3hYU3h3YjNCd1pXUmJORjBzY0c5d2NHVmtXelZkTEhCdmNIQmxaRnN4TWwwc2NHOXdjR1ZrV3pFelhTazdYSEpjYmlBZ0lDQndiM0J3WldRZ1BTQjBhR2x6TG1OdmJuUmxlSFJFWVhSaExuTmhkbVZrVDNCYmRHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alFYSnlVRzl6WFR0Y2NseHVJQ0FnSUhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTA4Z1BTQndiM0J3WldRN1hISmNiaUFnSUNCMGFHbHpMbU5oYm5aaGMwTnZiblJsZUhRdVoyeHZZbUZzUVd4d2FHRWdQU0J3YjNCd1pXUTdYSEpjYm4wN1hISmNibHh5WEc1RFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTI5dVptbG5RVzVwYldGMGFXOXVJRDBnWm5WdVkzUnBiMjRvWVc1cGJVUmhkR0VwZTF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdExuZHlZWEJ3WlhJcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVlXNXBiV0YwYVc5dVNYUmxiUzVqYjI1MFlXbHVaWElnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RqWVc1MllYTW5LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwdVkyOXVkR0ZwYm1WeUxuTjBlV3hsTG5kcFpIUm9JRDBnSnpFd01DVW5PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1amIyNTBZV2x1WlhJdWMzUjViR1V1YUdWcFoyaDBJRDBnSnpFd01DVW5PMXh5WEc0Z0lDQWdJQ0FnSUM4dmRHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdExtTnZiblJoYVc1bGNpNXpkSGxzWlM1MGNtRnVjMlp2Y20wZ1BTQW5kSEpoYm5Oc1lYUmxNMlFvTUN3d0xEQXBKenRjY2x4dUlDQWdJQ0FnSUNBdkwzUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNWpiMjUwWVdsdVpYSXVjM1I1YkdVdWQyVmlhMmwwVkhKaGJuTm1iM0p0SUQwZ0ozUnlZVzV6YkdGMFpUTmtLREFzTUN3d0tTYzdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWhibWx0WVhScGIyNUpkR1Z0TG1OdmJuUmhhVzVsY2k1emRIbHNaUzUwY21GdWMyWnZjbTFQY21sbmFXNGdQU0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzB1WTI5dWRHRnBibVZ5TG5OMGVXeGxMbTF2ZWxSeVlXNXpabTl5YlU5eWFXZHBiaUE5SUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1amIyNTBZV2x1WlhJdWMzUjViR1V1ZDJWaWEybDBWSEpoYm5ObWIzSnRUM0pwWjJsdUlEMGdkR2hwY3k1aGJtbHRZWFJwYjI1SmRHVnRMbU52Ym5SaGFXNWxjaTV6ZEhsc1pWc25MWGRsWW10cGRDMTBjbUZ1YzJadmNtMG5YU0E5SUZ3aU1IQjRJREJ3ZUNBd2NIaGNJanRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwdWQzSmhjSEJsY2k1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMHVZMjl1ZEdGcGJtVnlLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU5oYm5aaGMwTnZiblJsZUhRZ1BTQjBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMHVZMjl1ZEdGcGJtVnlMbWRsZEVOdmJuUmxlSFFvSnpKa0p5azdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVkyeGhjM05PWVcxbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNWpiMjUwWVdsdVpYSXVjMlYwUVhSMGNtbGlkWFJsS0NkamJHRnpjeWNzSUhSb2FYTXVjbVZ1WkdWeVEyOXVabWxuTG1Oc1lYTnpUbUZ0WlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1allXNTJZWE5EYjI1MFpYaDBJRDBnZEdocGN5NXlaVzVrWlhKRGIyNW1hV2N1WTI5dWRHVjRkRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdVpHRjBZU0E5SUdGdWFXMUVZWFJoTzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbU5oYm5aaGMwTnZiblJsZUhRZ1BTQjBhR2x6TG1OaGJuWmhjME52Ym5SbGVIUTdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbWx6UkdGemFHVmtJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWRHOTBZV3hHY21GdFpYTWdQU0JOWVhSb0xtWnNiMjl5S0dGdWFXMUVZWFJoTG5SbUtUdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdWMmxrZEdnZ1BTQmhibWx0UkdGMFlTNTNPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtTnZiWEJJWldsbmFIUWdQU0JoYm1sdFJHRjBZUzVvTzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbVp5WVcxbFVtRjBaU0E5SUdGdWFXMUVZWFJoTG1aeU8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1aeVlXMWxTV1FnUFNBd08xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJSGM2SUdGdWFXMUVZWFJoTG5jc1hISmNiaUFnSUNBZ0lDQWdhRG9nWVc1cGJVUmhkR0V1YUZ4eVhHNGdJQ0FnZlR0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzV3Y205bmNtVnpjMmwyWlV4dllXUWdQU0IwYUdsekxuSmxibVJsY2tOdmJtWnBaeTV3Y205bmNtVnpjMmwyWlV4dllXUTdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnljeUE5SUdGdWFXMUVZWFJoTG14aGVXVnljenRjY2x4dUlDQWdJSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6SUQwZ2UzMDdYSEpjYmlBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTUzSUQwZ1lXNXBiVVJoZEdFdWR6dGNjbHh1SUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0UTJGdWRtRnpMbWdnUFNCaGJtbHRSR0YwWVM1b08xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUlEMGdibVYzSUVadmJuUk5ZVzVoWjJWeUtDazdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVptOXVkRTFoYm1GblpYSXVZV1JrUTJoaGNuTW9ZVzVwYlVSaGRHRXVZMmhoY25NcE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUxtRmtaRVp2Ym5SektHRnVhVzFFWVhSaExtWnZiblJ6TEdSdlkzVnRaVzUwTG1KdlpIa3BPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtZGxkRUZ6YzJWMFJHRjBZU0E5SUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1blpYUkJjM05sZEVSaGRHRXVZbWx1WkNoMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwcE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1kbGRFRnpjMlYwYzFCaGRHZ2dQU0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzB1WjJWMFFYTnpaWFJ6VUdGMGFDNWlhVzVrS0hSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlNrN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Wld4bGJXVnVkRXh2WVdSbFpDQTlJSFJvYVhNdVlXNXBiV0YwYVc5dVNYUmxiUzVsYkdWdFpXNTBURzloWkdWa0xtSnBibVFvZEdocGN5NWhibWx0WVhScGIyNUpkR1Z0S1R0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVoWkdSUVpXNWthVzVuUld4bGJXVnVkQ0E5SUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1aFpHUlFaVzVrYVc1blJXeGxiV1Z1ZEM1aWFXNWtLSFJvYVhNdVlXNXBiV0YwYVc5dVNYUmxiU2s3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVkSEpoYm5ObWIzSnRRMkZ1ZG1GeklEMGdkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE03WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFsYm5SeklEMGdRWEp5WVhrdVlYQndiSGtvYm5Wc2JDeDdiR1Z1WjNSb09tRnVhVzFFWVhSaExteGhlV1Z5Y3k1c1pXNW5kR2g5S1R0Y2NseHVYSEpjYmlBZ0lDQjBhR2x6TG5Wd1pHRjBaVU52Ym5SaGFXNWxjbE5wZW1Vb0tUdGNjbHh1ZlR0Y2NseHVYSEpjYmtOaGJuWmhjMUpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzUxY0dSaGRHVkRiMjUwWVdsdVpYSlRhWHBsSUQwZ1puVnVZM1JwYjI0Z0tDa2dlMXh5WEc0Z0lDQWdkbUZ5SUdWc1pXMWxiblJYYVdSMGFDeGxiR1Z0Wlc1MFNHVnBaMmgwTzF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdExuZHlZWEJ3WlhJZ0ppWWdkR2hwY3k1aGJtbHRZWFJwYjI1SmRHVnRMbU52Ym5SaGFXNWxjaWw3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEZkcFpIUm9JRDBnZEdocGN5NWhibWx0WVhScGIyNUpkR1Z0TG5keVlYQndaWEl1YjJabWMyVjBWMmxrZEdnN1hISmNiaUFnSUNBZ0lDQWdaV3hsYldWdWRFaGxhV2RvZENBOUlIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNTNjbUZ3Y0dWeUxtOW1abk5sZEVobGFXZG9kRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwdVkyOXVkR0ZwYm1WeUxuTmxkRUYwZEhKcFluVjBaU2duZDJsa2RHZ25MR1ZzWlcxbGJuUlhhV1IwYUNBcUlIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxtUndjaUFwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNWpiMjUwWVdsdVpYSXVjMlYwUVhSMGNtbGlkWFJsS0Nkb1pXbG5hSFFuTEdWc1pXMWxiblJJWldsbmFIUWdLaUIwYUdsekxuSmxibVJsY2tOdmJtWnBaeTVrY0hJcE8xeHlYRzRnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEZkcFpIUm9JRDBnZEdocGN5NWpZVzUyWVhORGIyNTBaWGgwTG1OaGJuWmhjeTUzYVdSMGFDQXFJSFJvYVhNdWNtVnVaR1Z5UTI5dVptbG5MbVJ3Y2p0Y2NseHVJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MFNHVnBaMmgwSUQwZ2RHaHBjeTVqWVc1MllYTkRiMjUwWlhoMExtTmhiblpoY3k1b1pXbG5hSFFnS2lCMGFHbHpMbkpsYm1SbGNrTnZibVpwWnk1a2NISTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjJZWElnWld4bGJXVnVkRkpsYkN4aGJtbHRZWFJwYjI1U1pXdzdYSEpjYmlBZ0lDQnBaaWgwYUdsekxuSmxibVJsY2tOdmJtWnBaeTV3Y21WelpYSjJaVUZ6Y0dWamRGSmhkR2x2TG1sdVpHVjRUMllvSjIxbFpYUW5LU0FoUFQwZ0xURWdmSHdnZEdocGN5NXlaVzVrWlhKRGIyNW1hV2N1Y0hKbGMyVnlkbVZCYzNCbFkzUlNZWFJwYnk1cGJtUmxlRTltS0NkemJHbGpaU2NwSUNFOVBTQXRNU2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEJoY2lBOUlIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxuQnlaWE5sY25abFFYTndaV04wVW1GMGFXOHVjM0JzYVhRb0p5QW5LVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdabWxzYkZSNWNHVWdQU0J3WVhKYk1WMGdmSHdnSjIxbFpYUW5PMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQndiM01nUFNCd1lYSmJNRjBnZkh3Z0ozaE5hV1JaVFdsa0p6dGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2VGQnZjeUE5SUhCdmN5NXpkV0p6ZEhJb01DdzBLVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdlVkJ2Y3lBOUlIQnZjeTV6ZFdKemRISW9OQ2s3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEZKbGJDQTlJR1ZzWlcxbGJuUlhhV1IwYUM5bGJHVnRaVzUwU0dWcFoyaDBPMXh5WEc0Z0lDQWdJQ0FnSUdGdWFXMWhkR2x2YmxKbGJDQTlJSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5jdmRHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVhRHRjY2x4dUlDQWdJQ0FnSUNCcFppaGhibWx0WVhScGIyNVNaV3crWld4bGJXVnVkRkpsYkNBbUppQm1hV3hzVkhsd1pTQTlQVDBnSjIxbFpYUW5JSHg4SUdGdWFXMWhkR2x2YmxKbGJEeGxiR1Z0Wlc1MFVtVnNJQ1ltSUdacGJHeFVlWEJsSUQwOVBTQW5jMnhwWTJVbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVjM2dnUFNCbGJHVnRaVzUwVjJsa2RHZ3ZLSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5jdmRHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVpIQnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YzNrZ1BTQmxiR1Z0Wlc1MFYybGtkR2d2S0hSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxuY3ZkR2hwY3k1eVpXNWtaWEpEYjI1bWFXY3VaSEJ5S1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMURZVzUyWVhNdWMzZ2dQU0JsYkdWdFpXNTBTR1ZwWjJoMEx5aDBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTVvSUM4Z2RHaHBjeTV5Wlc1a1pYSkRiMjVtYVdjdVpIQnlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YzNrZ1BTQmxiR1Z0Wlc1MFNHVnBaMmgwTHloMGFHbHpMblJ5WVc1elptOXliVU5oYm5aaGN5NW9JQzhnZEdocGN5NXlaVzVrWlhKRGIyNW1hV2N1WkhCeUtUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtS0hoUWIzTWdQVDA5SUNkNFRXbGtKeUFtSmlBb0tHRnVhVzFoZEdsdmJsSmxiRHhsYkdWdFpXNTBVbVZzSUNZbUlHWnBiR3hVZVhCbFBUMDlKMjFsWlhRbktTQjhmQ0FvWVc1cGJXRjBhVzl1VW1Wc1BtVnNaVzFsYm5SU1pXd2dKaVlnWm1sc2JGUjVjR1VnUFQwOUlDZHpiR2xqWlNjcEtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0UTJGdWRtRnpMblI0SUQwZ0tHVnNaVzFsYm5SWGFXUjBhQzEwYUdsekxuUnlZVzV6Wm05eWJVTmhiblpoY3k1M0tpaGxiR1Z0Wlc1MFNHVnBaMmgwTDNSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxtZ3BLUzh5S25Sb2FYTXVjbVZ1WkdWeVEyOXVabWxuTG1Sd2NqdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lvZUZCdmN5QTlQVDBnSjNoTllYZ25JQ1ltSUNnb1lXNXBiV0YwYVc5dVVtVnNQR1ZzWlcxbGJuUlNaV3dnSmlZZ1ptbHNiRlI1Y0dVOVBUMG5iV1ZsZENjcElIeDhJQ2hoYm1sdFlYUnBiMjVTWld3K1pXeGxiV1Z1ZEZKbGJDQW1KaUJtYVd4c1ZIbHdaU0E5UFQwZ0ozTnNhV05sSnlrcEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVkSGdnUFNBb1pXeGxiV1Z1ZEZkcFpIUm9MWFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5jcUtHVnNaVzFsYm5SSVpXbG5hSFF2ZEdocGN5NTBjbUZ1YzJadmNtMURZVzUyWVhNdWFDa3BLblJvYVhNdWNtVnVaR1Z5UTI5dVptbG5MbVJ3Y2p0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMblJ5WVc1elptOXliVU5oYm5aaGN5NTBlQ0E5SURBN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtIbFFiM01nUFQwOUlDZFpUV2xrSnlBbUppQW9LR0Z1YVcxaGRHbHZibEpsYkQ1bGJHVnRaVzUwVW1Wc0lDWW1JR1pwYkd4VWVYQmxQVDA5SjIxbFpYUW5LU0I4ZkNBb1lXNXBiV0YwYVc5dVVtVnNQR1ZzWlcxbGJuUlNaV3dnSmlZZ1ptbHNiRlI1Y0dVZ1BUMDlJQ2R6YkdsalpTY3BLU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5SNUlEMGdLQ2hsYkdWdFpXNTBTR1ZwWjJoMExYUm9hWE11ZEhKaGJuTm1iM0p0UTJGdWRtRnpMbWdxS0dWc1pXMWxiblJYYVdSMGFDOTBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTUzS1Nrdk1pa3FkR2hwY3k1eVpXNWtaWEpEYjI1bWFXY3VaSEJ5TzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaDVVRzl6SUQwOVBTQW5XVTFoZUNjZ0ppWWdLQ2hoYm1sdFlYUnBiMjVTWld3K1pXeGxiV1Z1ZEZKbGJDQW1KaUJtYVd4c1ZIbHdaVDA5UFNkdFpXVjBKeWtnZkh3Z0tHRnVhVzFoZEdsdmJsSmxiRHhsYkdWdFpXNTBVbVZzSUNZbUlHWnBiR3hVZVhCbElEMDlQU0FuYzJ4cFkyVW5LU2twZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuUnlZVzV6Wm05eWJVTmhiblpoY3k1MGVTQTlJQ2dvWld4bGJXVnVkRWhsYVdkb2RDMTBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTVvS2lobGJHVnRaVzUwVjJsa2RHZ3ZkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11ZHlrcEtTcDBhR2x6TG5KbGJtUmxja052Ym1acFp5NWtjSEk3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMURZVzUyWVhNdWRIa2dQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0I5Wld4elpTQnBaaWgwYUdsekxuSmxibVJsY2tOdmJtWnBaeTV3Y21WelpYSjJaVUZ6Y0dWamRGSmhkR2x2SUQwOUlDZHViMjVsSnlsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YzNnZ1BTQmxiR1Z0Wlc1MFYybGtkR2d2S0hSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxuY3ZkR2hwY3k1eVpXNWtaWEpEYjI1bWFXY3VaSEJ5S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTV6ZVNBOUlHVnNaVzFsYm5SSVpXbG5hSFF2S0hSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxtZ3ZkR2hwY3k1eVpXNWtaWEpEYjI1bWFXY3VaSEJ5S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTUwZUNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMURZVzUyWVhNdWRIa2dQU0F3TzF4eVhHNGdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMURZVzUyWVhNdWMzZ2dQU0IwYUdsekxuSmxibVJsY2tOdmJtWnBaeTVrY0hJN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YzNrZ1BTQjBhR2x6TG5KbGJtUmxja052Ym1acFp5NWtjSEk3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVkSGdnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5SNUlEMGdNRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5CeWIzQnpJRDBnVzNSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxuTjRMREFzTUN3d0xEQXNkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YzNrc01Dd3dMREFzTUN3eExEQXNkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11ZEhnc2RHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVkSGtzTUN3eFhUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtVnNaVzFsYm5SekxteGxibWQwYUR0Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWxiR1Z0Wlc1MGMxdHBYU0FtSmlCMGFHbHpMbVZzWlcxbGJuUnpXMmxkTG1SaGRHRXVkSGtnUFQwOUlEQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExuSmxjMmw2WlNoMGFHbHpMbWRzYjJKaGJFUmhkR0V1ZEhKaGJuTm1iM0p0UTJGdWRtRnpLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVEWVc1MllYTlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUdsbUtIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxtTnNaV0Z5UTJGdWRtRnpLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdExuZHlZWEJ3WlhJdWFXNXVaWEpJVkUxTUlEMGdKeWM3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVzWVhsbGNuTWdQeUIwYUdsekxteGhlV1Z5Y3k1c1pXNW5kR2dnT2lBd08xeHlYRzRnSUNBZ1ptOXlJQ2hwSUQwZ2JHVnVJQzBnTVRzZ2FTQStQU0F3T3lCcExUMHhLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1bGJHVnRaVzUwYzF0cFhTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExtUmxjM1J5YjNrb0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFsYm5SekxteGxibWQwYUNBOUlEQTdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVkyRnVkbUZ6UTI5dWRHVjRkQ0E5SUc1MWJHdzdYSEpjYmlBZ0lDQjBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMHVZMjl1ZEdGcGJtVnlJRDBnYm5Wc2JEdGNjbHh1SUNBZ0lIUm9hWE11WkdWemRISnZlV1ZrSUQwZ2RISjFaVHRjY2x4dWZUdGNjbHh1WEhKY2JrTmhiblpoYzFKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1eVpXNWtaWEpHY21GdFpTQTlJR1oxYm1OMGFXOXVLRzUxYlNsN1hISmNiaUFnSUNCcFppZ29kR2hwY3k1eVpXNWtaWEpsWkVaeVlXMWxJRDA5SUc1MWJTQW1KaUIwYUdsekxuSmxibVJsY2tOdmJtWnBaeTVqYkdWaGNrTmhiblpoY3lBOVBUMGdkSEoxWlNrZ2ZId2dkR2hwY3k1a1pYTjBjbTk1WldRZ2ZId2diblZ0SUQwOVBTQnVkV3hzS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNtVmtSbkpoYldVZ1BTQnVkVzA3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabkpoYldWT2RXMGdQU0J1ZFcwZ0xTQjBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMHVabWx5YzNSR2NtRnRaVHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlVsa0lDczlJREU3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVjSEp2YW1WamRFbHVkR1Z5Wm1GalpTNWpkWEp5Wlc1MFJuSmhiV1VnUFNCdWRXMDdYSEpjYmlBZ0lDQnBaaWgwYUdsekxuSmxibVJsY2tOdmJtWnBaeTVqYkdWaGNrTmhiblpoY3lBOVBUMGdkSEoxWlNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTmxkQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJGdWRtRnpRMjl1ZEdWNGRDNXpZWFpsS0NrN1hISmNiaUFnSUNBZ0lDQWdMeTkwYUdsekxtTmhiblpoYzBOdmJuUmxlSFF1WTJGdWRtRnpMbmRwWkhSb0lEMGdkR2hwY3k1allXNTJZWE5EYjI1MFpYaDBMbU5oYm5aaGN5NTNhV1IwYUR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJuWmhjME52Ym5SbGVIUXVZMnhsWVhKU1pXTjBLSFJvYVhNdWRISmhibk5tYjNKdFEyRnVkbUZ6TG5SNExDQjBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTUwZVN3Z2RHaHBjeTUwY21GdWMyWnZjbTFEWVc1MllYTXVkeXAwYUdsekxuUnlZVzV6Wm05eWJVTmhiblpoY3k1emVDd2dkR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11YUNwMGFHbHpMblJ5WVc1elptOXliVU5oYm5aaGN5NXplU2s3WEhKY2JpQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTmhkbVVvS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVZM1I0VkhKaGJuTm1iM0p0S0hSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxuQnliM0J6S1R0Y2NseHVJQ0FnSUhSb2FYTXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1aVpXZHBibEJoZEdnb0tUdGNjbHh1SUNBZ0lIUm9hWE11WTJGdWRtRnpRMjl1ZEdWNGRDNXlaV04wS0RBc01DeDBhR2x6TG5SeVlXNXpabTl5YlVOaGJuWmhjeTUzTEhSb2FYTXVkSEpoYm5ObWIzSnRRMkZ1ZG1GekxtZ3BPMXh5WEc0Z0lDQWdkR2hwY3k1allXNTJZWE5EYjI1MFpYaDBMbU5zYjNObFVHRjBhQ2dwTzF4eVhHNGdJQ0FnZEdocGN5NWpZVzUyWVhORGIyNTBaWGgwTG1Oc2FYQW9LVHRjY2x4dVhISmNiaUFnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2N0TFMwdExTMHRMU2NwTzF4eVhHNGdJQ0FnTHk5amIyNXpiMnhsTG14dlp5Z25Ua1ZYT2lBbkxHNTFiU2s3WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVzWVhsbGNuTXViR1Z1WjNSb08xeHlYRzRnSUNBZ2FXWW9JWFJvYVhNdVkyOXRjR3hsZEdWTVlYbGxjbk1wZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJobFkydE1ZWGxsY25Nb2JuVnRLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWIzSWdLR2tnUFNBd095QnBJRHdnYkdWdU95QnBLeXNwSUh0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtTnZiWEJzWlhSbFRHRjVaWEp6SUh4OElIUm9hWE11Wld4bGJXVnVkSE5iYVYwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUnpXMmxkTG5CeVpYQmhjbVZHY21GdFpTaHVkVzBnTFNCMGFHbHpMbXhoZVdWeWMxdHBYUzV6ZENrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdabTl5SUNocElEMGdiR1Z1SUMwZ01Uc2dhU0ErUFNBd095QnBMVDB4S1NCN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWpiMjF3YkdWMFpVeGhlV1Z5Y3lCOGZDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjMXRwWFM1eVpXNWtaWEpHY21GdFpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxtTnNaV0Z5UTJGdWRtRnpJQ0U5UFNCMGNuVmxLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYzNSdmNtVW9LVHRjY2x4dUlDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWpZVzUyWVhORGIyNTBaWGgwTG5KbGMzUnZjbVVvS1R0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia05oYm5aaGMxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWlkV2xzWkVsMFpXMGdQU0JtZFc1amRHbHZiaWh3YjNNcGUxeHlYRzRnSUNBZ2RtRnlJR1ZzWlcxbGJuUnpJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6dGNjbHh1SUNBZ0lHbG1LR1ZzWlcxbGJuUnpXM0J2YzEwZ2ZId2dkR2hwY3k1c1lYbGxjbk5iY0c5elhTNTBlU0E5UFNBNU9TbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkbUZ5SUdWc1pXMWxiblFnUFNCMGFHbHpMbU55WldGMFpVbDBaVzBvZEdocGN5NXNZWGxsY25OYmNHOXpYU3dnZEdocGN5eDBhR2x6TG1kc2IySmhiRVJoZEdFcE8xeHlYRzRnSUNBZ1pXeGxiV1Z1ZEhOYmNHOXpYU0E5SUdWc1pXMWxiblE3WEhKY2JpQWdJQ0JsYkdWdFpXNTBMbWx1YVhSRmVIQnlaWE56YVc5dWN5Z3BPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NXNZWGxsY25OYmNHOXpYUzUwZVNBOVBUMGdNQ2w3WEhKY2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1eVpYTnBlbVVvZEdocGN5NW5iRzlpWVd4RVlYUmhMblJ5WVc1elptOXliVU5oYm5aaGN5azdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1RFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTJobFkydFFaVzVrYVc1blJXeGxiV1Z1ZEhNZ0lEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSGRvYVd4bEtIUm9hWE11Y0dWdVpHbHVaMFZzWlcxbGJuUnpMbXhsYm1kMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHVnNaVzFsYm5RZ1BTQjBhR2x6TG5CbGJtUnBibWRGYkdWdFpXNTBjeTV3YjNBb0tUdGNjbHh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbU5vWldOclVHRnlaVzUwYVc1bktDazdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1RFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1YUdsa1pTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzB1WTI5dWRHRnBibVZ5TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuYm05dVpTYzdYSEpjYm4wN1hISmNibHh5WEc1RFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1YzJodmR5QTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzB1WTI5dWRHRnBibVZ5TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuWW14dlkyc25PMXh5WEc1OU8xeHlYRzVjY2x4dVEyRnVkbUZ6VW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG5ObFlYSmphRVY0ZEhKaFEyOXRjRzl6YVhScGIyNXpJRDBnWm5WdVkzUnBiMjRvWVhOelpYUnpLWHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzRnUFNCaGMzTmxkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdkbUZ5SUdac2IyRjBhVzVuUTI5dWRHRnBibVZ5SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RuSnlrN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJR2xtS0dGemMyVjBjMXRwWFM1NGRDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqYjIxd0lEMGdkR2hwY3k1amNtVmhkR1ZEYjIxd0tHRnpjMlYwYzF0cFhTeDBhR2x6TG1kc2IySmhiRVJoZEdFdVkyOXRjQ3gwYUdsekxtZHNiMkpoYkVSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjF3TG1sdWFYUkZlSEJ5WlhOemFXOXVjeWdwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDJOdmJYQXVZMjl0Y0VsdWRHVnlabUZqWlNBOUlFTnZiWEJGZUhCeVpYTnphVzl1U1c1MFpYSm1ZV05sS0dOdmJYQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMMFY0Y0hKbGMzTnBiMjV6TG1Ga1pFeGhlV1Z5YzBsdWRHVnlabUZqWlNoamIyMXdMbVZzWlcxbGJuUnpMQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVjSEp2YW1WamRFbHVkR1Z5Wm1GalpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1d2NtOXFaV04wU1c1MFpYSm1ZV05sTG5KbFoybHpkR1Z5UTI5dGNHOXphWFJwYjI0b1kyOXRjQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5TzF4eVhHNWNibVoxYm1OMGFXOXVJRWg1WW5KcFpGSmxibVJsY21WeUtHRnVhVzFoZEdsdmJrbDBaVzBzSUdOdmJtWnBaeWw3WEhKY2JpQWdJQ0IwYUdsekxtRnVhVzFoZEdsdmJrbDBaVzBnUFNCaGJtbHRZWFJwYjI1SmRHVnRPMXh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxjbk1nUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1eVpXNWtaWEpsWkVaeVlXMWxJRDBnTFRFN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0VnUFNCN1hISmNiaUFnSUNBZ0lDQWdabkpoYldWT2RXMDZJQzB4WEhKY2JpQWdJQ0I5TzF4eVhHNGdJQ0FnZEdocGN5NXlaVzVrWlhKRGIyNW1hV2NnUFNCN1hISmNiaUFnSUNBZ0lDQWdZMnhoYzNOT1lXMWxPaUFvWTI5dVptbG5JQ1ltSUdOdmJtWnBaeTVqYkdGemMwNWhiV1VwSUh4OElDY25YSEpjYmlBZ0lDQjlPMXh5WEc0Z0lDQWdkR2hwY3k1d1pXNWthVzVuUld4bGJXVnVkSE1nUFNCYlhUdGNjbHh1SUNBZ0lIUm9hWE11Wld4bGJXVnVkSE1nUFNCYlhUdGNjbHh1SUNBZ0lIUm9hWE11ZEdoeVpXVkVSV3hsYldWdWRITWdQU0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVaR1Z6ZEhKdmVXVmtJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjBhR2x6TG1OaGJXVnlZU0E5SUc1MWJHdzdYSEpjYmlBZ0lDQjBhR2x6TG5OMWNIQnZjblJ6TTJRZ1BTQjBjblZsTzF4eVhHNWNjbHh1ZlZ4eVhHNWNjbHh1WlhoMFpXNWtVSEp2ZEc5MGVYQmxLRUpoYzJWU1pXNWtaWEpsY2l4SWVXSnlhV1JTWlc1a1pYSmxjaWs3WEhKY2JseHlYRzVJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdSSmRHVnRJRDBnVTFaSFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtSjFhV3hrU1hSbGJUdGNjbHh1WEhKY2JraDVZbkpwWkZKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amFHVmphMUJsYm1ScGJtZEZiR1Z0Wlc1MGN5QWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnZDJocGJHVW9kR2hwY3k1d1pXNWthVzVuUld4bGJXVnVkSE11YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdaV3hsYldWdWRDQTlJSFJvYVhNdWNHVnVaR2x1WjBWc1pXMWxiblJ6TG5CdmNDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblF1WTJobFkydFFZWEpsYm5ScGJtY29LVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JraDVZbkpwWkZKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1aGNIQmxibVJGYkdWdFpXNTBTVzVRYjNNZ1BTQm1kVzVqZEdsdmJpaGxiR1Z0Wlc1MExDQndiM01wZTF4eVhHNGdJQ0FnZG1GeUlHNWxkMFJQVFVWc1pXMWxiblFnUFNCbGJHVnRaVzUwTG1kbGRFSmhjMlZGYkdWdFpXNTBLQ2s3WEhKY2JpQWdJQ0JwWmlnaGJtVjNSRTlOUld4bGJXVnVkQ2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlHeGhlV1Z5SUQwZ2RHaHBjeTVzWVhsbGNuTmJjRzl6WFR0Y2NseHVJQ0FnSUdsbUtDRnNZWGxsY2k1a1pHUWdmSHdnSVhSb2FYTXVjM1Z3Y0c5eWRITXpaQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdVpYaDBSRTlOUld4bGJXVnVkQ3dnYm1WNGRFeGhlV1Z5TzF4eVhHNGdJQ0FnSUNBZ0lIZG9hV3hsS0drOGNHOXpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEdocGN5NWxiR1Z0Wlc1MGMxdHBYU0FtSmlCMGFHbHpMbVZzWlcxbGJuUnpXMmxkSVQwOUlIUnlkV1VnSmlZZ2RHaHBjeTVsYkdWdFpXNTBjMXRwWFM1blpYUkNZWE5sUld4bGJXVnVkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYaDBUR0Y1WlhJZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVY0ZEVSUFRVVnNaVzFsYm5RZ1BTQjBhR2x6TG14aGVXVnljMXRwWFM1a1pHUWdQeUIwYUdsekxtZGxkRlJvY21WbFJFTnZiblJoYVc1bGNrSjVVRzl6S0drcElEb2dibVY0ZEV4aGVXVnlMbWRsZEVKaGMyVkZiR1Z0Wlc1MEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FTQXJQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmlodVpYaDBSRTlOUld4bGJXVnVkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGc1lYbGxjaTVrWkdRZ2ZId2dJWFJvYVhNdWMzVndjRzl5ZEhNelpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQzVwYm5ObGNuUkNaV1p2Y21Vb2JtVjNSRTlOUld4bGJXVnVkQ3dnYm1WNGRFUlBUVVZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvSVd4aGVXVnlMbVJrWkNCOGZDQWhkR2hwY3k1emRYQndiM0owY3pOa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0c1bGQwUlBUVVZzWlcxbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUZrWkZSdk0yUkRiMjUwWVdsdVpYSW9ibVYzUkU5TlJXeGxiV1Z1ZEN4d2IzTXBPMXh5WEc0Z0lDQWdmVnh5WEc1OU8xeHlYRzVjY2x4dVhISmNia2g1WW5KcFpGSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWQ1lYTmxJRDBnWm5WdVkzUnBiMjRnS0dSaGRHRXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQnVaWGNnVTFaSFFtRnpaVVZzWlcxbGJuUW9aR0YwWVN3Z2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5Rc2RHaHBjeTVuYkc5aVlXeEVZWFJoTEhSb2FYTXBPMXh5WEc1OU8xeHlYRzVjY2x4dVNIbGljbWxrVW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVk5vWVhCbElEMGdablZ1WTNScGIyNGdLR1JoZEdFcElIdGNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxuTjFjSEJ2Y25Sek0yUXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NWTm9ZWEJsUld4bGJXVnVkQ2hrWVhSaExDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDeDBhR2x6TG1kc2IySmhiRVJoZEdFc2RHaHBjeWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVoVGFHRndaVVZzWlcxbGJuUW9aR0YwWVN3Z2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5Rc2RHaHBjeTVuYkc5aVlXeEVZWFJoTEhSb2FYTXBPMXh5WEc1OU8xeHlYRzVjY2x4dVNIbGljbWxrVW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVlJsZUhRZ1BTQm1kVzVqZEdsdmJpQW9aR0YwWVNrZ2UxeHlYRzRnSUNBZ2FXWW9JWFJvYVhNdWMzVndjRzl5ZEhNelpDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCVFZrZFVaWGgwUld4bGJXVnVkQ2hrWVhSaExDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDeDBhR2x6TG1kc2IySmhiRVJoZEdFc2RHaHBjeWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdibVYzSUVoVVpYaDBSV3hsYldWdWRDaGtZWFJoTENCMGFHbHpMbXhoZVdWeVJXeGxiV1Z1ZEN4MGFHbHpMbWRzYjJKaGJFUmhkR0VzZEdocGN5azdYSEpjYm4wN1hISmNibHh5WEc1SWVXSnlhV1JTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxRMkZ0WlhKaElEMGdablZ1WTNScGIyNGdLR1JoZEdFcElIdGNjbHh1SUNBZ0lIUm9hWE11WTJGdFpYSmhJRDBnYm1WM0lFaERZVzFsY21GRmJHVnRaVzUwS0dSaGRHRXNJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMSFJvYVhNdVoyeHZZbUZzUkdGMFlTeDBhR2x6S1R0Y2NseHVJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmhiV1Z5WVR0Y2NseHVmVHRjY2x4dVhISmNia2g1WW5KcFpGSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWSmJXRm5aU0E5SUdaMWJtTjBhVzl1SUNoa1lYUmhLU0I3WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTV6ZFhCd2IzSjBjek5rS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRWxKYldGblpVVnNaVzFsYm5Rb1pHRjBZU3dnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFzZEdocGN5NW5iRzlpWVd4RVlYUmhMSFJvYVhNcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QklTVzFoWjJWRmJHVnRaVzUwS0dSaGRHRXNJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMSFJvYVhNdVoyeHZZbUZzUkdGMFlTeDBhR2x6S1R0Y2NseHVmVHRjY2x4dVhISmNia2g1WW5KcFpGSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWRGIyMXdJRDBnWm5WdVkzUnBiMjRnS0dSaGRHRXBJSHRjY2x4dUlDQWdJR2xtS0NGMGFHbHpMbk4xY0hCdmNuUnpNMlFwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dTVU52YlhCRmJHVnRaVzUwS0dSaGRHRXNJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMSFJvYVhNdVoyeHZZbUZzUkdGMFlTeDBhR2x6S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1NFTnZiWEJGYkdWdFpXNTBLR1JoZEdFc0lIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExIUm9hWE11WjJ4dlltRnNSR0YwWVN4MGFHbHpLVHRjY2x4dVhISmNibjA3WEhKY2JseHlYRzVJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFUyOXNhV1FnUFNCbWRXNWpkR2x2YmlBb1pHRjBZU2tnZTF4eVhHNGdJQ0FnYVdZb0lYUm9hWE11YzNWd2NHOXlkSE16WkNsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJKVTI5c2FXUkZiR1Z0Wlc1MEtHUmhkR0VzSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTEhSb2FYTXVaMnh2WW1Gc1JHRjBZU3gwYUdsektUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dTRk52Ykdsa1JXeGxiV1Z1ZENoa1lYUmhMQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ3gwYUdsekxtZHNiMkpoYkVSaGRHRXNkR2hwY3lrN1hISmNibjA3WEhKY2JseHlYRzVJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVaMlYwVkdoeVpXVkVRMjl1ZEdGcGJtVnlRbmxRYjNNZ1BTQm1kVzVqZEdsdmJpaHdiM01wZTF4eVhHNGdJQ0FnZG1GeUlHa2dQU0F3TENCc1pXNGdQU0IwYUdsekxuUm9jbVZsUkVWc1pXMWxiblJ6TG14bGJtZDBhRHRjY2x4dUlDQWdJSGRvYVd4bEtHazhiR1Z1S1NCN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NTBhSEpsWlVSRmJHVnRaVzUwYzF0cFhTNXpkR0Z5ZEZCdmN5QThQU0J3YjNNZ0ppWWdkR2hwY3k1MGFISmxaVVJGYkdWdFpXNTBjMXRwWFM1bGJtUlFiM01nUGowZ2NHOXpLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Sb2NtVmxSRVZzWlcxbGJuUnpXMmxkTG5CbGNuTndaV04wYVhabFJXeGxiVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhU0FyUFNBeE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFZHaHlaV1ZFUTI5dWRHRnBibVZ5SUQwZ1puVnVZM1JwYjI0b2NHOXpLWHRjY2x4dUlDQWdJSFpoY2lCd1pYSnpjR1ZqZEdsMlpVVnNaVzBnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNjbHh1SUNBZ0lITjBlV3hsUkdsMktIQmxjbk53WldOMGFYWmxSV3hsYlNrN1hISmNiaUFnSUNCd1pYSnpjR1ZqZEdsMlpVVnNaVzB1YzNSNWJHVXVkMmxrZEdnZ1BTQjBhR2x6TG1kc2IySmhiRVJoZEdFdVkyOXRjRk5wZW1VdWR5c25jSGduTzF4eVhHNGdJQ0FnY0dWeWMzQmxZM1JwZG1WRmJHVnRMbk4wZVd4bExtaGxhV2RvZENBOUlIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlM1b0t5ZHdlQ2M3WEhKY2JpQWdJQ0J3WlhKemNHVmpkR2wyWlVWc1pXMHVjM1I1YkdVdWRISmhibk5tYjNKdFQzSnBaMmx1SUQwZ2NHVnljM0JsWTNScGRtVkZiR1Z0TG5OMGVXeGxMbTF2ZWxSeVlXNXpabTl5YlU5eWFXZHBiaUE5SUhCbGNuTndaV04wYVhabFJXeGxiUzV6ZEhsc1pTNTNaV0pyYVhSVWNtRnVjMlp2Y20xUGNtbG5hVzRnUFNCY0lqVXdKU0ExTUNWY0lqdGNjbHh1SUNBZ0lIWmhjaUJqYjI1MFlXbHVaWElnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNjbHh1SUNBZ0lITjBlV3hsUkdsMktHTnZiblJoYVc1bGNpazdYSEpjYmlBZ0lDQmpiMjUwWVdsdVpYSXVjM1I1YkdVdWRISmhibk5tYjNKdElEMGdZMjl1ZEdGcGJtVnlMbk4wZVd4bExuZGxZbXRwZEZSeVlXNXpabTl5YlNBOUlDZHRZWFJ5YVhnelpDZ3hMREFzTUN3d0xEQXNNU3d3TERBc01Dd3dMREVzTUN3d0xEQXNNQ3d4S1NjN1hISmNiaUFnSUNCd1pYSnpjR1ZqZEdsMlpVVnNaVzB1WVhCd1pXNWtRMmhwYkdRb1kyOXVkR0ZwYm1WeUtUdGNjbHh1SUNBZ0lIUm9hWE11Y21WemFYcGxja1ZzWlcwdVlYQndaVzVrUTJocGJHUW9jR1Z5YzNCbFkzUnBkbVZGYkdWdEtUdGNjbHh1SUNBZ0lIWmhjaUIwYUhKbFpVUkRiMjUwWVdsdVpYSkVZWFJoSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5SaGFXNWxjanBqYjI1MFlXbHVaWElzWEhKY2JpQWdJQ0FnSUNBZ2NHVnljM0JsWTNScGRtVkZiR1Z0T25CbGNuTndaV04wYVhabFJXeGxiU3hjY2x4dUlDQWdJQ0FnSUNCemRHRnlkRkJ2Y3pvZ2NHOXpMRnh5WEc0Z0lDQWdJQ0FnSUdWdVpGQnZjem9nY0c5elhISmNiaUFnSUNCOU8xeHlYRzRnSUNBZ2RHaHBjeTUwYUhKbFpVUkZiR1Z0Wlc1MGN5NXdkWE5vS0hSb2NtVmxSRU52Ym5SaGFXNWxja1JoZEdFcE8xeHlYRzRnSUNBZ2NtVjBkWEp1SUhSb2NtVmxSRU52Ym5SaGFXNWxja1JoZEdFN1hISmNibjA3WEhKY2JseHlYRzVJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdRelpFTnZiblJoYVc1bGNuTWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11YkdGNVpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIWmhjaUJzWVhOMFZHaHlaV1ZFUTI5dWRHRnBibVZ5UkdGMFlUdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVzWVhsbGNuTmJhVjB1WkdSa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JV3hoYzNSVWFISmxaVVJEYjI1MFlXbHVaWEpFWVhSaEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSVWFISmxaVVJEYjI1MFlXbHVaWEpFWVhSaElEMGdkR2hwY3k1amNtVmhkR1ZVYUhKbFpVUkRiMjUwWVdsdVpYSW9hU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR0Z6ZEZSb2NtVmxSRU52Ym5SaGFXNWxja1JoZEdFdVpXNWtVRzl6SUQwZ1RXRjBhQzV0WVhnb2JHRnpkRlJvY21WbFJFTnZiblJoYVc1bGNrUmhkR0V1Wlc1a1VHOXpMR2twTzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4aGMzUlVhSEpsWlVSRGIyNTBZV2x1WlhKRVlYUmhJRDBnYm5Wc2JEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNUllV0p5YVdSU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVlXUmtWRzh6WkVOdmJuUmhhVzVsY2lBOUlHWjFibU4wYVc5dUtHVnNaVzBzY0c5ektYdGNjbHh1SUNBZ0lIWmhjaUJwSUQwZ01Dd2diR1Z1SUQwZ2RHaHBjeTUwYUhKbFpVUkZiR1Z0Wlc1MGN5NXNaVzVuZEdnN1hISmNiaUFnSUNCM2FHbHNaU2hwUEd4bGJpbDdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2NHOXpJRHc5SUhSb2FYTXVkR2h5WldWRVJXeGxiV1Z1ZEhOYmFWMHVaVzVrVUc5ektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR29nUFNCMGFHbHpMblJvY21WbFJFVnNaVzFsYm5SelcybGRMbk4wWVhKMFVHOXpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm1WNGRFVnNaVzFsYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkb2FXeGxLR284Y0c5ektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVaV3hsYldWdWRITmJhbDBnSmlZZ2RHaHBjeTVsYkdWdFpXNTBjMXRxWFM1blpYUkNZWE5sUld4bGJXVnVkQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVY0ZEVWc1pXMWxiblFnUFNCMGFHbHpMbVZzWlcxbGJuUnpXMnBkTG1kbGRFSmhjMlZGYkdWdFpXNTBLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnFJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JtVjRkRVZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBhSEpsWlVSRmJHVnRaVzUwYzF0cFhTNWpiMjUwWVdsdVpYSXVhVzV6WlhKMFFtVm1iM0psS0dWc1pXMHNJRzVsZUhSRmJHVnRaVzUwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR2h5WldWRVJXeGxiV1Z1ZEhOYmFWMHVZMjl1ZEdGcGJtVnlMbUZ3Y0dWdVpFTm9hV3hrS0dWc1pXMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwSUNzOUlERTdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1SWVXSnlhV1JTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTI5dVptbG5RVzVwYldGMGFXOXVJRDBnWm5WdVkzUnBiMjRvWVc1cGJVUmhkR0VwZTF4eVhHNGdJQ0FnZG1GeUlISmxjMmw2WlhKRmJHVnRJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25aR2wySnlrN1hISmNiaUFnSUNCMllYSWdkM0poY0hCbGNpQTlJSFJvYVhNdVlXNXBiV0YwYVc5dVNYUmxiUzUzY21Gd2NHVnlPMXh5WEc0Z0lDQWdjbVZ6YVhwbGNrVnNaVzB1YzNSNWJHVXVkMmxrZEdnZ1BTQmhibWx0UkdGMFlTNTNLeWR3ZUNjN1hISmNiaUFnSUNCeVpYTnBlbVZ5Uld4bGJTNXpkSGxzWlM1b1pXbG5hSFFnUFNCaGJtbHRSR0YwWVM1b0t5ZHdlQ2M3WEhKY2JpQWdJQ0IwYUdsekxuSmxjMmw2WlhKRmJHVnRJRDBnY21WemFYcGxja1ZzWlcwN1hISmNiaUFnSUNCemRIbHNaVVJwZGloeVpYTnBlbVZ5Uld4bGJTazdYSEpjYmlBZ0lDQnlaWE5wZW1WeVJXeGxiUzV6ZEhsc1pTNTBjbUZ1YzJadmNtMVRkSGxzWlNBOUlISmxjMmw2WlhKRmJHVnRMbk4wZVd4bExuZGxZbXRwZEZSeVlXNXpabTl5YlZOMGVXeGxJRDBnY21WemFYcGxja1ZzWlcwdWMzUjViR1V1Ylc5NlZISmhibk5tYjNKdFUzUjViR1VnUFNCY0ltWnNZWFJjSWp0Y2NseHVJQ0FnSUdsbUtIUm9hWE11Y21WdVpHVnlRMjl1Wm1sbkxtTnNZWE56VG1GdFpTa2dlMXh5WEc0Z0lDQWdJQ0IzY21Gd2NHVnlMbk5sZEVGMGRISnBZblYwWlNnblkyeGhjM01uTENCMGFHbHpMbkpsYm1SbGNrTnZibVpwWnk1amJHRnpjMDVoYldVcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2QzSmhjSEJsY2k1aGNIQmxibVJEYUdsc1pDaHlaWE5wZW1WeVJXeGxiU2s3WEhKY2JseHlYRzRnSUNBZ2NtVnphWHBsY2tWc1pXMHVjM1I1YkdVdWIzWmxjbVpzYjNjZ1BTQW5hR2xrWkdWdUp6dGNjbHh1SUNBZ0lIWmhjaUJ6ZG1jZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjNOMlp5Y3BPMXh5WEc0Z0lDQWdjM1puTG5ObGRFRjBkSEpwWW5WMFpTZ25kMmxrZEdnbkxDY3hKeWs3WEhKY2JpQWdJQ0J6ZG1jdWMyVjBRWFIwY21saWRYUmxLQ2RvWldsbmFIUW5MQ2N4SnlrN1hISmNiaUFnSUNCemRIbHNaVVJwZGloemRtY3BPMXh5WEc0Z0lDQWdkR2hwY3k1eVpYTnBlbVZ5Uld4bGJTNWhjSEJsYm1SRGFHbHNaQ2h6ZG1jcE8xeHlYRzRnSUNBZ2RtRnlJR1JsWm5NZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwVGxNb2MzWm5UbE1zSjJSbFpuTW5LVHRjY2x4dUlDQWdJSE4yWnk1aGNIQmxibVJEYUdsc1pDaGtaV1p6S1R0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVrWldaeklEMGdaR1ZtY3p0Y2NseHVJQ0FnSUhSb2FYTXVaR0YwWVNBOUlHRnVhVzFFWVhSaE8xeHlYRzRnSUNBZ0x5OU5ZWE5ySUdGdWFXMWhkR2x2Ymx4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbWRsZEVGemMyVjBSR0YwWVNBOUlIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNW5aWFJCYzNObGRFUmhkR0V1WW1sdVpDaDBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMHBPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtZGxkRUZ6YzJWMGMxQmhkR2dnUFNCMGFHbHpMbUZ1YVcxaGRHbHZia2wwWlcwdVoyVjBRWE56WlhSelVHRjBhQzVpYVc1a0tIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTazdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVpXeGxiV1Z1ZEV4dllXUmxaQ0E5SUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1bGJHVnRaVzUwVEc5aFpHVmtMbUpwYm1Rb2RHaHBjeTVoYm1sdFlYUnBiMjVKZEdWdEtUdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1bWNtRnRaVWxrSUQwZ01EdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlNBOUlIdGNjbHh1SUNBZ0lDQWdJQ0IzT2lCaGJtbHRSR0YwWVM1M0xGeHlYRzRnSUNBZ0lDQWdJR2c2SUdGdWFXMUVZWFJoTG1oY2NseHVJQ0FnSUgwN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVlNZWFJsSUQwZ1lXNXBiVVJoZEdFdVpuSTdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnljeUE5SUdGdWFXMUVZWFJoTG14aGVXVnljenRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNW1iMjUwVFdGdVlXZGxjaUE5SUc1bGR5QkdiMjUwVFdGdVlXZGxjaWdwTzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbVp2Ym5STllXNWhaMlZ5TG1Ga1pFTm9ZWEp6S0dGdWFXMUVZWFJoTG1Ob1lYSnpLVHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNW1iMjUwVFdGdVlXZGxjaTVoWkdSR2IyNTBjeWhoYm1sdFJHRjBZUzVtYjI1MGN5eHpkbWNwTzF4eVhHNGdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCMGFHbHpMbkpsYzJsNlpYSkZiR1Z0TzF4eVhHNGdJQ0FnZEdocGN5NWlkV2xzWkROa1EyOXVkR0ZwYm1WeWN5Z3BPMXh5WEc0Z0lDQWdkR2hwY3k1MWNHUmhkR1ZEYjI1MFlXbHVaWEpUYVhwbEtDazdYSEpjYm4wN1hISmNibHh5WEc1SWVXSnlhV1JTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lIUm9hWE11WVc1cGJXRjBhVzl1U1hSbGJTNTNjbUZ3Y0dWeUxtbHVibVZ5U0ZSTlRDQTlJQ2NuTzF4eVhHNGdJQ0FnZEdocGN5NWhibWx0WVhScGIyNUpkR1Z0TG1OdmJuUmhhVzVsY2lBOUlHNTFiR3c3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaR1ZtY3lBOUlHNTFiR3c3WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVzWVhsbGNuTWdQeUIwYUdsekxteGhlV1Z5Y3k1c1pXNW5kR2dnT2lBd08xeHlYRzRnSUNBZ1ptOXlJQ2hwSUQwZ01Ec2dhU0E4SUd4bGJqc2dhU3NyS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwYzF0cFhTNWtaWE4wY205NUtDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6TG14bGJtZDBhQ0E5SURBN1hISmNiaUFnSUNCMGFHbHpMbVJsYzNSeWIzbGxaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjBhR2x6TG1GdWFXMWhkR2x2YmtsMFpXMGdQU0J1ZFd4c08xeHlYRzU5TzF4eVhHNWNjbHh1U0hsaWNtbGtVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMblZ3WkdGMFpVTnZiblJoYVc1bGNsTnBlbVVnUFNCbWRXNWpkR2x2YmlBb0tTQjdYSEpjYmlBZ0lDQjJZWElnWld4bGJXVnVkRmRwWkhSb0lEMGdkR2hwY3k1aGJtbHRZWFJwYjI1SmRHVnRMbmR5WVhCd1pYSXViMlptYzJWMFYybGtkR2c3WEhKY2JpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZEVobGFXZG9kQ0E5SUhSb2FYTXVZVzVwYldGMGFXOXVTWFJsYlM1M2NtRndjR1Z5TG05bVpuTmxkRWhsYVdkb2REdGNjbHh1SUNBZ0lIWmhjaUJsYkdWdFpXNTBVbVZzSUQwZ1pXeGxiV1Z1ZEZkcFpIUm9MMlZzWlcxbGJuUklaV2xuYUhRN1hISmNiaUFnSUNCMllYSWdZVzVwYldGMGFXOXVVbVZzSUQwZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsTG5jdmRHaHBjeTVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsTG1nN1hISmNiaUFnSUNCMllYSWdjM2dzYzNrc2RIZ3NkSGs3WEhKY2JpQWdJQ0JwWmloaGJtbHRZWFJwYjI1U1pXdytaV3hsYldWdWRGSmxiQ2w3WEhKY2JpQWdJQ0FnSUNBZ2MzZ2dQU0JsYkdWdFpXNTBWMmxrZEdndktIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlM1M0tUdGNjbHh1SUNBZ0lDQWdJQ0J6ZVNBOUlHVnNaVzFsYm5SWGFXUjBhQzhvZEdocGN5NW5iRzlpWVd4RVlYUmhMbU52YlhCVGFYcGxMbmNwTzF4eVhHNGdJQ0FnSUNBZ0lIUjRJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQjBlU0E5SUNnb1pXeGxiV1Z1ZEVobGFXZG9kQzEwYUdsekxtZHNiMkpoYkVSaGRHRXVZMjl0Y0ZOcGVtVXVhQ29vWld4bGJXVnVkRmRwWkhSb0wzUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlM1M0tTa3ZNaWs3WEhKY2JpQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0J6ZUNBOUlHVnNaVzFsYm5SSVpXbG5hSFF2S0hSb2FYTXVaMnh2WW1Gc1JHRjBZUzVqYjIxd1UybDZaUzVvS1R0Y2NseHVJQ0FnSUNBZ0lDQnplU0E5SUdWc1pXMWxiblJJWldsbmFIUXZLSFJvYVhNdVoyeHZZbUZzUkdGMFlTNWpiMjF3VTJsNlpTNW9LVHRjY2x4dUlDQWdJQ0FnSUNCMGVDQTlJQ2hsYkdWdFpXNTBWMmxrZEdndGRHaHBjeTVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsTG5jcUtHVnNaVzFsYm5SSVpXbG5hSFF2ZEdocGN5NW5iRzlpWVd4RVlYUmhMbU52YlhCVGFYcGxMbWdwS1M4eU8xeHlYRzRnSUNBZ0lDQWdJSFI1SUQwZ01EdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11Y21WemFYcGxja1ZzWlcwdWMzUjViR1V1ZEhKaGJuTm1iM0p0SUQwZ2RHaHBjeTV5WlhOcGVtVnlSV3hsYlM1emRIbHNaUzUzWldKcmFYUlVjbUZ1YzJadmNtMGdQU0FuYldGMGNtbDRNMlFvSnlBcklITjRJQ3NnSnl3d0xEQXNNQ3d3TENjcmMza3JKeXd3TERBc01Dd3dMREVzTUN3bkszUjRLeWNzSnl0MGVTc25MREFzTVNrbk8xeHlYRzU5TzF4eVhHNWNjbHh1U0hsaWNtbGtVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbkpsYm1SbGNrWnlZVzFsSUQwZ1UxWkhVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbkpsYm1SbGNrWnlZVzFsTzF4eVhHNWNjbHh1U0hsaWNtbGtVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbWhwWkdVZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkR2hwY3k1eVpYTnBlbVZ5Uld4bGJTNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ0oyNXZibVVuTzF4eVhHNTlPMXh5WEc1Y2NseHVTSGxpY21sa1VtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExuTm9iM2NnUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2RHaHBjeTV5WlhOcGVtVnlSV3hsYlM1emRIbHNaUzVrYVhOd2JHRjVJRDBnSjJKc2IyTnJKenRjY2x4dWZUdGNjbHh1WEhKY2JraDVZbkpwWkZKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1cGJtbDBTWFJsYlhNZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkR2hwY3k1aWRXbHNaRUZzYkVsMFpXMXpLQ2s3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbU5oYldWeVlTbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWpZVzFsY21FdWMyVjBkWEFvS1R0Y2NseHVJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR05YYVdSMGFDQTlJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNWpiMjF3VTJsNlpTNTNPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpTR1ZwWjJoMElEMGdkR2hwY3k1bmJHOWlZV3hFWVhSaExtTnZiWEJUYVhwbExtZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11ZEdoeVpXVkVSV3hsYldWdWRITXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHaHlaV1ZFUld4bGJXVnVkSE5iYVYwdWNHVnljM0JsWTNScGRtVkZiR1Z0TG5OMGVXeGxMbkJsY25Od1pXTjBhWFpsSUQwZ2RHaHBjeTUwYUhKbFpVUkZiR1Z0Wlc1MGMxdHBYUzV3WlhKemNHVmpkR2wyWlVWc1pXMHVjM1I1YkdVdWQyVmlhMmwwVUdWeWMzQmxZM1JwZG1VZ1BTQk5ZWFJvTG5OeGNuUW9UV0YwYUM1d2IzY29ZMWRwWkhSb0xESXBJQ3NnVFdGMGFDNXdiM2NvWTBobGFXZG9kQ3d5S1NrZ0t5QW5jSGduTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtoNVluSnBaRkpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzV6WldGeVkyaEZlSFJ5WVVOdmJYQnZjMmwwYVc5dWN5QTlJR1oxYm1OMGFXOXVLR0Z6YzJWMGN5bDdYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnWVhOelpYUnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIWmhjaUJtYkc5aGRHbHVaME52Ym5SaGFXNWxjaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0JwWmloaGMzTmxkSE5iYVYwdWVIUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWTI5dGNDQTlJSFJvYVhNdVkzSmxZWFJsUTI5dGNDaGhjM05sZEhOYmFWMHNabXh2WVhScGJtZERiMjUwWVdsdVpYSXNkR2hwY3k1bmJHOWlZV3hFWVhSaExtTnZiWEFzYm5Wc2JDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiWEF1YVc1cGRFVjRjSEpsYzNOcGIyNXpLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXdjbTlxWldOMFNXNTBaWEptWVdObExuSmxaMmx6ZEdWeVEyOXRjRzl6YVhScGIyNG9ZMjl0Y0NrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OU8xeHlYRzVjYm1aMWJtTjBhVzl1SUVOV1FtRnpaVVZzWlcxbGJuUW9aR0YwWVN3Z1kyOXRjQ3huYkc5aVlXeEVZWFJoS1h0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZU0E5SUdkc2IySmhiRVJoZEdFN1hISmNiaUFnSUNCMGFHbHpMbVJoZEdFZ1BTQmtZWFJoTzF4eVhHNGdJQ0FnZEdocGN5NWpiMjF3SUQwZ1kyOXRjRHRjY2x4dUlDQWdJSFJvYVhNdVkyRnVkbUZ6UTI5dWRHVjRkQ0E5SUdkc2IySmhiRVJoZEdFdVkyRnVkbUZ6UTI5dWRHVjRkRHRjY2x4dUlDQWdJSFJvYVhNdWFXNXBkQ2dwTzF4eVhHNTlYSEpjYmx4eVhHNWpjbVZoZEdWRmJHVnRaVzUwS0VKaGMyVkZiR1Z0Wlc1MExDQkRWa0poYzJWRmJHVnRaVzUwS1R0Y2NseHVYSEpjYmtOV1FtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVVnNaVzFsYm5SeklEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJSFJvYVhNdVkyaGxZMnRRWVhKbGJuUnBibWNvS1R0Y2NseHVmVHRjY2x4dVhISmNia05XUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTm9aV05yUW14bGJtUk5iMlJsSUQwZ1puVnVZM1JwYjI0b1oyeHZZbUZzUkdGMFlTbDdYSEpjYmlBZ0lDQnBaaWhuYkc5aVlXeEVZWFJoTG1Kc1pXNWtUVzlrWlNBaFBUMGdkR2hwY3k1a1lYUmhMbUp0S1NCN1hISmNiaUFnSUNBZ0lDQWdaMnh2WW1Gc1JHRjBZUzVpYkdWdVpFMXZaR1VnUFNCMGFHbHpMbVJoZEdFdVltMDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2NuTzF4eVhHNGdJQ0FnSUNBZ0lITjNhWFJqYUNBb2RHaHBjeTVrWVhSaExtSnRLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01EcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a1RXOWtaVlpoYkhWbElEMGdKMjV2Y20xaGJDYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F4T2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBbmJYVnNkR2x3Ykhrbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKc1pXNWtUVzlrWlZaaGJIVmxJRDBnSjNOamNtVmxiaWM3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBek9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxWbUZzZFdVZ1BTQW5iM1psY214aGVTYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0EwT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBblpHRnlhMlZ1Snp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEVTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2RzYVdkb2RHVnVKenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURZNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliR1Z1WkUxdlpHVldZV3gxWlNBOUlDZGpiMnh2Y2kxa2IyUm5aU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBM09seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxWbUZzZFdVZ1BTQW5ZMjlzYjNJdFluVnliaWM3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBNE9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxWbUZzZFdVZ1BTQW5hR0Z5WkMxc2FXZG9kQ2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBNU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxWbUZzZFdVZ1BTQW5jMjltZEMxc2FXZG9kQ2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeE1EcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a1RXOWtaVlpoYkhWbElEMGdKMlJwWm1abGNtVnVZMlVuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01URTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2RsZUdOc2RYTnBiMjRuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01USTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2RvZFdVbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVE02WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWJHVnVaRTF2WkdWV1lXeDFaU0E5SUNkellYUjFjbUYwYVc5dUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREUwT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbFZtRnNkV1VnUFNBblkyOXNiM0luTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01UVTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYkdWdVpFMXZaR1ZXWVd4MVpTQTlJQ2RzZFcxcGJtOXphWFI1Snp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JuYkc5aVlXeEVZWFJoTG1OaGJuWmhjME52Ym5SbGVIUXVaMnh2WW1Gc1EyOXRjRzl6YVhSbFQzQmxjbUYwYVc5dUlEMGdZbXhsYm1STmIyUmxWbUZzZFdVN1hISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVjY2x4dVExWkNZWE5sUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaHdZWEpsYm5SVWNtRnVjMlp2Y20wcGUxeHlYRzRnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMblI1SUQwOVBTQXpLWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWphR1ZqYTBKc1pXNWtUVzlrWlNoMGFHbHpMbVJoZEdFdWRIa2dQVDA5SURBL2RHaHBjeTV3WVhKbGJuUkhiRzlpWVd4RVlYUmhPblJvYVhNdVoyeHZZbUZzUkdGMFlTazdYSEpjYmx4eVhHNGdJQ0FnYVdZb0lYUm9hWE11YVhOV2FYTnBZbXhsS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzFacGMybGliR1U3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG05d1RXUm1JRDBnZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dmNDNXRaR1k3WEhKY2JpQWdJQ0IwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG0xaGRFMWtaaUE5SUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJWQnliM0F1YldSbU8xeHlYRzRnSUNBZ2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXZjR0ZqYVhSNUlEMGdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV2Y0M1Mk8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCdFlYUTdYSEpjYmlBZ0lDQjJZWElnWm1sdVlXeE5ZWFFnUFNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRHRjY2x4dVhISmNiaUFnSUNCcFppaDBhR2x6TG1ocFpYSmhjbU5vZVNsN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhSb2FYTXVhR2xsY21GeVkyaDVMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0J0WVhRZ1BTQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTFRY205d0xuWXVjSEp2Y0hNN1hISmNiaUFnSUNBZ0lDQWdabWx1WVd4TllYUXVZMnh2Ym1WR2NtOXRVSEp2Y0hNb2JXRjBLVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUm9hWE11YUdsbGNtRnlZMmg1VzJsZExtWnBibUZzVkhKaGJuTm1iM0p0TG0xUWNtOXdMbTFrWmlBL0lIUnlkV1VnT2lCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGMElEMGdkR2hwY3k1b2FXVnlZWEpqYUhsYmFWMHVabWx1WVd4VWNtRnVjMlp2Y20wdWJWQnliM0F1ZGk1d2NtOXdjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabWx1WVd4TllYUXVkSEpoYm5ObWIzSnRLRzFoZEZzd1hTeHRZWFJiTVYwc2JXRjBXekpkTEcxaGRGc3pYU3h0WVhSYk5GMHNiV0YwV3pWZExHMWhkRnMyWFN4dFlYUmJOMTBzYldGMFd6aGRMRzFoZEZzNVhTeHRZWFJiTVRCZExHMWhkRnN4TVYwc2JXRjBXekV5WFN4dFlYUmJNVE5kTEcxaGRGc3hORjBzYldGMFd6RTFYU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JWEJoY21WdWRGUnlZVzV6Wm05eWJTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnBibUZzVFdGMExtTnNiMjVsUm5KdmJWQnliM0J6S0hSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJWQnliM0F1ZGk1d2NtOXdjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZENBOUlIUm9hWE11Wm1sdVlXeFVjbUZ1YzJadmNtMHViVkJ5YjNBdWRpNXdjbTl3Y3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm1sdVlXeE5ZWFF1WTJ4dmJtVkdjbTl0VUhKdmNITW9iV0YwS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYVdZb2NHRnlaVzUwVkhKaGJuTm1iM0p0S1h0Y2NseHVJQ0FnSUNBZ0lDQnRZWFFnUFNCd1lYSmxiblJVY21GdWMyWnZjbTB1YldGMExuQnliM0J6TzF4eVhHNGdJQ0FnSUNBZ0lHWnBibUZzVFdGMExuUnlZVzV6Wm05eWJTaHRZWFJiTUYwc2JXRjBXekZkTEcxaGRGc3lYU3h0WVhSYk0xMHNiV0YwV3pSZExHMWhkRnMxWFN4dFlYUmJObDBzYldGMFd6ZGRMRzFoZEZzNFhTeHRZWFJiT1Ywc2JXRjBXekV3WFN4dFlYUmJNVEZkTEcxaGRGc3hNbDBzYldGMFd6RXpYU3h0WVhSYk1UUmRMRzFoZEZzeE5WMHBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQmhZMmwwZVNBcVBTQndZWEpsYm5SVWNtRnVjMlp2Y20wdWIzQmhZMmwwZVR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTl3VFdSbUlEMGdjR0Z5Wlc1MFZISmhibk5tYjNKdExtOXdUV1JtSUQ4Z2RISjFaU0E2SUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQk5aR1k3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXRZWFJOWkdZZ1BTQndZWEpsYm5SVWNtRnVjMlp2Y20wdWJXRjBUV1JtSUQ4Z2RISjFaU0E2SUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJXRjBUV1JtWEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMbWhoYzAxaGMyc3BlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzV5Wlc1a1pYSmxjaTV6WVhabEtIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldGemEwMWhibUZuWlhJdWNtVnVaR1Z5Um5KaGJXVW9kR2hwY3k1a1lYUmhMblI1SUQwOVBTQXdQMjUxYkd3NlptbHVZV3hOWVhRcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9kR2hwY3k1a1lYUmhMbWhrS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1selZtbHphV0pzWlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTldhWE5wWW14bE8xeHlYRzVjY2x4dWZUdGNjbHh1WEhKY2JrTldRbUZ6WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1Ga1pFMWhjMnR6SUQwZ1puVnVZM1JwYjI0b1pHRjBZU2w3WEhKY2JpQWdJQ0IwYUdsekxtMWhjMnROWVc1aFoyVnlJRDBnYm1WM0lFTldUV0Z6YTBWc1pXMWxiblFvWkdGMFlTeDBhR2x6TEhSb2FYTXVaMnh2WW1Gc1JHRjBZU2s3WEhKY2JuMDdYSEpjYmx4eVhHNWNjbHh1UTFaQ1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxtTmhiblpoYzBOdmJuUmxlSFFnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1a1lYUmhJRDBnYm5Wc2JEdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVNBOUlHNTFiR3c3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbTFoYzJ0TllXNWhaMlZ5S1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1dFlYTnJUV0Z1WVdkbGNpNWtaWE4wY205NUtDazdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1RFZrSmhjMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV0U0dWc2NHVnlJRDBnYm1WM0lFMWhkSEpwZUNncE8xeHlYRzVjYm1aMWJtTjBhVzl1SUVOV1EyOXRjRVZzWlcxbGJuUW9aR0YwWVN3Z1kyOXRjQ3huYkc5aVlXeEVZWFJoS1h0Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWpiMjV6ZEhKMVkzUnZjaTVqWVd4c0tIUm9hWE1zWkdGMFlTd2dZMjl0Y0N4bmJHOWlZV3hFWVhSaEtUdGNjbHh1SUNBZ0lIWmhjaUJqYjIxd1IyeHZZbUZzUkdGMFlTQTlJSHQ5TzF4eVhHNGdJQ0FnWm05eUtIWmhjaUJ6SUdsdUlHZHNiMkpoYkVSaGRHRXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHZHNiMkpoYkVSaGRHRXVhR0Z6VDNkdVVISnZjR1Z5ZEhrb2N5a3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjF3UjJ4dlltRnNSR0YwWVZ0elhTQTlJR2RzYjJKaGJFUmhkR0ZiYzEwN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdZMjl0Y0Vkc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnWTI5dGNFZHNiMkpoYkVSaGRHRXVZMjl0Y0VobGFXZG9kQ0E5SUhSb2FYTXVaR0YwWVM1b08xeHlYRzRnSUNBZ1kyOXRjRWRzYjJKaGJFUmhkR0V1WTI5dGNGZHBaSFJvSUQwZ2RHaHBjeTVrWVhSaExuYzdYSEpjYmlBZ0lDQjBhR2x6TG5KbGJtUmxja052Ym1acFp5QTlJSHRjY2x4dUlDQWdJQ0FnSUNCamJHVmhja05oYm5aaGN6b2dkSEoxWlZ4eVhHNGdJQ0FnZlR0Y2NseHVJQ0FnSUhSb2FYTXVZMjl1ZEdWNGRFUmhkR0VnUFNCN1hISmNiaUFnSUNBZ0lDQWdjMkYyWldRZ09pQkJjbkpoZVM1aGNIQnNlU2h1ZFd4c0xIdHNaVzVuZEdnNk1UVjlLU3hjY2x4dUlDQWdJQ0FnSUNCellYWmxaRTl3T2lCQmNuSmhlUzVoY0hCc2VTaHVkV3hzTEh0c1pXNW5kR2c2TVRWOUtTeGNjbHh1SUNBZ0lDQWdJQ0JqUVhKeVVHOXpJRG9nTUN4Y2NseHVJQ0FnSUNBZ0lDQmpWSElnT2lCdVpYY2dUV0YwY21sNEtDa3NYSEpjYmlBZ0lDQWdJQ0FnWTA4Z09pQXhYSEpjYmlBZ0lDQjlPMXh5WEc0Z0lDQWdkR2hwY3k1amIyMXdiR1YwWlV4aGVXVnljeUE5SUdaaGJITmxPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SURFMU8xeHlYRzRnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiblJsZUhSRVlYUmhMbk5oZG1Wa1cybGRJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PakUyZlNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMblJ5WVc1elptOXliVTFoZENBOUlHNWxkeUJOWVhSeWFYZ29LVHRjY2x4dUlDQWdJSFJvYVhNdWNHRnlaVzUwUjJ4dlltRnNSR0YwWVNBOUlIUm9hWE11WjJ4dlltRnNSR0YwWVR0Y2NseHVJQ0FnSUhaaGNpQmpkaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMk5oYm5aaGN5Y3BPMXh5WEc0Z0lDQWdMeTlrYjJOMWJXVnVkQzVpYjJSNUxtRndjR1Z1WkVOb2FXeGtLR04yS1R0Y2NseHVJQ0FnSUdOdmJYQkhiRzlpWVd4RVlYUmhMbU5oYm5aaGMwTnZiblJsZUhRZ1BTQmpkaTVuWlhSRGIyNTBaWGgwS0NjeVpDY3BPMXh5WEc0Z0lDQWdkR2hwY3k1allXNTJZWE5EYjI1MFpYaDBJRDBnWTI5dGNFZHNiMkpoYkVSaGRHRXVZMkZ1ZG1GelEyOXVkR1Y0ZER0Y2NseHVJQ0FnSUdOMkxuZHBaSFJvSUQwZ2RHaHBjeTVrWVhSaExuYzdYSEpjYmlBZ0lDQmpkaTVvWldsbmFIUWdQU0IwYUdsekxtUmhkR0V1YUR0Y2NseHVJQ0FnSUhSb2FYTXVZMkZ1ZG1GeklEMGdZM1k3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRWdQU0JqYjIxd1IyeHZZbUZzUkdGMFlUdGNjbHh1SUNBZ0lIUm9hWE11YkdGNVpYSnpJRDBnWkdGMFlTNXNZWGxsY25NN1hISmNiaUFnSUNCMGFHbHpMbkJsYm1ScGJtZEZiR1Z0Wlc1MGN5QTlJRnRkTzF4eVhHNGdJQ0FnZEdocGN5NWxiR1Z0Wlc1MGN5QTlJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NlMnhsYm1kMGFEcDBhR2x6TG14aGVXVnljeTVzWlc1bmRHaDlLVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaR0YwWVM1MGJTbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBiU0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLSFJvYVhNc2RHaHBjeTVrWVhSaExuUnRMREFzWjJ4dlltRnNSR0YwWVM1bWNtRnRaVkpoZEdVc2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWVIUWdmSHdnSVdkc2IySmhiRVJoZEdFdWNISnZaM0psYzNOcGRtVk1iMkZrS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1KMWFXeGtRV3hzU1hSbGJYTW9LVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVqY21WaGRHVkZiR1Z0Wlc1MEtFTldRbUZ6WlVWc1pXMWxiblFzSUVOV1EyOXRjRVZzWlcxbGJuUXBPMXh5WEc1Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzUjRWSEpoYm5ObWIzSnRJRDBnUTJGdWRtRnpVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU4wZUZSeVlXNXpabTl5YlR0Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzUjRUM0JoWTJsMGVTQTlJRU5oYm5aaGMxSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpkSGhQY0dGamFYUjVPMXh5WEc1RFZrTnZiWEJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV6WVhabElEMGdRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExuTmhkbVU3WEhKY2JrTldRMjl0Y0VWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5KbGMzUnZjbVVnUFNCRFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1Y21WemRHOXlaVHRjY2x4dVExWkRiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WelpYUWdQU0FnWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUhSb2FYTXVZMjl1ZEdWNGRFUmhkR0V1WTBGeWNsQnZjeUE5SURBN1hISmNiaUFnSUNCMGFHbHpMbU52Ym5SbGVIUkVZWFJoTG1OVWNpNXlaWE5sZENncE8xeHlYRzRnSUNBZ2RHaHBjeTVqYjI1MFpYaDBSR0YwWVM1alR5QTlJREU3WEhKY2JuMDdYSEpjYmtOV1EyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbkpsYzJsNlpTQTlJR1oxYm1OMGFXOXVLSFJ5WVc1elptOXliVU5oYm5aaGN5bDdYSEpjYmlBZ0lDQjJZWElnYldGNFUyTmhiR1VnUFNCTllYUm9MbTFoZUNoMGNtRnVjMlp2Y20xRFlXNTJZWE11YzNnc2RISmhibk5tYjNKdFEyRnVkbUZ6TG5ONUtUdGNjbHh1SUNBZ0lIUm9hWE11WTJGdWRtRnpMbmRwWkhSb0lEMGdkR2hwY3k1a1lYUmhMbmNxYldGNFUyTmhiR1U3WEhKY2JpQWdJQ0IwYUdsekxtTmhiblpoY3k1b1pXbG5hSFFnUFNCMGFHbHpMbVJoZEdFdWFDcHRZWGhUWTJGc1pUdGNjbHh1SUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0UTJGdWRtRnpJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lITmpPbTFoZUZOallXeGxMRnh5WEc0Z0lDQWdJQ0FnSUhjNmRHaHBjeTVrWVhSaExuY3FiV0Y0VTJOaGJHVXNYSEpjYmlBZ0lDQWdJQ0FnYURwMGFHbHpMbVJoZEdFdWFDcHRZWGhUWTJGc1pTeGNjbHh1SUNBZ0lDQWdJQ0J3Y205d2N6cGJiV0Y0VTJOaGJHVXNNQ3d3TERBc01DeHRZWGhUWTJGc1pTd3dMREFzTUN3d0xERXNNQ3d3TERBc01Dd3hYVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkbUZ5SUdrc2JHVnVJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5NXNaVzVuZEdnN1hISmNiaUFnSUNCbWIzSW9JR2tnUFNBd095QnBJRHdnYkdWdU95QnBLejB4SUNsN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NWxiR1Z0Wlc1MGMxdHBYU0FtSmlCMGFHbHpMbVZzWlcxbGJuUnpXMmxkTG1SaGRHRXVkSGtnUFQwOUlEQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExuSmxjMmw2WlNoMGNtRnVjMlp2Y20xRFlXNTJZWE1wTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtOV1EyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbkJ5WlhCaGNtVkdjbUZ0WlNBOUlHWjFibU4wYVc5dUtHNTFiU2w3WEhKY2JpQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabkpoYldWSlpDQTlJSFJvYVhNdWNHRnlaVzUwUjJ4dlltRnNSR0YwWVM1bWNtRnRaVWxrTzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbTFrWmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZEdocGN5NWZjR0Z5Wlc1MExuQnlaWEJoY21WR2NtRnRaUzVqWVd4c0tIUm9hWE1zYm5WdEtUdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdWFYTldhWE5wWW14bFBUMDlabUZzYzJVZ0ppWWdJWFJvYVhNdVpHRjBZUzU0ZENsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RtRnlJSFJwYldWU1pXMWhjSEJsWkNBOUlHNTFiVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVkRzBwZTF4eVhHNGdJQ0FnSUNBZ0lIUnBiV1ZTWlcxaGNIQmxaQ0E5SUhSb2FYTXVkRzB1ZGp0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYVcxbFVtVnRZWEJ3WldRZ1BUMDlJSFJvYVhNdVpHRjBZUzV2Y0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhScGJXVlNaVzFoY0hCbFpDQTlJSFJvYVhNdVpHRjBZUzV2Y0NBdElERTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NXlaVzVrWlhKbFpFWnlZVzFsSUQwZ2RHbHRaVkpsYldGd2NHVmtMM1JvYVhNdVpHRjBZUzV6Y2p0Y2NseHVJQ0FnSUhaaGNpQnBMR3hsYmlBOUlIUm9hWE11Wld4bGJXVnVkSE11YkdWdVozUm9PMXh5WEc1Y2NseHVJQ0FnSUdsbUtDRjBhR2x6TG1OdmJYQnNaWFJsVEdGNVpYSnpLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbU5vWldOclRHRjVaWEp6S0c1MWJTazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm05eUtDQnBJRDBnTURzZ2FTQThJR3hsYmpzZ2FTczlNU0FwZTF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVkyOXRjR3hsZEdWTVlYbGxjbk1nZkh3Z2RHaHBjeTVsYkdWdFpXNTBjMXRwWFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRITmJhVjB1Y0hKbGNHRnlaVVp5WVcxbEtIUnBiV1ZTWlcxaGNIQmxaQzkwYUdsekxtUmhkR0V1YzNJZ0xTQjBhR2x6TG14aGVXVnljMXRwWFM1emRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVpXeGxiV1Z1ZEhOYmFWMHVaR0YwWVM1MGVTQTlQVDBnTUNBbUppQjBhR2x6TG1Wc1pXMWxiblJ6VzJsZExtZHNiMkpoYkVSaGRHRXViV1JtS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1dFpHWWdQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvZEdocGN5NW5iRzlpWVd4RVlYUmhMbTFrWmlBbUppQWhkR2hwY3k1a1lYUmhMbmgwS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJuWmhjME52Ym5SbGVIUXVZMnhsWVhKU1pXTjBLREFzSURBc0lIUm9hWE11WkdGMFlTNTNMQ0IwYUdsekxtUmhkR0V1YUNrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amRIaFVjbUZ1YzJadmNtMG9kR2hwY3k1MGNtRnVjMlp2Y20xRFlXNTJZWE11Y0hKdmNITXBPMXh5WEc0Z0lDQWdmVnh5WEc1OU8xeHlYRzVjY2x4dVExWkRiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpaHdZWEpsYm5STllYUnlhWGdwZTF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVmY0dGeVpXNTBMbkpsYm1SbGNrWnlZVzFsTG1OaGJHd29kR2hwY3l4d1lYSmxiblJOWVhSeWFYZ3BQVDA5Wm1Gc2MyVXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVaMnh2WW1Gc1JHRjBZUzV0WkdZcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCcExHeGxiaUE5SUhSb2FYTXViR0Y1WlhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQm1iM0lvSUdrZ1BTQnNaVzRnTFNBeE95QnBJRDQ5SURBN0lHa2dMVDBnTVNBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1OdmJYQnNaWFJsVEdGNVpYSnpJSHg4SUhSb2FYTXVaV3hsYldWdWRITmJhVjBwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjMXRwWFM1eVpXNWtaWEpHY21GdFpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtaGhjMDFoYzJzcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXlaVzVrWlhKbGNpNXlaWE4wYjNKbEtIUnlkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVhKemRFWnlZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVjR0Z5Wlc1MFIyeHZZbUZzUkdGMFlTNXlaVzVrWlhKbGNpNXpZWFpsS0NrN1hISmNiaUFnSUNCMGFHbHpMbkJoY21WdWRFZHNiMkpoYkVSaGRHRXVjbVZ1WkdWeVpYSXVZM1I0VkhKaGJuTm1iM0p0S0hSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJXRjBMbkJ5YjNCektUdGNjbHh1SUNBZ0lIUm9hWE11Y0dGeVpXNTBSMnh2WW1Gc1JHRjBZUzV5Wlc1a1pYSmxjaTVqZEhoUGNHRmphWFI1S0hSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQmhZMmwwZVNrN1hISmNiaUFnSUNCMGFHbHpMbkJoY21WdWRFZHNiMkpoYkVSaGRHRXVjbVZ1WkdWeVpYSXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1a2NtRjNTVzFoWjJVb2RHaHBjeTVqWVc1MllYTXNNQ3d3TEhSb2FYTXVaR0YwWVM1M0xIUm9hWE11WkdGMFlTNW9LVHRjY2x4dUlDQWdJSFJvYVhNdWNHRnlaVzUwUjJ4dlltRnNSR0YwWVM1eVpXNWtaWEpsY2k1eVpYTjBiM0psS0NrN1hISmNibHh5WEc0Z0lDQWdhV1lvZEdocGN5NW5iRzlpWVd4RVlYUmhMbTFrWmlsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTmxkQ2dwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh5WEc1Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWMyVjBSV3hsYldWdWRITWdQU0JtZFc1amRHbHZiaWhsYkdWdGN5bDdYSEpjYmlBZ0lDQjBhR2x6TG1Wc1pXMWxiblJ6SUQwZ1pXeGxiWE03WEhKY2JuMDdYSEpjYmx4eVhHNURWa052YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1blpYUkZiR1Z0Wlc1MGN5QTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bGJHVnRaVzUwY3p0Y2NseHVmVHRjY2x4dVhISmNia05XUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtUmxjM1J5YjNrZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkbUZ5SUdrc2JHVnVJRDBnZEdocGN5NXNZWGxsY25NdWJHVnVaM1JvTzF4eVhHNGdJQ0FnWm05eUtDQnBJRDBnYkdWdUlDMGdNVHNnYVNBK1BTQXdPeUJwSUMwOUlERWdLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUnpXMmxkTG1SbGMzUnliM2tvS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXViR0Y1WlhKeklEMGdiblZzYkR0Y2NseHVJQ0FnSUhSb2FYTXVaV3hsYldWdWRITWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVmY0dGeVpXNTBMbVJsYzNSeWIza3VZMkZzYkNoMGFHbHpMbDl3WVhKbGJuUXBPMXh5WEc1OU8xeHlYRzVEVmtOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWphR1ZqYTB4aGVXVnljeUE5SUVOaGJuWmhjMUpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzVqYUdWamEweGhlV1Z5Y3p0Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVluVnBiR1JKZEdWdElEMGdRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtSjFhV3hrU1hSbGJUdGNjbHh1UTFaRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZMmhsWTJ0UVpXNWthVzVuUld4bGJXVnVkSE1nUFNCRFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTJobFkydFFaVzVrYVc1blJXeGxiV1Z1ZEhNN1hISmNia05XUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1MElEMGdRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1ME8xeHlYRzVEVmtOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWlkV2xzWkVGc2JFbDBaVzF6SUQwZ1EyRnVkbUZ6VW1WdVpHVnlaWEl1Y0hKdmRHOTBlWEJsTG1KMWFXeGtRV3hzU1hSbGJYTTdYSEpjYmtOV1EyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVbDBaVzBnUFNCRFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxTWFJsYlR0Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsU1cxaFoyVWdQU0JEWVc1MllYTlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZM0psWVhSbFNXMWhaMlU3WEhKY2JrTldRMjl0Y0VWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1OeVpXRjBaVU52YlhBZ1BTQkRZVzUyWVhOU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsUTI5dGNEdGNjbHh1UTFaRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZM0psWVhSbFUyOXNhV1FnUFNCRFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxVMjlzYVdRN1hISmNia05XUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTnlaV0YwWlZOb1lYQmxJRDBnUTJGdWRtRnpVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU55WldGMFpWTm9ZWEJsTzF4eVhHNURWa052YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZVWlhoMElEMGdRMkZ1ZG1GelVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTnlaV0YwWlZSbGVIUTdYSEpjYmtOV1EyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVSmhjMlVnUFNCRFlXNTJZWE5TWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxRbUZ6WlR0Y2NseHVRMVpEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVluVnBiR1JGYkdWdFpXNTBVR0Z5Wlc1MGFXNW5JRDBnUTJGdWRtRnpVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbUoxYVd4a1JXeGxiV1Z1ZEZCaGNtVnVkR2x1Wnp0Y2JtWjFibU4wYVc5dUlFTldTVzFoWjJWRmJHVnRaVzUwS0dSaGRHRXNJR052YlhBc1oyeHZZbUZzUkdGMFlTbDdYSEpjYmlBZ0lDQjBhR2x6TG1GemMyVjBSR0YwWVNBOUlHZHNiMkpoYkVSaGRHRXVaMlYwUVhOelpYUkVZWFJoS0dSaGRHRXVjbVZtU1dRcE8xeHlYRzRnSUNBZ2RHaHBjeTVmY0dGeVpXNTBMbU52Ym5OMGNuVmpkRzl5TG1OaGJHd29kR2hwY3l4a1lYUmhMQ0JqYjIxd0xHZHNiMkpoYkVSaGRHRXBPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtRmtaRkJsYm1ScGJtZEZiR1Z0Wlc1MEtDazdYSEpjYm4xY2NseHVZM0psWVhSbFJXeGxiV1Z1ZENoRFZrSmhjMlZGYkdWdFpXNTBMQ0JEVmtsdFlXZGxSV3hsYldWdWRDazdYSEpjYmx4eVhHNURWa2x0WVdkbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsUld4bGJXVnVkSE1nUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2RtRnlJR2x0WVdkbFRHOWhaR1ZrSUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaV3hsYldWdWRFeHZZV1JsWkNncE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVZWE56WlhSRVlYUmhMbmNnSVQwOUlIUm9hWE11YVcxbkxuZHBaSFJvSUh4OElIUm9hWE11WVhOelpYUkVZWFJoTG1nZ0lUMDlJSFJvYVhNdWFXMW5MbWhsYVdkb2RDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqWVc1MllYTWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDZGpZVzUyWVhNbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnVkbUZ6TG5kcFpIUm9JRDBnZEdocGN5NWhjM05sZEVSaGRHRXVkenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ1ZG1GekxtaGxhV2RvZENBOUlIUm9hWE11WVhOelpYUkVZWFJoTG1nN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpkSGdnUFNCallXNTJZWE11WjJWMFEyOXVkR1Y0ZENnbk1tUW5LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBiV2RYSUQwZ2RHaHBjeTVwYldjdWQybGtkR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGJXZElJRDBnZEdocGN5NXBiV2N1YUdWcFoyaDBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVcxblVtVnNJRDBnYVcxblZ5QXZJR2x0WjBnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpZVzUyWVhOU1pXd2dQU0IwYUdsekxtRnpjMlYwUkdGMFlTNTNMM1JvYVhNdVlYTnpaWFJFWVhSaExtZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIzYVdSMGFFTnliM0FzSUdobGFXZG9kRU55YjNBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHbHRaMUpsYkQ1allXNTJZWE5TWld3cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoMFEzSnZjQ0E5SUdsdFowZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFFTnliM0FnUFNCb1pXbG5hSFJEY205d0ttTmhiblpoYzFKbGJEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvUTNKdmNDQTlJR2x0WjFjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhSRGNtOXdJRDBnZDJsa2RHaERjbTl3TDJOaGJuWmhjMUpsYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEhndVpISmhkMGx0WVdkbEtIUm9hWE11YVcxbkxDaHBiV2RYTFhkcFpIUm9RM0p2Y0Nrdk1pd29hVzFuU0Mxb1pXbG5hSFJEY205d0tTOHlMSGRwWkhSb1EzSnZjQ3hvWldsbmFIUkRjbTl3TERBc01DeDBhR2x6TG1GemMyVjBSR0YwWVM1M0xIUm9hWE11WVhOelpYUkVZWFJoTG1ncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWx0WnlBOUlHTmhiblpoY3p0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlMbUpwYm1Rb2RHaHBjeWs3WEhKY2JpQWdJQ0IyWVhJZ2FXMWhaMlZHWVdsc1pXUWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wm1GcGJHVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVaV3hsYldWdWRFeHZZV1JsWkNncE8xeHlYRzRnSUNBZ2ZTNWlhVzVrS0hSb2FYTXBPMXh5WEc1Y2NseHVJQ0FnSUhSb2FYTXVhVzFuSUQwZ2JtVjNJRWx0WVdkbEtDazdYSEpjYmlBZ0lDQjBhR2x6TG1sdFp5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHNiMkZrSnl3Z2FXMWhaMlZNYjJGa1pXUXNJR1poYkhObEtUdGNjbHh1SUNBZ0lIUm9hWE11YVcxbkxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyVnljbTl5Snl3Z2FXMWhaMlZHWVdsc1pXUXNJR1poYkhObEtUdGNjbHh1SUNBZ0lIWmhjaUJoYzNObGRGQmhkR2dnUFNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1WjJWMFFYTnpaWFJ6VUdGMGFDaDBhR2x6TG1GemMyVjBSR0YwWVNrN1hISmNiaUFnSUNCMGFHbHpMbWx0Wnk1emNtTWdQU0JoYzNObGRGQmhkR2c3WEhKY2JseHlYRzRnSUNBZ2RHaHBjeTVmY0dGeVpXNTBMbU55WldGMFpVVnNaVzFsYm5SekxtTmhiR3dvZEdocGN5azdYSEpjYmx4eVhHNTlPMXh5WEc1Y2NseHVRMVpKYldGblpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxibVJsY2taeVlXMWxJRDBnWm5WdVkzUnBiMjRvY0dGeVpXNTBUV0YwY21sNEtYdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVptRnBiR1ZrS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaDBhR2x6TGw5d1lYSmxiblF1Y21WdVpHVnlSbkpoYldVdVkyRnNiQ2gwYUdsekxIQmhjbVZ1ZEUxaGRISnBlQ2s5UFQxbVlXeHpaU2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZG1GeUlHTjBlQ0E5SUhSb2FYTXVZMkZ1ZG1GelEyOXVkR1Y0ZER0Y2NseHVJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzV5Wlc1a1pYSmxjaTV6WVhabEtDazdYSEpjYmlBZ0lDQjJZWElnWm1sdVlXeE5ZWFFnUFNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkQzV3Y205d2N6dGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1eVpXNWtaWEpsY2k1amRIaFVjbUZ1YzJadmNtMG9abWx1WVd4TllYUXBPMXh5WEc0Z0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExuSmxibVJsY21WeUxtTjBlRTl3WVdOcGRIa29kR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV2Y0dGamFYUjVLVHRjY2x4dUlDQWdJR04wZUM1a2NtRjNTVzFoWjJVb2RHaHBjeTVwYldjc01Dd3dLVHRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXlaVzVrWlhKbGNpNXlaWE4wYjNKbEtIUm9hWE11WkdGMFlTNW9ZWE5OWVhOcktUdGNjbHh1SUNBZ0lHbG1LSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NW1hWEp6ZEVaeVlXMWxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1RFZrbHRZV2RsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMGFHbHpMbWx0WnlBOUlHNTFiR3c3WEhKY2JpQWdJQ0IwYUdsekxsOXdZWEpsYm5RdVpHVnpkSEp2ZVM1allXeHNLSFJvYVhNdVgzQmhjbVZ1ZENrN1hISmNibjA3WEc1Y2NseHVablZ1WTNScGIyNGdRMVpOWVhOclJXeGxiV1Z1ZENoa1lYUmhMR1ZzWlcxbGJuUXBlMXh5WEc0Z0lDQWdkR2hwY3k1a1lYUmhJRDBnWkdGMFlUdGNjbHh1SUNBZ0lIUm9hWE11Wld4bGJXVnVkQ0E5SUdWc1pXMWxiblE3WEhKY2JpQWdJQ0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWeklEMGdXMTA3WEhKY2JpQWdJQ0IwYUdsekxtMWhjMnR6VUhKdmNHVnlkR2xsY3lBOUlIUm9hWE11WkdGMFlTNXRZWE5yYzFCeWIzQmxjblJwWlhNN1hISmNiaUFnSUNCMGFHbHpMblpwWlhkRVlYUmhJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PblJvYVhNdWJXRnphM05RY205d1pYSjBhV1Z6TG14bGJtZDBhSDBwTzF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11YldGemEzTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRtbGxkMFJoZEdGYmFWMGdQU0JUYUdGd1pWQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlRhR0Z3WlZCeWIzQW9kR2hwY3k1bGJHVnRaVzUwTEhSb2FYTXViV0Z6YTNOUWNtOXdaWEowYVdWelcybGRMRE1zZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5eHVkV3hzS1R0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRMVpOWVhOclJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNISmxjR0Z5WlVaeVlXMWxJRDBnWm5WdVkzUnBiMjRvYm5WdEtYdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWekxteGxibWQwYUR0Y2NseHVJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsYzF0cFhTNW5aWFJXWVd4MVpTaHVkVzBwTzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhOYmFWMHViV1JtS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MExtZHNiMkpoYkVSaGRHRXViV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibjA3WEhKY2JseHlYRzVEVmsxaGMydEZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXlaVzVrWlhKR2NtRnRaU0E5SUdaMWJtTjBhVzl1SUNoMGNtRnVjMlp2Y20wcElIdGNjbHh1SUNBZ0lIWmhjaUJqZEhnZ1BTQjBhR2x6TG1Wc1pXMWxiblF1WTJGdWRtRnpRMjl1ZEdWNGREdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNGdQU0IwYUdsekxtUmhkR0V1YldGemEzTlFjbTl3WlhKMGFXVnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIWmhjaUJ3ZEN4d2RESXNjSFF6TEdSaGRHRXNJR2hoYzAxaGMydHpJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQm1iM0lnS0drZ1BTQXdPeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbTFoYzJ0elVISnZjR1Z5ZEdsbGMxdHBYUzV0YjJSbElEMDlQU0FuYmljcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb2FHRnpUV0Z6YTNNZ1BUMDlJR1poYkhObEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kzUjRMbUpsWjJsdVVHRjBhQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvWVhOTllYTnJjeUE5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtMWhjMnR6VUhKdmNHVnlkR2xsYzF0cFhTNXBibllwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTNSNExtMXZkbVZVYnlnd0xDQXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZM1I0TG14cGJtVlVieWgwYUdsekxtVnNaVzFsYm5RdVoyeHZZbUZzUkdGMFlTNWpiMjF3VjJsa2RHZ3NJREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEhndWJHbHVaVlJ2S0hSb2FYTXVaV3hsYldWdWRDNW5iRzlpWVd4RVlYUmhMbU52YlhCWGFXUjBhQ3dnZEdocGN5NWxiR1Z0Wlc1MExtZHNiMkpoYkVSaGRHRXVZMjl0Y0VobGFXZG9kQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR04wZUM1c2FXNWxWRzhvTUN3Z2RHaHBjeTVsYkdWdFpXNTBMbWRzYjJKaGJFUmhkR0V1WTI5dGNFaGxhV2RvZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOMGVDNXNhVzVsVkc4b01Dd2dNQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1JoZEdFZ1BTQjBhR2x6TG5acFpYZEVZWFJoVzJsZExuWTdYSEpjYmlBZ0lDQWdJQ0FnY0hRZ1BTQjBjbUZ1YzJadmNtMGdQeUIwY21GdWMyWnZjbTB1WVhCd2JIbFViMUJ2YVc1MFFYSnlZWGtvWkdGMFlTNTJXekJkV3pCZExHUmhkR0V1ZGxzd1hWc3hYU3d3S1Rwa1lYUmhMblpiTUYwN1hISmNiaUFnSUNBZ0lDQWdZM1I0TG0xdmRtVlVieWh3ZEZzd1hTd2djSFJiTVYwcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCcUxDQnFUR1Z1SUQwZ1pHRjBZUzVmYkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUdadmNpQW9haUE5SURFN0lHb2dQQ0JxVEdWdU95QnFLeXNwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hRZ1BTQjBjbUZ1YzJadmNtMGdQeUIwY21GdWMyWnZjbTB1WVhCd2JIbFViMUJ2YVc1MFFYSnlZWGtvWkdGMFlTNXZXMm9nTFNBeFhWc3dYU3hrWVhSaExtOWJhaUF0SURGZFd6RmRMREFwSURvZ1pHRjBZUzV2VzJvZ0xTQXhYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSFF5SUQwZ2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRMbUZ3Y0d4NVZHOVFiMmx1ZEVGeWNtRjVLR1JoZEdFdWFWdHFYVnN3WFN4a1lYUmhMbWxiYWwxYk1WMHNNQ2tnT2lCa1lYUmhMbWxiYWwwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCME15QTlJSFJ5WVc1elptOXliU0EvSUhSeVlXNXpabTl5YlM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNoa1lYUmhMblpiYWwxYk1GMHNaR0YwWVM1MlcycGRXekZkTERBcElEb2daR0YwWVM1MlcycGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkSGd1WW1WNmFXVnlRM1Z5ZG1WVWJ5aHdkRnN3WFN3Z2NIUmJNVjBzSUhCME1sc3dYU3dnY0hReVd6RmRMQ0J3ZEROYk1GMHNJSEIwTTFzeFhTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIQjBJRDBnZEhKaGJuTm1iM0p0SUQ4Z2RISmhibk5tYjNKdExtRndjR3g1Vkc5UWIybHVkRUZ5Y21GNUtHUmhkR0V1YjF0cUlDMGdNVjFiTUYwc1pHRjBZUzV2VzJvZ0xTQXhYVnN4WFN3d0tTQTZJR1JoZEdFdWIxdHFJQzBnTVYwN1hISmNiaUFnSUNBZ0lDQWdjSFF5SUQwZ2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRMbUZ3Y0d4NVZHOVFiMmx1ZEVGeWNtRjVLR1JoZEdFdWFWc3dYVnN3WFN4a1lYUmhMbWxiTUYxYk1WMHNNQ2tnT2lCa1lYUmhMbWxiTUYwN1hISmNiaUFnSUNBZ0lDQWdjSFF6SUQwZ2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRMbUZ3Y0d4NVZHOVFiMmx1ZEVGeWNtRjVLR1JoZEdFdWRsc3dYVnN3WFN4a1lYUmhMblpiTUYxYk1WMHNNQ2tnT2lCa1lYUmhMblpiTUYwN1hISmNiaUFnSUNBZ0lDQWdZM1I0TG1KbGVtbGxja04xY25abFZHOG9jSFJiTUYwc0lIQjBXekZkTENCd2RESmJNRjBzSUhCME1sc3hYU3dnY0hReld6QmRMQ0J3ZEROYk1WMHBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvYUdGelRXRnphM01wZTF4eVhHNGdJQ0FnSUNBZ0lHTjBlQzVqYkdsd0tDazdYSEpjYmlBZ0lDQjlYSEpjYm4wN1hISmNibHh5WEc1RFZrMWhjMnRGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVuWlhSTllYTnJVSEp2Y0dWeWRIa2dQU0JOWVhOclJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVoyVjBUV0Z6YTFCeWIzQmxjblI1TzF4eVhHNWNjbHh1UTFaTllYTnJSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxtVnNaVzFsYm5RZ1BTQnVkV3hzTzF4eVhHNTlPMXh1Wm5WdVkzUnBiMjRnUTFaVGFHRndaVVZzWlcxbGJuUW9aR0YwWVN3Z1kyOXRjQ3huYkc5aVlXeEVZWFJoS1h0Y2NseHVJQ0FnSUhSb2FYTXVjMmhoY0dWeklEMGdXMTA3WEhKY2JpQWdJQ0IwYUdsekxuTm9ZWEJsYzBSaGRHRWdQU0JrWVhSaExuTm9ZWEJsY3p0Y2NseHVJQ0FnSUhSb2FYTXVjM1I1YkdWelRHbHpkQ0E5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTVwZEdWdGMwUmhkR0VnUFNCYlhUdGNjbHh1SUNBZ0lIUm9hWE11Y0hKbGRsWnBaWGRFWVhSaElEMGdXMTA3WEhKY2JpQWdJQ0IwYUdsekxuTm9ZWEJsVFc5a2FXWnBaWEp6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG5CeWIyTmxjM05sWkVWc1pXMWxiblJ6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TGw5d1lYSmxiblF1WTI5dWMzUnlkV04wYjNJdVkyRnNiQ2gwYUdsekxHUmhkR0VzSUdOdmJYQXNaMnh2WW1Gc1JHRjBZU2s3WEhKY2JuMWNjbHh1WTNKbFlYUmxSV3hsYldWdWRDaERWa0poYzJWRmJHVnRaVzUwTENCRFZsTm9ZWEJsUld4bGJXVnVkQ2s3WEhKY2JseHlYRzVEVmxOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVkSEpoYm5ObWIzSnRTR1ZzY0dWeUlEMGdlMjl3WVdOcGRIazZNU3h0WVhRNmJtVjNJRTFoZEhKcGVDZ3BMRzFoZEUxa1pqcG1ZV3h6WlN4dmNFMWtaanBtWVd4elpYMDdYSEpjYmx4eVhHNURWbE5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVpHRnphRkpsYzJWMGRHVnlJRDBnVzEwN1hISmNibHh5WEc1RFZsTm9ZWEJsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxSV3hsYldWdWRITWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNWNjbHh1SUNBZ0lIUm9hWE11WDNCaGNtVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MGN5NWpZV3hzS0hSb2FYTXBPMXh5WEc0Z0lDQWdkR2hwY3k1elpXRnlZMmhUYUdGd1pYTW9kR2hwY3k1emFHRndaWE5FWVhSaExIUm9hWE11YVhSbGJYTkVZWFJoTEhSb2FYTXVjSEpsZGxacFpYZEVZWFJoTEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXNJSFJ5ZFdVcE8xeHlYRzU5TzF4eVhHNWNjbHh1UTFaVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpWTjBlV3hsUld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0dSaGRHRXNJR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLWHRjY2x4dUlDQWdJSFpoY2lCemRIbHNaVVZzWlcwZ1BTQjdYSEpjYmlBZ0lDQWdJQ0FnWkdGMFlUb2daR0YwWVN4Y2NseHVJQ0FnSUNBZ0lDQjBlWEJsT2lCa1lYUmhMblI1TEZ4eVhHNGdJQ0FnSUNBZ0lHVnNaVzFsYm5Sek9pQmJYVnh5WEc0Z0lDQWdmVHRjY2x4dUlDQWdJSFpoY2lCbGJHVnRaVzUwUkdGMFlTQTlJSHQ5TzF4eVhHNGdJQ0FnYVdZb1pHRjBZUzUwZVNBOVBTQW5abXduSUh4OElHUmhkR0V1ZEhrZ1BUMGdKM04wSnlsN1hISmNiaUFnSUNBZ0lDQWdaV3hsYldWdWRFUmhkR0V1WXlBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0hSb2FYTXNaR0YwWVM1akxERXNNalUxTEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaWdoWld4bGJXVnVkRVJoZEdFdVl5NXJLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjM1I1YkdWRmJHVnRMbU52SUQwZ0ozSm5ZaWduSzJKdFgyWnNiMjl5S0dWc1pXMWxiblJFWVhSaExtTXVkbHN3WFNrckp5d25LMkp0WDJac2IyOXlLR1ZzWlcxbGJuUkVZWFJoTG1NdWRsc3hYU2tySnl3bksySnRYMlpzYjI5eUtHVnNaVzFsYm5SRVlYUmhMbU11ZGxzeVhTa3JKeWtuTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHVnNaVzFsYm5SRVlYUmhMbThnUFNCUWNtOXdaWEowZVVaaFkzUnZjbmt1WjJWMFVISnZjQ2gwYUdsekxHUmhkR0V1Ynl3d0xEQXVNREVzWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnYVdZb1pHRjBZUzUwZVNBOVBTQW5jM1FuS1NCN1hISmNiaUFnSUNBZ0lDQWdjM1I1YkdWRmJHVnRMbXhqSUQwZ2RHaHBjeTVzWTBWdWRXMWJaR0YwWVM1c1kxMGdmSHdnSjNKdmRXNWtKenRjY2x4dUlDQWdJQ0FnSUNCemRIbHNaVVZzWlcwdWJHb2dQU0IwYUdsekxteHFSVzUxYlZ0a1lYUmhMbXhxWFNCOGZDQW5jbTkxYm1Rbk8xeHlYRzRnSUNBZ0lDQWdJR2xtS0dSaGRHRXViR29nUFQwZ01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkSGxzWlVWc1pXMHViV3dnUFNCa1lYUmhMbTFzTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBSR0YwWVM1M0lEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb2RHaHBjeXhrWVhSaExuY3NNQ3h1ZFd4c0xHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaFpXeGxiV1Z1ZEVSaGRHRXVkeTVyS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSNWJHVkZiR1Z0TG5kcElEMGdaV3hsYldWdWRFUmhkR0V1ZHk1Mk8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaGtZWFJoTG1RcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaQ0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSRVlYTm9VSEp2Y0NoMGFHbHpMR1JoZEdFdVpDd25ZMkZ1ZG1Gekp5eGtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5SRVlYUmhMbVFnUFNCa08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2haV3hsYldWdWRFUmhkR0V1WkM1cktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wZVd4bFJXeGxiUzVrWVNBOUlHVnNaVzFsYm5SRVlYUmhMbVF1WkdGemFHRnljbUY1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUjViR1ZGYkdWdExtUnZJRDBnWld4bGJXVnVkRVJoZEdFdVpDNWtZWE5vYjJabWMyVjBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIMGdaV3h6WlNCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUhOMGVXeGxSV3hsYlM1eUlEMGdaR0YwWVM1eUlEMDlQU0F5SUQ4Z0oyVjJaVzV2WkdRbklEb2dKMjV2Ym5wbGNtOG5PMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1emRIbHNaWE5NYVhOMExuQjFjMmdvYzNSNWJHVkZiR1Z0S1R0Y2NseHVJQ0FnSUdWc1pXMWxiblJFWVhSaExuTjBlV3hsSUQwZ2MzUjViR1ZGYkdWdE8xeHlYRzRnSUNBZ2NtVjBkWEp1SUdWc1pXMWxiblJFWVhSaE8xeHlYRzU5WEhKY2JseHlYRzVEVmxOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZM0psWVhSbFIzSnZkWEJGYkdWdFpXNTBJRDBnWm5WdVkzUnBiMjRvWkdGMFlTa2dlMXh5WEc0Z0lDQWdkbUZ5SUdWc1pXMWxiblJFWVhSaElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUdsME9pQmJYU3hjY2x4dUlDQWdJQ0FnSUNCd2NtVjJWbWxsZDBSaGRHRTZJRnRkWEhKY2JpQWdJQ0I5TzF4eVhHNGdJQ0FnY21WMGRYSnVJR1ZzWlcxbGJuUkVZWFJoTzF4eVhHNTlYSEpjYmx4eVhHNURWbE5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVkhKaGJuTm1iM0p0Uld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0dSaGRHRXNJR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLU0I3WEhKY2JpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZEVSaGRHRWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdElEb2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWFE2SUc1bGR5Qk5ZWFJ5YVhnb0tTeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01TeGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRjBUV1JtT21aaGJITmxMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZjRTFrWmpwbVlXeHpaU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiM0E2SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdLSFJvYVhNc1pHRjBZUzV2TERBc01DNHdNU3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWtzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFRY205d2N6b2dVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb2RHaHBjeXhrWVhSaExESXNiblZzYkN4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lsY2NseHVJQ0FnSUNBZ0lDQjlMRnh5WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblJ6T2lCYlhWeHlYRzRnSUNBZ2ZUdGNjbHh1SUNBZ0lISmxkSFZ5YmlCbGJHVnRaVzUwUkdGMFlUdGNjbHh1ZlZ4eVhHNWNjbHh1UTFaVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpWTm9ZWEJsUld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0dSaGRHRXNJR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLU0I3WEhKY2JpQWdJQ0IyWVhJZ1pXeGxiV1Z1ZEVSaGRHRWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ2JtOWtaWE02VzEwc1hISmNiaUFnSUNBZ0lDQWdkSEpPYjJSbGN6cGJYU3hjY2x4dUlDQWdJQ0FnSUNCMGNqcGJNQ3d3TERBc01Dd3dMREJkWEhKY2JpQWdJQ0I5TzF4eVhHNGdJQ0FnZG1GeUlIUjVJRDBnTkR0Y2NseHVJQ0FnSUdsbUtHUmhkR0V1ZEhrZ1BUMGdKM0pqSnlsN1hISmNiaUFnSUNBZ0lDQWdkSGtnUFNBMU8xeHlYRzRnSUNBZ2ZXVnNjMlVnYVdZb1pHRjBZUzUwZVNBOVBTQW5aV3duS1h0Y2NseHVJQ0FnSUNBZ0lDQjBlU0E5SURZN1hISmNiaUFnSUNCOVpXeHpaU0JwWmloa1lYUmhMblI1SUQwOUlDZHpjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lIUjVJRDBnTnp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdWc1pXMWxiblJFWVhSaExuTm9JRDBnVTJoaGNHVlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVMmhoY0dWUWNtOXdLSFJvYVhNc1pHRjBZU3gwZVN4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNCMGFHbHpMbk5vWVhCbGN5NXdkWE5vS0dWc1pXMWxiblJFWVhSaExuTm9LVHRjY2x4dUlDQWdJSFJvYVhNdVlXUmtVMmhoY0dWVWIwMXZaR2xtYVdWeWN5aGxiR1Z0Wlc1MFJHRjBZU2s3WEhKY2JpQWdJQ0JxVEdWdUlEMGdkR2hwY3k1emRIbHNaWE5NYVhOMExteGxibWQwYUR0Y2NseHVJQ0FnSUhaaGNpQm9ZWE5UZEhKdmEyVnpJRDBnWm1Gc2MyVXNJR2hoYzBacGJHeHpJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQm1iM0lvYWowd08ybzhha3hsYmp0cUt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNCcFppZ2hkR2hwY3k1emRIbHNaWE5NYVhOMFcycGRMbU5zYjNObFpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cVhTNWxiR1Z0Wlc1MGN5NXdkWE5vS0dWc1pXMWxiblJFWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1emRIbHNaWE5NYVhOMFcycGRMblI1Y0dVZ1BUMDlJQ2R6ZENjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR0Z6VTNSeWIydGxjeUE5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnpSbWxzYkhNZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1pXeGxiV1Z1ZEVSaGRHRXVjM1FnUFNCb1lYTlRkSEp2YTJWek8xeHlYRzRnSUNBZ1pXeGxiV1Z1ZEVSaGRHRXVabXdnUFNCb1lYTkdhV3hzY3p0Y2NseHVJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBSR0YwWVR0Y2NseHVmVnh5WEc1Y2NseHVRMVpUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxiRzloWkZOb1lYQmxjeUE5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMGFHbHpMbVpwY25OMFJuSmhiV1VnUFNCMGNuVmxPMXh5WEc0Z0lDQWdkbUZ5SUdrc0lHeGxiaUE5SUhSb2FYTXVhWFJsYlhORVlYUmhMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXdjbVYyVm1sbGQwUmhkR0ZiYVYwZ1BTQjBhR2x6TG1sMFpXMXpSR0YwWVZ0cFhUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11YzJWaGNtTm9VMmhoY0dWektIUm9hWE11YzJoaGNHVnpSR0YwWVN4MGFHbHpMbWwwWlcxelJHRjBZU3gwYUdsekxuQnlaWFpXYVdWM1JHRjBZU3gwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWekxDQjBjblZsS1R0Y2NseHVJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6TG14bGJtZDBhRHRjY2x4dUlDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjMXRwWFM1blpYUldZV3gxWlNncE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTV5Wlc1a1pYSk5iMlJwWm1sbGNuTW9LVHRjY2x4dWZWeHlYRzVjY2x4dVExWlRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5ObFlYSmphRk5vWVhCbGN5QTlJR1oxYm1OMGFXOXVLR0Z5Y2l4cGRHVnRjMFJoZEdFc0lIQnlaWFpXYVdWM1JHRjBZU3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeXdnY21WdVpHVnlLWHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzRnUFNCaGNuSXViR1Z1WjNSb0lDMGdNVHRjY2x4dUlDQWdJSFpoY2lCcUxDQnFUR1Z1TzF4eVhHNGdJQ0FnZG1GeUlHOTNia0Z5Y21GNWN5QTlJRnRkTENCdmQyNU5iMlJwWm1sbGNuTWdQU0JiWFN3Z2NISnZZMlZ6YzJWa1VHOXpPMXh5WEc0Z0lDQWdabTl5S0drOWJHVnVPMmsrUFRBN2FTMDlNU2w3WEhKY2JpQWdJQ0FnSUNBZ2NISnZZMlZ6YzJWa1VHOXpJRDBnZEdocGN5NXpaV0Z5WTJoUWNtOWpaWE56WldSRmJHVnRaVzUwS0dGeWNsdHBYU2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JWEJ5YjJObGMzTmxaRkJ2Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNsdHBYUzVmY21WdVpHVnlJRDBnY21WdVpHVnlPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2wwWlcxelJHRjBZVnRwWFNBOUlIQnlaWFpXYVdWM1JHRjBZVnR3Y205alpYTnpaV1JRYjNNZ0xTQXhYVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdhV1lvWVhKeVcybGRMblI1SUQwOUlDZG1iQ2NnZkh3Z1lYSnlXMmxkTG5SNUlEMDlJQ2R6ZENjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2hjSEp2WTJWemMyVmtVRzl6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBaVzF6UkdGMFlWdHBYU0E5SUhSb2FYTXVZM0psWVhSbFUzUjViR1ZGYkdWdFpXNTBLR0Z5Y2x0cFhTd2daSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhWFJsYlhORVlYUmhXMmxkTG5OMGVXeGxMbU5zYjNObFpDQTlJR1poYkhObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZDI1QmNuSmhlWE11Y0hWemFDaHBkR1Z0YzBSaGRHRmJhVjB1YzNSNWJHVXBPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxJR2xtS0dGeWNsdHBYUzUwZVNBOVBTQW5aM0luS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lYQnliMk5sYzNObFpGQnZjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRjMFJoZEdGYmFWMGdQU0IwYUdsekxtTnlaV0YwWlVkeWIzVndSV3hsYldWdWRDaGhjbkpiYVYwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FreGxiaUE5SUdsMFpXMXpSR0YwWVZ0cFhTNXBkQzVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FqMHdPMm84YWt4bGJqdHFLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdGMwUmhkR0ZiYVYwdWNISmxkbFpwWlhkRVlYUmhXMnBkSUQwZ2FYUmxiWE5FWVhSaFcybGRMbWwwVzJwZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJWaGNtTm9VMmhoY0dWektHRnljbHRwWFM1cGRDeHBkR1Z0YzBSaGRHRmJhVjB1YVhRc2FYUmxiWE5FWVhSaFcybGRMbkJ5WlhaV2FXVjNSR0YwWVN4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3l3Z2NtVnVaR1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6WlNCcFppaGhjbkpiYVYwdWRIa2dQVDBnSjNSeUp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0Z3Y205alpYTnpaV1JRYjNNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhWFJsYlhORVlYUmhXMmxkSUQwZ2RHaHBjeTVqY21WaGRHVlVjbUZ1YzJadmNtMUZiR1Z0Wlc1MEtHRnljbHRwWFN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9ZWEp5VzJsZExuUjVJRDA5SUNkemFDY2dmSHdnWVhKeVcybGRMblI1SUQwOUlDZHlZeWNnZkh3Z1lYSnlXMmxkTG5SNUlEMDlJQ2RsYkNjZ2ZId2dZWEp5VzJsZExuUjVJRDA5SUNkemNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWdoY0hKdlkyVnpjMlZrVUc5ektYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2wwWlcxelJHRjBZVnRwWFNBOUlIUm9hWE11WTNKbFlYUmxVMmhoY0dWRmJHVnRaVzUwS0dGeWNsdHBYU3dnWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRnh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxJR2xtS0dGeWNsdHBYUzUwZVNBOVBTQW5kRzBuSUh4OElHRnljbHRwWFM1MGVTQTlQU0FuY21RbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JWEJ5YjJObGMzTmxaRkJ2Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYlc5a2FXWnBaWElnUFNCVGFHRndaVTF2WkdsbWFXVnljeTVuWlhSTmIyUnBabWxsY2loaGNuSmJhVjB1ZEhrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiVzlrYVdacFpYSXVhVzVwZENoMGFHbHpMR0Z5Y2x0cFhTeGtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdGMwUmhkR0ZiYVYwZ1BTQnRiMlJwWm1sbGNqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyaGhjR1ZOYjJScFptbGxjbk11Y0hWemFDaHRiMlJwWm1sbGNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRiMlJwWm1sbGNpQTlJR2wwWlcxelJHRjBZVnRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZaR2xtYVdWeUxtTnNiM05sWkNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzkzYmsxdlpHbG1hV1Z5Y3k1d2RYTm9LRzF2WkdsbWFXVnlLVHRjY2x4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZb1lYSnlXMmxkTG5SNUlEMDlJQ2R5Y0NjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2hjSEp2WTJWemMyVmtVRzl6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZaR2xtYVdWeUlEMGdVMmhoY0dWTmIyUnBabWxsY25NdVoyVjBUVzlrYVdacFpYSW9ZWEp5VzJsZExuUjVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsMFpXMXpSR0YwWVZ0cFhTQTlJRzF2WkdsbWFXVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5a2FXWnBaWEl1YVc1cGRDaDBhR2x6TEdGeWNpeHBMR2wwWlcxelJHRjBZU3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVhCbFRXOWthV1pwWlhKekxuQjFjMmdvYlc5a2FXWnBaWElwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnVaR1Z5SUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiVzlrYVdacFpYSWdQU0JwZEdWdGMwUmhkR0ZiYVYwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRiMlJwWm1sbGNpNWpiRzl6WldRZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzkzYmsxdlpHbG1hV1Z5Y3k1d2RYTm9LRzF2WkdsbWFXVnlLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aFpHUlFjbTlqWlhOelpXUkZiR1Z0Wlc1MEtHRnljbHRwWFN3Z2FTQXJJREVwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYkdWdUlEMGdiM2R1UVhKeVlYbHpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnYjNkdVFYSnlZWGx6VzJsZExtTnNiM05sWkNBOUlIUnlkV1U3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JzWlc0Z1BTQnZkMjVOYjJScFptbGxjbk11YkdWdVozUm9PMXh5WEc0Z0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNCdmQyNU5iMlJwWm1sbGNuTmJhVjB1WTJ4dmMyVmtJRDBnZEhKMVpUdGNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtOV1UyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVoWkdSVGFHRndaVlJ2VFc5a2FXWnBaWEp6SUQwZ1NWTm9ZWEJsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WVdSa1UyaGhjR1ZVYjAxdlpHbG1hV1Z5Y3p0Y2NseHVRMVpUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxibVJsY2sxdlpHbG1hV1Z5Y3lBOUlFbFRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5KbGJtUmxjazF2WkdsbWFXVnljenRjY2x4dVExWlRhR0Z3WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG14alJXNTFiU0E5SUVsVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbXhqUlc1MWJUdGNjbHh1UTFaVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbXhxUlc1MWJTQTlJRWxUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExteHFSVzUxYlR0Y2NseHVRMVpUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuTmxZWEpqYUZCeWIyTmxjM05sWkVWc1pXMWxiblFnUFNCSlUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV6WldGeVkyaFFjbTlqWlhOelpXUkZiR1Z0Wlc1ME8xeHlYRzVEVmxOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZV1JrVUhKdlkyVnpjMlZrUld4bGJXVnVkQ0E5SUVsVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUZrWkZCeWIyTmxjM05sWkVWc1pXMWxiblE3WEhKY2JseHlYRzVEVmxOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVJuSmhiV1VnUFNCbWRXNWpkR2x2Ymlod1lYSmxiblJOWVhSeWFYZ3BlMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWZjR0Z5Wlc1MExuSmxibVJsY2taeVlXMWxMbU5oYkd3b2RHaHBjeXdnY0dGeVpXNTBUV0YwY21sNEtUMDlQV1poYkhObEtYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlVobGJIQmxjaTV0WVhRdWNtVnpaWFFvS1R0Y2NseHVJQ0FnSUhSb2FYTXVkSEpoYm5ObWIzSnRTR1ZzY0dWeUxtOXdZV05wZEhrZ1BTQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTl3WVdOcGRIazdYSEpjYmlBZ0lDQjBhR2x6TG5SeVlXNXpabTl5YlVobGJIQmxjaTV0WVhSTlpHWWdQU0JtWVd4elpUdGNjbHh1SUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0U0dWc2NHVnlMbTl3VFdSbUlEMGdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV2Y0Uxa1pqdGNjbHh1SUNBZ0lIUm9hWE11Y21WdVpHVnlUVzlrYVdacFpYSnpLQ2s3WEhKY2JpQWdJQ0IwYUdsekxuSmxibVJsY2xOb1lYQmxLSFJvYVhNdWRISmhibk5tYjNKdFNHVnNjR1Z5TEc1MWJHd3NiblZzYkN4MGNuVmxLVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaR0YwWVM1b1lYTk5ZWE5yS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJdWNtVnpkRzl5WlNoMGNuVmxLVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JrTldVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1eVpXNWtaWEpUYUdGd1pTQTlJR1oxYm1OMGFXOXVLSEJoY21WdWRGUnlZVzV6Wm05eWJTeHBkR1Z0Y3l4a1lYUmhMR2x6VFdGcGJpbDdYSEpjYmlBZ0lDQjJZWElnYVN3Z2JHVnVPMXh5WEc0Z0lDQWdhV1lvSVdsMFpXMXpLWHRjY2x4dUlDQWdJQ0FnSUNCcGRHVnRjeUE5SUhSb2FYTXVjMmhoY0dWelJHRjBZVHRjY2x4dUlDQWdJQ0FnSUNCc1pXNGdQU0IwYUdsekxuTjBlV3hsYzB4cGMzUXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMzUjViR1Z6VEdsemRGdHBYUzVrSUQwZ0p5YzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzNSNWJHVnpUR2x6ZEZ0cFhTNXRaR1lnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppZ2haR0YwWVNsN1hISmNiaUFnSUNBZ0lDQWdaR0YwWVNBOUlIUm9hWE11YVhSbGJYTkVZWFJoTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHk4dlhISmNiaUFnSUNBdkx5OWNjbHh1SUNBZ0lHeGxiaUE5SUdsMFpXMXpMbXhsYm1kMGFDQXRJREU3WEhKY2JpQWdJQ0IyWVhJZ1ozSnZkWEJVY21GdWMyWnZjbTBzWjNKdmRYQk5ZWFJ5YVhnN1hISmNiaUFnSUNCbmNtOTFjRlJ5WVc1elptOXliU0E5SUhCaGNtVnVkRlJ5WVc1elptOXliVHRjY2x4dUlDQWdJR1p2Y2locFBXeGxianRwUGowd08ya3RQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lHbG1LR2wwWlcxelcybGRMblI1SUQwOUlDZDBjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuY205MWNGUnlZVzV6Wm05eWJTQTlJR1JoZEdGYmFWMHVkSEpoYm5ObWIzSnRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYlhSQmNuSWdQU0JrWVhSaFcybGRMblJ5WVc1elptOXliUzV0VUhKdmNITXVkaTV3Y205d2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ozSnZkWEJVY21GdWMyWnZjbTB1YldGMFRXUm1JRDBnWjNKdmRYQlVjbUZ1YzJadmNtMHViVkJ5YjNCekxtMWtaanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaM0p2ZFhCVWNtRnVjMlp2Y20wdWIzQk5aR1lnUFNCbmNtOTFjRlJ5WVc1elptOXliUzV2Y0M1dFpHWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHliM1Z3VFdGMGNtbDRJRDBnWjNKdmRYQlVjbUZ1YzJadmNtMHViV0YwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuY205MWNFMWhkSEpwZUM1amJHOXVaVVp5YjIxUWNtOXdjeWh0ZEVGeWNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEJoY21WdWRGUnlZVzV6Wm05eWJTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NISnZjSE1nUFNCd1lYSmxiblJVY21GdWMyWnZjbTB1YldGMExuQnliM0J6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ozSnZkWEJVY21GdWMyWnZjbTB1YjNCaFkybDBlU0E5SUhCaGNtVnVkRlJ5WVc1elptOXliUzV2Y0dGamFYUjVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjNKdmRYQlVjbUZ1YzJadmNtMHViM0JoWTJsMGVTQXFQU0JrWVhSaFcybGRMblJ5WVc1elptOXliUzV2Y0M1Mk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaM0p2ZFhCVWNtRnVjMlp2Y20wdWJXRjBUV1JtSUQwZ2NHRnlaVzUwVkhKaGJuTm1iM0p0TG0xaGRFMWtaaUEvSUhSeWRXVWdPaUJuY205MWNGUnlZVzV6Wm05eWJTNXRZWFJOWkdZN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5jbTkxY0ZSeVlXNXpabTl5YlM1dmNFMWtaaUE5SUhCaGNtVnVkRlJ5WVc1elptOXliUzV2Y0Uxa1ppQS9JSFJ5ZFdVZ09pQm5jbTkxY0ZSeVlXNXpabTl5YlM1dmNFMWtaanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkeWIzVndUV0YwY21sNExuUnlZVzV6Wm05eWJTaHdjbTl3YzFzd1hTeHdjbTl3YzFzeFhTeHdjbTl3YzFzeVhTeHdjbTl3YzFzelhTeHdjbTl3YzFzMFhTeHdjbTl3YzFzMVhTeHdjbTl3YzFzMlhTeHdjbTl3YzFzM1hTeHdjbTl3YzFzNFhTeHdjbTl3YzFzNVhTeHdjbTl3YzFzeE1GMHNjSEp2Y0hOYk1URmRMSEJ5YjNCeld6RXlYU3h3Y205d2Mxc3hNMTBzY0hKdmNITmJNVFJkTEhCeWIzQnpXekUxWFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjNKdmRYQlVjbUZ1YzJadmNtMHViM0JoWTJsMGVTQTlJR2R5YjNWd1ZISmhibk5tYjNKdExtOXdMbTg3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVpXeHpaU0JwWmlocGRHVnRjMXRwWFM1MGVTQTlQU0FuYzJnbklIeDhJR2wwWlcxelcybGRMblI1SUQwOUlDZGxiQ2NnZkh3Z2FYUmxiWE5iYVYwdWRIa2dQVDBnSjNKakp5QjhmQ0JwZEdWdGMxdHBYUzUwZVNBOVBTQW5jM0luS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaVzVrWlhKUVlYUm9LR2wwWlcxelcybGRMR1JoZEdGYmFWMHNaM0p2ZFhCVWNtRnVjMlp2Y20wcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LR2wwWlcxelcybGRMblI1SUQwOUlDZG1iQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2tacGJHd29hWFJsYlhOYmFWMHNaR0YwWVZ0cFhTeG5jbTkxY0ZSeVlXNXpabTl5YlNrN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9hWFJsYlhOYmFWMHVkSGtnUFQwZ0ozTjBKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNtVnVaR1Z5VTNSeWIydGxLR2wwWlcxelcybGRMR1JoZEdGYmFWMHNaM0p2ZFhCVWNtRnVjMlp2Y20wcE8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LR2wwWlcxelcybGRMblI1SUQwOUlDZG5jaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2xOb1lYQmxLR2R5YjNWd1ZISmhibk5tYjNKdExHbDBaVzF6VzJsZExtbDBMR1JoZEdGYmFWMHVhWFFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtHbDBaVzF6VzJsZExuUjVJRDA5SUNkMGJTY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdsbUtDRnBjMDFoYVc0cGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHeGxiaUE5SUhSb2FYTXVjM1I1YkdWelRHbHpkQzVzWlc1bmRHZzdYSEpjYmlBZ0lDQjJZWElnYWl3Z2FreGxiaXdnYXl3Z2EweGxiaXhsYkdWdGN5eHViMlJsY3l3Z2NtVnVaR1Z5WlhJZ1BTQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJc0lHTjBlQ0E5SUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVqWVc1MllYTkRiMjUwWlhoMExDQjBlWEJsTzF4eVhHNGdJQ0FnY21WdVpHVnlaWEl1YzJGMlpTZ3BPMXh5WEc0Z0lDQWdjbVZ1WkdWeVpYSXVZM1I0VkhKaGJuTm1iM0p0S0hSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJXRjBMbkJ5YjNCektUdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnZEhsd1pTQTlJSFJvYVhNdWMzUjViR1Z6VEdsemRGdHBYUzUwZVhCbE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0NoMGVYQmxJRDA5UFNBbmMzUW5JQ1ltSUhSb2FYTXVjM1I1YkdWelRHbHpkRnRwWFM1M2FTQTlQVDBnTUNrZ2ZId2dJWFJvYVhNdWMzUjViR1Z6VEdsemRGdHBYUzVrWVhSaExsOXlaVzVrWlhJcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1YzJGMlpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdWc1pXMXpJRDBnZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG1Wc1pXMWxiblJ6TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFI1Y0dVZ1BUMDlJQ2R6ZENjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamRIZ3VjM1J5YjJ0bFUzUjViR1VnUFNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdVkyODdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjBlQzVzYVc1bFYybGtkR2dnUFNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdWQyazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjBlQzVzYVc1bFEyRndJRDBnZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG14ak8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamRIZ3ViR2x1WlVwdmFXNGdQU0IwYUdsekxuTjBlV3hsYzB4cGMzUmJhVjB1YkdvN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOMGVDNXRhWFJsY2t4cGJXbDBJRDBnZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG0xc0lIeDhJREE3WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR04wZUM1bWFXeHNVM1I1YkdVZ1BTQjBhR2x6TG5OMGVXeGxjMHhwYzNSYmFWMHVZMjg3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbU4wZUU5d1lXTnBkSGtvZEdocGN5NXpkSGxzWlhOTWFYTjBXMmxkTG1OdlQzQXBPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUjVjR1VnSVQwOUlDZHpkQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEhndVltVm5hVzVRWVhSb0tDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHcE1aVzRnUFNCbGJHVnRjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUjVjR1VnUFQwOUlDZHpkQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzUjRMbUpsWjJsdVVHRjBhQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1emRIbHNaWE5NYVhOMFcybGRMbVJoS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZEhndWMyVjBUR2x1WlVSaGMyZ29kR2hwY3k1emRIbHNaWE5NYVhOMFcybGRMbVJoS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZEhndWJHbHVaVVJoYzJoUFptWnpaWFFnUFNCMGFHbHpMbk4wZVd4bGMweHBjM1JiYVYwdVpHODdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1selJHRnphR1ZrSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxJR2xtS0hSb2FYTXVaMnh2WW1Gc1JHRjBZUzVwYzBSaGMyaGxaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1I0TG5ObGRFeHBibVZFWVhOb0tIUm9hWE11WkdGemFGSmxjMlYwZEdWeUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1YVhORVlYTm9aV1FnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1YjJSbGN5QTlJR1ZzWlcxelcycGRMblJ5VG05a1pYTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHdE1aVzRnUFNCdWIyUmxjeTVzWlc1bmRHZzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2F6MHdPMnM4YTB4bGJqdHJLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzV2WkdWelcydGRMblFnUFQwZ0oyMG5LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpkSGd1Ylc5MlpWUnZLRzV2WkdWelcydGRMbkJiTUYwc2JtOWtaWE5iYTEwdWNGc3hYU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaU0JwWmlodWIyUmxjMXRyWFM1MElEMDlJQ2RqSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNSNExtSmxlbWxsY2tOMWNuWmxWRzhvYm05a1pYTmJhMTB1Y0RGYk1GMHNibTlrWlhOYmExMHVjREZiTVYwc2JtOWtaWE5iYTEwdWNESmJNRjBzYm05a1pYTmJhMTB1Y0RKYk1WMHNibTlrWlhOYmExMHVjRE5iTUYwc2JtOWtaWE5iYTEwdWNETmJNVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1I0TG1Oc2IzTmxVR0YwYUNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFI1Y0dVZ1BUMDlJQ2R6ZENjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1I0TG5OMGNtOXJaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0hSNWNHVWdJVDA5SUNkemRDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkSGd1Wm1sc2JDaDBhR2x6TG5OMGVXeGxjMHhwYzNSYmFWMHVjaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbkpsYzNSdmNtVW9LVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSEpsYm1SbGNtVnlMbkpsYzNSdmNtVW9LVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVabWx5YzNSR2NtRnRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtYVhKemRFWnlZVzFsSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmtOV1UyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSlFZWFJvSUQwZ1puVnVZM1JwYjI0b2NHRjBhRVJoZEdFc2FYUmxiVVJoZEdFc1ozSnZkWEJVY21GdWMyWnZjbTBwZTF4eVhHNGdJQ0FnZG1GeUlHeGxiaXdnYVN3Z2FpeHFUR1Z1TzF4eVhHNGdJQ0FnZG1GeUlISmxaSEpoZHlBOUlHZHliM1Z3VkhKaGJuTm1iM0p0TG0xaGRFMWtaaUI4ZkNCcGRHVnRSR0YwWVM1emFDNXRaR1lnZkh3Z2RHaHBjeTVtYVhKemRFWnlZVzFsTzF4eVhHNGdJQ0FnYVdZb2NtVmtjbUYzS1NCN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhCaGRHaHpJRDBnYVhSbGJVUmhkR0V1YzJndWNHRjBhSE1zSUdkeWIzVndWSEpoYm5ObWIzSnRUV0YwSUQwZ1ozSnZkWEJVY21GdWMyWnZjbTB1YldGME8xeHlYRzRnSUNBZ0lDQWdJR3BNWlc0Z1BTQndZWFJvY3k1ZmJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3WVhSb1UzUnlhVzVuVkhKaGJuTm1iM0p0WldRZ1BTQnBkR1Z0UkdGMFlTNTBjazV2WkdWek8xeHlYRzRnSUNBZ0lDQWdJSEJoZEdoVGRISnBibWRVY21GdWMyWnZjbTFsWkM1c1pXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locVBUQTdhanhxVEdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHRjBhRTV2WkdWeklEMGdjR0YwYUhNdWMyaGhjR1Z6VzJwZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaHdZWFJvVG05a1pYTWdKaVlnY0dGMGFFNXZaR1Z6TG5ZcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1Z1SUQwZ2NHRjBhRTV2WkdWekxsOXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lnS0drZ1BTQXhPeUJwSUR3Z2JHVnVPeUJwSUNzOUlERXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOVBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGRHaFRkSEpwYm1kVWNtRnVjMlp2Y20xbFpDNXdkWE5vS0h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFE2SUNkdEp5eGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhBNklHZHliM1Z3VkhKaGJuTm1iM0p0VFdGMExtRndjR3g1Vkc5UWIybHVkRUZ5Y21GNUtIQmhkR2hPYjJSbGN5NTJXekJkV3pCZExDQndZWFJvVG05a1pYTXVkbHN3WFZzeFhTd2dNQ2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdoVGRISnBibWRVY21GdWMyWnZjbTFsWkM1d2RYTm9LSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZERvZ0oyTW5MRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TVRvZ1ozSnZkWEJVY21GdWMyWnZjbTFOWVhRdVlYQndiSGxVYjFCdmFXNTBRWEp5WVhrb2NHRjBhRTV2WkdWekxtOWJhU0F0SURGZFd6QmRMQ0J3WVhSb1RtOWtaWE11YjF0cElDMGdNVjFiTVYwc0lEQXBMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TWpvZ1ozSnZkWEJVY21GdWMyWnZjbTFOWVhRdVlYQndiSGxVYjFCdmFXNTBRWEp5WVhrb2NHRjBhRTV2WkdWekxtbGJhVjFiTUYwc0lIQmhkR2hPYjJSbGN5NXBXMmxkV3pGZExDQXdLU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0RNNklHZHliM1Z3VkhKaGJuTm1iM0p0VFdGMExtRndjR3g1Vkc5UWIybHVkRUZ5Y21GNUtIQmhkR2hPYjJSbGN5NTJXMmxkV3pCZExDQndZWFJvVG05a1pYTXVkbHRwWFZzeFhTd2dNQ2xjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzWlc0Z1BUMGdNU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdoVGRISnBibWRVY21GdWMyWnZjbTFsWkM1d2RYTm9LSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZERvZ0oyMG5MRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3T2lCbmNtOTFjRlJ5WVc1elptOXliVTFoZEM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNod1lYUm9UbTlrWlhNdWRsc3dYVnN3WFN3Z2NHRjBhRTV2WkdWekxuWmJNRjFiTVYwc0lEQXBYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jR0YwYUU1dlpHVnpMbU1nSmlZZ2JHVnVLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0YwYUZOMGNtbHVaMVJ5WVc1elptOXliV1ZrTG5CMWMyZ29lMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwT2lBbll5Y3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEF4T2lCbmNtOTFjRlJ5WVc1elptOXliVTFoZEM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNod1lYUm9UbTlrWlhNdWIxdHBJQzBnTVYxYk1GMHNJSEJoZEdoT2IyUmxjeTV2VzJrZ0xTQXhYVnN4WFN3Z01Da3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEF5T2lCbmNtOTFjRlJ5WVc1elptOXliVTFoZEM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNod1lYUm9UbTlrWlhNdWFWc3dYVnN3WFN3Z2NHRjBhRTV2WkdWekxtbGJNRjFiTVYwc0lEQXBMRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TXpvZ1ozSnZkWEJVY21GdWMyWnZjbTFOWVhRdVlYQndiSGxVYjFCdmFXNTBRWEp5WVhrb2NHRjBhRTV2WkdWekxuWmJNRjFiTUYwc0lIQmhkR2hPYjJSbGN5NTJXekJkV3pGZExDQXdLVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2hUZEhKcGJtZFVjbUZ1YzJadmNtMWxaQzV3ZFhOb0tIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRG9nSjNvblhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdFJHRjBZUzVzVTNSeUlEMGdjR0YwYUZOMGNtbHVaMVJ5WVc1elptOXliV1ZrTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0dsMFpXMUVZWFJoTG5OMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENBeE5qc2dhU0FyUFNBeEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdFJHRjBZUzUwY2x0cFhTQTlJR2R5YjNWd1ZISmhibk5tYjNKdExtMWhkQzV3Y205d2MxdHBYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBkR1Z0UkdGMFlTNTBjazV2WkdWeklEMGdjR0YwYUZOMGNtbHVaMVJ5WVc1elptOXliV1ZrTzF4eVhHNWNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmx4eVhHNWNjbHh1UTFaVGFHRndaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbkpsYm1SbGNrWnBiR3dnUFNCbWRXNWpkR2x2YmloemRIbHNaVVJoZEdFc2FYUmxiVVJoZEdFc0lHZHliM1Z3VkhKaGJuTm1iM0p0S1h0Y2NseHVJQ0FnSUhaaGNpQnpkSGxzWlVWc1pXMGdQU0JwZEdWdFJHRjBZUzV6ZEhsc1pUdGNjbHh1WEhKY2JpQWdJQ0JwWmlocGRHVnRSR0YwWVM1akxtMWtaaUI4ZkNCMGFHbHpMbVpwY25OMFJuSmhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lITjBlV3hsUld4bGJTNWpieUE5SUNkeVoySW9KeXRpYlY5bWJHOXZjaWhwZEdWdFJHRjBZUzVqTG5aYk1GMHBLeWNzSnl0aWJWOW1iRzl2Y2locGRHVnRSR0YwWVM1akxuWmJNVjBwS3ljc0p5dGliVjltYkc5dmNpaHBkR1Z0UkdGMFlTNWpMblpiTWwwcEt5Y3BKenRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0dsMFpXMUVZWFJoTG04dWJXUm1JSHg4SUdkeWIzVndWSEpoYm5ObWIzSnRMbTl3VFdSbUlIeDhJSFJvYVhNdVptbHljM1JHY21GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnYzNSNWJHVkZiR1Z0TG1OdlQzQWdQU0JwZEdWdFJHRjBZUzV2TG5ZcVozSnZkWEJVY21GdWMyWnZjbTB1YjNCaFkybDBlVHRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JrTldVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1eVpXNWtaWEpUZEhKdmEyVWdQU0JtZFc1amRHbHZiaWh6ZEhsc1pVUmhkR0VzYVhSbGJVUmhkR0VzSUdkeWIzVndWSEpoYm5ObWIzSnRLWHRjY2x4dUlDQWdJSFpoY2lCemRIbHNaVVZzWlcwZ1BTQnBkR1Z0UkdGMFlTNXpkSGxzWlR0Y2NseHVJQ0FnSUM4dlZFOUVUeUJtYVhnZ1pHRnphR1Z6WEhKY2JpQWdJQ0IyWVhJZ1pDQTlJR2wwWlcxRVlYUmhMbVE3WEhKY2JpQWdJQ0IyWVhJZ1pHRnphR0Z5Y21GNUxHUmhjMmh2Wm1aelpYUTdYSEpjYmlBZ0lDQnBaaWhrSUNZbUlDaGtMbTFrWmlBZ2ZId2dkR2hwY3k1bWFYSnpkRVp5WVcxbEtTbDdYSEpjYmlBZ0lDQWdJQ0FnYzNSNWJHVkZiR1Z0TG1SaElEMGdaQzVrWVhOb1lYSnlZWGs3WEhKY2JpQWdJQ0FnSUNBZ2MzUjViR1ZGYkdWdExtUnZJRDBnWkM1a1lYTm9iMlptYzJWME8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9hWFJsYlVSaGRHRXVZeTV0WkdZZ2ZId2dkR2hwY3k1bWFYSnpkRVp5WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0J6ZEhsc1pVVnNaVzB1WTI4Z1BTQW5jbWRpS0NjclltMWZabXh2YjNJb2FYUmxiVVJoZEdFdVl5NTJXekJkS1NzbkxDY3JZbTFmWm14dmIzSW9hWFJsYlVSaGRHRXVZeTUyV3pGZEtTc25MQ2NyWW0xZlpteHZiM0lvYVhSbGJVUmhkR0V1WXk1Mld6SmRLU3NuS1NjN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaHBkR1Z0UkdGMFlTNXZMbTFrWmlCOGZDQm5jbTkxY0ZSeVlXNXpabTl5YlM1dmNFMWtaaUI4ZkNCMGFHbHpMbVpwY25OMFJuSmhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lITjBlV3hsUld4bGJTNWpiMDl3SUQwZ2FYUmxiVVJoZEdFdWJ5NTJLbWR5YjNWd1ZISmhibk5tYjNKdExtOXdZV05wZEhrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaHBkR1Z0UkdGMFlTNTNMbTFrWmlCOGZDQjBhR2x6TG1acGNuTjBSbkpoYldVcGUxeHlYRzRnSUNBZ0lDQWdJSE4wZVd4bFJXeGxiUzUzYVNBOUlHbDBaVzFFWVhSaExuY3VkanRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JseHlYRzVEVmxOb1lYQmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0IwYUdsekxuTm9ZWEJsYzBSaGRHRWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoSUQwZ2JuVnNiRHRjY2x4dUlDQWdJSFJvYVhNdVkyRnVkbUZ6UTI5dWRHVjRkQ0E5SUc1MWJHdzdYSEpjYmlBZ0lDQjBhR2x6TG5OMGVXeGxjMHhwYzNRdWJHVnVaM1JvSUQwZ01EdGNjbHh1SUNBZ0lIUm9hWE11YVhSbGJVUmhkR0V1YkdWdVozUm9JRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWtaWE4wY205NUxtTmhiR3dvZEdocGN5NWZjR0Z5Wlc1MEtUdGNjbHh1ZlR0Y2NseHVYSEpjYmx4dVpuVnVZM1JwYjI0Z1ExWlRiMnhwWkVWc1pXMWxiblFvWkdGMFlTd2dZMjl0Y0N4bmJHOWlZV3hFWVhSaEtYdGNjbHh1SUNBZ0lIUm9hWE11WDNCaGNtVnVkQzVqYjI1emRISjFZM1J2Y2k1allXeHNLSFJvYVhNc1pHRjBZU3dnWTI5dGNDeG5iRzlpWVd4RVlYUmhLVHRjY2x4dWZWeHlYRzVqY21WaGRHVkZiR1Z0Wlc1MEtFTldRbUZ6WlVWc1pXMWxiblFzSUVOV1UyOXNhV1JGYkdWdFpXNTBLVHRjY2x4dVhISmNia05XVTI5c2FXUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXlaVzVrWlhKR2NtRnRaU0E5SUdaMWJtTjBhVzl1S0hCaGNtVnVkRTFoZEhKcGVDbDdYSEpjYmlBZ0lDQnBaaWgwYUdsekxsOXdZWEpsYm5RdWNtVnVaR1Z5Um5KaGJXVXVZMkZzYkNoMGFHbHpMQ0J3WVhKbGJuUk5ZWFJ5YVhncFBUMDlabUZzYzJVcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUJqZEhnZ1BTQjBhR2x6TG1OaGJuWmhjME52Ym5SbGVIUTdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJdWMyRjJaU2dwTzF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbkpsYm1SbGNtVnlMbU4wZUZSeVlXNXpabTl5YlNoMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkQzV3Y205d2N5azdYSEpjYmlBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJdVkzUjRUM0JoWTJsMGVTaDBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTl3WVdOcGRIa3BPMXh5WEc0Z0lDQWdZM1I0TG1acGJHeFRkSGxzWlQxMGFHbHpMbVJoZEdFdWMyTTdYSEpjYmlBZ0lDQmpkSGd1Wm1sc2JGSmxZM1FvTUN3d0xIUm9hWE11WkdGMFlTNXpkeXgwYUdsekxtUmhkR0V1YzJncE8xeHlYRzRnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG5KbGJtUmxjbVZ5TG5KbGMzUnZjbVVvZEdocGN5NWtZWFJoTG1oaGMwMWhjMnNwTzF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVhKemRFWnlZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVmVHRjYm1aMWJtTjBhVzl1SUVOV1ZHVjRkRVZzWlcxbGJuUW9aR0YwWVN3Z1kyOXRjQ3dnWjJ4dlltRnNSR0YwWVNsN1hISmNiaUFnSUNCMGFHbHpMblJsZUhSVGNHRnVjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTU1VDJabWMyVjBJRDBnTUR0Y2NseHVJQ0FnSUhSb2FYTXVabWxzYkVOdmJHOXlRVzVwYlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZEdocGN5NXpkSEp2YTJWRGIyeHZja0Z1YVcwZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUhSb2FYTXVjM1J5YjJ0bFYybGtkR2hCYm1sdElEMGdabUZzYzJVN1hISmNiaUFnSUNCMGFHbHpMbk4wY205clpTQTlJR1poYkhObE8xeHlYRzRnSUNBZ2RHaHBjeTVtYVd4c0lEMGdabUZzYzJVN1hISmNiaUFnSUNCMGFHbHpMbXAxYzNScFpubFBabVp6WlhRZ1BTQXdPMXh5WEc0Z0lDQWdkR2hwY3k1amRYSnlaVzUwVW1WdVpHVnlJRDBnYm5Wc2JEdGNjbHh1SUNBZ0lIUm9hWE11Y21WdVpHVnlWSGx3WlNBOUlDZGpZVzUyWVhNbk8xeHlYRzRnSUNBZ2RHaHBjeTUyWVd4MVpYTWdQU0I3WEhKY2JpQWdJQ0FnSUNBZ1ptbHNiRG9nSjNKblltRW9NQ3d3TERBc01Da25MRnh5WEc0Z0lDQWdJQ0FnSUhOMGNtOXJaVG9nSjNKblltRW9NQ3d3TERBc01Da25MRnh5WEc0Z0lDQWdJQ0FnSUhOWGFXUjBhRG9nTUN4Y2NseHVJQ0FnSUNBZ0lDQm1WbUZzZFdVNklDY25YSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TGw5d1lYSmxiblF1WTI5dWMzUnlkV04wYjNJdVkyRnNiQ2gwYUdsekxHUmhkR0VzWTI5dGNDd2daMnh2WW1Gc1JHRjBZU2s3WEhKY2JuMWNjbHh1WTNKbFlYUmxSV3hsYldWdWRDaERWa0poYzJWRmJHVnRaVzUwTENCRFZsUmxlSFJGYkdWdFpXNTBLVHRjY2x4dVhISmNibVY0ZEdWdVpGQnliM1J2ZEhsd1pTaEpWR1Y0ZEVWc1pXMWxiblFzSUVOV1ZHVjRkRVZzWlcxbGJuUXBPMXh5WEc1Y2NseHVRMVpVWlhoMFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWRFaGxiSEJsY2lBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJOaGJuWmhjeWNwTG1kbGRFTnZiblJsZUhRb0p6SmtKeWs3WEhKY2JseHlYRzVEVmxSbGVIUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWpjbVZoZEdWRmJHVnRaVzUwY3lBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmx4eVhHNGdJQ0FnZEdocGN5NWZjR0Z5Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJ6TG1OaGJHd29kR2hwY3lrN1hISmNiaUFnSUNBdkwyTnZibk52YkdVdWJHOW5LQ2QwYUdsekxtUmhkR0U2SUNjc2RHaHBjeTVrWVhSaEtUdGNjbHh1WEhKY2JuMDdYSEpjYmx4eVhHNURWbFJsZUhSRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1aWRXbHNaRTVsZDFSbGVIUWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnZG1GeUlHUnZZM1Z0Wlc1MFJHRjBZU0E5SUhSb2FYTXVkR1Y0ZEZCeWIzQmxjblI1TG1OMWNuSmxiblJFWVhSaE8xeHlYRzRnSUNBZ2RHaHBjeTV5Wlc1a1pYSmxaRXhsZEhSbGNuTWdQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZaRzlqZFcxbGJuUkVZWFJoTG13Z1B5QmtiMk4xYldWdWRFUmhkR0V1YkM1c1pXNW5kR2dnT2lBd2ZTazdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHaGhjMFpwYkd3Z1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUdsbUtHUnZZM1Z0Wlc1MFJHRjBZUzVtWXlrZ2UxeHlYRzRnSUNBZ0lDQWdJR2hoYzBacGJHd2dQU0IwY25WbE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRtRnNkV1Z6TG1acGJHd2dQU0IwYUdsekxtSjFhV3hrUTI5c2IzSW9aRzlqZFcxbGJuUkVZWFJoTG1aaktUdGNjbHh1SUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZG1Gc2RXVnpMbVpwYkd3Z1BTQW5jbWRpWVNnd0xEQXNNQ3d3S1NjN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbVpwYkd3Z1BTQm9ZWE5HYVd4c08xeHlYRzRnSUNBZ2RtRnlJR2hoYzFOMGNtOXJaU0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdhV1lvWkc5amRXMWxiblJFWVhSaExuTmpLWHRjY2x4dUlDQWdJQ0FnSUNCb1lYTlRkSEp2YTJVZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZG1Gc2RXVnpMbk4wY205clpTQTlJSFJvYVhNdVluVnBiR1JEYjJ4dmNpaGtiMk4xYldWdWRFUmhkR0V1YzJNcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRtRnNkV1Z6TG5OWGFXUjBhQ0E5SUdSdlkzVnRaVzUwUkdGMFlTNXpkenRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFpoY2lCbWIyNTBSR0YwWVNBOUlIUm9hWE11WjJ4dlltRnNSR0YwWVM1bWIyNTBUV0Z1WVdkbGNpNW5aWFJHYjI1MFFubE9ZVzFsS0dSdlkzVnRaVzUwUkdGMFlTNW1LVHRjY2x4dUlDQWdJSFpoY2lCcExDQnNaVzQ3WEhKY2JpQWdJQ0IyWVhJZ2JHVjBkR1Z5Y3lBOUlHUnZZM1Z0Wlc1MFJHRjBZUzVzTzF4eVhHNGdJQ0FnZG1GeUlHMWhkSEpwZUVobGJIQmxjaUE5SUhSb2FYTXViVWhsYkhCbGNqdGNjbHh1SUNBZ0lIUm9hWE11YzNSeWIydGxJRDBnYUdGelUzUnliMnRsTzF4eVhHNGdJQ0FnZEdocGN5NTJZV3gxWlhNdVpsWmhiSFZsSUQwZ1pHOWpkVzFsYm5SRVlYUmhMbk1nS3lBbmNIZ2dKeXNnZEdocGN5NW5iRzlpWVd4RVlYUmhMbVp2Ym5STllXNWhaMlZ5TG1kbGRFWnZiblJDZVU1aGJXVW9aRzlqZFcxbGJuUkVZWFJoTG1ZcExtWkdZVzFwYkhrN1hISmNiaUFnSUNCc1pXNGdQU0JrYjJOMWJXVnVkRVJoZEdFdWRDNXNaVzVuZEdnN1hISmNiaUFnSUNBdkwzUm9hWE11ZEVobGJIQmxjaTVtYjI1MElEMGdkR2hwY3k1MllXeDFaWE11WmxaaGJIVmxPMXh5WEc0Z0lDQWdkbUZ5SUdOb1lYSkVZWFJoTENCemFHRndaVVJoZEdFc0lHc3NJR3RNWlc0c0lITm9ZWEJsY3l3Z2Fpd2dha3hsYml3Z2NHRjBhRTV2WkdWekxDQmpiMjF0WVc1a2N5d2djR0YwYUVGeWNpd2djMmx1WjJ4bFUyaGhjR1VnUFNCMGFHbHpMbVJoZEdFdWMybHVaMnhsVTJoaGNHVTdYSEpjYmlBZ0lDQjJZWElnZEhKaFkydHBibWRQWm1aelpYUWdQU0JrYjJOMWJXVnVkRVJoZEdFdWRISXZNVEF3TUNwa2IyTjFiV1Z1ZEVSaGRHRXVjenRjY2x4dUlDQWdJSFpoY2lCNFVHOXpJRDBnTUN3Z2VWQnZjeUE5SURBc0lHWnBjbk4wVEdsdVpTQTlJSFJ5ZFdVN1hISmNiaUFnSUNCMllYSWdZMjUwSUQwZ01EdGNjbHh1SUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tnS3owZ01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUdOb1lYSkVZWFJoSUQwZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUxtZGxkRU5vWVhKRVlYUmhLR1J2WTNWdFpXNTBSR0YwWVM1MExtTm9ZWEpCZENocEtTd2dabTl1ZEVSaGRHRXVabE4wZVd4bExDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVptOXVkRTFoYm1GblpYSXVaMlYwUm05dWRFSjVUbUZ0WlNoa2IyTjFiV1Z1ZEVSaGRHRXVaaWt1WmtaaGJXbHNlU2s3WEhKY2JpQWdJQ0FnSUNBZ2MyaGhjR1ZFWVhSaElEMGdZMmhoY2tSaGRHRWdKaVlnWTJoaGNrUmhkR0V1WkdGMFlTQjhmQ0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQnRZWFJ5YVhoSVpXeHdaWEl1Y21WelpYUW9LVHRjY2x4dUlDQWdJQ0FnSUNCcFppaHphVzVuYkdWVGFHRndaU0FtSmlCc1pYUjBaWEp6VzJsZExtNHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdlRkJ2Y3lBOUlDMTBjbUZqYTJsdVowOW1abk5sZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZVZCdmN5QXJQU0JrYjJOMWJXVnVkRVJoZEdFdWVVOW1abk5sZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZVZCdmN5QXJQU0JtYVhKemRFeHBibVVnUHlBeElEb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabWx5YzNSTWFXNWxJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J6YUdGd1pYTWdQU0J6YUdGd1pVUmhkR0V1YzJoaGNHVnpJRDhnYzJoaGNHVkVZWFJoTG5Ob1lYQmxjMXN3WFM1cGRDQTZJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lHcE1aVzRnUFNCemFHRndaWE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUcxaGRISnBlRWhsYkhCbGNpNXpZMkZzWlNoa2IyTjFiV1Z1ZEVSaGRHRXVjeTh4TURBc1pHOWpkVzFsYm5SRVlYUmhMbk12TVRBd0tUdGNjbHh1SUNBZ0lDQWdJQ0JwWmloemFXNW5iR1ZUYUdGd1pTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVhCd2JIbFVaWGgwVUhKdmNHVnlkR2xsYzFSdlRXRjBjbWw0S0dSdlkzVnRaVzUwUkdGMFlTd2diV0YwY21sNFNHVnNjR1Z5TENCc1pYUjBaWEp6VzJsZExteHBibVVzSUhoUWIzTXNJSGxRYjNNcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCamIyMXRZVzVrY3lBOUlFRnljbUY1TG1Gd2NHeDVLRzUxYkd3c2UyeGxibWQwYURwcVRHVnVmU2xjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hajB3TzJvOGFreGxianRxS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2EweGxiaUE5SUhOb1lYQmxjMXRxWFM1cmN5NXJMbWt1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZWFJvVG05a1pYTWdQU0J6YUdGd1pYTmJhbDB1YTNNdWF6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRjBhRUZ5Y2lBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYXoweE8yczhhMHhsYmp0ckt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtHczlQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoZEdoQmNuSXVjSFZ6YUNodFlYUnlhWGhJWld4d1pYSXVZWEJ3YkhsVWIxZ29jR0YwYUU1dlpHVnpMblpiTUYxYk1GMHNjR0YwYUU1dlpHVnpMblpiTUYxYk1WMHNNQ2tzYldGMGNtbDRTR1ZzY0dWeUxtRndjR3g1Vkc5WktIQmhkR2hPYjJSbGN5NTJXekJkV3pCZExIQmhkR2hPYjJSbGN5NTJXekJkV3pGZExEQXBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhkR2hCY25JdWNIVnphQ2h0WVhSeWFYaElaV3h3WlhJdVlYQndiSGxVYjFnb2NHRjBhRTV2WkdWekxtOWJheTB4WFZzd1hTeHdZWFJvVG05a1pYTXViMXRyTFRGZFd6RmRMREFwTEcxaGRISnBlRWhsYkhCbGNpNWhjSEJzZVZSdldTaHdZWFJvVG05a1pYTXViMXRyTFRGZFd6QmRMSEJoZEdoT2IyUmxjeTV2VzJzdE1WMWJNVjBzTUNrc2JXRjBjbWw0U0dWc2NHVnlMbUZ3Y0d4NVZHOVlLSEJoZEdoT2IyUmxjeTVwVzJ0ZFd6QmRMSEJoZEdoT2IyUmxjeTVwVzJ0ZFd6RmRMREFwTEcxaGRISnBlRWhsYkhCbGNpNWhjSEJzZVZSdldTaHdZWFJvVG05a1pYTXVhVnRyWFZzd1hTeHdZWFJvVG05a1pYTXVhVnRyWFZzeFhTd3dLU3h0WVhSeWFYaElaV3h3WlhJdVlYQndiSGxVYjFnb2NHRjBhRTV2WkdWekxuWmJhMTFiTUYwc2NHRjBhRTV2WkdWekxuWmJhMTFiTVYwc01Da3NiV0YwY21sNFNHVnNjR1Z5TG1Gd2NHeDVWRzlaS0hCaGRHaE9iMlJsY3k1MlcydGRXekJkTEhCaGRHaE9iMlJsY3k1MlcydGRXekZkTERBcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lYUm9RWEp5TG5CMWMyZ29iV0YwY21sNFNHVnNjR1Z5TG1Gd2NHeDVWRzlZS0hCaGRHaE9iMlJsY3k1dlcyc3RNVjFiTUYwc2NHRjBhRTV2WkdWekxtOWJheTB4WFZzeFhTd3dLU3h0WVhSeWFYaElaV3h3WlhJdVlYQndiSGxVYjFrb2NHRjBhRTV2WkdWekxtOWJheTB4WFZzd1hTeHdZWFJvVG05a1pYTXViMXRyTFRGZFd6RmRMREFwTEcxaGRISnBlRWhsYkhCbGNpNWhjSEJzZVZSdldDaHdZWFJvVG05a1pYTXVhVnN3WFZzd1hTeHdZWFJvVG05a1pYTXVhVnN3WFZzeFhTd3dLU3h0WVhSeWFYaElaV3h3WlhJdVlYQndiSGxVYjFrb2NHRjBhRTV2WkdWekxtbGJNRjFiTUYwc2NHRjBhRTV2WkdWekxtbGJNRjFiTVYwc01Da3NiV0YwY21sNFNHVnNjR1Z5TG1Gd2NHeDVWRzlZS0hCaGRHaE9iMlJsY3k1Mld6QmRXekJkTEhCaGRHaE9iMlJsY3k1Mld6QmRXekZkTERBcExHMWhkSEpwZUVobGJIQmxjaTVoY0hCc2VWUnZXU2h3WVhSb1RtOWtaWE11ZGxzd1hWc3dYU3h3WVhSb1RtOWtaWE11ZGxzd1hWc3hYU3d3S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJXMWhibVJ6VzJwZElEMGdjR0YwYUVGeWNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9jMmx1WjJ4bFUyaGhjR1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I0VUc5eklDczlJR3hsZEhSbGNuTmJhVjB1YkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZUZCdmN5QXJQU0IwY21GamEybHVaMDltWm5ObGREdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1MFpYaDBVM0JoYm5OYlkyNTBYU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHVjRkRk53WVc1elcyTnVkRjB1Wld4bGJTQTlJR052YlcxaGJtUnpPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHVjRkRk53WVc1elcyTnVkRjBnUFNCN1pXeGxiVG9nWTI5dGJXRnVaSE45TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JqYm5RZ0t6MHhPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1RFZsUmxlSFJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSkdjbUZ0WlNBOUlHWjFibU4wYVc5dUtIQmhjbVZ1ZEUxaGRISnBlQ2w3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbDl3WVhKbGJuUXVjbVZ1WkdWeVJuSmhiV1V1WTJGc2JDaDBhR2x6TENCd1lYSmxiblJOWVhSeWFYZ3BQVDA5Wm1Gc2MyVXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFpoY2lCamRIZ2dQU0IwYUdsekxtTmhiblpoYzBOdmJuUmxlSFE3WEhKY2JpQWdJQ0IyWVhJZ1ptbHVZV3hOWVhRZ1BTQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTFoZEM1d2NtOXdjenRjY2x4dUlDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXlaVzVrWlhKbGNpNXpZWFpsS0NrN1hISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Y21WdVpHVnlaWEl1WTNSNFZISmhibk5tYjNKdEtHWnBibUZzVFdGMEtUdGNjbHh1SUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1eVpXNWtaWEpsY2k1amRIaFBjR0ZqYVhSNUtIUm9hWE11Wm1sdVlXeFVjbUZ1YzJadmNtMHViM0JoWTJsMGVTazdYSEpjYmlBZ0lDQmpkSGd1Wm05dWRDQTlJSFJvYVhNdWRtRnNkV1Z6TG1aV1lXeDFaVHRjY2x4dUlDQWdJR04wZUM1c2FXNWxRMkZ3SUQwZ0oySjFkSFFuTzF4eVhHNGdJQ0FnWTNSNExteHBibVZLYjJsdUlEMGdKMjFwZEdWeUp6dGNjbHh1SUNBZ0lHTjBlQzV0YVhSbGNreHBiV2wwSUQwZ05EdGNjbHh1WEhKY2JpQWdJQ0JwWmlnaGRHaHBjeTVrWVhSaExuTnBibWRzWlZOb1lYQmxLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblJsZUhSQmJtbHRZWFJ2Y2k1blpYUk5aV0Z6ZFhKbGN5aDBhR2x6TG5SbGVIUlFjbTl3WlhKMGVTNWpkWEp5Wlc1MFJHRjBZU3dnZEdocGN5NXNaWFIwWlhKelEyaGhibWRsWkVac1lXY3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhaaGNpQWdhU3hzWlc0c0lHb3NJR3BNWlc0c0lHc3NJR3RNWlc0N1hISmNiaUFnSUNCMllYSWdjbVZ1WkdWeVpXUk1aWFIwWlhKeklEMGdkR2hwY3k1MFpYaDBRVzVwYldGMGIzSXVjbVZ1WkdWeVpXUk1aWFIwWlhKek8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCc1pYUjBaWEp6SUQwZ2RHaHBjeTUwWlhoMFVISnZjR1Z5ZEhrdVkzVnljbVZ1ZEVSaGRHRXViRHRjY2x4dVhISmNiaUFnSUNCc1pXNGdQU0JzWlhSMFpYSnpMbXhsYm1kMGFEdGNjbHh1SUNBZ0lIWmhjaUJ5Wlc1a1pYSmxaRXhsZEhSbGNqdGNjbHh1SUNBZ0lIWmhjaUJzWVhOMFJtbHNiQ0E5SUc1MWJHd3NJR3hoYzNSVGRISnZhMlVnUFNCdWRXeHNMQ0JzWVhOMFUzUnliMnRsVnlBOUlHNTFiR3dzSUdOdmJXMWhibVJ6TENCd1lYUm9RWEp5TzF4eVhHNGdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhzWlhSMFpYSnpXMmxkTG00cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WdVpHVnlaV1JNWlhSMFpYSWdQU0J5Wlc1a1pYSmxaRXhsZEhSbGNuTmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9jbVZ1WkdWeVpXUk1aWFIwWlhJcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Y21WdVpHVnlaWEl1YzJGMlpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJdVkzUjRWSEpoYm5ObWIzSnRLSEpsYm1SbGNtVmtUR1YwZEdWeUxuQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdWNtVnVaR1Z5WlhJdVkzUjRUM0JoWTJsMGVTaHlaVzVrWlhKbFpFeGxkSFJsY2k1dktUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1bWFXeHNLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvY21WdVpHVnlaV1JNWlhSMFpYSWdKaVlnY21WdVpHVnlaV1JNWlhSMFpYSXVabU1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9iR0Z6ZEVacGJHd2dJVDA5SUhKbGJtUmxjbVZrVEdWMGRHVnlMbVpqS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFJtbHNiQ0E5SUhKbGJtUmxjbVZrVEdWMGRHVnlMbVpqTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04wZUM1bWFXeHNVM1I1YkdVZ1BTQnlaVzVrWlhKbFpFeGxkSFJsY2k1bVl6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9iR0Z6ZEVacGJHd2dJVDA5SUhSb2FYTXVkbUZzZFdWekxtWnBiR3dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHRnpkRVpwYkd3Z1BTQjBhR2x6TG5aaGJIVmxjeTVtYVd4c08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1I0TG1acGJHeFRkSGxzWlNBOUlIUm9hWE11ZG1Gc2RXVnpMbVpwYkd3N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dGJXRnVaSE1nUFNCMGFHbHpMblJsZUhSVGNHRnVjMXRwWFM1bGJHVnRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnFUR1Z1SUQwZ1kyOXRiV0Z1WkhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVZMkZ1ZG1GelEyOXVkR1Y0ZEM1aVpXZHBibEJoZEdnb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR285TUR0cVBHcE1aVzQ3YWlzOU1Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGMGFFRnljaUE5SUdOdmJXMWhibVJ6VzJwZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhMHhsYmlBOUlIQmhkR2hCY25JdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1OaGJuWmhjME52Ym5SbGVIUXViVzkyWlZSdktIQmhkR2hCY25KYk1GMHNJSEJoZEdoQmNuSmJNVjBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlJQ2hySUQwZ01qc2dheUE4SUd0TVpXNDdJR3NnS3owZ05pa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WjJ4dlltRnNSR0YwWVM1allXNTJZWE5EYjI1MFpYaDBMbUpsZW1sbGNrTjFjblpsVkc4b2NHRjBhRUZ5Y2x0clhTd2djR0YwYUVGeWNsdHJJQ3NnTVYwc0lIQmhkR2hCY25KYmF5QXJJREpkTENCd1lYUm9RWEp5VzJzZ0t5QXpYU3dnY0dGMGFFRnljbHRySUNzZ05GMHNJSEJoZEdoQmNuSmJheUFySURWZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVkyRnVkbUZ6UTI5dWRHVjRkQzVqYkc5elpWQmhkR2dvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbU5oYm5aaGMwTnZiblJsZUhRdVptbHNiQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THk5amRIZ3VabWxzYkZSbGVIUW9kR2hwY3k1MFpYaDBVM0JoYm5OYmFWMHVkbUZzTERBc01DazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWMzUnliMnRsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2NtVnVaR1Z5WldSTVpYUjBaWElnSmlZZ2NtVnVaR1Z5WldSTVpYUjBaWEl1YzNjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYkdGemRGTjBjbTlyWlZjZ0lUMDlJSEpsYm1SbGNtVmtUR1YwZEdWeUxuTjNLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZWE4wVTNSeWIydGxWeUE5SUhKbGJtUmxjbVZrVEdWMGRHVnlMbk4zTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04wZUM1c2FXNWxWMmxrZEdnZ1BTQnlaVzVrWlhKbFpFeGxkSFJsY2k1emR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9iR0Z6ZEZOMGNtOXJaVmNnSVQwOUlIUm9hWE11ZG1Gc2RXVnpMbk5YYVdSMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFUzUnliMnRsVnlBOUlIUm9hWE11ZG1Gc2RXVnpMbk5YYVdSMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04wZUM1c2FXNWxWMmxrZEdnZ1BTQjBhR2x6TG5aaGJIVmxjeTV6VjJsa2RHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jbVZ1WkdWeVpXUk1aWFIwWlhJZ0ppWWdjbVZ1WkdWeVpXUk1aWFIwWlhJdWMyTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2JHRnpkRk4wY205clpTQWhQVDBnY21WdVpHVnlaV1JNWlhSMFpYSXVjMk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSVGRISnZhMlVnUFNCeVpXNWtaWEpsWkV4bGRIUmxjaTV6WXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZEhndWMzUnliMnRsVTNSNWJHVWdQU0J5Wlc1a1pYSmxaRXhsZEhSbGNpNXpZenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZldWc2MyVWdhV1lvYkdGemRGTjBjbTlyWlNBaFBUMGdkR2hwY3k1MllXeDFaWE11YzNSeWIydGxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4aGMzUlRkSEp2YTJVZ1BTQjBhR2x6TG5aaGJIVmxjeTV6ZEhKdmEyVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZEhndWMzUnliMnRsVTNSNWJHVWdQU0IwYUdsekxuWmhiSFZsY3k1emRISnZhMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl0YldGdVpITWdQU0IwYUdsekxuUmxlSFJUY0dGdWMxdHBYUzVsYkdWdE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcVRHVnVJRDBnWTI5dGJXRnVaSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kc2IySmhiRVJoZEdFdVkyRnVkbUZ6UTI5dWRHVjRkQzVpWldkcGJsQmhkR2dvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEdwTVpXNDdhaXM5TVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0YwYUVGeWNpQTlJR052YlcxaGJtUnpXMnBkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2EweGxiaUE5SUhCaGRHaEJjbkl1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhMbU5oYm5aaGMwTnZiblJsZUhRdWJXOTJaVlJ2S0hCaGRHaEJjbkpiTUYwc0lIQmhkR2hCY25KYk1WMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHJJRDBnTWpzZ2F5QThJR3RNWlc0N0lHc2dLejBnTmlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMnh2WW1Gc1JHRjBZUzVqWVc1MllYTkRiMjUwWlhoMExtSmxlbWxsY2tOMWNuWmxWRzhvY0dGMGFFRnljbHRyWFN3Z2NHRjBhRUZ5Y2x0cklDc2dNVjBzSUhCaGRHaEJjbkpiYXlBcklESmRMQ0J3WVhSb1FYSnlXMnNnS3lBelhTd2djR0YwYUVGeWNsdHJJQ3NnTkYwc0lIQmhkR2hCY25KYmF5QXJJRFZkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1WTJGdWRtRnpRMjl1ZEdWNGRDNWpiRzl6WlZCaGRHZ29LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExtTmhiblpoYzBOdmJuUmxlSFF1YzNSeWIydGxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2TDJOMGVDNXpkSEp2YTJWVVpYaDBLR3hsZEhSbGNuTmJhVjB1ZG1Gc0xEQXNNQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0hKbGJtUmxjbVZrVEdWMGRHVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyeHZZbUZzUkdGMFlTNXlaVzVrWlhKbGNpNXlaWE4wYjNKbEtDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHlwcFppaDBhR2x6TG1SaGRHRXVhR0Z6VFdGemF5bDdYSEpjYmlBZ0lDQWdkR2hwY3k1bmJHOWlZV3hFWVhSaExuSmxibVJsY21WeUxuSmxjM1J2Y21Vb2RISjFaU2s3WEhKY2JpQWdJQ0FnZlNvdlhISmNiaUFnSUNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1Y21WdVpHVnlaWEl1Y21WemRHOXlaU2gwYUdsekxtUmhkR0V1YUdGelRXRnpheWs3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVpwY25OMFJuSmhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Wm1seWMzUkdjbUZ0WlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnZlZ4eVhHNTlPMXh1Wm5WdVkzUnBiMjRnU0VKaGMyVkZiR1Z0Wlc1MEtHUmhkR0VzY0dGeVpXNTBRMjl1ZEdGcGJtVnlMR2RzYjJKaGJFUmhkR0VzWTI5dGNDd2djR3hoWTJWb2IyeGtaWElwZTF4eVhHNGdJQ0FnZEdocGN5NW5iRzlpWVd4RVlYUmhJRDBnWjJ4dlltRnNSR0YwWVR0Y2NseHVJQ0FnSUhSb2FYTXVZMjl0Y0NBOUlHTnZiWEE3WEhKY2JpQWdJQ0IwYUdsekxtUmhkR0VnUFNCa1lYUmhPMXh5WEc0Z0lDQWdkR2hwY3k1dFlYUjBaVVZzWlcxbGJuUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTV3WVhKbGJuUkRiMjUwWVdsdVpYSWdQU0J3WVhKbGJuUkRiMjUwWVdsdVpYSTdYSEpjYmlBZ0lDQjBhR2x6TG14aGVXVnlTV1FnUFNCd2JHRmpaV2h2YkdSbGNpQS9JSEJzWVdObGFHOXNaR1Z5TG14aGVXVnlTV1FnT2lBbmJIbGZKeXR5WVc1a2IyMVRkSEpwYm1jb01UQXBPMXh5WEc0Z0lDQWdkR2hwY3k1d2JHRmpaV2h2YkdSbGNpQTlJSEJzWVdObGFHOXNaR1Z5TzF4eVhHNGdJQ0FnZEdocGN5NXBibWwwS0NrN1hISmNibjA3WEhKY2JseHlYRzVqY21WaGRHVkZiR1Z0Wlc1MEtFSmhjMlZGYkdWdFpXNTBMQ0JJUW1GelpVVnNaVzFsYm5RcE8xeHlYRzVJUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtTm9aV05yUW14bGJtUk5iMlJsSUQwZ1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JuMDdYSEpjYmtoQ1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjMlYwUW14bGJtUk5iMlJsSUQwZ1FtRnpaVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbk5sZEVKc1pXNWtUVzlrWlR0Y2NseHVYSEpjYmk4cVNFSmhjMlZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVoY0hCbGJtUk9iMlJsVkc5UVlYSmxiblFnUFNCbWRXNWpkR2x2YmlodWIyUmxLU0I3WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdWFHUXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVjR3hoWTJWb2IyeGtaWElwZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJuSUQwZ2RHaHBjeTV3YkdGalpXaHZiR1JsY2k1d2FFVnNaVzFsYm5RN1hISmNiaUFnSUNBZ0lDQWdaeTV3WVhKbGJuUk9iMlJsTG1sdWMyVnlkRUpsWm05eVpTaHViMlJsTENCbktUdGNjbHh1SUNBZ0lDQWdJQ0F2TDJjdWNHRnlaVzUwVG05a1pTNXlaVzF2ZG1WRGFHbHNaQ2huS1R0Y2NseHVJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0Z5Wlc1MFEyOXVkR0ZwYm1WeUxtRndjR1Z1WkVOb2FXeGtLRzV2WkdVcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5T3lvdlhISmNibHh5WEc1Y2NseHVTRUpoYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1blpYUkNZWE5sUld4bGJXVnVkQ0E5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NWlZWE5sUld4bGJXVnVkRHRjY2x4dWZUdGNjbHh1WEhKY2JraENZWE5sUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxSV3hsYldWdWRITWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtaGhjMDFoYzJzcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZHpkbWNuS1R0Y2NseHVJQ0FnSUNBZ0lDQnpkSGxzWlVScGRpaDBhR2x6TG14aGVXVnlSV3hsYldWdWRDazdYSEpjYmlBZ0lDQWdJQ0FnTHk5MGFHbHpMbUZ3Y0dWdVpFNXZaR1ZVYjFCaGNtVnVkQ2gwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVpWVhObFJXeGxiV1Z1ZENBOUlIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1ME8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXRnphMlZrUld4bGJXVnVkQ0E5SUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTzF4eVhHNGdJQ0FnZldWc2MyVjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCMGFHbHpMbkJoY21WdWRFTnZiblJoYVc1bGNqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0WldSRmJHVnRaVzUwSUQwZ2RHaHBjeTVzWVhsbGNrVnNaVzFsYm5RN1hISmNiaUFnSUNCcFppaDBhR2x6TG1SaGRHRXViRzRnSmlZZ0tIUm9hWE11WkdGMFlTNTBlU0E5UFQwZ05DQjhmQ0IwYUdsekxtUmhkR0V1ZEhrZ1BUMDlJREFwS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ0E5UFQwZ2RHaHBjeTV3WVhKbGJuUkRiMjUwWVdsdVpYSXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14aGVXVnlSV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3blp5Y3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMM1JvYVhNdVlYQndaVzVrVG05a1pWUnZVR0Z5Wlc1MEtIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVpWVhObFJXeGxiV1Z1ZENBOUlIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1ME8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXhoZVdWeVJXeGxiV1Z1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMmxrSnl4MGFHbHpMbVJoZEdFdWJHNHBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1elpYUkNiR1Z1WkUxdlpHVW9LVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXViR0Y1WlhKRmJHVnRaVzUwSUNFOVBTQjBhR2x6TG5CaGNtVnVkRU52Ym5SaGFXNWxjaWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3YkdGalpXaHZiR1JsY2lBOUlHNTFiR3c3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxtTm9aV05yVUdGeVpXNTBhVzVuS0NrN1hISmNibjA3WEhKY2JseHlYRzVJUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxibVJsY2taeVlXMWxJRDBnWm5WdVkzUnBiMjRvY0dGeVpXNTBWSEpoYm5ObWIzSnRLWHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaR0YwWVM1MGVTQTlQVDBnTXlsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHbG1LSFJvYVhNdVkzVnljbVZ1ZEVaeVlXMWxUblZ0SUQwOVBTQjBhR2x6TG14aGMzUk9kVzBnZkh3Z0lYUm9hWE11YVhOV2FYTnBZbXhsS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzFacGMybGliR1U3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IwYUdsekxteGhjM1JPZFcwZ1BTQjBhR2x6TG1OMWNuSmxiblJHY21GdFpVNTFiVHRjY2x4dVhISmNiaUFnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtOXdUV1JtSUQwZ2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXZjQzV0WkdZN1hISmNiaUFnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUm9hWE11Wm1sdVlXeFVjbUZ1YzJadmNtMHViVkJ5YjNBdWJXUm1PMXh5WEc0Z0lDQWdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV2Y0dGamFYUjVJRDBnZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dmNDNTJPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NW1hWEp6ZEVaeVlXMWxLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtOXdUV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUnlkV1U3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2RtRnlJRzFoZER0Y2NseHVJQ0FnSUhaaGNpQm1hVzVoYkUxaGRDQTlJSFJvYVhNdVptbHVZV3hVY21GdWMyWnZjbTB1YldGME8xeHlYRzVjY2x4dUlDQWdJR2xtS0hSb2FYTXVhR2xsY21GeVkyaDVLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdkR2hwY3k1b2FXVnlZWEpqYUhrdWJHVnVaM1JvTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J0WVhRZ1BTQjBhR2x6TG1acGJtRnNWSEpoYm5ObWIzSnRMbTFRY205d0xuWXVjSEp2Y0hNN1hISmNiaUFnSUNBZ0lDQWdabWx1WVd4TllYUXVZMnh2Ym1WR2NtOXRVSEp2Y0hNb2JXRjBLVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmlBOUlIUm9hWE11YUdsbGNtRnlZMmg1VzJsZExtWnBibUZzVkhKaGJuTm1iM0p0TG0xUWNtOXdMbTFrWmlBL0lIUnlkV1VnT2lCMGFHbHpMbVpwYm1Gc1ZISmhibk5tYjNKdExtMWhkRTFrWmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGMElEMGdkR2hwY3k1b2FXVnlZWEpqYUhsYmFWMHVabWx1WVd4VWNtRnVjMlp2Y20wdWJWQnliM0F1ZGk1d2NtOXdjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabWx1WVd4TllYUXVkSEpoYm5ObWIzSnRLRzFoZEZzd1hTeHRZWFJiTVYwc2JXRjBXekpkTEcxaGRGc3pYU3h0WVhSYk5GMHNiV0YwV3pWZExHMWhkRnMyWFN4dFlYUmJOMTBzYldGMFd6aGRMRzFoZEZzNVhTeHRZWFJiTVRCZExHMWhkRnN4TVYwc2JXRjBXekV5WFN4dFlYUmJNVE5kTEcxaGRGc3hORjBzYldGMFd6RTFYU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1cGMxWnBjMmxpYkdVZ0ppWWdkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0WVhSTlpHWXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWdoY0dGeVpXNTBWSEpoYm5ObWIzSnRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGJtRnNUV0YwTG1Oc2IyNWxSbkp2YlZCeWIzQnpLSFJvYVhNdVptbHVZV3hVY21GdWMyWnZjbTB1YlZCeWIzQXVkaTV3Y205d2N5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBJRDBnZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjQzUyTG5CeWIzQnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1sdVlXeE5ZWFF1WTJ4dmJtVkdjbTl0VUhKdmNITW9iV0YwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LSFJvYVhNdVpHRjBZUzVvWVhOTllYTnJLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTFoYzJ0TllXNWhaMlZ5TG5KbGJtUmxja1p5WVcxbEtHWnBibUZzVFdGMEtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JwWmlod1lYSmxiblJVY21GdWMyWnZjbTBwZTF4eVhHNGdJQ0FnSUNBZ0lHMWhkQ0E5SUhCaGNtVnVkRlJ5WVc1elptOXliUzV0WVhRdWNISnZjSE03WEhKY2JpQWdJQ0FnSUNBZ1ptbHVZV3hOWVhRdVkyeHZibVZHY205dFVISnZjSE1vYldGMEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG05d1lXTnBkSGtnS2owZ2NHRnlaVzUwVkhKaGJuTm1iM0p0TG05d1lXTnBkSGs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVtYVc1aGJGUnlZVzV6Wm05eWJTNXZjRTFrWmlBOUlIQmhjbVZ1ZEZSeVlXNXpabTl5YlM1dmNFMWtaaUEvSUhSeWRXVWdPaUIwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG05d1RXUm1PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWJXRjBUV1JtSUQwZ2NHRnlaVzUwVkhKaGJuTm1iM0p0TG0xaGRFMWtaaUEvSUhSeWRXVWdPaUIwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG0xaGRFMWtabHh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdsbUtIUm9hWE11Wm1sdVlXeFVjbUZ1YzJadmNtMHViV0YwVFdSbUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuUnlZVzV6Wm05eWJXVmtSV3hsYldWdWRDNXpkSGxzWlM1MGNtRnVjMlp2Y20wZ1BTQjBhR2x6TG5SeVlXNXpabTl5YldWa1JXeGxiV1Z1ZEM1emRIbHNaUzUzWldKcmFYUlVjbUZ1YzJadmNtMGdQU0JtYVc1aGJFMWhkQzUwYjBOVFV5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabWx1WVd4TllYUWdQU0JtYVc1aGJFMWhkRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVabWx1WVd4VWNtRnVjMlp2Y20wdWIzQk5aR1lwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZEhKaGJuTm1iM0p0WldSRmJHVnRaVzUwTG5OMGVXeGxMbTl3WVdOcGRIa2dQU0IwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG05d1lXTnBkSGs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMxWnBjMmxpYkdVN1hISmNibjA3WEhKY2JseHlYRzVJUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtUmxjM1J5YjNrZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUWdQU0J1ZFd4c08xeHlYRzRnSUNBZ2RHaHBjeTUwY21GdWMyWnZjbTFsWkVWc1pXMWxiblFnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkR2hwY3k1d1lYSmxiblJEYjI1MFlXbHVaWElnUFNCdWRXeHNPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NXRZWFIwWlVWc1pXMWxiblFwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRIUmxSV3hsYldWdWRDQTlJRzUxYkd3N1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaDBhR2x6TG0xaGMydE5ZVzVoWjJWeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXRZWE5yVFdGdVlXZGxjaTVrWlhOMGNtOTVLQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOclRXRnVZV2RsY2lBOUlHNTFiR3c3WEhKY2JpQWdJQ0I5WEhKY2JuMDdYSEpjYmx4eVhHNUlRbUZ6WlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG1kbGRFUnZiVVZzWlcxbGJuUWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBPMXh5WEc1OU8xeHlYRzVJUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtRmtaRTFoYzJ0eklEMGdablZ1WTNScGIyNG9aR0YwWVNsN1hISmNiaUFnSUNCMGFHbHpMbTFoYzJ0TllXNWhaMlZ5SUQwZ2JtVjNJRTFoYzJ0RmJHVnRaVzUwS0dSaGRHRXNkR2hwY3l4MGFHbHpMbWRzYjJKaGJFUmhkR0VwTzF4eVhHNTlPMXh5WEc1Y2NseHVTRUpoYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1b2FXUmxJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVmVHRjY2x4dVhISmNia2hDWVhObFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWMyVjBUV0YwZEdVZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVTRUpoYzJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1aWRXbHNaRVZzWlcxbGJuUlFZWEpsYm5ScGJtY2dQU0JJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZblZwYkdSRmJHVnRaVzUwVUdGeVpXNTBhVzVuTzF4dVpuVnVZM1JwYjI0Z1NGTnZiR2xrUld4bGJXVnVkQ2hrWVhSaExIQmhjbVZ1ZEVOdmJuUmhhVzVsY2l4bmJHOWlZV3hFWVhSaExHTnZiWEFzSUhCc1lXTmxhRzlzWkdWeUtYdGNjbHh1SUNBZ0lIUm9hWE11WDNCaGNtVnVkQzVqYjI1emRISjFZM1J2Y2k1allXeHNLSFJvYVhNc1pHRjBZU3h3WVhKbGJuUkRiMjUwWVdsdVpYSXNaMnh2WW1Gc1JHRjBZU3hqYjIxd0xDQndiR0ZqWldodmJHUmxjaWs3WEhKY2JuMWNjbHh1WTNKbFlYUmxSV3hsYldWdWRDaElRbUZ6WlVWc1pXMWxiblFzSUVoVGIyeHBaRVZzWlcxbGJuUXBPMXh5WEc1Y2NseHVTRk52Ykdsa1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsUld4bGJXVnVkSE1nUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2RtRnlJSEJoY21WdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4eVhHNGdJQ0FnYzNSNWJHVkVhWFlvY0dGeVpXNTBLVHRjY2x4dUlDQWdJSFpoY2lCamIyNTBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLSE4yWjA1VExDZHpkbWNuS1R0Y2NseHVJQ0FnSUhOMGVXeGxSR2wyS0dOdmJuUXBPMXh5WEc0Z0lDQWdZMjl1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KM2RwWkhSb0p5eDBhR2x6TG1SaGRHRXVjM2NwTzF4eVhHNGdJQ0FnWTI5dWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJobGFXZG9kQ2NzZEdocGN5NWtZWFJoTG5Ob0tUdGNjbHh1SUNBZ0lIQmhjbVZ1ZEM1aGNIQmxibVJEYUdsc1pDaGpiMjUwS1R0Y2NseHVJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwSUQwZ2NHRnlaVzUwTzF4eVhHNGdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMWxaRVZzWlcxbGJuUWdQU0J3WVhKbGJuUTdYSEpjYmlBZ0lDQXZMM1JvYVhNdVlYQndaVzVrVG05a1pWUnZVR0Z5Wlc1MEtIQmhjbVZ1ZENrN1hISmNiaUFnSUNCMGFHbHpMbUpoYzJWRmJHVnRaVzUwSUQwZ2NHRnlaVzUwTzF4eVhHNGdJQ0FnZEdocGN5NXBibTVsY2tWc1pXMGdQU0J3WVhKbGJuUTdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1Ykc0cGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFXNXVaWEpGYkdWdExuTmxkRUYwZEhKcFluVjBaU2duYVdRbkxIUm9hWE11WkdGMFlTNXNiaWs3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JwWmloMGFHbHpMbVJoZEdFdVltMGdJVDA5SURBcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBRbXhsYm1STmIyUmxLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0IyWVhJZ2NtVmpkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25jbVZqZENjcE8xeHlYRzRnSUNBZ2NtVmpkQzV6WlhSQmRIUnlhV0oxZEdVb0ozZHBaSFJvSnl4MGFHbHpMbVJoZEdFdWMzY3BPMXh5WEc0Z0lDQWdjbVZqZEM1elpYUkJkSFJ5YVdKMWRHVW9KMmhsYVdkb2RDY3NkR2hwY3k1a1lYUmhMbk5vS1R0Y2NseHVJQ0FnSUhKbFkzUXVjMlYwUVhSMGNtbGlkWFJsS0NkbWFXeHNKeXgwYUdsekxtUmhkR0V1YzJNcE8xeHlYRzRnSUNBZ1kyOXVkQzVoY0hCbGJtUkRhR2xzWkNoeVpXTjBLVHRjY2x4dUlDQWdJR2xtS0hSb2FYTXVaR0YwWVM1b1lYTk5ZWE5yS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMydGxaRVZzWlcxbGJuUWdQU0J5WldOME8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTVqYUdWamExQmhjbVZ1ZEdsdVp5Z3BPMXh5WEc1OU8xeHlYRzVjY2x4dVhISmNibHh5WEc1SVUyOXNhV1JGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVvYVdSbElEMGdVMVpIUW1GelpVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtaHBaR1U3WEhKY2JraFRiMnhwWkVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5Ob2IzY2dQU0JUVmtkQ1lYTmxSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjMmh2ZHp0Y2NseHVTRk52Ykdsa1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JKU1cxaFoyVkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXlaVzVrWlhKR2NtRnRaVHRjY2x4dVNGTnZiR2xrUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUVsSmJXRm5aVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbVJsYzNSeWIzazdYRzVtZFc1amRHbHZiaUJJUTI5dGNFVnNaVzFsYm5Rb1pHRjBZU3h3WVhKbGJuUkRiMjUwWVdsdVpYSXNaMnh2WW1Gc1JHRjBZU3hqYjIxd0xDQndiR0ZqWldodmJHUmxjaWw3WEhKY2JpQWdJQ0IwYUdsekxsOXdZWEpsYm5RdVkyOXVjM1J5ZFdOMGIzSXVZMkZzYkNoMGFHbHpMR1JoZEdFc2NHRnlaVzUwUTI5dWRHRnBibVZ5TEdkc2IySmhiRVJoZEdFc1kyOXRjQ3dnY0d4aFkyVm9iMnhrWlhJcE8xeHlYRzRnSUNBZ2RHaHBjeTVzWVhsbGNuTWdQU0JrWVhSaExteGhlV1Z5Y3p0Y2NseHVJQ0FnSUhSb2FYTXVjM1Z3Y0c5eWRITXpaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjBhR2x6TG1OdmJYQnNaWFJsVEdGNVpYSnpJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQjBhR2x6TG5CbGJtUnBibWRGYkdWdFpXNTBjeUE5SUZ0ZE8xeHlYRzRnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjeUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRHAwYUdsekxteGhlV1Z5Y3k1c1pXNW5kR2g5S1R0Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNTBiU2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYlNBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0hSb2FYTXNkR2hwY3k1a1lYUmhMblJ0TERBc1oyeHZZbUZzUkdGMFlTNW1jbUZ0WlZKaGRHVXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaDBhR2x6TG1SaGRHRXVhR0Z6VFdGemF5a2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjM1Z3Y0c5eWRITXpaQ0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG5oMEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RHaHBjeTVpZFdsc1pFRnNiRWwwWlcxektDazdYSEpjYmx4eVhHNTlYSEpjYm1OeVpXRjBaVVZzWlcxbGJuUW9TRUpoYzJWRmJHVnRaVzUwTENCSVEyOXRjRVZzWlcxbGJuUXBPMXh5WEc1Y2NseHVTRU52YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZGYkdWdFpXNTBjeUE5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMllYSWdaR2wyUld4bGJXVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHlYRzRnSUNBZ2MzUjViR1ZFYVhZb1pHbDJSV3hsYldWdWRDazdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1Ykc0cGUxeHlYRzRnSUNBZ0lDQWdJR1JwZGtWc1pXMWxiblF1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzZEdocGN5NWtZWFJoTG14dUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHUnBka1ZzWlcxbGJuUXVjM1I1YkdVdVkyeHBjQ0E5SUNkeVpXTjBLREJ3ZUN3Z0p5dDBhR2x6TG1SaGRHRXVkeXNuY0hnc0lDY3JkR2hwY3k1a1lYUmhMbWdySjNCNExDQXdjSGdwSnp0Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNW9ZWE5OWVhOcktYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kyOXRjRk4yWnlBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduYzNabkp5azdYSEpjYmlBZ0lDQWdJQ0FnYzNSNWJHVkVhWFlvWTI5dGNGTjJaeWs3WEhKY2JpQWdJQ0FnSUNBZ1kyOXRjRk4yWnk1elpYUkJkSFJ5YVdKMWRHVW9KM2RwWkhSb0p5eDBhR2x6TG1SaGRHRXVkeWs3WEhKY2JpQWdJQ0FnSUNBZ1kyOXRjRk4yWnk1elpYUkJkSFJ5YVdKMWRHVW9KMmhsYVdkb2RDY3NkR2hwY3k1a1lYUmhMbWdwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJuSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RuSnlrN1hISmNiaUFnSUNBZ0lDQWdZMjl0Y0ZOMlp5NWhjSEJsYm1SRGFHbHNaQ2huS1R0Y2NseHVJQ0FnSUNBZ0lDQmthWFpGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0dOdmJYQlRkbWNwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldGemEyVmtSV3hsYldWdWRDQTlJR2M3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVpWVhObFJXeGxiV1Z1ZENBOUlHUnBka1ZzWlcxbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXNZWGxsY2tWc1pXMWxiblFnUFNCbk8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdFpXUkZiR1Z0Wlc1MElEMGdaR2wyUld4bGJXVnVkRHRjY2x4dUlDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJRDBnWkdsMlJXeGxiV1Z1ZER0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1KaGMyVkZiR1Z0Wlc1MElEMGdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMWxaRVZzWlcxbGJuUWdQU0JrYVhaRmJHVnRaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHk5MGFHbHpMbUZ3Y0dWdVpFNXZaR1ZVYjFCaGNtVnVkQ2gwYUdsekxteGhlV1Z5Uld4bGJXVnVkQ2s3WEhKY2JpQWdJQ0IwYUdsekxtTm9aV05yVUdGeVpXNTBhVzVuS0NrN1hISmNibjA3WEhKY2JseHlYRzVJUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtaHBaR1VnUFNCSlEyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbWhwWkdVN1hISmNia2hEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNISmxjR0Z5WlVaeVlXMWxJRDBnU1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXdjbVZ3WVhKbFJuSmhiV1U3WEhKY2JraERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1YzJWMFJXeGxiV1Z1ZEhNZ1BTQkpRMjl0Y0VWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5ObGRFVnNaVzFsYm5Sek8xeHlYRzVJUTI5dGNFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtZGxkRVZzWlcxbGJuUnpJRDBnU1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNW5aWFJGYkdWdFpXNTBjenRjY2x4dVNFTnZiWEJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVrWlhOMGNtOTVJRDBnU1VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWtaWE4wY205NU8xeHlYRzVjY2x4dVNFTnZiWEJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSkdjbUZ0WlNBOUlHWjFibU4wYVc5dUtIQmhjbVZ1ZEUxaGRISnBlQ2w3WEhKY2JpQWdJQ0IyWVhJZ2NtVnVaR1Z5VUdGeVpXNTBJRDBnZEdocGN5NWZjR0Z5Wlc1MExuSmxibVJsY2taeVlXMWxMbU5oYkd3b2RHaHBjeXh3WVhKbGJuUk5ZWFJ5YVhncE8xeHlYRzRnSUNBZ2RtRnlJR2tzYkdWdUlEMGdkR2hwY3k1c1lYbGxjbk11YkdWdVozUm9PMXh5WEc0Z0lDQWdhV1lvY21WdVpHVnlVR0Z5Wlc1MFBUMDlabUZzYzJVcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFHbGtaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjBhR2x6TG1ocFpHUmxiaUE5SUdaaGJITmxPMXh5WEc1Y2NseHVJQ0FnSUdadmNpZ2dhU0E5SURBN0lHa2dQQ0JzWlc0N0lHa3JQVEVnS1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtTnZiWEJzWlhSbFRHRjVaWEp6SUh4OElIUm9hWE11Wld4bGJXVnVkSE5iYVYwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZzWlcxbGJuUnpXMmxkTG5KbGJtUmxja1p5WVcxbEtDazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVdZb2RHaHBjeTVtYVhKemRFWnlZVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1acGNuTjBSbkpoYldVZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dVhISmNia2hEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkyaGxZMnRNWVhsbGNuTWdQU0JDWVhObFVtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtTm9aV05yVEdGNVpYSnpPMXh5WEc1SVEyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbUoxYVd4a1NYUmxiU0E5SUVoNVluSnBaRkpsYm1SbGNtVnlMbkJ5YjNSdmRIbHdaUzVpZFdsc1pFbDBaVzA3WEhKY2JraERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTJobFkydFFaVzVrYVc1blJXeGxiV1Z1ZEhNZ1BTQkllV0p5YVdSU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkyaGxZMnRRWlc1a2FXNW5SV3hsYldWdWRITTdYSEpjYmtoRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZV1JrVUdWdVpHbHVaMFZzWlcxbGJuUWdQU0JJZVdKeWFXUlNaVzVrWlhKbGNpNXdjbTkwYjNSNWNHVXVZV1JrVUdWdVpHbHVaMFZzWlcxbGJuUTdYSEpjYmtoRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZblZwYkdSQmJHeEpkR1Z0Y3lBOUlFSmhjMlZTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WW5WcGJHUkJiR3hKZEdWdGN6dGNjbHh1U0VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWpjbVZoZEdWSmRHVnRJRDBnU0hsaWNtbGtVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVbDBaVzA3WEhKY2JraERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WW5WcGJHUkZiR1Z0Wlc1MFVHRnlaVzUwYVc1bklEMGdTSGxpY21sa1VtVnVaR1Z5WlhJdWNISnZkRzkwZVhCbExtSjFhV3hrUld4bGJXVnVkRkJoY21WdWRHbHVaenRjY2x4dVNFTnZiWEJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVqY21WaGRHVkpiV0ZuWlNBOUlFaDVZbkpwWkZKbGJtUmxjbVZ5TG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZKYldGblpUdGNjbHh1U0VOdmJYQkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNWpjbVZoZEdWRGIyMXdJRDBnU0hsaWNtbGtVbVZ1WkdWeVpYSXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVTnZiWEE3WEhKY2JraERiMjF3Uld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxVMjlzYVdRZ1BTQkllV0p5YVdSU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVTI5c2FXUTdYSEpjYmtoRGIyMXdSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVZM0psWVhSbFUyaGhjR1VnUFNCSWVXSnlhV1JTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxVMmhoY0dVN1hISmNia2hEYjIxd1JXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVkzSmxZWFJsVkdWNGRDQTlJRWg1WW5KcFpGSmxibVJsY21WeUxuQnliM1J2ZEhsd1pTNWpjbVZoZEdWVVpYaDBPMXh5WEc1SVEyOXRjRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbU55WldGMFpVSmhjMlVnUFNCSWVXSnlhV1JTWlc1a1pYSmxjaTV3Y205MGIzUjVjR1V1WTNKbFlYUmxRbUZ6WlR0Y2NseHVTRU52YlhCRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1aGNIQmxibVJGYkdWdFpXNTBTVzVRYjNNZ1BTQkllV0p5YVdSU1pXNWtaWEpsY2k1d2NtOTBiM1I1Y0dVdVlYQndaVzVrUld4bGJXVnVkRWx1VUc5ek8xeHVablZ1WTNScGIyNGdTRk5vWVhCbFJXeGxiV1Z1ZENoa1lYUmhMSEJoY21WdWRFTnZiblJoYVc1bGNpeG5iRzlpWVd4RVlYUmhMR052YlhBc0lIQnNZV05sYUc5c1pHVnlLWHRjY2x4dUlDQWdJSFJvYVhNdWMyaGhjR1Z6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG5Ob1lYQmxjMFJoZEdFZ1BTQmtZWFJoTG5Ob1lYQmxjenRjY2x4dUlDQWdJSFJvYVhNdWMzUjViR1Z6VEdsemRDQTlJRnRkTzF4eVhHNGdJQ0FnZEdocGN5NXBkR1Z0YzBSaGRHRWdQU0JiWFR0Y2NseHVJQ0FnSUhSb2FYTXVjSEpsZGxacFpYZEVZWFJoSUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG5Ob1lYQmxUVzlrYVdacFpYSnpJRDBnVzEwN1hISmNiaUFnSUNCMGFHbHpMbkJ5YjJObGMzTmxaRVZzWlcxbGJuUnpJRDBnVzEwN1hISmNiaUFnSUNCMGFHbHpMbDl3WVhKbGJuUXVZMjl1YzNSeWRXTjBiM0l1WTJGc2JDaDBhR2x6TEdSaGRHRXNjR0Z5Wlc1MFEyOXVkR0ZwYm1WeUxHZHNiMkpoYkVSaGRHRXNZMjl0Y0N3Z2NHeGhZMlZvYjJ4a1pYSXBPMXh5WEc0Z0lDQWdkR2hwY3k1amRYSnlaVzUwUWtKdmVDQTlJSHRjY2x4dUlDQWdJQ0FnSUNCNE9qazVPVGs1T1N4Y2NseHVJQ0FnSUNBZ0lDQjVPaUF0T1RrNU9UazVMRnh5WEc0Z0lDQWdJQ0FnSUdnNklEQXNYSEpjYmlBZ0lDQWdJQ0FnZHpvZ01GeHlYRzRnSUNBZ2ZUdGNjbHh1ZlZ4eVhHNWpjbVZoZEdWRmJHVnRaVzUwS0VoQ1lYTmxSV3hsYldWdWRDd2dTRk5vWVhCbFJXeGxiV1Z1ZENrN1hISmNiblpoY2lCd1lYSmxiblFnUFNCSVUyaGhjR1ZGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVmY0dGeVpXNTBPMXh5WEc1bGVIUmxibVJRY205MGIzUjVjR1VvU1ZOb1lYQmxSV3hsYldWdWRDd2dTRk5vWVhCbFJXeGxiV1Z1ZENrN1hISmNia2hUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExsOXdZWEpsYm5RZ1BTQndZWEpsYm5RN1hISmNia2hUYUdGd1pVVnNaVzFsYm5RdWNISnZkRzkwZVhCbExsOXlaVzVrWlhKVGFHRndaVVp5WVcxbElEMGdTRk5vWVhCbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVTdYSEpjYmx4eVhHNUlVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZGYkdWdFpXNTBjeUE5SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMllYSWdjR0Z5Wlc1MElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblpHbDJKeWs3WEhKY2JpQWdJQ0J6ZEhsc1pVUnBkaWh3WVhKbGJuUXBPMXh5WEc0Z0lDQWdkbUZ5SUdOdmJuUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MFRsTW9jM1puVGxNc0ozTjJaeWNwTzF4eVhHNGdJQ0FnYzNSNWJHVkVhWFlvWTI5dWRDazdYSEpjYmlBZ0lDQjJZWElnYzJsNlpTQTlJSFJvYVhNdVkyOXRjQzVrWVhSaElEOGdkR2hwY3k1amIyMXdMbVJoZEdFZ09pQjBhR2x6TG1kc2IySmhiRVJoZEdFdVkyOXRjRk5wZW1VN1hISmNiaUFnSUNCamIyNTBMbk5sZEVGMGRISnBZblYwWlNnbmQybGtkR2duTEhOcGVtVXVkeWs3WEhKY2JpQWdJQ0JqYjI1MExuTmxkRUYwZEhKcFluVjBaU2duYUdWcFoyaDBKeXh6YVhwbExtZ3BPMXh5WEc0Z0lDQWdhV1lvZEdocGN5NWtZWFJoTG1oaGMwMWhjMnNwZTF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJuSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RuSnlrN1hISmNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MExtRndjR1Z1WkVOb2FXeGtLR052Ym5RcE8xeHlYRzRnSUNBZ0lDQWdJR052Ym5RdVlYQndaVzVrUTJocGJHUW9aeWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOclpXUkZiR1Z0Wlc1MElEMGdaenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXhoZVdWeVJXeGxiV1Z1ZENBOUlHYzdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXphR0Z3WlhORGIyNTBZV2x1WlhJZ1BTQm5PMXh5WEc0Z0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MExtRndjR1Z1WkVOb2FXeGtLR052Ym5RcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJRDBnWTI5dWREdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTm9ZWEJsYzBOdmJuUmhhVzVsY2lBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduWnljcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0hSb2FYTXVjMmhoY0dWelEyOXVkR0ZwYm1WeUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHbG1LQ0YwYUdsekxtUmhkR0V1YUdRcGUxeHlYRzRnSUNBZ0lDQWdJQzh2ZEdocGN5NXdZWEpsYm5SRGIyNTBZV2x1WlhJdVlYQndaVzVrUTJocGJHUW9jR0Z5Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtSmhjMlZGYkdWdFpXNTBJRDBnY0dGeVpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdkR2hwY3k1cGJtNWxja1ZzWlcwZ1BTQndZWEpsYm5RN1hISmNiaUFnSUNCcFppaDBhR2x6TG1SaGRHRXViRzRwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YVc1dVpYSkZiR1Z0TG5ObGRFRjBkSEpwWW5WMFpTZ25hV1FuTEhSb2FYTXVaR0YwWVM1c2JpazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnZEdocGN5NXpaV0Z5WTJoVGFHRndaWE1vZEdocGN5NXphR0Z3WlhORVlYUmhMSFJvYVhNdWFYUmxiWE5FWVhSaExIUm9hWE11Y0hKbGRsWnBaWGRFWVhSaExIUm9hWE11YkdGNVpYSkZiR1Z0Wlc1MExIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1zTUN3Z1cxMHNJSFJ5ZFdVcE8xeHlYRzRnSUNBZ2RHaHBjeTVpZFdsc1pFVjRjSEpsYzNOcGIyNUpiblJsY21aaFkyVW9LVHRjY2x4dUlDQWdJSFJvYVhNdWJHRjVaWEpGYkdWdFpXNTBJRDBnY0dGeVpXNTBPMXh5WEc0Z0lDQWdkR2hwY3k1MGNtRnVjMlp2Y20xbFpFVnNaVzFsYm5RZ1BTQndZWEpsYm5RN1hISmNiaUFnSUNCMGFHbHpMbk5vWVhCbFEyOXVkQ0E5SUdOdmJuUTdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtUmhkR0V1WW0wZ0lUMDlJREFwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWMFFteGxibVJOYjJSbEtDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjBhR2x6TG1Ob1pXTnJVR0Z5Wlc1MGFXNW5LQ2s3WEhKY2JuMDdYSEpjYmx4eVhHNUlVMmhoY0dWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1eVpXNWtaWEpHY21GdFpTQTlJR1oxYm1OMGFXOXVLSEJoY21WdWRFMWhkSEpwZUNsN1hISmNiaUFnSUNCMllYSWdabWx5YzNSR2NtRnRaU0E5SUhSb2FYTXVabWx5YzNSR2NtRnRaVHRjY2x4dUlDQWdJSFJvYVhNdVgzSmxibVJsY2xOb1lYQmxSbkpoYldVb0tUdGNjbHh1WEhKY2JpQWdJQ0JwWmloMGFHbHpMbWx6Vm1semFXSnNaU0FtSmlBb2RHaHBjeTVsYkdWdFRXUm1JSHg4SUdacGNuTjBSbkpoYldVcEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1ltOTFibVJwYm1kQ2IzZ2dQU0IwYUdsekxuTm9ZWEJsUTI5dWRDNW5aWFJDUW05NEtDazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHTm9ZVzVuWldRZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtTjFjbkpsYm5SQ1FtOTRMbmNnSVQwOUlHSnZkVzVrYVc1blFtOTRMbmRwWkhSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKeVpXNTBRa0p2ZUM1M0lEMGdZbTkxYm1ScGJtZENiM2d1ZDJsa2RHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzJoaGNHVkRiMjUwTG5ObGRFRjBkSEpwWW5WMFpTZ25kMmxrZEdnbkxHSnZkVzVrYVc1blFtOTRMbmRwWkhSb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaGhibWRsWkNBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1YUNBaFBUMGdZbTkxYm1ScGJtZENiM2d1YUdWcFoyaDBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amRYSnlaVzUwUWtKdmVDNW9JRDBnWW05MWJtUnBibWRDYjNndWFHVnBaMmgwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTm9ZWEJsUTI5dWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJobGFXZG9kQ2NzWW05MWJtUnBibWRDYjNndWFHVnBaMmgwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJoaGJtZGxaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LR05vWVc1blpXUWdJSHg4SUhSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1ZUNBaFBUMGdZbTkxYm1ScGJtZENiM2d1ZUNBZ2ZId2dkR2hwY3k1amRYSnlaVzUwUWtKdmVDNTVJQ0U5UFNCaWIzVnVaR2x1WjBKdmVDNTVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amRYSnlaVzUwUWtKdmVDNTNJRDBnWW05MWJtUnBibWRDYjNndWQybGtkR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEVKQ2IzZ3VhQ0E5SUdKdmRXNWthVzVuUW05NExtaGxhV2RvZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpkWEp5Wlc1MFFrSnZlQzU0SUQwZ1ltOTFibVJwYm1kQ2IzZ3VlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amRYSnlaVzUwUWtKdmVDNTVJRDBnWW05MWJtUnBibWRDYjNndWVUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyaGhjR1ZEYjI1MExuTmxkRUYwZEhKcFluVjBaU2duZG1sbGQwSnZlQ2NzZEdocGN5NWpkWEp5Wlc1MFFrSnZlQzU0S3ljZ0p5dDBhR2x6TG1OMWNuSmxiblJDUW05NExua3JKeUFuSzNSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1ZHlzbklDY3JkR2hwY3k1amRYSnlaVzUwUWtKdmVDNW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emFHRndaVU52Ym5RdWMzUjViR1V1ZEhKaGJuTm1iM0p0SUQwZ2RHaHBjeTV6YUdGd1pVTnZiblF1YzNSNWJHVXVkMlZpYTJsMFZISmhibk5tYjNKdElEMGdKM1J5WVc1emJHRjBaU2duSUNzZ2RHaHBjeTVqZFhKeVpXNTBRa0p2ZUM1NElDc2dKM0I0TENjZ0t5QjBhR2x6TG1OMWNuSmxiblJDUW05NExua2dLeUFuY0hncEp6dGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzU5TzF4dVpuVnVZM1JwYjI0Z1NGUmxlSFJGYkdWdFpXNTBLR1JoZEdFc2NHRnlaVzUwUTI5dWRHRnBibVZ5TEdkc2IySmhiRVJoZEdFc1kyOXRjQ3dnY0d4aFkyVm9iMnhrWlhJcGUxeHlYRzRnSUNBZ2RHaHBjeTUwWlhoMFUzQmhibk1nUFNCYlhUdGNjbHh1SUNBZ0lIUm9hWE11ZEdWNGRGQmhkR2h6SUQwZ1cxMDdYSEpjYmlBZ0lDQjBhR2x6TG1OMWNuSmxiblJDUW05NElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhnNk9UazVPVGs1TEZ4eVhHNGdJQ0FnSUNBZ0lIazZJQzA1T1RrNU9Ua3NYSEpjYmlBZ0lDQWdJQ0FnYURvZ01DeGNjbHh1SUNBZ0lDQWdJQ0IzT2lBd1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMGFHbHpMbkpsYm1SbGNsUjVjR1VnUFNBbmMzWm5KenRjY2x4dUlDQWdJSFJvYVhNdWFYTk5ZWE5yWldRZ1BTQm1ZV3h6WlR0Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWpiMjV6ZEhKMVkzUnZjaTVqWVd4c0tIUm9hWE1zWkdGMFlTeHdZWEpsYm5SRGIyNTBZV2x1WlhJc1oyeHZZbUZzUkdGMFlTeGpiMjF3TENCd2JHRmpaV2h2YkdSbGNpazdYSEpjYmx4eVhHNTlYSEpjYm1OeVpXRjBaVVZzWlcxbGJuUW9TRUpoYzJWRmJHVnRaVzUwTENCSVZHVjRkRVZzWlcxbGJuUXBPMXh5WEc1Y2NseHVaWGgwWlc1a1VISnZkRzkwZVhCbEtFbFVaWGgwUld4bGJXVnVkQ3dnU0ZSbGVIUkZiR1Z0Wlc1MEtUdGNjbHh1WEhKY2JraFVaWGgwUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxSV3hsYldWdWRITWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnZEdocGN5NXBjMDFoYzJ0bFpDQTlJSFJvYVhNdVkyaGxZMnROWVhOcmN5Z3BPMXh5WEc0Z0lDQWdkbUZ5SUhCaGNtVnVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHlYRzRnSUNBZ2MzUjViR1ZFYVhZb2NHRnlaVzUwS1R0Y2NseHVJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwSUQwZ2NHRnlaVzUwTzF4eVhHNGdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMWxaRVZzWlcxbGJuUWdQU0J3WVhKbGJuUTdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtbHpUV0Z6YTJWa0tYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2xSNWNHVWdQU0FuYzNabkp6dGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1kyOXVkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUk9VeWh6ZG1kT1V5d25jM1puSnlrN1hISmNiaUFnSUNBZ0lDQWdjM1I1YkdWRWFYWW9ZMjl1ZENrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amIyNTBJRDBnWTI5dWREdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiWEJYSUQwZ2RHaHBjeTVqYjIxd0xtUmhkR0V1ZHp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJYQklJRDBnZEdocGN5NWpiMjF3TG1SaGRHRXVhRHRjY2x4dUlDQWdJQ0FnSUNCamIyNTBMbk5sZEVGMGRISnBZblYwWlNnbmQybGtkR2duTEhSb2FYTXVZMjl0Y0ZjcE8xeHlYRzRnSUNBZ0lDQWdJR052Ym5RdWMyVjBRWFIwY21saWRYUmxLQ2RvWldsbmFIUW5MSFJvYVhNdVkyOXRjRWdwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJuSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2RuSnlrN1hISmNiaUFnSUNBZ0lDQWdZMjl1ZEM1aGNIQmxibVJEYUdsc1pDaG5LVHRjY2x4dUlDQWdJQ0FnSUNCd1lYSmxiblF1WVhCd1pXNWtRMmhwYkdRb1kyOXVkQ2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhOclpXUkZiR1Z0Wlc1MElEMGdaenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWx1Ym1WeVJXeGxiU0E5SUdjN1hISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11Y21WdVpHVnlWSGx3WlNBOUlDZG9kRzFzSnp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sdWJtVnlSV3hsYlNBOUlIQmhjbVZ1ZER0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUhSb2FYTXVZbUZ6WlVWc1pXMWxiblFnUFNCd1lYSmxiblE3WEhKY2JseHlYRzRnSUNBZ2RHaHBjeTVqYUdWamExQmhjbVZ1ZEdsdVp5Z3BPMXh5WEc1Y2NseHVmVHRjY2x4dVhISmNia2hVWlhoMFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdVluVnBiR1JPWlhkVVpYaDBJRDBnWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUhaaGNpQmtiMk4xYldWdWRFUmhkR0VnUFNCMGFHbHpMblJsZUhSUWNtOXdaWEowZVM1amRYSnlaVzUwUkdGMFlUdGNjbHh1SUNBZ0lIUm9hWE11Y21WdVpHVnlaV1JNWlhSMFpYSnpJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PblJvYVhNdWRHVjRkRkJ5YjNCbGNuUjVMbU4xY25KbGJuUkVZWFJoTG13Z1B5QjBhR2x6TG5SbGVIUlFjbTl3WlhKMGVTNWpkWEp5Wlc1MFJHRjBZUzVzTG14bGJtZDBhQ0E2SURCOUtUdGNjbHh1SUNBZ0lIWmhjaUJwYm01bGNrVnNaVzFUZEhsc1pTQTlJSFJvYVhNdWFXNXVaWEpGYkdWdExuTjBlV3hsTzF4eVhHNGdJQ0FnYVc1dVpYSkZiR1Z0VTNSNWJHVXVZMjlzYjNJZ1BTQnBibTVsY2tWc1pXMVRkSGxzWlM1bWFXeHNJRDBnWkc5amRXMWxiblJFWVhSaExtWmpJRDhnZEdocGN5NWlkV2xzWkVOdmJHOXlLR1J2WTNWdFpXNTBSR0YwWVM1bVl5a2dPaUFuY21kaVlTZ3dMREFzTUN3d0tTYzdYSEpjYmlBZ0lDQnBaaWhrYjJOMWJXVnVkRVJoZEdFdWMyTXBlMXh5WEc0Z0lDQWdJQ0FnSUdsdWJtVnlSV3hsYlZOMGVXeGxMbk4wY205clpTQTlJSFJvYVhNdVluVnBiR1JEYjJ4dmNpaGtiMk4xYldWdWRFUmhkR0V1YzJNcE8xeHlYRzRnSUNBZ0lDQWdJR2x1Ym1WeVJXeGxiVk4wZVd4bExuTjBjbTlyWlZkcFpIUm9JRDBnWkc5amRXMWxiblJFWVhSaExuTjNLeWR3ZUNjN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMllYSWdabTl1ZEVSaGRHRWdQU0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWEl1WjJWMFJtOXVkRUo1VG1GdFpTaGtiMk4xYldWdWRFUmhkR0V1WmlrN1hISmNiaUFnSUNCcFppZ2hkR2hwY3k1bmJHOWlZV3hFWVhSaExtWnZiblJOWVc1aFoyVnlMbU5vWVhKektYdGNjbHh1SUNBZ0lDQWdJQ0JwYm01bGNrVnNaVzFUZEhsc1pTNW1iMjUwVTJsNlpTQTlJR1J2WTNWdFpXNTBSR0YwWVM1ekt5ZHdlQ2M3WEhKY2JpQWdJQ0FnSUNBZ2FXNXVaWEpGYkdWdFUzUjViR1V1YkdsdVpVaGxhV2RvZENBOUlHUnZZM1Z0Wlc1MFJHRjBZUzV6S3lkd2VDYzdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1ptOXVkRVJoZEdFdVprTnNZWE56S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBibTVsY2tWc1pXMHVZMnhoYzNOT1lXMWxJRDBnWm05dWRFUmhkR0V1WmtOc1lYTnpPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x1Ym1WeVJXeGxiVk4wZVd4bExtWnZiblJHWVcxcGJIa2dQU0JtYjI1MFJHRjBZUzVtUm1GdGFXeDVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWmxkbGFXZG9kQ0E5SUdSdlkzVnRaVzUwUkdGMFlTNW1WMlZwWjJoMExDQm1VM1I1YkdVZ1BTQmtiMk4xYldWdWRFUmhkR0V1WmxOMGVXeGxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBibTVsY2tWc1pXMVRkSGxzWlM1bWIyNTBVM1I1YkdVZ1BTQm1VM1I1YkdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWJtVnlSV3hsYlZOMGVXeGxMbVp2Ym5SWFpXbG5hSFFnUFNCbVYyVnBaMmgwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNDdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlHeGxkSFJsY25NZ1BTQmtiMk4xYldWdWRFUmhkR0V1YkR0Y2NseHVJQ0FnSUd4bGJpQTlJR3hsZEhSbGNuTXViR1Z1WjNSb08xeHlYRzRnSUNBZ2RtRnlJSFJUY0dGdUxIUlFZWEpsYm5Rc2RFTnZiblE3WEhKY2JpQWdJQ0IyWVhJZ2JXRjBjbWw0U0dWc2NHVnlJRDBnZEdocGN5NXRTR1ZzY0dWeU8xeHlYRzRnSUNBZ2RtRnlJSE5vWVhCbGN5d2djMmhoY0dWVGRISWdQU0FuSnp0Y2NseHVJQ0FnSUhaaGNpQmpiblFnUFNBd08xeHlYRzRnSUNBZ1ptOXlJQ2hwSUQwZ01EdHBJRHdnYkdWdUlEdHBJQ3M5SURFcElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMbWRzYjJKaGJFUmhkR0V1Wm05dWRFMWhibUZuWlhJdVkyaGhjbk1wZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlnaGRHaHBjeTUwWlhoMFVHRjBhSE5iWTI1MFhTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwVTNCaGJpQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5ST1V5aHpkbWRPVXl3bmNHRjBhQ2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGTndZVzR1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSEp2YTJVdGJHbHVaV05oY0Njc0lDZGlkWFIwSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBVM0JoYmk1elpYUkJkSFJ5YVdKMWRHVW9KM04wY205clpTMXNhVzVsYW05cGJpY3NKM0p2ZFc1a0p5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwVTNCaGJpNXpaWFJCZEhSeWFXSjFkR1VvSjNOMGNtOXJaUzF0YVhSbGNteHBiV2wwSnl3bk5DY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRk53WVc0Z1BTQjBhR2x6TG5SbGVIUlFZWFJvYzF0amJuUmRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0YwYUdsekxtbHpUV0Z6YTJWa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVkR1Y0ZEZOd1lXNXpXMk51ZEYwcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSUVlYSmxiblFnUFNCMGFHbHpMblJsZUhSVGNHRnVjMXRqYm5SZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSRGIyNTBJRDBnZEZCaGNtVnVkQzVqYUdsc1pISmxibHN3WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUlFZWEpsYm5RZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nka2FYWW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBRMjl1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduYzNabkp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RFTnZiblF1WVhCd1pXNWtRMmhwYkdRb2RGTndZVzRwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wZVd4bFJHbDJLSFJRWVhKbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGMGFHbHpMbWx6VFdGemEyVmtLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11ZEdWNGRGTndZVzV6VzJOdWRGMHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUlFZWEpsYm5RZ1BTQjBhR2x6TG5SbGVIUlRjR0Z1YzF0amJuUmRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUlRjR0Z1SUQwZ2RHaHBjeTUwWlhoMFVHRjBhSE5iWTI1MFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGQmhjbVZ1ZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjNOd1lXNG5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkSGxzWlVScGRpaDBVR0Z5Wlc1MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFUzQmhiaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KM053WVc0bktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRIbHNaVVJwZGloMFUzQmhiaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRkJoY21WdWRDNWhjSEJsYm1SRGFHbHNaQ2gwVTNCaGJpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwVTNCaGJpQTlJSFJvYVhNdWRHVjRkRkJoZEdoelcyTnVkRjBnUHlCMGFHbHpMblJsZUhSUVlYUm9jMXRqYm5SZElEb2daRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtITjJaMDVUTENkMFpYaDBKeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdMeTkwVTNCaGJpNXpaWFJCZEhSeWFXSjFkR1VvSjNacGMybGlhV3hwZEhrbkxDQW5hR2xrWkdWdUp5azdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVuYkc5aVlXeEVZWFJoTG1admJuUk5ZVzVoWjJWeUxtTm9ZWEp6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTm9ZWEpFWVhSaElEMGdkR2hwY3k1bmJHOWlZV3hFWVhSaExtWnZiblJOWVc1aFoyVnlMbWRsZEVOb1lYSkVZWFJoS0dSdlkzVnRaVzUwUkdGMFlTNTBMbU5vWVhKQmRDaHBLU3dnWm05dWRFUmhkR0V1WmxOMGVXeGxMQ0IwYUdsekxtZHNiMkpoYkVSaGRHRXVabTl1ZEUxaGJtRm5aWEl1WjJWMFJtOXVkRUo1VG1GdFpTaGtiMk4xYldWdWRFUmhkR0V1WmlrdVprWmhiV2xzZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnphR0Z3WlVSaGRHRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR05vWVhKRVlYUmhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lYQmxSR0YwWVNBOUlHTm9ZWEpFWVhSaExtUmhkR0U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pVUmhkR0VnUFNCdWRXeHNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhkSEpwZUVobGJIQmxjaTV5WlhObGRDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWh6YUdGd1pVUmhkR0VnSmlZZ2MyaGhjR1ZFWVhSaExuTm9ZWEJsY3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlhNZ1BTQnphR0Z3WlVSaGRHRXVjMmhoY0dWeld6QmRMbWwwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBjbWw0U0dWc2NHVnlMbk5qWVd4bEtHUnZZM1Z0Wlc1MFJHRjBZUzV6THpFd01DeGtiMk4xYldWdWRFUmhkR0V1Y3k4eE1EQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVlRkSElnUFNCMGFHbHpMbU55WldGMFpWQmhkR2hUYUdGd1pTaHRZWFJ5YVhoSVpXeHdaWElzYzJoaGNHVnpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSVGNHRnVMbk5sZEVGMGRISnBZblYwWlNnblpDY3NjMmhoY0dWVGRISXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0YwYUdsekxtbHpUV0Z6YTJWa0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFXNXVaWEpGYkdWdExtRndjR1Z1WkVOb2FXeGtLSFJRWVhKbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1ZFWVhSaElDWW1JSE5vWVhCbFJHRjBZUzV6YUdGd1pYTXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnZZM1Z0Wlc1MExtSnZaSGt1WVhCd1pXNWtRMmhwYkdRb2RFTnZiblFwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZbTkxYm1ScGJtZENiM2dnUFNCMFEyOXVkQzVuWlhSQ1FtOTRLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRU52Ym5RdWMyVjBRWFIwY21saWRYUmxLQ2QzYVdSMGFDY3NZbTkxYm1ScGJtZENiM2d1ZDJsa2RHZ2dLeUF5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwUTI5dWRDNXpaWFJCZEhSeWFXSjFkR1VvSjJobGFXZG9kQ2NzWW05MWJtUnBibWRDYjNndWFHVnBaMmgwSUNzZ01pazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RFTnZiblF1YzJWMFFYUjBjbWxpZFhSbEtDZDJhV1YzUW05NEp5d29ZbTkxYm1ScGJtZENiM2d1ZUMweEtTc25JQ2NySUNoaWIzVnVaR2x1WjBKdmVDNTVMVEVwS3ljZ0p5c2dLR0p2ZFc1a2FXNW5RbTk0TG5kcFpIUm9LeklwS3ljZ0p5c2dLR0p2ZFc1a2FXNW5RbTk0TG1obGFXZG9kQ3N5S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEVOdmJuUXVjM1I1YkdVdWRISmhibk5tYjNKdElEMGdkRU52Ym5RdWMzUjViR1V1ZDJWaWEybDBWSEpoYm5ObWIzSnRJRDBnSjNSeVlXNXpiR0YwWlNnbklDc2dLR0p2ZFc1a2FXNW5RbTk0TG5ndE1Ta2dLeUFuY0hnc0p5QXJJQ2hpYjNWdVpHbHVaMEp2ZUM1NUxURXBJQ3NnSjNCNEtTYzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZEhSbGNuTmJhVjB1ZVU5bVpuTmxkQ0E5SUdKdmRXNWthVzVuUW05NExua3RNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBVR0Z5Wlc1MExtRndjR1Z1WkVOb2FXeGtLSFJEYjI1MEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRU52Ym5RdWMyVjBRWFIwY21saWRYUmxLQ2QzYVdSMGFDY3NNU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRU52Ym5RdWMyVjBRWFIwY21saWRYUmxLQ2RvWldsbmFIUW5MREVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhVzV1WlhKRmJHVnRMbUZ3Y0dWdVpFTm9hV3hrS0hSVGNHRnVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBVM0JoYmk1MFpYaDBRMjl1ZEdWdWRDQTlJR3hsZEhSbGNuTmJhVjB1ZG1Gc08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFUzQmhiaTV6WlhSQmRIUnlhV0oxZEdWT1V5aGNJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MMWhOVEM4eE9UazRMMjVoYldWemNHRmpaVndpTENCY0luaHRiRHB6Y0dGalpWd2lMRndpY0hKbGMyVnlkbVZjSWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRjBhR2x6TG1selRXRnphMlZrS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVc1dVpYSkZiR1Z0TG1Gd2NHVnVaRU5vYVd4a0tIUlFZWEpsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSVGNHRnVMbk4wZVd4bExuUnlZVzV6Wm05eWJTQTlJSFJUY0dGdUxuTjBlV3hsTG5kbFltdHBkRlJ5WVc1elptOXliU0E5SUNkMGNtRnVjMnhoZEdVelpDZ3dMQ2NySUMxa2IyTjFiV1Z1ZEVSaGRHRXVjeTh4TGpJckozQjRMREFwSnp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhVzV1WlhKRmJHVnRMbUZ3Y0dWdVpFTm9hV3hrS0hSVGNHRnVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQXZMMXh5WEc0Z0lDQWdJQ0FnSUdsbUtDRjBhR2x6TG1selRXRnphMlZrS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwVTNCaGJuTmJZMjUwWFNBOUlIUlFZWEpsYm5RN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEZOd1lXNXpXMk51ZEYwZ1BTQjBVM0JoYmp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwVTNCaGJuTmJZMjUwWFM1emRIbHNaUzVrYVhOd2JHRjVJRDBnSjJKc2IyTnJKenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMblJsZUhSUVlYUm9jMXRqYm5SZElEMGdkRk53WVc0N1hISmNiaUFnSUNBZ0lDQWdZMjUwSUNzOUlERTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjNhR2xzWlNoamJuUWdQQ0IwYUdsekxuUmxlSFJUY0dGdWN5NXNaVzVuZEdncGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRHVjRkRk53WVc1elcyTnVkRjB1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJQ2R1YjI1bEp6dGNjbHh1SUNBZ0lDQWdJQ0JqYm5RZ0t6MGdNVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVNGUmxlSFJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzVvYVdSbElEMGdVMVpIVkdWNGRFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExtaHBaR1U3WEhKY2JseHlYRzVJVkdWNGRFVnNaVzFsYm5RdWNISnZkRzkwZVhCbExuSmxibVJsY2taeVlXMWxJRDBnWm5WdVkzUnBiMjRvY0dGeVpXNTBUV0YwY21sNEtYdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2NtVnVaR1Z5VUdGeVpXNTBJRDBnZEdocGN5NWZjR0Z5Wlc1MExuSmxibVJsY2taeVlXMWxMbU5oYkd3b2RHaHBjeXh3WVhKbGJuUk5ZWFJ5YVhncE8xeHlYRzRnSUNBZ2FXWW9jbVZ1WkdWeVVHRnlaVzUwUFQwOVptRnNjMlVwZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YUdsa1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhR2xrWkdWdUtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtaHBaR1JsYmlBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YVc1dVpYSkZiR1Z0TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuWW14dlkyc25PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViR0Y1WlhKRmJHVnRaVzUwTG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuWW14dlkyc25PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNXphVzVuYkdWVGFHRndaU2w3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JWFJvYVhNdVptbHljM1JHY21GdFpTQW1KaUFoZEdocGN5NXNaWFIwWlhKelEyaGhibWRsWkVac1lXY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdWRzlrYnlCQ1pXNWphRzFoY21zZ2FXWWdkWE5wYm1jZ2RHaHBjeUJwY3lCaVpYUjBaWElnZEdoaGJpQm5aWFJDUW05NFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG1selRXRnphMlZrSUNZbUlIUm9hWE11Wm1sdVlXeFVjbUZ1YzJadmNtMHViV0YwVFdSbUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnZiblF1YzJWMFFYUjBjbWxpZFhSbEtDZDJhV1YzUW05NEp5d3RkR2hwY3k1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNXdMblpiTUYwckp5QW5LeUF0ZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjQzV3TG5aYk1WMHJKeUFuSzNSb2FYTXVZMjl0Y0Zjckp5QW5LM1JvYVhNdVkyOXRjRWdwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYjI1MExuTjBlV3hsTG5SeVlXNXpabTl5YlNBOUlIUm9hWE11WTI5dWRDNXpkSGxzWlM1M1pXSnJhWFJVY21GdWMyWnZjbTBnUFNBbmRISmhibk5zWVhSbEtDY2dLeUF0ZEdocGN5NW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjQzV3TG5aYk1GMGdLeUFuY0hnc0p5QXJJQzEwYUdsekxtWnBibUZzVkhKaGJuTm1iM0p0TG0xUWNtOXdMbkF1ZGxzeFhTQXJJQ2R3ZUNrbk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCMGFHbHpMblJsZUhSQmJtbHRZWFJ2Y2k1blpYUk5aV0Z6ZFhKbGN5aDBhR2x6TG5SbGVIUlFjbTl3WlhKMGVTNWpkWEp5Wlc1MFJHRjBZU3dnZEdocGN5NXNaWFIwWlhKelEyaGhibWRsWkVac1lXY3BPMXh5WEc0Z0lDQWdhV1lvSVhSb2FYTXViR1YwZEdWeWMwTm9ZVzVuWldSR2JHRm5JQ1ltSUNGMGFHbHpMblJsZUhSQmJtbHRZWFJ2Y2k1c1pYUjBaWEp6UTJoaGJtZGxaRVpzWVdjcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUFnYVN4c1pXNHNJR052ZFc1MElEMGdNRHRjY2x4dUlDQWdJSFpoY2lCeVpXNWtaWEpsWkV4bGRIUmxjbk1nUFNCMGFHbHpMblJsZUhSQmJtbHRZWFJ2Y2k1eVpXNWtaWEpsWkV4bGRIUmxjbk03WEhKY2JseHlYRzRnSUNBZ2RtRnlJR3hsZEhSbGNuTWdQU0IwYUdsekxuUmxlSFJRY205d1pYSjBlUzVqZFhKeVpXNTBSR0YwWVM1c08xeHlYRzVjY2x4dUlDQWdJR3hsYmlBOUlHeGxkSFJsY25NdWJHVnVaM1JvTzF4eVhHNGdJQ0FnZG1GeUlISmxibVJsY21Wa1RHVjBkR1Z5TENCMFpYaDBVM0JoYml3Z2RHVjRkRkJoZEdnN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJR2xtS0d4bGRIUmxjbk5iYVYwdWJpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwSUNzOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMFpYaDBVM0JoYmlBOUlIUm9hWE11ZEdWNGRGTndZVzV6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJSFJsZUhSUVlYUm9JRDBnZEdocGN5NTBaWGgwVUdGMGFITmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ2NtVnVaR1Z5WldSTVpYUjBaWElnUFNCeVpXNWtaWEpsWkV4bGRIUmxjbk5iWTI5MWJuUmRPMXh5WEc0Z0lDQWdJQ0FnSUdOdmRXNTBJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdhV1lvSVhSb2FYTXVhWE5OWVhOclpXUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBaWGgwVTNCaGJpNXpkSGxzWlM1MGNtRnVjMlp2Y20wZ1BTQjBaWGgwVTNCaGJpNXpkSGxzWlM1M1pXSnJhWFJVY21GdWMyWnZjbTBnUFNCeVpXNWtaWEpsWkV4bGRIUmxjaTV0TzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMFUzQmhiaTV6WlhSQmRIUnlhV0oxZEdVb0ozUnlZVzV6Wm05eWJTY3NjbVZ1WkdWeVpXUk1aWFIwWlhJdWJTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDOHZMeTkwWlhoMFUzQmhiaTV6WlhSQmRIUnlhV0oxZEdVb0oyOXdZV05wZEhrbkxISmxibVJsY21Wa1RHVjBkR1Z5TG04cE8xeHlYRzRnSUNBZ0lDQWdJSFJsZUhSVGNHRnVMbk4wZVd4bExtOXdZV05wZEhrZ1BTQnlaVzVrWlhKbFpFeGxkSFJsY2k1dk8xeHlYRzRnSUNBZ0lDQWdJR2xtS0hKbGJtUmxjbVZrVEdWMGRHVnlMbk4zS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRGQmhkR2d1YzJWMFFYUjBjbWxpZFhSbEtDZHpkSEp2YTJVdGQybGtkR2duTEhKbGJtUmxjbVZrVEdWMGRHVnlMbk4zS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb2NtVnVaR1Z5WldSTVpYUjBaWEl1YzJNcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBVR0YwYUM1elpYUkJkSFJ5YVdKMWRHVW9KM04wY205clpTY3NjbVZ1WkdWeVpXUk1aWFIwWlhJdWMyTXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWh5Wlc1a1pYSmxaRXhsZEhSbGNpNW1ZeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSUVlYUm9Mbk5sZEVGMGRISnBZblYwWlNnblptbHNiQ2NzY21WdVpHVnlaV1JNWlhSMFpYSXVabU1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMFVHRjBhQzV6ZEhsc1pTNWpiMnh2Y2lBOUlISmxibVJsY21Wa1RHVjBkR1Z5TG1aak8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0hSb2FYTXVhWE5XYVhOcFlteGxJQ1ltSUNoMGFHbHpMbVZzWlcxTlpHWWdmSHdnZEdocGN5NW1hWEp6ZEVaeVlXMWxLU2w3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1cGJtNWxja1ZzWlcwdVoyVjBRa0p2ZUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmliM1Z1WkdsdVowSnZlQ0E5SUhSb2FYTXVhVzV1WlhKRmJHVnRMbWRsZEVKQ2IzZ29LVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WTNWeWNtVnVkRUpDYjNndWR5QWhQVDBnWW05MWJtUnBibWRDYjNndWQybGtkR2dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqZFhKeVpXNTBRa0p2ZUM1M0lEMGdZbTkxYm1ScGJtZENiM2d1ZDJsa2RHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnZiblF1YzJWMFFYUjBjbWxpZFhSbEtDZDNhV1IwYUNjc1ltOTFibVJwYm1kQ2IzZ3VkMmxrZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WTNWeWNtVnVkRUpDYjNndWFDQWhQVDBnWW05MWJtUnBibWRDYjNndWFHVnBaMmgwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTNWeWNtVnVkRUpDYjNndWFDQTlJR0p2ZFc1a2FXNW5RbTk0TG1obGFXZG9kRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMjl1ZEM1elpYUkJkSFJ5YVdKMWRHVW9KMmhsYVdkb2RDY3NZbTkxYm1ScGJtZENiM2d1YUdWcFoyaDBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHMWhjbWRwYmlBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVkzVnljbVZ1ZEVKQ2IzZ3VkeUFoUFQwZ0tHSnZkVzVrYVc1blFtOTRMbmRwWkhSb0lDc2diV0Z5WjJsdUtqSXBJSHg4SUhSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1YUNBaFBUMGdLR0p2ZFc1a2FXNW5RbTk0TG1obGFXZG9kQ0FySUcxaGNtZHBiaW95S1NBZ2ZId2dkR2hwY3k1amRYSnlaVzUwUWtKdmVDNTRJQ0U5UFNBb1ltOTFibVJwYm1kQ2IzZ3VlQ0F0SUcxaGNtZHBiaWtnSUh4OElIUm9hWE11WTNWeWNtVnVkRUpDYjNndWVTQWhQVDBnS0dKdmRXNWthVzVuUW05NExua2dMU0J0WVhKbmFXNHBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1ZHlBOUlHSnZkVzVrYVc1blFtOTRMbmRwWkhSb0lDc2diV0Z5WjJsdUtqSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTjFjbkpsYm5SQ1FtOTRMbWdnUFNCaWIzVnVaR2x1WjBKdmVDNW9aV2xuYUhRZ0t5QnRZWEpuYVc0cU1qdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnljbVZ1ZEVKQ2IzZ3VlQ0E5SUdKdmRXNWthVzVuUW05NExuZ2dMU0J0WVhKbmFXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTjFjbkpsYm5SQ1FtOTRMbmtnUFNCaWIzVnVaR2x1WjBKdmVDNTVJQzBnYldGeVoybHVPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTI5dWRDNXpaWFJCZEhSeWFXSjFkR1VvSjNacFpYZENiM2duTEhSb2FYTXVZM1Z5Y21WdWRFSkNiM2d1ZUNzbklDY3JkR2hwY3k1amRYSnlaVzUwUWtKdmVDNTVLeWNnSnl0MGFHbHpMbU4xY25KbGJuUkNRbTk0TG5jckp5QW5LM1JvYVhNdVkzVnljbVZ1ZEVKQ2IzZ3VhQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU52Ym5RdWMzUjViR1V1ZEhKaGJuTm1iM0p0SUQwZ2RHaHBjeTVqYjI1MExuTjBlV3hsTG5kbFltdHBkRlJ5WVc1elptOXliU0E5SUNkMGNtRnVjMnhoZEdVb0p5QXJJSFJvYVhNdVkzVnljbVZ1ZEVKQ2IzZ3VlQ0FySUNkd2VDd25JQ3NnZEdocGN5NWpkWEp5Wlc1MFFrSnZlQzU1SUNzZ0ozQjRLU2M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNCcFppaDBhR2x6TG1acGNuTjBSbkpoYldVcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVptbHljM1JHY21GdFpTQTlJR1poYkhObE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEc1bWRXNWpkR2x2YmlCSVNXMWhaMlZGYkdWdFpXNTBLR1JoZEdFc2NHRnlaVzUwUTI5dWRHRnBibVZ5TEdkc2IySmhiRVJoZEdFc1kyOXRjQ3dnY0d4aFkyVm9iMnhrWlhJcGUxeHlYRzRnSUNBZ2RHaHBjeTVoYzNObGRFUmhkR0VnUFNCbmJHOWlZV3hFWVhSaExtZGxkRUZ6YzJWMFJHRjBZU2hrWVhSaExuSmxaa2xrS1R0Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWpiMjV6ZEhKMVkzUnZjaTVqWVd4c0tIUm9hWE1zWkdGMFlTeHdZWEpsYm5SRGIyNTBZV2x1WlhJc1oyeHZZbUZzUkdGMFlTeGpiMjF3TENCd2JHRmpaV2h2YkdSbGNpazdYSEpjYm4xY2NseHVZM0psWVhSbFJXeGxiV1Z1ZENoSVFtRnpaVVZzWlcxbGJuUXNJRWhKYldGblpVVnNaVzFsYm5RcE8xeHlYRzVjY2x4dVNFbHRZV2RsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WTNKbFlYUmxSV3hsYldWdWRITWdQU0JtZFc1amRHbHZiaWdwZTF4eVhHNWNjbHh1SUNBZ0lIWmhjaUJoYzNObGRGQmhkR2dnUFNCMGFHbHpMbWRzYjJKaGJFUmhkR0V1WjJWMFFYTnpaWFJ6VUdGMGFDaDBhR2x6TG1GemMyVjBSR0YwWVNrN1hISmNiaUFnSUNCMllYSWdhVzFuSUQwZ2JtVjNJRWx0WVdkbEtDazdYSEpjYmx4eVhHNGdJQ0FnYVdZb2RHaHBjeTVrWVhSaExtaGhjMDFoYzJzcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCd1lYSmxiblFnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNjbHh1SUNBZ0lDQWdJQ0J6ZEhsc1pVUnBkaWh3WVhKbGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiMjUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0hOMlowNVRMQ2R6ZG1jbktUdGNjbHh1SUNBZ0lDQWdJQ0J6ZEhsc1pVUnBkaWhqYjI1MEtUdGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MExuTmxkRUYwZEhKcFluVjBaU2duZDJsa2RHZ25MSFJvYVhNdVlYTnpaWFJFWVhSaExuY3BPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJuUXVjMlYwUVhSMGNtbGlkWFJsS0Nkb1pXbG5hSFFuTEhSb2FYTXVZWE56WlhSRVlYUmhMbWdwTzF4eVhHNGdJQ0FnSUNBZ0lIQmhjbVZ1ZEM1aGNIQmxibVJEYUdsc1pDaGpiMjUwS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxSV3hsYlNBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblJPVXloemRtZE9VeXduYVcxaFoyVW5LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbFJXeGxiUzV6WlhSQmRIUnlhV0oxZEdVb0ozZHBaSFJvSnl4MGFHbHpMbUZ6YzJWMFJHRjBZUzUzSzF3aWNIaGNJaWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwYldGblpVVnNaVzB1YzJWMFFYUjBjbWxpZFhSbEtDZG9aV2xuYUhRbkxIUm9hWE11WVhOelpYUkVZWFJoTG1nclhDSndlRndpS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxSV3hsYlM1elpYUkJkSFJ5YVdKMWRHVk9VeWduYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TVRrNU9TOTRiR2x1YXljc0oyaHlaV1luTEdGemMyVjBVR0YwYUNrN1hISmNiaUFnSUNBZ0lDQWdZMjl1ZEM1aGNIQmxibVJEYUdsc1pDaDBhR2x6TG1sdFlXZGxSV3hsYlNrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c1lYbGxja1ZzWlcxbGJuUWdQU0J3WVhKbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NTBjbUZ1YzJadmNtMWxaRVZzWlcxbGJuUWdQU0J3WVhKbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWlZWE5sUld4bGJXVnVkQ0E5SUhCaGNtVnVkRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbWx1Ym1WeVJXeGxiU0E5SUhCaGNtVnVkRHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbTFoYzJ0bFpFVnNaVzFsYm5RZ1BTQjBhR2x6TG1sdFlXZGxSV3hsYlR0Y2NseHVJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ2MzUjViR1ZFYVhZb2FXMW5LVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbXhoZVdWeVJXeGxiV1Z1ZENBOUlHbHRaenRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUpoYzJWRmJHVnRaVzUwSUQwZ2FXMW5PMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhVzV1WlhKRmJHVnRJRDBnYVcxbk8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWRISmhibk5tYjNKdFpXUkZiR1Z0Wlc1MElEMGdhVzFuTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnYVcxbkxuTnlZeUE5SUdGemMyVjBVR0YwYUR0Y2NseHVJQ0FnSUdsbUtIUm9hWE11WkdGMFlTNXNiaWw3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVwYm01bGNrVnNaVzB1YzJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NzZEdocGN5NWtZWFJoTG14dUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIUm9hWE11WTJobFkydFFZWEpsYm5ScGJtY29LVHRjY2x4dWZUdGNjbHh1WEhKY2JraEpiV0ZuWlVWc1pXMWxiblF1Y0hKdmRHOTBlWEJsTG5Ob2IzY2dQU0JJVTI5c2FXUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXphRzkzTzF4eVhHNUlTVzFoWjJWRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1b2FXUmxJRDBnU0ZOdmJHbGtSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVhR2xrWlR0Y2NseHVTRWx0WVdkbFJXeGxiV1Z1ZEM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5Um5KaGJXVWdQU0JJVTI5c2FXUkZiR1Z0Wlc1MExuQnliM1J2ZEhsd1pTNXlaVzVrWlhKR2NtRnRaVHRjY2x4dVNFbHRZV2RsUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1WkdWemRISnZlU0E5SUVoVGIyeHBaRVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbVJsYzNSeWIzazdYRzVtZFc1amRHbHZiaUJJUTJGdFpYSmhSV3hsYldWdWRDaGtZWFJoTEhCaGNtVnVkRU52Ym5SaGFXNWxjaXhuYkc5aVlXeEVZWFJoTEdOdmJYQXNJSEJzWVdObGFHOXNaR1Z5S1h0Y2NseHVJQ0FnSUhSb2FYTXVYM0JoY21WdWRDNWpiMjV6ZEhKMVkzUnZjaTVqWVd4c0tIUm9hWE1zWkdGMFlTeHdZWEpsYm5SRGIyNTBZV2x1WlhJc1oyeHZZbUZzUkdGMFlTeGpiMjF3TENCd2JHRmpaV2h2YkdSbGNpazdYSEpjYmlBZ0lDQjJZWElnWjJWMFVISnZjQ0E5SUZCeWIzQmxjblI1Um1GamRHOXllUzVuWlhSUWNtOXdPMXh5WEc0Z0lDQWdkR2hwY3k1d1pTQTlJR2RsZEZCeWIzQW9kR2hwY3l4a1lYUmhMbkJsTERBc01DeDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUdsbUtHUmhkR0V1YTNNdWNDNXpLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbkI0SUQwZ1oyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdWEzTXVjQzU0TERFc01DeDBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CNUlEMGdaMlYwVUhKdmNDaDBhR2x6TEdSaGRHRXVhM011Y0M1NUxERXNNQ3gwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuQjZJRDBnWjJWMFVISnZjQ2gwYUdsekxHUmhkR0V1YTNNdWNDNTZMREVzTUN4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJSDFsYkhObGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNDQTlJR2RsZEZCeWIzQW9kR2hwY3l4a1lYUmhMbXR6TG5Bc01Td3dMSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2FXWW9aR0YwWVM1cmN5NWhLWHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUVnUFNCblpYUlFjbTl3S0hSb2FYTXNaR0YwWVM1cmN5NWhMREVzTUN4MGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR2xtS0dSaGRHRXVhM011YjNJdWF5NXNaVzVuZEdnZ0ppWWdaR0YwWVM1cmN5NXZjaTVyV3pCZExuUnZLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhU3hzWlc0Z1BTQmtZWFJoTG10ekxtOXlMbXN1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRXVhM011YjNJdWExdHBYUzUwYnlBOUlHNTFiR3c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFdWEzTXViM0l1YTF0cFhTNTBhU0E5SUc1MWJHdzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnZEdocGN5NXZjaUE5SUdkbGRGQnliM0FvZEdocGN5eGtZWFJoTG10ekxtOXlMREVzWkdWblZHOVNZV1J6TEhSb2FYTXVaSGx1WVcxcFkxQnliM0JsY25ScFpYTXBPMXh5WEc0Z0lDQWdkR2hwY3k1dmNpNXphQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQjBhR2x6TG5KNElEMGdaMlYwVUhKdmNDaDBhR2x6TEdSaGRHRXVhM011Y25nc01DeGtaV2RVYjFKaFpITXNkR2hwY3k1a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNCMGFHbHpMbko1SUQwZ1oyVjBVSEp2Y0NoMGFHbHpMR1JoZEdFdWEzTXVjbmtzTUN4a1pXZFViMUpoWkhNc2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0IwYUdsekxuSjZJRDBnWjJWMFVISnZjQ2gwYUdsekxHUmhkR0V1YTNNdWNub3NNQ3hrWldkVWIxSmhaSE1zZEdocGN5NWtlVzVoYldsalVISnZjR1Z5ZEdsbGN5azdYSEpjYmlBZ0lDQjBhR2x6TG0xaGRDQTlJRzVsZHlCTllYUnlhWGdvS1R0Y2NseHVmVnh5WEc1amNtVmhkR1ZGYkdWdFpXNTBLRWhDWVhObFJXeGxiV1Z1ZEN3Z1NFTmhiV1Z5WVVWc1pXMWxiblFwTzF4eVhHNWNjbHh1U0VOaGJXVnlZVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbk5sZEhWd0lEMGdablZ1WTNScGIyNG9LU0I3WEhKY2JpQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2RHaHBjeTVqYjIxd0xuUm9jbVZsUkVWc1pXMWxiblJ6TG14bGJtZDBhQ3dnWTI5dGNEdGNjbHh1SUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnTHk5YmNHVnljM0JsWTNScGRtVkZiR1Z0TEdOdmJuUmhhVzVsY2wxY2NseHVJQ0FnSUNBZ0lDQmpiMjF3SUQwZ2RHaHBjeTVqYjIxd0xuUm9jbVZsUkVWc1pXMWxiblJ6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJR052YlhBdWNHVnljM0JsWTNScGRtVkZiR1Z0TG5OMGVXeGxMbkJsY25Od1pXTjBhWFpsSUQwZ1kyOXRjQzV3WlhKemNHVmpkR2wyWlVWc1pXMHVjM1I1YkdVdWQyVmlhMmwwVUdWeWMzQmxZM1JwZG1VZ1BTQjBhR2x6TG5CbExuWXJKM0I0Snp0Y2NseHVJQ0FnSUNBZ0lDQmpiMjF3TG1OdmJuUmhhVzVsY2k1emRIbHNaUzUwY21GdWMyWnZjbTFQY21sbmFXNGdQU0JqYjIxd0xtTnZiblJoYVc1bGNpNXpkSGxzWlM1dGIzcFVjbUZ1YzJadmNtMVBjbWxuYVc0Z1BTQmpiMjF3TG1OdmJuUmhhVzVsY2k1emRIbHNaUzUzWldKcmFYUlVjbUZ1YzJadmNtMVBjbWxuYVc0Z1BTQmNJakJ3ZUNBd2NIZ2dNSEI0WENJN1hISmNiaUFnSUNBZ0lDQWdZMjl0Y0M1d1pYSnpjR1ZqZEdsMlpVVnNaVzB1YzNSNWJHVXVkSEpoYm5ObWIzSnRJRDBnWTI5dGNDNXdaWEp6Y0dWamRHbDJaVVZzWlcwdWMzUjViR1V1ZDJWaWEybDBWSEpoYm5ObWIzSnRJRDBnSjIxaGRISnBlRE5rS0RFc01Dd3dMREFzTUN3eExEQXNNQ3d3TERBc01Td3dMREFzTUN3d0xERXBKenRjY2x4dUlDQWdJSDFjY2x4dWZUdGNjbHh1WEhKY2JraERZVzFsY21GRmJHVnRaVzUwTG5CeWIzUnZkSGx3WlM1amNtVmhkR1ZGYkdWdFpXNTBjeUE5SUdaMWJtTjBhVzl1S0NsN1hISmNibjA3WEhKY2JseHlYRzVJUTJGdFpYSmhSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVhR2xrWlNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYm4wN1hISmNibHh5WEc1SVEyRnRaWEpoUld4bGJXVnVkQzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSbkpoYldVZ1BTQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkbUZ5SUcxa1ppQTlJSFJvYVhNdVptbHljM1JHY21GdFpUdGNjbHh1SUNBZ0lIWmhjaUJwTENCc1pXNDdYSEpjYmlBZ0lDQnBaaWgwYUdsekxtaHBaWEpoY21Ob2VTbDdYSEpjYmlBZ0lDQWdJQ0FnYkdWdUlEMGdkR2hwY3k1b2FXVnlZWEpqYUhrdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWtaaUE5SUhSb2FYTXVhR2xsY21GeVkyaDVXMmxkTG1acGJtRnNWSEpoYm5ObWIzSnRMbTFRY205d0xtMWtaaUEvSUhSeWRXVWdPaUJ0WkdZN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdhV1lvYldSbUlIeDhJQ2gwYUdsekxuQWdKaVlnZEdocGN5NXdMbTFrWmlrZ2ZId2dLSFJvYVhNdWNIZ2dKaVlnS0hSb2FYTXVjSGd1YldSbUlIeDhJSFJvYVhNdWNIa3ViV1JtSUh4OElIUm9hWE11Y0hvdWJXUm1LU2tnZkh3Z2RHaHBjeTV5ZUM1dFpHWWdmSHdnZEdocGN5NXllUzV0WkdZZ2ZId2dkR2hwY3k1eWVpNXRaR1lnZkh3Z2RHaHBjeTV2Y2k1dFpHWWdmSHdnS0hSb2FYTXVZU0FtSmlCMGFHbHpMbUV1YldSbUtTa2dlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXViV0YwTG5KbGMyVjBLQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVjQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRjBMblJ5WVc1emJHRjBaU2d0ZEdocGN5NXdMblpiTUYwc0xYUm9hWE11Y0M1Mld6RmRMSFJvYVhNdWNDNTJXekpkS1R0Y2NseHVJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRZWFF1ZEhKaGJuTnNZWFJsS0MxMGFHbHpMbkI0TG5Zc0xYUm9hWE11Y0hrdWRpeDBhR2x6TG5CNkxuWXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtRXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnWkdsbVpsWmxZM1J2Y2lBOUlGdDBhR2x6TG5BdWRsc3dYUzEwYUdsekxtRXVkbHN3WFN4MGFHbHpMbkF1ZGxzeFhTMTBhR2x6TG1FdWRsc3hYU3gwYUdsekxuQXVkbHN5WFMxMGFHbHpMbUV1ZGxzeVhWMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ0WVdjZ1BTQk5ZWFJvTG5OeGNuUW9UV0YwYUM1d2IzY29aR2xtWmxabFkzUnZjbHN3WFN3eUtTdE5ZWFJvTG5CdmR5aGthV1ptVm1WamRHOXlXekZkTERJcEswMWhkR2d1Y0c5M0tHUnBabVpXWldOMGIzSmJNbDBzTWlrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwzWmhjaUJzYjI5clJHbHlJRDBnWjJWMFRtOXliV0ZzYVhwbFpGQnZhVzUwS0dkbGRFUnBabVpXWldOMGIzSW9kR2hwY3k1aExuWXNkR2hwY3k1d0xuWXBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUd4dmIydEVhWElnUFNCYlpHbG1abFpsWTNSdmNsc3dYUzl0WVdjc1pHbG1abFpsWTNSdmNsc3hYUzl0WVdjc1pHbG1abFpsWTNSdmNsc3lYUzl0WVdkZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiRzl2YTB4bGJtZDBhRTl1V0ZvZ1BTQk5ZWFJvTG5OeGNuUW9JR3h2YjJ0RWFYSmJNbDBxYkc5dmEwUnBjbHN5WFNBcklHeHZiMnRFYVhKYk1GMHFiRzl2YTBScGNsc3dYU0FwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JWOXliM1JoZEdsdmJsZ2dQU0FvVFdGMGFDNWhkR0Z1TWlnZ2JHOXZhMFJwY2xzeFhTd2diRzl2YTB4bGJtZDBhRTl1V0ZvZ0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ0WDNKdmRHRjBhVzl1V1NBOUlDaE5ZWFJvTG1GMFlXNHlLQ0JzYjI5clJHbHlXekJkTENBdGJHOXZhMFJwY2xzeVhTa3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRDNXliM1JoZEdWWktHMWZjbTkwWVhScGIyNVpLUzV5YjNSaGRHVllLQzF0WDNKdmRHRjBhVzl1V0NrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRDNXliM1JoZEdWWUtDMTBhR2x6TG5KNExuWXBMbkp2ZEdGMFpWa29MWFJvYVhNdWNua3VkaWt1Y205MFlYUmxXaWgwYUdsekxuSjZMbllwTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YldGMExuSnZkR0YwWlZnb0xYUm9hWE11YjNJdWRsc3dYU2t1Y205MFlYUmxXU2d0ZEdocGN5NXZjaTUyV3pGZEtTNXliM1JoZEdWYUtIUm9hWE11YjNJdWRsc3lYU2s3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhRdWRISmhibk5zWVhSbEtIUm9hWE11WjJ4dlltRnNSR0YwWVM1amIyMXdVMmw2WlM1M0x6SXNkR2hwY3k1bmJHOWlZV3hFWVhSaExtTnZiWEJUYVhwbExtZ3ZNaXd3S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRDNTBjbUZ1YzJ4aGRHVW9NQ3d3TEhSb2FYTXVjR1V1ZGlrN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NW9hV1Z5WVhKamFIa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYldGME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXNGdQU0IwYUdsekxtaHBaWEpoY21Ob2VTNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFFnUFNCMGFHbHpMbWhwWlhKaGNtTm9lVnRwWFM1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNXBkaTV3Y205d2N6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRjBMblJ5WVc1elptOXliU2h0WVhSYk1GMHNiV0YwV3pGZExHMWhkRnN5WFN4dFlYUmJNMTBzYldGMFd6UmRMRzFoZEZzMVhTeHRZWFJiTmwwc2JXRjBXemRkTEcxaGRGczRYU3h0WVhSYk9WMHNiV0YwV3pFd1hTeHRZWFJiTVRGZExDMXRZWFJiTVRKZExDMXRZWFJiTVROZExHMWhkRnN4TkYwc2JXRjBXekUxWFNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYkdWdUlEMGdkR2hwY3k1amIyMXdMblJvY21WbFJFVnNaVzFsYm5SekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWTI5dGNEdGNjbHh1SUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjIxd0lEMGdkR2hwY3k1amIyMXdMblJvY21WbFJFVnNaVzFsYm5SelcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjF3TG1OdmJuUmhhVzVsY2k1emRIbHNaUzUwY21GdWMyWnZjbTBnUFNCamIyMXdMbU52Ym5SaGFXNWxjaTV6ZEhsc1pTNTNaV0pyYVhSVWNtRnVjMlp2Y20wZ1BTQjBhR2x6TG0xaGRDNTBiME5UVXlncE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJSFJvYVhNdVptbHljM1JHY21GdFpTQTlJR1poYkhObE8xeHlYRzU5TzF4eVhHNWNjbHh1U0VOaGJXVnlZVVZzWlcxbGJuUXVjSEp2ZEc5MGVYQmxMbVJsYzNSeWIza2dQU0JtZFc1amRHbHZiaWdwZTF4eVhHNTlPMXh1ZG1GeUlFVjRjSEpsYzNOcGIyNXpJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNCMllYSWdiMklnUFNCN2ZUdGNjbHh1SUNBZ0lHOWlMbWx1YVhSRmVIQnlaWE56YVc5dWN5QTlJR2x1YVhSRmVIQnlaWE56YVc5dWN6dGNjbHh1WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2FXNXBkRVY0Y0hKbGMzTnBiMjV6S0dGdWFXMWhkR2x2YmlsN1hISmNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVMbkpsYm1SbGNtVnlMbU52YlhCSmJuUmxjbVpoWTJVZ1BTQkRiMjF3Ulhod2NtVnpjMmx2YmtsdWRHVnlabUZqWlNoaGJtbHRZWFJwYjI0dWNtVnVaR1Z5WlhJcE8xeHlYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiaTV5Wlc1a1pYSmxjaTVuYkc5aVlXeEVZWFJoTG5CeWIycGxZM1JKYm5SbGNtWmhZMlV1Y21WbmFYTjBaWEpEYjIxd2IzTnBkR2x2YmloaGJtbHRZWFJwYjI0dWNtVnVaR1Z5WlhJcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNCeVpYUjFjbTRnYjJJN1hISmNibjBvS1NrN1hISmNibHh5WEc1bGVIQnlaWE56YVc5dWMxQnNkV2RwYmlBOUlFVjRjSEpsYzNOcGIyNXpPMXh5WEc1Y2JpaG1kVzVqZEdsdmJpQmhaR1JRY205d1pYSjBlVVJsWTI5eVlYUnZjaWdwSUh0Y2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQm5aWFJUZEdGMGFXTldZV3gxWlVGMFZHbHRaU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3ZGp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnNiMjl3VDNWMEtIUjVjR1VzWkhWeVlYUnBiMjRzWkhWeVlYUnBiMjVHYkdGbktYdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnaGRHaHBjeTVySUh4OElDRjBhR2x6TG10bGVXWnlZVzFsY3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQjJPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjJZWElnWTNWeWNtVnVkRVp5WVcxbElEMGdkR2hwY3k1amIyMXdMbkpsYm1SbGNtVmtSbkpoYldVN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUd0bGVXWnlZVzFsY3lBOUlIUm9hWE11YTJWNVpuSmhiV1Z6TzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJzWVhOMFMyVjVSbkpoYldVZ1BTQnJaWGxtY21GdFpYTmJhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDQXRJREZkTG5RN1hISmNiaUFnSUNBZ0lDQWdhV1lvWTNWeWNtVnVkRVp5WVcxbFBEMXNZWE4wUzJWNVJuSmhiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d2RqdGNjbHh1SUNBZ0lDQWdJQ0I5Wld4elpYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR041WTJ4bFJIVnlZWFJwYjI0c0lHWnBjbk4wUzJWNVJuSmhiV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGa2RYSmhkR2x2Ymtac1lXY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lXUjFjbUYwYVc5dUlIeDhJR1IxY21GMGFXOXVJRDRnYTJWNVpuSmhiV1Z6TG14bGJtZDBhQ0F0SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSMWNtRjBhVzl1SUQwZ2EyVjVabkpoYldWekxteGxibWQwYUNBdElERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWFYSnpkRXRsZVVaeVlXMWxJRDBnYTJWNVpuSmhiV1Z6VzJ0bGVXWnlZVzFsY3k1c1pXNW5kR2dnTFNBeElDMGdaSFZ5WVhScGIyNWRMblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamVXTnNaVVIxY21GMGFXOXVJRDBnYkdGemRFdGxlVVp5WVcxbElDMGdabWx5YzNSTFpYbEdjbUZ0WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtDRmtkWEpoZEdsdmJpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzbGpiR1ZFZFhKaGRHbHZiaUE5SUUxaGRHZ3ViV0Y0S0RBc2JHRnpkRXRsZVVaeVlXMWxJQzBnZEdocGN5NWxiR1Z0TG1SaGRHRXVhWEFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqZVdOc1pVUjFjbUYwYVc5dUlEMGdUV0YwYUM1aFluTW9iR0Z6ZEV0bGVVWnlZVzFsSUMwZ1pXeGxiUzVqYjIxd0xtZHNiMkpoYkVSaGRHRXVabkpoYldWU1lYUmxLbVIxY21GMGFXOXVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnBjbk4wUzJWNVJuSmhiV1VnUFNCc1lYTjBTMlY1Um5KaGJXVWdMU0JqZVdOc1pVUjFjbUYwYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnZabVp6WlhSVWFXMWxJRDBnZEdocGN5NXZabVp6WlhSVWFXMWxJSHg4SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0c0lISmxkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZEhsd1pTNTBiMHh2ZDJWeVEyRnpaU2dwSUQwOVBTQW5jR2x1WjNCdmJtY25LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhWFJsY21GMGFXOXVjeUE5SUUxaGRHZ3VabXh2YjNJb0tHTjFjbkpsYm5SR2NtRnRaU0F0SUdacGNuTjBTMlY1Um5KaGJXVXBMMk41WTJ4bFJIVnlZWFJwYjI0cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYVhSbGNtRjBhVzl1Y3lBbElESWdJVDA5SURBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRlpoYkhWbFFYUlVhVzFsS0Nnb1kzbGpiR1ZFZFhKaGRHbHZiaUF0SUNoamRYSnlaVzUwUm5KaGJXVWdMU0JtYVhKemRFdGxlVVp5WVcxbEtTQWxJR041WTJ4bFJIVnlZWFJwYjI0Z0t5QWdabWx5YzNSTFpYbEdjbUZ0WlNrZ0xTQnZabVp6WlhSVWFXMWxLU0F2SUhSb2FYTXVZMjl0Y0M1bmJHOWlZV3hFWVhSaExtWnlZVzFsVW1GMFpTd2dNQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmloMGVYQmxJRDA5UFNBbmIyWm1jMlYwSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVc1cGRGWWdQU0IwYUdsekxtZGxkRlpoYkhWbFFYUlVhVzFsS0dacGNuTjBTMlY1Um5KaGJXVWdMeUIwYUdsekxtTnZiWEF1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVkpoZEdVc0lEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHVnVaRllnUFNCMGFHbHpMbWRsZEZaaGJIVmxRWFJVYVcxbEtHeGhjM1JMWlhsR2NtRnRaU0F2SUhSb2FYTXVZMjl0Y0M1bmJHOWlZV3hFWVhSaExtWnlZVzFsVW1GMFpTd2dNQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdZM1Z5Y21WdWRDQTlJSFJvYVhNdVoyVjBWbUZzZFdWQmRGUnBiV1VvS0NoamRYSnlaVzUwUm5KaGJXVWdMU0JtYVhKemRFdGxlVVp5WVcxbEtTQWxJR041WTJ4bFJIVnlZWFJwYjI0Z0t5QWdabWx5YzNSTFpYbEdjbUZ0WlNrZ0x5QjBhR2x6TG1OdmJYQXVaMnh2WW1Gc1JHRjBZUzVtY21GdFpWSmhkR1VzSURBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhKbGNHVmhkSE1nUFNCTllYUm9MbVpzYjI5eUtDaGpkWEp5Wlc1MFJuSmhiV1VnTFNCbWFYSnpkRXRsZVVaeVlXMWxLUzlqZVdOc1pVUjFjbUYwYVc5dUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVjSFl1YkdWdVozUm9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFFnUFNCdVpYY2dRWEp5WVhrb2FXNXBkRll1YkdWdVozUm9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaVzRnUFNCeVpYUXViR1Z1WjNSb08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkRnRwWFNBOUlDaGxibVJXVzJsZExXbHVhWFJXVzJsZEtTcHlaWEJsWVhSeklDc2dZM1Z5Y21WdWRGdHBYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFvWlc1a1ZpMXBibWwwVmlrcWNtVndaV0YwY3lBcklHTjFjbkpsYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmloMGVYQmxJRDA5UFNBblkyOXVkR2x1ZFdVbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCc1lYTjBWbUZzZFdVZ1BTQjBhR2x6TG1kbGRGWmhiSFZsUVhSVWFXMWxLR3hoYzNSTFpYbEdjbUZ0WlNBdklIUm9hWE11WTI5dGNDNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFVtRjBaU3dnTUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm1WNGRFeGhjM1JXWVd4MVpTQTlJSFJvYVhNdVoyVjBWbUZzZFdWQmRGUnBiV1VvS0d4aGMzUkxaWGxHY21GdFpTQXRJREF1TURBeEtTQXZJSFJvYVhNdVkyOXRjQzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlN3Z01DazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbkIyTG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwSUQwZ2JtVjNJRUZ5Y21GNUtHeGhjM1JXWVd4MVpTNXNaVzVuZEdncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGJpQTlJSEpsZEM1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMFcybGRJRDBnYkdGemRGWmhiSFZsVzJsZElDc2dLR3hoYzNSV1lXeDFaVnRwWFMxdVpYaDBUR0Z6ZEZaaGJIVmxXMmxkS1Nvb0tHTjFjbkpsYm5SR2NtRnRaU0F0SUd4aGMzUkxaWGxHY21GdFpTa3ZJSFJvYVhNdVkyOXRjQzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlNrdk1DNHdNREExTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVjBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUd4aGMzUldZV3gxWlNBcklDaHNZWE4wVm1Gc2RXVXRibVY0ZEV4aGMzUldZV3gxWlNrcUtDZ29ZM1Z5Y21WdWRFWnlZVzFsSUMwZ2JHRnpkRXRsZVVaeVlXMWxLU2t2TUM0d01ERXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZaaGJIVmxRWFJVYVcxbEtDZ29LR04xY25KbGJuUkdjbUZ0WlNBdElHWnBjbk4wUzJWNVJuSmhiV1VwSUNVZ1kzbGpiR1ZFZFhKaGRHbHZiaUFySUNCbWFYSnpkRXRsZVVaeVlXMWxLU0F0SUc5bVpuTmxkRlJwYldVcElDOGdkR2hwY3k1amIyMXdMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVlNZWFJsTENBd0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2JHOXZjRWx1S0hSNWNHVXNaSFZ5WVhScGIyNHNJR1IxY21GMGFXOXVSbXhoWnlrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtS0NGMGFHbHpMbXNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d2RqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR04xY25KbGJuUkdjbUZ0WlNBOUlIUnBiV1VxWld4bGJTNWpiMjF3TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCclpYbG1jbUZ0WlhNZ1BTQjBhR2x6TG10bGVXWnlZVzFsY3p0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWm1seWMzUkxaWGxHY21GdFpTQTlJR3RsZVdaeVlXMWxjMXN3WFM1ME8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdlptWnpaWFJVYVcxbElEMGdkR2hwY3k1dlptWnpaWFJVYVcxbElIeDhJREE3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9ZM1Z5Y21WdWRFWnlZVzFsUGoxbWFYSnpkRXRsZVVaeVlXMWxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0hZN1hISmNiaUFnSUNBZ0lDQWdmV1ZzYzJWN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmplV05zWlVSMWNtRjBhVzl1TENCc1lYTjBTMlY1Um5KaGJXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0ZrZFhKaGRHbHZia1pzWVdjcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvSVdSMWNtRjBhVzl1SUh4OElHUjFjbUYwYVc5dUlENGdhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDQXRJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1IxY21GMGFXOXVJRDBnYTJWNVpuSmhiV1Z6TG14bGJtZDBhQ0F0SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFMyVjVSbkpoYldVZ1BTQnJaWGxtY21GdFpYTmJaSFZ5WVhScGIyNWRMblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamVXTnNaVVIxY21GMGFXOXVJRDBnYkdGemRFdGxlVVp5WVcxbElDMGdabWx5YzNSTFpYbEdjbUZ0WlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtDRmtkWEpoZEdsdmJpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzbGpiR1ZFZFhKaGRHbHZiaUE5SUUxaGRHZ3ViV0Y0S0RBc2RHaHBjeTVsYkdWdExtUmhkR0V1YjNBZ0xTQm1hWEp6ZEV0bGVVWnlZVzFsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTNsamJHVkVkWEpoZEdsdmJpQTlJRTFoZEdndVlXSnpLR1ZzWlcwdVkyOXRjQzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlNwa2RYSmhkR2x2YmlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFMyVjVSbkpoYldVZ1BTQm1hWEp6ZEV0bGVVWnlZVzFsSUNzZ1kzbGpiR1ZFZFhKaGRHbHZianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVMQ0J5WlhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUjVjR1VnUFQwOUlDZHdhVzVuY0c5dVp5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBkR1Z5WVhScGIyNXpJRDBnVFdGMGFDNW1iRzl2Y2lnb1ptbHljM1JMWlhsR2NtRnRaU0F0SUdOMWNuSmxiblJHY21GdFpTa3ZZM2xqYkdWRWRYSmhkR2x2YmlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhwZEdWeVlYUnBiMjV6SUNVZ01pQTlQVDBnTUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBWbUZzZFdWQmRGUnBiV1VvS0Nnb1ptbHljM1JMWlhsR2NtRnRaU0F0SUdOMWNuSmxiblJHY21GdFpTa2xZM2xqYkdWRWRYSmhkR2x2YmlBcklDQm1hWEp6ZEV0bGVVWnlZVzFsS1NBdElHOW1abk5sZEZScGJXVXBJQzhnZEdocGN5NWpiMjF3TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbExDQXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtS0hSNWNHVWdQVDA5SUNkdlptWnpaWFFuS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwYm1sMFZpQTlJSFJvYVhNdVoyVjBWbUZzZFdWQmRGUnBiV1VvWm1seWMzUkxaWGxHY21GdFpTQXZJSFJvYVhNdVkyOXRjQzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlN3Z01DazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pXNWtWaUE5SUhSb2FYTXVaMlYwVm1Gc2RXVkJkRlJwYldVb2JHRnpkRXRsZVVaeVlXMWxJQzhnZEdocGN5NWpiMjF3TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbExDQXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpkWEp5Wlc1MElEMGdkR2hwY3k1blpYUldZV3gxWlVGMFZHbHRaU2dvWTNsamJHVkVkWEpoZEdsdmJpQXRJQ2htYVhKemRFdGxlVVp5WVcxbElDMGdZM1Z5Y21WdWRFWnlZVzFsS1NWamVXTnNaVVIxY21GMGFXOXVJQ3NnSUdacGNuTjBTMlY1Um5KaGJXVXBJQzhnZEdocGN5NWpiMjF3TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbExDQXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnlaWEJsWVhSeklEMGdUV0YwYUM1bWJHOXZjaWdvWm1seWMzUkxaWGxHY21GdFpTQXRJR04xY25KbGJuUkdjbUZ0WlNrdlkzbGpiR1ZFZFhKaGRHbHZiaWtyTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFJvYVhNdWNIWXViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUWdQU0J1WlhjZ1FYSnlZWGtvYVc1cGRGWXViR1Z1WjNSb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pXNGdQU0J5WlhRdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRGdHBYU0E5SUdOMWNuSmxiblJiYVYwdEtHVnVaRlpiYVYwdGFXNXBkRlpiYVYwcEtuSmxjR1ZoZEhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWFE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kzVnljbVZ1ZEMwb1pXNWtWaTFwYm1sMFZpa3FjbVZ3WldGMGN6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtIUjVjR1VnUFQwOUlDZGpiMjUwYVc1MVpTY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHWnBjbk4wVm1Gc2RXVWdQU0IwYUdsekxtZGxkRlpoYkhWbFFYUlVhVzFsS0dacGNuTjBTMlY1Um5KaGJXVWdMeUIwYUdsekxtTnZiWEF1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVkpoZEdVc0lEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHNWxlSFJHYVhKemRGWmhiSFZsSUQwZ2RHaHBjeTVuWlhSV1lXeDFaVUYwVkdsdFpTZ29abWx5YzNSTFpYbEdjbUZ0WlNBcklEQXVNREF4S1NBdklIUm9hWE11WTI5dGNDNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFVtRjBaU3dnTUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxuQjJMbXhsYm1kMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBJRDBnYm1WM0lFRnljbUY1S0dacGNuTjBWbUZzZFdVdWJHVnVaM1JvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlc0Z1BTQnlaWFF1YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEZ0cFhTQTlJR1pwY25OMFZtRnNkV1ZiYVYwZ0t5QW9abWx5YzNSV1lXeDFaVnRwWFMxdVpYaDBSbWx5YzNSV1lXeDFaVnRwWFNrcUtHWnBjbk4wUzJWNVJuSmhiV1VnTFNCamRYSnlaVzUwUm5KaGJXVXBMekF1TURBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVYwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWnBjbk4wVm1Gc2RXVWdLeUFvWm1seWMzUldZV3gxWlMxdVpYaDBSbWx5YzNSV1lXeDFaU2txS0dacGNuTjBTMlY1Um5KaGJXVWdMU0JqZFhKeVpXNTBSbkpoYldVcEx6QXVNREF4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJXWVd4MVpVRjBWR2x0WlNnb0tHTjVZMnhsUkhWeVlYUnBiMjRnTFNBb1ptbHljM1JMWlhsR2NtRnRaU0F0SUdOMWNuSmxiblJHY21GdFpTa2dKU0JqZVdOc1pVUjFjbUYwYVc5dUlDc2dJR1pwY25OMFMyVjVSbkpoYldVcElDMGdiMlptYzJWMFZHbHRaU2tnTHlCMGFHbHpMbU52YlhBdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlZKaGRHVXNJREFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSV1lXeDFaVUYwVkdsdFpTaG1jbUZ0WlU1MWJTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtDRjBhR2x6TGw5allXTm9hVzVuUVhSVWFXMWxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyTmhZMmhwYm1kQmRGUnBiV1VnUFNCN2JHRnpkRlpoYkhWbE9pMDVPVGs1T1N4c1lYTjBTVzVrWlhnNk1IMDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDOHZZMjl1YzI5c1pTNXNiMmNvSjNSb2FYTXVYMk5oWTJocGJtZEJkRlJwYldVbkxDQktVMDlPTG5CaGNuTmxLRXBUVDA0dWMzUnlhVzVuYVdaNUtIUm9hWE11WDJOaFkyaHBibWRCZEZScGJXVXBLU2xjY2x4dUlDQWdJQ0FnSUNCcFppaG1jbUZ0WlU1MWJTQWhQVDBnZEdocGN5NWZZMkZqYUdsdVowRjBWR2x0WlM1c1lYTjBSbkpoYldVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1puSmhiV1ZPZFcwZ0tqMGdkR2hwY3k1bGJHVnRMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVlNZWFJsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtY21GdFpVNTFiU0F0UFNCMGFHbHpMbTltWm5ObGRGUnBiV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcElEMGdkR2hwY3k1ZlkyRmphR2x1Wnk1c1lYTjBSbkpoYldVZ1BDQm1jbUZ0WlU1MWJTQS9JSFJvYVhNdVgyTmhZMmhwYm1jdWJHRnpkRWx1WkdWNElEb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdWRHVnljRzlzWVhScGIyNVNaWE4xYkhRZ1BTQjBhR2x6TG1sdWRHVnljRzlzWVhSbFZtRnNkV1VvWm5KaGJXVk9kVzBzSUdrc0lIUm9hWE11Y0hZc0lIUm9hWE11WDJOaFkyaHBibWRCZEZScGJXVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5allXTm9hVzVuUVhSVWFXMWxMbXhoYzNSSmJtUmxlQ0E5SUdsdWRHVnljRzlzWVhScGIyNVNaWE4xYkhRdWFYUmxjbUYwYVc5dVNXNWtaWGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyTmhZMmhwYm1kQmRGUnBiV1V1ZG1Gc2RXVWdQU0JwYm5SbGNuQnZiR0YwYVc5dVVtVnpkV3gwTG5aaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5allXTm9hVzVuUVhSVWFXMWxMbXhoYzNSR2NtRnRaU0E5SUdaeVlXMWxUblZ0TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlkyRmphR2x1WjBGMFZHbHRaUzUyWVd4MVpUdGNjbHh1WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1oyVjBWbVZzYjJOcGRIbEJkRlJwYldVb1puSmhiV1ZPZFcwcElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFHbHpMblpsYkNBaFBUMGdkVzVrWldacGJtVmtLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZG1Wc08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdaR1ZzZEdFZ1BTQXRNQzR3TVR0Y2NseHVJQ0FnSUNBZ0lDQXZMMlp5WVcxbFRuVnRJQ3M5SUhSb2FYTXVaV3hsYlM1a1lYUmhMbk4wTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUIyTVNBOUlIUm9hWE11WjJWMFZtRnNkV1ZCZEZScGJXVW9abkpoYldWT2RXMHBPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjJNaUE5SUhSb2FYTXVaMlYwVm1Gc2RXVkJkRlJwYldVb1puSmhiV1ZPZFcwZ0t5QmtaV3gwWVNrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhabGJHOWphWFI1TzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFl4TG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpsYkc5amFYUjVJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9Pbll4TG14bGJtZDBhSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBIWXhMbXhsYm1kMGFEdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZjbVZ0YjNacGJtY2dabkpoYldWU1lYUmxYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2TDJsbUlHNWxaV1JsWkN3Z1pHOXVKM1FnWVdSa0lHbDBJR2hsY21WY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZkbVZzYjJOcGRIbGJhVjBnUFNCMGFHbHpMbVZzWlcwdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlZKaGRHVXFLQ2gyTWx0cFhTQXRJSFl4VzJsZEtTOWtaV3gwWVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaV3h2WTJsMGVWdHBYU0E5SUNoMk1sdHBYU0F0SUhZeFcybGRLUzlrWld4MFlUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmxiRzlqYVhSNUlEMGdLSFl5SUMwZ2RqRXBMMlJsYkhSaE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Wc2IyTnBkSGs3WEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxkRWR5YjNWd1VISnZjR1Z5ZEhrb2NISnZjR1Z5ZEhsSGNtOTFjQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205d1pYSjBlVWR5YjNWd0lEMGdjSEp2Y0dWeWRIbEhjbTkxY0R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnpaV0Z5WTJoRmVIQnlaWE56YVc5dWN5aGxiR1Z0TEdSaGRHRXNjSEp2Y0NsN1hISmNiaUFnSUNBZ0lDQWdhV1lvWkdGMFlTNTRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0M1cklEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNDNTRJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jSEp2Y0M1blpYUldZV3gxWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0M1blpYUlFjbVZXWVd4MVpTQTlJSEJ5YjNBdVoyVjBWbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNDNW5aWFJXWVd4MVpTQTlJRVY0Y0hKbGMzTnBiMjVOWVc1aFoyVnlMbWx1YVhScFlYUmxSWGh3Y21WemMybHZiaTVpYVc1a0tIQnliM0FwS0dWc1pXMHNaR0YwWVN4d2NtOXdLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdaMlYwVkhKaGJuTm1iM0p0Vm1Gc2RXVkJkRlJwYldVb2RHbHRaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LQ2QwYVcxbE9pY3NJSFJwYldVcFhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdaMlYwVkhKaGJuTm1iM0p0VTNSaGRHbGpWbUZzZFdWQmRGUnBiV1VvZEdsdFpTa2dlMXh5WEc1Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjJZWElnVkdWNGRFVjRjSEpsYzNOcGIyNVRaV3hsWTNSdmNsQnliM0FnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1oyVjBWbUZzZFdWUWNtOTRlU2hwYm1SbGVDeDBiM1JoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEVsdVpHVjRJRDBnYVc1a1pYZ3JNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MFpYaDBWRzkwWVd3Z1BTQjBiM1JoYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW5aWFJXWVd4MVpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUyTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUZSbGVIUkZlSEJ5WlhOemFXOXVVMlZzWldOMGIzSlFjbTl3S0dWc1pXMHNaR0YwWVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSFlnUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wld4bGJTQTlJR1ZzWlcwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViWFZzZENBOUlDNHdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSjNSbGVIUlRaV3hsWTNSdmNpYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEdWNGRGUnZkR0ZzSUQwZ1pHRjBZUzUwYjNSaGJFTm9ZWEp6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxiR1ZqZEc5eVZtRnNkV1VnUFNBeE1EQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YkdGemRGWmhiSFZsSUQwZ1d6RXNNU3d4WFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWaGNtTm9SWGh3Y21WemMybHZibk11WW1sdVpDaDBhR2x6S1NobGJHVnRMR1JoZEdFc2RHaHBjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyVjBUWFZzZENBOUlHZGxkRlpoYkhWbFVISnZlSGs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVoyVjBWbVZzYjJOcGRIbEJkRlJwYldVZ1BTQm5aWFJXWld4dlkybDBlVUYwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1clppbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRlpoYkhWbFFYUlVhVzFsSUQwZ1oyVjBWbUZzZFdWQmRGUnBiV1V1WW1sdVpDaDBhR2x6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVkJkRlJwYldVZ1BTQm5aWFJUZEdGMGFXTldZV3gxWlVGMFZHbHRaUzVpYVc1a0tIUm9hWE1wTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyVjBSM0p2ZFhCUWNtOXdaWEowZVNBOUlITmxkRWR5YjNWd1VISnZjR1Z5ZEhrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmU2dwS1R0Y2NseHVYSEpjYmx4eVhHNGdJQ0FnZG1GeUlIQnliM0JsY25SNVIyVjBVSEp2Y0NBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3TzF4eVhHNGdJQ0FnVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZCeWIzQWdQU0JtZFc1amRHbHZiaWhsYkdWdExHUmhkR0VzZEhsd1pTd2diWFZzZEN3Z1lYSnlLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjSEp2Y0NBOUlIQnliM0JsY25SNVIyVjBVSEp2Y0NobGJHVnRMR1JoZEdFc2RIbHdaU3dnYlhWc2RDd2dZWEp5S1R0Y2NseHVJQ0FnSUNBZ0lDQXZMM0J5YjNBdVoyVjBWbVZzYjJOcGRIbEJkRlJwYldVZ1BTQm5aWFJXWld4dlkybDBlVUYwVkdsdFpUdGNjbHh1SUNBZ0lDQWdJQ0F2TDNCeWIzQXViRzl2Y0U5MWRDQTlJR3h2YjNCUGRYUTdYSEpjYmlBZ0lDQWdJQ0FnTHk5d2NtOXdMbXh2YjNCSmJpQTlJR3h2YjNCSmJqdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGVYQmxJRDA5UFNBeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEJ5YjNBdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNdWJHVnVaM1JvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3TG1kbGRGWmhiSFZsUVhSVWFXMWxJRDBnWjJWMFZISmhibk5tYjNKdFZtRnNkV1ZCZEZScGJXVXVZbWx1WkNod2NtOXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBdVoyVjBWbUZzZFdWQmRGUnBiV1VnUFNCblpYUlVjbUZ1YzJadmNtMVRkR0YwYVdOV1lXeDFaVUYwVkdsdFpTNWlhVzVrS0hCeWIzQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvY0hKdmNDNXJaaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOXdMbWRsZEZaaGJIVmxRWFJVYVcxbElEMGdaMlYwVm1Gc2RXVkJkRlJwYldVdVltbHVaQ2h3Y205d0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnliM0F1WjJWMFZtRnNkV1ZCZEZScGJXVWdQU0JuWlhSVGRHRjBhV05XWVd4MVpVRjBWR2x0WlM1aWFXNWtLSEJ5YjNBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhCeWIzQXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTQTlJSE5sZEVkeWIzVndVSEp2Y0dWeWRIazdYSEpjYmlBZ0lDQWdJQ0FnY0hKdmNDNXNiMjl3VDNWMElEMGdiRzl2Y0U5MWREdGNjbHh1SUNBZ0lDQWdJQ0J3Y205d0xteHZiM0JKYmlBOUlHeHZiM0JKYmp0Y2NseHVJQ0FnSUNBZ0lDQndjbTl3TG1kbGRGWmxiRzlqYVhSNVFYUlVhVzFsSUQwZ1oyVjBWbVZzYjJOcGRIbEJkRlJwYldVN1hISmNiaUFnSUNBZ0lDQWdjSEp2Y0M1dWRXMUxaWGx6SUQwZ1pHRjBZUzVoSUQwOVBTQXhJRDhnWkdGMFlTNXJMbXhsYm1kMGFDQTZJREE3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x6UVdSa1pXUWdQU0J3Y205d0xtczdYSEpjYmlBZ0lDQWdJQ0FnYVdZb1pHRjBZUzVwZUNBaFBUMGdkVzVrWldacGJtVmtLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hCeWIzQXNKM0J5YjNCbGNuUjVTVzVrWlhnbkxIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWkdGMFlTNXBlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYzJWaGNtTm9SWGh3Y21WemMybHZibk1vWld4bGJTeGtZWFJoTEhCeWIzQXBPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtDRnBjMEZrWkdWa0lDWW1JSEJ5YjNBdWVDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnljaTV3ZFhOb0tIQnliM0FwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCeWIzQTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWjJWMFUyaGhjR1ZXWVd4MVpVRjBWR2x0WlNobWNtRnRaVTUxYlNrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmYzJoaGNHVldZV3gxWlVGMFZHbHRaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXNZWE4wU1c1a1pYaEJkRlJwYldVZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5c1lYTjBWR2x0WlVGMFZHbHRaU0E5SUMwNU9UazVPVGs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzTm9ZWEJsVm1Gc2RXVkJkRlJwYldVZ1BTQnphR0Z3WlY5d2IyOXNMbU5zYjI1bEtIUm9hWE11Y0hZcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaG1jbUZ0WlU1MWJTQWhQVDBnZEdocGN5NWZiR0Z6ZEZScGJXVkJkRlJwYldVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYkdGemRGUnBiV1ZCZEZScGJXVWdQU0JtY21GdFpVNTFiVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabkpoYldWT2RXMGdLajBnZEdocGN5NWxiR1Z0TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhVzUwWlhKd2IyeGhkR2x2YmxKbGMzVnNkQ0E5SUhSb2FYTXVhVzUwWlhKd2IyeGhkR1ZUYUdGd1pTaG1jbUZ0WlU1MWJTd2dkR2hwY3k1ZmJHRnpkRWx1WkdWNFFYUlVhVzFsTENCMGFHbHpMbDl6YUdGd1pWWmhiSFZsUVhSVWFXMWxMQ0JtWVd4elpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4aGMzUkpibVJsZUVGMFZHbHRaU0E5SUdsdWRHVnljRzlzWVhScGIyNVNaWE4xYkhRdWFYUmxjbUYwYVc5dVNXNWtaWGc3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5emFHRndaVlpoYkhWbFFYUlVhVzFsTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIWmhjaUJUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpQTlJRk5vWVhCbFVISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRFTnZibk4wY25WamRHOXlSblZ1WTNScGIyNG9LVHRjY2x4dUlDQWdJSFpoY2lCTFpYbG1jbUZ0WldSVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaUE5SUZOb1lYQmxVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRXRsZVdaeVlXMWxaRU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjRvS1R0Y2NseHVYSEpjYmlBZ0lDQlRhR0Z3WlZCeWIzQmxjblI1UTI5dWMzUnlkV04wYjNKR2RXNWpkR2x2Ymk1d2NtOTBiM1I1Y0dVdWRtVnlkR2xqWlhNZ1BTQm1kVzVqZEdsdmJpaHdjbTl3TENCMGFXMWxLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjMmhoY0dWUVlYUm9JRDBnZEdocGN5NTJPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtIUnBiV1VnSVQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlZCaGRHZ2dQU0IwYUdsekxtZGxkRlpoYkhWbFFYUlVhVzFsS0hScGJXVXNJREFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2MyaGhjR1ZRWVhSb0xsOXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhabGNuUnBZMlZ6SUQwZ2MyaGhjR1ZRWVhSb1czQnliM0JkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3YjJsdWRITWdQU0J6YUdGd1pWQmhkR2d1ZGp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWVhKeUlEMGdRWEp5WVhrdVlYQndiSGtvYm5Wc2JDeDdiR1Z1WjNSb09teGxibjBwWEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBd095QnBJRHdnYkdWdU95QnBJQ3M5SURFcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jSEp2Y0NBOVBUMGdKMmtuSUh4OElIQnliM0FnUFQwOUlDZHZKeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlXMmxkSUQwZ1czWmxjblJwWTJWelcybGRXekJkSUMwZ2NHOXBiblJ6VzJsZFd6QmRMQ0IyWlhKMGFXTmxjMXRwWFZzeFhTQXRJSEJ2YVc1MGMxdHBYVnN4WFYxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGeWNsdHBYU0E5SUZ0MlpYSjBhV05sYzF0cFhWc3dYU3dnZG1WeWRHbGpaWE5iYVYxYk1WMWRYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJoY25JN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdVMmhoY0dWUWNtOXdaWEowZVVOdmJuTjBjblZqZEc5eVJuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExuQnZhVzUwY3lBOUlHWjFibU4wYVc5dUtIUnBiV1VwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblpsY25ScFkyVnpLQ2QySnl3Z2RHbHRaU2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1UyaGhjR1ZRY205d1pYSjBlVU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjR1Y0hKdmRHOTBlWEJsTG1sdVZHRnVaMlZ1ZEhNZ1BTQm1kVzVqZEdsdmJpaDBhVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUyWlhKMGFXTmxjeWduYVNjc0lIUnBiV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lGTm9ZWEJsVUhKdmNHVnlkSGxEYjI1emRISjFZM1J2Y2taMWJtTjBhVzl1TG5CeWIzUnZkSGx3WlM1dmRYUlVZVzVuWlc1MGN5QTlJR1oxYm1OMGFXOXVLSFJwYldVcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5abGNuUnBZMlZ6S0Nkdkp5d2dkR2x0WlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdVMmhoY0dWUWNtOXdaWEowZVVOdmJuTjBjblZqZEc5eVJuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExtbHpRMnh2YzJWa0lEMGdablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTJMbU03WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1UyaGhjR1ZRY205d1pYSjBlVU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjR1Y0hKdmRHOTBlWEJsTG5CdmFXNTBUMjVRWVhSb0lEMGdablZ1WTNScGIyNG9jR1Z5WXl3Z2RHbHRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE5vWVhCbFVHRjBhQ0E5SUhSb2FYTXVkanRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhVzFsSUNFOVBTQjFibVJsWm1sdVpXUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWUVlYUm9JRDBnZEdocGN5NW5aWFJXWVd4MVpVRjBWR2x0WlNoMGFXMWxMQ0F3S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb0lYUm9hWE11WDNObFoyMWxiblJ6VEdWdVozUm9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzTmxaMjFsYm5SelRHVnVaM1JvSUQwZ1ltVjZMbWRsZEZObFoyMWxiblJ6VEdWdVozUm9LSE5vWVhCbFVHRjBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdjMlZuYldWdWRITk1aVzVuZEdnZ1BTQjBhR2x6TGw5elpXZHRaVzUwYzB4bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdiR1Z1WjNSb2N5QTlJSE5sWjIxbGJuUnpUR1Z1WjNSb0xteGxibWQwYUhNN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUd4bGJtZDBhRkJ2Y3lBOUlITmxaMjFsYm5SelRHVnVaM1JvTG5SdmRHRnNUR1Z1WjNSb0lDb2djR1Z5WXp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVNBOUlEQXNJR3hsYmlBOUlHeGxibWQwYUhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJxSUQwZ01Dd2dha3hsYmp0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWVdOamRXMTFiR0YwWldSTVpXNW5kR2dnUFNBd08xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCelpXZHRaVzUwY3p0Y2NseHVJQ0FnSUNBZ0lDQjNhR2xzWlNocElEd2diR1Z1S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtHRmpZM1Z0ZFd4aGRHVmtUR1Z1WjNSb0lDc2diR1Z1WjNSb2MxdHBYUzVoWkdSbFpFeGxibWQwYUNBK0lHeGxibWQwYUZCdmN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWbmJXVnVkSE1nUFNCc1pXNW5kR2h6VzJsZExuTmxaMjFsYm5Sek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdWFYUkpibVJsZUNBOUlHazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pXNWtTVzVrWlhnZ1BTQW9jMmhoY0dWUVlYUm9MbU1nSmlZZ2FTQTlQVDBnYkdWdUlDMGdNU2tnUHlBd0lEb2dhU0FySURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYzJWbmJXVnVkRkJsY21NZ1BTQW9iR1Z1WjNSb1VHOXpJQzBnWVdOamRXMTFiR0YwWldSTVpXNW5kR2dwTDJ4bGJtZDBhSE5iYVYwdVlXUmtaV1JNWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NIUWdQU0JpWlhvdVoyVjBVRzlwYm5SSmJsTmxaMjFsYm5Rb2MyaGhjR1ZRWVhSb0xuWmJhVzVwZEVsdVpHVjRYU3dnYzJoaGNHVlFZWFJvTG5aYlpXNWtTVzVrWlhoZExDQnphR0Z3WlZCaGRHZ3ViMXRwYm1sMFNXNWtaWGhkTENCemFHRndaVkJoZEdndWFWdGxibVJKYm1SbGVGMHNJSE5sWjIxbGJuUlFaWEpqTENCc1pXNW5kR2h6VzJsZEtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFkyTjFiWFZzWVhSbFpFeGxibWQwYUNBclBTQnNaVzVuZEdoelcybGRMbUZrWkdWa1RHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2tnS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2FXWW9JWEIwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hRZ1BTQnphR0Z3WlZCaGRHZ3VZeUEvSUZ0emFHRndaVkJoZEdndWRsc3dYVnN3WFN4emFHRndaVkJoZEdndWRsc3dYVnN4WFYwNlczTm9ZWEJsVUdGMGFDNTJXM05vWVhCbFVHRjBhQzVmYkdWdVozUm9MVEZkV3pCZExITm9ZWEJsVUdGMGFDNTJXM05vWVhCbFVHRjBhQzVmYkdWdVozUm9MVEZkV3pGZFhWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0hRN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdVMmhoY0dWUWNtOXdaWEowZVVOdmJuTjBjblZqZEc5eVJuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExuWmxZM1J2Y2s5dVVHRjBhQ0E5SUdaMWJtTjBhVzl1S0hCbGNtTXNJSFJwYldVc0lIWmxZM1J2Y2xSNWNHVXBlMXh5WEc0Z0lDQWdJQ0FnSUM4dmNHVnlZeUJrYjJWemJpZDBJSFZ6WlNCMGNtbHdiR1VnWlhGMVlXeHBkSGtnWW1WallYVnpaU0JqWVc0Z1ltVWdZU0JPZFcxaVpYSWdiMkpxWldOMExDQnViM1FnWVNCd2NtbHRhWFJwZG1VdVhISmNiaUFnSUNBZ0lDQWdjR1Z5WXlBOUlIQmxjbU1nUFQwZ01TQS9JSFJvYVhNdWRpNWpJRDhnTUNBNklEQXVPVGs1SURvZ2NHVnlZenRjY2x4dUlDQWdJQ0FnSUNCMllYSWdjSFF4SUQwZ2RHaHBjeTV3YjJsdWRFOXVVR0YwYUNod1pYSmpMQ0IwYVcxbEtUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NIUXlJRDBnZEdocGN5NXdiMmx1ZEU5dVVHRjBhQ2h3WlhKaklDc2dNQzR3TURFc0lIUnBiV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUI0VEdWdVozUm9JRDBnY0hReVd6QmRJQzBnY0hReFd6QmRPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjVUR1Z1WjNSb0lEMGdjSFF5V3pGZElDMGdjSFF4V3pGZE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCdFlXZHVhWFIxWkdVZ1BTQk5ZWFJvTG5OeGNuUW9UV0YwYUM1d2IzY29lRXhsYm1kMGFDd3lLU0FySUUxaGRHZ3VjRzkzS0hsTVpXNW5kR2dzTWlrcE8xeHlYRzRnSUNBZ0lDQWdJSFpoY2lCMWJtbDBWbVZqZEc5eUlEMGdkbVZqZEc5eVZIbHdaU0E5UFQwZ0ozUmhibWRsYm5RbklEOGdXM2hNWlc1bmRHZ3ZiV0ZuYm1sMGRXUmxMQ0I1VEdWdVozUm9MMjFoWjI1cGRIVmtaVjBnT2lCYkxYbE1aVzVuZEdndmJXRm5ibWwwZFdSbExDQjRUR1Z1WjNSb0wyMWhaMjVwZEhWa1pWMDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFZ1YVhSV1pXTjBiM0k3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1UyaGhjR1ZRY205d1pYSjBlVU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjR1Y0hKdmRHOTBlWEJsTG5SaGJtZGxiblJQYmxCaGRHZ2dQU0JtZFc1amRHbHZiaWh3WlhKakxDQjBhVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUyWldOMGIzSlBibEJoZEdnb2NHVnlZeXdnZEdsdFpTd2dKM1JoYm1kbGJuUW5LVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1Ym05eWJXRnNUMjVRWVhSb0lEMGdablZ1WTNScGIyNG9jR1Z5WXl3Z2RHbHRaU2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkbVZqZEc5eVQyNVFZWFJvS0hCbGNtTXNJSFJwYldVc0lDZHViM0p0WVd3bktUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpNXdjbTkwYjNSNWNHVXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTQTlJSE5sZEVkeWIzVndVSEp2Y0dWeWRIazdYSEpjYmlBZ0lDQlRhR0Z3WlZCeWIzQmxjblI1UTI5dWMzUnlkV04wYjNKR2RXNWpkR2x2Ymk1d2NtOTBiM1I1Y0dVdVoyVjBWbUZzZFdWQmRGUnBiV1VnUFNCblpYUlRkR0YwYVdOV1lXeDFaVUYwVkdsdFpUdGNjbHh1WEhKY2JpQWdJQ0JMWlhsbWNtRnRaV1JUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpNXdjbTkwYjNSNWNHVXVkbVZ5ZEdsalpYTWdQU0JUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpNXdjbTkwYjNSNWNHVXVkbVZ5ZEdsalpYTTdYSEpjYmlBZ0lDQkxaWGxtY21GdFpXUlRhR0Z3WlZCeWIzQmxjblI1UTI5dWMzUnlkV04wYjNKR2RXNWpkR2x2Ymk1d2NtOTBiM1I1Y0dVdWNHOXBiblJ6SUQwZ1UyaGhjR1ZRY205d1pYSjBlVU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjR1Y0hKdmRHOTBlWEJsTG5CdmFXNTBjenRjY2x4dUlDQWdJRXRsZVdaeVlXMWxaRk5vWVhCbFVISnZjR1Z5ZEhsRGIyNXpkSEoxWTNSdmNrWjFibU4wYVc5dUxuQnliM1J2ZEhsd1pTNXBibFJoYm1kbGJuUnpJRDBnVTJoaGNHVlFjbTl3WlhKMGVVTnZibk4wY25WamRHOXlSblZ1WTNScGIyNHVjSEp2ZEc5MGVYQmxMbWx1VkdGdVoyVnVkSE03WEhKY2JpQWdJQ0JMWlhsbWNtRnRaV1JUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpNXdjbTkwYjNSNWNHVXViM1YwVkdGdVoyVnVkSE1nUFNCVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1YjNWMFZHRnVaMlZ1ZEhNN1hISmNiaUFnSUNCTFpYbG1jbUZ0WldSVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1YVhORGJHOXpaV1FnUFNCVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1YVhORGJHOXpaV1E3WEhKY2JpQWdJQ0JMWlhsbWNtRnRaV1JUYUdGd1pWQnliM0JsY25SNVEyOXVjM1J5ZFdOMGIzSkdkVzVqZEdsdmJpNXdjbTkwYjNSNWNHVXVjRzlwYm5SUGJsQmhkR2dnUFNCVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1Y0c5cGJuUlBibEJoZEdnN1hISmNiaUFnSUNCTFpYbG1jbUZ0WldSVGFHRndaVkJ5YjNCbGNuUjVRMjl1YzNSeWRXTjBiM0pHZFc1amRHbHZiaTV3Y205MGIzUjVjR1V1ZG1WamRHOXlUMjVRWVhSb0lEMGdVMmhoY0dWUWNtOXdaWEowZVVOdmJuTjBjblZqZEc5eVJuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExuWmxZM1J2Y2s5dVVHRjBhRHRjY2x4dUlDQWdJRXRsZVdaeVlXMWxaRk5vWVhCbFVISnZjR1Z5ZEhsRGIyNXpkSEoxWTNSdmNrWjFibU4wYVc5dUxuQnliM1J2ZEhsd1pTNTBZVzVuWlc1MFQyNVFZWFJvSUQwZ1UyaGhjR1ZRY205d1pYSjBlVU52Ym5OMGNuVmpkRzl5Um5WdVkzUnBiMjR1Y0hKdmRHOTBlWEJsTG5SaGJtZGxiblJQYmxCaGRHZzdYSEpjYmlBZ0lDQkxaWGxtY21GdFpXUlRhR0Z3WlZCeWIzQmxjblI1UTI5dWMzUnlkV04wYjNKR2RXNWpkR2x2Ymk1d2NtOTBiM1I1Y0dVdWJtOXliV0ZzVDI1UVlYUm9JRDBnVTJoaGNHVlFjbTl3WlhKMGVVTnZibk4wY25WamRHOXlSblZ1WTNScGIyNHVjSEp2ZEc5MGVYQmxMbTV2Y20xaGJFOXVVR0YwYUR0Y2NseHVJQ0FnSUV0bGVXWnlZVzFsWkZOb1lYQmxVSEp2Y0dWeWRIbERiMjV6ZEhKMVkzUnZja1oxYm1OMGFXOXVMbkJ5YjNSdmRIbHdaUzV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVJRDBnVTJoaGNHVlFjbTl3WlhKMGVVTnZibk4wY25WamRHOXlSblZ1WTNScGIyNHVjSEp2ZEc5MGVYQmxMbk5sZEVkeWIzVndVSEp2Y0dWeWRIazdYSEpjYmlBZ0lDQkxaWGxtY21GdFpXUlRhR0Z3WlZCeWIzQmxjblI1UTI5dWMzUnlkV04wYjNKR2RXNWpkR2x2Ymk1d2NtOTBiM1I1Y0dVdVoyVjBWbUZzZFdWQmRGUnBiV1VnUFNCblpYUlRhR0Z3WlZaaGJIVmxRWFJVYVcxbE8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCd2NtOXdaWEowZVVkbGRGTm9ZWEJsVUhKdmNDQTlJRk5vWVhCbFVISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGTm9ZWEJsVUhKdmNEdGNjbHh1SUNBZ0lGTm9ZWEJsVUhKdmNHVnlkSGxHWVdOMGIzSjVMbWRsZEZOb1lYQmxVSEp2Y0NBOUlHWjFibU4wYVc5dUtHVnNaVzBzWkdGMFlTeDBlWEJsTENCaGNuSXNJSFJ5YVcxektYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NISnZjQ0E5SUhCeWIzQmxjblI1UjJWMFUyaGhjR1ZRY205d0tHVnNaVzBzWkdGMFlTeDBlWEJsTENCaGNuSXNJSFJ5YVcxektUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FYTkJaR1JsWkNBOUlIQnliM0F1YXp0Y2NseHVJQ0FnSUNBZ0lDQnBaaWhrWVhSaExtbDRJQ0U5UFNCMWJtUmxabWx1WldRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29jSEp2Y0N3bmNISnZjR1Z5ZEhsSmJtUmxlQ2NzZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmtZWFJoTG1sNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWgwZVhCbElEMDlQU0F6S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWaGNtTm9SWGh3Y21WemMybHZibk1vWld4bGJTeGtZWFJoTG5CMExIQnliM0FwTzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaDBlWEJsSUQwOVBTQTBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZoY21Ob1JYaHdjbVZ6YzJsdmJuTW9aV3hsYlN4a1lYUmhMbXR6TEhCeWIzQXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWdoYVhOQlpHUmxaQ0FtSmlCd2NtOXdMbmdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoY25JdWNIVnphQ2h3Y205d0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCeWIzQTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnZG1GeUlIQnliM0JsY25SNVIyVjBWR1Y0ZEZCeWIzQWdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVkdWNGRGTmxiR1ZqZEc5eVVISnZjRHRjY2x4dUlDQWdJRkJ5YjNCbGNuUjVSbUZqZEc5eWVTNW5aWFJVWlhoMFUyVnNaV04wYjNKUWNtOXdJRDBnWm5WdVkzUnBiMjRvWld4bGJTd2daR0YwWVN4aGNuSXBlMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHUmhkR0V1ZENBOVBUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVkdWNGRFVjRjSEpsYzNOcGIyNVRaV3hsWTNSdmNsQnliM0FvWld4bGJTd2daR0YwWVN4aGNuSXBPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQndjbTl3WlhKMGVVZGxkRlJsZUhSUWNtOXdLR1ZzWlcwc1pHRjBZU3hoY25JcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dWZTZ3BLVHRjYmlobWRXNWpkR2x2YmlCaFpHUlVaWGgwVUhKdmNHVnlkSGxFWldOdmNtRjBiM0lvS1NCN1hISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjMlZoY21Ob1JYaHdjbVZ6YzJsdmJuTW9LWHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhR2x6TG1SaGRHRXVaQzU0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiMjF3SUQwZ2RHaHBjeTVsYkdWdExtTnZiWEE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVaMlYwVm1Gc2RXVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVUhKbFZtRnNkV1VnUFNCMGFHbHpMbWRsZEZaaGJIVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTJGc1kzVnNZWFJsUlhod2NtVnpjMmx2YmlBOUlFVjRjSEpsYzNOcGIyNU5ZVzVoWjJWeUxtbHVhWFJwWVhSbFJYaHdjbVZ6YzJsdmJpNWlhVzVrS0hSb2FYTXBLSFJvYVhNdVpXeGxiU3gwYUdsekxtUmhkR0V1WkN4MGFHbHpLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1blpYUldZV3gxWlNBOUlIUm9hWE11WjJWMFJYaHdjbVZ6YzJsdmJsWmhiSFZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJRlJsZUhSUWNtOXdaWEowZVM1d2NtOTBiM1I1Y0dVdWMyVmhjbU5vVUhKdmNHVnlkSGtnUFNCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWEyWWdQU0IwYUdsekxuTmxZWEpqYUVWNGNISmxjM05wYjI1ektDa2dmSHdnZEdocGN5NWtZWFJoTG1RdWF5NXNaVzVuZEdnZ1BpQXhPMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtdG1PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUZSbGVIUlFjbTl3WlhKMGVTNXdjbTkwYjNSNWNHVXVaMlYwUlhod2NtVnpjMmx2YmxaaGJIVmxJRDBnWm5WdVkzUnBiMjRvYm5WdEtYdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTmhiR04xYkdGMFpVVjRjSEpsYzNOcGIyNG9LVHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhR2x6TG0xa1ppa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJFWVhSaExuUWdQU0IwYUdsekxuWXVkRzlUZEhKcGJtY29LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1amIyMXdiR1YwWlZSbGVIUkVZWFJoS0hSb2FYTXVZM1Z5Y21WdWRFUmhkR0VwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JVWlhoMFVISnZjR1Z5ZEhrdWNISnZkRzkwZVhCbExuTmxZWEpqYUVWNGNISmxjM05wYjI1eklEMGdjMlZoY21Ob1JYaHdjbVZ6YzJsdmJuTTdYSEpjYmlBZ0lDQmNjbHh1ZlNncEtUdGNiblpoY2lCRmVIQnlaWE56YVc5dVRXRnVZV2RsY2lBOUlDaG1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdkbUZ5SUc5aUlEMGdlMzA3WEhKY2JpQWdJQ0IyWVhJZ1RXRjBhQ0E5SUVKTlRXRjBhRHRjY2x4dUlDQWdJSFpoY2lCM2FXNWtiM2NnUFNCdWRXeHNPMXh5WEc0Z0lDQWdkbUZ5SUdSdlkzVnRaVzUwSUQwZ2JuVnNiRHRjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCa2RYQnNhV05oZEdWUWNtOXdaWEowZVZaaGJIVmxLSFpoYkhWbExDQnRkV3gwS1h0Y2NseHVJQ0FnSUNBZ0lDQnRkV3gwSUQwZ2JYVnNkQ0I4ZkNBeE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppaDBlWEJsYjJZZ2RtRnNkV1VnUFQwOUlDZHVkVzFpWlhJbklDQjhmQ0IyWVd4MVpTQnBibk4wWVc1alpXOW1JRTUxYldKbGNpbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMllXeDFaU3B0ZFd4ME8xeHlYRzRnSUNBZ0lDQWdJSDFsYkhObElHbG1LSFpoYkhWbExta3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1NsTlBUaTV3WVhKelpTaEtVMDlPTG5OMGNtbHVaMmxtZVNoMllXeDFaU2twTzF4eVhHNGdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1lYSnlJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3g3YkdWdVozUm9PblpoYkhWbExteGxibWQwYUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU3dnYkdWdUlEMGdkbUZzZFdVdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FUMHdPMms4YkdWdU8ya3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlXMmxkUFhaaGJIVmxXMmxkS20xMWJIUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGeWNqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2MyaGhjR1Z6UlhGMVlXd29jMmhoY0dVeExDQnphR0Z3WlRJcElIdGNjbHh1SUNBZ0lDQWdJQ0JwWmloemFHRndaVEV1WDJ4bGJtZDBhQ0FoUFQwZ2MyaGhjR1V5TGw5c1pXNW5kR2dnZkh3Z2MyaGhjR1V4TG1NZ0lUMDlJSE5vWVhCbE1pNWpLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2FTd2diR1Z1SUQwZ2MyaGhjR1V4TGw5c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlLR2tnUFNBd095QnBJRHdnYkdWdU95QnBJQ3M5SURFcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jMmhoY0dVeExuWmJhVjFiTUYwZ0lUMDlJSE5vWVhCbE1pNTJXMmxkV3pCZElIeDhJSE5vWVhCbE1TNTJXMmxkV3pGZElDRTlQU0J6YUdGd1pUSXVkbHRwWFZzeFhWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmSHdnYzJoaGNHVXhMbTliYVYxYk1GMGdJVDA5SUhOb1lYQmxNaTV2VzJsZFd6QmRJSHg4SUhOb1lYQmxNUzV2VzJsZFd6RmRJQ0U5UFNCemFHRndaVEl1YjF0cFhWc3hYVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZkh3Z2MyaGhjR1V4TG1sYmFWMWJNRjBnSVQwOUlITm9ZWEJsTWk1cFcybGRXekJkSUh4OElITm9ZWEJsTVM1cFcybGRXekZkSUNFOVBTQnphR0Z3WlRJdWFWdHBYVnN4WFNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1U3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z0pHSnRYMjVsWnloaEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RFOW1RU0E5SUhSNWNHVnZaaUJoTzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJQWmtFZ1BUMDlJQ2R1ZFcxaVpYSW5JSHg4SUhSUFprRWdQVDA5SUNkaWIyOXNaV0Z1SnlBZ2ZId2dZU0JwYm5OMFlXNWpaVzltSUU1MWJXSmxjaUFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdMV0U3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0dFdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUVGeWNtRjVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrc0lHeGxia0VnUFNCaExteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlISmxkRUZ5Y2lBOUlGdGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1UVR0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRFRnljbHRwWFNBOUlDMWhXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWFJCY25JN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhOMWJTaGhMR0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZEU5bVFTQTlJSFI1Y0dWdlppQmhPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjBUMlpDSUQwZ2RIbHdaVzltSUdJN1hISmNiaUFnSUNBZ0lDQWdhV1lvZEU5bVFTQTlQVDBnSjNOMGNtbHVaeWNnZkh3Z2RFOW1RaUE5UFQwZ0ozTjBjbWx1WnljcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVNBcklHSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LQ2gwVDJaQklEMDlQU0FuYm5WdFltVnlKeUI4ZkNCMFQyWkJJRDA5UFNBblltOXZiR1ZoYmljZ2ZId2dkRTltUVNBOVBUMGdKM04wY21sdVp5Y2dmSHdnWVNCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lrZ0ppWWdLSFJQWmtJZ1BUMDlJQ2R1ZFcxaVpYSW5JSHg4SUhSUFprSWdQVDA5SUNkaWIyOXNaV0Z1SnlCOGZDQjBUMlpDSUQwOVBTQW5jM1J5YVc1bkp5QWdmSHdnWWlCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lrcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0t5QmlPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWhoTG1OdmJuTjBjblZqZEc5eUlEMDlQU0JCY25KaGVTQW1KaUFvZEU5bVFpQTlQVDBnSjI1MWJXSmxjaWNnZkh3Z2RFOW1RaUE5UFQwZ0oySnZiMnhsWVc0bklIeDhJSFJQWmtJZ1BUMDlJQ2R6ZEhKcGJtY25JSHg4SUdJZ2FXNXpkR0Z1WTJWdlppQk9kVzFpWlhJZ0tTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRmJNRjBnUFNCaFd6QmRJQ3NnWWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0U3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0NoMFQyWkJJRDA5UFNBbmJuVnRZbVZ5SnlCOGZDQjBUMlpCSUQwOVBTQW5ZbTl2YkdWaGJpY2dmSHdnZEU5bVFTQTlQVDBnSjNOMGNtbHVaeWNnZkh3Z1lTQnBibk4wWVc1alpXOW1JRTUxYldKbGNpQXBJQ1ltSUdJdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUVGeWNtRjVLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbHN3WFNBOUlHRWdLeUJpV3pCZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWWp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnYVdZb1lTNWpiMjV6ZEhKMVkzUnZjaUE5UFQwZ1FYSnlZWGtnSmlZZ1lpNWpiMjV6ZEhKMVkzUnZjaUE5UFQwZ1FYSnlZWGtwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdrZ1BTQXdMQ0JzWlc1QklEMGdZUzVzWlc1bmRHZ3NJR3hsYmtJZ1BTQmlMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEpsZEVGeWNpQTlJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTaHBQR3hsYmtFZ2ZId2dhU0E4SUd4bGJrSXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0tIUjVjR1Z2WmlCaFcybGRJRDA5UFNBbmJuVnRZbVZ5SnlCOGZDQmhXMmxkSUdsdWMzUmhibU5sYjJZZ1RuVnRZbVZ5S1NBbUppQW9kSGx3Wlc5bUlHSmJhVjBnUFQwOUlDZHVkVzFpWlhJbklIeDhJR0piYVYwZ2FXNXpkR0Z1WTJWdlppQk9kVzFpWlhJcEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUkJjbkpiYVYwZ1BTQmhXMmxkSUNzZ1lsdHBYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkRUZ5Y2x0cFhTQTlJR0piYVYwZ1BUMGdkVzVrWldacGJtVmtJRDhnWVZ0cFhTQTZJR0ZiYVYwZ2ZId2dZbHRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnS3owZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21WMFFYSnlPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z01EdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUJoWkdRZ1BTQnpkVzA3WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2MzVmlLR0VzWWlrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCMFQyWkJJRDBnZEhsd1pXOW1JR0U3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJQWmtJZ1BTQjBlWEJsYjJZZ1lqdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnb2RFOW1RU0E5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUVNBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprRWdQVDA5SUNkemRISnBibWNuSUh4OElHRWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU0FtSmlBb2RFOW1RaUE5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUWlBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprSWdQVDA5SUNkemRISnBibWNuSUh4OElHSWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMFQyWkJJRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZU0E5SUhCaGNuTmxTVzUwS0dFcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUlBaa0lnUFQwOUlDZHpkSEpwYm1jbktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpSUQwZ2NHRnljMlZKYm5Rb1lpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0xTQmlPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnBaaWdnWVM1amIyNXpkSEoxWTNSdmNpQTlQVDBnUVhKeVlYa2dKaVlnS0hSUFprSWdQVDA5SUNkdWRXMWlaWEluSUh4OElIUlBaa0lnUFQwOUlDZGliMjlzWldGdUp5QjhmQ0IwVDJaQ0lEMDlQU0FuYzNSeWFXNW5KeUI4ZkNCaUlHbHVjM1JoYm1ObGIyWWdUblZ0WW1WeUlDa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhXekJkSUQwZ1lWc3dYU0F0SUdJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0JwWmlnb2RFOW1RU0E5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUVNBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprRWdQVDA5SUNkemRISnBibWNuSUh4OElHRWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU0FtSmlBZ1lpNWpiMjV6ZEhKMVkzUnZjaUE5UFQwZ1FYSnlZWGtwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpV3pCZElEMGdZU0F0SUdKYk1GMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaGhMbU52Ym5OMGNuVmpkRzl5SUQwOVBTQkJjbkpoZVNBbUppQmlMbU52Ym5OMGNuVmpkRzl5SUQwOVBTQkJjbkpoZVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBJRDBnTUN3Z2JHVnVRU0E5SUdFdWJHVnVaM1JvTENCc1pXNUNJRDBnWWk1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCeVpYUkJjbklnUFNCYlhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VvYVR4c1pXNUJJSHg4SUdrZ1BDQnNaVzVDS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ2gwZVhCbGIyWWdZVnRwWFNBOVBUMGdKMjUxYldKbGNpY2dmSHdnWVZ0cFhTQnBibk4wWVc1alpXOW1JRTUxYldKbGNpa2dKaVlnZEhsd1pXOW1JQ2gwZVhCbGIyWWdZbHRwWFNBOVBUMGdKMjUxYldKbGNpY2dmSHdnWWx0cFhTQnBibk4wWVc1alpXOW1JRTUxYldKbGNpa3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkRUZ5Y2x0cFhTQTlJR0ZiYVYwZ0xTQmlXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwUVhKeVcybGRJRDBnWWx0cFhTQTlQU0IxYm1SbFptbHVaV1FnUHlCaFcybGRJRG9nWVZ0cFhTQjhmQ0JpVzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCeVpYUkJjbkk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQXdPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUcxMWJDaGhMR0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZEU5bVFTQTlJSFI1Y0dWdlppQmhPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjBUMlpDSUQwZ2RIbHdaVzltSUdJN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGeWNqdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnb2RFOW1RU0E5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUVNBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprRWdQVDA5SUNkemRISnBibWNuSUh4OElHRWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU0FtSmlBb2RFOW1RaUE5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUWlBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprSWdQVDA5SUNkemRISnBibWNuSUh4OElHSWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZU0FxSUdJN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVPMXh5WEc0Z0lDQWdJQ0FnSUdsbUtHRXVZMjl1YzNSeWRXTjBiM0lnUFQwOUlFRnljbUY1SUNZbUlDaDBUMlpDSUQwOVBTQW5iblZ0WW1WeUp5QjhmQ0IwVDJaQ0lEMDlQU0FuWW05dmJHVmhiaWNnZkh3Z2RFOW1RaUE5UFQwZ0ozTjBjbWx1WnljZ2ZId2dZaUJwYm5OMFlXNWpaVzltSUU1MWJXSmxjaUFwS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWdUlEMGdZUzVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnljaUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRHBzWlc1OUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2x0cFhTQTlJR0ZiYVYwZ0tpQmlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaGNuSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lHbG1LQ2gwVDJaQklEMDlQU0FuYm5WdFltVnlKeUI4ZkNCMFQyWkJJRDA5UFNBblltOXZiR1ZoYmljZ2ZId2dkRTltUVNBOVBUMGdKM04wY21sdVp5Y2dmSHdnWVNCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lBcElDWW1JR0l1WTI5dWMzUnlkV04wYjNJZ1BUMDlJRUZ5Y21GNUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVnVJRDBnWWk1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2lBOUlFRnljbUY1TG1Gd2NHeDVLRzUxYkd3c2UyeGxibWQwYURwc1pXNTlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGeWNsdHBYU0E5SUdFZ0tpQmlXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhjbkk3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQXdPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdScGRpaGhMR0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZEU5bVFTQTlJSFI1Y0dWdlppQmhPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQjBUMlpDSUQwZ2RIbHdaVzltSUdJN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGeWNqdGNjbHh1SUNBZ0lDQWdJQ0JwWmlnb2RFOW1RU0E5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUVNBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprRWdQVDA5SUNkemRISnBibWNuSUh4OElHRWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU0FtSmlBb2RFOW1RaUE5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkRTltUWlBOVBUMGdKMkp2YjJ4bFlXNG5JSHg4SUhSUFprSWdQVDA5SUNkemRISnBibWNuSUh4OElHSWdhVzV6ZEdGdVkyVnZaaUJPZFcxaVpYSWdLU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZU0F2SUdJN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0N1hISmNiaUFnSUNBZ0lDQWdhV1lvWVM1amIyNXpkSEoxWTNSdmNpQTlQVDBnUVhKeVlYa2dKaVlnS0hSUFprSWdQVDA5SUNkdWRXMWlaWEluSUh4OElIUlBaa0lnUFQwOUlDZGliMjlzWldGdUp5QjhmQ0IwVDJaQ0lEMDlQU0FuYzNSeWFXNW5KeUI4ZkNCaUlHbHVjM1JoYm1ObGIyWWdUblZ0WW1WeUlDQXBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1Z1SUQwZ1lTNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNpQTlJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NlMnhsYm1kMGFEcHNaVzU5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnljbHRwWFNBOUlHRmJhVjBnTHlCaU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoY25JN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtDaDBUMlpCSUQwOVBTQW5iblZ0WW1WeUp5QjhmQ0IwVDJaQklEMDlQU0FuWW05dmJHVmhiaWNnZkh3Z2RFOW1RU0E5UFQwZ0ozTjBjbWx1WnljZ2ZId2dZU0JwYm5OMFlXNWpaVzltSUU1MWJXSmxjaUFwSUNZbUlHSXVZMjl1YzNSeWRXTjBiM0lnUFQwOUlFRnljbUY1S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWdUlEMGdZaTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnljaUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRHBzWlc1OUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2x0cFhTQTlJR0VnTHlCaVcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaGNuSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBd08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2JXOWtLR0VzWWlrZ2UxeHlYRzRnSUNBZ0lDQWdJR2xtS0hSNWNHVnZaaUJoSUQwOVBTQW5jM1J5YVc1bkp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhJRDBnY0dGeWMyVkpiblFvWVNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtIUjVjR1Z2WmlCaUlEMDlQU0FuYzNSeWFXNW5KeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpSUQwZ2NHRnljMlZKYm5Rb1lpazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCaElDVWdZanRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCamJHRnRjQ2h1ZFcwc0lHMXBiaXdnYldGNEtTQjdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2JXbHVJRDRnYldGNEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJRzF0SUQwZ2JXRjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWGdnUFNCdGFXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMXBiaUE5SUcxdE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXRhVzRvVFdGMGFDNXRZWGdvYm5WdExDQnRhVzRwTENCdFlYZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhKaFpHbGhibk5VYjBSbFozSmxaWE1vZG1Gc0tTQjdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFpoYkM5a1pXZFViMUpoWkhNN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCMllYSWdjbUZrYVdGdWMxOTBiMTlrWldkeVpXVnpJRDBnY21Ga2FXRnVjMVJ2UkdWbmNtVmxjenRjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCa1pXZHlaV1Z6Vkc5U1lXUnBZVzV6S0haaGJDa2dlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIyWVd3cVpHVm5WRzlTWVdSek8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ2RtRnlJR1JsWjNKbFpYTmZkRzlmY21Ga2FXRnVjeUE5SUhKaFpHbGhibk5VYjBSbFozSmxaWE03WEhKY2JseHlYRzRnSUNBZ2RtRnlJR2hsYkhCbGNreGxibWQwYUVGeWNtRjVJRDBnV3pBc01Dd3dMREFzTUN3d1hUdGNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJzWlc1bmRHZ29ZWEp5TVN4aGNuSXlLWHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBlWEJsYjJZZ1lYSnlNU0E5UFQwZ0oyNTFiV0psY2ljZ2ZId2dZWEp5TVNCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdGeWNqSWdQU0JoY25JeUlIeDhJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aGhjbkl4SUMwZ1lYSnlNaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0NGaGNuSXlLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZWEp5TWlBOUlHaGxiSEJsY2t4bGJtZDBhRUZ5Y21GNU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCMllYSWdhU3hzWlc0Z1BTQk5ZWFJvTG0xcGJpaGhjbkl4TG14bGJtZDBhQ3hoY25JeUxteGxibWQwYUNrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGa1pHVmtUR1Z1WjNSb0lEMGdNRHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaFpHUmxaRXhsYm1kMGFDQXJQU0JOWVhSb0xuQnZkeWhoY25JeVcybGRMV0Z5Y2pGYmFWMHNNaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9ZV1JrWldSTVpXNW5kR2dwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHNXZjbTFoYkdsNlpTaDJaV01wZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCa2FYWW9kbVZqTENCc1pXNW5kR2dvZG1WaktTazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnY21kaVZHOUljMndvZG1Gc0tYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2NpQTlJSFpoYkZzd1hUc2dkbUZ5SUdjZ1BTQjJZV3hiTVYwN0lIWmhjaUJpSUQwZ2RtRnNXekpkTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ0WVhnZ1BTQk5ZWFJvTG0xaGVDaHlMQ0JuTENCaUtTd2diV2x1SUQwZ1RXRjBhQzV0YVc0b2Npd2daeXdnWWlrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdnc0lITXNJR3dnUFNBb2JXRjRJQ3NnYldsdUtTQXZJREk3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtS0cxaGVDQTlQU0J0YVc0cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCb0lEMGdjeUE5SURBN0lDOHZJR0ZqYUhKdmJXRjBhV05jY2x4dUlDQWdJQ0FnSUNCOVpXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdRZ1BTQnRZWGdnTFNCdGFXNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITWdQU0JzSUQ0Z01DNDFJRDhnWkNBdklDZ3lJQzBnYldGNElDMGdiV2x1S1NBNklHUWdMeUFvYldGNElDc2diV2x1S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LRzFoZUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhJNklHZ2dQU0FvWnlBdElHSXBJQzhnWkNBcklDaG5JRHdnWWlBL0lEWWdPaUF3S1RzZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJR2M2SUdnZ1BTQW9ZaUF0SUhJcElDOGdaQ0FySURJN0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JpT2lCb0lEMGdLSElnTFNCbktTQXZJR1FnS3lBME95QmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvSUM4OUlEWTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdXMmdzSUhNc0lHd3NkbUZzV3pOZFhUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHaHpiRlJ2VW1kaUtIWmhiQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2dnUFNCMllXeGJNRjA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSE1nUFNCMllXeGJNVjA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR3dnUFNCMllXeGJNbDA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCeUxDQm5MQ0JpTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmloeklEMDlJREFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5SUQwZ1p5QTlJR0lnUFNCc095QXZMeUJoWTJoeWIyMWhkR2xqWEhKY2JpQWdJQ0FnSUNBZ2ZXVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2gxWlRKeVoySW9jQ3dnY1N3Z2RDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMElEd2dNQ2tnZENBclBTQXhPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RDQStJREVwSUhRZ0xUMGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUWdQQ0F4THpZcElISmxkSFZ5YmlCd0lDc2dLSEVnTFNCd0tTQXFJRFlnS2lCME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZENBOElERXZNaWtnY21WMGRYSnVJSEU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDBJRHdnTWk4ektTQnlaWFIxY200Z2NDQXJJQ2h4SUMwZ2NDa2dLaUFvTWk4eklDMGdkQ2tnS2lBMk8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCeElEMGdiQ0E4SURBdU5TQS9JR3dnS2lBb01TQXJJSE1wSURvZ2JDQXJJSE1nTFNCc0lDb2djenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhBZ1BTQXlJQ29nYkNBdElIRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JvZFdVeWNtZGlLSEFzSUhFc0lHZ2dLeUF4THpNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbklEMGdhSFZsTW5KbllpaHdMQ0J4TENCb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1lpQTlJR2gxWlRKeVoySW9jQ3dnY1N3Z2FDQXRJREV2TXlrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1czSXNJR2NnTENCaUxDQjJZV3hiTTExZE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR3hwYm1WaGNpaDBMQ0IwVFdsdUxDQjBUV0Y0TENCMllXeDFaVEVzSUhaaGJIVmxNaWw3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kbUZzZFdVeElEMDlQU0IxYm1SbFptbHVaV1FnZkh3Z2RtRnNkV1V5SUQwOVBTQjFibVJsWm1sdVpXUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JHbHVaV0Z5S0hRc01Dd3hMSFJOYVc0c2RFMWhlQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR2xtS0hRZ1BEMGdkRTFwYmlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc2RXVXhPMXh5WEc0Z0lDQWdJQ0FnSUgxbGJITmxJR2xtS0hRZ1BqMGdkRTFoZUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIyWVd4MVpUSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3WlhKaklEMGdkRTFoZUNBOVBUMGdkRTFwYmlBL0lEQWdPaUFvZEMxMFRXbHVLUzhvZEUxaGVDMTBUV2x1S1R0Y2NseHVJQ0FnSUNBZ0lDQnBaaWdoZG1Gc2RXVXhMbXhsYm1kMGFDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMllXeDFaVEVnS3lBb2RtRnNkV1V5TFhaaGJIVmxNU2txY0dWeVl6dGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSFpoYkhWbE1TNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUdGeWNpQTlJRUZ5Y21GNUxtRndjR3g1S0NCdWRXeHNMQ0I3SUd4bGJtZDBhRG9nYkdWdUlIMGdLVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyUFRFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGNuSmJhVjBnUFNCMllXeDFaVEZiYVYwZ0t5QW9kbUZzZFdVeVcybGRMWFpoYkhWbE1WdHBYU2txY0dWeVl6dGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGeWNqdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlISmhibVJ2YlNodGFXNHNiV0Y0S1h0Y2NseHVJQ0FnSUNBZ0lDQnBaaWh0WVhnZ1BUMDlJSFZ1WkdWbWFXNWxaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0cxcGJpQTlQVDBnZFc1a1pXWnBibVZrS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBiaUE5SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWGdnUFNBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjRJRDBnYldsdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV2x1SUQwZ2RXNWtaV1pwYm1Wa08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUdsbUtHMWhlQzVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVN3Z2JHVnVJRDBnYldGNExteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lXMXBiaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGFXNGdQU0JCY25KaGVTNWhjSEJzZVNodWRXeHNMSHRzWlc1bmRHZzZiR1Z1ZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHRnljaUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJtZDBhRHBzWlc1OUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEp1WkNBOUlFSk5UV0YwYUM1eVlXNWtiMjBvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnljbHRwWFNBOUlHMXBibHRwWFNBcklISnVaQ29vYldGNFcybGRMVzFwYmx0cFhTbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVhKeU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppaHRhVzRnUFQwOUlIVnVaR1ZtYVc1bFpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMXBiaUE5SURBN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnlibVJ0SUQwZ1FrMU5ZWFJvTG5KaGJtUnZiU2dwTzF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdGFXNGdLeUJ5Ym1SdEtpaHRZWGd0YldsdUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJqY21WaGRHVlFZWFJvS0hCdmFXNTBjeXdnYVc1VVlXNW5aVzUwY3l3Z2IzVjBWR0Z1WjJWdWRITXNJR05zYjNObFpDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsdVZHRnVaMlZ1ZEhNZ1BTQnBibFJoYm1kbGJuUnpJQ1ltSUdsdVZHRnVaMlZ1ZEhNdWJHVnVaM1JvSUQ4Z2FXNVVZVzVuWlc1MGN5QTZJSEJ2YVc1MGN6dGNjbHh1SUNBZ0lDQWdJQ0J2ZFhSVVlXNW5aVzUwY3lBOUlHOTFkRlJoYm1kbGJuUnpJQ1ltSUc5MWRGUmhibWRsYm5SekxteGxibWQwYUNBL0lHOTFkRlJoYm1kbGJuUnpJRG9nY0c5cGJuUnpPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQndZWFJvSUQwZ2MyaGhjR1ZmY0c5dmJDNXVaWGRUYUdGd1pTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnNaVzRnUFNCd2IybHVkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUhCaGRHZ3VjMlYwVUdGMGFFUmhkR0VvWTJ4dmMyVmtMQ0JzWlc0cE8xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJoZEdndWMyVjBWSEpwY0d4bFFYUW9jRzlwYm5SelcybGRXekJkTEhCdmFXNTBjMXRwWFZzeFhTeHZkWFJVWVc1blpXNTBjMXRwWFZzd1hTQXJJSEJ2YVc1MGMxdHBYVnN3WFN4dmRYUlVZVzVuWlc1MGMxdHBYVnN4WFNBcklIQnZhVzUwYzF0cFhWc3hYU3hwYmxSaGJtZGxiblJ6VzJsZFd6QmRJQ3NnY0c5cGJuUnpXMmxkV3pCZExHbHVWR0Z1WjJWdWRITmJhVjFiTVYwZ0t5QndiMmx1ZEhOYmFWMWJNVjBzYVN4MGNuVmxLVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHRjBhRnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdsdWFYUnBZWFJsUlhod2NtVnpjMmx2YmlobGJHVnRMR1JoZEdFc2NISnZjR1Z5ZEhrcGUxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCMllXd2dQU0JrWVhSaExuZzdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHNWxaV1J6Vm1Wc2IyTnBkSGtnUFNBdmRtVnNiMk5wZEhrb1B5RmJYRngzWEZ4a1hTa3ZMblJsYzNRb2RtRnNLVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdYMjVsWldSelVtRnVaRzl0SUQwZ2RtRnNMbWx1WkdWNFQyWW9KM0poYm1SdmJTY3BJQ0U5UFNBdE1UdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1pXeGxiVlI1Y0dVZ1BTQmxiR1Z0TG1SaGRHRXVkSGs3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJ5WVc1elptOXliU3hqYjI1MFpXNTBMR1ZtWm1WamREdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RHaHBjME52YlhBZ1BTQmxiR1Z0TG1OdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIUm9hWE5RY205d1pYSjBlU0E5SUhCeWIzQmxjblI1TzF4eVhHNGdJQ0FnSUNBZ0lHVnNaVzB1WTI5dGNDNW1jbUZ0WlVSMWNtRjBhVzl1SUQwZ01TOWxiR1Z0TG1OdmJYQXVaMnh2WW1Gc1JHRjBZUzVtY21GdFpWSmhkR1U3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x1VUc5cGJuUWdQU0JsYkdWdExtUmhkR0V1YVhBdlpXeGxiUzVqYjIxd0xtZHNiMkpoYkVSaGRHRXVabkpoYldWU1lYUmxPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnZkWFJRYjJsdWRDQTlJR1ZzWlcwdVpHRjBZUzV2Y0M5bGJHVnRMbU52YlhBdVoyeHZZbUZzUkdGMFlTNW1jbUZ0WlZKaGRHVTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIZHBaSFJvSUQwZ1pXeGxiUzVrWVhSaExuTjNJRDhnWld4bGJTNWtZWFJoTG5OM0lEb2dNRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhR1ZwWjJoMElEMGdaV3hsYlM1a1lYUmhMbk5vSUQ4Z1pXeGxiUzVrWVhSaExuTm9JRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYkc5dmNFbHVMQ0JzYjI5d1gybHVMQ0JzYjI5d1QzVjBMQ0JzYjI5d1gyOTFkRHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdkRzlYYjNKc1pDeG1jbTl0VjI5eWJHUXNabkp2YlVOdmJYQXNabkp2YlVOdmJYQlViMU4xY21aaFkyVXNZVzVqYUc5eVVHOXBiblFzZEdocGMweGhlV1Z5TEhSb2FYTkRiMjF3TEcxaGMyc3NkbUZzZFdWQmRGUnBiV1VzZG1Wc2IyTnBkSGxCZEZScGJXVTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHWnVJRDBnYm1WM0lFWjFibU4wYVc5dUtDazdYSEpjYmlBZ0lDQWdJQ0FnTHk5MllYSWdabTVUZEhJZ1BTQW5kbUZ5SUdadUlEMGdablZ1WTNScGIyNG9LWHNuSzNaaGJDc25PM1JvYVhNdWRpQTlJQ1JpYlY5eWREdDlKenRjY2x4dUlDQWdJQ0FnSUNBdkwyVjJZV3dvWm01VGRISXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnWm00Z1BTQmxkbUZzS0NkYlpuVnVZM1JwYjI0b0tYc25JQ3NnZG1Gc0t5YzdhV1lvSkdKdFgzSjBMbDlmYzJoaGNHVlBZbXBsWTNRcGUzUm9hWE11ZGoxemFHRndaVjl3YjI5c0xtTnNiMjVsS0NSaWJWOXlkQzUyS1R0OVpXeHpaWHQwYUdsekxuWTlKR0p0WDNKME8zMTlKeUFySUNkZEp5bGJNRjA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR0pwYm1SbFpFWnVJRDBnWm00dVltbHVaQ2gwYUdsektUdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2JuVnRTMlY1Y3lBOUlIQnliM0JsY25SNUxtdG1JRDhnWkdGMFlTNXJMbXhsYm1kMGFDQTZJREE3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCM2FXZG5iR1VnUFNCbWRXNWpkR2x2YmlCM2FXZG5iR1VvWm5KbGNTeGhiWEFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FTeHFMQ0JzWlc0Z1BTQjBhR2x6TG5CMkxteGxibWQwYUNBL0lIUm9hWE11Y0hZdWJHVnVaM1JvSURvZ01UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0ZrWkdWa1FXMXdjeUE5SUVGeWNtRjVMbUZ3Y0d4NUtHNTFiR3dzZTJ4bGJqcHNaVzU5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHbzlNRHRxUEd4bGJqdHFLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmtaR1ZrUVcxd2MxdHFYU0E5SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm5KbGNTQTlJRFU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGRHVnlZWFJwYjI1eklEMGdUV0YwYUM1bWJHOXZjaWgwYVcxbEttWnlaWEVwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FpQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bEtHazhhWFJsY21GMGFXOXVjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwzWmhjaUJ5Ym1RZ1BTQkNUVTFoZEdndWNtRnVaRzl0S0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYWowd08ybzhiR1Z1TzJvclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmtaR1ZrUVcxd2MxdHFYU0FyUFNBdFlXMXdJQ3NnWVcxd0tqSXFRazFOWVhSb0xuSmhibVJ2YlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dllXUmtaV1JCYlhCelcycGRJQ3M5SUMxaGJYQWdLeUJoYlhBcU1pcHlibVE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5MllYSWdjbTVrTWlBOUlFSk5UV0YwYUM1eVlXNWtiMjBvS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIQmxjbWx2WkhNZ1BTQjBhVzFsS21aeVpYRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3WlhKaklEMGdjR1Z5YVc5a2N5QXRJRTFoZEdndVpteHZiM0lvY0dWeWFXOWtjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCaGNuSWdQU0JCY25KaGVTNWhjSEJzZVNoN2JHVnVaM1JvT214bGJuMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhzWlc0K01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2FqMHdPMm84YkdWdU8yb3JQVEVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2x0cVhTQTlJSFJvYVhNdWNIWmJhbDBnS3lCaFpHUmxaRUZ0Y0hOYmFsMGdLeUFvTFdGdGNDQXJJR0Z0Y0NveUtrSk5UV0YwYUM1eVlXNWtiMjBvS1NrcWNHVnlZenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMMkZ5Y2x0cVhTQTlJSFJvYVhNdWNIWmJhbDBnS3lCaFpHUmxaRUZ0Y0hOYmFsMGdLeUFvTFdGdGNDQXJJR0Z0Y0NveUtuSnVaQ2txY0dWeVl6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwyRnljbHRwWFNBOUlIUm9hWE11Y0haYmFWMGdLeUJoWkdSbFpFRnRjQ0FySUdGdGNERXFjR1Z5WXlBcklHRnRjRElxS0RFdGNHVnlZeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lYSnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0hZZ0t5QmhaR1JsWkVGdGNITmJNRjBnS3lBb0xXRnRjQ0FySUdGdGNDb3lLa0pOVFdGMGFDNXlZVzVrYjIwb0tTa3FjR1Z5WXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMHVZbWx1WkNoMGFHbHpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGMxQnliM0JsY25SNUxteHZiM0JKYmlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc2IyOXdTVzRnUFNCMGFHbHpVSEp2Y0dWeWRIa3ViRzl2Y0VsdUxtSnBibVFvZEdocGMxQnliM0JsY25SNUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHOXZjRjlwYmlBOUlHeHZiM0JKYmp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhOUWNtOXdaWEowZVM1c2IyOXdUM1YwS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4dmIzQlBkWFFnUFNCMGFHbHpVSEp2Y0dWeWRIa3ViRzl2Y0U5MWRDNWlhVzVrS0hSb2FYTlFjbTl3WlhKMGVTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeHZiM0JmYjNWMElEMGdiRzl2Y0U5MWREdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFpoY2lCc2IyOXdTVzVFZFhKaGRHbHZiaUE5SUdaMWJtTjBhVzl1SUd4dmIzQkpia1IxY21GMGFXOXVLSFI1Y0dVc1pIVnlZWFJwYjI0cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkc5dmNFbHVLSFI1Y0dVc1pIVnlZWFJwYjI0c2RISjFaU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTNWlhVzVrS0hSb2FYTXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjJZWElnYkc5dmNFOTFkRVIxY21GMGFXOXVJRDBnWm5WdVkzUnBiMjRnYkc5dmNFOTFkRVIxY21GMGFXOXVLSFI1Y0dVc1pIVnlZWFJwYjI0cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkc5dmNFOTFkQ2gwZVhCbExHUjFjbUYwYVc5dUxIUnlkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIMHVZbWx1WkNoMGFHbHpLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lvZEdocGN5NW5aWFJXWVd4MVpVRjBWR2x0WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVUYwVkdsdFpTQTlJSFJvYVhNdVoyVjBWbUZzZFdWQmRGUnBiV1V1WW1sdVpDaDBhR2x6S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1LSFJvYVhNdVoyVjBWbVZzYjJOcGRIbEJkRlJwYldVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtVnNiMk5wZEhsQmRGUnBiV1VnUFNCMGFHbHpMbWRsZEZabGJHOWphWFI1UVhSVWFXMWxMbUpwYm1Rb2RHaHBjeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCMllYSWdZMjl0Y0NBOUlHVnNaVzB1WTI5dGNDNW5iRzlpWVd4RVlYUmhMbkJ5YjJwbFkzUkpiblJsY21aaFkyVXVZbWx1WkNobGJHVnRMbU52YlhBdVoyeHZZbUZzUkdGMFlTNXdjbTlxWldOMFNXNTBaWEptWVdObEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JHOXZhMEYwS0dWc1pXMHhMR1ZzWlcweUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR1pXWldNZ1BTQmJaV3hsYlRKYk1GMHRaV3hsYlRGYk1GMHNaV3hsYlRKYk1WMHRaV3hsYlRGYk1WMHNaV3hsYlRKYk1sMHRaV3hsYlRGYk1sMWRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0dsMFkyZ2dQU0JOWVhSb0xtRjBZVzR5S0daV1pXTmJNRjBzVFdGMGFDNXpjWEowS0daV1pXTmJNVjBxWmxabFkxc3hYU3RtVm1Wald6SmRLbVpXWldOYk1sMHBLUzlrWldkVWIxSmhaSE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCNVlYY2dQU0F0VFdGMGFDNWhkR0Z1TWlobVZtVmpXekZkTEdaV1pXTmJNbDBwTDJSbFoxUnZVbUZrY3p0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnQ1WVhjc2NHbDBZMmdzTUYwN1hISmNiaUFnSUNBZ0lDQWdmVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaV0Z6WlU5MWRDaDBMQ0IyWVd3eExDQjJZV3d5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQzBvZG1Gc01pMTJZV3d4S1NBcUlIUXFLSFF0TWlrZ0t5QjJZV3d4TzF4eVhHNGdJQ0FnSUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHNWxZWEpsYzNSTFpYa29kR2x0WlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBMQ0JzWlc0Z1BTQmtZWFJoTG1zdWJHVnVaM1JvTEdsdVpHVjRMR3RsZVZScGJXVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0ZrWVhSaExtc3ViR1Z1WjNSb0lIeDhJSFI1Y0dWdlppaGtZWFJoTG10Yk1GMHBJRDA5UFNBbmJuVnRZbVZ5SnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JyWlhsVWFXMWxJRDBnTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRJRDBnTFRFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhVzFsSUNvOUlHVnNaVzB1WTI5dGNDNW5iRzlpWVd4RVlYUmhMbVp5WVcxbFVtRjBaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhVzFsSUR3Z1pHRjBZUzVyV3pCZExuUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUNBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2EyVjVWR2x0WlNBOUlHUmhkR0V1YTFzd1hTNTBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TFRFN2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUnBiV1VnUFQwOUlHUmhkR0V1YTF0cFhTNTBLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0SUQwZ2FTQXJJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnJaWGxVYVcxbElEMGdaR0YwWVM1clcybGRMblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb2RHbHRaVDVrWVhSaExtdGJhVjB1ZENBbUppQjBhVzFsUEdSaGRHRXVhMXRwS3pGZExuUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kR2x0WlMxa1lYUmhMbXRiYVYwdWRDQStJR1JoZEdFdWExdHBLekZkTG5RZ0xTQjBhVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQ0E5SUdrZ0t5QXlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3RsZVZScGJXVWdQU0JrWVhSaExtdGJhU3N4WFM1ME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVDQTlJR2tnS3lBeE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGxlVlJwYldVZ1BTQmtZWFJoTG10YmFWMHVkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR2x1WkdWNElEMDlQU0F0TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0SUQwZ2FTQXJJREU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd0bGVWUnBiV1VnUFNCa1lYUmhMbXRiYVYwdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYjJJZ1BTQjdmVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiMkl1YVc1a1pYZ2dQU0JwYm1SbGVEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2IySXVkR2x0WlNBOUlHdGxlVlJwYldVdlpXeGxiUzVqYjIxd0xtZHNiMkpoYkVSaGRHRXVabkpoYldWU1lYUmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2IySTdYSEpjYmlBZ0lDQWdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYTJWNUtHbHVaQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCdllpd2dhU3dnYkdWdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2haR0YwWVM1ckxteGxibWQwYUNCOGZDQjBlWEJsYjJZb1pHRjBZUzVyV3pCZEtTQTlQVDBnSjI1MWJXSmxjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NkVWFHVWdjSEp2Y0dWeWRIa2dhR0Z6SUc1dklHdGxlV1p5WVcxbElHRjBJR2x1WkdWNElDY2dLeUJwYm1RcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdVpDQXRQU0F4TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2WWlBOUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJwYldVNklHUmhkR0V1YTF0cGJtUmRMblF2Wld4bGJTNWpiMjF3TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZTWVhSbFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmhjbkk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0dsdVpDQTlQVDBnWkdGMFlTNXJMbXhsYm1kMGFDQXRJREVnSmlZZ0lXUmhkR0V1YTF0cGJtUmRMbWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlJRDBnWkdGMFlTNXJXMmx1WkMweFhTNWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnljaUE5SUdSaGRHRXVhMXRwYm1SZExuTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVnVJRDBnWVhKeUxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWlXMmxkSUQwZ1lYSnlXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZZanRjY2x4dUlDQWdJQ0FnSUNCOU8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbWNtRnRaWE5VYjFScGJXVW9abkpoYldWekxHWndjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGbWNITXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm5CeklEMGdaV3hsYlM1amIyMXdMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVlNZWFJsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm1jbUZ0WlhNdlpuQnpPMXh5WEc0Z0lDQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhScGJXVlViMFp5WVcxbGN5aDBMR1p3Y3lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRjBJQ1ltSUhRZ0lUMDlJREFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSFJwYldVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0lXWndjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWNITWdQU0JsYkdWdExtTnZiWEF1WjJ4dlltRnNSR0YwWVM1bWNtRnRaVkpoZEdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFFxWm5Cek8xeHlYRzRnSUNBZ0lDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSE5sWldSU1lXNWtiMjBvYzJWbFpDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFSk5UV0YwYUM1elpXVmtjbUZ1Wkc5dEtISmhibVJUWldWa0lDc2djMlZsWkNrN1hISmNiaUFnSUNBZ0lDQWdmVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjMjkxY21ObFVtVmpkRUYwVkdsdFpTZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVnNaVzB1YzI5MWNtTmxVbVZqZEVGMFZHbHRaU2dwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSFJwYldVc2RtVnNiMk5wZEhrc0lIWmhiSFZsTEhSbGVIUkpibVJsZUN4MFpYaDBWRzkwWVd3c2MyVnNaV04wYjNKV1lXeDFaVHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdhVzVrWlhnZ1BTQmxiR1Z0TG1SaGRHRXVhVzVrTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJvWVhOUVlYSmxiblFnUFNBaElTaGxiR1Z0TG1ocFpYSmhjbU5vZVNBbUppQmxiR1Z0TG1ocFpYSmhjbU5vZVM1c1pXNW5kR2dwTzF4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJ3WVhKbGJuUTdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlISmhibVJUWldWa0lEMGdUV0YwYUM1bWJHOXZjaWhOWVhSb0xuSmhibVJ2YlNncEtqRXdNREF3TURBcE8xeHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR1Y0WldOMWRHVkZlSEJ5WlhOemFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0Y5dVpXVmtjMUpoYm1SdmJTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WldWa1VtRnVaRzl0S0hKaGJtUlRaV1ZrS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbVp5WVcxbFJYaHdjbVZ6YzJsdmJrbGtJRDA5UFNCbGJHVnRMbWRzYjJKaGJFUmhkR0V1Wm5KaGJXVkpaQ0FtSmlCMGFHbHpMblI1Y0dVZ0lUMDlJQ2QwWlhoMFUyVnNaV04wYjNJbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppaDBhR2x6TG14dlkyc3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJJRDBnWkhWd2JHbGpZWFJsVUhKdmNHVnlkSGxXWVd4MVpTaDBhR2x6TG5CMkxIUm9hWE11YlhWc2RDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMblI1Y0dVZ1BUMDlJQ2QwWlhoMFUyVnNaV04wYjNJbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSSmJtUmxlQ0E5SUhSb2FYTXVkR1Y0ZEVsdVpHVjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRGUnZkR0ZzSUQwZ2RHaHBjeTUwWlhoMFZHOTBZV3c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeGxZM1J2Y2xaaGJIVmxJRDBnZEdocGN5NXpaV3hsWTNSdmNsWmhiSFZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0NGMGFHbHpUR0Y1WlhJcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzB4aGVXVnlJRDBnWld4bGJTNXNZWGxsY2tsdWRHVnlabUZqWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE5EYjIxd0lEMGdaV3hsYlM1amIyMXdMbU52YlhCSmJuUmxjbVpoWTJVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiMWR2Y214a0lEMGdkR2hwYzB4aGVXVnlMblJ2VjI5eWJHUXVZbWx1WkNoMGFHbHpUR0Y1WlhJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabkp2YlZkdmNteGtJRDBnZEdocGMweGhlV1Z5TG1aeWIyMVhiM0pzWkM1aWFXNWtLSFJvYVhOTVlYbGxjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWNtOXRRMjl0Y0NBOUlIUm9hWE5NWVhsbGNpNW1jbTl0UTI5dGNDNWlhVzVrS0hSb2FYTk1ZWGxsY2lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWE5ySUQwZ2RHaHBjMHhoZVdWeUxtMWhjMnNnUHlCMGFHbHpUR0Y1WlhJdWJXRnpheTVpYVc1a0tIUm9hWE5NWVhsbGNpazZiblZzYkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnliMjFEYjIxd1ZHOVRkWEptWVdObElEMGdabkp2YlVOdmJYQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JWFJ5WVc1elptOXliU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wZ1BTQmxiR1Z0TG14aGVXVnlTVzUwWlhKbVlXTmxLRndpUVVSQ1JTQlVjbUZ1YzJadmNtMGdSM0p2ZFhCY0lpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm1Ob2IzSlFiMmx1ZENBOUlIUnlZVzV6Wm05eWJTNWhibU5vYjNKUWIybHVkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aV3hsYlZSNWNHVWdQVDA5SURRZ0ppWWdJV052Ym5SbGJuUXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkQ0E5SUhSb2FYTk1ZWGxsY2loY0lrRkVRa1VnVW05dmRDQldaV04wYjNKeklFZHliM1Z3WENJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtDRmxabVpsWTNRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV1ptWldOMElEMGdkR2hwYzB4aGVXVnlLRFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2hoYzFCaGNtVnVkQ0E5SUNFaEtHVnNaVzB1YUdsbGNtRnlZMmg1SUNZbUlHVnNaVzB1YUdsbGNtRnlZMmg1TG14bGJtZDBhQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0doaGMxQmhjbVZ1ZENBbUppQWhjR0Z5Wlc1MEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoY21WdWRDQTlJR1ZzWlcwdWFHbGxjbUZ5WTJoNVd6QmRMbXhoZVdWeVNXNTBaWEptWVdObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViRzlqYXlBOUlIUnlkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVaMlYwVUhKbFZtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSUWNtVldZV3gxWlNncE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxJRDBnZEdocGN5NXdkanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2x0WlNBOUlIUm9hWE11WTI5dGNDNXlaVzVrWlhKbFpFWnlZVzFsTDNSb2FYTXVZMjl0Y0M1bmJHOWlZV3hFWVhSaExtWnlZVzFsVW1GMFpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9ibVZsWkhOV1pXeHZZMmwwZVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaV3h2WTJsMGVTQTlJSFpsYkc5amFYUjVRWFJVYVcxbEtIUnBiV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0pwYm1SbFpFWnVLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpuSmhiV1ZGZUhCeVpYTnphVzl1U1dRZ1BTQmxiR1Z0TG1kc2IySmhiRVJoZEdFdVpuSmhiV1ZKWkR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NiR1Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmloMGFHbHpMbTExYkhRcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZEhsd1pXOW1JSFJvYVhNdWRpQTlQVDBnSjI1MWJXSmxjaWNnZkh3Z2RHaHBjeTUySUdsdWMzUmhibU5sYjJZZ1RuVnRZbVZ5SUh4OElIUm9hWE11ZGlCcGJuTjBZVzVqWlc5bUlGTjBjbWx1WnlCOGZDQjBlWEJsYjJZZ2RHaHBjeTUySUQwOVBTQW5jM1J5YVc1bkp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUySUNvOUlIUm9hWE11YlhWc2REdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFsYkhObElHbG1LSFJvYVhNdWRpNXNaVzVuZEdnZ1BUMDlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRpQTlJSFJvYVhNdWRsc3dYU0FxSUhSb2FYTXViWFZzZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsYmlBOUlIUm9hWE11ZGk1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc2RXVWdQVDA5SUhSb2FYTXVkaWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkaUE5SUd4bGJpQTlQVDBnTWlBL0lGdDJZV3gxWlZzd1hTeDJZV3gxWlZzeFhWMGdPaUJiZG1Gc2RXVmJNRjBzZG1Gc2RXVmJNVjBzZG1Gc2RXVmJNbDFkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tnS3owZ01TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRsdHBYU0FxUFNCMGFHbHpMbTExYkhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11ZGk1c1pXNW5kR2dnUFQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTJJRDBnZEdocGN5NTJXekJkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSNWNHVnZaaUIwYUdsekxuWWdQVDA5SUNkdWRXMWlaWEluSUh4OElIUm9hWE11ZGlCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lCOGZDQjBhR2x6TG5ZZ2FXNXpkR0Z1WTJWdlppQlRkSEpwYm1jZ2ZId2dkSGx3Wlc5bUlIUm9hWE11ZGlBOVBUMGdKM04wY21sdVp5Y3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVzWVhOMFZtRnNkV1VnSVQwOUlIUm9hWE11ZGlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXNZWE4wVm1Gc2RXVWdQU0IwYUdsekxuWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WkdZZ1BTQjBjblZsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVpXeHpaU0JwWmlnZ2RHaHBjeTUyTGw5c1pXNW5kR2dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9JWE5vWVhCbGMwVnhkV0ZzS0hSb2FYTXVkaXgwYUdsekxteHZZMkZzVTJoaGNHVkRiMnhzWldOMGFXOXVMbk5vWVhCbGMxc3dYU2twZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXUm1JRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbXh2WTJGc1UyaGhjR1ZEYjJ4c1pXTjBhVzl1TG5KbGJHVmhjMlZUYUdGd1pYTW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG14dlkyRnNVMmhoY0dWRGIyeHNaV04wYVc5dUxtRmtaRk5vWVhCbEtITm9ZWEJsWDNCdmIyd3VZMnh2Ym1Vb2RHaHBjeTUyS1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVnVJRDBnZEdocGN5NTJMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locElEMGdNRHNnYVNBOElHeGxianNnYVNBclBTQXhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxuWmJhVjBnSVQwOUlIUm9hWE11YkdGemRGWmhiSFZsVzJsZEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1c1lYTjBWbUZzZFdWYmFWMGdQU0IwYUdsekxuWmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV1JtSUQwZ2RISjFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1c2IyTnJJRDBnWm1Gc2MyVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbGVHVmpkWFJsUlhod2NtVnpjMmx2Ymp0Y2NseHVJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdiMkl1YVc1cGRHbGhkR1ZGZUhCeVpYTnphVzl1SUQwZ2FXNXBkR2xoZEdWRmVIQnlaWE56YVc5dU8xeHlYRzRnSUNBZ2NtVjBkWEp1SUc5aU8xeHlYRzU5S0NrcE8xeHVkbUZ5SUZOb1lYQmxSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU0E5SUNobWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ2RtRnlJRzlpSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJR055WldGMFpWTm9ZWEJsU1c1MFpYSm1ZV05sT21OeVpXRjBaVk5vWVhCbFNXNTBaWEptWVdObExGeHlYRzRnSUNBZ0lDQWdJR055WldGMFpVZHliM1Z3U1c1MFpYSm1ZV05sT21OeVpXRjBaVWR5YjNWd1NXNTBaWEptWVdObExGeHlYRzRnSUNBZ0lDQWdJR055WldGMFpWUnlhVzFKYm5SbGNtWmhZMlU2WTNKbFlYUmxWSEpwYlVsdWRHVnlabUZqWlN4Y2NseHVJQ0FnSUNBZ0lDQmpjbVZoZEdWVGRISnZhMlZKYm5SbGNtWmhZMlU2WTNKbFlYUmxVM1J5YjJ0bFNXNTBaWEptWVdObExGeHlYRzRnSUNBZ0lDQWdJR055WldGMFpWUnlZVzV6Wm05eWJVbHVkR1Z5Wm1GalpUcGpjbVZoZEdWVWNtRnVjMlp2Y20xSmJuUmxjbVpoWTJVc1hISmNiaUFnSUNBZ0lDQWdZM0psWVhSbFJXeHNhWEJ6WlVsdWRHVnlabUZqWlRwamNtVmhkR1ZGYkd4cGNITmxTVzUwWlhKbVlXTmxMRnh5WEc0Z0lDQWdJQ0FnSUdOeVpXRjBaVk4wWVhKSmJuUmxjbVpoWTJVNlkzSmxZWFJsVTNSaGNrbHVkR1Z5Wm1GalpTeGNjbHh1SUNBZ0lDQWdJQ0JqY21WaGRHVlNaV04wU1c1MFpYSm1ZV05sT21OeVpXRjBaVkpsWTNSSmJuUmxjbVpoWTJVc1hISmNiaUFnSUNBZ0lDQWdZM0psWVhSbFVtOTFibVJsWkVsdWRHVnlabUZqWlRwamNtVmhkR1ZTYjNWdVpHVmtTVzUwWlhKbVlXTmxMRnh5WEc0Z0lDQWdJQ0FnSUdOeVpXRjBaVkpsY0dGMFpXRnlTVzUwWlhKbVlXTmxPbU55WldGMFpWSmxjR0YwWldGeVNXNTBaWEptWVdObExGeHlYRzRnSUNBZ0lDQWdJR055WldGMFpWQmhkR2hKYm5SbGNtWmhZMlU2WTNKbFlYUmxVR0YwYUVsdWRHVnlabUZqWlN4Y2NseHVJQ0FnSUNBZ0lDQmpjbVZoZEdWR2FXeHNTVzUwWlhKbVlXTmxPbU55WldGMFpVWnBiR3hKYm5SbGNtWmhZMlZjY2x4dUlDQWdJSDA3WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJqY21WaGRHVlRhR0Z3WlVsdWRHVnlabUZqWlNoemFHRndaWE1zZG1sbGR5eHdjbTl3WlhKMGVVZHliM1Z3S1h0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2MyaGhjR1ZKYm5SbGNtWmhZMlZHWVdOMGIzSjVLSE5vWVhCbGN5eDJhV1YzTEhCeWIzQmxjblI1UjNKdmRYQXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdablZ1WTNScGIyNGdZM0psWVhSbFIzSnZkWEJKYm5SbGNtWmhZMlVvYzJoaGNHVnpMSFpwWlhjc2NISnZjR1Z5ZEhsSGNtOTFjQ2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdkeWIzVndTVzUwWlhKbVlXTmxSbUZqZEc5eWVTaHphR0Z3WlhNc2RtbGxkeXh3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHTnlaV0YwWlVacGJHeEpiblJsY21aaFkyVW9jMmhoY0dVc2RtbGxkeXh3Y205d1pYSjBlVWR5YjNWd0tYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdabWxzYkVsdWRHVnlabUZqWlVaaFkzUnZjbmtvYzJoaGNHVXNkbWxsZHl4d2NtOXdaWEowZVVkeWIzVndLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR055WldGMFpWTjBjbTlyWlVsdWRHVnlabUZqWlNoemFHRndaU3gyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRISnZhMlZKYm5SbGNtWmhZMlZHWVdOMGIzSjVLSE5vWVhCbExIWnBaWGNzY0hKdmNHVnlkSGxIY205MWNDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQmpjbVZoZEdWVWNtbHRTVzUwWlhKbVlXTmxLSE5vWVhCbExIWnBaWGNzY0hKdmNHVnlkSGxIY205MWNDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5YVcxSmJuUmxjbVpoWTJWR1lXTjBiM0o1S0hOb1lYQmxMSFpwWlhjc2NISnZjR1Z5ZEhsSGNtOTFjQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJqY21WaGRHVlVjbUZ1YzJadmNtMUpiblJsY21aaFkyVW9jMmhoY0dVc2RtbGxkeXh3Y205d1pYSjBlVWR5YjNWd0tYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRTVzUwWlhKbVlXTmxSbUZqZEc5eWVTaHphR0Z3WlN4MmFXVjNMSEJ5YjNCbGNuUjVSM0p2ZFhBcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUld4c2FYQnpaVWx1ZEdWeVptRmpaU2h6YUdGd1pTeDJhV1YzTEhCeWIzQmxjblI1UjNKdmRYQXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJsYkd4cGNITmxTVzUwWlhKbVlXTmxSbUZqZEc5eWVTaHphR0Z3WlN4MmFXVjNMSEJ5YjNCbGNuUjVSM0p2ZFhBcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1kzSmxZWFJsVTNSaGNrbHVkR1Z5Wm1GalpTaHphR0Z3WlN4MmFXVjNMSEJ5YjNCbGNuUjVSM0p2ZFhBcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnpkR0Z5U1c1MFpYSm1ZV05sUm1GamRHOXllU2h6YUdGd1pTeDJhV1YzTEhCeWIzQmxjblI1UjNKdmRYQXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdablZ1WTNScGIyNGdZM0psWVhSbFVtVmpkRWx1ZEdWeVptRmpaU2h6YUdGd1pTeDJhV1YzTEhCeWIzQmxjblI1UjNKdmRYQXBlMXh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ5WldOMFNXNTBaWEptWVdObFJtRmpkRzl5ZVNoemFHRndaU3gyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWTNKbFlYUmxVbTkxYm1SbFpFbHVkR1Z5Wm1GalpTaHphR0Z3WlN4MmFXVjNMSEJ5YjNCbGNuUjVSM0p2ZFhBcGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnliM1Z1WkdWa1NXNTBaWEptWVdObFJtRmpkRzl5ZVNoemFHRndaU3gyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWTNKbFlYUmxVbVZ3WVhSbFlYSkpiblJsY21aaFkyVW9jMmhoY0dVc2RtbGxkeXh3Y205d1pYSjBlVWR5YjNWd0tYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ3WldGMFpYSkpiblJsY21aaFkyVkdZV04wYjNKNUtITm9ZWEJsTEhacFpYY3NjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCamNtVmhkR1ZRWVhSb1NXNTBaWEptWVdObEtITm9ZWEJsTEhacFpYY3NjSEp2Y0dWeWRIbEhjbTkxY0NsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIQmhkR2hKYm5SbGNtWmhZMlZHWVdOMGIzSjVLSE5vWVhCbExIWnBaWGNzY0hKdmNHVnlkSGxIY205MWNDazdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnYVhSbGNtRjBaVVZzWlcxbGJuUnpLSE5vWVhCbGN5eDJhV1YzTENCd2NtOXdaWEowZVVkeWIzVndLWHRjY2x4dUlDQWdJQ0FnSUNCMllYSWdZWEp5SUQwZ1cxMDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlITm9ZWEJsY3lBL0lITm9ZWEJsY3k1c1pXNW5kR2dnT2lBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Y2locFBUQTdhVHhzWlc0N2FTczlNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0hOb1lYQmxjMXRwWFM1MGVTQTlQU0FuWjNJbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2k1d2RYTm9LRk5vWVhCbFJYaHdjbVZ6YzJsdmJrbHVkR1Z5Wm1GalpTNWpjbVZoZEdWSGNtOTFjRWx1ZEdWeVptRmpaU2h6YUdGd1pYTmJhVjBzZG1sbGQxdHBYU3h3Y205d1pYSjBlVWR5YjNWd0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWxiSE5sSUdsbUtITm9ZWEJsYzF0cFhTNTBlU0E5UFNBblptd25LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGeWNpNXdkWE5vS0ZOb1lYQmxSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaUzVqY21WaGRHVkdhV3hzU1c1MFpYSm1ZV05sS0hOb1lYQmxjMXRwWFN4MmFXVjNXMmxkTEhCeWIzQmxjblI1UjNKdmRYQXBLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmV1ZzYzJVZ2FXWW9jMmhoY0dWelcybGRMblI1SUQwOUlDZHpkQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlMbkIxYzJnb1UyaGhjR1ZGZUhCeVpYTnphVzl1U1c1MFpYSm1ZV05sTG1OeVpXRjBaVk4wY205clpVbHVkR1Z5Wm1GalpTaHphR0Z3WlhOYmFWMHNkbWxsZDF0cFhTeHdjbTl3WlhKMGVVZHliM1Z3S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxbGJITmxJR2xtS0hOb1lYQmxjMXRwWFM1MGVTQTlQU0FuZEcwbktYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y2k1d2RYTm9LRk5vWVhCbFJYaHdjbVZ6YzJsdmJrbHVkR1Z5Wm1GalpTNWpjbVZoZEdWVWNtbHRTVzUwWlhKbVlXTmxLSE5vWVhCbGMxdHBYU3gyYVdWM1cybGRMSEJ5YjNCbGNuUjVSM0p2ZFhBcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb2MyaGhjR1Z6VzJsZExuUjVJRDA5SUNkMGNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk5aGNuSXVjSFZ6YUNoVGFHRndaVVY0Y0hKbGMzTnBiMjVKYm5SbGNtWmhZMlV1WTNKbFlYUmxWSEpoYm5ObWIzSnRTVzUwWlhKbVlXTmxLSE5vWVhCbGMxdHBYU3gyYVdWM1cybGRMSEJ5YjNCbGNuUjVSM0p2ZFhBcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnYVdZb2MyaGhjR1Z6VzJsZExuUjVJRDA5SUNkbGJDY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhKeUxuQjFjMmdvVTJoaGNHVkZlSEJ5WlhOemFXOXVTVzUwWlhKbVlXTmxMbU55WldGMFpVVnNiR2x3YzJWSmJuUmxjbVpoWTJVb2MyaGhjR1Z6VzJsZExIWnBaWGRiYVYwc2NISnZjR1Z5ZEhsSGNtOTFjQ2twTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5Wld4elpTQnBaaWh6YUdGd1pYTmJhVjB1ZEhrZ1BUMGdKM055SnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjbkl1Y0hWemFDaFRhR0Z3WlVWNGNISmxjM05wYjI1SmJuUmxjbVpoWTJVdVkzSmxZWFJsVTNSaGNrbHVkR1Z5Wm1GalpTaHphR0Z3WlhOYmFWMHNkbWxsZDF0cFhTeHdjbTl3WlhKMGVVZHliM1Z3S1NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmloemFHRndaWE5iYVYwdWRIa2dQVDBnSjNOb0p5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoY25JdWNIVnphQ2hUYUdGd1pVVjRjSEpsYzNOcGIyNUpiblJsY21aaFkyVXVZM0psWVhSbFVHRjBhRWx1ZEdWeVptRmpaU2h6YUdGd1pYTmJhVjBzZG1sbGQxdHBYU3h3Y205d1pYSjBlVWR5YjNWd0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaHphR0Z3WlhOYmFWMHVkSGtnUFQwZ0ozSmpKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGNuSXVjSFZ6YUNoVGFHRndaVVY0Y0hKbGMzTnBiMjVKYm5SbGNtWmhZMlV1WTNKbFlYUmxVbVZqZEVsdWRHVnlabUZqWlNoemFHRndaWE5iYVYwc2RtbGxkMXRwWFN4d2NtOXdaWEowZVVkeWIzVndLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaWh6YUdGd1pYTmJhVjB1ZEhrZ1BUMGdKM0prSnlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjbkl1Y0hWemFDaFRhR0Z3WlVWNGNISmxjM05wYjI1SmJuUmxjbVpoWTJVdVkzSmxZWFJsVW05MWJtUmxaRWx1ZEdWeVptRmpaU2h6YUdGd1pYTmJhVjBzZG1sbGQxdHBYU3h3Y205d1pYSjBlVWR5YjNWd0tTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaHphR0Z3WlhOYmFWMHVkSGtnUFQwZ0ozSndKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGNuSXVjSFZ6YUNoVGFHRndaVVY0Y0hKbGMzTnBiMjVKYm5SbGNtWmhZMlV1WTNKbFlYUmxVbVZ3WVhSbFlYSkpiblJsY21aaFkyVW9jMmhoY0dWelcybGRMSFpwWlhkYmFWMHNjSEp2Y0dWeWRIbEhjbTkxY0NrcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkwyTnZibk52YkdVdWJHOW5LSE5vWVhCbGMxdHBYUzUwZVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0Z5Y2p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjJZWElnYzJoaGNHVkpiblJsY21aaFkyVkdZV04wYjNKNUlEMGdLR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1S0hOb1lYQmxjeXgyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXNTBaWEptWVdObGN6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1gybHVkR1Z5Wm1GalpVWjFibU4wYVc5dUtIWmhiSFZsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFI1Y0dWdlppQjJZV3gxWlNBOVBUMGdKMjUxYldKbGNpY3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWelczWmhiSFZsTFRGZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU0E5SURBc0lHeGxiaUE5SUdsdWRHVnlabUZqWlhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bEtHazhiR1Z1S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9hVzUwWlhKbVlXTmxjMXRwWFM1ZmJtRnRaU0E5UFQwZ2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpYTmJhVjA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTczlNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdYMmx1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbkJ5YjNCbGNuUjVSM0p2ZFhBZ1BTQndjbTl3WlhKMGVVZHliM1Z3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlZ6SUQwZ2FYUmxjbUYwWlVWc1pXMWxiblJ6S0hOb1lYQmxjeXdnZG1sbGR5d2dYMmx1ZEdWeVptRmpaVVoxYm1OMGFXOXVLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOXBiblJsY21aaFkyVkdkVzVqZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S0NrcE8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCamIyNTBaVzUwYzBsdWRHVnlabUZqWlVaaFkzUnZjbmtnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpaHphR0Z3WlN4MmFXVjNMQ0J3Y205d1pYSjBlVWR5YjNWd0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNCMllYSWdhVzUwWlhKbVlXTmxjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQjJZWElnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRnUFNCbWRXNWpkR2x2YmlCZmFXNTBaWEptWVdObFJuVnVZM1JwYjI0b2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdhU0E5SURBc0lHeGxiaUE5SUdsdWRHVnlabUZqWlhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VvYVR4c1pXNHBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR2x1ZEdWeVptRmpaWE5iYVYwdVgyNWhiV1VnUFQwOUlIWmhiSFZsSUh4OElHbHVkR1Z5Wm1GalpYTmJhVjB1Ylc0Z1BUMDlJSFpoYkhWbElIeDhJR2x1ZEdWeVptRmpaWE5iYVYwdWNISnZjR1Z5ZEhsSmJtUmxlQ0E5UFQwZ2RtRnNkV1VnZkh3Z2FXNTBaWEptWVdObGMxdHBYUzVwZUNBOVBUMGdkbUZzZFdVZ2ZId2dhVzUwWlhKbVlXTmxjMXRwWFM1cGJtUWdQVDA5SUhaaGJIVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxjMXRwWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU3M5TVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSNWNHVnZaaUIyWVd4MVpTQTlQVDBnSjI1MWJXSmxjaWNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpYTmJkbUZzZFdVdE1WMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdmVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXdjbTl3WlhKMGVVZHliM1Z3SUQwZ1puVnVZM1JwYjI0b2RtRnNLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RtRnNJRDA5UFNBeEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5SbGNtWmhZMlZHZFc1amRHbHZianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCeWIzQmxjblI1UjNKdmRYQW9kbUZzTFRFcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ2ZUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNCcGJuUmxjbVpoWTJWeklEMGdhWFJsY21GMFpVVnNaVzFsYm5SektITm9ZWEJsTG1sMExDQjJhV1YzTG1sMExDQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXdjbTl3WlhKMGVVZHliM1Z3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTV1ZFcxUWNtOXdaWEowYVdWeklEMGdhVzUwWlhKbVlXTmxjeTVzWlc1bmRHZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNISnZjR1Z5ZEhsSmJtUmxlQ0E5SUhOb1lYQmxMbU5wZUR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TzF4eVhHNGdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTZ3BLVHRjY2x4dVhISmNiaUFnSUNCMllYSWdaM0p2ZFhCSmJuUmxjbVpoWTJWR1lXTjBiM0o1SUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVLSE5vWVhCbExIWnBaWGNzSUhCeWIzQmxjblI1UjNKdmRYQXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRnUFNCbWRXNWpkR2x2YmlCZmFXNTBaWEptWVdObFJuVnVZM1JwYjI0b2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0haaGJIVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNkQlJFSkZJRlpsWTNSdmNuTWdSM0p2ZFhBbk9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdKME52Ym5SbGJuUnpKenBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1amIyNTBaVzUwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0owRkVRa1VnVm1WamRHOXlJRlJ5WVc1elptOXliU0JIY205MWNDYzZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F6T2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNTBjbUZ1YzJadmNtMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVjSEp2Y0dWeWRIbEhjbTkxY0NBOUlHWjFibU4wYVc5dUtIWmhiQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDJZV3dnUFQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6Wlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjSEp2Y0dWeWRIbEhjbTkxY0NoMllXd3RNU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpiMjUwWlc1MElEMGdZMjl1ZEdWdWRITkpiblJsY21aaFkyVkdZV04wYjNKNUtITm9ZWEJsTEhacFpYY3NhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQjBjbUZ1YzJadmNtMUpiblJsY21aaFkyVWdQU0JUYUdGd1pVVjRjSEpsYzNOcGIyNUpiblJsY21aaFkyVXVZM0psWVhSbFZISmhibk5tYjNKdFNXNTBaWEptWVdObEtITm9ZWEJsTG1sMFczTm9ZWEJsTG1sMExteGxibWQwYUNBdElERmRMSFpwWlhjdWFYUmJkbWxsZHk1cGRDNXNaVzVuZEdnZ0xTQXhYU3hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTV3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dVkyOXVkR1Z1ZENBOUlHTnZiblJsYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5SeVlXNXpabTl5YlNBOUlIUnlZVzV6Wm05eWJVbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuWDI1aGJXVW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITm9ZWEJsTG01dE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdMeTlwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTVqYjI1MFpXNTBJRDBnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbTUxYlZCeWIzQmxjblJwWlhNZ1BTQnphR0Z3WlM1dWNEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNISnZjR1Z5ZEhsSmJtUmxlQ0E5SUhOb1lYQmxMbWw0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTV1YlNBOUlITm9ZWEJsTG01dE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1dGJpQTlJSE5vWVhCbExtMXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0N1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmU2dwS1R0Y2NseHVYSEpjYmlBZ0lDQjJZWElnWm1sc2JFbHVkR1Z5Wm1GalpVWmhZM1J2Y25rZ1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRvYzJoaGNHVXNkbWxsZHl4d2NtOXdaWEowZVVkeWIzVndLWHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1S0haaGJDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXd2dQVDA5SUNkRGIyeHZjaWNnZkh3Z2RtRnNJRDA5UFNBblkyOXNiM0luS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVZMjlzYjNJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWW9kbUZzSUQwOVBTQW5UM0JoWTJsMGVTY2dmSHdnZG1Gc0lEMDlQU0FuYjNCaFkybDBlU2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXZjR0ZqYVhSNU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjJOdmJHOXlKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2RtbGxkeTVqTENBeElDOGdkbWxsZHk1akxtMTFiSFFzSUNkamIyeHZjaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuYjNCaFkybDBlU2NzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSWGh3Y21WemMybHZibFpoYkhWbEtIWnBaWGN1Ynl3Z01UQXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHBiblJsY21aaFkyVkdkVzVqZEdsdmJpd2dKMTl1WVcxbEp5d2dleUIyWVd4MVpUb2djMmhoY0dVdWJtMGdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0oyMXVKeXdnZXlCMllXeDFaVG9nYzJoaGNHVXViVzRnZlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJhV1YzTG1NdWMyVjBSM0p2ZFhCUWNtOXdaWEowZVNod2NtOXdaWEowZVVkeWIzVndLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbWxsZHk1dkxuTmxkRWR5YjNWd1VISnZjR1Z5ZEhrb2NISnZjR1Z5ZEhsSGNtOTFjQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S0NrcE8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCemRISnZhMlZKYm5SbGNtWmhZMlZHWVdOMGIzSjVJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtITm9ZWEJsTEhacFpYY3NjSEp2Y0dWeWRIbEhjbTkxY0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUY5d2NtOXdaWEowZVVkeWIzVndLSFpoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd3Z1BUMDlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZZanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NISnZjR1Z5ZEhsSGNtOTFjQ2gyWVd3dE1TazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRjlrWVhOb1VISnZjR1Z5ZEhsSGNtOTFjQ2gyWVd3cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc0lEMDlQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaR0Z6YUU5aU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJmY0hKdmNHVnlkSGxIY205MWNDaDJZV3d0TVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHRmtaRkJ5YjNCbGNuUjVWRzlFWVhOb1QySW9hU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR1JoYzJoUFlpd2djMmhoY0dVdVpGdHBYUzV1YlN3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRVY0Y0hKbGMzTnBiMjVXWVd4MVpTaDJhV1YzTG1RdVpHRjBZVkJ5YjNCelcybGRMbkFwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlITm9ZWEJsTG1RZ1B5QnphR0Z3WlM1a0xteGxibWQwYUNBNklEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrWVhOb1QySWdQU0I3ZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tHa2dQU0F3T3lCcElEd2diR1Z1T3lCcElDczlJREVwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmtaRkJ5YjNCbGNuUjVWRzlFWVhOb1QySW9hU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMmFXVjNMbVF1WkdGMFlWQnliM0J6VzJsZExuQXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZaR0Z6YUZCeWIzQmxjblI1UjNKdmRYQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJwYm5SbGNtWmhZMlZHZFc1amRHbHZiaWgyWVd3cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc0lEMDlQU0FuUTI5c2IzSW5JSHg4SUhaaGJDQTlQVDBnSjJOdmJHOXlKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxtTnZiRzl5TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtIWmhiQ0E5UFQwZ0owOXdZV05wZEhrbklIeDhJSFpoYkNBOVBUMGdKMjl3WVdOcGRIa25LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWIzQmhZMmwwZVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppaDJZV3dnUFQwOUlDZFRkSEp2YTJVZ1YybGtkR2duSUh4OElIWmhiQ0E5UFQwZ0ozTjBjbTlyWlNCM2FXUjBhQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXpkSEp2YTJWWGFXUjBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZGpiMnh2Y2ljc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlhod2NtVnpjMmx2YmxaaGJIVmxLSFpwWlhjdVl5d2dNU0F2SUhacFpYY3VZeTV0ZFd4MExDQW5ZMjlzYjNJbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0oyOXdZV05wZEhrbkxDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVWNGNISmxjM05wYjI1V1lXeDFaU2gyYVdWM0xtOHNJREV3TUNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRzSUNkemRISnZhMlZYYVdSMGFDY3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hacFpYY3VkeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29hVzUwWlhKbVlXTmxSblZ1WTNScGIyNHNJQ2RrWVhOb0p5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1lYTm9UMkk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29hVzUwWlhKbVlXTmxSblZ1WTNScGIyNHNJQ2RmYm1GdFpTY3NJSHNnZG1Gc2RXVTZJSE5vWVhCbExtNXRJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHRiaWNzSUhzZ2RtRnNkV1U2SUhOb1lYQmxMbTF1SUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbWxsZHk1akxuTmxkRWR5YjNWd1VISnZjR1Z5ZEhrb1gzQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyYVdWM0xtOHVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhacFpYY3VkeTV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMG9LU2s3WEhKY2JseHlYRzRnSUNBZ2RtRnlJSFJ5YVcxSmJuUmxjbVpoWTJWR1lXTjBiM0o1SUQwZ0tHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVLSE5vWVhCbExIWnBaWGNzY0hKdmNHVnlkSGxIY205MWNDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlGOXdjbTl3WlhKMGVVZHliM1Z3S0haaGJDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXd2dQVDBnTVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NISnZjR1Z5ZEhsSGNtOTFjQ2d0TFhaaGJDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVjSEp2Y0dWeWRIbEpibVJsZUNBOUlITm9ZWEJsTG1sNE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbWxsZHk1ekxuTmxkRWR5YjNWd1VISnZjR1Z5ZEhrb1gzQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyYVdWM0xtVXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhacFpYY3VieTV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVLSFpoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd3Z1BUMDlJSE5vWVhCbExtVXVhWGdnZkh3Z2RtRnNJRDA5UFNBblJXNWtKeUI4ZkNCMllXd2dQVDA5SUNkbGJtUW5LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dVpXNWtPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kbUZzSUQwOVBTQnphR0Z3WlM1ekxtbDRLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWMzUmhjblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd3Z1BUMDlJSE5vWVhCbExtOHVhWGdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXZabVp6WlhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNISnZjR1Z5ZEhsSmJtUmxlQ0E5SUhOb1lYQmxMbWw0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHpkR0Z5ZENjc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlhod2NtVnpjMmx2YmxaaGJIVmxLSFpwWlhjdWN5d2dNU0F2SUhacFpYY3VjeTV0ZFd4MEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0oyVnVaQ2NzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSWGh3Y21WemMybHZibFpoYkhWbEtIWnBaWGN1WlN3Z01TQXZJSFpwWlhjdVpTNXRkV3gwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjI5bVpuTmxkQ2NzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSWGh3Y21WemMybHZibFpoYkhWbEtIWnBaWGN1YnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRzSUNkZmJtRnRaU2NzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMmhoY0dVdWJtMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTV0YmlBOUlITm9ZWEJsTG0xdU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjQ3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTZ3BLVHRjY2x4dVhISmNiaUFnSUNCMllYSWdkSEpoYm5ObWIzSnRTVzUwWlhKbVlXTmxSbUZqZEc5eWVTQTlJQ2htZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmloemFHRndaU3gyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJmY0hKdmNHVnlkSGxIY205MWNDaDJZV3dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kbUZzSUQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSEJ5YjNCbGNuUjVSM0p2ZFhBb0xTMTJZV3dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhacFpYY3VkSEpoYm5ObWIzSnRMbTFRY205d2N5NXZMbk5sZEVkeWIzVndVSEp2Y0dWeWRIa29YM0J5YjNCbGNuUjVSM0p2ZFhBcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMmFXVjNMblJ5WVc1elptOXliUzV0VUhKdmNITXVjQzV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtbGxkeTUwY21GdWMyWnZjbTB1YlZCeWIzQnpMbUV1YzJWMFIzSnZkWEJRY205d1pYSjBlU2hmY0hKdmNHVnlkSGxIY205MWNDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWnBaWGN1ZEhKaGJuTm1iM0p0TG0xUWNtOXdjeTV6TG5ObGRFZHliM1Z3VUhKdmNHVnlkSGtvWDNCeWIzQmxjblI1UjNKdmRYQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJhV1YzTG5SeVlXNXpabTl5YlM1dFVISnZjSE11Y2k1elpYUkhjbTkxY0ZCeWIzQmxjblI1S0Y5d2NtOXdaWEowZVVkeWIzVndLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1sbGR5NTBjbUZ1YzJadmNtMHViVkJ5YjNCekxuTnJLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhacFpYY3VkSEpoYm5ObWIzSnRMbTFRY205d2N5NXpheTV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpwWlhjdWRISmhibk5tYjNKdExtMVFjbTl3Y3k1ellTNXpaWFJIY205MWNGQnliM0JsY25SNUtGOXdjbTl3WlhKMGVVZHliM1Z3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyYVdWM0xuUnlZVzV6Wm05eWJTNXZjQzV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVLSFpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hOb1lYQmxMbUV1YVhnZ1BUMDlJSFpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjR1WVc1amFHOXlVRzlwYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloemFHRndaUzV2TG1sNElEMDlQU0IyWVd4MVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG05d1lXTnBkSGs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh6YUdGd1pTNXdMbWw0SUQwOVBTQjJZV3gxWlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbkJ2YzJsMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jMmhoY0dVdWNpNXBlQ0E5UFQwZ2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXliM1JoZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtITm9ZWEJsTG5NdWFYZ2dQVDA5SUhaaGJIVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWMyTmhiR1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWh6YUdGd1pTNXpheUFtSmlCemFHRndaUzV6YXk1cGVDQTlQVDBnZG1Gc2RXVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1emEyVjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jMmhoY0dVdWMyRWdKaVlnYzJoaGNHVXVjMkV1YVhnZ1BUMDlJSFpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjR1YzJ0bGQwRjRhWE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd4MVpTQTlQVDBnSjA5d1lXTnBkSGtuS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbTl3WVdOcGRIazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaDJZV3gxWlNBOVBUMGdKMUJ2YzJsMGFXOXVKeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXdiM05wZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIWmhiSFZsSUQwOVBTQW5RVzVqYUc5eUlGQnZhVzUwSnlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5SbGNtWmhZMlZHZFc1amRHbHZiaTVoYm1Ob2IzSlFiMmx1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0haaGJIVmxJRDA5UFNBblUyTmhiR1VuS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbk5qWVd4bE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RtRnNkV1VnUFQwOUlDZFNiM1JoZEdsdmJpY2dmSHdnZG1Gc2RXVWdQVDA5SUNkQlJFSkZJRlpsWTNSdmNpQlNiM1JoZEdsdmJpY3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNtOTBZWFJwYjI0N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXeDFaU0E5UFQwZ0oxTnJaWGNuS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbk5yWlhjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXeDFaU0E5UFQwZ0oxTnJaWGNnUVhocGN5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWMydGxkMEY0YVhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0oyOXdZV05wZEhrbkxDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVWNGNISmxjM05wYjI1V1lXeDFaU2gyYVdWM0xuUnlZVzV6Wm05eWJTNXRVSEp2Y0hNdWJ5d2dNUzkyYVdWM0xuUnlZVzV6Wm05eWJTNXRVSEp2Y0hNdWJ5NXRkV3gwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjNCdmMybDBhVzl1Snl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9kbWxsZHk1MGNtRnVjMlp2Y20wdWJWQnliM0J6TG5BcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0dsdWRHVnlabUZqWlVaMWJtTjBhVzl1TENBbllXNWphRzl5VUc5cGJuUW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVjRjSEpsYzNOcGIyNVdZV3gxWlNoMmFXVjNMblJ5WVc1elptOXliUzV0VUhKdmNITXVZU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMk5oYkdWQmNuSmhlU0E5SUZ0ZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29hVzUwWlhKbVlXTmxSblZ1WTNScGIyNHNJQ2R6WTJGc1pTY3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hacFpYY3VkSEpoYm5ObWIzSnRMbTFRY205d2N5NXpMQ0F4SUM4Z2RtbGxkeTUwY21GdWMyWnZjbTB1YlZCeWIzQnpMbk11YlhWc2RDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHliM1JoZEdsdmJpY3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hacFpYY3VkSEpoYm5ObWIzSnRMbTFRY205d2N5NXlMQ0F4SUM4Z2RtbGxkeTUwY21GdWMyWnZjbTB1YlZCeWIzQnpMbkl1YlhWc2RDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHphMlYzSnl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9kbWxsZHk1MGNtRnVjMlp2Y20wdWJWQnliM0J6TG5OcktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0ozTnJaWGRCZUdsekp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvZG1sbGR5NTBjbUZ1YzJadmNtMHViVkJ5YjNCekxuTmhLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHBiblJsY21aaFkyVkdkVzVqZEdsdmJpd2dKMTl1WVcxbEp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCemFHRndaUzV1YlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxuUjVJRDBnSjNSeUp6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWJXNGdQU0J6YUdGd1pTNXRianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDBvS1NrN1hISmNibHh5WEc0Z0lDQWdkbUZ5SUdWc2JHbHdjMlZKYm5SbGNtWmhZMlZHWVdOMGIzSjVJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtITm9ZWEJsTEhacFpYY3NjSEp2Y0dWeWRIbEhjbTkxY0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUY5d2NtOXdaWEowZVVkeWIzVndLSFpoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd3Z1BUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKdmNHVnlkSGxIY205MWNDZ3RMWFpoYkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNISnZjR1Z5ZEhsSmJtUmxlQ0E5SUhOb1lYQmxMbWw0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NISnZjQ0E5SUhacFpYY3VjMmd1ZEhrZ1BUMDlJQ2QwYlNjZ1B5QjJhV1YzTG5Ob0xuQnliM0FnT2lCMmFXVjNMbk5vTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d0xuTXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQXVjQzV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0b2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9jMmhoY0dVdWNDNXBlQ0E5UFQwZ2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXdiM05wZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtITm9ZWEJsTG5NdWFYZ2dQVDA5SUhaaGJIVmxLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWMybDZaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHphWHBsSnl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9jSEp2Y0M1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0ozQnZjMmwwYVc5dUp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvY0hKdmNDNXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHBiblJsY21aaFkyVkdkVzVqZEdsdmJpd2dKMTl1WVcxbEp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCemFHRndaUzV1YlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxtMXVJRDBnYzJoaGNHVXViVzQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S0NrcE8xeHlYRzVjY2x4dUlDQWdJSFpoY2lCemRHRnlTVzUwWlhKbVlXTmxSbUZqZEc5eWVTQTlJQ2htZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmloemFHRndaU3gyYVdWM0xIQnliM0JsY25SNVIzSnZkWEFwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJmY0hKdmNHVnlkSGxIY205MWNDaDJZV3dwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9kbUZzSUQwOUlERXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSEJ5YjNCbGNuUjVSM0p2ZFhBb0xTMTJZV3dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQndjbTl3SUQwZ2RtbGxkeTV6YUM1MGVTQTlQVDBnSjNSdEp5QS9JSFpwWlhjdWMyZ3VjSEp2Y0NBNklIWnBaWGN1YzJnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5CeWIzQmxjblI1U1c1a1pYZ2dQU0J6YUdGd1pTNXBlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0M1dmNpNXpaWFJIY205MWNGQnliM0JsY25SNUtGOXdjbTl3WlhKMGVVZHliM1Z3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNDNXZjeTV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZjQzV3ZEM1elpYUkhjbTkxY0ZCeWIzQmxjblI1S0Y5d2NtOXdaWEowZVVkeWIzVndLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0M1d0xuTmxkRWR5YjNWd1VISnZjR1Z5ZEhrb1gzQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d0xuSXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUtITm9ZWEJsTG1seUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBdWFYSXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3TG1sekxuTmxkRWR5YjNWd1VISnZjR1Z5ZEhrb1gzQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2YmloMllXeDFaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHphR0Z3WlM1d0xtbDRJRDA5UFNCMllXeDFaU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxuQnZjMmwwYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1V1Y2k1cGVDQTlQVDBnZG1Gc2RXVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1eWIzUmhkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hOb1lYQmxMbkIwTG1sNElEMDlQU0IyWVd4MVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5CdmFXNTBjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSE5vWVhCbExtOXlMbWw0SUQwOVBTQjJZV3gxWlNCOGZDQW5RVVJDUlNCV1pXTjBiM0lnVTNSaGNpQlBkWFJsY2lCU1lXUnBkWE1uSUQwOVBTQjJZV3gxWlNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMbTkxZEdWeVVtRmthWFZ6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYzJoaGNHVXViM011YVhnZ1BUMDlJSFpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjR1YjNWMFpYSlNiM1Z1Wkc1bGMzTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHphR0Z3WlM1cGNpQW1KaUFvYzJoaGNHVXVhWEl1YVhnZ1BUMDlJSFpoYkhWbElIeDhJQ2RCUkVKRklGWmxZM1J2Y2lCVGRHRnlJRWx1Ym1WeUlGSmhaR2wxY3ljZ1BUMDlJSFpoYkhWbEtTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG1sdWJtVnlVbUZrYVhWek8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1V1YVhNZ0ppWWdjMmhoY0dVdWFYTXVhWGdnUFQwOUlIWmhiSFZsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVhVzV1WlhKU2IzVnVaRzVsYzNNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0ozQnZjMmwwYVc5dUp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvY0hKdmNDNXdLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHBiblJsY21aaFkyVkdkVzVqZEdsdmJpd2dKM0p2ZEdGMGFXOXVKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2NISnZjQzV5TENBeElDOGdjSEp2Y0M1eUxtMTFiSFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuY0c5cGJuUnpKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2NISnZjQzV3ZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRzSUNkdmRYUmxjbEpoWkdsMWN5Y3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hCeWIzQXViM0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuYjNWMFpYSlNiM1Z1Wkc1bGMzTW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFVjRjSEpsYzNOcGIyNVdZV3gxWlNod2NtOXdMbTl6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjJsdWJtVnlVbUZrYVhWekp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LQ0Z3Y205d0xtbHlLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRmVIQnlaWE56YVc5dVZtRnNkV1VvY0hKdmNDNXBjaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29hVzUwWlhKbVlXTmxSblZ1WTNScGIyNHNJQ2RwYm01bGNsSnZkVzVrYm1WemN5Y3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWdoY0hKdmNDNXBjeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1JYaHdjbVZ6YzJsdmJsWmhiSFZsS0hCeWIzQXVhWE1zSURFZ0x5QndjbTl3TG1sekxtMTFiSFFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuWDI1aGJXVW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITm9ZWEJsTG01dE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHViVzRnUFNCemFHRndaUzV0Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgwb0tTazdYSEpjYmx4eVhHNGdJQ0FnZG1GeUlISmxZM1JKYm5SbGNtWmhZMlZHWVdOMGIzSjVJRDBnS0daMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtITm9ZWEJsTEhacFpYY3NjSEp2Y0dWeWRIbEhjbTkxY0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUY5d2NtOXdaWEowZVVkeWIzVndLSFpoYkNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgyWVd3Z1BUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKdmNHVnlkSGxIY205MWNDZ3RMWFpoYkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSEJ5YjNBZ1BTQjJhV1YzTG5Ob0xuUjVJRDA5UFNBbmRHMG5JRDhnZG1sbGR5NXphQzV3Y205d0lEb2dkbWxsZHk1emFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWNISnZjR1Z5ZEhsSmJtUmxlQ0E5SUhOb1lYQmxMbWw0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d0xuQXVjMlYwUjNKdmRYQlFjbTl3WlhKMGVTaGZjSEp2Y0dWeWRIbEhjbTkxY0NrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQXVjeTV6WlhSSGNtOTFjRkJ5YjNCbGNuUjVLRjl3Y205d1pYSjBlVWR5YjNWd0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZjQzV5TG5ObGRFZHliM1Z3VUhKdmNHVnlkSGtvWDNCeWIzQmxjblI1UjNKdmRYQXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjRvZG1Gc2RXVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2MyaGhjR1V1Y0M1cGVDQTlQVDBnZG1Gc2RXVXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1d2IzTnBkR2x2Ymp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hOb1lYQmxMbkl1YVhnZ1BUMDlJSFpoYkhWbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjR1Y205MWJtUnVaWE56TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYzJoaGNHVXVjeTVwZUNBOVBUMGdkbUZzZFdVZ2ZId2dkbUZzZFdVZ1BUMDlJQ2RUYVhwbEp5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5OcGVtVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHBiblJsY21aaFkyVkdkVzVqZEdsdmJpd2dKM0J2YzJsMGFXOXVKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2NISnZjQzV3S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjNKdmRXNWtibVZ6Y3ljc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlhod2NtVnpjMmx2YmxaaGJIVmxLSEJ5YjNBdWNpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZHphWHBsSnl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9jSEp2Y0M1ektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29hVzUwWlhKbVlXTmxSblZ1WTNScGIyNHNJQ2RmYm1GdFpTY3NJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2MyaGhjR1V1Ym0wN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXRiaUE5SUhOb1lYQmxMbTF1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlNncEtUdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2NtOTFibVJsWkVsdWRHVnlabUZqWlVaaFkzUnZjbmtnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNG9jMmhoY0dVc2RtbGxkeXh3Y205d1pYSjBlVWR5YjNWd0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1gzQnliM0JsY25SNVIzSnZkWEFvZG1Gc0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0haaGJDQTlQU0F4S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2NtOXdaWEowZVVkeWIzVndLQzB0ZG1Gc0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnY0hKdmNDQTlJSFpwWlhjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5CeWIzQmxjblI1U1c1a1pYZ2dQU0J6YUdGd1pTNXBlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0M1eVpDNXpaWFJIY205MWNGQnliM0JsY25SNUtGOXdjbTl3WlhKMGVVZHliM1Z3S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUtIWmhiSFZsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSE5vWVhCbExuSXVhWGdnUFQwOUlIWmhiSFZsSUh4OElDZFNiM1Z1WkNCRGIzSnVaWEp6SURFbklEMDlQU0IyWVd4MVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG5KaFpHbDFjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuY21Ga2FYVnpKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2NISnZjQzV5WkNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxDQW5YMjVoYldVbkxDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOb1lYQmxMbTV0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZM1JwYjI0dWJXNGdQU0J6YUdGd1pTNXRianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDBvS1NrN1hISmNibHh5WEc0Z0lDQWdkbUZ5SUhKbGNHVmhkR1Z5U1c1MFpYSm1ZV05sUm1GamRHOXllU0E5SUNobWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpaHphR0Z3WlN4MmFXVjNMSEJ5YjNCbGNuUjVSM0p2ZFhBcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCZmNISnZjR1Z5ZEhsSGNtOTFjQ2gyWVd3cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvZG1Gc0lEMDlJREVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCeWIzQmxjblI1UjNKdmRYQW9MUzEyWVd3cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ3Y205d0lEMGdkbWxsZHp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1MFpYSm1ZV05sUm5WdVkzUnBiMjR1Y0hKdmNHVnlkSGxKYm1SbGVDQTlJSE5vWVhCbExtbDRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndjbTl3TG1NdWMyVjBSM0p2ZFhCUWNtOXdaWEowZVNoZmNISnZjR1Z5ZEhsSGNtOTFjQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBdWJ5NXpaWFJIY205MWNGQnliM0JsY25SNUtGOXdjbTl3WlhKMGVVZHliM1Z3S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUtIWmhiSFZsS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LSE5vWVhCbExtTXVhWGdnUFQwOUlIWmhiSFZsSUh4OElDZERiM0JwWlhNbklEMDlQU0IyWVd4MVpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TG1OdmNHbGxjenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmloemFHRndaUzV2TG1sNElEMDlQU0IyWVd4MVpTQjhmQ0FuVDJabWMyVjBKeUE5UFQwZ2RtRnNkV1VwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpNXZabVp6WlhRN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNocGJuUmxjbVpoWTJWR2RXNWpkR2x2Yml3Z0oyTnZjR2xsY3ljc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUlhod2NtVnpjMmx2YmxaaGJIVmxLSEJ5YjNBdVl5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuYjJabWMyVjBKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZlSEJ5WlhOemFXOXVWbUZzZFdVb2NISnZjQzV2S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FXNTBaWEptWVdObFJuVnVZM1JwYjI0c0lDZGZibUZ0WlNjc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzJoaGNHVXVibTA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcGJuUmxjbVpoWTJWR2RXNWpkR2x2Ymk1dGJpQTlJSE5vWVhCbExtMXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNTBaWEptWVdObFJuVnVZM1JwYjI0N1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmU2dwS1R0Y2NseHVYSEpjYmlBZ0lDQjJZWElnY0dGMGFFbHVkR1Z5Wm1GalpVWmhZM1J2Y25rZ1BTQW9ablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRvYzJoaGNHVXNkbWxsZHl4d2NtOXdaWEowZVVkeWIzVndLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhCeWIzQWdQU0IyYVdWM0xuTm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmZjSEp2Y0dWeWRIbEhjbTkxY0NoMllXd3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RtRnNJRDA5SURFcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5SbGNtWmhZMlZHZFc1amRHbHZianRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQnliM0JsY25SNVIzSnZkWEFvTFMxMllXd3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNBdWMyVjBSM0p2ZFhCUWNtOXdaWEowZVNoZmNISnZjR1Z5ZEhsSGNtOTFjQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCcGJuUmxjbVpoWTJWR2RXNWpkR2x2YmloMllXd3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2RtRnNJRDA5UFNBblUyaGhjR1VuSUh4OElIWmhiQ0E5UFQwZ0ozTm9ZWEJsSnlCOGZDQjJZV3dnUFQwOUlDZFFZWFJvSnlCOGZDQjJZV3dnUFQwOUlDZHdZWFJvSnlCOGZDQjJZV3dnUFQwOUlDZEJSRUpGSUZabFkzUnZjaUJUYUdGd1pTY2dmSHdnZG1Gc0lEMDlQU0F5S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVzUwWlhKbVlXTmxSblZ1WTNScGIyNHVjR0YwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0dsdWRHVnlabUZqWlVaMWJtTjBhVzl1TENBbmNHRjBhQ2NzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlod2NtOXdMbXNwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOXdMbWRsZEZaaGJIVmxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2NtOXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZjbVYwZFhKdUlITm9ZWEJsWDNCdmIyd3VZMnh2Ym1Vb2NISnZjQzUyS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hwYm5SbGNtWmhZMlZHZFc1amRHbHZiaXdnSjNOb1lYQmxKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hCeWIzQXVheWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCeWIzQXVaMlYwVm1Gc2RXVW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCeWIzQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OXlaWFIxY200Z2MyaGhjR1ZmY0c5dmJDNWpiRzl1WlNod2NtOXdMbllwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuWDI1aGJXVW5MQ0I3SUhaaGJIVmxPaUJ6YUdGd1pTNXViU0I5S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dUxDQW5hWGduTENCN0lIWmhiSFZsT2lCemFHRndaUzVwZUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR2x1ZEdWeVptRmpaVVoxYm1OMGFXOXVMQ0FuYlc0bkxDQjdJSFpoYkhWbE9pQnphR0Z3WlM1dGJpQjlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkR1Z5Wm1GalpVWjFibU4wYVc5dU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDBvS1NrN1hISmNibHh5WEc1Y2NseHVJQ0FnSUhKbGRIVnliaUJ2WWp0Y2NseHVmU2dwS1Z4eVhHNWNiblpoY2lCVVpYaDBSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU0E5SUNobWRXNWpkR2x2YmlncGUxeHlYRzVjZEhKbGRIVnliaUJtZFc1amRHbHZiaWhsYkdWdEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ1gzQnlaWFpXWVd4MVpTd2dYM052ZFhKalpWUmxlSFE3WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1gzUm9hWE5NWVhsbGNrWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjRzSUZ3aWMyOTFjbU5sVkdWNGRGd2lMQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCemRISnBibWRXWVd4MVpTQTlJR1ZzWlcwdWRHVjRkRkJ5YjNCbGNuUjVMbU4xY25KbGJuUkVZWFJoTG5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhsYkdWdExuUmxlSFJRY205d1pYSjBlUzVqZFhKeVpXNTBSR0YwWVM1MElDRTlQU0JmY0hKbGRsWmhiSFZsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4bGJTNTBaWGgwVUhKdmNHVnlkSGt1WTNWeWNtVnVkRVJoZEdFdWRDQTlJRjl3Y21WMlZtRnNkV1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYM052ZFhKalpWUmxlSFFnUFNCdVpYY2dVM1J5YVc1bktITjBjbWx1WjFaaGJIVmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMMGxtSUhOMGNtbHVaMVpoYkhWbElHbHpJR0Z1SUdWdGNIUjVJSE4wY21sdVp5d2daWFpoYkNCeVpYUjFjbTV6SUhWdVpHVm1hVzVsWkN3Z2MyOGdhWFFnYUdGeklIUnZJR0psSUhKbGRIVnlibVZrSUdGeklHRWdVM1J5YVc1bklIQnlhVzFwZEdsMlpWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY5emIzVnlZMlZVWlhoMExuWmhiSFZsSUQwZ2MzUnlhVzVuVm1Gc2RXVWdQeUJ6ZEhKcGJtZFdZV3gxWlNBNklHNWxkeUJUZEhKcGJtY29jM1J5YVc1blZtRnNkV1VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOXpiM1Z5WTJWVVpYaDBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJqdGNjbHh1SUNBZ0lIMWNjbHh1ZlNncEtWeHVkbUZ5SUV4aGVXVnlSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU0E5SUNobWRXNWpkR2x2YmlBb0tYdGNjbHh1SUNBZ0lHWjFibU4wYVc5dUlIUnZWMjl5YkdRb1lYSnlMQ0IwYVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RHOVhiM0pzWkUxaGRDQTlJRzVsZHlCTllYUnlhWGdvS1R0Y2NseHVJQ0FnSUNBZ0lDQjBiMWR2Y214a1RXRjBMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlIUnlZVzV6Wm05eWJVMWhkRHRjY2x4dUlDQWdJQ0FnSUNCcFppaDBhVzFsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dlZHOWtieUJwYlhCc1pXMWxiblFnZG1Gc2RXVWdZWFFnZEdsdFpTQnZiaUIwY21GdWMyWnZjbTBnY0hKdmNHVnlkR2xsYzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2TDNSeVlXNXpabTl5YlUxaGRDQTlJSFJvYVhNdVgyVnNaVzB1Wm1sdVlXeFVjbUZ1YzJadmNtMHViVkJ5YjNBdVoyVjBWbUZzZFdWQmRGUnBiV1VvZEdsdFpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJVMWhkQ0E5SUhSb2FYTXVYMlZzWlcwdVptbHVZV3hVY21GdWMyWnZjbTB1YlZCeWIzQTdYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRUV0YwSUQwZ2RHaHBjeTVmWld4bGJTNW1hVzVoYkZSeVlXNXpabTl5YlM1dFVISnZjRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRUV0YwTG1Gd2NHeDVWRzlOWVhSeWFYZ29kRzlYYjNKc1pFMWhkQ2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3k1ZlpXeGxiUzVvYVdWeVlYSmphSGtnSmlZZ2RHaHBjeTVmWld4bGJTNW9hV1Z5WVhKamFIa3ViR1Z1WjNSb0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSFJvYVhNdVgyVnNaVzB1YUdsbGNtRnlZMmg1TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5S0drOU1EdHBQR3hsYmp0cEt6MHhLWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcwdWFHbGxjbUZ5WTJoNVcybGRMbVpwYm1Gc1ZISmhibk5tYjNKdExtMVFjbTl3TG1Gd2NHeDVWRzlOWVhSeWFYZ29kRzlYYjNKc1pFMWhkQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUnZWMjl5YkdSTllYUXVZWEJ3YkhsVWIxQnZhVzUwUVhKeVlYa29ZWEp5V3pCZExHRnljbHN4WFN4aGNuSmJNbDE4ZkRBcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEc5WGIzSnNaRTFoZEM1aGNIQnNlVlJ2VUc5cGJuUkJjbkpoZVNoaGNuSmJNRjBzWVhKeVd6RmRMR0Z5Y2xzeVhYeDhNQ2s3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJtY205dFYyOXliR1FvWVhKeUxDQjBhVzFsS1h0Y2NseHVJQ0FnSUNBZ0lDQjJZWElnZEc5WGIzSnNaRTFoZENBOUlHNWxkeUJOWVhSeWFYZ29LVHRjY2x4dUlDQWdJQ0FnSUNCMGIxZHZjbXhrVFdGMExuSmxjMlYwS0NrN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhSeVlXNXpabTl5YlUxaGREdGNjbHh1SUNBZ0lDQWdJQ0JwWmloMGFXMWxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2Vkc5a2J5QnBiWEJzWlcxbGJuUWdkbUZzZFdVZ1lYUWdkR2x0WlNCdmJpQjBjbUZ1YzJadmNtMGdjSEp2Y0dWeWRHbGxjMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMM1J5WVc1elptOXliVTFoZENBOUlIUm9hWE11WDJWc1pXMHVabWx1WVd4VWNtRnVjMlp2Y20wdWJWQnliM0F1WjJWMFZtRnNkV1ZCZEZScGJXVW9kR2x0WlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlUxaGRDQTlJSFJvYVhNdVgyVnNaVzB1Wm1sdVlXeFVjbUZ1YzJadmNtMHViVkJ5YjNBN1hISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tYjNKdFRXRjBJRDBnZEdocGN5NWZaV3hsYlM1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdFRXRjBMbUZ3Y0d4NVZHOU5ZWFJ5YVhnb2RHOVhiM0pzWkUxaGRDazdYSEpjYmlBZ0lDQWdJQ0FnYVdZb2RHaHBjeTVmWld4bGJTNW9hV1Z5WVhKamFIa2dKaVlnZEdocGN5NWZaV3hsYlM1b2FXVnlZWEpqYUhrdWJHVnVaM1JvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11WDJWc1pXMHVhR2xsY21GeVkyaDVMbXhsYm1kMGFEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR2s5TUR0cFBHeGxianRwS3oweEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzB1YUdsbGNtRnlZMmg1VzJsZExtWnBibUZzVkhKaGJuTm1iM0p0TG0xUWNtOXdMbUZ3Y0d4NVZHOU5ZWFJ5YVhnb2RHOVhiM0pzWkUxaGRDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSdlYyOXliR1JOWVhRdWFXNTJaWEp6WlZCdmFXNTBLR0Z5Y2lrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYjFkdmNteGtUV0YwTG1sdWRtVnljMlZRYjJsdWRDaGhjbklwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWm5KdmJVTnZiWEFvWVhKeUtYdGNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RHOVhiM0pzWkUxaGRDQTlJRzVsZHlCTllYUnlhWGdvS1R0Y2NseHVJQ0FnSUNBZ0lDQjBiMWR2Y214a1RXRjBMbkpsYzJWMEtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWZaV3hsYlM1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNWhjSEJzZVZSdlRXRjBjbWw0S0hSdlYyOXliR1JOWVhRcE8xeHlYRzRnSUNBZ0lDQWdJR2xtS0hSb2FYTXVYMlZzWlcwdWFHbGxjbUZ5WTJoNUlDWW1JSFJvYVhNdVgyVnNaVzB1YUdsbGNtRnlZMmg1TG14bGJtZDBhQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcExDQnNaVzRnUFNCMGFHbHpMbDlsYkdWdExtaHBaWEpoY21Ob2VTNXNaVzVuZEdnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHBQVEE3YVR4c1pXNDdhU3M5TVNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5bGJHVnRMbWhwWlhKaGNtTm9lVnRwWFM1bWFXNWhiRlJ5WVc1elptOXliUzV0VUhKdmNDNWhjSEJzZVZSdlRXRjBjbWw0S0hSdlYyOXliR1JOWVhRcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYjFkdmNteGtUV0YwTG1sdWRtVnljMlZRYjJsdWRDaGhjbklwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRzlYYjNKc1pFMWhkQzVwYm5abGNuTmxVRzlwYm5Rb1lYSnlLVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtHVnNaVzBwZTF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0IyWVhJZ2RISmhibk5tYjNKdFNXNTBaWEptWVdObElEMGdWSEpoYm5ObWIzSnRSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU2hsYkdWdExuUnlZVzV6Wm05eWJTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlGOXlaV2RwYzNSbGNrMWhjMnRKYm5SbGNtWmhZMlVvYldGemEwMWhibUZuWlhJcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0dWJXRnpheUE5SUc1bGR5Qk5ZWE5yVFdGdVlXZGxja2x1ZEdWeVptRmpaU2h0WVhOclRXRnVZV2RsY2l3Z1pXeGxiU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRjl5WldkcGMzUmxja1ZtWm1WamRITkpiblJsY21aaFkyVW9aV1ptWldOMGN5bDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJpNWxabVpsWTNRZ1BTQmxabVpsWTNSek8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdYM1JvYVhOTVlYbGxja1oxYm1OMGFXOXVLRzVoYldVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvYm1GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2lRVVJDUlNCU2IyOTBJRlpsWTNSdmNuTWdSM0p2ZFhCY0lqcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSkRiMjUwWlc1MGMxd2lPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0dWMyaGhjR1ZKYm5SbGNtWmhZMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREU2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRFk2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpVkhKaGJuTm1iM0p0WENJNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZ3aWRISmhibk5tYjNKdFhDSTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2lRVVJDUlNCVWNtRnVjMlp2Y20wZ1IzSnZkWEJjSWpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRTVzUwWlhKbVlXTmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQTBPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmNJa0ZFUWtVZ1JXWm1aV04wSUZCaGNtRmtaVndpT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHVaV1ptWldOME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUY5MGFHbHpUR0Y1WlhKR2RXNWpkR2x2Ymk1MGIxZHZjbXhrSUQwZ2RHOVhiM0pzWkR0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHVabkp2YlZkdmNteGtJRDBnWm5KdmJWZHZjbXhrTzF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJpNTBiME52YlhBZ1BTQjBiMWR2Y214a08xeHlYRzRnSUNBZ0lDQWdJRjkwYUdselRHRjVaWEpHZFc1amRHbHZiaTVtY205dFEyOXRjQ0E5SUdaeWIyMURiMjF3TzF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJpNXpiM1Z5WTJWU1pXTjBRWFJVYVcxbElEMGdaV3hsYlM1emIzVnlZMlZTWldOMFFYUlVhVzFsTG1KcGJtUW9aV3hsYlNrN1hISmNiaUFnSUNBZ0lDQWdYM1JvYVhOTVlYbGxja1oxYm1OMGFXOXVMbDlsYkdWdElEMGdaV3hsYlR0Y2NseHVJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWDNSb2FYTk1ZWGxsY2taMWJtTjBhVzl1TENBbmFHRnpVR0Z5Wlc1MEp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z0lTRmxiR1Z0TG1ocFpYSmhjbU5vZVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaGZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHNJQ2R3WVhKbGJuUW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmxiR1Z0TG1ocFpYSmhjbU5vZVZzd1hTNXNZWGxsY2tsdWRHVnlabUZqWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaGZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHNJRndpY205MFlYUnBiMjVjSWl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKaGJuTm1iM0p0U1c1MFpYSm1ZV05sTG5KdmRHRjBhVzl1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJpd2dYQ0p6WTJGc1pWd2lMQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0Z0tDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5WVc1elptOXliVWx1ZEdWeVptRmpaUzV6WTJGc1pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1gzUm9hWE5NWVhsbGNrWjFibU4wYVc5dUxDQmNJbkJ2YzJsMGFXOXVYQ0lzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKaGJuTm1iM0p0U1c1MFpYSm1ZV05sTG5CdmMybDBhVzl1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjRzSUZ3aVlXNWphRzl5VUc5cGJuUmNJaXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUlDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwY21GdWMyWnZjbTFKYm5SbGNtWmhZMlV1WVc1amFHOXlVRzlwYm5RN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0Y5MGFHbHpUR0Y1WlhKR2RXNWpkR2x2Yml3Z1hDSjBjbUZ1YzJadmNtMWNJaXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUlDZ3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwY21GdWMyWnZjbTFKYm5SbGNtWmhZMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLRjkwYUdselRHRjVaWEpHZFc1amRHbHZiaXdnWENKM2FXUjBhRndpTENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNGdLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aV3hsYlM1a1lYUmhMblI1SUQwOVBTQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVnNaVzB1WkdGMFlTNTNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnTVRBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0c0lGd2lhR1ZwWjJoMFhDSXNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlBb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlobGJHVnRMbVJoZEdFdWRIa2dQVDA5SURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWld4bGJTNWtZWFJoTG1oY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQXhNREE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLRjkwYUdselRHRjVaWEpHZFc1amRHbHZiaXdnWENKemIzVnlZMlZjSWl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbGJHVnRMbVJoZEdFdWNtVm1TV1E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLRjkwYUdselRHRjVaWEpHZFc1amRHbHZiaXdnWENKcGJtUmxlRndpTENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNGdLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWc1pXMHVaR0YwWVM1cGJtUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtGOTBhR2x6VEdGNVpYSkdkVzVqZEdsdmJpd2dYQ0pmYm1GdFpWd2lMQ0I3SUhaaGJIVmxPbVZzWlcwdVpHRjBZUzV1YlNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1gzUm9hWE5NWVhsbGNrWjFibU4wYVc5dUxDQmNJbU52Ym5SbGJuUmNJaXdnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYM1JvYVhOTVlYbGxja1oxYm1OMGFXOXVMbk5vWVhCbFNXNTBaWEptWVdObE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0c0lGd2lZV04wYVhabFhDSXNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVnNaVzB1YVhOV2FYTnBZbXhsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjRzSUZ3aWRHVjRkRndpTENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjR1ZEdWNGRFbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjR1Y21WbmFYTjBaWEpOWVhOclNXNTBaWEptWVdObElEMGdYM0psWjJsemRHVnlUV0Z6YTBsdWRHVnlabUZqWlR0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHVjbVZuYVhOMFpYSkZabVpsWTNSelNXNTBaWEptWVdObElEMGdYM0psWjJsemRHVnlSV1ptWldOMGMwbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdYM1JvYVhOTVlYbGxja1oxYm1OMGFXOXVPMXh5WEc0Z0lDQWdmVnh5WEc1OUtDa3BPMXh5WEc1Y2JuWmhjaUJEYjIxd1JYaHdjbVZ6YzJsdmJrbHVkR1Z5Wm1GalpTQTlJQ2htZFc1amRHbHZiaUFvS1h0Y2NseHVJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaWhqYjIxd0tYdGNjbHh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJmZEdocGMweGhlV1Z5Um5WdVkzUnBiMjRvYm1GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwUFRBc0lHeGxiaUE5SUdOdmJYQXViR0Y1WlhKekxteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJocGJHVW9hVHhzWlc0cGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvWTI5dGNDNXNZWGxsY25OYmFWMHVibTBnUFQwOUlHNWhiV1VnZkh3Z1kyOXRjQzVzWVhsbGNuTmJhVjB1YVc1a0lEMDlQU0J1WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dGNDNWxiR1Z0Wlc1MGMxdHBYUzVzWVhsbGNrbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ0t6MGdNVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2UyRmpkR2wyWlRwbVlXeHpaWDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0Y5MGFHbHpUR0Y1WlhKR2RXNWpkR2x2Yml3Z1hDSmZibUZ0WlZ3aUxDQjdJSFpoYkhWbE9tTnZiWEF1WkdGMFlTNXViU0I5S1R0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNHViR0Y1WlhJZ1BTQmZkR2hwYzB4aGVXVnlSblZ1WTNScGIyNDdYSEpjYmlBZ0lDQWdJQ0FnWDNSb2FYTk1ZWGxsY2taMWJtTjBhVzl1TG5CcGVHVnNRWE53WldOMElEMGdNVHRjY2x4dUlDQWdJQ0FnSUNCZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0dWFHVnBaMmgwSUQwZ1kyOXRjQzVuYkc5aVlXeEVZWFJoTG1OdmJYQlRhWHBsTG1nN1hISmNiaUFnSUNBZ0lDQWdYM1JvYVhOTVlYbGxja1oxYm1OMGFXOXVMbmRwWkhSb0lEMGdZMjl0Y0M1bmJHOWlZV3hFWVhSaExtTnZiWEJUYVhwbExuYzdYSEpjYmlBZ0lDQWdJQ0FnWDNSb2FYTk1ZWGxsY2taMWJtTjBhVzl1TG5CcGVHVnNRWE53WldOMElEMGdNVHRjY2x4dUlDQWdJQ0FnSUNCZmRHaHBjMHhoZVdWeVJuVnVZM1JwYjI0dVpuSmhiV1ZFZFhKaGRHbHZiaUE5SURFdlkyOXRjQzVuYkc5aVlXeEVZWFJoTG1aeVlXMWxVbUYwWlR0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1gzUm9hWE5NWVhsbGNrWjFibU4wYVc5dU8xeHlYRzRnSUNBZ2ZWeHlYRzU5S0NrcE8xeHVkbUZ5SUZSeVlXNXpabTl5YlVWNGNISmxjM05wYjI1SmJuUmxjbVpoWTJVZ1BTQW9ablZ1WTNScGIyNGdLQ2w3WEhKY2JpQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNG9kSEpoYm5ObWIzSnRLWHRjY2x4dUlDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCZmRHaHBjMFoxYm1OMGFXOXVLRzVoYldVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvYm1GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2ljMk5oYkdWY0lqcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSlRZMkZzWlZ3aU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCY0lrRkVRa1VnVTJOaGJHVmNJanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdOanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1gzUm9hWE5HZFc1amRHbHZiaTV6WTJGc1pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSnliM1JoZEdsdmJsd2lPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmNJbEp2ZEdGMGFXOXVYQ0k2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpUVVSQ1JTQlNiM1JoZEdsdmJsd2lPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmNJa0ZFUWtVZ1VtOTBZWFJsSUZwY0lqcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01UQTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5MGFHbHpSblZ1WTNScGIyNHVjbTkwWVhScGIyNDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2ljRzl6YVhScGIyNWNJanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdYQ0pRYjNOcGRHbHZibHdpT2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JjSWtGRVFrVWdVRzl6YVhScGIyNWNJanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISmhibk5tYjNKdExuQnZjMmwwYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCY0ltRnVZMmh2Y2xCdmFXNTBYQ0k2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpUVc1amFHOXlVRzlwYm5SY0lqcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSkJibU5vYjNJZ1VHOXBiblJjSWpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnWENKQlJFSkZJRUZ1WTJodmNsQnZhVzUwWENJNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRjkwYUdselJuVnVZM1JwYjI0dVlXNWphRzl5VUc5cGJuUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2liM0JoWTJsMGVWd2lPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmNJazl3WVdOcGRIbGNJanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVEU2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOTBhR2x6Um5WdVkzUnBiMjR1YjNCaFkybDBlVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtGOTBhR2x6Um5WdVkzUnBiMjRzSUZ3aWNtOTBZWFJwYjI1Y0lpd2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISmhibk5tYjNKdExuSnZkR0YwYVc5dU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLRjkwYUdselJuVnVZM1JwYjI0c0lGd2ljMk5oYkdWY0lpd2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjbUZ1YzJadmNtMHVjMk5oYkdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0Y5MGFHbHpSblZ1WTNScGIyNHNJRndpY0c5emFYUnBiMjVjSWl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNtRnVjMlp2Y20wdWNHOXphWFJwYjI0N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0Y5MGFHbHpSblZ1WTNScGIyNHNJRndpZUZCdmMybDBhVzl1WENJc0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaUFvS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISmhibk5tYjNKdExuaFFiM05wZEdsdmJqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1gzUm9hWE5HZFc1amRHbHZiaXdnWENKNVVHOXphWFJwYjI1Y0lpd2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1SUNncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjbUZ1YzJadmNtMHVlVkJ2YzJsMGFXOXVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaGZkR2hwYzBaMWJtTjBhVzl1TENCY0ltRnVZMmh2Y2xCdmFXNTBYQ0lzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpQW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKaGJuTm1iM0p0TG1GdVkyaHZjbEJ2YVc1ME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoZmRHaHBjMFoxYm1OMGFXOXVMQ0JjSW05d1lXTnBkSGxjSWl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNtRnVjMlp2Y20wdWIzQmhZMmwwZVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWDNSb2FYTkdkVzVqZEdsdmJpd2dYQ0p6YTJWM1hDSXNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlBb0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEpoYm5ObWIzSnRMbk5yWlhjN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0Y5MGFHbHpSblZ1WTNScGIyNHNJRndpYzJ0bGQwRjRhWE5jSWl3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVJQ2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNtRnVjMlp2Y20wdWMydGxkMEY0YVhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGOTBhR2x6Um5WdVkzUnBiMjQ3WEhKY2JpQWdJQ0I5WEhKY2JuMG9LU2s3WEc1MllYSWdVSEp2YW1WamRFbHVkR1Z5Wm1GalpTQTlJQ2htZFc1amRHbHZiaUFvS1h0Y2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnlaV2RwYzNSbGNrTnZiWEJ2YzJsMGFXOXVLR052YlhBcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXRjRzl6YVhScGIyNXpMbkIxYzJnb1kyOXRjQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1S0NsN1hISmNiaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdYM1JvYVhOUWNtOXFaV04wUm5WdVkzUnBiMjRvYm1GdFpTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwSUQwZ01Dd2diR1Z1SUQwZ2RHaHBjeTVqYjIxd2IzTnBkR2x2Ym5NdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTaHBQR3hsYmlsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWgwYUdsekxtTnZiWEJ2YzJsMGFXOXVjMXRwWFM1a1lYUmhJQ1ltSUhSb2FYTXVZMjl0Y0c5emFYUnBiMjV6VzJsZExtUmhkR0V1Ym0wZ1BUMDlJRzVoYldVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIUm9hWE11WTI5dGNHOXphWFJwYjI1elcybGRMbkJ5WlhCaGNtVkdjbUZ0WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJYQnZjMmwwYVc5dWMxdHBYUzV3Y21Wd1lYSmxSbkpoYldVb2RHaHBjeTVqZFhKeVpXNTBSbkpoYldVcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIyMXdiM05wZEdsdmJuTmJhVjB1WTI5dGNFbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrclBURTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJRjkwYUdselVISnZhbVZqZEVaMWJtTjBhVzl1TG1OdmJYQnZjMmwwYVc5dWN5QTlJRnRkTzF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6VUhKdmFtVmpkRVoxYm1OMGFXOXVMbU4xY25KbGJuUkdjbUZ0WlNBOUlEQTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6VUhKdmFtVmpkRVoxYm1OMGFXOXVMbkpsWjJsemRHVnlRMjl0Y0c5emFYUnBiMjRnUFNCeVpXZHBjM1JsY2tOdmJYQnZjMmwwYVc5dU8xeHlYRzVjY2x4dVhISmNibHh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJmZEdocGMxQnliMnBsWTNSR2RXNWpkR2x2Ymp0Y2NseHVJQ0FnSUgxY2NseHVmU2dwS1R0Y2JuWmhjaUJGWm1abFkzUnpSWGh3Y21WemMybHZia2x1ZEdWeVptRmpaU0E5SUNobWRXNWpkR2x2YmlBb0tYdGNjbHh1SUNBZ0lIWmhjaUJ2WWlBOUlIdGNjbHh1SUNBZ0lDQWdJQ0JqY21WaGRHVkZabVpsWTNSelNXNTBaWEptWVdObE9pQmpjbVZoZEdWRlptWmxZM1J6U1c1MFpYSm1ZV05sWEhKY2JpQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHTnlaV0YwWlVWbVptVmpkSE5KYm5SbGNtWmhZMlVvWld4bGJTd2djSEp2Y0dWeWRIbEhjbTkxY0NsN1hISmNiaUFnSUNBZ0lDQWdhV1lvWld4bGJTNWxabVpsWTNSektYdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCbFptWmxZM1JGYkdWdFpXNTBjeUE5SUZ0ZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaV1ptWldOMGMwUmhkR0VnUFNCbGJHVnRMbVJoZEdFdVpXWTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwTENCc1pXNGdQU0JsYkdWdExtVm1abVZqZEhNdVpXWm1aV04wUld4bGJXVnVkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYVQwd08yazhiR1Z1TzJrclBURXBlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWldabVpXTjBSV3hsYldWdWRITXVjSFZ6YUNoamNtVmhkR1ZIY205MWNFbHVkR1Z5Wm1GalpTaGxabVpsWTNSelJHRjBZVnRwWFN4bGJHVnRMbVZtWm1WamRITXVaV1ptWldOMFJXeGxiV1Z1ZEhOYmFWMHNjSEp2Y0dWeWRIbEhjbTkxY0N4bGJHVnRLU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaWh1WVcxbEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCbFptWmxZM1J6SUQwZ1pXeGxiUzVrWVhSaExtVm1MQ0JwSUQwZ01Dd2diR1Z1SUQwZ1pXWm1aV04wY3k1c1pXNW5kR2c3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FHbHNaU2hwUEd4bGJpa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzVoYldVZ1BUMDlJR1ZtWm1WamRITmJhVjB1Ym0wZ2ZId2dibUZ0WlNBOVBUMGdaV1ptWldOMGMxdHBYUzV0YmlCOGZDQnVZVzFsSUQwOVBTQmxabVpsWTNSelcybGRMbWw0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWbVptVmpkRVZzWlcxbGJuUnpXMmxkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJQ3M5SURFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUjNKdmRYQkpiblJsY21aaFkyVW9aR0YwWVN4bGJHVnRaVzUwY3l3Z2NISnZjR1Z5ZEhsSGNtOTFjQ3dnWld4bGJTbDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHVm1abVZqZEVWc1pXMWxiblJ6SUQwZ1cxMDdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlHUmhkR0V1WldZdWJHVnVaM1JvTzF4eVhHNGdJQ0FnSUNBZ0lHWnZjaWhwUFRBN2FUeHNaVzQ3YVNzOU1TbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LR1JoZEdFdVpXWmJhVjB1ZEhrZ1BUMDlJRFVwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXWm1aV04wUld4bGJXVnVkSE11Y0hWemFDaGpjbVZoZEdWSGNtOTFjRWx1ZEdWeVptRmpaU2hrWVhSaExtVm1XMmxkTEdWc1pXMWxiblJ6TG1WbVptVmpkRVZzWlcxbGJuUnpXMmxkTEdWc1pXMWxiblJ6TG1WbVptVmpkRVZzWlcxbGJuUnpXMmxkTG5CeWIzQmxjblI1UjNKdmRYQXNJR1ZzWlcwcEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVm1abVZqZEVWc1pXMWxiblJ6TG5CMWMyZ29ZM0psWVhSbFZtRnNkV1ZKYm5SbGNtWmhZMlVvWld4bGJXVnVkSE11WldabVpXTjBSV3hsYldWdWRITmJhVjBzWkdGMFlTNWxabHRwWFM1MGVTd2daV3hsYlN3Z1gzQnliM0JsY25SNVIzSnZkWEFwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1gzQnliM0JsY25SNVIzSnZkWEFvZG1Gc0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSFpoYkNBOVBUMGdNU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJuY205MWNFbHVkR1Z5Wm1GalpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKdmNHVnlkSGxIY205MWNDaDJZV3d0TVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lIWmhjaUJuY205MWNFbHVkR1Z5Wm1GalpTQTlJR1oxYm1OMGFXOXVLRzVoYldVcGUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaV1ptWldOMGN5QTlJR1JoZEdFdVpXWXNJR2tnUFNBd0xDQnNaVzRnUFNCbFptWmxZM1J6TG14bGJtZDBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwYkdVb2FUeHNaVzRwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzVoYldVZ1BUMDlJR1ZtWm1WamRITmJhVjB1Ym0wZ2ZId2dibUZ0WlNBOVBUMGdaV1ptWldOMGMxdHBYUzV0YmlCOGZDQnVZVzFsSUQwOVBTQmxabVpsWTNSelcybGRMbWw0S1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlobFptWmxZM1J6VzJsZExuUjVJRDA5UFNBMUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVm1abVZqZEVWc1pXMWxiblJ6VzJsZE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJsWm1abFkzUkZiR1Z0Wlc1MGMxdHBYU2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dLejBnTVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaV1ptWldOMFJXeGxiV1Z1ZEhOYk1GMG9LVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUdkeWIzVndTVzUwWlhKbVlXTmxMbkJ5YjNCbGNuUjVSM0p2ZFhBZ1BTQmZjSEp2Y0dWeWRIbEhjbTkxY0R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYVdZb1pHRjBZUzV0YmlBOVBUMGdKMEZFUWtVZ1EyOXNiM0lnUTI5dWRISnZiQ2NwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1ozSnZkWEJKYm5SbGNtWmhZMlVzSUNkamIyeHZjaWNzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaV1ptWldOMFJXeGxiV1Z1ZEhOYk1GMG9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaG5jbTkxY0VsdWRHVnlabUZqWlN3Z0oyNTFiVkJ5YjNCbGNuUnBaWE1uTENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWVhSaExtNXdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdaM0p2ZFhCSmJuUmxjbVpoWTJVdVlXTjBhWFpsSUQwZ1pHRjBZUzVsYmlBaFBUMGdNRHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWjNKdmRYQkpiblJsY21aaFkyVmNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJqY21WaGRHVldZV3gxWlVsdWRHVnlabUZqWlNobGJHVnRaVzUwTENCMGVYQmxMQ0JsYkdWdExDQndjbTl3WlhKMGVVZHliM1Z3S1h0Y2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnBiblJsY21aaFkyVkdkVzVqZEdsdmJpZ3BlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWgwZVhCbElEMDlQU0F4TUNsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pXeGxiUzVqYjIxd0xtTnZiWEJKYm5SbGNtWmhZMlVvWld4bGJXVnVkQzV3TG5ZcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGZUhCeVpYTnphVzl1Vm1Gc2RXVW9aV3hsYldWdWRDNXdLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUtHVnNaVzFsYm5RdWNDNXpaWFJIY205MWNGQnliM0JsY25SNUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNaVzFsYm5RdWNDNXpaWFJIY205MWNGQnliM0JsY25SNUtIQnliM0JsY25SNVIzSnZkWEFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWRHVnlabUZqWlVaMWJtTjBhVzl1TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lISmxkSFZ5YmlCdllqdGNjbHh1WEhKY2JuMG9LU2s3WEc1MllYSWdUV0Z6YTAxaGJtRm5aWEpKYm5SbGNtWmhZMlVnUFNBb1puVnVZM1JwYjI0b0tYdGNjbHh1WEhKY2JseDBablZ1WTNScGIyNGdUV0Z6YTBsdWRHVnlabUZqWlNodFlYTnJMQ0JrWVhSaEtYdGNjbHh1WEhSY2RIUm9hWE11WDIxaGMyc2dQU0J0WVhOck8xeHlYRzVjZEZ4MGRHaHBjeTVmWkdGMFlTQTlJR1JoZEdFN1hISmNibHgwZlZ4eVhHNWNkRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoTllYTnJTVzUwWlhKbVlXTmxMbkJ5YjNSdmRIbHdaU3dnSjIxaGMydFFZWFJvSnl3Z2UxeHlYRzRnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0hSb2FYTXVYMjFoYzJzdWNISnZjQzVyS1h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXRZWE5yTG5CeWIzQXVaMlYwVm1Gc2RXVW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl0WVhOckxuQnliM0E3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1WEhKY2JseDBkbUZ5SUUxaGMydE5ZVzVoWjJWeUlEMGdablZ1WTNScGIyNG9iV0Z6YTAxaGJtRm5aWElzSUdWc1pXMHBlMXh5WEc1Y2RGeDBkbUZ5SUY5dFlYTnJUV0Z1WVdkbGNpQTlJRzFoYzJ0TllXNWhaMlZ5TzF4eVhHNWNkRngwZG1GeUlGOWxiR1Z0SUQwZ1pXeGxiVHRjY2x4dVhIUmNkSFpoY2lCZmJXRnphM05KYm5SbGNtWmhZMlZ6SUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN4N2JHVnVaM1JvT2lCdFlYTnJUV0Z1WVdkbGNpNTJhV1YzUkdGMFlTNXNaVzVuZEdoOUtUdGNjbHh1WEhSY2RIWmhjaUJwTENCc1pXNGdQU0J0WVhOclRXRnVZV2RsY2k1MmFXVjNSR0YwWVM1c1pXNW5kR2c3WEhKY2JseDBYSFJtYjNJb2FTQTlJREE3SUdrZ1BDQnNaVzQ3SUdrZ0t6MGdNU2tnZTF4eVhHNWNkRngwWEhSZmJXRnphM05KYm5SbGNtWmhZMlZ6VzJsZElEMGdibVYzSUUxaGMydEpiblJsY21aaFkyVW9iV0Z6YTAxaGJtRm5aWEl1ZG1sbGQwUmhkR0ZiYVYwc0lHMWhjMnROWVc1aFoyVnlMbTFoYzJ0elVISnZjR1Z5ZEdsbGMxdHBYU2s3WEhKY2JseDBYSFI5WEhKY2JseHlYRzVjZEZ4MGRtRnlJRzFoYzJ0R2RXNWpkR2x2YmlBOUlHWjFibU4wYVc5dUtHNWhiV1VwZTF4eVhHNWNkRngwWEhScElEMGdNRHRjY2x4dVhIUmNkQ0FnSUNCM2FHbHNaU2hwUEd4bGJpbDdYSEpjYmx4MFhIUWdJQ0FnSUNBZ0lHbG1LRzFoYzJ0TllXNWhaMlZ5TG0xaGMydHpVSEp2Y0dWeWRHbGxjMXRwWFM1dWJTQTlQVDBnYm1GdFpTbDdYSEpjYmx4MFhIUWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYMjFoYzJ0elNXNTBaWEptWVdObGMxdHBYVHRjY2x4dVhIUmNkQ0FnSUNBZ0lDQWdmVnh5WEc1Y2RGeDBJQ0FnSUNBZ0lDQnBJQ3M5SURFN1hISmNibHgwWEhRZ0lDQWdmVnh5WEc1Y2RGeDBmVnh5WEc1Y2RGeDBjbVYwZFhKdUlHMWhjMnRHZFc1amRHbHZibHh5WEc1Y2RIMWNjbHh1WEhSeVpYUjFjbTRnVFdGemEwMWhibUZuWlhKY2NseHVmU2dwS1Z4eVhHNWNjbHh1WEc1MllYSWdSWGh3Y21WemMybHZibFpoYkhWbElEMGdLR1oxYm1OMGFXOXVLQ2tnZTF4eVhHNWNkSEpsZEhWeWJpQm1kVzVqZEdsdmJpaGxiR1Z0Wlc1MFVISnZjQ3dnYlhWc2RDd2dkSGx3WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJSFpoY2lCbGVIQnlaWE56YVc5dVZtRnNkV1VzSUdGeWNtRjVWbUZzZFdVN1hISmNibHh5WEc1Y2RGeDBhV1lnS0dWc1pXMWxiblJRY205d0xtc3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaV3hsYldWdWRGQnliM0F1WjJWMFZtRnNkV1VvS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlHa3NJR3hsYml3Z1lYSnlWbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVXBJSHRjY2x4dUlDQWdJQ0FnSUNCY2RHbG1LSFI1Y0dVZ1BUMDlJQ2RqYjJ4dmNpY3BJSHRjY2x4dUlDQWdJQ0FnSUNCY2RGeDBiR1Z1SUQwZ05EdGNjbHh1WEhSY2RDQWdJQ0FnSUNBZ1pYaHdjbVZ6YzJsdmJsWmhiSFZsSUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN3Z2UyeGxibWQwYURvZ2JHVnVmU2s3WEhKY2JseDBYSFFnSUNBZ0lDQWdJR0Z5Y2xaaGJIVmxJRDBnUVhKeVlYa3VZWEJ3Ykhrb2JuVnNiQ3dnZTJ4bGJtZDBhRG9nYkdWdWZTazdYSEpjYmx4MFhIUWdJQ0FnSUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENCc1pXNDdJR2tnS3owZ01Ta2dlMXh5WEc1Y2RGeDBJQ0FnSUNBZ0lDQWdJQ0FnWlhod2NtVnpjMmx2YmxaaGJIVmxXMmxkSUQwZ1lYSnlWbUZzZFdWYmFWMGdQU0FvYlhWc2RDQW1KaUJwSUR3Z015a2dQeUJsYkdWdFpXNTBVSEp2Y0M1MlcybGRJQ29nYlhWc2RDQTZJREU3WEhKY2JseDBYSFFnSUNBZ0lDQWdJSDFjY2x4dVhIUWdJQ0FnSUNBZ0lGeDBaWGh3Y21WemMybHZibFpoYkhWbExuWmhiSFZsSUQwZ1lYSnlWbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdYSFI5WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ1pXeGxiV1Z1ZEZCeWIzQXVkaUE5UFQwZ0oyNTFiV0psY2ljZ2ZId2daV3hsYldWdWRGQnliM0F1ZGlCcGJuTjBZVzVqWlc5bUlFNTFiV0psY2lsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWNGNISmxjM05wYjI1V1lXeDFaU0E5SUcxMWJIUWdQeUJ1WlhjZ1RuVnRZbVZ5S0dWc1pXMWxiblJRY205d0xuWWdLaUJ0ZFd4MEtTQTZJRzVsZHlCT2RXMWlaWElvWld4bGJXVnVkRkJ5YjNBdWRpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVjRjSEpsYzNOcGIyNVdZV3gxWlM1MllXeDFaU0E5SUcxMWJIUWdQeUJsYkdWdFpXNTBVSEp2Y0M1MklDb2diWFZzZENBNklHVnNaVzFsYm5SUWNtOXdMblk3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQmNkR3hsYmlBOUlHVnNaVzFsYm5SUWNtOXdMbll1YkdWdVozUm9PMXh5WEc1Y2RDQWdJQ0FnSUNBZ1pYaHdjbVZ6YzJsdmJsWmhiSFZsSUQwZ1FYSnlZWGt1WVhCd2JIa29iblZzYkN3Z2UyeGxibWQwYURvZ2JHVnVmU2s3WEhKY2JseDBJQ0FnSUNBZ0lDQmhjbkpXWVd4MVpTQTlJRUZ5Y21GNUxtRndjR3g1S0c1MWJHd3NJSHRzWlc1bmRHZzZJR3hsYm4wcE8xeHlYRzVjZENBZ0lDQWdJQ0FnWm05eUlDaHBJRDBnTURzZ2FTQThJR3hsYmpzZ2FTQXJQU0F4S1NCN1hISmNibHgwSUNBZ0lDQWdJQ0FnSUNBZ1pYaHdjbVZ6YzJsdmJsWmhiSFZsVzJsZElEMGdZWEp5Vm1Gc2RXVmJhVjBnUFNCdGRXeDBJRDhnWld4bGJXVnVkRkJ5YjNBdWRsdHBYU0FxSUcxMWJIUWdPaUJsYkdWdFpXNTBVSEp2Y0M1MlcybGRPMXh5WEc1Y2RDQWdJQ0FnSUNBZ2ZWeHlYRzVjZENBZ0lDQWdJQ0FnWlhod2NtVnpjMmx2YmxaaGJIVmxMblpoYkhWbElEMGdZWEp5Vm1Gc2RXVTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lGeHlYRzRnSUNBZ0lDQWdJR1Y0Y0hKbGMzTnBiMjVXWVd4MVpTNXVkVzFMWlhseklEMGdaV3hsYldWdWRGQnliM0F1YTJWNVpuSmhiV1Z6SUQ4Z1pXeGxiV1Z1ZEZCeWIzQXVhMlY1Wm5KaGJXVnpMbXhsYm1kMGFDQTZJREE3WEhKY2JpQWdJQ0FnSUNBZ1pYaHdjbVZ6YzJsdmJsWmhiSFZsTG10bGVTQTlJR1oxYm1OMGFXOXVLSEJ2Y3lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV1Y0Y0hKbGMzTnBiMjVXWVd4MVpTNXVkVzFMWlhsektTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmxiR1Z0Wlc1MFVISnZjQzVyWlhsbWNtRnRaWE5iY0c5ekxURmRMblE3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOU8xeHlYRzRnSUNBZ0lDQWdJR1Y0Y0hKbGMzTnBiMjVXWVd4MVpTNTJZV3gxWlVGMFZHbHRaU0E5SUdWc1pXMWxiblJRY205d0xtZGxkRlpoYkhWbFFYUlVhVzFsTzF4eVhHNGdJQ0FnSUNBZ0lHVjRjSEpsYzNOcGIyNVdZV3gxWlM1d2NtOXdaWEowZVVkeWIzVndJRDBnWld4bGJXVnVkRkJ5YjNBdWNISnZjR1Z5ZEhsSGNtOTFjRHRjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWlhod2NtVnpjMmx2YmxaaGJIVmxPMXh5WEc1Y2RIMWNjbHh1ZlNncEtWeHVablZ1WTNScGIyNGdVMnhwWkdWeVJXWm1aV04wS0dSaGRHRXNaV3hsYlN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcGUxeHlYRzRnSUNBZ2RHaHBjeTV3SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG5Zc01Dd3dMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dWZWeHlYRzVtZFc1amRHbHZiaUJCYm1kc1pVVm1abVZqZENoa1lYUmhMR1ZzWlcwc0lHUjVibUZ0YVdOUWNtOXdaWEowYVdWektYdGNjbHh1SUNBZ0lIUm9hWE11Y0NBOUlGQnliM0JsY25SNVJtRmpkRzl5ZVM1blpYUlFjbTl3S0dWc1pXMHNaR0YwWVM1MkxEQXNNQ3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JuMWNjbHh1Wm5WdVkzUnBiMjRnUTI5c2IzSkZabVpsWTNRb1pHRjBZU3hsYkdWdExDQmtlVzVoYldsalVISnZjR1Z5ZEdsbGN5bDdYSEpjYmlBZ0lDQjBhR2x6TG5BZ1BTQlFjbTl3WlhKMGVVWmhZM1J2Y25rdVoyVjBVSEp2Y0NobGJHVnRMR1JoZEdFdWRpd3hMREFzWkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNTlYSEpjYm1aMWJtTjBhVzl1SUZCdmFXNTBSV1ptWldOMEtHUmhkR0VzWld4bGJTd2daSGx1WVcxcFkxQnliM0JsY25ScFpYTXBlMXh5WEc0Z0lDQWdkR2hwY3k1d0lEMGdVSEp2Y0dWeWRIbEdZV04wYjNKNUxtZGxkRkJ5YjNBb1pXeGxiU3hrWVhSaExuWXNNU3d3TEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVmVnh5WEc1bWRXNWpkR2x2YmlCTVlYbGxja2x1WkdWNFJXWm1aV04wS0dSaGRHRXNaV3hsYlN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcGUxeHlYRzRnSUNBZ2RHaHBjeTV3SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG5Zc01Dd3dMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dWZWeHlYRzVtZFc1amRHbHZiaUJOWVhOclNXNWtaWGhGWm1abFkzUW9aR0YwWVN4bGJHVnRMQ0JrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWw3WEhKY2JpQWdJQ0IwYUdsekxuQWdQU0JRY205d1pYSjBlVVpoWTNSdmNua3VaMlYwVUhKdmNDaGxiR1Z0TEdSaGRHRXVkaXd3TERBc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzU5WEhKY2JtWjFibU4wYVc5dUlFTm9aV05yWW05NFJXWm1aV04wS0dSaGRHRXNaV3hsYlN3Z1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcGUxeHlYRzRnSUNBZ2RHaHBjeTV3SUQwZ1VISnZjR1Z5ZEhsR1lXTjBiM0o1TG1kbGRGQnliM0FvWld4bGJTeGtZWFJoTG5Zc01Dd3dMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLVHRjY2x4dWZWeHlYRzVtZFc1amRHbHZiaUJPYjFaaGJIVmxSV1ptWldOMEtDbDdYSEpjYmlBZ0lDQjBhR2x6TG5BZ1BTQjdmVHRjY2x4dWZWeHVablZ1WTNScGIyNGdSV1ptWldOMGMwMWhibUZuWlhJb1pHRjBZU3hsYkdWdFpXNTBMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLWHRjY2x4dUlDQWdJSFpoY2lCbFptWmxZM1J6SUQwZ1pHRjBZUzVsWmp0Y2NseHVJQ0FnSUhSb2FYTXVaV1ptWldOMFJXeGxiV1Z1ZEhNZ1BTQmJYVHRjY2x4dUlDQWdJSFpoY2lCcExHeGxiaUE5SUdWbVptVmpkSE11YkdWdVozUm9PMXh5WEc0Z0lDQWdkbUZ5SUdWbVptVmpkRWwwWlcwN1hISmNiaUFnSUNCbWIzSW9hVDB3TzJrOGJHVnVPMmtyS3lrZ2UxeHlYRzRnSUNBZ0lDQWdJR1ZtWm1WamRFbDBaVzBnUFNCdVpYY2dSM0p2ZFhCRlptWmxZM1FvWldabVpXTjBjMXRwWFN4bGJHVnRaVzUwTEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1WbVptVmpkRVZzWlcxbGJuUnpMbkIxYzJnb1pXWm1aV04wU1hSbGJTazdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1aMWJtTjBhVzl1SUVkeWIzVndSV1ptWldOMEtHUmhkR0VzWld4bGJXVnVkQ3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWw3WEhKY2JpQWdJQ0IwYUdsekxtUjVibUZ0YVdOUWNtOXdaWEowYVdWeklEMGdXMTA3WEhKY2JpQWdJQ0IwYUdsekxtbHVhWFFvWkdGMFlTeGxiR1Z0Wlc1MExIUm9hWE11WkhsdVlXMXBZMUJ5YjNCbGNuUnBaWE1wTzF4eVhHNGdJQ0FnYVdZb2RHaHBjeTVrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeTVzWlc1bmRHZ3BlMXh5WEc0Z0lDQWdJQ0FnSUdSNWJtRnRhV05RY205d1pYSjBhV1Z6TG5CMWMyZ29kR2hwY3lrN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNia2R5YjNWd1JXWm1aV04wTG5CeWIzUnZkSGx3WlM1blpYUldZV3gxWlNBOUlHWjFibU4wYVc5dUtDbDdYSEpjYmlBZ0lDQjBhR2x6TG0xa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJSFJvYVhNdVpIbHVZVzFwWTFCeWIzQmxjblJwWlhNdWJHVnVaM1JvTzF4eVhHNGdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1SNWJtRnRhV05RY205d1pYSjBhV1Z6VzJsZExtZGxkRlpoYkhWbEtDazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXRaR1lnUFNCMGFHbHpMbVI1Ym1GdGFXTlFjbTl3WlhKMGFXVnpXMmxkTG0xa1ppQS9JSFJ5ZFdVZ09pQjBhR2x6TG0xa1pqdGNjbHh1SUNBZ0lIMWNjbHh1ZlR0Y2NseHVYSEpjYmtkeWIzVndSV1ptWldOMExuQnliM1J2ZEhsd1pTNXBibWwwSUQwZ1puVnVZM1JwYjI0b1pHRjBZU3hsYkdWdFpXNTBMR1I1Ym1GdGFXTlFjbTl3WlhKMGFXVnpLWHRjY2x4dUlDQWdJSFJvYVhNdVpHRjBZU0E5SUdSaGRHRTdYSEpjYmlBZ0lDQjBhR2x6TG0xa1ppQTlJR1poYkhObE8xeHlYRzRnSUNBZ2RHaHBjeTVsWm1abFkzUkZiR1Z0Wlc1MGN5QTlJRnRkTzF4eVhHNGdJQ0FnZG1GeUlHa3NJR3hsYmlBOUlIUm9hWE11WkdGMFlTNWxaaTVzWlc1bmRHZzdYSEpjYmlBZ0lDQjJZWElnWldabUxDQmxabVpsWTNSeklEMGdkR2hwY3k1a1lYUmhMbVZtTzF4eVhHNGdJQ0FnWm05eUtHazlNRHRwUEd4bGJqdHBLejB4S1h0Y2NseHVJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pXWm1aV04wYzF0cFhTNTBlU2w3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01EcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZtWmlBOUlHNWxkeUJUYkdsa1pYSkZabVpsWTNRb1pXWm1aV04wYzF0cFhTeGxiR1Z0Wlc1MExHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXWm1aV04wUld4bGJXVnVkSE11Y0hWemFDaGxabVlwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01UcGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZtWmlBOUlHNWxkeUJCYm1kc1pVVm1abVZqZENobFptWmxZM1J6VzJsZExHVnNaVzFsYm5Rc1pIbHVZVzFwWTFCeWIzQmxjblJwWlhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bFptWmxZM1JGYkdWdFpXNTBjeTV3ZFhOb0tHVm1aaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeU9seHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV1ptSUQwZ2JtVjNJRU52Ykc5eVJXWm1aV04wS0dWbVptVmpkSE5iYVYwc1pXeGxiV1Z1ZEN4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1WbVptVmpkRVZzWlcxbGJuUnpMbkIxYzJnb1pXWm1LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURNNlhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxabVlnUFNCdVpYY2dVRzlwYm5SRlptWmxZM1FvWldabVpXTjBjMXRwWFN4bGJHVnRaVzUwTEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WldabVpXTjBSV3hsYldWdWRITXVjSFZ6YUNobFptWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTkRwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQTNPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWldabUlEMGdibVYzSUVOb1pXTnJZbTk0UldabVpXTjBLR1ZtWm1WamRITmJhVjBzWld4bGJXVnVkQ3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZtWm1WamRFVnNaVzFsYm5SekxuQjFjMmdvWldabUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJREV3T2x4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXWm1JRDBnYm1WM0lFeGhlV1Z5U1c1a1pYaEZabVpsWTNRb1pXWm1aV04wYzF0cFhTeGxiR1Z0Wlc1MExHUjVibUZ0YVdOUWNtOXdaWEowYVdWektUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpXWm1aV04wUld4bGJXVnVkSE11Y0hWemFDaGxabVlwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01URTZYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsWm1ZZ1BTQnVaWGNnVFdGemEwbHVaR1Y0UldabVpXTjBLR1ZtWm1WamRITmJhVjBzWld4bGJXVnVkQ3hrZVc1aGJXbGpVSEp2Y0dWeWRHbGxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVZtWm1WamRFVnNaVzFsYm5SekxuQjFjMmdvWldabUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRFU2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbFptWWdQU0J1WlhjZ1JXWm1aV04wYzAxaGJtRm5aWElvWldabVpXTjBjMXRwWFN4bGJHVnRaVzUwTEdSNWJtRnRhV05RY205d1pYSjBhV1Z6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WldabVpXTjBSV3hsYldWdWRITXVjSFZ6YUNobFptWXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTmpwY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVm1aaUE5SUc1bGR5Qk9iMVpoYkhWbFJXWm1aV04wS0dWbVptVmpkSE5iYVYwc1pXeGxiV1Z1ZEN4a2VXNWhiV2xqVUhKdmNHVnlkR2xsY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1WbVptVmpkRVZzWlcxbGJuUnpMbkIxYzJnb1pXWm1LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVHRjY2x4dUlDQWdJSFpoY2lCaWIyUjViVzkyYVc1cWN5QTlJSHQ5TzF4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxkRXh2WTJGMGFXOXVTSEpsWmlBb2FISmxaaWtnZTF4eVhHNGdJQ0FnSUNBZ0lHeHZZMkYwYVc5dVNISmxaaUE5SUdoeVpXWTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQndiR0Y1S0dGdWFXMWhkR2x2YmlsN1hISmNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVUV0Z1WVdkbGNpNXdiR0Y1S0dGdWFXMWhkR2x2YmlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjR0YxYzJVb1lXNXBiV0YwYVc5dUtTQjdYSEpjYmlBZ0lDQWdJQ0FnWVc1cGJXRjBhVzl1VFdGdVlXZGxjaTV3WVhWelpTaGhibWx0WVhScGIyNHBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhSdloyZHNaVkJoZFhObEtHRnVhVzFoZEdsdmJpa2dlMXh5WEc0Z0lDQWdJQ0FnSUdGdWFXMWhkR2x2YmsxaGJtRm5aWEl1ZEc5bloyeGxVR0YxYzJVb1lXNXBiV0YwYVc5dUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JtZFc1amRHbHZiaUJ6WlhSVGNHVmxaQ2gyWVd4MVpTd2dZVzVwYldGMGFXOXVLU0I3WEhKY2JpQWdJQ0FnSUNBZ1lXNXBiV0YwYVc5dVRXRnVZV2RsY2k1elpYUlRjR1ZsWkNoMllXeDFaU3dnWVc1cGJXRjBhVzl1S1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnpaWFJFYVhKbFkzUnBiMjRvZG1Gc2RXVXNJR0Z1YVcxaGRHbHZiaWtnZTF4eVhHNGdJQ0FnSUNBZ0lHRnVhVzFoZEdsdmJrMWhibUZuWlhJdWMyVjBSR2x5WldOMGFXOXVLSFpoYkhWbExDQmhibWx0WVhScGIyNHBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhOMGIzQW9ZVzVwYldGMGFXOXVLU0I3WEhKY2JpQWdJQ0FnSUNBZ1lXNXBiV0YwYVc5dVRXRnVZV2RsY2k1emRHOXdLR0Z1YVcxaGRHbHZiaWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1puVnVZM1JwYjI0Z2JXOTJaVVp5WVcxbEtIWmhiSFZsS1NCN1hISmNiaUFnSUNBZ0lDQWdZVzVwYldGMGFXOXVUV0Z1WVdkbGNpNXRiM1psUm5KaGJXVW9kbUZzZFdVcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSE5sWVhKamFFRnVhVzFoZEdsdmJuTW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSE4wWVc1a1lXeHZibVVnUFQwOUlIUnlkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBhVzl1VFdGdVlXZGxjaTV6WldGeVkyaEJibWx0WVhScGIyNXpLR0Z1YVcxaGRHbHZia1JoZEdFc0lITjBZVzVrWVd4dmJtVXNJSEpsYm1SbGNtVnlLVHRjY2x4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjVOWVc1aFoyVnlMbk5sWVhKamFFRnVhVzFoZEdsdmJuTW9LVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjbVZuYVhOMFpYSkJibWx0WVhScGIyNG9aV3hsYlNrZ2UxeHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmhibWx0WVhScGIyNU5ZVzVoWjJWeUxuSmxaMmx6ZEdWeVFXNXBiV0YwYVc5dUtHVnNaVzBwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlISmxjMmw2WlNncElIdGNjbHh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjVOWVc1aFoyVnlMbkpsYzJsNlpTZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUhOMFlYSjBLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lHRnVhVzFoZEdsdmJrMWhibUZuWlhJdWMzUmhjblFvS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQm5iMVJ2UVc1a1UzUnZjQ2gyWVd3c0lHbHpSbkpoYldVc0lHRnVhVzFoZEdsdmJpa2dlMXh5WEc0Z0lDQWdJQ0FnSUdGdWFXMWhkR2x2YmsxaGJtRm5aWEl1WjI5VWIwRnVaRk4wYjNBb2RtRnNMQ0JwYzBaeVlXMWxMQ0JoYm1sdFlYUnBiMjRwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlITmxkRk4xWW1aeVlXMWxVbVZ1WkdWeWFXNW5LR1pzWVdjcElIdGNjbHh1SUNBZ0lDQWdJQ0J6ZFdKbWNtRnRaVVZ1WVdKc1pXUWdQU0JtYkdGbk8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR3h2WVdSQmJtbHRZWFJwYjI0b2NHRnlZVzF6S1NCN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hOMFlXNWtZV3h2Ym1VZ1BUMDlJSFJ5ZFdVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRnlZVzF6TG1GdWFXMWhkR2x2YmtSaGRHRWdQU0JLVTA5T0xuQmhjbk5sS0dGdWFXMWhkR2x2YmtSaGRHRXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1lXNXBiV0YwYVc5dVRXRnVZV2RsY2k1c2IyRmtRVzVwYldGMGFXOXVLSEJoY21GdGN5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWm5WdVkzUnBiMjRnWkdWemRISnZlU2hoYm1sdFlYUnBiMjRwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1lXNXBiV0YwYVc5dVRXRnVZV2RsY2k1a1pYTjBjbTk1S0dGdWFXMWhkR2x2YmlrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdjMlYwVVhWaGJHbDBlU2gyWVd4MVpTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2RtRnNkV1VnUFQwOUlDZHpkSEpwYm1jbktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNBb2RtRnNkV1VwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSjJocFoyZ25PbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhSRGRYSjJaVk5sWjIxbGJuUnpJRDBnTWpBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQW5iV1ZrYVhWdEp6cGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwUTNWeWRtVlRaV2R0Wlc1MGN5QTlJRFV3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBbmJHOTNKenBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4MFEzVnlkbVZUWldkdFpXNTBjeUE5SURFd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNnaGFYTk9ZVTRvZG1Gc2RXVXBJQ1ltSUhaaGJIVmxJRDRnTVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwUTNWeWRtVlRaV2R0Wlc1MGN5QTlJSFpoYkhWbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCcFppQW9aR1ZtWVhWc2RFTjFjblpsVTJWbmJXVnVkSE1nUGowZ05UQXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbTkxYm1SV1lXeDFaWE1vWm1Gc2MyVXBPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEp2ZFc1a1ZtRnNkV1Z6S0hSeWRXVXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnBia0p5YjNkelpYSW9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSNWNHVnZaaUJ1WVhacFoyRjBiM0lnSVQwOUlDZDFibVJsWm1sdVpXUW5PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdaMWJtTjBhVzl1SUdsdWMzUmhiR3hRYkhWbmFXNG9kSGx3WlN3Z2NHeDFaMmx1S1NCN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVWdQVDA5SUNkbGVIQnlaWE56YVc5dWN5Y3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaWGh3Y21WemMybHZibk5RYkhWbmFXNGdQU0J3YkhWbmFXNDdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHWjFibU4wYVc5dUlHZGxkRVpoWTNSdmNua29ibUZ0WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJSE4zYVhSamFDQW9ibUZ0WlNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpY0hKdmNHVnlkSGxHWVdOMGIzSjVYQ0k2WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUhKdmNHVnlkSGxHWVdOMGIzSjVPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZ3aWMyaGhjR1ZRY205d1pYSjBlVVpoWTNSdmNubGNJanBjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJUYUdGd1pWQnliM0JsY25SNVJtRmpkRzl5ZVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmNJbTFoZEhKcGVGd2lPbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEhKcGVEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0JpYjJSNWJXOTJhVzVxY3k1d2JHRjVJRDBnY0d4aGVUdGNjbHh1SUNBZ0lHSnZaSGx0YjNacGJtcHpMbkJoZFhObElEMGdjR0YxYzJVN1hISmNiaUFnSUNCaWIyUjViVzkyYVc1cWN5NXpaWFJNYjJOaGRHbHZia2h5WldZZ1BTQnpaWFJNYjJOaGRHbHZia2h5WldZN1hISmNiaUFnSUNCaWIyUjViVzkyYVc1cWN5NTBiMmRuYkdWUVlYVnpaU0E5SUhSdloyZHNaVkJoZFhObE8xeHlYRzRnSUNBZ1ltOWtlVzF2ZG1sdWFuTXVjMlYwVTNCbFpXUWdQU0J6WlhSVGNHVmxaRHRjY2x4dUlDQWdJR0p2WkhsdGIzWnBibXB6TG5ObGRFUnBjbVZqZEdsdmJpQTlJSE5sZEVScGNtVmpkR2x2Ymp0Y2NseHVJQ0FnSUdKdlpIbHRiM1pwYm1wekxuTjBiM0FnUFNCemRHOXdPMXh5WEc0Z0lDQWdZbTlrZVcxdmRtbHVhbk11Ylc5MlpVWnlZVzFsSUQwZ2JXOTJaVVp5WVcxbE8xeHlYRzRnSUNBZ1ltOWtlVzF2ZG1sdWFuTXVjMlZoY21Ob1FXNXBiV0YwYVc5dWN5QTlJSE5sWVhKamFFRnVhVzFoZEdsdmJuTTdYSEpjYmlBZ0lDQmliMlI1Ylc5MmFXNXFjeTV5WldkcGMzUmxja0Z1YVcxaGRHbHZiaUE5SUhKbFoybHpkR1Z5UVc1cGJXRjBhVzl1TzF4eVhHNGdJQ0FnWW05a2VXMXZkbWx1YW5NdWJHOWhaRUZ1YVcxaGRHbHZiaUE5SUd4dllXUkJibWx0WVhScGIyNDdYSEpjYmlBZ0lDQmliMlI1Ylc5MmFXNXFjeTV6WlhSVGRXSm1jbUZ0WlZKbGJtUmxjbWx1WnlBOUlITmxkRk4xWW1aeVlXMWxVbVZ1WkdWeWFXNW5PMXh5WEc0Z0lDQWdZbTlrZVcxdmRtbHVhbk11Y21WemFYcGxJRDBnY21WemFYcGxPMXh5WEc0Z0lDQWdZbTlrZVcxdmRtbHVhbk11YzNSaGNuUWdQU0J6ZEdGeWREdGNjbHh1SUNBZ0lHSnZaSGx0YjNacGJtcHpMbWR2Vkc5QmJtUlRkRzl3SUQwZ1oyOVViMEZ1WkZOMGIzQTdYSEpjYmlBZ0lDQmliMlI1Ylc5MmFXNXFjeTVrWlhOMGNtOTVJRDBnWkdWemRISnZlVHRjY2x4dUlDQWdJR0p2WkhsdGIzWnBibXB6TG5ObGRGRjFZV3hwZEhrZ1BTQnpaWFJSZFdGc2FYUjVPMXh5WEc0Z0lDQWdZbTlrZVcxdmRtbHVhbk11YVc1Q2NtOTNjMlZ5SUQwZ2FXNUNjbTkzYzJWeU8xeHlYRzRnSUNBZ1ltOWtlVzF2ZG1sdWFuTXVhVzV6ZEdGc2JGQnNkV2RwYmlBOUlHbHVjM1JoYkd4UWJIVm5hVzQ3WEhKY2JpQWdJQ0JpYjJSNWJXOTJhVzVxY3k1ZlgyZGxkRVpoWTNSdmNua2dQU0JuWlhSR1lXTjBiM0o1TzF4eVhHNGdJQ0FnWW05a2VXMXZkbWx1YW5NdWRtVnljMmx2YmlBOUlDYzBMakV6TGpBbk8xeHlYRzVjY2x4dUlDQWdJR1oxYm1OMGFXOXVJR05vWldOclVtVmhaSGtvS1NCN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0dSdlkzVnRaVzUwTG5KbFlXUjVVM1JoZEdVZ1BUMDlJRndpWTI5dGNHeGxkR1ZjSWlrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamJHVmhja2x1ZEdWeWRtRnNLSEpsWVdSNVUzUmhkR1ZEYUdWamEwbHVkR1Z5ZG1Gc0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MyVmhjbU5vUVc1cGJXRjBhVzl1Y3lncE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCblpYUlJkV1Z5ZVZaaGNtbGhZbXhsS0haaGNtbGhZbXhsS1NCN1hISmNiaUFnSUNBZ0lDQWdkbUZ5SUhaaGNuTWdQU0J4ZFdWeWVWTjBjbWx1Wnk1emNHeHBkQ2duSmljcE8xeHlYRzRnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnZG1GeWN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2NHRnBjaUE5SUhaaGNuTmJhVjB1YzNCc2FYUW9KejBuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUmxZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaHdZV2x5V3pCZEtTQTlQU0IyWVhKcFlXSnNaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENod1lXbHlXekZkS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lIWmhjaUJ6ZEdGdVpHRnNiMjVsSUQwZ0oxOWZXMU5VUVU1RVFVeFBUa1ZkWDE4bk8xeHlYRzRnSUNBZ2RtRnlJR0Z1YVcxaGRHbHZia1JoZEdFZ1BTQW5YMTliUVU1SlRVRlVTVTlPUkVGVVFWMWZYeWM3WEhKY2JpQWdJQ0IyWVhJZ2NtVnVaR1Z5WlhJZ1BTQW5KenRjY2x4dUlDQWdJR2xtSUNoemRHRnVaR0ZzYjI1bEtTQjdYSEpjYmlBZ0lDQWdJQ0FnZG1GeUlITmpjbWx3ZEhNZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBjMEo1VkdGblRtRnRaU2duYzJOeWFYQjBKeWs3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJR2x1WkdWNElEMGdjMk55YVhCMGN5NXNaVzVuZEdnZ0xTQXhPMXh5WEc0Z0lDQWdJQ0FnSUhaaGNpQnRlVk5qY21sd2RDQTlJSE5qY21sd2RITmJhVzVrWlhoZElIeDhJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjM0pqT2lBbkoxeHlYRzRnSUNBZ0lDQWdJSDA3WEhKY2JpQWdJQ0FnSUNBZ2RtRnlJSEYxWlhKNVUzUnlhVzVuSUQwZ2JYbFRZM0pwY0hRdWMzSmpMbkpsY0d4aFkyVW9MMTViWGx4Y1AxMHJYRncvUHk4c0lDY25LVHRjY2x4dUlDQWdJQ0FnSUNCeVpXNWtaWEpsY2lBOUlHZGxkRkYxWlhKNVZtRnlhV0ZpYkdVb0ozSmxibVJsY21WeUp5azdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQjJZWElnY21WaFpIbFRkR0YwWlVOb1pXTnJTVzUwWlhKMllXd2dQU0J6WlhSSmJuUmxjblpoYkNoamFHVmphMUpsWVdSNUxDQXhNREFwTzF4eVhHNGdJQ0FnY21WMGRYSnVJR0p2WkhsdGIzWnBibXB6TzF4eVhHNTlLU2s3SWl3aUx5b2hJRWhoYlcxbGNpNUtVeUF0SUhZeUxqQXVOeUF0SURJd01UWXRNRFF0TWpKY2JpQXFJR2gwZEhBNkx5OW9ZVzF0WlhKcWN5NW5hWFJvZFdJdWFXOHZYRzRnS2x4dUlDb2dRMjl3ZVhKcFoyaDBJQ2hqS1NBeU1ERTJJRXB2Y21scklGUmhibWRsYkdSbGNqdGNiaUFxSUV4cFkyVnVjMlZrSUhWdVpHVnlJSFJvWlNCTlNWUWdiR2xqWlc1elpTQXFMMXh1S0daMWJtTjBhVzl1S0hkcGJtUnZkeXdnWkc5amRXMWxiblFzSUdWNGNHOXlkRTVoYldVc0lIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQldSVTVFVDFKZlVGSkZSa2xZUlZNZ1BTQmJKeWNzSUNkM1pXSnJhWFFuTENBblRXOTZKeXdnSjAxVEp5d2dKMjF6Snl3Z0oyOG5YVHRjYm5aaGNpQlVSVk5VWDBWTVJVMUZUbFFnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RrYVhZbktUdGNibHh1ZG1GeUlGUlpVRVZmUmxWT1ExUkpUMDRnUFNBblpuVnVZM1JwYjI0bk8xeHVYRzUyWVhJZ2NtOTFibVFnUFNCTllYUm9Mbkp2ZFc1a08xeHVkbUZ5SUdGaWN5QTlJRTFoZEdndVlXSnpPMXh1ZG1GeUlHNXZkeUE5SUVSaGRHVXVibTkzTzF4dVhHNHZLaXBjYmlBcUlITmxkQ0JoSUhScGJXVnZkWFFnZDJsMGFDQmhJR2RwZG1WdUlITmpiM0JsWEc0Z0tpQkFjR0Z5WVcwZ2UwWjFibU4wYVc5dWZTQm1ibHh1SUNvZ1FIQmhjbUZ0SUh0T2RXMWlaWEo5SUhScGJXVnZkWFJjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCamIyNTBaWGgwWEc0Z0tpQkFjbVYwZFhKdWN5QjdiblZ0WW1WeWZWeHVJQ292WEc1bWRXNWpkR2x2YmlCelpYUlVhVzFsYjNWMFEyOXVkR1Y0ZENobWJpd2dkR2x0Wlc5MWRDd2dZMjl1ZEdWNGRDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCelpYUlVhVzFsYjNWMEtHSnBibVJHYmlobWJpd2dZMjl1ZEdWNGRDa3NJSFJwYldWdmRYUXBPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlHbG1JSFJvWlNCaGNtZDFiV1Z1ZENCcGN5QmhiaUJoY25KaGVTd2dkMlVnZDJGdWRDQjBieUJsZUdWamRYUmxJSFJvWlNCbWJpQnZiaUJsWVdOb0lHVnVkSEo1WEc0Z0tpQnBaaUJwZENCaGFXNTBJR0Z1SUdGeWNtRjVJSGRsSUdSdmJpZDBJSGRoYm5RZ2RHOGdaRzhnWVNCMGFHbHVaeTVjYmlBcUlIUm9hWE1nYVhNZ2RYTmxaQ0JpZVNCaGJHd2dkR2hsSUcxbGRHaHZaSE1nZEdoaGRDQmhZMk5sY0hRZ1lTQnphVzVuYkdVZ1lXNWtJR0Z5Y21GNUlHRnlaM1Z0Wlc1MExseHVJQ29nUUhCaGNtRnRJSHNxZkVGeWNtRjVmU0JoY21kY2JpQXFJRUJ3WVhKaGJTQjdVM1J5YVc1bmZTQm1ibHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUZ0amIyNTBaWGgwWFZ4dUlDb2dRSEpsZEhWeWJuTWdlMEp2YjJ4bFlXNTlYRzRnS2k5Y2JtWjFibU4wYVc5dUlHbHVkbTlyWlVGeWNtRjVRWEpuS0dGeVp5d2dabTRzSUdOdmJuUmxlSFFwSUh0Y2JpQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hoY21jcEtTQjdYRzRnSUNBZ0lDQWdJR1ZoWTJnb1lYSm5MQ0JqYjI1MFpYaDBXMlp1WFN3Z1kyOXVkR1Y0ZENrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNuVmxPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ2QyRnNheUJ2WW1wbFkzUnpJR0Z1WkNCaGNuSmhlWE5jYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCdlltcGNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdsMFpYSmhkRzl5WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1kyOXVkR1Y0ZEZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJsWVdOb0tHOWlhaXdnYVhSbGNtRjBiM0lzSUdOdmJuUmxlSFFwSUh0Y2JpQWdJQ0IyWVhJZ2FUdGNibHh1SUNBZ0lHbG1JQ2doYjJKcUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9iMkpxTG1admNrVmhZMmdwSUh0Y2JpQWdJQ0FnSUNBZ2IySnFMbVp2Y2tWaFkyZ29hWFJsY21GMGIzSXNJR052Ym5SbGVIUXBPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9iMkpxTG14bGJtZDBhQ0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQWdJR2tnUFNBd08xeHVJQ0FnSUNBZ0lDQjNhR2xzWlNBb2FTQThJRzlpYWk1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2wwWlhKaGRHOXlMbU5oYkd3b1kyOXVkR1Y0ZEN3Z2IySnFXMmxkTENCcExDQnZZbW9wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhU3NyTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnWm05eUlDaHBJR2x1SUc5aWFpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IySnFMbWhoYzA5M2JsQnliM0JsY25SNUtHa3BJQ1ltSUdsMFpYSmhkRzl5TG1OaGJHd29ZMjl1ZEdWNGRDd2diMkpxVzJsZExDQnBMQ0J2WW1vcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUhkeVlYQWdZU0J0WlhSb2IyUWdkMmwwYUNCaElHUmxjSEpsWTJGMGFXOXVJSGRoY201cGJtY2dZVzVrSUhOMFlXTnJJSFJ5WVdObFhHNGdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0J0WlhSb2IyUmNiaUFxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0J1WVcxbFhHNGdLaUJBY0dGeVlXMGdlMU4wY21sdVozMGdiV1Z6YzJGblpWeHVJQ29nUUhKbGRIVnlibk1nZTBaMWJtTjBhVzl1ZlNCQklHNWxkeUJtZFc1amRHbHZiaUIzY21Gd2NHbHVaeUIwYUdVZ2MzVndjR3hwWldRZ2JXVjBhRzlrTGx4dUlDb3ZYRzVtZFc1amRHbHZiaUJrWlhCeVpXTmhkR1VvYldWMGFHOWtMQ0J1WVcxbExDQnRaWE56WVdkbEtTQjdYRzRnSUNBZ2RtRnlJR1JsY0hKbFkyRjBhVzl1VFdWemMyRm5aU0E5SUNkRVJWQlNSVU5CVkVWRUlFMUZWRWhQUkRvZ0p5QXJJRzVoYldVZ0t5QW5YRnh1SnlBcklHMWxjM05oWjJVZ0t5QW5JRUZVSUZ4Y2JpYzdYRzRnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWlNBOUlHNWxkeUJGY25KdmNpZ25aMlYwTFhOMFlXTnJMWFJ5WVdObEp5azdYRzRnSUNBZ0lDQWdJSFpoY2lCemRHRmpheUE5SUdVZ0ppWWdaUzV6ZEdGamF5QS9JR1V1YzNSaFkyc3VjbVZ3YkdGalpTZ3ZYbHRlWEZ3b1hTcy9XMXhjYmlSZEwyZHRMQ0FuSnlsY2JpQWdJQ0FnSUNBZ0lDQWdJQzV5WlhCc1lXTmxLQzllWEZ4eksyRjBYRnh6S3k5bmJTd2dKeWNwWEc0Z0lDQWdJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpTZ3ZYazlpYW1WamRDNDhZVzV2Ym5sdGIzVnpQbHhjY3lwY1hDZ3ZaMjBzSUNkN1lXNXZibmx0YjNWemZTZ3BRQ2NwSURvZ0oxVnVhMjV2ZDI0Z1UzUmhZMnNnVkhKaFkyVW5PMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQnNiMmNnUFNCM2FXNWtiM2N1WTI5dWMyOXNaU0FtSmlBb2QybHVaRzkzTG1OdmJuTnZiR1V1ZDJGeWJpQjhmQ0IzYVc1a2IzY3VZMjl1YzI5c1pTNXNiMmNwTzF4dUlDQWdJQ0FnSUNCcFppQW9iRzluS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzYjJjdVkyRnNiQ2gzYVc1a2IzY3VZMjl1YzI5c1pTd2daR1Z3Y21WallYUnBiMjVOWlhOellXZGxMQ0J6ZEdGamF5azdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzFsZEdodlpDNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dUlDQWdJSDA3WEc1OVhHNWNiaThxS2x4dUlDb2daWGgwWlc1a0lHOWlhbVZqZEM1Y2JpQXFJRzFsWVc1eklIUm9ZWFFnY0hKdmNHVnlkR2xsY3lCcGJpQmtaWE4wSUhkcGJHd2dZbVVnYjNabGNuZHlhWFIwWlc0Z1lua2dkR2hsSUc5dVpYTWdhVzRnYzNKakxseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFJoY21kbGRGeHVJQ29nUUhCaGNtRnRJSHN1TGk1UFltcGxZM1I5SUc5aWFtVmpkSE5mZEc5ZllYTnphV2R1WEc0Z0tpQkFjbVYwZFhKdWN5QjdUMkpxWldOMGZTQjBZWEpuWlhSY2JpQXFMMXh1ZG1GeUlHRnpjMmxuYmp0Y2JtbG1JQ2gwZVhCbGIyWWdUMkpxWldOMExtRnpjMmxuYmlBaFBUMGdKMloxYm1OMGFXOXVKeWtnZTF4dUlDQWdJR0Z6YzJsbmJpQTlJR1oxYm1OMGFXOXVJR0Z6YzJsbmJpaDBZWEpuWlhRcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSaGNtZGxkQ0E5UFQwZ2RXNWtaV1pwYm1Wa0lIeDhJSFJoY21kbGRDQTlQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpZ25RMkZ1Ym05MElHTnZiblpsY25RZ2RXNWtaV1pwYm1Wa0lHOXlJRzUxYkd3Z2RHOGdiMkpxWldOMEp5azdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMllYSWdiM1YwY0hWMElEMGdUMkpxWldOMEtIUmhjbWRsZENrN1hHNGdJQ0FnSUNBZ0lHWnZjaUFvZG1GeUlHbHVaR1Y0SUQwZ01Uc2dhVzVrWlhnZ1BDQmhjbWQxYldWdWRITXViR1Z1WjNSb095QnBibVJsZUNzcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMjkxY21ObElEMGdZWEpuZFcxbGJuUnpXMmx1WkdWNFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpiM1Z5WTJVZ0lUMDlJSFZ1WkdWbWFXNWxaQ0FtSmlCemIzVnlZMlVnSVQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCdVpYaDBTMlY1SUdsdUlITnZkWEpqWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MyOTFjbU5sTG1oaGMwOTNibEJ5YjNCbGNuUjVLRzVsZUhSTFpYa3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhSd2RYUmJibVY0ZEV0bGVWMGdQU0J6YjNWeVkyVmJibVY0ZEV0bGVWMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc5MWRIQjFkRHRjYmlBZ0lDQjlPMXh1ZlNCbGJITmxJSHRjYmlBZ0lDQmhjM05wWjI0Z1BTQlBZbXBsWTNRdVlYTnphV2R1TzF4dWZWeHVYRzR2S2lwY2JpQXFJR1Y0ZEdWdVpDQnZZbXBsWTNRdVhHNGdLaUJ0WldGdWN5QjBhR0YwSUhCeWIzQmxjblJwWlhNZ2FXNGdaR1Z6ZENCM2FXeHNJR0psSUc5MlpYSjNjbWwwZEdWdUlHSjVJSFJvWlNCdmJtVnpJR2x1SUhOeVl5NWNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JrWlhOMFhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdjM0pqWEc0Z0tpQkFjR0Z5WVcwZ2UwSnZiMnhsWVc1OUlGdHRaWEpuWlQxbVlXeHpaVjFjYmlBcUlFQnlaWFIxY201eklIdFBZbXBsWTNSOUlHUmxjM1JjYmlBcUwxeHVkbUZ5SUdWNGRHVnVaQ0E5SUdSbGNISmxZMkYwWlNobWRXNWpkR2x2YmlCbGVIUmxibVFvWkdWemRDd2djM0pqTENCdFpYSm5aU2tnZTF4dUlDQWdJSFpoY2lCclpYbHpJRDBnVDJKcVpXTjBMbXRsZVhNb2MzSmpLVHRjYmlBZ0lDQjJZWElnYVNBOUlEQTdYRzRnSUNBZ2QyaHBiR1VnS0drZ1BDQnJaWGx6TG14bGJtZDBhQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JVzFsY21kbElIeDhJQ2h0WlhKblpTQW1KaUJrWlhOMFcydGxlWE5iYVYxZElEMDlQU0IxYm1SbFptbHVaV1FwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrWlhOMFcydGxlWE5iYVYxZElEMGdjM0pqVzJ0bGVYTmJhVjFkTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHa3JLenRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUdSbGMzUTdYRzU5TENBblpYaDBaVzVrSnl3Z0oxVnpaU0JnWVhOemFXZHVZQzRuS1R0Y2JseHVMeW9xWEc0Z0tpQnRaWEpuWlNCMGFHVWdkbUZzZFdWeklHWnliMjBnYzNKaklHbHVJSFJvWlNCa1pYTjBMbHh1SUNvZ2JXVmhibk1nZEdoaGRDQndjbTl3WlhKMGFXVnpJSFJvWVhRZ1pYaHBjM1FnYVc0Z1pHVnpkQ0IzYVd4c0lHNXZkQ0JpWlNCdmRtVnlkM0pwZEhSbGJpQmllU0J6Y21OY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQmtaWE4wWEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ2MzSmpYRzRnS2lCQWNtVjBkWEp1Y3lCN1QySnFaV04wZlNCa1pYTjBYRzRnS2k5Y2JuWmhjaUJ0WlhKblpTQTlJR1JsY0hKbFkyRjBaU2htZFc1amRHbHZiaUJ0WlhKblpTaGtaWE4wTENCemNtTXBJSHRjYmlBZ0lDQnlaWFIxY200Z1pYaDBaVzVrS0dSbGMzUXNJSE55WXl3Z2RISjFaU2s3WEc1OUxDQW5iV1Z5WjJVbkxDQW5WWE5sSUdCaGMzTnBaMjVnTGljcE8xeHVYRzR2S2lwY2JpQXFJSE5wYlhCc1pTQmpiR0Z6Y3lCcGJtaGxjbWwwWVc1alpWeHVJQ29nUUhCaGNtRnRJSHRHZFc1amRHbHZibjBnWTJocGJHUmNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdKaGMyVmNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JiY0hKdmNHVnlkR2xsYzExY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYVc1b1pYSnBkQ2hqYUdsc1pDd2dZbUZ6WlN3Z2NISnZjR1Z5ZEdsbGN5a2dlMXh1SUNBZ0lIWmhjaUJpWVhObFVDQTlJR0poYzJVdWNISnZkRzkwZVhCbExGeHVJQ0FnSUNBZ0lDQmphR2xzWkZBN1hHNWNiaUFnSUNCamFHbHNaRkFnUFNCamFHbHNaQzV3Y205MGIzUjVjR1VnUFNCUFltcGxZM1F1WTNKbFlYUmxLR0poYzJWUUtUdGNiaUFnSUNCamFHbHNaRkF1WTI5dWMzUnlkV04wYjNJZ1BTQmphR2xzWkR0Y2JpQWdJQ0JqYUdsc1pGQXVYM04xY0dWeUlEMGdZbUZ6WlZBN1hHNWNiaUFnSUNCcFppQW9jSEp2Y0dWeWRHbGxjeWtnZTF4dUlDQWdJQ0FnSUNCaGMzTnBaMjRvWTJocGJHUlFMQ0J3Y205d1pYSjBhV1Z6S1R0Y2JpQWdJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2djMmx0Y0d4bElHWjFibU4wYVc5dUlHSnBibVJjYmlBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHWnVYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnWTI5dWRHVjRkRnh1SUNvZ1FISmxkSFZ5Ym5NZ2UwWjFibU4wYVc5dWZWeHVJQ292WEc1bWRXNWpkR2x2YmlCaWFXNWtSbTRvWm00c0lHTnZiblJsZUhRcElIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnWW05MWJtUkdiaWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdadUxtRndjR3g1S0dOdmJuUmxlSFFzSUdGeVozVnRaVzUwY3lrN1hHNGdJQ0FnZlR0Y2JuMWNibHh1THlvcVhHNGdLaUJzWlhRZ1lTQmliMjlzWldGdUlIWmhiSFZsSUdGc2MyOGdZbVVnWVNCbWRXNWpkR2x2YmlCMGFHRjBJRzExYzNRZ2NtVjBkWEp1SUdFZ1ltOXZiR1ZoYmx4dUlDb2dkR2hwY3lCbWFYSnpkQ0JwZEdWdElHbHVJR0Z5WjNNZ2QybHNiQ0JpWlNCMWMyVmtJR0Z6SUhSb1pTQmpiMjUwWlhoMFhHNGdLaUJBY0dGeVlXMGdlMEp2YjJ4bFlXNThSblZ1WTNScGIyNTlJSFpoYkZ4dUlDb2dRSEJoY21GdElIdEJjbkpoZVgwZ1cyRnlaM05kWEc0Z0tpQkFjbVYwZFhKdWN5QjdRbTl2YkdWaGJuMWNiaUFxTDF4dVpuVnVZM1JwYjI0Z1ltOXZiRTl5Um00b2RtRnNMQ0JoY21kektTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQjJZV3dnUFQwZ1ZGbFFSVjlHVlU1RFZFbFBUaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc0xtRndjR3g1S0dGeVozTWdQeUJoY21keld6QmRJSHg4SUhWdVpHVm1hVzVsWkNBNklIVnVaR1ZtYVc1bFpDd2dZWEpuY3lrN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQjJZV3c3WEc1OVhHNWNiaThxS2x4dUlDb2dkWE5sSUhSb1pTQjJZV3d5SUhkb1pXNGdkbUZzTVNCcGN5QjFibVJsWm1sdVpXUmNiaUFxSUVCd1lYSmhiU0I3S24wZ2RtRnNNVnh1SUNvZ1FIQmhjbUZ0SUhzcWZTQjJZV3d5WEc0Z0tpQkFjbVYwZFhKdWN5QjdLbjFjYmlBcUwxeHVablZ1WTNScGIyNGdhV1pWYm1SbFptbHVaV1FvZG1Gc01Td2dkbUZzTWlrZ2UxeHVJQ0FnSUhKbGRIVnliaUFvZG1Gc01TQTlQVDBnZFc1a1pXWnBibVZrS1NBL0lIWmhiRElnT2lCMllXd3hPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlHRmtaRVYyWlc1MFRHbHpkR1Z1WlhJZ2QybDBhQ0J0ZFd4MGFYQnNaU0JsZG1WdWRITWdZWFFnYjI1alpWeHVJQ29nUUhCaGNtRnRJSHRGZG1WdWRGUmhjbWRsZEgwZ2RHRnlaMlYwWEc0Z0tpQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ2RIbHdaWE5jYmlBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHaGhibVJzWlhKY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWVdSa1JYWmxiblJNYVhOMFpXNWxjbk1vZEdGeVoyVjBMQ0IwZVhCbGN5d2dhR0Z1Wkd4bGNpa2dlMXh1SUNBZ0lHVmhZMmdvYzNCc2FYUlRkSElvZEhsd1pYTXBMQ0JtZFc1amRHbHZiaWgwZVhCbEtTQjdYRzRnSUNBZ0lDQWdJSFJoY21kbGRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtIUjVjR1VzSUdoaGJtUnNaWElzSUdaaGJITmxLVHRjYmlBZ0lDQjlLVHRjYm4xY2JseHVMeW9xWEc0Z0tpQnlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlJSGRwZEdnZ2JYVnNkR2x3YkdVZ1pYWmxiblJ6SUdGMElHOXVZMlZjYmlBcUlFQndZWEpoYlNCN1JYWmxiblJVWVhKblpYUjlJSFJoY21kbGRGeHVJQ29nUUhCaGNtRnRJSHRUZEhKcGJtZDlJSFI1Y0dWelhHNGdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JvWVc1a2JHVnlYRzRnS2k5Y2JtWjFibU4wYVc5dUlISmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSnpLSFJoY21kbGRDd2dkSGx3WlhNc0lHaGhibVJzWlhJcElIdGNiaUFnSUNCbFlXTm9LSE53YkdsMFUzUnlLSFI1Y0dWektTd2dablZ1WTNScGIyNG9kSGx3WlNrZ2UxeHVJQ0FnSUNBZ0lDQjBZWEpuWlhRdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpaDBlWEJsTENCb1lXNWtiR1Z5TENCbVlXeHpaU2s3WEc0Z0lDQWdmU2s3WEc1OVhHNWNiaThxS2x4dUlDb2dabWx1WkNCcFppQmhJRzV2WkdVZ2FYTWdhVzRnZEdobElHZHBkbVZ1SUhCaGNtVnVkRnh1SUNvZ1FHMWxkR2h2WkNCb1lYTlFZWEpsYm5SY2JpQXFJRUJ3WVhKaGJTQjdTRlJOVEVWc1pXMWxiblI5SUc1dlpHVmNiaUFxSUVCd1lYSmhiU0I3U0ZSTlRFVnNaVzFsYm5SOUlIQmhjbVZ1ZEZ4dUlDb2dRSEpsZEhWeWJpQjdRbTl2YkdWaGJuMGdabTkxYm1SY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYUdGelVHRnlaVzUwS0c1dlpHVXNJSEJoY21WdWRDa2dlMXh1SUNBZ0lIZG9hV3hsSUNodWIyUmxLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHViMlJsSUQwOUlIQmhjbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdibTlrWlNBOUlHNXZaR1V1Y0dGeVpXNTBUbTlrWlR0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dWZWeHVYRzR2S2lwY2JpQXFJSE50WVd4c0lHbHVaR1Y0VDJZZ2QzSmhjSEJsY2x4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlITjBjbHh1SUNvZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUdacGJtUmNiaUFxSUVCeVpYUjFjbTV6SUh0Q2IyOXNaV0Z1ZlNCbWIzVnVaRnh1SUNvdlhHNW1kVzVqZEdsdmJpQnBibE4wY2loemRISXNJR1pwYm1RcElIdGNiaUFnSUNCeVpYUjFjbTRnYzNSeUxtbHVaR1Y0VDJZb1ptbHVaQ2tnUGlBdE1UdGNibjFjYmx4dUx5b3FYRzRnS2lCemNHeHBkQ0J6ZEhKcGJtY2diMjRnZDJocGRHVnpjR0ZqWlZ4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlITjBjbHh1SUNvZ1FISmxkSFZ5Ym5NZ2UwRnljbUY1ZlNCM2IzSmtjMXh1SUNvdlhHNW1kVzVqZEdsdmJpQnpjR3hwZEZOMGNpaHpkSElwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdjM1J5TG5SeWFXMG9LUzV6Y0d4cGRDZ3ZYRnh6S3k5bktUdGNibjFjYmx4dUx5b3FYRzRnS2lCbWFXNWtJR2xtSUdFZ1lYSnlZWGtnWTI5dWRHRnBibk1nZEdobElHOWlhbVZqZENCMWMybHVaeUJwYm1SbGVFOW1JRzl5SUdFZ2MybHRjR3hsSUhCdmJIbEdhV3hzWEc0Z0tpQkFjR0Z5WVcwZ2UwRnljbUY1ZlNCemNtTmNiaUFxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0JtYVc1a1hHNGdLaUJBY0dGeVlXMGdlMU4wY21sdVozMGdXMlpwYm1SQ2VVdGxlVjFjYmlBcUlFQnlaWFIxY200Z2UwSnZiMnhsWVc1OFRuVnRZbVZ5ZlNCbVlXeHpaU0IzYUdWdUlHNXZkQ0JtYjNWdVpDd2diM0lnZEdobElHbHVaR1Y0WEc0Z0tpOWNibVoxYm1OMGFXOXVJR2x1UVhKeVlYa29jM0pqTENCbWFXNWtMQ0JtYVc1a1FubExaWGtwSUh0Y2JpQWdJQ0JwWmlBb2MzSmpMbWx1WkdWNFQyWWdKaVlnSVdacGJtUkNlVXRsZVNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzSmpMbWx1WkdWNFQyWW9abWx1WkNrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHa2dQU0F3TzF4dUlDQWdJQ0FnSUNCM2FHbHNaU0FvYVNBOElITnlZeTVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2dvWm1sdVpFSjVTMlY1SUNZbUlITnlZMXRwWFZ0bWFXNWtRbmxMWlhsZElEMDlJR1pwYm1RcElIeDhJQ2doWm1sdVpFSjVTMlY1SUNZbUlITnlZMXRwWFNBOVBUMGdabWx1WkNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR2tyS3p0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0xURTdYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUdOdmJuWmxjblFnWVhKeVlYa3RiR2xyWlNCdlltcGxZM1J6SUhSdklISmxZV3dnWVhKeVlYbHpYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnYjJKcVhHNGdLaUJBY21WMGRYSnVjeUI3UVhKeVlYbDlYRzRnS2k5Y2JtWjFibU4wYVc5dUlIUnZRWEp5WVhrb2IySnFLU0I3WEc0Z0lDQWdjbVYwZFhKdUlFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tHOWlhaXdnTUNrN1hHNTlYRzVjYmk4cUtseHVJQ29nZFc1cGNYVmxJR0Z5Y21GNUlIZHBkR2dnYjJKcVpXTjBjeUJpWVhObFpDQnZiaUJoSUd0bGVTQW9iR2xyWlNBbmFXUW5LU0J2Y2lCcWRYTjBJR0o1SUhSb1pTQmhjbkpoZVNkeklIWmhiSFZsWEc0Z0tpQkFjR0Z5WVcwZ2UwRnljbUY1ZlNCemNtTWdXM3RwWkRveGZTeDdhV1E2TW4wc2UybGtPakY5WFZ4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlGdHJaWGxkWEc0Z0tpQkFjR0Z5WVcwZ2UwSnZiMnhsWVc1OUlGdHpiM0owUFVaaGJITmxYVnh1SUNvZ1FISmxkSFZ5Ym5NZ2UwRnljbUY1ZlNCYmUybGtPakY5TEh0cFpEb3lmVjFjYmlBcUwxeHVablZ1WTNScGIyNGdkVzVwY1hWbFFYSnlZWGtvYzNKakxDQnJaWGtzSUhOdmNuUXBJSHRjYmlBZ0lDQjJZWElnY21WemRXeDBjeUE5SUZ0ZE8xeHVJQ0FnSUhaaGNpQjJZV3gxWlhNZ1BTQmJYVHRjYmlBZ0lDQjJZWElnYVNBOUlEQTdYRzVjYmlBZ0lDQjNhR2xzWlNBb2FTQThJSE55WXk1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJSFpoYkNBOUlHdGxlU0EvSUhOeVkxdHBYVnRyWlhsZElEb2djM0pqVzJsZE8xeHVJQ0FnSUNBZ0lDQnBaaUFvYVc1QmNuSmhlU2gyWVd4MVpYTXNJSFpoYkNrZ1BDQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWE4xYkhSekxuQjFjMmdvYzNKalcybGRLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCMllXeDFaWE5iYVYwZ1BTQjJZV3c3WEc0Z0lDQWdJQ0FnSUdrckt6dGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9jMjl5ZENrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVd0bGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwY3lBOUlISmxjM1ZzZEhNdWMyOXlkQ2dwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MGN5QTlJSEpsYzNWc2RITXVjMjl5ZENobWRXNWpkR2x2YmlCemIzSjBWVzVwY1hWbFFYSnlZWGtvWVN3Z1lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhXMnRsZVYwZ1BpQmlXMnRsZVYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ5WlhOMWJIUnpPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlHZGxkQ0IwYUdVZ2NISmxabWw0WldRZ2NISnZjR1Z5ZEhsY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnZZbXBjYmlBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCd2NtOXdaWEowZVZ4dUlDb2dRSEpsZEhWeWJuTWdlMU4wY21sdVozeFZibVJsWm1sdVpXUjlJSEJ5WldacGVHVmtYRzRnS2k5Y2JtWjFibU4wYVc5dUlIQnlaV1pwZUdWa0tHOWlhaXdnY0hKdmNHVnlkSGtwSUh0Y2JpQWdJQ0IyWVhJZ2NISmxabWw0TENCd2NtOXdPMXh1SUNBZ0lIWmhjaUJqWVcxbGJGQnliM0FnUFNCd2NtOXdaWEowZVZzd1hTNTBiMVZ3Y0dWeVEyRnpaU2dwSUNzZ2NISnZjR1Z5ZEhrdWMyeHBZMlVvTVNrN1hHNWNiaUFnSUNCMllYSWdhU0E5SURBN1hHNGdJQ0FnZDJocGJHVWdLR2tnUENCV1JVNUVUMUpmVUZKRlJrbFlSVk11YkdWdVozUm9LU0I3WEc0Z0lDQWdJQ0FnSUhCeVpXWnBlQ0E5SUZaRlRrUlBVbDlRVWtWR1NWaEZVMXRwWFR0Y2JpQWdJQ0FnSUNBZ2NISnZjQ0E5SUNod2NtVm1hWGdwSUQ4Z2NISmxabWw0SUNzZ1kyRnRaV3hRY205d0lEb2djSEp2Y0dWeWRIazdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIQnliM0FnYVc0Z2IySnFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NISnZjRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcEt5czdYRzRnSUNBZ2ZWeHVJQ0FnSUhKbGRIVnliaUIxYm1SbFptbHVaV1E3WEc1OVhHNWNiaThxS2x4dUlDb2daMlYwSUdFZ2RXNXBjWFZsSUdsa1hHNGdLaUJBY21WMGRYSnVjeUI3Ym5WdFltVnlmU0IxYm1seGRXVkpaRnh1SUNvdlhHNTJZWElnWDNWdWFYRjFaVWxrSUQwZ01UdGNibVoxYm1OMGFXOXVJSFZ1YVhGMVpVbGtLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQmZkVzVwY1hWbFNXUXJLenRjYm4xY2JseHVMeW9xWEc0Z0tpQm5aWFFnZEdobElIZHBibVJ2ZHlCdlltcGxZM1FnYjJZZ1lXNGdaV3hsYldWdWRGeHVJQ29nUUhCaGNtRnRJSHRJVkUxTVJXeGxiV1Z1ZEgwZ1pXeGxiV1Z1ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMFJ2WTNWdFpXNTBWbWxsZDN4WGFXNWtiM2Q5WEc0Z0tpOWNibVoxYm1OMGFXOXVJR2RsZEZkcGJtUnZkMFp2Y2tWc1pXMWxiblFvWld4bGJXVnVkQ2tnZTF4dUlDQWdJSFpoY2lCa2IyTWdQU0JsYkdWdFpXNTBMbTkzYm1WeVJHOWpkVzFsYm5RZ2ZId2daV3hsYldWdWREdGNiaUFnSUNCeVpYUjFjbTRnS0dSdll5NWtaV1poZFd4MFZtbGxkeUI4ZkNCa2IyTXVjR0Z5Wlc1MFYybHVaRzkzSUh4OElIZHBibVJ2ZHlrN1hHNTlYRzVjYm5aaGNpQk5UMEpKVEVWZlVrVkhSVmdnUFNBdmJXOWlhV3hsZkhSaFlteGxkSHhwY0NoaFpIeG9iMjVsZkc5a0tYeGhibVJ5YjJsa0wyazdYRzVjYm5aaGNpQlRWVkJRVDFKVVgxUlBWVU5JSUQwZ0tDZHZiblJ2ZFdOb2MzUmhjblFuSUdsdUlIZHBibVJ2ZHlrN1hHNTJZWElnVTFWUVVFOVNWRjlRVDBsT1ZFVlNYMFZXUlU1VVV5QTlJSEJ5WldacGVHVmtLSGRwYm1SdmR5d2dKMUJ2YVc1MFpYSkZkbVZ1ZENjcElDRTlQU0IxYm1SbFptbHVaV1E3WEc1MllYSWdVMVZRVUU5U1ZGOVBUa3haWDFSUFZVTklJRDBnVTFWUVVFOVNWRjlVVDFWRFNDQW1KaUJOVDBKSlRFVmZVa1ZIUlZndWRHVnpkQ2h1WVhacFoyRjBiM0l1ZFhObGNrRm5aVzUwS1R0Y2JseHVkbUZ5SUVsT1VGVlVYMVJaVUVWZlZFOVZRMGdnUFNBbmRHOTFZMmduTzF4dWRtRnlJRWxPVUZWVVgxUlpVRVZmVUVWT0lEMGdKM0JsYmljN1hHNTJZWElnU1U1UVZWUmZWRmxRUlY5TlQxVlRSU0E5SUNkdGIzVnpaU2M3WEc1MllYSWdTVTVRVlZSZlZGbFFSVjlMU1U1RlExUWdQU0FuYTJsdVpXTjBKenRjYmx4dWRtRnlJRU5QVFZCVlZFVmZTVTVVUlZKV1FVd2dQU0F5TlR0Y2JseHVkbUZ5SUVsT1VGVlVYMU5VUVZKVUlEMGdNVHRjYm5aaGNpQkpUbEJWVkY5TlQxWkZJRDBnTWp0Y2JuWmhjaUJKVGxCVlZGOUZUa1FnUFNBME8xeHVkbUZ5SUVsT1VGVlVYME5CVGtORlRDQTlJRGc3WEc1Y2JuWmhjaUJFU1ZKRlExUkpUMDVmVGs5T1JTQTlJREU3WEc1MllYSWdSRWxTUlVOVVNVOU9YMHhGUmxRZ1BTQXlPMXh1ZG1GeUlFUkpVa1ZEVkVsUFRsOVNTVWRJVkNBOUlEUTdYRzUyWVhJZ1JFbFNSVU5VU1U5T1gxVlFJRDBnT0R0Y2JuWmhjaUJFU1ZKRlExUkpUMDVmUkU5WFRpQTlJREUyTzF4dVhHNTJZWElnUkVsU1JVTlVTVTlPWDBoUFVrbGFUMDVVUVV3Z1BTQkVTVkpGUTFSSlQwNWZURVZHVkNCOElFUkpVa1ZEVkVsUFRsOVNTVWRJVkR0Y2JuWmhjaUJFU1ZKRlExUkpUMDVmVmtWU1ZFbERRVXdnUFNCRVNWSkZRMVJKVDA1ZlZWQWdmQ0JFU1ZKRlExUkpUMDVmUkU5WFRqdGNiblpoY2lCRVNWSkZRMVJKVDA1ZlFVeE1JRDBnUkVsU1JVTlVTVTlPWDBoUFVrbGFUMDVVUVV3Z2ZDQkVTVkpGUTFSSlQwNWZWa1ZTVkVsRFFVdzdYRzVjYm5aaGNpQlFVazlRVTE5WVdTQTlJRnNuZUNjc0lDZDVKMTA3WEc1MllYSWdVRkpQVUZOZlEweEpSVTVVWDFoWklEMGdXeWRqYkdsbGJuUllKeXdnSjJOc2FXVnVkRmtuWFR0Y2JseHVMeW9xWEc0Z0tpQmpjbVZoZEdVZ2JtVjNJR2x1Y0hWMElIUjVjR1VnYldGdVlXZGxjbHh1SUNvZ1FIQmhjbUZ0SUh0TllXNWhaMlZ5ZlNCdFlXNWhaMlZ5WEc0Z0tpQkFjR0Z5WVcwZ2UwWjFibU4wYVc5dWZTQmpZV3hzWW1GamExeHVJQ29nUUhKbGRIVnlibk1nZTBsdWNIVjBmVnh1SUNvZ1FHTnZibk4wY25WamRHOXlYRzRnS2k5Y2JtWjFibU4wYVc5dUlFbHVjSFYwS0cxaGJtRm5aWElzSUdOaGJHeGlZV05yS1NCN1hHNGdJQ0FnZG1GeUlITmxiR1lnUFNCMGFHbHpPMXh1SUNBZ0lIUm9hWE11YldGdVlXZGxjaUE5SUcxaGJtRm5aWEk3WEc0Z0lDQWdkR2hwY3k1allXeHNZbUZqYXlBOUlHTmhiR3hpWVdOck8xeHVJQ0FnSUhSb2FYTXVaV3hsYldWdWRDQTlJRzFoYm1GblpYSXVaV3hsYldWdWREdGNiaUFnSUNCMGFHbHpMblJoY21kbGRDQTlJRzFoYm1GblpYSXViM0IwYVc5dWN5NXBibkIxZEZSaGNtZGxkRHRjYmx4dUlDQWdJQzh2SUhOdFlXeHNaWElnZDNKaGNIQmxjaUJoY205MWJtUWdkR2hsSUdoaGJtUnNaWElzSUdadmNpQjBhR1VnYzJOdmNHVWdZVzVrSUhSb1pTQmxibUZpYkdWa0lITjBZWFJsSUc5bUlIUm9aU0J0WVc1aFoyVnlMRnh1SUNBZ0lDOHZJSE52SUhkb1pXNGdaR2x6WVdKc1pXUWdkR2hsSUdsdWNIVjBJR1YyWlc1MGN5QmhjbVVnWTI5dGNHeGxkR1ZzZVNCaWVYQmhjM05sWkM1Y2JpQWdJQ0IwYUdsekxtUnZiVWhoYm1Sc1pYSWdQU0JtZFc1amRHbHZiaWhsZGlrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWW05dmJFOXlSbTRvYldGdVlXZGxjaTV2Y0hScGIyNXpMbVZ1WVdKc1pTd2dXMjFoYm1GblpYSmRLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1b1lXNWtiR1Z5S0dWMktUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMDdYRzVjYmlBZ0lDQjBhR2x6TG1sdWFYUW9LVHRjYmx4dWZWeHVYRzVKYm5CMWRDNXdjbTkwYjNSNWNHVWdQU0I3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nYzJodmRXeGtJR2hoYm1Sc1pTQjBhR1VnYVc1d2RYUkZkbVZ1ZENCa1lYUmhJR0Z1WkNCMGNtbG5aMlZ5SUhSb1pTQmpZV3hzWW1GamExeHVJQ0FnSUNBcUlFQjJhWEowZFdGc1hHNGdJQ0FnSUNvdlhHNGdJQ0FnYUdGdVpHeGxjam9nWm5WdVkzUnBiMjRvS1NCN0lIMHNYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJpYVc1a0lIUm9aU0JsZG1WdWRITmNiaUFnSUNBZ0tpOWNiaUFnSUNCcGJtbDBPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVsZGtWc0lDWW1JR0ZrWkVWMlpXNTBUR2x6ZEdWdVpYSnpLSFJvYVhNdVpXeGxiV1Z1ZEN3Z2RHaHBjeTVsZGtWc0xDQjBhR2x6TG1SdmJVaGhibVJzWlhJcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1WMlZHRnlaMlYwSUNZbUlHRmtaRVYyWlc1MFRHbHpkR1Z1WlhKektIUm9hWE11ZEdGeVoyVjBMQ0IwYUdsekxtVjJWR0Z5WjJWMExDQjBhR2x6TG1SdmJVaGhibVJzWlhJcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1WMlYybHVJQ1ltSUdGa1pFVjJaVzUwVEdsemRHVnVaWEp6S0dkbGRGZHBibVJ2ZDBadmNrVnNaVzFsYm5Rb2RHaHBjeTVsYkdWdFpXNTBLU3dnZEdocGN5NWxkbGRwYml3Z2RHaHBjeTVrYjIxSVlXNWtiR1Z5S1R0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2RXNWlhVzVrSUhSb1pTQmxkbVZ1ZEhOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JrWlhOMGNtOTVPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVsZGtWc0lDWW1JSEpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWEp6S0hSb2FYTXVaV3hsYldWdWRDd2dkR2hwY3k1bGRrVnNMQ0IwYUdsekxtUnZiVWhoYm1Sc1pYSXBPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtVjJWR0Z5WjJWMElDWW1JSEpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWEp6S0hSb2FYTXVkR0Z5WjJWMExDQjBhR2x6TG1WMlZHRnlaMlYwTENCMGFHbHpMbVJ2YlVoaGJtUnNaWElwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbVYyVjJsdUlDWW1JSEpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWEp6S0dkbGRGZHBibVJ2ZDBadmNrVnNaVzFsYm5Rb2RHaHBjeTVsYkdWdFpXNTBLU3dnZEdocGN5NWxkbGRwYml3Z2RHaHBjeTVrYjIxSVlXNWtiR1Z5S1R0Y2JpQWdJQ0I5WEc1OU8xeHVYRzR2S2lwY2JpQXFJR055WldGMFpTQnVaWGNnYVc1d2RYUWdkSGx3WlNCdFlXNWhaMlZ5WEc0Z0tpQmpZV3hzWldRZ1lua2dkR2hsSUUxaGJtRm5aWElnWTI5dWMzUnlkV04wYjNKY2JpQXFJRUJ3WVhKaGJTQjdTR0Z0YldWeWZTQnRZVzVoWjJWeVhHNGdLaUJBY21WMGRYSnVjeUI3U1c1d2RYUjlYRzRnS2k5Y2JtWjFibU4wYVc5dUlHTnlaV0YwWlVsdWNIVjBTVzV6ZEdGdVkyVW9iV0Z1WVdkbGNpa2dlMXh1SUNBZ0lIWmhjaUJVZVhCbE8xeHVJQ0FnSUhaaGNpQnBibkIxZEVOc1lYTnpJRDBnYldGdVlXZGxjaTV2Y0hScGIyNXpMbWx1Y0hWMFEyeGhjM003WEc1Y2JpQWdJQ0JwWmlBb2FXNXdkWFJEYkdGemN5a2dlMXh1SUNBZ0lDQWdJQ0JVZVhCbElEMGdhVzV3ZFhSRGJHRnpjenRjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLRk5WVUZCUFVsUmZVRTlKVGxSRlVsOUZWa1ZPVkZNcElIdGNiaUFnSUNBZ0lDQWdWSGx3WlNBOUlGQnZhVzUwWlhKRmRtVnVkRWx1Y0hWME8xeHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb1UxVlFVRTlTVkY5UFRreFpYMVJQVlVOSUtTQjdYRzRnSUNBZ0lDQWdJRlI1Y0dVZ1BTQlViM1ZqYUVsdWNIVjBPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9JVk5WVUZCUFVsUmZWRTlWUTBncElIdGNiaUFnSUNBZ0lDQWdWSGx3WlNBOUlFMXZkWE5sU1c1d2RYUTdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1ZIbHdaU0E5SUZSdmRXTm9UVzkxYzJWSmJuQjFkRHRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QW9WSGx3WlNrb2JXRnVZV2RsY2l3Z2FXNXdkWFJJWVc1a2JHVnlLVHRjYm4xY2JseHVMeW9xWEc0Z0tpQm9ZVzVrYkdVZ2FXNXdkWFFnWlhabGJuUnpYRzRnS2lCQWNHRnlZVzBnZTAxaGJtRm5aWEo5SUcxaGJtRm5aWEpjYmlBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCbGRtVnVkRlI1Y0dWY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnBibkIxZEZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJwYm5CMWRFaGhibVJzWlhJb2JXRnVZV2RsY2l3Z1pYWmxiblJVZVhCbExDQnBibkIxZENrZ2UxeHVJQ0FnSUhaaGNpQndiMmx1ZEdWeWMweGxiaUE5SUdsdWNIVjBMbkJ2YVc1MFpYSnpMbXhsYm1kMGFEdGNiaUFnSUNCMllYSWdZMmhoYm1kbFpGQnZhVzUwWlhKelRHVnVJRDBnYVc1d2RYUXVZMmhoYm1kbFpGQnZhVzUwWlhKekxteGxibWQwYUR0Y2JpQWdJQ0IyWVhJZ2FYTkdhWEp6ZENBOUlDaGxkbVZ1ZEZSNWNHVWdKaUJKVGxCVlZGOVRWRUZTVkNBbUppQW9jRzlwYm5SbGNuTk1aVzRnTFNCamFHRnVaMlZrVUc5cGJuUmxjbk5NWlc0Z1BUMDlJREFwS1R0Y2JpQWdJQ0IyWVhJZ2FYTkdhVzVoYkNBOUlDaGxkbVZ1ZEZSNWNHVWdKaUFvU1U1UVZWUmZSVTVFSUh3Z1NVNVFWVlJmUTBGT1EwVk1LU0FtSmlBb2NHOXBiblJsY25OTVpXNGdMU0JqYUdGdVoyVmtVRzlwYm5SbGNuTk1aVzRnUFQwOUlEQXBLVHRjYmx4dUlDQWdJR2x1Y0hWMExtbHpSbWx5YzNRZ1BTQWhJV2x6Um1seWMzUTdYRzRnSUNBZ2FXNXdkWFF1YVhOR2FXNWhiQ0E5SUNFaGFYTkdhVzVoYkR0Y2JseHVJQ0FnSUdsbUlDaHBjMFpwY25OMEtTQjdYRzRnSUNBZ0lDQWdJRzFoYm1GblpYSXVjMlZ6YzJsdmJpQTlJSHQ5TzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUhOdmRYSmpaU0JsZG1WdWRDQnBjeUIwYUdVZ2JtOXliV0ZzYVhwbFpDQjJZV3gxWlNCdlppQjBhR1VnWkc5dFJYWmxiblJ6WEc0Z0lDQWdMeThnYkdsclpTQW5kRzkxWTJoemRHRnlkQ3dnYlc5MWMyVjFjQ3dnY0c5cGJuUmxjbVJ2ZDI0blhHNGdJQ0FnYVc1d2RYUXVaWFpsYm5SVWVYQmxJRDBnWlhabGJuUlVlWEJsTzF4dVhHNGdJQ0FnTHk4Z1kyOXRjSFYwWlNCelkyRnNaU3dnY205MFlYUnBiMjRnWlhSalhHNGdJQ0FnWTI5dGNIVjBaVWx1Y0hWMFJHRjBZU2h0WVc1aFoyVnlMQ0JwYm5CMWRDazdYRzVjYmlBZ0lDQXZMeUJsYldsMElITmxZM0psZENCbGRtVnVkRnh1SUNBZ0lHMWhibUZuWlhJdVpXMXBkQ2duYUdGdGJXVnlMbWx1Y0hWMEp5d2dhVzV3ZFhRcE8xeHVYRzRnSUNBZ2JXRnVZV2RsY2k1eVpXTnZaMjVwZW1Vb2FXNXdkWFFwTzF4dUlDQWdJRzFoYm1GblpYSXVjMlZ6YzJsdmJpNXdjbVYyU1c1d2RYUWdQU0JwYm5CMWREdGNibjFjYmx4dUx5b3FYRzRnS2lCbGVIUmxibVFnZEdobElHUmhkR0VnZDJsMGFDQnpiMjFsSUhWellXSnNaU0J3Y205d1pYSjBhV1Z6SUd4cGEyVWdjMk5oYkdVc0lISnZkR0YwWlN3Z2RtVnNiMk5wZEhrZ1pYUmpYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnYldGdVlXZGxjbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUdsdWNIVjBYRzRnS2k5Y2JtWjFibU4wYVc5dUlHTnZiWEIxZEdWSmJuQjFkRVJoZEdFb2JXRnVZV2RsY2l3Z2FXNXdkWFFwSUh0Y2JpQWdJQ0IyWVhJZ2MyVnpjMmx2YmlBOUlHMWhibUZuWlhJdWMyVnpjMmx2Ymp0Y2JpQWdJQ0IyWVhJZ2NHOXBiblJsY25NZ1BTQnBibkIxZEM1d2IybHVkR1Z5Y3p0Y2JpQWdJQ0IyWVhJZ2NHOXBiblJsY25OTVpXNW5kR2dnUFNCd2IybHVkR1Z5Y3k1c1pXNW5kR2c3WEc1Y2JpQWdJQ0F2THlCemRHOXlaU0IwYUdVZ1ptbHljM1FnYVc1d2RYUWdkRzhnWTJGc1kzVnNZWFJsSUhSb1pTQmthWE4wWVc1alpTQmhibVFnWkdseVpXTjBhVzl1WEc0Z0lDQWdhV1lnS0NGelpYTnphVzl1TG1acGNuTjBTVzV3ZFhRcElIdGNiaUFnSUNBZ0lDQWdjMlZ6YzJsdmJpNW1hWEp6ZEVsdWNIVjBJRDBnYzJsdGNHeGxRMnh2Ym1WSmJuQjFkRVJoZEdFb2FXNXdkWFFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUhSdklHTnZiWEIxZEdVZ2MyTmhiR1VnWVc1a0lISnZkR0YwYVc5dUlIZGxJRzVsWldRZ2RHOGdjM1J2Y21VZ2RHaGxJRzExYkhScGNHeGxJSFJ2ZFdOb1pYTmNiaUFnSUNCcFppQW9jRzlwYm5SbGNuTk1aVzVuZEdnZ1BpQXhJQ1ltSUNGelpYTnphVzl1TG1acGNuTjBUWFZzZEdsd2JHVXBJSHRjYmlBZ0lDQWdJQ0FnYzJWemMybHZiaTVtYVhKemRFMTFiSFJwY0d4bElEMGdjMmx0Y0d4bFEyeHZibVZKYm5CMWRFUmhkR0VvYVc1d2RYUXBPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9jRzlwYm5SbGNuTk1aVzVuZEdnZ1BUMDlJREVwSUh0Y2JpQWdJQ0FnSUNBZ2MyVnpjMmx2Ymk1bWFYSnpkRTExYkhScGNHeGxJRDBnWm1Gc2MyVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RtRnlJR1pwY25OMFNXNXdkWFFnUFNCelpYTnphVzl1TG1acGNuTjBTVzV3ZFhRN1hHNGdJQ0FnZG1GeUlHWnBjbk4wVFhWc2RHbHdiR1VnUFNCelpYTnphVzl1TG1acGNuTjBUWFZzZEdsd2JHVTdYRzRnSUNBZ2RtRnlJRzltWm5ObGRFTmxiblJsY2lBOUlHWnBjbk4wVFhWc2RHbHdiR1VnUHlCbWFYSnpkRTExYkhScGNHeGxMbU5sYm5SbGNpQTZJR1pwY25OMFNXNXdkWFF1WTJWdWRHVnlPMXh1WEc0Z0lDQWdkbUZ5SUdObGJuUmxjaUE5SUdsdWNIVjBMbU5sYm5SbGNpQTlJR2RsZEVObGJuUmxjaWh3YjJsdWRHVnljeWs3WEc0Z0lDQWdhVzV3ZFhRdWRHbHRaVk4wWVcxd0lEMGdibTkzS0NrN1hHNGdJQ0FnYVc1d2RYUXVaR1ZzZEdGVWFXMWxJRDBnYVc1d2RYUXVkR2x0WlZOMFlXMXdJQzBnWm1seWMzUkpibkIxZEM1MGFXMWxVM1JoYlhBN1hHNWNiaUFnSUNCcGJuQjFkQzVoYm1kc1pTQTlJR2RsZEVGdVoyeGxLRzltWm5ObGRFTmxiblJsY2l3Z1kyVnVkR1Z5S1R0Y2JpQWdJQ0JwYm5CMWRDNWthWE4wWVc1alpTQTlJR2RsZEVScGMzUmhibU5sS0c5bVpuTmxkRU5sYm5SbGNpd2dZMlZ1ZEdWeUtUdGNibHh1SUNBZ0lHTnZiWEIxZEdWRVpXeDBZVmhaS0hObGMzTnBiMjRzSUdsdWNIVjBLVHRjYmlBZ0lDQnBibkIxZEM1dlptWnpaWFJFYVhKbFkzUnBiMjRnUFNCblpYUkVhWEpsWTNScGIyNG9hVzV3ZFhRdVpHVnNkR0ZZTENCcGJuQjFkQzVrWld4MFlWa3BPMXh1WEc0Z0lDQWdkbUZ5SUc5MlpYSmhiR3hXWld4dlkybDBlU0E5SUdkbGRGWmxiRzlqYVhSNUtHbHVjSFYwTG1SbGJIUmhWR2x0WlN3Z2FXNXdkWFF1WkdWc2RHRllMQ0JwYm5CMWRDNWtaV3gwWVZrcE8xeHVJQ0FnSUdsdWNIVjBMbTkyWlhKaGJHeFdaV3h2WTJsMGVWZ2dQU0J2ZG1WeVlXeHNWbVZzYjJOcGRIa3VlRHRjYmlBZ0lDQnBibkIxZEM1dmRtVnlZV3hzVm1Wc2IyTnBkSGxaSUQwZ2IzWmxjbUZzYkZabGJHOWphWFI1TG5rN1hHNGdJQ0FnYVc1d2RYUXViM1psY21Gc2JGWmxiRzlqYVhSNUlEMGdLR0ZpY3lodmRtVnlZV3hzVm1Wc2IyTnBkSGt1ZUNrZ1BpQmhZbk1vYjNabGNtRnNiRlpsYkc5amFYUjVMbmtwS1NBL0lHOTJaWEpoYkd4V1pXeHZZMmwwZVM1NElEb2diM1psY21Gc2JGWmxiRzlqYVhSNUxuazdYRzVjYmlBZ0lDQnBibkIxZEM1elkyRnNaU0E5SUdacGNuTjBUWFZzZEdsd2JHVWdQeUJuWlhSVFkyRnNaU2htYVhKemRFMTFiSFJwY0d4bExuQnZhVzUwWlhKekxDQndiMmx1ZEdWeWN5a2dPaUF4TzF4dUlDQWdJR2x1Y0hWMExuSnZkR0YwYVc5dUlEMGdabWx5YzNSTmRXeDBhWEJzWlNBL0lHZGxkRkp2ZEdGMGFXOXVLR1pwY25OMFRYVnNkR2x3YkdVdWNHOXBiblJsY25Nc0lIQnZhVzUwWlhKektTQTZJREE3WEc1Y2JpQWdJQ0JwYm5CMWRDNXRZWGhRYjJsdWRHVnljeUE5SUNGelpYTnphVzl1TG5CeVpYWkpibkIxZENBL0lHbHVjSFYwTG5CdmFXNTBaWEp6TG14bGJtZDBhQ0E2SUNnb2FXNXdkWFF1Y0c5cGJuUmxjbk11YkdWdVozUm9JRDVjYmlBZ0lDQWdJQ0FnYzJWemMybHZiaTV3Y21WMlNXNXdkWFF1YldGNFVHOXBiblJsY25NcElEOGdhVzV3ZFhRdWNHOXBiblJsY25NdWJHVnVaM1JvSURvZ2MyVnpjMmx2Ymk1d2NtVjJTVzV3ZFhRdWJXRjRVRzlwYm5SbGNuTXBPMXh1WEc0Z0lDQWdZMjl0Y0hWMFpVbHVkR1Z5ZG1Gc1NXNXdkWFJFWVhSaEtITmxjM05wYjI0c0lHbHVjSFYwS1R0Y2JseHVJQ0FnSUM4dklHWnBibVFnZEdobElHTnZjbkpsWTNRZ2RHRnlaMlYwWEc0Z0lDQWdkbUZ5SUhSaGNtZGxkQ0E5SUcxaGJtRm5aWEl1Wld4bGJXVnVkRHRjYmlBZ0lDQnBaaUFvYUdGelVHRnlaVzUwS0dsdWNIVjBMbk55WTBWMlpXNTBMblJoY21kbGRDd2dkR0Z5WjJWMEtTa2dlMXh1SUNBZ0lDQWdJQ0IwWVhKblpYUWdQU0JwYm5CMWRDNXpjbU5GZG1WdWRDNTBZWEpuWlhRN1hHNGdJQ0FnZlZ4dUlDQWdJR2x1Y0hWMExuUmhjbWRsZENBOUlIUmhjbWRsZER0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnWTI5dGNIVjBaVVJsYkhSaFdGa29jMlZ6YzJsdmJpd2dhVzV3ZFhRcElIdGNiaUFnSUNCMllYSWdZMlZ1ZEdWeUlEMGdhVzV3ZFhRdVkyVnVkR1Z5TzF4dUlDQWdJSFpoY2lCdlptWnpaWFFnUFNCelpYTnphVzl1TG05bVpuTmxkRVJsYkhSaElIeDhJSHQ5TzF4dUlDQWdJSFpoY2lCd2NtVjJSR1ZzZEdFZ1BTQnpaWE56YVc5dUxuQnlaWFpFWld4MFlTQjhmQ0I3ZlR0Y2JpQWdJQ0IyWVhJZ2NISmxka2x1Y0hWMElEMGdjMlZ6YzJsdmJpNXdjbVYyU1c1d2RYUWdmSHdnZTMwN1hHNWNiaUFnSUNCcFppQW9hVzV3ZFhRdVpYWmxiblJVZVhCbElEMDlQU0JKVGxCVlZGOVRWRUZTVkNCOGZDQndjbVYyU1c1d2RYUXVaWFpsYm5SVWVYQmxJRDA5UFNCSlRsQlZWRjlGVGtRcElIdGNiaUFnSUNBZ0lDQWdjSEpsZGtSbGJIUmhJRDBnYzJWemMybHZiaTV3Y21WMlJHVnNkR0VnUFNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I0T2lCd2NtVjJTVzV3ZFhRdVpHVnNkR0ZZSUh4OElEQXNYRzRnSUNBZ0lDQWdJQ0FnSUNCNU9pQndjbVYyU1c1d2RYUXVaR1ZzZEdGWklIeDhJREJjYmlBZ0lDQWdJQ0FnZlR0Y2JseHVJQ0FnSUNBZ0lDQnZabVp6WlhRZ1BTQnpaWE56YVc5dUxtOW1abk5sZEVSbGJIUmhJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nWTJWdWRHVnlMbmdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUJqWlc1MFpYSXVlVnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2x1Y0hWMExtUmxiSFJoV0NBOUlIQnlaWFpFWld4MFlTNTRJQ3NnS0dObGJuUmxjaTU0SUMwZ2IyWm1jMlYwTG5ncE8xeHVJQ0FnSUdsdWNIVjBMbVJsYkhSaFdTQTlJSEJ5WlhaRVpXeDBZUzU1SUNzZ0tHTmxiblJsY2k1NUlDMGdiMlptYzJWMExua3BPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlIWmxiRzlqYVhSNUlHbHpJR05oYkdOMWJHRjBaV1FnWlhabGNua2dlQ0J0YzF4dUlDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlITmxjM05wYjI1Y2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnBibkIxZEZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJqYjIxd2RYUmxTVzUwWlhKMllXeEpibkIxZEVSaGRHRW9jMlZ6YzJsdmJpd2dhVzV3ZFhRcElIdGNiaUFnSUNCMllYSWdiR0Z6ZENBOUlITmxjM05wYjI0dWJHRnpkRWx1ZEdWeWRtRnNJSHg4SUdsdWNIVjBMRnh1SUNBZ0lDQWdJQ0JrWld4MFlWUnBiV1VnUFNCcGJuQjFkQzUwYVcxbFUzUmhiWEFnTFNCc1lYTjBMblJwYldWVGRHRnRjQ3hjYmlBZ0lDQWdJQ0FnZG1Wc2IyTnBkSGtzSUhabGJHOWphWFI1V0N3Z2RtVnNiMk5wZEhsWkxDQmthWEpsWTNScGIyNDdYRzVjYmlBZ0lDQnBaaUFvYVc1d2RYUXVaWFpsYm5SVWVYQmxJQ0U5SUVsT1VGVlVYME5CVGtORlRDQW1KaUFvWkdWc2RHRlVhVzFsSUQ0Z1EwOU5VRlZVUlY5SlRsUkZVbFpCVENCOGZDQnNZWE4wTG5abGJHOWphWFI1SUQwOVBTQjFibVJsWm1sdVpXUXBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQmtaV3gwWVZnZ1BTQnBibkIxZEM1a1pXeDBZVmdnTFNCc1lYTjBMbVJsYkhSaFdEdGNiaUFnSUNBZ0lDQWdkbUZ5SUdSbGJIUmhXU0E5SUdsdWNIVjBMbVJsYkhSaFdTQXRJR3hoYzNRdVpHVnNkR0ZaTzF4dVhHNGdJQ0FnSUNBZ0lIWmhjaUIySUQwZ1oyVjBWbVZzYjJOcGRIa29aR1ZzZEdGVWFXMWxMQ0JrWld4MFlWZ3NJR1JsYkhSaFdTazdYRzRnSUNBZ0lDQWdJSFpsYkc5amFYUjVXQ0E5SUhZdWVEdGNiaUFnSUNBZ0lDQWdkbVZzYjJOcGRIbFpJRDBnZGk1NU8xeHVJQ0FnSUNBZ0lDQjJaV3h2WTJsMGVTQTlJQ2hoWW5Nb2RpNTRLU0ErSUdGaWN5aDJMbmtwS1NBL0lIWXVlQ0E2SUhZdWVUdGNiaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVJRDBnWjJWMFJHbHlaV04wYVc5dUtHUmxiSFJoV0N3Z1pHVnNkR0ZaS1R0Y2JseHVJQ0FnSUNBZ0lDQnpaWE56YVc5dUxteGhjM1JKYm5SbGNuWmhiQ0E5SUdsdWNIVjBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDOHZJSFZ6WlNCc1lYUmxjM1FnZG1Wc2IyTnBkSGtnYVc1bWJ5QnBaaUJwZENCa2IyVnpiaWQwSUc5MlpYSjBZV3RsSUdFZ2JXbHVhVzExYlNCd1pYSnBiMlJjYmlBZ0lDQWdJQ0FnZG1Wc2IyTnBkSGtnUFNCc1lYTjBMblpsYkc5amFYUjVPMXh1SUNBZ0lDQWdJQ0IyWld4dlkybDBlVmdnUFNCc1lYTjBMblpsYkc5amFYUjVXRHRjYmlBZ0lDQWdJQ0FnZG1Wc2IyTnBkSGxaSUQwZ2JHRnpkQzUyWld4dlkybDBlVms3WEc0Z0lDQWdJQ0FnSUdScGNtVmpkR2x2YmlBOUlHeGhjM1F1WkdseVpXTjBhVzl1TzF4dUlDQWdJSDFjYmx4dUlDQWdJR2x1Y0hWMExuWmxiRzlqYVhSNUlEMGdkbVZzYjJOcGRIazdYRzRnSUNBZ2FXNXdkWFF1ZG1Wc2IyTnBkSGxZSUQwZ2RtVnNiMk5wZEhsWU8xeHVJQ0FnSUdsdWNIVjBMblpsYkc5amFYUjVXU0E5SUhabGJHOWphWFI1V1R0Y2JpQWdJQ0JwYm5CMWRDNWthWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjQ3WEc1OVhHNWNiaThxS2x4dUlDb2dZM0psWVhSbElHRWdjMmx0Y0d4bElHTnNiMjVsSUdaeWIyMGdkR2hsSUdsdWNIVjBJSFZ6WldRZ1ptOXlJSE4wYjNKaFoyVWdiMllnWm1seWMzUkpibkIxZENCaGJtUWdabWx5YzNSTmRXeDBhWEJzWlZ4dUlDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlHbHVjSFYwWEc0Z0tpQkFjbVYwZFhKdWN5QjdUMkpxWldOMGZTQmpiRzl1WldSSmJuQjFkRVJoZEdGY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYzJsdGNHeGxRMnh2Ym1WSmJuQjFkRVJoZEdFb2FXNXdkWFFwSUh0Y2JpQWdJQ0F2THlCdFlXdGxJR0VnYzJsdGNHeGxJR052Y0hrZ2IyWWdkR2hsSUhCdmFXNTBaWEp6SUdKbFkyRjFjMlVnZDJVZ2QybHNiQ0JuWlhRZ1lTQnlaV1psY21WdVkyVWdhV1lnZDJVZ1pHOXVKM1JjYmlBZ0lDQXZMeUIzWlNCdmJteDVJRzVsWldRZ1kyeHBaVzUwV0ZrZ1ptOXlJSFJvWlNCallXeGpkV3hoZEdsdmJuTmNiaUFnSUNCMllYSWdjRzlwYm5SbGNuTWdQU0JiWFR0Y2JpQWdJQ0IyWVhJZ2FTQTlJREE3WEc0Z0lDQWdkMmhwYkdVZ0tHa2dQQ0JwYm5CMWRDNXdiMmx1ZEdWeWN5NXNaVzVuZEdncElIdGNiaUFnSUNBZ0lDQWdjRzlwYm5SbGNuTmJhVjBnUFNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYkdsbGJuUllPaUJ5YjNWdVpDaHBibkIxZEM1d2IybHVkR1Z5YzF0cFhTNWpiR2xsYm5SWUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdOc2FXVnVkRms2SUhKdmRXNWtLR2x1Y0hWMExuQnZhVzUwWlhKelcybGRMbU5zYVdWdWRGa3BYRzRnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdJQ0FnSUdrckt6dGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnSUNCMGFXMWxVM1JoYlhBNklHNXZkeWdwTEZ4dUlDQWdJQ0FnSUNCd2IybHVkR1Z5Y3pvZ2NHOXBiblJsY25Nc1hHNGdJQ0FnSUNBZ0lHTmxiblJsY2pvZ1oyVjBRMlZ1ZEdWeUtIQnZhVzUwWlhKektTeGNiaUFnSUNBZ0lDQWdaR1ZzZEdGWU9pQnBibkIxZEM1a1pXeDBZVmdzWEc0Z0lDQWdJQ0FnSUdSbGJIUmhXVG9nYVc1d2RYUXVaR1ZzZEdGWlhHNGdJQ0FnZlR0Y2JuMWNibHh1THlvcVhHNGdLaUJuWlhRZ2RHaGxJR05sYm5SbGNpQnZaaUJoYkd3Z2RHaGxJSEJ2YVc1MFpYSnpYRzRnS2lCQWNHRnlZVzBnZTBGeWNtRjVmU0J3YjJsdWRHVnljMXh1SUNvZ1FISmxkSFZ5YmlCN1QySnFaV04wZlNCalpXNTBaWElnWTI5dWRHRnBibk1nWUhoZ0lHRnVaQ0JnZVdBZ2NISnZjR1Z5ZEdsbGMxeHVJQ292WEc1bWRXNWpkR2x2YmlCblpYUkRaVzUwWlhJb2NHOXBiblJsY25NcElIdGNiaUFnSUNCMllYSWdjRzlwYm5SbGNuTk1aVzVuZEdnZ1BTQndiMmx1ZEdWeWN5NXNaVzVuZEdnN1hHNWNiaUFnSUNBdkx5QnVieUJ1WldWa0lIUnZJR3h2YjNBZ2QyaGxiaUJ2Ym14NUlHOXVaU0IwYjNWamFGeHVJQ0FnSUdsbUlDaHdiMmx1ZEdWeWMweGxibWQwYUNBOVBUMGdNU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdlRG9nY205MWJtUW9jRzlwYm5SbGNuTmJNRjB1WTJ4cFpXNTBXQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjVPaUJ5YjNWdVpDaHdiMmx1ZEdWeWMxc3dYUzVqYkdsbGJuUlpLVnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCNElEMGdNQ3dnZVNBOUlEQXNJR2tnUFNBd08xeHVJQ0FnSUhkb2FXeGxJQ2hwSUR3Z2NHOXBiblJsY25OTVpXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ2VDQXJQU0J3YjJsdWRHVnljMXRwWFM1amJHbGxiblJZTzF4dUlDQWdJQ0FnSUNCNUlDczlJSEJ2YVc1MFpYSnpXMmxkTG1Oc2FXVnVkRms3WEc0Z0lDQWdJQ0FnSUdrckt6dGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnSUNCNE9pQnliM1Z1WkNoNElDOGdjRzlwYm5SbGNuTk1aVzVuZEdncExGeHVJQ0FnSUNBZ0lDQjVPaUJ5YjNWdVpDaDVJQzhnY0c5cGJuUmxjbk5NWlc1bmRHZ3BYRzRnSUNBZ2ZUdGNibjFjYmx4dUx5b3FYRzRnS2lCallXeGpkV3hoZEdVZ2RHaGxJSFpsYkc5amFYUjVJR0psZEhkbFpXNGdkSGR2SUhCdmFXNTBjeTRnZFc1cGRDQnBjeUJwYmlCd2VDQndaWElnYlhNdVhHNGdLaUJBY0dGeVlXMGdlMDUxYldKbGNuMGdaR1ZzZEdGVWFXMWxYRzRnS2lCQWNHRnlZVzBnZTA1MWJXSmxjbjBnZUZ4dUlDb2dRSEJoY21GdElIdE9kVzFpWlhKOUlIbGNiaUFxSUVCeVpYUjFjbTRnZTA5aWFtVmpkSDBnZG1Wc2IyTnBkSGtnWUhoZ0lHRnVaQ0JnZVdCY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWjJWMFZtVnNiMk5wZEhrb1pHVnNkR0ZVYVcxbExDQjRMQ0I1S1NCN1hHNGdJQ0FnY21WMGRYSnVJSHRjYmlBZ0lDQWdJQ0FnZURvZ2VDQXZJR1JsYkhSaFZHbHRaU0I4ZkNBd0xGeHVJQ0FnSUNBZ0lDQjVPaUI1SUM4Z1pHVnNkR0ZVYVcxbElIeDhJREJjYmlBZ0lDQjlPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlHZGxkQ0IwYUdVZ1pHbHlaV04wYVc5dUlHSmxkSGRsWlc0Z2RIZHZJSEJ2YVc1MGMxeHVJQ29nUUhCaGNtRnRJSHRPZFcxaVpYSjlJSGhjYmlBcUlFQndZWEpoYlNCN1RuVnRZbVZ5ZlNCNVhHNGdLaUJBY21WMGRYSnVJSHRPZFcxaVpYSjlJR1JwY21WamRHbHZibHh1SUNvdlhHNW1kVzVqZEdsdmJpQm5aWFJFYVhKbFkzUnBiMjRvZUN3Z2VTa2dlMXh1SUNBZ0lHbG1JQ2g0SUQwOVBTQjVLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJFU1ZKRlExUkpUMDVmVGs5T1JUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9ZV0p6S0hncElENDlJR0ZpY3loNUtTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdlQ0E4SURBZ1B5QkVTVkpGUTFSSlQwNWZURVZHVkNBNklFUkpVa1ZEVkVsUFRsOVNTVWRJVkR0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlIa2dQQ0F3SUQ4Z1JFbFNSVU5VU1U5T1gxVlFJRG9nUkVsU1JVTlVTVTlPWDBSUFYwNDdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1kyRnNZM1ZzWVhSbElIUm9aU0JoWW5OdmJIVjBaU0JrYVhOMFlXNWpaU0JpWlhSM1pXVnVJSFIzYnlCd2IybHVkSE5jYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCd01TQjdlQ3dnZVgxY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQndNaUI3ZUN3Z2VYMWNiaUFxSUVCd1lYSmhiU0I3UVhKeVlYbDlJRnR3Y205d2MxMGdZMjl1ZEdGcGJtbHVaeUI0SUdGdVpDQjVJR3RsZVhOY2JpQXFJRUJ5WlhSMWNtNGdlMDUxYldKbGNuMGdaR2x6ZEdGdVkyVmNiaUFxTDF4dVpuVnVZM1JwYjI0Z1oyVjBSR2x6ZEdGdVkyVW9jREVzSUhBeUxDQndjbTl3Y3lrZ2UxeHVJQ0FnSUdsbUlDZ2hjSEp2Y0hNcElIdGNiaUFnSUNBZ0lDQWdjSEp2Y0hNZ1BTQlFVazlRVTE5WVdUdGNiaUFnSUNCOVhHNGdJQ0FnZG1GeUlIZ2dQU0J3TWx0d2NtOXdjMXN3WFYwZ0xTQndNVnR3Y205d2Mxc3dYVjBzWEc0Z0lDQWdJQ0FnSUhrZ1BTQndNbHR3Y205d2Mxc3hYVjBnTFNCd01WdHdjbTl3YzFzeFhWMDdYRzVjYmlBZ0lDQnlaWFIxY200Z1RXRjBhQzV6Y1hKMEtDaDRJQ29nZUNrZ0t5QW9lU0FxSUhrcEtUdGNibjFjYmx4dUx5b3FYRzRnS2lCallXeGpkV3hoZEdVZ2RHaGxJR0Z1WjJ4bElHSmxkSGRsWlc0Z2RIZHZJR052YjNKa2FXNWhkR1Z6WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ2NERmNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0J3TWx4dUlDb2dRSEJoY21GdElIdEJjbkpoZVgwZ1czQnliM0J6WFNCamIyNTBZV2x1YVc1bklIZ2dZVzVrSUhrZ2EyVjVjMXh1SUNvZ1FISmxkSFZ5YmlCN1RuVnRZbVZ5ZlNCaGJtZHNaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQm5aWFJCYm1kc1pTaHdNU3dnY0RJc0lIQnliM0J6S1NCN1hHNGdJQ0FnYVdZZ0tDRndjbTl3Y3lrZ2UxeHVJQ0FnSUNBZ0lDQndjbTl3Y3lBOUlGQlNUMUJUWDFoWk8xeHVJQ0FnSUgxY2JpQWdJQ0IyWVhJZ2VDQTlJSEF5VzNCeWIzQnpXekJkWFNBdElIQXhXM0J5YjNCeld6QmRYU3hjYmlBZ0lDQWdJQ0FnZVNBOUlIQXlXM0J5YjNCeld6RmRYU0F0SUhBeFczQnliM0J6V3pGZFhUdGNiaUFnSUNCeVpYUjFjbTRnVFdGMGFDNWhkR0Z1TWloNUxDQjRLU0FxSURFNE1DQXZJRTFoZEdndVVFazdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1kyRnNZM1ZzWVhSbElIUm9aU0J5YjNSaGRHbHZiaUJrWldkeVpXVnpJR0psZEhkbFpXNGdkSGR2SUhCdmFXNTBaWEp6WlhSelhHNGdLaUJBY0dGeVlXMGdlMEZ5Y21GNWZTQnpkR0Z5ZENCaGNuSmhlU0J2WmlCd2IybHVkR1Z5YzF4dUlDb2dRSEJoY21GdElIdEJjbkpoZVgwZ1pXNWtJR0Z5Y21GNUlHOW1JSEJ2YVc1MFpYSnpYRzRnS2lCQWNtVjBkWEp1SUh0T2RXMWlaWEo5SUhKdmRHRjBhVzl1WEc0Z0tpOWNibVoxYm1OMGFXOXVJR2RsZEZKdmRHRjBhVzl1S0hOMFlYSjBMQ0JsYm1RcElIdGNiaUFnSUNCeVpYUjFjbTRnWjJWMFFXNW5iR1VvWlc1a1d6RmRMQ0JsYm1SYk1GMHNJRkJTVDFCVFgwTk1TVVZPVkY5WVdTa2dLeUJuWlhSQmJtZHNaU2h6ZEdGeWRGc3hYU3dnYzNSaGNuUmJNRjBzSUZCU1QxQlRYME5NU1VWT1ZGOVlXU2s3WEc1OVhHNWNiaThxS2x4dUlDb2dZMkZzWTNWc1lYUmxJSFJvWlNCelkyRnNaU0JtWVdOMGIzSWdZbVYwZDJWbGJpQjBkMjhnY0c5cGJuUmxjbk5sZEhOY2JpQXFJRzV2SUhOallXeGxJR2x6SURFc0lHRnVaQ0JuYjJWeklHUnZkMjRnZEc4Z01DQjNhR1Z1SUhCcGJtTm9aV1FnZEc5blpYUm9aWElzSUdGdVpDQmlhV2RuWlhJZ2QyaGxiaUJ3YVc1amFHVmtJRzkxZEZ4dUlDb2dRSEJoY21GdElIdEJjbkpoZVgwZ2MzUmhjblFnWVhKeVlYa2diMllnY0c5cGJuUmxjbk5jYmlBcUlFQndZWEpoYlNCN1FYSnlZWGw5SUdWdVpDQmhjbkpoZVNCdlppQndiMmx1ZEdWeWMxeHVJQ29nUUhKbGRIVnliaUI3VG5WdFltVnlmU0J6WTJGc1pWeHVJQ292WEc1bWRXNWpkR2x2YmlCblpYUlRZMkZzWlNoemRHRnlkQ3dnWlc1a0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUdkbGRFUnBjM1JoYm1ObEtHVnVaRnN3WFN3Z1pXNWtXekZkTENCUVVrOVFVMTlEVEVsRlRsUmZXRmtwSUM4Z1oyVjBSR2x6ZEdGdVkyVW9jM1JoY25SYk1GMHNJSE4wWVhKMFd6RmRMQ0JRVWs5UVUxOURURWxGVGxSZldGa3BPMXh1ZlZ4dVhHNTJZWElnVFU5VlUwVmZTVTVRVlZSZlRVRlFJRDBnZTF4dUlDQWdJRzF2ZFhObFpHOTNiam9nU1U1UVZWUmZVMVJCVWxRc1hHNGdJQ0FnYlc5MWMyVnRiM1psT2lCSlRsQlZWRjlOVDFaRkxGeHVJQ0FnSUcxdmRYTmxkWEE2SUVsT1VGVlVYMFZPUkZ4dWZUdGNibHh1ZG1GeUlFMVBWVk5GWDBWTVJVMUZUbFJmUlZaRlRsUlRJRDBnSjIxdmRYTmxaRzkzYmljN1hHNTJZWElnVFU5VlUwVmZWMGxPUkU5WFgwVldSVTVVVXlBOUlDZHRiM1Z6WlcxdmRtVWdiVzkxYzJWMWNDYzdYRzVjYmk4cUtseHVJQ29nVFc5MWMyVWdaWFpsYm5SeklHbHVjSFYwWEc0Z0tpQkFZMjl1YzNSeWRXTjBiM0pjYmlBcUlFQmxlSFJsYm1SeklFbHVjSFYwWEc0Z0tpOWNibVoxYm1OMGFXOXVJRTF2ZFhObFNXNXdkWFFvS1NCN1hHNGdJQ0FnZEdocGN5NWxka1ZzSUQwZ1RVOVZVMFZmUlV4RlRVVk9WRjlGVmtWT1ZGTTdYRzRnSUNBZ2RHaHBjeTVsZGxkcGJpQTlJRTFQVlZORlgxZEpUa1JQVjE5RlZrVk9WRk03WEc1Y2JpQWdJQ0IwYUdsekxuQnlaWE56WldRZ1BTQm1ZV3h6WlRzZ0x5OGdiVzkxYzJWa2IzZHVJSE4wWVhSbFhHNWNiaUFnSUNCSmJuQjFkQzVoY0hCc2VTaDBhR2x6TENCaGNtZDFiV1Z1ZEhNcE8xeHVmVnh1WEc1cGJtaGxjbWwwS0UxdmRYTmxTVzV3ZFhRc0lFbHVjSFYwTENCN1hHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2FHRnVaR3hsSUcxdmRYTmxJR1YyWlc1MGMxeHVJQ0FnSUNBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCbGRseHVJQ0FnSUNBcUwxeHVJQ0FnSUdoaGJtUnNaWEk2SUdaMWJtTjBhVzl1SUUxRmFHRnVaR3hsY2lobGRpa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ1pYWmxiblJVZVhCbElEMGdUVTlWVTBWZlNVNVFWVlJmVFVGUVcyVjJMblI1Y0dWZE8xeHVYRzRnSUNBZ0lDQWdJQzh2SUc5dUlITjBZWEowSUhkbElIZGhiblFnZEc4Z2FHRjJaU0IwYUdVZ2JHVm1kQ0J0YjNWelpTQmlkWFIwYjI0Z1pHOTNibHh1SUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblJVZVhCbElDWWdTVTVRVlZSZlUxUkJVbFFnSmlZZ1pYWXVZblYwZEc5dUlEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnlaWE56WldRZ1BTQjBjblZsTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0dWMlpXNTBWSGx3WlNBbUlFbE9VRlZVWDAxUFZrVWdKaVlnWlhZdWQyaHBZMmdnSVQwOUlERXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHVjJaVzUwVkhsd1pTQTlJRWxPVUZWVVgwVk9SRHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDOHZJRzF2ZFhObElHMTFjM1FnWW1VZ1pHOTNibHh1SUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11Y0hKbGMzTmxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHVjJaVzUwVkhsd1pTQW1JRWxPVUZWVVgwVk9SQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2NtVnpjMlZrSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJHeGlZV05yS0hSb2FYTXViV0Z1WVdkbGNpd2daWFpsYm5SVWVYQmxMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZEdWeWN6b2dXMlYyWFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR05vWVc1blpXUlFiMmx1ZEdWeWN6b2dXMlYyWFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MFpYSlVlWEJsT2lCSlRsQlZWRjlVV1ZCRlgwMVBWVk5GTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjM0pqUlhabGJuUTZJR1YyWEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JuMHBPMXh1WEc1MllYSWdVRTlKVGxSRlVsOUpUbEJWVkY5TlFWQWdQU0I3WEc0Z0lDQWdjRzlwYm5SbGNtUnZkMjQ2SUVsT1VGVlVYMU5VUVZKVUxGeHVJQ0FnSUhCdmFXNTBaWEp0YjNabE9pQkpUbEJWVkY5TlQxWkZMRnh1SUNBZ0lIQnZhVzUwWlhKMWNEb2dTVTVRVlZSZlJVNUVMRnh1SUNBZ0lIQnZhVzUwWlhKallXNWpaV3c2SUVsT1VGVlVYME5CVGtORlRDeGNiaUFnSUNCd2IybHVkR1Z5YjNWME9pQkpUbEJWVkY5RFFVNURSVXhjYm4wN1hHNWNiaTh2SUdsdUlFbEZNVEFnZEdobElIQnZhVzUwWlhJZ2RIbHdaWE1nYVhNZ1pHVm1hVzVsWkNCaGN5QmhiaUJsYm5WdFhHNTJZWElnU1VVeE1GOVFUMGxPVkVWU1gxUlpVRVZmUlU1VlRTQTlJSHRjYmlBZ0lDQXlPaUJKVGxCVlZGOVVXVkJGWDFSUFZVTklMRnh1SUNBZ0lETTZJRWxPVUZWVVgxUlpVRVZmVUVWT0xGeHVJQ0FnSURRNklFbE9VRlZVWDFSWlVFVmZUVTlWVTBVc1hHNGdJQ0FnTlRvZ1NVNVFWVlJmVkZsUVJWOUxTVTVGUTFRZ0x5OGdjMlZsSUdoMGRIQnpPaTh2ZEhkcGRIUmxjaTVqYjIwdmFtRmpiMkp5YjNOemFTOXpkR0YwZFhNdk5EZ3dOVGsyTkRNNE5EZzVPRGt3T0RFMlhHNTlPMXh1WEc1MllYSWdVRTlKVGxSRlVsOUZURVZOUlU1VVgwVldSVTVVVXlBOUlDZHdiMmx1ZEdWeVpHOTNiaWM3WEc1MllYSWdVRTlKVGxSRlVsOVhTVTVFVDFkZlJWWkZUbFJUSUQwZ0ozQnZhVzUwWlhKdGIzWmxJSEJ2YVc1MFpYSjFjQ0J3YjJsdWRHVnlZMkZ1WTJWc0p6dGNibHh1THk4Z1NVVXhNQ0JvWVhNZ2NISmxabWw0WldRZ2MzVndjRzl5ZEN3Z1lXNWtJR05oYzJVdGMyVnVjMmwwYVhabFhHNXBaaUFvZDJsdVpHOTNMazFUVUc5cGJuUmxja1YyWlc1MElDWW1JQ0YzYVc1a2IzY3VVRzlwYm5SbGNrVjJaVzUwS1NCN1hHNGdJQ0FnVUU5SlRsUkZVbDlGVEVWTlJVNVVYMFZXUlU1VVV5QTlJQ2ROVTFCdmFXNTBaWEpFYjNkdUp6dGNiaUFnSUNCUVQwbE9WRVZTWDFkSlRrUlBWMTlGVmtWT1ZGTWdQU0FuVFZOUWIybHVkR1Z5VFc5MlpTQk5VMUJ2YVc1MFpYSlZjQ0JOVTFCdmFXNTBaWEpEWVc1alpXd25PMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGQnZhVzUwWlhJZ1pYWmxiblJ6SUdsdWNIVjBYRzRnS2lCQVkyOXVjM1J5ZFdOMGIzSmNiaUFxSUVCbGVIUmxibVJ6SUVsdWNIVjBYRzRnS2k5Y2JtWjFibU4wYVc5dUlGQnZhVzUwWlhKRmRtVnVkRWx1Y0hWMEtDa2dlMXh1SUNBZ0lIUm9hWE11WlhaRmJDQTlJRkJQU1U1VVJWSmZSVXhGVFVWT1ZGOUZWa1ZPVkZNN1hHNGdJQ0FnZEdocGN5NWxkbGRwYmlBOUlGQlBTVTVVUlZKZlYwbE9SRTlYWDBWV1JVNVVVenRjYmx4dUlDQWdJRWx1Y0hWMExtRndjR3g1S0hSb2FYTXNJR0Z5WjNWdFpXNTBjeWs3WEc1Y2JpQWdJQ0IwYUdsekxuTjBiM0psSUQwZ0tIUm9hWE11YldGdVlXZGxjaTV6WlhOemFXOXVMbkJ2YVc1MFpYSkZkbVZ1ZEhNZ1BTQmJYU2s3WEc1OVhHNWNibWx1YUdWeWFYUW9VRzlwYm5SbGNrVjJaVzUwU1c1d2RYUXNJRWx1Y0hWMExDQjdYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dhR0Z1Wkd4bElHMXZkWE5sSUdWMlpXNTBjMXh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQmxkbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHaGhibVJzWlhJNklHWjFibU4wYVc5dUlGQkZhR0Z1Wkd4bGNpaGxkaWtnZTF4dUlDQWdJQ0FnSUNCMllYSWdjM1J2Y21VZ1BTQjBhR2x6TG5OMGIzSmxPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2NtVnRiM1psVUc5cGJuUmxjaUE5SUdaaGJITmxPMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQmxkbVZ1ZEZSNWNHVk9iM0p0WVd4cGVtVmtJRDBnWlhZdWRIbHdaUzUwYjB4dmQyVnlRMkZ6WlNncExuSmxjR3hoWTJVb0oyMXpKeXdnSnljcE8xeHVJQ0FnSUNBZ0lDQjJZWElnWlhabGJuUlVlWEJsSUQwZ1VFOUpUbFJGVWw5SlRsQlZWRjlOUVZCYlpYWmxiblJVZVhCbFRtOXliV0ZzYVhwbFpGMDdYRzRnSUNBZ0lDQWdJSFpoY2lCd2IybHVkR1Z5Vkhsd1pTQTlJRWxGTVRCZlVFOUpUbFJGVWw5VVdWQkZYMFZPVlUxYlpYWXVjRzlwYm5SbGNsUjVjR1ZkSUh4OElHVjJMbkJ2YVc1MFpYSlVlWEJsTzF4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJwYzFSdmRXTm9JRDBnS0hCdmFXNTBaWEpVZVhCbElEMDlJRWxPVUZWVVgxUlpVRVZmVkU5VlEwZ3BPMXh1WEc0Z0lDQWdJQ0FnSUM4dklHZGxkQ0JwYm1SbGVDQnZaaUIwYUdVZ1pYWmxiblFnYVc0Z2RHaGxJSE4wYjNKbFhHNGdJQ0FnSUNBZ0lIWmhjaUJ6ZEc5eVpVbHVaR1Y0SUQwZ2FXNUJjbkpoZVNoemRHOXlaU3dnWlhZdWNHOXBiblJsY2tsa0xDQW5jRzlwYm5SbGNrbGtKeWs3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdjM1JoY25RZ1lXNWtJRzF2ZFhObElHMTFjM1FnWW1VZ1pHOTNibHh1SUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblJVZVhCbElDWWdTVTVRVlZSZlUxUkJVbFFnSmlZZ0tHVjJMbUoxZEhSdmJpQTlQVDBnTUNCOGZDQnBjMVJ2ZFdOb0tTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE4wYjNKbFNXNWtaWGdnUENBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1J2Y21VdWNIVnphQ2hsZGlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUnZjbVZKYm1SbGVDQTlJSE4wYjNKbExteGxibWQwYUNBdElERTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aWFpsYm5SVWVYQmxJQ1lnS0VsT1VGVlVYMFZPUkNCOElFbE9VRlZVWDBOQlRrTkZUQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsYlc5MlpWQnZhVzUwWlhJZ1BTQjBjblZsTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdMeThnYVhRZ2JtOTBJR1p2ZFc1a0xDQnpieUIwYUdVZ2NHOXBiblJsY2lCb1lYTnVKM1FnWW1WbGJpQmtiM2R1SUNoemJ5QnBkQ2R6SUhCeWIySmhZbXg1SUdFZ2FHOTJaWElwWEc0Z0lDQWdJQ0FnSUdsbUlDaHpkRzl5WlVsdVpHVjRJRHdnTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdkWEJrWVhSbElIUm9aU0JsZG1WdWRDQnBiaUIwYUdVZ2MzUnZjbVZjYmlBZ0lDQWdJQ0FnYzNSdmNtVmJjM1J2Y21WSmJtUmxlRjBnUFNCbGRqdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtTmhiR3hpWVdOcktIUm9hWE11YldGdVlXZGxjaXdnWlhabGJuUlVlWEJsTENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWRHVnljem9nYzNSdmNtVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCamFHRnVaMlZrVUc5cGJuUmxjbk02SUZ0bGRsMHNYRzRnSUNBZ0lDQWdJQ0FnSUNCd2IybHVkR1Z5Vkhsd1pUb2djRzlwYm5SbGNsUjVjR1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpjbU5GZG1WdWREb2daWFpjYmlBZ0lDQWdJQ0FnZlNrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hKbGJXOTJaVkJ2YVc1MFpYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJSEpsYlc5MlpTQm1jbTl0SUhSb1pTQnpkRzl5WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjM1J2Y21VdWMzQnNhV05sS0hOMGIzSmxTVzVrWlhnc0lERXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlNrN1hHNWNiblpoY2lCVFNVNUhURVZmVkU5VlEwaGZTVTVRVlZSZlRVRlFJRDBnZTF4dUlDQWdJSFJ2ZFdOb2MzUmhjblE2SUVsT1VGVlVYMU5VUVZKVUxGeHVJQ0FnSUhSdmRXTm9iVzkyWlRvZ1NVNVFWVlJmVFU5V1JTeGNiaUFnSUNCMGIzVmphR1Z1WkRvZ1NVNVFWVlJmUlU1RUxGeHVJQ0FnSUhSdmRXTm9ZMkZ1WTJWc09pQkpUbEJWVkY5RFFVNURSVXhjYm4wN1hHNWNiblpoY2lCVFNVNUhURVZmVkU5VlEwaGZWRUZTUjBWVVgwVldSVTVVVXlBOUlDZDBiM1ZqYUhOMFlYSjBKenRjYm5aaGNpQlRTVTVIVEVWZlZFOVZRMGhmVjBsT1JFOVhYMFZXUlU1VVV5QTlJQ2QwYjNWamFITjBZWEowSUhSdmRXTm9iVzkyWlNCMGIzVmphR1Z1WkNCMGIzVmphR05oYm1ObGJDYzdYRzVjYmk4cUtseHVJQ29nVkc5MVkyZ2daWFpsYm5SeklHbHVjSFYwWEc0Z0tpQkFZMjl1YzNSeWRXTjBiM0pjYmlBcUlFQmxlSFJsYm1SeklFbHVjSFYwWEc0Z0tpOWNibVoxYm1OMGFXOXVJRk5wYm1kc1pWUnZkV05vU1c1d2RYUW9LU0I3WEc0Z0lDQWdkR2hwY3k1bGRsUmhjbWRsZENBOUlGTkpUa2RNUlY5VVQxVkRTRjlVUVZKSFJWUmZSVlpGVGxSVE8xeHVJQ0FnSUhSb2FYTXVaWFpYYVc0Z1BTQlRTVTVIVEVWZlZFOVZRMGhmVjBsT1JFOVhYMFZXUlU1VVV6dGNiaUFnSUNCMGFHbHpMbk4wWVhKMFpXUWdQU0JtWVd4elpUdGNibHh1SUNBZ0lFbHVjSFYwTG1Gd2NHeDVLSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5azdYRzU5WEc1Y2JtbHVhR1Z5YVhRb1UybHVaMnhsVkc5MVkyaEpibkIxZEN3Z1NXNXdkWFFzSUh0Y2JpQWdJQ0JvWVc1a2JHVnlPaUJtZFc1amRHbHZiaUJVUldoaGJtUnNaWElvWlhZcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUhSNWNHVWdQU0JUU1U1SFRFVmZWRTlWUTBoZlNVNVFWVlJmVFVGUVcyVjJMblI1Y0dWZE8xeHVYRzRnSUNBZ0lDQWdJQzh2SUhOb2IzVnNaQ0IzWlNCb1lXNWtiR1VnZEdobElIUnZkV05vSUdWMlpXNTBjejljYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1VnUFQwOUlFbE9VRlZVWDFOVVFWSlVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5OMFlYSjBaV1FnUFNCMGNuVmxPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxuTjBZWEowWldRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIWmhjaUIwYjNWamFHVnpJRDBnYm05eWJXRnNhWHBsVTJsdVoyeGxWRzkxWTJobGN5NWpZV3hzS0hSb2FYTXNJR1YyTENCMGVYQmxLVHRjYmx4dUlDQWdJQ0FnSUNBdkx5QjNhR1Z1SUdSdmJtVXNJSEpsYzJWMElIUm9aU0J6ZEdGeWRHVmtJSE4wWVhSbFhHNGdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbElDWWdLRWxPVUZWVVgwVk9SQ0I4SUVsT1VGVlVYME5CVGtORlRDa2dKaVlnZEc5MVkyaGxjMXN3WFM1c1pXNW5kR2dnTFNCMGIzVmphR1Z6V3pGZExteGxibWQwYUNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emRHRnlkR1ZrSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJHeGlZV05yS0hSb2FYTXViV0Z1WVdkbGNpd2dkSGx3WlN3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0c5cGJuUmxjbk02SUhSdmRXTm9aWE5iTUYwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdGdVoyVmtVRzlwYm5SbGNuTTZJSFJ2ZFdOb1pYTmJNVjBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZEdWeVZIbHdaVG9nU1U1UVZWUmZWRmxRUlY5VVQxVkRTQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lITnlZMFYyWlc1ME9pQmxkbHh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc1OUtUdGNibHh1THlvcVhHNGdLaUJBZEdocGN5QjdWRzkxWTJoSmJuQjFkSDFjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCbGRseHVJQ29nUUhCaGNtRnRJSHRPZFcxaVpYSjlJSFI1Y0dVZ1pteGhaMXh1SUNvZ1FISmxkSFZ5Ym5NZ2UzVnVaR1ZtYVc1bFpIeEJjbkpoZVgwZ1cyRnNiQ3dnWTJoaGJtZGxaRjFjYmlBcUwxeHVablZ1WTNScGIyNGdibTl5YldGc2FYcGxVMmx1WjJ4bFZHOTFZMmhsY3lobGRpd2dkSGx3WlNrZ2UxeHVJQ0FnSUhaaGNpQmhiR3dnUFNCMGIwRnljbUY1S0dWMkxuUnZkV05vWlhNcE8xeHVJQ0FnSUhaaGNpQmphR0Z1WjJWa0lEMGdkRzlCY25KaGVTaGxkaTVqYUdGdVoyVmtWRzkxWTJobGN5azdYRzVjYmlBZ0lDQnBaaUFvZEhsd1pTQW1JQ2hKVGxCVlZGOUZUa1FnZkNCSlRsQlZWRjlEUVU1RFJVd3BLU0I3WEc0Z0lDQWdJQ0FnSUdGc2JDQTlJSFZ1YVhGMVpVRnljbUY1S0dGc2JDNWpiMjVqWVhRb1kyaGhibWRsWkNrc0lDZHBaR1Z1ZEdsbWFXVnlKeXdnZEhKMVpTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUZ0aGJHd3NJR05vWVc1blpXUmRPMXh1ZlZ4dVhHNTJZWElnVkU5VlEwaGZTVTVRVlZSZlRVRlFJRDBnZTF4dUlDQWdJSFJ2ZFdOb2MzUmhjblE2SUVsT1VGVlVYMU5VUVZKVUxGeHVJQ0FnSUhSdmRXTm9iVzkyWlRvZ1NVNVFWVlJmVFU5V1JTeGNiaUFnSUNCMGIzVmphR1Z1WkRvZ1NVNVFWVlJmUlU1RUxGeHVJQ0FnSUhSdmRXTm9ZMkZ1WTJWc09pQkpUbEJWVkY5RFFVNURSVXhjYm4wN1hHNWNiblpoY2lCVVQxVkRTRjlVUVZKSFJWUmZSVlpGVGxSVElEMGdKM1J2ZFdOb2MzUmhjblFnZEc5MVkyaHRiM1psSUhSdmRXTm9aVzVrSUhSdmRXTm9ZMkZ1WTJWc0p6dGNibHh1THlvcVhHNGdLaUJOZFd4MGFTMTFjMlZ5SUhSdmRXTm9JR1YyWlc1MGN5QnBibkIxZEZ4dUlDb2dRR052Ym5OMGNuVmpkRzl5WEc0Z0tpQkFaWGgwWlc1a2N5QkpibkIxZEZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJVYjNWamFFbHVjSFYwS0NrZ2UxeHVJQ0FnSUhSb2FYTXVaWFpVWVhKblpYUWdQU0JVVDFWRFNGOVVRVkpIUlZSZlJWWkZUbFJUTzF4dUlDQWdJSFJvYVhNdWRHRnlaMlYwU1dSeklEMGdlMzA3WEc1Y2JpQWdJQ0JKYm5CMWRDNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dWZWeHVYRzVwYm1obGNtbDBLRlJ2ZFdOb1NXNXdkWFFzSUVsdWNIVjBMQ0I3WEc0Z0lDQWdhR0Z1Wkd4bGNqb2dablZ1WTNScGIyNGdUVlJGYUdGdVpHeGxjaWhsZGlrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnZEhsd1pTQTlJRlJQVlVOSVgwbE9VRlZVWDAxQlVGdGxkaTUwZVhCbFhUdGNiaUFnSUNBZ0lDQWdkbUZ5SUhSdmRXTm9aWE1nUFNCblpYUlViM1ZqYUdWekxtTmhiR3dvZEdocGN5d2daWFlzSUhSNWNHVXBPMXh1SUNBZ0lDQWdJQ0JwWmlBb0lYUnZkV05vWlhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJGc2JHSmhZMnNvZEdocGN5NXRZVzVoWjJWeUxDQjBlWEJsTENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWRHVnljem9nZEc5MVkyaGxjMXN3WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR05vWVc1blpXUlFiMmx1ZEdWeWN6b2dkRzkxWTJobGMxc3hYU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwWlhKVWVYQmxPaUJKVGxCVlZGOVVXVkJGWDFSUFZVTklMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2MzSmpSWFpsYm5RNklHVjJYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYm4wcE8xeHVYRzR2S2lwY2JpQXFJRUIwYUdseklIdFViM1ZqYUVsdWNIVjBmVnh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUdWMlhHNGdLaUJBY0dGeVlXMGdlMDUxYldKbGNuMGdkSGx3WlNCbWJHRm5YRzRnS2lCQWNtVjBkWEp1Y3lCN2RXNWtaV1pwYm1Wa2ZFRnljbUY1ZlNCYllXeHNMQ0JqYUdGdVoyVmtYVnh1SUNvdlhHNW1kVzVqZEdsdmJpQm5aWFJVYjNWamFHVnpLR1YyTENCMGVYQmxLU0I3WEc0Z0lDQWdkbUZ5SUdGc2JGUnZkV05vWlhNZ1BTQjBiMEZ5Y21GNUtHVjJMblJ2ZFdOb1pYTXBPMXh1SUNBZ0lIWmhjaUIwWVhKblpYUkpaSE1nUFNCMGFHbHpMblJoY21kbGRFbGtjenRjYmx4dUlDQWdJQzh2SUhkb1pXNGdkR2hsY21VZ2FYTWdiMjVzZVNCdmJtVWdkRzkxWTJnc0lIUm9aU0J3Y205alpYTnpJR05oYmlCaVpTQnphVzF3YkdsbWFXVmtYRzRnSUNBZ2FXWWdLSFI1Y0dVZ0ppQW9TVTVRVlZSZlUxUkJVbFFnZkNCSlRsQlZWRjlOVDFaRktTQW1KaUJoYkd4VWIzVmphR1Z6TG14bGJtZDBhQ0E5UFQwZ01Ta2dlMXh1SUNBZ0lDQWdJQ0IwWVhKblpYUkpaSE5iWVd4c1ZHOTFZMmhsYzFzd1hTNXBaR1Z1ZEdsbWFXVnlYU0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJZV3hzVkc5MVkyaGxjeXdnWVd4c1ZHOTFZMmhsYzEwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlHa3NYRzRnSUNBZ0lDQWdJSFJoY21kbGRGUnZkV05vWlhNc1hHNGdJQ0FnSUNBZ0lHTm9ZVzVuWldSVWIzVmphR1Z6SUQwZ2RHOUJjbkpoZVNobGRpNWphR0Z1WjJWa1ZHOTFZMmhsY3lrc1hHNGdJQ0FnSUNBZ0lHTm9ZVzVuWldSVVlYSm5aWFJVYjNWamFHVnpJRDBnVzEwc1hHNGdJQ0FnSUNBZ0lIUmhjbWRsZENBOUlIUm9hWE11ZEdGeVoyVjBPMXh1WEc0Z0lDQWdMeThnWjJWMElIUmhjbWRsZENCMGIzVmphR1Z6SUdaeWIyMGdkRzkxWTJobGMxeHVJQ0FnSUhSaGNtZGxkRlJ2ZFdOb1pYTWdQU0JoYkd4VWIzVmphR1Z6TG1acGJIUmxjaWhtZFc1amRHbHZiaWgwYjNWamFDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdhR0Z6VUdGeVpXNTBLSFJ2ZFdOb0xuUmhjbWRsZEN3Z2RHRnlaMlYwS1R0Y2JpQWdJQ0I5S1R0Y2JseHVJQ0FnSUM4dklHTnZiR3hsWTNRZ2RHOTFZMmhsYzF4dUlDQWdJR2xtSUNoMGVYQmxJRDA5UFNCSlRsQlZWRjlUVkVGU1ZDa2dlMXh1SUNBZ0lDQWdJQ0JwSUQwZ01EdGNiaUFnSUNBZ0lDQWdkMmhwYkdVZ0tHa2dQQ0IwWVhKblpYUlViM1ZqYUdWekxteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBTV1J6VzNSaGNtZGxkRlJ2ZFdOb1pYTmJhVjB1YVdSbGJuUnBabWxsY2wwZ1BTQjBjblZsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhU3NyTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1ptbHNkR1Z5SUdOb1lXNW5aV1FnZEc5MVkyaGxjeUIwYnlCdmJteDVJR052Ym5SaGFXNGdkRzkxWTJobGN5QjBhR0YwSUdWNGFYTjBJR2x1SUhSb1pTQmpiMnhzWldOMFpXUWdkR0Z5WjJWMElHbGtjMXh1SUNBZ0lHa2dQU0F3TzF4dUlDQWdJSGRvYVd4bElDaHBJRHdnWTJoaGJtZGxaRlJ2ZFdOb1pYTXViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMFlYSm5aWFJKWkhOYlkyaGhibWRsWkZSdmRXTm9aWE5iYVYwdWFXUmxiblJwWm1sbGNsMHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTm9ZVzVuWldSVVlYSm5aWFJVYjNWamFHVnpMbkIxYzJnb1kyaGhibWRsWkZSdmRXTm9aWE5iYVYwcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1kyeGxZVzUxY0NCeVpXMXZkbVZrSUhSdmRXTm9aWE5jYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1VnSmlBb1NVNVFWVlJmUlU1RUlId2dTVTVRVlZSZlEwRk9RMFZNS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJSFJoY21kbGRFbGtjMXRqYUdGdVoyVmtWRzkxWTJobGMxdHBYUzVwWkdWdWRHbG1hV1Z5WFR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnBLeXM3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0NGamFHRnVaMlZrVkdGeVoyVjBWRzkxWTJobGN5NXNaVzVuZEdncElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJiWEc0Z0lDQWdJQ0FnSUM4dklHMWxjbWRsSUhSaGNtZGxkRlJ2ZFdOb1pYTWdkMmwwYUNCamFHRnVaMlZrVkdGeVoyVjBWRzkxWTJobGN5QnpieUJwZENCamIyNTBZV2x1Y3lCQlRFd2dkRzkxWTJobGN5d2dhVzVqYkhWa2FXNW5JQ2RsYm1RbklHRnVaQ0FuWTJGdVkyVnNKMXh1SUNBZ0lDQWdJQ0IxYm1seGRXVkJjbkpoZVNoMFlYSm5aWFJVYjNWamFHVnpMbU52Ym1OaGRDaGphR0Z1WjJWa1ZHRnlaMlYwVkc5MVkyaGxjeWtzSUNkcFpHVnVkR2xtYVdWeUp5d2dkSEoxWlNrc1hHNGdJQ0FnSUNBZ0lHTm9ZVzVuWldSVVlYSm5aWFJVYjNWamFHVnpYRzRnSUNBZ1hUdGNibjFjYmx4dUx5b3FYRzRnS2lCRGIyMWlhVzVsWkNCMGIzVmphQ0JoYm1RZ2JXOTFjMlVnYVc1d2RYUmNiaUFxWEc0Z0tpQlViM1ZqYUNCb1lYTWdZU0JvYVdkb1pYSWdjSEpwYjNKcGRIa2dkR2hsYmlCdGIzVnpaU3dnWVc1a0lIZG9hV3hsSUhSdmRXTm9hVzVuSUc1dklHMXZkWE5sSUdWMlpXNTBjeUJoY21VZ1lXeHNiM2RsWkM1Y2JpQXFJRlJvYVhNZ1ltVmpZWFZ6WlNCMGIzVmphQ0JrWlhacFkyVnpJR0ZzYzI4Z1pXMXBkQ0J0YjNWelpTQmxkbVZ1ZEhNZ2QyaHBiR1VnWkc5cGJtY2dZU0IwYjNWamFDNWNiaUFxWEc0Z0tpQkFZMjl1YzNSeWRXTjBiM0pjYmlBcUlFQmxlSFJsYm1SeklFbHVjSFYwWEc0Z0tpOWNibHh1ZG1GeUlFUkZSRlZRWDFSSlRVVlBWVlFnUFNBeU5UQXdPMXh1ZG1GeUlFUkZSRlZRWDBSSlUxUkJUa05GSUQwZ01qVTdYRzVjYm1aMWJtTjBhVzl1SUZSdmRXTm9UVzkxYzJWSmJuQjFkQ2dwSUh0Y2JpQWdJQ0JKYm5CMWRDNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dVhHNGdJQ0FnZG1GeUlHaGhibVJzWlhJZ1BTQmlhVzVrUm00b2RHaHBjeTVvWVc1a2JHVnlMQ0IwYUdsektUdGNiaUFnSUNCMGFHbHpMblJ2ZFdOb0lEMGdibVYzSUZSdmRXTm9TVzV3ZFhRb2RHaHBjeTV0WVc1aFoyVnlMQ0JvWVc1a2JHVnlLVHRjYmlBZ0lDQjBhR2x6TG0xdmRYTmxJRDBnYm1WM0lFMXZkWE5sU1c1d2RYUW9kR2hwY3k1dFlXNWhaMlZ5TENCb1lXNWtiR1Z5S1R0Y2JseHVJQ0FnSUhSb2FYTXVjSEpwYldGeWVWUnZkV05vSUQwZ2JuVnNiRHRjYmlBZ0lDQjBhR2x6TG14aGMzUlViM1ZqYUdWeklEMGdXMTA3WEc1OVhHNWNibWx1YUdWeWFYUW9WRzkxWTJoTmIzVnpaVWx1Y0hWMExDQkpibkIxZEN3Z2UxeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHaGhibVJzWlNCdGIzVnpaU0JoYm1RZ2RHOTFZMmdnWlhabGJuUnpYRzRnSUNBZ0lDb2dRSEJoY21GdElIdElZVzF0WlhKOUlHMWhibUZuWlhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTFOMGNtbHVaMzBnYVc1d2RYUkZkbVZ1ZEZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JwYm5CMWRFUmhkR0ZjYmlBZ0lDQWdLaTljYmlBZ0lDQm9ZVzVrYkdWeU9pQm1kVzVqZEdsdmJpQlVUVVZvWVc1a2JHVnlLRzFoYm1GblpYSXNJR2x1Y0hWMFJYWmxiblFzSUdsdWNIVjBSR0YwWVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYVhOVWIzVmphQ0E5SUNocGJuQjFkRVJoZEdFdWNHOXBiblJsY2xSNWNHVWdQVDBnU1U1UVZWUmZWRmxRUlY5VVQxVkRTQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBjMDF2ZFhObElEMGdLR2x1Y0hWMFJHRjBZUzV3YjJsdWRHVnlWSGx3WlNBOVBTQkpUbEJWVkY5VVdWQkZYMDFQVlZORktUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb2FYTk5iM1Z6WlNBbUppQnBibkIxZEVSaGRHRXVjMjkxY21ObFEyRndZV0pwYkdsMGFXVnpJQ1ltSUdsdWNIVjBSR0YwWVM1emIzVnlZMlZEWVhCaFltbHNhWFJwWlhNdVptbHlaWE5VYjNWamFFVjJaVzUwY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdkMmhsYmlCM1pTZHlaU0JwYmlCaElIUnZkV05vSUdWMlpXNTBMQ0J5WldOdmNtUWdkRzkxWTJobGN5QjBieUFnWkdVdFpIVndaU0J6ZVc1MGFHVjBhV01nYlc5MWMyVWdaWFpsYm5SY2JpQWdJQ0FnSUNBZ2FXWWdLR2x6Vkc5MVkyZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxZMjl5WkZSdmRXTm9aWE11WTJGc2JDaDBhR2x6TENCcGJuQjFkRVYyWlc1MExDQnBibkIxZEVSaGRHRXBPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dselRXOTFjMlVnSmlZZ2FYTlRlVzUwYUdWMGFXTkZkbVZ1ZEM1allXeHNLSFJvYVhNc0lHbHVjSFYwUkdGMFlTa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyRnNiR0poWTJzb2JXRnVZV2RsY2l3Z2FXNXdkWFJGZG1WdWRDd2dhVzV3ZFhSRVlYUmhLVHRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nY21WdGIzWmxJSFJvWlNCbGRtVnVkQ0JzYVhOMFpXNWxjbk5jYmlBZ0lDQWdLaTljYmlBZ0lDQmtaWE4wY205NU9pQm1kVzVqZEdsdmJpQmtaWE4wY205NUtDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxuUnZkV05vTG1SbGMzUnliM2tvS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV0YjNWelpTNWtaWE4wY205NUtDazdYRzRnSUNBZ2ZWeHVmU2s3WEc1Y2JtWjFibU4wYVc5dUlISmxZMjl5WkZSdmRXTm9aWE1vWlhabGJuUlVlWEJsTENCbGRtVnVkRVJoZEdFcElIdGNiaUFnSUNCcFppQW9aWFpsYm5SVWVYQmxJQ1lnU1U1UVZWUmZVMVJCVWxRcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1d2NtbHRZWEo1Vkc5MVkyZ2dQU0JsZG1WdWRFUmhkR0V1WTJoaGJtZGxaRkJ2YVc1MFpYSnpXekJkTG1sa1pXNTBhV1pwWlhJN1hHNGdJQ0FnSUNBZ0lITmxkRXhoYzNSVWIzVmphQzVqWVd4c0tIUm9hWE1zSUdWMlpXNTBSR0YwWVNrN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNobGRtVnVkRlI1Y0dVZ0ppQW9TVTVRVlZSZlJVNUVJSHdnU1U1UVZWUmZRMEZPUTBWTUtTa2dlMXh1SUNBZ0lDQWdJQ0J6WlhSTVlYTjBWRzkxWTJndVkyRnNiQ2gwYUdsekxDQmxkbVZ1ZEVSaGRHRXBPMXh1SUNBZ0lIMWNibjFjYmx4dVpuVnVZM1JwYjI0Z2MyVjBUR0Z6ZEZSdmRXTm9LR1YyWlc1MFJHRjBZU2tnZTF4dUlDQWdJSFpoY2lCMGIzVmphQ0E5SUdWMlpXNTBSR0YwWVM1amFHRnVaMlZrVUc5cGJuUmxjbk5iTUYwN1hHNWNiaUFnSUNCcFppQW9kRzkxWTJndWFXUmxiblJwWm1sbGNpQTlQVDBnZEdocGN5NXdjbWx0WVhKNVZHOTFZMmdwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR3hoYzNSVWIzVmphQ0E5SUh0NE9pQjBiM1ZqYUM1amJHbGxiblJZTENCNU9pQjBiM1ZqYUM1amJHbGxiblJaZlR0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhOMFZHOTFZMmhsY3k1d2RYTm9LR3hoYzNSVWIzVmphQ2s3WEc0Z0lDQWdJQ0FnSUhaaGNpQnNkSE1nUFNCMGFHbHpMbXhoYzNSVWIzVmphR1Z6TzF4dUlDQWdJQ0FnSUNCMllYSWdjbVZ0YjNabFRHRnpkRlJ2ZFdOb0lEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVNBOUlHeDBjeTVwYm1SbGVFOW1LR3hoYzNSVWIzVmphQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBK0lDMHhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkhSekxuTndiR2xqWlNocExDQXhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVHRjYmlBZ0lDQWdJQ0FnYzJWMFZHbHRaVzkxZENoeVpXMXZkbVZNWVhOMFZHOTFZMmdzSUVSRlJGVlFYMVJKVFVWUFZWUXBPMXh1SUNBZ0lIMWNibjFjYmx4dVpuVnVZM1JwYjI0Z2FYTlRlVzUwYUdWMGFXTkZkbVZ1ZENobGRtVnVkRVJoZEdFcElIdGNiaUFnSUNCMllYSWdlQ0E5SUdWMlpXNTBSR0YwWVM1emNtTkZkbVZ1ZEM1amJHbGxiblJZTENCNUlEMGdaWFpsYm5SRVlYUmhMbk55WTBWMlpXNTBMbU5zYVdWdWRGazdYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQjBhR2x6TG14aGMzUlViM1ZqYUdWekxteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQjBJRDBnZEdocGN5NXNZWE4wVkc5MVkyaGxjMXRwWFR0Y2JpQWdJQ0FnSUNBZ2RtRnlJR1I0SUQwZ1RXRjBhQzVoWW5Nb2VDQXRJSFF1ZUNrc0lHUjVJRDBnVFdGMGFDNWhZbk1vZVNBdElIUXVlU2s3WEc0Z0lDQWdJQ0FnSUdsbUlDaGtlQ0E4UFNCRVJVUlZVRjlFU1ZOVVFVNURSU0FtSmlCa2VTQThQU0JFUlVSVlVGOUVTVk5VUVU1RFJTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh1ZlZ4dVhHNTJZWElnVUZKRlJrbFlSVVJmVkU5VlEwaGZRVU5VU1U5T0lEMGdjSEpsWm1sNFpXUW9WRVZUVkY5RlRFVk5SVTVVTG5OMGVXeGxMQ0FuZEc5MVkyaEJZM1JwYjI0bktUdGNiblpoY2lCT1FWUkpWa1ZmVkU5VlEwaGZRVU5VU1U5T0lEMGdVRkpGUmtsWVJVUmZWRTlWUTBoZlFVTlVTVTlPSUNFOVBTQjFibVJsWm1sdVpXUTdYRzVjYmk4dklHMWhaMmxqWVd3Z2RHOTFZMmhCWTNScGIyNGdkbUZzZFdWY2JuWmhjaUJVVDFWRFNGOUJRMVJKVDA1ZlEwOU5VRlZVUlNBOUlDZGpiMjF3ZFhSbEp6dGNiblpoY2lCVVQxVkRTRjlCUTFSSlQwNWZRVlZVVHlBOUlDZGhkWFJ2Snp0Y2JuWmhjaUJVVDFWRFNGOUJRMVJKVDA1ZlRVRk9TVkJWVEVGVVNVOU9JRDBnSjIxaGJtbHdkV3hoZEdsdmJpYzdJQzh2SUc1dmRDQnBiWEJzWlcxbGJuUmxaRnh1ZG1GeUlGUlBWVU5JWDBGRFZFbFBUbDlPVDA1RklEMGdKMjV2Ym1Vbk8xeHVkbUZ5SUZSUFZVTklYMEZEVkVsUFRsOVFRVTVmV0NBOUlDZHdZVzR0ZUNjN1hHNTJZWElnVkU5VlEwaGZRVU5VU1U5T1gxQkJUbDlaSUQwZ0ozQmhiaTE1Snp0Y2JuWmhjaUJVVDFWRFNGOUJRMVJKVDA1ZlRVRlFJRDBnWjJWMFZHOTFZMmhCWTNScGIyNVFjbTl3Y3lncE8xeHVYRzR2S2lwY2JpQXFJRlJ2ZFdOb0lFRmpkR2x2Ymx4dUlDb2djMlYwY3lCMGFHVWdkRzkxWTJoQlkzUnBiMjRnY0hKdmNHVnlkSGtnYjNJZ2RYTmxjeUIwYUdVZ2FuTWdZV3gwWlhKdVlYUnBkbVZjYmlBcUlFQndZWEpoYlNCN1RXRnVZV2RsY24wZ2JXRnVZV2RsY2x4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlIWmhiSFZsWEc0Z0tpQkFZMjl1YzNSeWRXTjBiM0pjYmlBcUwxeHVablZ1WTNScGIyNGdWRzkxWTJoQlkzUnBiMjRvYldGdVlXZGxjaXdnZG1Gc2RXVXBJSHRjYmlBZ0lDQjBhR2x6TG0xaGJtRm5aWElnUFNCdFlXNWhaMlZ5TzF4dUlDQWdJSFJvYVhNdWMyVjBLSFpoYkhWbEtUdGNibjFjYmx4dVZHOTFZMmhCWTNScGIyNHVjSEp2ZEc5MGVYQmxJRDBnZTF4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUhObGRDQjBhR1VnZEc5MVkyaEJZM1JwYjI0Z2RtRnNkV1VnYjI0Z2RHaGxJR1ZzWlcxbGJuUWdiM0lnWlc1aFlteGxJSFJvWlNCd2IyeDVabWxzYkZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0IyWVd4MVpWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhObGREb2dablZ1WTNScGIyNG9kbUZzZFdVcElIdGNiaUFnSUNBZ0lDQWdMeThnWm1sdVpDQnZkWFFnZEdobElIUnZkV05vTFdGamRHbHZiaUJpZVNCMGFHVWdaWFpsYm5RZ2FHRnVaR3hsY25OY2JpQWdJQ0FnSUNBZ2FXWWdLSFpoYkhWbElEMDlJRlJQVlVOSVgwRkRWRWxQVGw5RFQwMVFWVlJGS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpTQTlJSFJvYVhNdVkyOXRjSFYwWlNncE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tFNUJWRWxXUlY5VVQxVkRTRjlCUTFSSlQwNGdKaVlnZEdocGN5NXRZVzVoWjJWeUxtVnNaVzFsYm5RdWMzUjViR1VnSmlZZ1ZFOVZRMGhmUVVOVVNVOU9YMDFCVUZ0MllXeDFaVjBwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRnVZV2RsY2k1bGJHVnRaVzUwTG5OMGVXeGxXMUJTUlVaSldFVkVYMVJQVlVOSVgwRkRWRWxQVGwwZ1BTQjJZV3gxWlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1GamRHbHZibk1nUFNCMllXeDFaUzUwYjB4dmQyVnlRMkZ6WlNncExuUnlhVzBvS1R0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2FuVnpkQ0J5WlMxelpYUWdkR2hsSUhSdmRXTm9RV04wYVc5dUlIWmhiSFZsWEc0Z0lDQWdJQ292WEc0Z0lDQWdkWEJrWVhSbE9pQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXpaWFFvZEdocGN5NXRZVzVoWjJWeUxtOXdkR2x2Ym5NdWRHOTFZMmhCWTNScGIyNHBPMXh1SUNBZ0lIMHNYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJqYjIxd2RYUmxJSFJvWlNCMllXeDFaU0JtYjNJZ2RHaGxJSFJ2ZFdOb1FXTjBhVzl1SUhCeWIzQmxjblI1SUdKaGMyVmtJRzl1SUhSb1pTQnlaV052WjI1cGVtVnlKM01nYzJWMGRHbHVaM05jYmlBZ0lDQWdLaUJBY21WMGRYSnVjeUI3VTNSeWFXNW5mU0IyWVd4MVpWeHVJQ0FnSUNBcUwxeHVJQ0FnSUdOdmJYQjFkR1U2SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWVdOMGFXOXVjeUE5SUZ0ZE8xeHVJQ0FnSUNBZ0lDQmxZV05vS0hSb2FYTXViV0Z1WVdkbGNpNXlaV052WjI1cGVtVnljeXdnWm5WdVkzUnBiMjRvY21WamIyZHVhWHBsY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHSnZiMnhQY2tadUtISmxZMjluYm1sNlpYSXViM0IwYVc5dWN5NWxibUZpYkdVc0lGdHlaV052WjI1cGVtVnlYU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFkzUnBiMjV6SUQwZ1lXTjBhVzl1Y3k1amIyNWpZWFFvY21WamIyZHVhWHBsY2k1blpYUlViM1ZqYUVGamRHbHZiaWdwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCamJHVmhibFJ2ZFdOb1FXTjBhVzl1Y3loaFkzUnBiMjV6TG1wdmFXNG9KeUFuS1NrN1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlIUm9hWE1nYldWMGFHOWtJR2x6SUdOaGJHeGxaQ0J2YmlCbFlXTm9JR2x1Y0hWMElHTjVZMnhsSUdGdVpDQndjbTkyYVdSbGN5QjBhR1VnY0hKbGRtVnVkR2x1WnlCdlppQjBhR1VnWW5KdmQzTmxjaUJpWldoaGRtbHZjbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnBibkIxZEZ4dUlDQWdJQ0FxTDF4dUlDQWdJSEJ5WlhabGJuUkVaV1poZFd4MGN6b2dablZ1WTNScGIyNG9hVzV3ZFhRcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUhOeVkwVjJaVzUwSUQwZ2FXNXdkWFF1YzNKalJYWmxiblE3WEc0Z0lDQWdJQ0FnSUhaaGNpQmthWEpsWTNScGIyNGdQU0JwYm5CMWRDNXZabVp6WlhSRWFYSmxZM1JwYjI0N1hHNWNiaUFnSUNBZ0lDQWdMeThnYVdZZ2RHaGxJSFJ2ZFdOb0lHRmpkR2x2YmlCa2FXUWdjSEpsZG1WdWRHVmtJRzl1WTJVZ2RHaHBjeUJ6WlhOemFXOXVYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbTFoYm1GblpYSXVjMlZ6YzJsdmJpNXdjbVYyWlc1MFpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITnlZMFYyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMllYSWdZV04wYVc5dWN5QTlJSFJvYVhNdVlXTjBhVzl1Y3p0Y2JpQWdJQ0FnSUNBZ2RtRnlJR2hoYzA1dmJtVWdQU0JwYmxOMGNpaGhZM1JwYjI1ekxDQlVUMVZEU0Y5QlExUkpUMDVmVGs5T1JTa2dKaVlnSVZSUFZVTklYMEZEVkVsUFRsOU5RVkJiVkU5VlEwaGZRVU5VU1U5T1gwNVBUa1ZkTzF4dUlDQWdJQ0FnSUNCMllYSWdhR0Z6VUdGdVdTQTlJR2x1VTNSeUtHRmpkR2x2Ym5Nc0lGUlBWVU5JWDBGRFZFbFBUbDlRUVU1ZldTa2dKaVlnSVZSUFZVTklYMEZEVkVsUFRsOU5RVkJiVkU5VlEwaGZRVU5VU1U5T1gxQkJUbDlaWFR0Y2JpQWdJQ0FnSUNBZ2RtRnlJR2hoYzFCaGJsZ2dQU0JwYmxOMGNpaGhZM1JwYjI1ekxDQlVUMVZEU0Y5QlExUkpUMDVmVUVGT1gxZ3BJQ1ltSUNGVVQxVkRTRjlCUTFSSlQwNWZUVUZRVzFSUFZVTklYMEZEVkVsUFRsOVFRVTVmV0YwN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0doaGMwNXZibVVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2Wkc4Z2JtOTBJSEJ5WlhabGJuUWdaR1ZtWVhWc2RITWdhV1lnZEdocGN5QnBjeUJoSUhSaGNDQm5aWE4wZFhKbFhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBjMVJoY0ZCdmFXNTBaWElnUFNCcGJuQjFkQzV3YjJsdWRHVnljeTVzWlc1bmRHZ2dQVDA5SURFN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FYTlVZWEJOYjNabGJXVnVkQ0E5SUdsdWNIVjBMbVJwYzNSaGJtTmxJRHdnTWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGMxUmhjRlJ2ZFdOb1ZHbHRaU0E5SUdsdWNIVjBMbVJsYkhSaFZHbHRaU0E4SURJMU1EdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x6VkdGd1VHOXBiblJsY2lBbUppQnBjMVJoY0UxdmRtVnRaVzUwSUNZbUlHbHpWR0Z3Vkc5MVkyaFVhVzFsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR2hoYzFCaGJsZ2dKaVlnYUdGelVHRnVXU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnWUhCaGJpMTRJSEJoYmkxNVlDQnRaV0Z1Y3lCaWNtOTNjMlZ5SUdoaGJtUnNaWE1nWVd4c0lITmpjbTlzYkdsdVp5OXdZVzV1YVc1bkxDQmtieUJ1YjNRZ2NISmxkbVZ1ZEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHaGhjMDV2Ym1VZ2ZIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNob1lYTlFZVzVaSUNZbUlHUnBjbVZqZEdsdmJpQW1JRVJKVWtWRFZFbFBUbDlJVDFKSldrOU9WRUZNS1NCOGZGeHVJQ0FnSUNBZ0lDQWdJQ0FnS0doaGMxQmhibGdnSmlZZ1pHbHlaV04wYVc5dUlDWWdSRWxTUlVOVVNVOU9YMVpGVWxSSlEwRk1LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0hKbGRtVnVkRk55WXloemNtTkZkbVZ1ZENrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUxGeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dZMkZzYkNCd2NtVjJaVzUwUkdWbVlYVnNkQ0IwYnlCd2NtVjJaVzUwSUhSb1pTQmljbTkzYzJWeUozTWdaR1ZtWVhWc2RDQmlaV2hoZG1sdmNpQW9jMk55YjJ4c2FXNW5JR2x1SUcxdmMzUWdZMkZ6WlhNcFhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhOeVkwVjJaVzUwWEc0Z0lDQWdJQ292WEc0Z0lDQWdjSEpsZG1WdWRGTnlZem9nWm5WdVkzUnBiMjRvYzNKalJYWmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV0WVc1aFoyVnlMbk5sYzNOcGIyNHVjSEpsZG1WdWRHVmtJRDBnZEhKMVpUdGNiaUFnSUNBZ0lDQWdjM0pqUlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUdGNiaUFnSUNCOVhHNTlPMXh1WEc0dktpcGNiaUFxSUhkb1pXNGdkR2hsSUhSdmRXTm9RV04wYVc5dWN5QmhjbVVnWTI5c2JHVmpkR1ZrSUhSb1pYa2dZWEpsSUc1dmRDQmhJSFpoYkdsa0lIWmhiSFZsTENCemJ5QjNaU0J1WldWa0lIUnZJR05zWldGdUlIUm9hVzVuY3lCMWNDNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUdGamRHbHZibk5jYmlBcUlFQnlaWFIxY201eklIc3FmVnh1SUNvdlhHNW1kVzVqZEdsdmJpQmpiR1ZoYmxSdmRXTm9RV04wYVc5dWN5aGhZM1JwYjI1ektTQjdYRzRnSUNBZ0x5OGdibTl1WlZ4dUlDQWdJR2xtSUNocGJsTjBjaWhoWTNScGIyNXpMQ0JVVDFWRFNGOUJRMVJKVDA1ZlRrOU9SU2twSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZSUFZVTklYMEZEVkVsUFRsOU9UMDVGTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCb1lYTlFZVzVZSUQwZ2FXNVRkSElvWVdOMGFXOXVjeXdnVkU5VlEwaGZRVU5VU1U5T1gxQkJUbDlZS1R0Y2JpQWdJQ0IyWVhJZ2FHRnpVR0Z1V1NBOUlHbHVVM1J5S0dGamRHbHZibk1zSUZSUFZVTklYMEZEVkVsUFRsOVFRVTVmV1NrN1hHNWNiaUFnSUNBdkx5QnBaaUJpYjNSb0lIQmhiaTE0SUdGdVpDQndZVzR0ZVNCaGNtVWdjMlYwSUNoa2FXWm1aWEpsYm5RZ2NtVmpiMmR1YVhwbGNuTmNiaUFnSUNBdkx5Qm1iM0lnWkdsbVptVnlaVzUwSUdScGNtVmpkR2x2Ym5Nc0lHVXVaeTRnYUc5eWFYcHZiblJoYkNCd1lXNGdZblYwSUhabGNuUnBZMkZzSUhOM2FYQmxQeWxjYmlBZ0lDQXZMeUIzWlNCdVpXVmtJRzV2Ym1VZ0tHRnpJRzkwYUdWeWQybHpaU0IzYVhSb0lIQmhiaTE0SUhCaGJpMTVJR052YldKcGJtVmtJRzV2Ym1VZ2IyWWdkR2hsYzJWY2JpQWdJQ0F2THlCeVpXTnZaMjVwZW1WeWN5QjNhV3hzSUhkdmNtc3NJSE5wYm1ObElIUm9aU0JpY205M2MyVnlJSGR2ZFd4a0lHaGhibVJzWlNCaGJHd2djR0Z1Ym1sdVoxeHVJQ0FnSUdsbUlDaG9ZWE5RWVc1WUlDWW1JR2hoYzFCaGJsa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRlJQVlVOSVgwRkRWRWxQVGw5T1QwNUZPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJSEJoYmkxNElFOVNJSEJoYmkxNVhHNGdJQ0FnYVdZZ0tHaGhjMUJoYmxnZ2ZId2dhR0Z6VUdGdVdTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdhR0Z6VUdGdVdDQS9JRlJQVlVOSVgwRkRWRWxQVGw5UVFVNWZXQ0E2SUZSUFZVTklYMEZEVkVsUFRsOVFRVTVmV1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCdFlXNXBjSFZzWVhScGIyNWNiaUFnSUNCcFppQW9hVzVUZEhJb1lXTjBhVzl1Y3l3Z1ZFOVZRMGhmUVVOVVNVOU9YMDFCVGtsUVZVeEJWRWxQVGlrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGUlBWVU5JWDBGRFZFbFBUbDlOUVU1SlVGVk1RVlJKVDA0N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRlJQVlVOSVgwRkRWRWxQVGw5QlZWUlBPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQm5aWFJVYjNWamFFRmpkR2x2YmxCeWIzQnpLQ2tnZTF4dUlDQWdJR2xtSUNnaFRrRlVTVlpGWDFSUFZVTklYMEZEVkVsUFRpa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN1hHNGdJQ0FnZlZ4dUlDQWdJSFpoY2lCMGIzVmphRTFoY0NBOUlIdDlPMXh1SUNBZ0lIWmhjaUJqYzNOVGRYQndiM0owY3lBOUlIZHBibVJ2ZHk1RFUxTWdKaVlnZDJsdVpHOTNMa05UVXk1emRYQndiM0owY3p0Y2JpQWdJQ0JiSjJGMWRHOG5MQ0FuYldGdWFYQjFiR0YwYVc5dUp5d2dKM0JoYmkxNUp5d2dKM0JoYmkxNEp5d2dKM0JoYmkxNElIQmhiaTE1Snl3Z0oyNXZibVVuWFM1bWIzSkZZV05vS0daMWJtTjBhVzl1S0haaGJDa2dlMXh1WEc0Z0lDQWdJQ0FnSUM4dklFbG1JR056Y3k1emRYQndiM0owY3lCcGN5QnViM1FnYzNWd2NHOXlkR1ZrSUdKMWRDQjBhR1Z5WlNCcGN5QnVZWFJwZG1VZ2RHOTFZMmd0WVdOMGFXOXVJR0Z6YzNWdFpTQnBkQ0J6ZFhCd2IzSjBjMXh1SUNBZ0lDQWdJQ0F2THlCaGJHd2dkbUZzZFdWekxpQlVhR2x6SUdseklIUm9aU0JqWVhObElHWnZjaUJKUlNBeE1DQmhibVFnTVRFdVhHNGdJQ0FnSUNBZ0lIUnZkV05vVFdGd1czWmhiRjBnUFNCamMzTlRkWEJ3YjNKMGN5QS9JSGRwYm1SdmR5NURVMU11YzNWd2NHOXlkSE1vSjNSdmRXTm9MV0ZqZEdsdmJpY3NJSFpoYkNrZ09pQjBjblZsTzF4dUlDQWdJSDBwTzF4dUlDQWdJSEpsZEhWeWJpQjBiM1ZqYUUxaGNEdGNibjFjYmx4dUx5b3FYRzRnS2lCU1pXTnZaMjVwZW1WeUlHWnNiM2NnWlhod2JHRnBibVZrT3lBcVhHNGdLaUJCYkd3Z2NtVmpiMmR1YVhwbGNuTWdhR0YyWlNCMGFHVWdhVzVwZEdsaGJDQnpkR0YwWlNCdlppQlFUMU5UU1VKTVJTQjNhR1Z1SUdFZ2FXNXdkWFFnYzJWemMybHZiaUJ6ZEdGeWRITXVYRzRnS2lCVWFHVWdaR1ZtYVc1cGRHbHZiaUJ2WmlCaElHbHVjSFYwSUhObGMzTnBiMjRnYVhNZ1puSnZiU0IwYUdVZ1ptbHljM1FnYVc1d2RYUWdkVzUwYVd3Z2RHaGxJR3hoYzNRZ2FXNXdkWFFzSUhkcGRHZ2dZV3hzSUdsMEozTWdiVzkyWlcxbGJuUWdhVzRnYVhRdUlDcGNiaUFxSUVWNFlXMXdiR1VnYzJWemMybHZiaUJtYjNJZ2JXOTFjMlV0YVc1d2RYUTZJRzF2ZFhObFpHOTNiaUF0UGlCdGIzVnpaVzF2ZG1VZ0xUNGdiVzkxYzJWMWNGeHVJQ3BjYmlBcUlFOXVJR1ZoWTJnZ2NtVmpiMmR1YVhwcGJtY2dZM2xqYkdVZ0tITmxaU0JOWVc1aFoyVnlMbkpsWTI5bmJtbDZaU2tnZEdobElDNXlaV052WjI1cGVtVW9LU0J0WlhSb2IyUWdhWE1nWlhobFkzVjBaV1JjYmlBcUlIZG9hV05vSUdSbGRHVnliV2x1WlhNZ2QybDBhQ0J6ZEdGMFpTQnBkQ0J6YUc5MWJHUWdZbVV1WEc0Z0tseHVJQ29nU1dZZ2RHaGxJSEpsWTI5bmJtbDZaWElnYUdGeklIUm9aU0J6ZEdGMFpTQkdRVWxNUlVRc0lFTkJUa05GVEV4RlJDQnZjaUJTUlVOUFIwNUpXa1ZFSUNobGNYVmhiSE1nUlU1RVJVUXBMQ0JwZENCcGN5QnlaWE5sZENCMGIxeHVJQ29nVUU5VFUwbENURVVnZEc4Z1oybDJaU0JwZENCaGJtOTBhR1Z5SUdOb1lXNW5aU0J2YmlCMGFHVWdibVY0ZENCamVXTnNaUzVjYmlBcVhHNGdLaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lGQnZjM05wWW14bFhHNGdLaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHhjYmlBcUlDQWdJQ0FnSUNBZ0lDQWdLeTB0TFMwdEt5MHRMUzB0TFMwdExTMHRMUzB0TFN0Y2JpQXFJQ0FnSUNBZ0lDQWdJQ0FnZkNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIeGNiaUFxSUNBZ0lDQWdLeTB0TFMwdEt5MHRMUzB0S3lBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHhjYmlBcUlDQWdJQ0FnZkNBZ0lDQWdJQ0FnSUNBZ2ZDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh4Y2JpQXFJQ0FnUm1GcGJHVmtJQ0FnSUNBZ1EyRnVZMlZzYkdWa0lDQWdJQ0FnSUNBZ0lIeGNiaUFxSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FyTFMwdExTMHRMU3N0TFMwdExTMHJYRzRnS2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZkNBZ0lDQWdJQ0FnSUNBZ0lDQWdmRnh1SUNvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVbVZqYjJkdWFYcGxaQ0FnSUNBZ0lDQkNaV2RoYmx4dUlDb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUh4Y2JpQXFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JEYUdGdVoyVmtYRzRnS2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmRnh1SUNvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUlc1a1pXUXZVbVZqYjJkdWFYcGxaRnh1SUNvdlhHNTJZWElnVTFSQlZFVmZVRTlUVTBsQ1RFVWdQU0F4TzF4dWRtRnlJRk5VUVZSRlgwSkZSMEZPSUQwZ01qdGNiblpoY2lCVFZFRlVSVjlEU0VGT1IwVkVJRDBnTkR0Y2JuWmhjaUJUVkVGVVJWOUZUa1JGUkNBOUlEZzdYRzUyWVhJZ1UxUkJWRVZmVWtWRFQwZE9TVnBGUkNBOUlGTlVRVlJGWDBWT1JFVkVPMXh1ZG1GeUlGTlVRVlJGWDBOQlRrTkZURXhGUkNBOUlERTJPMXh1ZG1GeUlGTlVRVlJGWDBaQlNVeEZSQ0E5SURNeU8xeHVYRzR2S2lwY2JpQXFJRkpsWTI5bmJtbDZaWEpjYmlBcUlFVjJaWEo1SUhKbFkyOW5ibWw2WlhJZ2JtVmxaSE1nZEc4Z1pYaDBaVzVrSUdaeWIyMGdkR2hwY3lCamJHRnpjeTVjYmlBcUlFQmpiMjV6ZEhKMVkzUnZjbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUc5d2RHbHZibk5jYmlBcUwxeHVablZ1WTNScGIyNGdVbVZqYjJkdWFYcGxjaWh2Y0hScGIyNXpLU0I3WEc0Z0lDQWdkR2hwY3k1dmNIUnBiMjV6SUQwZ1lYTnphV2R1S0h0OUxDQjBhR2x6TG1SbFptRjFiSFJ6TENCdmNIUnBiMjV6SUh4OElIdDlLVHRjYmx4dUlDQWdJSFJvYVhNdWFXUWdQU0IxYm1seGRXVkpaQ2dwTzF4dVhHNGdJQ0FnZEdocGN5NXRZVzVoWjJWeUlEMGdiblZzYkR0Y2JseHVJQ0FnSUM4dklHUmxabUYxYkhRZ2FYTWdaVzVoWW14bElIUnlkV1ZjYmlBZ0lDQjBhR2x6TG05d2RHbHZibk11Wlc1aFlteGxJRDBnYVdaVmJtUmxabWx1WldRb2RHaHBjeTV2Y0hScGIyNXpMbVZ1WVdKc1pTd2dkSEoxWlNrN1hHNWNiaUFnSUNCMGFHbHpMbk4wWVhSbElEMGdVMVJCVkVWZlVFOVRVMGxDVEVVN1hHNWNiaUFnSUNCMGFHbHpMbk5wYlhWc2RHRnVaVzkxY3lBOUlIdDlPMXh1SUNBZ0lIUm9hWE11Y21WeGRXbHlaVVpoYVd3Z1BTQmJYVHRjYm4xY2JseHVVbVZqYjJkdWFYcGxjaTV3Y205MGIzUjVjR1VnUFNCN1hHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FIWnBjblIxWVd4Y2JpQWdJQ0FnS2lCQWRIbHdaU0I3VDJKcVpXTjBmVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHUmxabUYxYkhSek9pQjdmU3hjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUhObGRDQnZjSFJwYjI1elhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUc5d2RHbHZibk5jYmlBZ0lDQWdLaUJBY21WMGRYSnVJSHRTWldOdloyNXBlbVZ5ZlZ4dUlDQWdJQ0FxTDF4dUlDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2IzQjBhVzl1Y3lrZ2UxeHVJQ0FnSUNBZ0lDQmhjM05wWjI0b2RHaHBjeTV2Y0hScGIyNXpMQ0J2Y0hScGIyNXpLVHRjYmx4dUlDQWdJQ0FnSUNBdkx5QmhiSE52SUhWd1pHRjBaU0IwYUdVZ2RHOTFZMmhCWTNScGIyNHNJR2x1SUdOaGMyVWdjMjl0WlhSb2FXNW5JR05vWVc1blpXUWdZV0p2ZFhRZ2RHaGxJR1JwY21WamRHbHZibk12Wlc1aFlteGxaQ0J6ZEdGMFpWeHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGJtRm5aWElnSmlZZ2RHaHBjeTV0WVc1aFoyVnlMblJ2ZFdOb1FXTjBhVzl1TG5Wd1pHRjBaU2dwTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6dGNiaUFnSUNCOUxGeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djbVZqYjJkdWFYcGxJSE5wYlhWc2RHRnVaVzkxY3lCM2FYUm9JR0Z1SUc5MGFHVnlJSEpsWTI5bmJtbDZaWEl1WEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHRTWldOdloyNXBlbVZ5ZlNCdmRHaGxjbEpsWTI5bmJtbDZaWEpjYmlBZ0lDQWdLaUJBY21WMGRYSnVjeUI3VW1WamIyZHVhWHBsY24wZ2RHaHBjMXh1SUNBZ0lDQXFMMXh1SUNBZ0lISmxZMjluYm1sNlpWZHBkR2c2SUdaMWJtTjBhVzl1S0c5MGFHVnlVbVZqYjJkdWFYcGxjaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9hVzUyYjJ0bFFYSnlZWGxCY21jb2IzUm9aWEpTWldOdloyNXBlbVZ5TENBbmNtVmpiMmR1YVhwbFYybDBhQ2NzSUhSb2FYTXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJ6YVcxMWJIUmhibVZ2ZFhNZ1BTQjBhR2x6TG5OcGJYVnNkR0Z1Wlc5MWN6dGNiaUFnSUNBZ0lDQWdiM1JvWlhKU1pXTnZaMjVwZW1WeUlEMGdaMlYwVW1WamIyZHVhWHBsY2tKNVRtRnRaVWxtVFdGdVlXZGxjaWh2ZEdobGNsSmxZMjluYm1sNlpYSXNJSFJvYVhNcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvSVhOcGJYVnNkR0Z1Wlc5MWMxdHZkR2hsY2xKbFkyOW5ibWw2WlhJdWFXUmRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphVzExYkhSaGJtVnZkWE5iYjNSb1pYSlNaV052WjI1cGVtVnlMbWxrWFNBOUlHOTBhR1Z5VW1WamIyZHVhWHBsY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkwYUdWeVVtVmpiMmR1YVhwbGNpNXlaV052WjI1cGVtVlhhWFJvS0hSb2FYTXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQmtjbTl3SUhSb1pTQnphVzExYkhSaGJtVnZkWE1nYkdsdWF5NGdhWFFnWkc5bGMyNTBJSEpsYlc5MlpTQjBhR1VnYkdsdWF5QnZiaUIwYUdVZ2IzUm9aWElnY21WamIyZHVhWHBsY2k1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTFKbFkyOW5ibWw2WlhKOUlHOTBhR1Z5VW1WamIyZHVhWHBsY2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTV6SUh0U1pXTnZaMjVwZW1WeWZTQjBhR2x6WEc0Z0lDQWdJQ292WEc0Z0lDQWdaSEp2Y0ZKbFkyOW5ibWw2WlZkcGRHZzZJR1oxYm1OMGFXOXVLRzkwYUdWeVVtVmpiMmR1YVhwbGNpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2FXNTJiMnRsUVhKeVlYbEJjbWNvYjNSb1pYSlNaV052WjI1cGVtVnlMQ0FuWkhKdmNGSmxZMjluYm1sNlpWZHBkR2duTENCMGFHbHpLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnZkR2hsY2xKbFkyOW5ibWw2WlhJZ1BTQm5aWFJTWldOdloyNXBlbVZ5UW5sT1lXMWxTV1pOWVc1aFoyVnlLRzkwYUdWeVVtVmpiMmR1YVhwbGNpd2dkR2hwY3lrN1hHNGdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGFHbHpMbk5wYlhWc2RHRnVaVzkxYzF0dmRHaGxjbEpsWTI5bmJtbDZaWEl1YVdSZE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nY21WamIyZHVhWHBsY2lCallXNGdiMjVzZVNCeWRXNGdkMmhsYmlCaGJpQnZkR2hsY2lCcGN5Qm1ZV2xzYVc1blhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0U1pXTnZaMjVwZW1WeWZTQnZkR2hsY2xKbFkyOW5ibWw2WlhKY2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCN1VtVmpiMmR1YVhwbGNuMGdkR2hwYzF4dUlDQWdJQ0FxTDF4dUlDQWdJSEpsY1hWcGNtVkdZV2xzZFhKbE9pQm1kVzVqZEdsdmJpaHZkR2hsY2xKbFkyOW5ibWw2WlhJcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0dsdWRtOXJaVUZ5Y21GNVFYSm5LRzkwYUdWeVVtVmpiMmR1YVhwbGNpd2dKM0psY1hWcGNtVkdZV2xzZFhKbEp5d2dkR2hwY3lrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZG1GeUlISmxjWFZwY21WR1lXbHNJRDBnZEdocGN5NXlaWEYxYVhKbFJtRnBiRHRjYmlBZ0lDQWdJQ0FnYjNSb1pYSlNaV052WjI1cGVtVnlJRDBnWjJWMFVtVmpiMmR1YVhwbGNrSjVUbUZ0WlVsbVRXRnVZV2RsY2lodmRHaGxjbEpsWTI5bmJtbDZaWElzSUhSb2FYTXBPMXh1SUNBZ0lDQWdJQ0JwWmlBb2FXNUJjbkpoZVNoeVpYRjFhWEpsUm1GcGJDd2diM1JvWlhKU1pXTnZaMjVwZW1WeUtTQTlQVDBnTFRFcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGNYVnBjbVZHWVdsc0xuQjFjMmdvYjNSb1pYSlNaV052WjI1cGVtVnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTBhR1Z5VW1WamIyZHVhWHBsY2k1eVpYRjFhWEpsUm1GcGJIVnlaU2gwYUdsektUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1pISnZjQ0IwYUdVZ2NtVnhkV2x5WlVaaGFXeDFjbVVnYkdsdWF5NGdhWFFnWkc5bGN5QnViM1FnY21WdGIzWmxJSFJvWlNCc2FXNXJJRzl1SUhSb1pTQnZkR2hsY2lCeVpXTnZaMjVwZW1WeUxseHVJQ0FnSUNBcUlFQndZWEpoYlNCN1VtVmpiMmR1YVhwbGNuMGdiM1JvWlhKU1pXTnZaMjVwZW1WeVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UxSmxZMjluYm1sNlpYSjlJSFJvYVhOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JrY205d1VtVnhkV2x5WlVaaGFXeDFjbVU2SUdaMWJtTjBhVzl1S0c5MGFHVnlVbVZqYjJkdWFYcGxjaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9hVzUyYjJ0bFFYSnlZWGxCY21jb2IzUm9aWEpTWldOdloyNXBlbVZ5TENBblpISnZjRkpsY1hWcGNtVkdZV2xzZFhKbEp5d2dkR2hwY3lrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYjNSb1pYSlNaV052WjI1cGVtVnlJRDBnWjJWMFVtVmpiMmR1YVhwbGNrSjVUbUZ0WlVsbVRXRnVZV2RsY2lodmRHaGxjbEpsWTI5bmJtbDZaWElzSUhSb2FYTXBPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2FXNWtaWGdnUFNCcGJrRnljbUY1S0hSb2FYTXVjbVZ4ZFdseVpVWmhhV3dzSUc5MGFHVnlVbVZqYjJkdWFYcGxjaWs3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBibVJsZUNBK0lDMHhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGNYVnBjbVZHWVdsc0xuTndiR2xqWlNocGJtUmxlQ3dnTVNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEc0Z0lDQWdmU3hjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdoaGN5QnlaWEYxYVhKbElHWmhhV3gxY21WeklHSnZiMnhsWVc1Y2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCN1ltOXZiR1ZoYm4xY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JvWVhOU1pYRjFhWEpsUm1GcGJIVnlaWE02SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WlhGMWFYSmxSbUZwYkM1c1pXNW5kR2dnUGlBd08xeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQnBaaUIwYUdVZ2NtVmpiMmR1YVhwbGNpQmpZVzRnY21WamIyZHVhWHBsSUhOcGJYVnNkR0Z1Wlc5MWN5QjNhWFJvSUdGdUlHOTBhR1Z5SUhKbFkyOW5ibWw2WlhKY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTFKbFkyOW5ibWw2WlhKOUlHOTBhR1Z5VW1WamIyZHVhWHBsY2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTV6SUh0Q2IyOXNaV0Z1ZlZ4dUlDQWdJQ0FxTDF4dUlDQWdJR05oYmxKbFkyOW5ibWw2WlZkcGRHZzZJR1oxYm1OMGFXOXVLRzkwYUdWeVVtVmpiMmR1YVhwbGNpa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU0YwYUdsekxuTnBiWFZzZEdGdVpXOTFjMXR2ZEdobGNsSmxZMjluYm1sNlpYSXVhV1JkTzF4dUlDQWdJSDBzWEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCWmIzVWdjMmh2ZFd4a0lIVnpaU0JnZEhKNVJXMXBkR0FnYVc1emRHVmhaQ0J2WmlCZ1pXMXBkR0FnWkdseVpXTjBiSGtnZEc4Z1kyaGxZMnRjYmlBZ0lDQWdLaUIwYUdGMElHRnNiQ0IwYUdVZ2JtVmxaR1ZrSUhKbFkyOW5ibWw2WlhKeklHaGhjeUJtWVdsc1pXUWdZbVZtYjNKbElHVnRhWFIwYVc1bkxseHVJQ0FnSUNBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCcGJuQjFkRnh1SUNBZ0lDQXFMMXh1SUNBZ0lHVnRhWFE2SUdaMWJtTjBhVzl1S0dsdWNIVjBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnpaV3htSUQwZ2RHaHBjenRjYmlBZ0lDQWdJQ0FnZG1GeUlITjBZWFJsSUQwZ2RHaHBjeTV6ZEdGMFpUdGNibHh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJsYldsMEtHVjJaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtMWhibUZuWlhJdVpXMXBkQ2hsZG1WdWRDd2dhVzV3ZFhRcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnTHk4Z0ozQmhibk4wWVhKMEp5QmhibVFnSjNCaGJtMXZkbVVuWEc0Z0lDQWdJQ0FnSUdsbUlDaHpkR0YwWlNBOElGTlVRVlJGWDBWT1JFVkVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiV2wwS0hObGJHWXViM0IwYVc5dWN5NWxkbVZ1ZENBcklITjBZWFJsVTNSeUtITjBZWFJsS1NrN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JsYldsMEtITmxiR1l1YjNCMGFXOXVjeTVsZG1WdWRDazdJQzh2SUhOcGJYQnNaU0FuWlhabGJuUk9ZVzFsSnlCbGRtVnVkSE5jYmx4dUlDQWdJQ0FnSUNCcFppQW9hVzV3ZFhRdVlXUmthWFJwYjI1aGJFVjJaVzUwS1NCN0lDOHZJR0ZrWkdsMGFXOXVZV3dnWlhabGJuUW9jR0Z1YkdWbWRDd2djR0Z1Y21sbmFIUXNJSEJwYm1Ob2FXNHNJSEJwYm1Ob2IzVjBMaTR1S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdaVzFwZENocGJuQjFkQzVoWkdScGRHbHZibUZzUlhabGJuUXBPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdjR0Z1Wlc1a0lHRnVaQ0J3WVc1allXNWpaV3hjYmlBZ0lDQWdJQ0FnYVdZZ0tITjBZWFJsSUQ0OUlGTlVRVlJGWDBWT1JFVkVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiV2wwS0hObGJHWXViM0IwYVc5dWN5NWxkbVZ1ZENBcklITjBZWFJsVTNSeUtITjBZWFJsS1NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUxGeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRMmhsWTJzZ2RHaGhkQ0JoYkd3Z2RHaGxJSEpsY1hWcGNtVWdabUZwYkhWeVpTQnlaV052WjI1cGVtVnljeUJvWVhNZ1ptRnBiR1ZrTEZ4dUlDQWdJQ0FxSUdsbUlIUnlkV1VzSUdsMElHVnRhWFJ6SUdFZ1oyVnpkSFZ5WlNCbGRtVnVkQ3hjYmlBZ0lDQWdLaUJ2ZEdobGNuZHBjMlVzSUhObGRIVndJSFJvWlNCemRHRjBaU0IwYnlCR1FVbE1SVVF1WEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR2x1Y0hWMFhHNGdJQ0FnSUNvdlhHNGdJQ0FnZEhKNVJXMXBkRG9nWm5WdVkzUnBiMjRvYVc1d2RYUXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTJGdVJXMXBkQ2dwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bGJXbDBLR2x1Y0hWMEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F2THlCcGRDZHpJR1poYVd4cGJtY2dZVzU1ZDJGNVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzNSaGRHVWdQU0JUVkVGVVJWOUdRVWxNUlVRN1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHTmhiaUIzWlNCbGJXbDBQMXh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJSHRpYjI5c1pXRnVmVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHTmhia1Z0YVhRNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2FTQTlJREE3WEc0Z0lDQWdJQ0FnSUhkb2FXeGxJQ2hwSUR3Z2RHaHBjeTV5WlhGMWFYSmxSbUZwYkM1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaEtIUm9hWE11Y21WeGRXbHlaVVpoYVd4YmFWMHVjM1JoZEdVZ0ppQW9VMVJCVkVWZlJrRkpURVZFSUh3Z1UxUkJWRVZmVUU5VFUwbENURVVwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUdrckt6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2RYQmtZWFJsSUhSb1pTQnlaV052WjI1cGVtVnlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlHbHVjSFYwUkdGMFlWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhKbFkyOW5ibWw2WlRvZ1puVnVZM1JwYjI0b2FXNXdkWFJFWVhSaEtTQjdYRzRnSUNBZ0lDQWdJQzh2SUcxaGEyVWdZU0J1WlhjZ1kyOXdlU0J2WmlCMGFHVWdhVzV3ZFhSRVlYUmhYRzRnSUNBZ0lDQWdJQzh2SUhOdklIZGxJR05oYmlCamFHRnVaMlVnZEdobElHbHVjSFYwUkdGMFlTQjNhWFJvYjNWMElHMWxjM05wYm1jZ2RYQWdkR2hsSUc5MGFHVnlJSEpsWTI5bmJtbDZaWEp6WEc0Z0lDQWdJQ0FnSUhaaGNpQnBibkIxZEVSaGRHRkRiRzl1WlNBOUlHRnpjMmxuYmloN2ZTd2dhVzV3ZFhSRVlYUmhLVHRjYmx4dUlDQWdJQ0FnSUNBdkx5QnBjeUJwY3lCbGJtRmliR1ZrSUdGdVpDQmhiR3h2ZHlCeVpXTnZaMjVwZW1sdVp6OWNiaUFnSUNBZ0lDQWdhV1lnS0NGaWIyOXNUM0pHYmloMGFHbHpMbTl3ZEdsdmJuTXVaVzVoWW14bExDQmJkR2hwY3l3Z2FXNXdkWFJFWVhSaFEyeHZibVZkS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWE5sZENncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpkR0YwWlNBOUlGTlVRVlJGWDBaQlNVeEZSRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQzh2SUhKbGMyVjBJSGRvWlc0Z2QyVW5kbVVnY21WaFkyaGxaQ0IwYUdVZ1pXNWtYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbk4wWVhSbElDWWdLRk5VUVZSRlgxSkZRMDlIVGtsYVJVUWdmQ0JUVkVGVVJWOURRVTVEUlV4TVJVUWdmQ0JUVkVGVVJWOUdRVWxNUlVRcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVhSbElEMGdVMVJCVkVWZlVFOVRVMGxDVEVVN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0IwYUdsekxuTjBZWFJsSUQwZ2RHaHBjeTV3Y205alpYTnpLR2x1Y0hWMFJHRjBZVU5zYjI1bEtUdGNibHh1SUNBZ0lDQWdJQ0F2THlCMGFHVWdjbVZqYjJkdWFYcGxjaUJvWVhNZ2NtVmpiMmR1YVhwbFpDQmhJR2RsYzNSMWNtVmNiaUFnSUNBZ0lDQWdMeThnYzI4Z2RISnBaMmRsY2lCaGJpQmxkbVZ1ZEZ4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1emRHRjBaU0FtSUNoVFZFRlVSVjlDUlVkQlRpQjhJRk5VUVZSRlgwTklRVTVIUlVRZ2ZDQlRWRUZVUlY5RlRrUkZSQ0I4SUZOVVFWUkZYME5CVGtORlRFeEZSQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRISjVSVzFwZENocGJuQjFkRVJoZEdGRGJHOXVaU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2NtVjBkWEp1SUhSb1pTQnpkR0YwWlNCdlppQjBhR1VnY21WamIyZHVhWHBsY2x4dUlDQWdJQ0FxSUhSb1pTQmhZM1IxWVd3Z2NtVmpiMmR1YVhwcGJtY2dhR0Z3Y0dWdWN5QnBiaUIwYUdseklHMWxkR2h2WkZ4dUlDQWdJQ0FxSUVCMmFYSjBkV0ZzWEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR2x1Y0hWMFJHRjBZVnh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJSHREYjI1emRIMGdVMVJCVkVWY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3Y205alpYTnpPaUJtZFc1amRHbHZiaWhwYm5CMWRFUmhkR0VwSUhzZ2ZTd2dMeThnYW5Ob2FXNTBJR2xuYm05eVpUcHNhVzVsWEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCeVpYUjFjbTRnZEdobElIQnlaV1psY25KbFpDQjBiM1ZqYUMxaFkzUnBiMjVjYmlBZ0lDQWdLaUJBZG1seWRIVmhiRnh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJSHRCY25KaGVYMWNiaUFnSUNBZ0tpOWNiaUFnSUNCblpYUlViM1ZqYUVGamRHbHZiam9nWm5WdVkzUnBiMjRvS1NCN0lIMHNYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJqWVd4c1pXUWdkMmhsYmlCMGFHVWdaMlZ6ZEhWeVpTQnBjMjRuZENCaGJHeHZkMlZrSUhSdklISmxZMjluYm1sNlpWeHVJQ0FnSUNBcUlHeHBhMlVnZDJobGJpQmhibTkwYUdWeUlHbHpJR0psYVc1bklISmxZMjluYm1sNlpXUWdiM0lnYVhRZ2FYTWdaR2x6WVdKc1pXUmNiaUFnSUNBZ0tpQkFkbWx5ZEhWaGJGeHVJQ0FnSUNBcUwxeHVJQ0FnSUhKbGMyVjBPaUJtZFc1amRHbHZiaWdwSUhzZ2ZWeHVmVHRjYmx4dUx5b3FYRzRnS2lCblpYUWdZU0IxYzJGaWJHVWdjM1J5YVc1bkxDQjFjMlZrSUdGeklHVjJaVzUwSUhCdmMzUm1hWGhjYmlBcUlFQndZWEpoYlNCN1EyOXVjM1I5SUhOMFlYUmxYRzRnS2lCQWNtVjBkWEp1Y3lCN1UzUnlhVzVuZlNCemRHRjBaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQnpkR0YwWlZOMGNpaHpkR0YwWlNrZ2UxeHVJQ0FnSUdsbUlDaHpkR0YwWlNBbUlGTlVRVlJGWDBOQlRrTkZURXhGUkNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0oyTmhibU5sYkNjN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNoemRHRjBaU0FtSUZOVVFWUkZYMFZPUkVWRUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW5aVzVrSnp0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0hOMFlYUmxJQ1lnVTFSQlZFVmZRMGhCVGtkRlJDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdKMjF2ZG1Vbk8xeHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzUmhkR1VnSmlCVFZFRlVSVjlDUlVkQlRpa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdKM04wWVhKMEp6dGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJQ2NuTzF4dWZWeHVYRzR2S2lwY2JpQXFJR1JwY21WamRHbHZiaUJqYjI1eklIUnZJSE4wY21sdVoxeHVJQ29nUUhCaGNtRnRJSHREYjI1emRIMGdaR2x5WldOMGFXOXVYRzRnS2lCQWNtVjBkWEp1Y3lCN1UzUnlhVzVuZlZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJrYVhKbFkzUnBiMjVUZEhJb1pHbHlaV04wYVc5dUtTQjdYRzRnSUNBZ2FXWWdLR1JwY21WamRHbHZiaUE5UFNCRVNWSkZRMVJKVDA1ZlJFOVhUaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnSjJSdmQyNG5PMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9aR2x5WldOMGFXOXVJRDA5SUVSSlVrVkRWRWxQVGw5VlVDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdKM1Z3Snp0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0dScGNtVmpkR2x2YmlBOVBTQkVTVkpGUTFSSlQwNWZURVZHVkNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0oyeGxablFuTzF4dUlDQWdJSDBnWld4elpTQnBaaUFvWkdseVpXTjBhVzl1SUQwOUlFUkpVa1ZEVkVsUFRsOVNTVWRJVkNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0ozSnBaMmgwSnp0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlDY25PMXh1ZlZ4dVhHNHZLaXBjYmlBcUlHZGxkQ0JoSUhKbFkyOW5ibWw2WlhJZ1lua2dibUZ0WlNCcFppQnBkQ0JwY3lCaWIzVnVaQ0IwYnlCaElHMWhibUZuWlhKY2JpQXFJRUJ3WVhKaGJTQjdVbVZqYjJkdWFYcGxjbnhUZEhKcGJtZDlJRzkwYUdWeVVtVmpiMmR1YVhwbGNseHVJQ29nUUhCaGNtRnRJSHRTWldOdloyNXBlbVZ5ZlNCeVpXTnZaMjVwZW1WeVhHNGdLaUJBY21WMGRYSnVjeUI3VW1WamIyZHVhWHBsY24xY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWjJWMFVtVmpiMmR1YVhwbGNrSjVUbUZ0WlVsbVRXRnVZV2RsY2lodmRHaGxjbEpsWTI5bmJtbDZaWElzSUhKbFkyOW5ibWw2WlhJcElIdGNiaUFnSUNCMllYSWdiV0Z1WVdkbGNpQTlJSEpsWTI5bmJtbDZaWEl1YldGdVlXZGxjanRjYmlBZ0lDQnBaaUFvYldGdVlXZGxjaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYldGdVlXZGxjaTVuWlhRb2IzUm9aWEpTWldOdloyNXBlbVZ5S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHOTBhR1Z5VW1WamIyZHVhWHBsY2p0Y2JuMWNibHh1THlvcVhHNGdLaUJVYUdseklISmxZMjluYm1sNlpYSWdhWE1nYW5WemRDQjFjMlZrSUdGeklHRWdZbUZ6WlNCbWIzSWdkR2hsSUhOcGJYQnNaU0JoZEhSeWFXSjFkR1VnY21WamIyZHVhWHBsY25NdVhHNGdLaUJBWTI5dWMzUnlkV04wYjNKY2JpQXFJRUJsZUhSbGJtUnpJRkpsWTI5bmJtbDZaWEpjYmlBcUwxeHVablZ1WTNScGIyNGdRWFIwY2xKbFkyOW5ibWw2WlhJb0tTQjdYRzRnSUNBZ1VtVmpiMmR1YVhwbGNpNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dWZWeHVYRzVwYm1obGNtbDBLRUYwZEhKU1pXTnZaMjVwZW1WeUxDQlNaV052WjI1cGVtVnlMQ0I3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUUc1aGJXVnpjR0ZqWlZ4dUlDQWdJQ0FxSUVCdFpXMWlaWEp2WmlCQmRIUnlVbVZqYjJkdWFYcGxjbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHUmxabUYxYkhSek9pQjdYRzRnSUNBZ0lDQWdJQzhxS2x4dUlDQWdJQ0FnSUNBZ0tpQkFkSGx3WlNCN1RuVnRZbVZ5ZlZ4dUlDQWdJQ0FnSUNBZ0tpQkFaR1ZtWVhWc2RDQXhYRzRnSUNBZ0lDQWdJQ0FxTDF4dUlDQWdJQ0FnSUNCd2IybHVkR1Z5Y3pvZ01WeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlZjMlZrSUhSdklHTm9aV05ySUdsbUlHbDBJSFJvWlNCeVpXTnZaMjVwZW1WeUlISmxZMlZwZG1WeklIWmhiR2xrSUdsdWNIVjBMQ0JzYVd0bElHbHVjSFYwTG1ScGMzUmhibU5sSUQ0Z01UQXVYRzRnSUNBZ0lDb2dRRzFsYldKbGNtOW1JRUYwZEhKU1pXTnZaMjVwZW1WeVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUdsdWNIVjBYRzRnSUNBZ0lDb2dRSEpsZEhWeWJuTWdlMEp2YjJ4bFlXNTlJSEpsWTI5bmJtbDZaV1JjYmlBZ0lDQWdLaTljYmlBZ0lDQmhkSFJ5VkdWemREb2dablZ1WTNScGIyNG9hVzV3ZFhRcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUc5d2RHbHZibEJ2YVc1MFpYSnpJRDBnZEdocGN5NXZjSFJwYjI1ekxuQnZhVzUwWlhKek8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2IzQjBhVzl1VUc5cGJuUmxjbk1nUFQwOUlEQWdmSHdnYVc1d2RYUXVjRzlwYm5SbGNuTXViR1Z1WjNSb0lEMDlQU0J2Y0hScGIyNVFiMmx1ZEdWeWN6dGNiaUFnSUNCOUxGeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVSEp2WTJWemN5QjBhR1VnYVc1d2RYUWdZVzVrSUhKbGRIVnliaUIwYUdVZ2MzUmhkR1VnWm05eUlIUm9aU0J5WldOdloyNXBlbVZ5WEc0Z0lDQWdJQ29nUUcxbGJXSmxjbTltSUVGMGRISlNaV052WjI1cGVtVnlYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlHbHVjSFYwWEc0Z0lDQWdJQ29nUUhKbGRIVnlibk1nZXlwOUlGTjBZWFJsWEc0Z0lDQWdJQ292WEc0Z0lDQWdjSEp2WTJWemN6b2dablZ1WTNScGIyNG9hVzV3ZFhRcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUhOMFlYUmxJRDBnZEdocGN5NXpkR0YwWlR0Y2JpQWdJQ0FnSUNBZ2RtRnlJR1YyWlc1MFZIbHdaU0E5SUdsdWNIVjBMbVYyWlc1MFZIbHdaVHRjYmx4dUlDQWdJQ0FnSUNCMllYSWdhWE5TWldOdloyNXBlbVZrSUQwZ2MzUmhkR1VnSmlBb1UxUkJWRVZmUWtWSFFVNGdmQ0JUVkVGVVJWOURTRUZPUjBWRUtUdGNiaUFnSUNBZ0lDQWdkbUZ5SUdselZtRnNhV1FnUFNCMGFHbHpMbUYwZEhKVVpYTjBLR2x1Y0hWMEtUdGNibHh1SUNBZ0lDQWdJQ0F2THlCdmJpQmpZVzVqWld3Z2FXNXdkWFFnWVc1a0lIZGxKM1psSUhKbFkyOW5ibWw2WldRZ1ltVm1iM0psTENCeVpYUjFjbTRnVTFSQlZFVmZRMEZPUTBWTVRFVkVYRzRnSUNBZ0lDQWdJR2xtSUNocGMxSmxZMjluYm1sNlpXUWdKaVlnS0dWMlpXNTBWSGx3WlNBbUlFbE9VRlZVWDBOQlRrTkZUQ0I4ZkNBaGFYTldZV3hwWkNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZEdGMFpTQjhJRk5VUVZSRlgwTkJUa05GVEV4RlJEdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hwYzFKbFkyOW5ibWw2WldRZ2ZId2dhWE5XWVd4cFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MFZIbHdaU0FtSUVsT1VGVlVYMFZPUkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRHRjBaU0I4SUZOVVFWUkZYMFZPUkVWRU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNnaEtITjBZWFJsSUNZZ1UxUkJWRVZmUWtWSFFVNHBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRk5VUVZSRlgwSkZSMEZPTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMFlYUmxJSHdnVTFSQlZFVmZRMGhCVGtkRlJEdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdVMVJCVkVWZlJrRkpURVZFTzF4dUlDQWdJSDFjYm4wcE8xeHVYRzR2S2lwY2JpQXFJRkJoYmx4dUlDb2dVbVZqYjJkdWFYcGxaQ0IzYUdWdUlIUm9aU0J3YjJsdWRHVnlJR2x6SUdSdmQyNGdZVzVrSUcxdmRtVmtJR2x1SUhSb1pTQmhiR3h2ZDJWa0lHUnBjbVZqZEdsdmJpNWNiaUFxSUVCamIyNXpkSEoxWTNSdmNseHVJQ29nUUdWNGRHVnVaSE1nUVhSMGNsSmxZMjluYm1sNlpYSmNiaUFxTDF4dVpuVnVZM1JwYjI0Z1VHRnVVbVZqYjJkdWFYcGxjaWdwSUh0Y2JpQWdJQ0JCZEhSeVVtVmpiMmR1YVhwbGNpNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dVhHNGdJQ0FnZEdocGN5NXdXQ0E5SUc1MWJHdzdYRzRnSUNBZ2RHaHBjeTV3V1NBOUlHNTFiR3c3WEc1OVhHNWNibWx1YUdWeWFYUW9VR0Z1VW1WamIyZHVhWHBsY2l3Z1FYUjBjbEpsWTI5bmJtbDZaWElzSUh0Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQWJtRnRaWE53WVdObFhHNGdJQ0FnSUNvZ1FHMWxiV0psY205bUlGQmhibEpsWTI5bmJtbDZaWEpjYmlBZ0lDQWdLaTljYmlBZ0lDQmtaV1poZFd4MGN6b2dlMXh1SUNBZ0lDQWdJQ0JsZG1WdWREb2dKM0JoYmljc1hHNGdJQ0FnSUNBZ0lIUm9jbVZ6YUc5c1pEb2dNVEFzWEc0Z0lDQWdJQ0FnSUhCdmFXNTBaWEp6T2lBeExGeHVJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJRVJKVWtWRFZFbFBUbDlCVEV4Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnWjJWMFZHOTFZMmhCWTNScGIyNDZJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnSUNCMllYSWdaR2x5WldOMGFXOXVJRDBnZEdocGN5NXZjSFJwYjI1ekxtUnBjbVZqZEdsdmJqdGNiaUFnSUNBZ0lDQWdkbUZ5SUdGamRHbHZibk1nUFNCYlhUdGNiaUFnSUNBZ0lDQWdhV1lnS0dScGNtVmpkR2x2YmlBbUlFUkpVa1ZEVkVsUFRsOUlUMUpKV2s5T1ZFRk1LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhZM1JwYjI1ekxuQjFjMmdvVkU5VlEwaGZRVU5VU1U5T1gxQkJUbDlaS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnBaaUFvWkdseVpXTjBhVzl1SUNZZ1JFbFNSVU5VU1U5T1gxWkZVbFJKUTBGTUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaFkzUnBiMjV6TG5CMWMyZ29WRTlWUTBoZlFVTlVTVTlPWDFCQlRsOVlLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWVdOMGFXOXVjenRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdaR2x5WldOMGFXOXVWR1Z6ZERvZ1puVnVZM1JwYjI0b2FXNXdkWFFwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJRzl3ZEdsdmJuTWdQU0IwYUdsekxtOXdkR2x2Ym5NN1hHNGdJQ0FnSUNBZ0lIWmhjaUJvWVhOTmIzWmxaQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJSFpoY2lCa2FYTjBZVzVqWlNBOUlHbHVjSFYwTG1ScGMzUmhibU5sTzF4dUlDQWdJQ0FnSUNCMllYSWdaR2x5WldOMGFXOXVJRDBnYVc1d2RYUXVaR2x5WldOMGFXOXVPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2VDQTlJR2x1Y0hWMExtUmxiSFJoV0R0Y2JpQWdJQ0FnSUNBZ2RtRnlJSGtnUFNCcGJuQjFkQzVrWld4MFlWazdYRzVjYmlBZ0lDQWdJQ0FnTHk4Z2JHOWpheUIwYnlCaGVHbHpQMXh1SUNBZ0lDQWdJQ0JwWmlBb0lTaGthWEpsWTNScGIyNGdKaUJ2Y0hScGIyNXpMbVJwY21WamRHbHZiaWtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodmNIUnBiMjV6TG1ScGNtVmpkR2x2YmlBbUlFUkpVa1ZEVkVsUFRsOUlUMUpKV2s5T1ZFRk1LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1SUQwZ0tIZ2dQVDA5SURBcElEOGdSRWxTUlVOVVNVOU9YMDVQVGtVZ09pQW9lQ0E4SURBcElEOGdSRWxTUlVOVVNVOU9YMHhGUmxRZ09pQkVTVkpGUTFSSlQwNWZVa2xIU0ZRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHRnpUVzkyWldRZ1BTQjRJQ0U5SUhSb2FYTXVjRmc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlVnUFNCTllYUm9MbUZpY3locGJuQjFkQzVrWld4MFlWZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI0Z1BTQW9lU0E5UFQwZ01Da2dQeUJFU1ZKRlExUkpUMDVmVGs5T1JTQTZJQ2g1SUR3Z01Da2dQeUJFU1ZKRlExUkpUMDVmVlZBZ09pQkVTVkpGUTFSSlQwNWZSRTlYVGp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lYTk5iM1psWkNBOUlIa2dJVDBnZEdocGN5NXdXVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaU0E5SUUxaGRHZ3VZV0p6S0dsdWNIVjBMbVJsYkhSaFdTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhVzV3ZFhRdVpHbHlaV04wYVc5dUlEMGdaR2x5WldOMGFXOXVPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdhR0Z6VFc5MlpXUWdKaVlnWkdsemRHRnVZMlVnUGlCdmNIUnBiMjV6TG5Sb2NtVnphRzlzWkNBbUppQmthWEpsWTNScGIyNGdKaUJ2Y0hScGIyNXpMbVJwY21WamRHbHZianRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdZWFIwY2xSbGMzUTZJR1oxYm1OMGFXOXVLR2x1Y0hWMEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQkJkSFJ5VW1WamIyZHVhWHBsY2k1d2NtOTBiM1I1Y0dVdVlYUjBjbFJsYzNRdVkyRnNiQ2gwYUdsekxDQnBibkIxZENrZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUNoMGFHbHpMbk4wWVhSbElDWWdVMVJCVkVWZlFrVkhRVTRnZkh3Z0tDRW9kR2hwY3k1emRHRjBaU0FtSUZOVVFWUkZYMEpGUjBGT0tTQW1KaUIwYUdsekxtUnBjbVZqZEdsdmJsUmxjM1FvYVc1d2RYUXBLU2s3WEc0Z0lDQWdmU3hjYmx4dUlDQWdJR1Z0YVhRNklHWjFibU4wYVc5dUtHbHVjSFYwS1NCN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1d1dDQTlJR2x1Y0hWMExtUmxiSFJoV0R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV3V1NBOUlHbHVjSFYwTG1SbGJIUmhXVHRjYmx4dUlDQWdJQ0FnSUNCMllYSWdaR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1VTNSeUtHbHVjSFYwTG1ScGNtVmpkR2x2YmlrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0dScGNtVmpkR2x2YmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXVZV1JrYVhScGIyNWhiRVYyWlc1MElEMGdkR2hwY3k1dmNIUnBiMjV6TG1WMlpXNTBJQ3NnWkdseVpXTjBhVzl1TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIUm9hWE11WDNOMWNHVnlMbVZ0YVhRdVkyRnNiQ2gwYUdsekxDQnBibkIxZENrN1hHNGdJQ0FnZlZ4dWZTazdYRzVjYmk4cUtseHVJQ29nVUdsdVkyaGNiaUFxSUZKbFkyOW5ibWw2WldRZ2QyaGxiaUIwZDI4Z2IzSWdiVzl5WlNCd2IybHVkR1Z5Y3lCaGNtVWdiVzkyYVc1bklIUnZkMkZ5WkNBb2VtOXZiUzFwYmlrZ2IzSWdZWGRoZVNCbWNtOXRJR1ZoWTJnZ2IzUm9aWElnS0hwdmIyMHRiM1YwS1M1Y2JpQXFJRUJqYjI1emRISjFZM1J2Y2x4dUlDb2dRR1Y0ZEdWdVpITWdRWFIwY2xKbFkyOW5ibWw2WlhKY2JpQXFMMXh1Wm5WdVkzUnBiMjRnVUdsdVkyaFNaV052WjI1cGVtVnlLQ2tnZTF4dUlDQWdJRUYwZEhKU1pXTnZaMjVwZW1WeUxtRndjR3g1S0hSb2FYTXNJR0Z5WjNWdFpXNTBjeWs3WEc1OVhHNWNibWx1YUdWeWFYUW9VR2x1WTJoU1pXTnZaMjVwZW1WeUxDQkJkSFJ5VW1WamIyZHVhWHBsY2l3Z2UxeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFQnVZVzFsYzNCaFkyVmNiaUFnSUNBZ0tpQkFiV1Z0WW1WeWIyWWdVR2x1WTJoU1pXTnZaMjVwZW1WeVhHNGdJQ0FnSUNvdlhHNGdJQ0FnWkdWbVlYVnNkSE02SUh0Y2JpQWdJQ0FnSUNBZ1pYWmxiblE2SUNkd2FXNWphQ2NzWEc0Z0lDQWdJQ0FnSUhSb2NtVnphRzlzWkRvZ01DeGNiaUFnSUNBZ0lDQWdjRzlwYm5SbGNuTTZJREpjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdaMlYwVkc5MVkyaEJZM1JwYjI0NklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdXMVJQVlVOSVgwRkRWRWxQVGw5T1QwNUZYVHRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdZWFIwY2xSbGMzUTZJR1oxYm1OMGFXOXVLR2x1Y0hWMEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5emRYQmxjaTVoZEhSeVZHVnpkQzVqWVd4c0tIUm9hWE1zSUdsdWNIVjBLU0FtSmx4dUlDQWdJQ0FnSUNBZ0lDQWdLRTFoZEdndVlXSnpLR2x1Y0hWMExuTmpZV3hsSUMwZ01Ta2dQaUIwYUdsekxtOXdkR2x2Ym5NdWRHaHlaWE5vYjJ4a0lIeDhJSFJvYVhNdWMzUmhkR1VnSmlCVFZFRlVSVjlDUlVkQlRpazdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lHVnRhWFE2SUdaMWJtTjBhVzl1S0dsdWNIVjBLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBibkIxZEM1elkyRnNaU0FoUFQwZ01Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR2x1VDNWMElEMGdhVzV3ZFhRdWMyTmhiR1VnUENBeElEOGdKMmx1SnlBNklDZHZkWFFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhRdVlXUmthWFJwYjI1aGJFVjJaVzUwSUQwZ2RHaHBjeTV2Y0hScGIyNXpMbVYyWlc1MElDc2dhVzVQZFhRN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmMzVndaWEl1WlcxcGRDNWpZV3hzS0hSb2FYTXNJR2x1Y0hWMEtUdGNiaUFnSUNCOVhHNTlLVHRjYmx4dUx5b3FYRzRnS2lCUWNtVnpjMXh1SUNvZ1VtVmpiMmR1YVhwbFpDQjNhR1Z1SUhSb1pTQndiMmx1ZEdWeUlHbHpJR1J2ZDI0Z1ptOXlJSGdnYlhNZ2QybDBhRzkxZENCaGJua2diVzkyWlcxbGJuUXVYRzRnS2lCQVkyOXVjM1J5ZFdOMGIzSmNiaUFxSUVCbGVIUmxibVJ6SUZKbFkyOW5ibWw2WlhKY2JpQXFMMXh1Wm5WdVkzUnBiMjRnVUhKbGMzTlNaV052WjI1cGVtVnlLQ2tnZTF4dUlDQWdJRkpsWTI5bmJtbDZaWEl1WVhCd2JIa29kR2hwY3l3Z1lYSm5kVzFsYm5SektUdGNibHh1SUNBZ0lIUm9hWE11WDNScGJXVnlJRDBnYm5Wc2JEdGNiaUFnSUNCMGFHbHpMbDlwYm5CMWRDQTlJRzUxYkd3N1hHNTlYRzVjYm1sdWFHVnlhWFFvVUhKbGMzTlNaV052WjI1cGVtVnlMQ0JTWldOdloyNXBlbVZ5TENCN1hHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1FHNWhiV1Z6Y0dGalpWeHVJQ0FnSUNBcUlFQnRaVzFpWlhKdlppQlFjbVZ6YzFKbFkyOW5ibWw2WlhKY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JrWldaaGRXeDBjem9nZTF4dUlDQWdJQ0FnSUNCbGRtVnVkRG9nSjNCeVpYTnpKeXhjYmlBZ0lDQWdJQ0FnY0c5cGJuUmxjbk02SURFc1hHNGdJQ0FnSUNBZ0lIUnBiV1U2SURJMU1Td2dMeThnYldsdWFXMWhiQ0IwYVcxbElHOW1JSFJvWlNCd2IybHVkR1Z5SUhSdklHSmxJSEJ5WlhOelpXUmNiaUFnSUNBZ0lDQWdkR2h5WlhOb2IyeGtPaUE1SUM4dklHRWdiV2x1YVcxaGJDQnRiM1psYldWdWRDQnBjeUJ2YXl3Z1luVjBJR3RsWlhBZ2FYUWdiRzkzWEc0Z0lDQWdmU3hjYmx4dUlDQWdJR2RsZEZSdmRXTm9RV04wYVc5dU9pQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRnRVVDFWRFNGOUJRMVJKVDA1ZlFWVlVUMTA3WEc0Z0lDQWdmU3hjYmx4dUlDQWdJSEJ5YjJObGMzTTZJR1oxYm1OMGFXOXVLR2x1Y0hWMEtTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCdmNIUnBiMjV6SUQwZ2RHaHBjeTV2Y0hScGIyNXpPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2RtRnNhV1JRYjJsdWRHVnljeUE5SUdsdWNIVjBMbkJ2YVc1MFpYSnpMbXhsYm1kMGFDQTlQVDBnYjNCMGFXOXVjeTV3YjJsdWRHVnljenRjYmlBZ0lDQWdJQ0FnZG1GeUlIWmhiR2xrVFc5MlpXMWxiblFnUFNCcGJuQjFkQzVrYVhOMFlXNWpaU0E4SUc5d2RHbHZibk11ZEdoeVpYTm9iMnhrTzF4dUlDQWdJQ0FnSUNCMllYSWdkbUZzYVdSVWFXMWxJRDBnYVc1d2RYUXVaR1ZzZEdGVWFXMWxJRDRnYjNCMGFXOXVjeTUwYVcxbE8xeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVgybHVjSFYwSUQwZ2FXNXdkWFE3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdkMlVnYjI1c2VTQmhiR3h2ZHlCc2FYUjBiR1VnYlc5MlpXMWxiblJjYmlBZ0lDQWdJQ0FnTHk4Z1lXNWtJSGRsSjNabElISmxZV05vWldRZ1lXNGdaVzVrSUdWMlpXNTBMQ0J6YnlCaElIUmhjQ0JwY3lCd2IzTnphV0pzWlZ4dUlDQWdJQ0FnSUNCcFppQW9JWFpoYkdsa1RXOTJaVzFsYm5RZ2ZId2dJWFpoYkdsa1VHOXBiblJsY25NZ2ZId2dLR2x1Y0hWMExtVjJaVzUwVkhsd1pTQW1JQ2hKVGxCVlZGOUZUa1FnZkNCSlRsQlZWRjlEUVU1RFJVd3BJQ1ltSUNGMllXeHBaRlJwYldVcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzJWMEtDazdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYVc1d2RYUXVaWFpsYm5SVWVYQmxJQ1lnU1U1UVZWUmZVMVJCVWxRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6WlhRb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM1JwYldWeUlEMGdjMlYwVkdsdFpXOTFkRU52Ym5SbGVIUW9ablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpkR0YwWlNBOUlGTlVRVlJGWDFKRlEwOUhUa2xhUlVRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUwY25sRmJXbDBLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMQ0J2Y0hScGIyNXpMblJwYldVc0lIUm9hWE1wTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHbHVjSFYwTG1WMlpXNTBWSGx3WlNBbUlFbE9VRlZVWDBWT1JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZOVVFWUkZYMUpGUTA5SFRrbGFSVVE3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZOVVFWUkZYMFpCU1V4RlJEdGNiaUFnSUNCOUxGeHVYRzRnSUNBZ2NtVnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQmpiR1ZoY2xScGJXVnZkWFFvZEdocGN5NWZkR2x0WlhJcE8xeHVJQ0FnSUgwc1hHNWNiaUFnSUNCbGJXbDBPaUJtZFc1amRHbHZiaWhwYm5CMWRDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV6ZEdGMFpTQWhQVDBnVTFSQlZFVmZVa1ZEVDBkT1NWcEZSQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHbHVjSFYwSUNZbUlDaHBibkIxZEM1bGRtVnVkRlI1Y0dVZ0ppQkpUbEJWVkY5RlRrUXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGJtRm5aWEl1WlcxcGRDaDBhR2x6TG05d2RHbHZibk11WlhabGJuUWdLeUFuZFhBbkxDQnBibkIxZENrN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXBibkIxZEM1MGFXMWxVM1JoYlhBZ1BTQnViM2NvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRnVZV2RsY2k1bGJXbDBLSFJvYVhNdWIzQjBhVzl1Y3k1bGRtVnVkQ3dnZEdocGN5NWZhVzV3ZFhRcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmU2s3WEc1Y2JpOHFLbHh1SUNvZ1VtOTBZWFJsWEc0Z0tpQlNaV052WjI1cGVtVmtJSGRvWlc0Z2RIZHZJRzl5SUcxdmNtVWdjRzlwYm5SbGNpQmhjbVVnYlc5MmFXNW5JR2x1SUdFZ1kybHlZM1ZzWVhJZ2JXOTBhVzl1TGx4dUlDb2dRR052Ym5OMGNuVmpkRzl5WEc0Z0tpQkFaWGgwWlc1a2N5QkJkSFJ5VW1WamIyZHVhWHBsY2x4dUlDb3ZYRzVtZFc1amRHbHZiaUJTYjNSaGRHVlNaV052WjI1cGVtVnlLQ2tnZTF4dUlDQWdJRUYwZEhKU1pXTnZaMjVwZW1WeUxtRndjR3g1S0hSb2FYTXNJR0Z5WjNWdFpXNTBjeWs3WEc1OVhHNWNibWx1YUdWeWFYUW9VbTkwWVhSbFVtVmpiMmR1YVhwbGNpd2dRWFIwY2xKbFkyOW5ibWw2WlhJc0lIdGNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkFibUZ0WlhOd1lXTmxYRzRnSUNBZ0lDb2dRRzFsYldKbGNtOW1JRkp2ZEdGMFpWSmxZMjluYm1sNlpYSmNiaUFnSUNBZ0tpOWNiaUFnSUNCa1pXWmhkV3gwY3pvZ2UxeHVJQ0FnSUNBZ0lDQmxkbVZ1ZERvZ0ozSnZkR0YwWlNjc1hHNGdJQ0FnSUNBZ0lIUm9jbVZ6YUc5c1pEb2dNQ3hjYmlBZ0lDQWdJQ0FnY0c5cGJuUmxjbk02SURKY2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnWjJWMFZHOTFZMmhCWTNScGIyNDZJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVzFSUFZVTklYMEZEVkVsUFRsOU9UMDVGWFR0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnWVhSMGNsUmxjM1E2SUdaMWJtTjBhVzl1S0dsdWNIVjBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpkWEJsY2k1aGRIUnlWR1Z6ZEM1allXeHNLSFJvYVhNc0lHbHVjSFYwS1NBbUpseHVJQ0FnSUNBZ0lDQWdJQ0FnS0UxaGRHZ3VZV0p6S0dsdWNIVjBMbkp2ZEdGMGFXOXVLU0ErSUhSb2FYTXViM0IwYVc5dWN5NTBhSEpsYzJodmJHUWdmSHdnZEdocGN5NXpkR0YwWlNBbUlGTlVRVlJGWDBKRlIwRk9LVHRjYmlBZ0lDQjlYRzU5S1R0Y2JseHVMeW9xWEc0Z0tpQlRkMmx3WlZ4dUlDb2dVbVZqYjJkdWFYcGxaQ0IzYUdWdUlIUm9aU0J3YjJsdWRHVnlJR2x6SUcxdmRtbHVaeUJtWVhOMElDaDJaV3h2WTJsMGVTa3NJSGRwZEdnZ1pXNXZkV2RvSUdScGMzUmhibU5sSUdsdUlIUm9aU0JoYkd4dmQyVmtJR1JwY21WamRHbHZiaTVjYmlBcUlFQmpiMjV6ZEhKMVkzUnZjbHh1SUNvZ1FHVjRkR1Z1WkhNZ1FYUjBjbEpsWTI5bmJtbDZaWEpjYmlBcUwxeHVablZ1WTNScGIyNGdVM2RwY0dWU1pXTnZaMjVwZW1WeUtDa2dlMXh1SUNBZ0lFRjBkSEpTWldOdloyNXBlbVZ5TG1Gd2NHeDVLSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5azdYRzU5WEc1Y2JtbHVhR1Z5YVhRb1UzZHBjR1ZTWldOdloyNXBlbVZ5TENCQmRIUnlVbVZqYjJkdWFYcGxjaXdnZTF4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVCdVlXMWxjM0JoWTJWY2JpQWdJQ0FnS2lCQWJXVnRZbVZ5YjJZZ1UzZHBjR1ZTWldOdloyNXBlbVZ5WEc0Z0lDQWdJQ292WEc0Z0lDQWdaR1ZtWVhWc2RITTZJSHRjYmlBZ0lDQWdJQ0FnWlhabGJuUTZJQ2R6ZDJsd1pTY3NYRzRnSUNBZ0lDQWdJSFJvY21WemFHOXNaRG9nTVRBc1hHNGdJQ0FnSUNBZ0lIWmxiRzlqYVhSNU9pQXdMak1zWEc0Z0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ1JFbFNSVU5VU1U5T1gwaFBVa2xhVDA1VVFVd2dmQ0JFU1ZKRlExUkpUMDVmVmtWU1ZFbERRVXdzWEc0Z0lDQWdJQ0FnSUhCdmFXNTBaWEp6T2lBeFhHNGdJQ0FnZlN4Y2JseHVJQ0FnSUdkbGRGUnZkV05vUVdOMGFXOXVPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGJsSmxZMjluYm1sNlpYSXVjSEp2ZEc5MGVYQmxMbWRsZEZSdmRXTm9RV04wYVc5dUxtTmhiR3dvZEdocGN5azdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lHRjBkSEpVWlhOME9pQm1kVzVqZEdsdmJpaHBibkIxZENrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnWkdseVpXTjBhVzl1SUQwZ2RHaHBjeTV2Y0hScGIyNXpMbVJwY21WamRHbHZianRjYmlBZ0lDQWdJQ0FnZG1GeUlIWmxiRzlqYVhSNU8xeHVYRzRnSUNBZ0lDQWdJR2xtSUNoa2FYSmxZM1JwYjI0Z0ppQW9SRWxTUlVOVVNVOU9YMGhQVWtsYVQwNVVRVXdnZkNCRVNWSkZRMVJKVDA1ZlZrVlNWRWxEUVV3cEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMlpXeHZZMmwwZVNBOUlHbHVjSFYwTG05MlpYSmhiR3hXWld4dlkybDBlVHRjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoa2FYSmxZM1JwYjI0Z0ppQkVTVkpGUTFSSlQwNWZTRTlTU1ZwUFRsUkJUQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkbVZzYjJOcGRIa2dQU0JwYm5CMWRDNXZkbVZ5WVd4c1ZtVnNiMk5wZEhsWU8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR1JwY21WamRHbHZiaUFtSUVSSlVrVkRWRWxQVGw5V1JWSlVTVU5CVENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1Wc2IyTnBkSGtnUFNCcGJuQjFkQzV2ZG1WeVlXeHNWbVZzYjJOcGRIbFpPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM04xY0dWeUxtRjBkSEpVWlhOMExtTmhiR3dvZEdocGN5d2dhVzV3ZFhRcElDWW1YRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI0Z0ppQnBibkIxZEM1dlptWnpaWFJFYVhKbFkzUnBiMjRnSmlaY2JpQWdJQ0FnSUNBZ0lDQWdJR2x1Y0hWMExtUnBjM1JoYm1ObElENGdkR2hwY3k1dmNIUnBiMjV6TG5Sb2NtVnphRzlzWkNBbUpseHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUXViV0Y0VUc5cGJuUmxjbk1nUFQwZ2RHaHBjeTV2Y0hScGIyNXpMbkJ2YVc1MFpYSnpJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhZbk1vZG1Wc2IyTnBkSGtwSUQ0Z2RHaHBjeTV2Y0hScGIyNXpMblpsYkc5amFYUjVJQ1ltSUdsdWNIVjBMbVYyWlc1MFZIbHdaU0FtSUVsT1VGVlVYMFZPUkR0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnWlcxcGREb2dablZ1WTNScGIyNG9hVzV3ZFhRcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdScGNtVmpkR2x2YmlBOUlHUnBjbVZqZEdsdmJsTjBjaWhwYm5CMWRDNXZabVp6WlhSRWFYSmxZM1JwYjI0cE8xeHVJQ0FnSUNBZ0lDQnBaaUFvWkdseVpXTjBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMWhibUZuWlhJdVpXMXBkQ2gwYUdsekxtOXdkR2x2Ym5NdVpYWmxiblFnS3lCa2FYSmxZM1JwYjI0c0lHbHVjSFYwS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdWJXRnVZV2RsY2k1bGJXbDBLSFJvYVhNdWIzQjBhVzl1Y3k1bGRtVnVkQ3dnYVc1d2RYUXBPMXh1SUNBZ0lIMWNibjBwTzF4dVhHNHZLaXBjYmlBcUlFRWdkR0Z3SUdseklHVmpiMmR1YVhwbFpDQjNhR1Z1SUhSb1pTQndiMmx1ZEdWeUlHbHpJR1J2YVc1bklHRWdjMjFoYkd3Z2RHRndMMk5zYVdOckxpQk5kV3gwYVhCc1pTQjBZWEJ6SUdGeVpTQnlaV052WjI1cGVtVmtJR2xtSUhSb1pYa2diMk5qZFhKY2JpQXFJR0psZEhkbFpXNGdkR2hsSUdkcGRtVnVJR2x1ZEdWeWRtRnNJR0Z1WkNCd2IzTnBkR2x2Ymk0Z1ZHaGxJR1JsYkdGNUlHOXdkR2x2YmlCallXNGdZbVVnZFhObFpDQjBieUJ5WldOdloyNXBlbVVnYlhWc2RHa3RkR0Z3Y3lCM2FYUm9iM1YwSUdacGNtbHVaMXh1SUNvZ1lTQnphVzVuYkdVZ2RHRndMbHh1SUNwY2JpQXFJRlJvWlNCbGRtVnVkRVJoZEdFZ1puSnZiU0IwYUdVZ1pXMXBkSFJsWkNCbGRtVnVkQ0JqYjI1MFlXbHVjeUIwYUdVZ2NISnZjR1Z5ZEhrZ1lIUmhjRU52ZFc1MFlDd2dkMmhwWTJnZ1kyOXVkR0ZwYm5NZ2RHaGxJR0Z0YjNWdWRDQnZabHh1SUNvZ2JYVnNkR2t0ZEdGd2N5QmlaV2x1WnlCeVpXTnZaMjVwZW1Wa0xseHVJQ29nUUdOdmJuTjBjblZqZEc5eVhHNGdLaUJBWlhoMFpXNWtjeUJTWldOdloyNXBlbVZ5WEc0Z0tpOWNibVoxYm1OMGFXOXVJRlJoY0ZKbFkyOW5ibWw2WlhJb0tTQjdYRzRnSUNBZ1VtVmpiMmR1YVhwbGNpNWhjSEJzZVNoMGFHbHpMQ0JoY21kMWJXVnVkSE1wTzF4dVhHNGdJQ0FnTHk4Z2NISmxkbWx2ZFhNZ2RHbHRaU0JoYm1RZ1kyVnVkR1Z5TEZ4dUlDQWdJQzh2SUhWelpXUWdabTl5SUhSaGNDQmpiM1Z1ZEdsdVoxeHVJQ0FnSUhSb2FYTXVjRlJwYldVZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0IwYUdsekxuQkRaVzUwWlhJZ1BTQm1ZV3h6WlR0Y2JseHVJQ0FnSUhSb2FYTXVYM1JwYldWeUlEMGdiblZzYkR0Y2JpQWdJQ0IwYUdsekxsOXBibkIxZENBOUlHNTFiR3c3WEc0Z0lDQWdkR2hwY3k1amIzVnVkQ0E5SURBN1hHNTlYRzVjYm1sdWFHVnlhWFFvVkdGd1VtVmpiMmR1YVhwbGNpd2dVbVZqYjJkdWFYcGxjaXdnZTF4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVCdVlXMWxjM0JoWTJWY2JpQWdJQ0FnS2lCQWJXVnRZbVZ5YjJZZ1VHbHVZMmhTWldOdloyNXBlbVZ5WEc0Z0lDQWdJQ292WEc0Z0lDQWdaR1ZtWVhWc2RITTZJSHRjYmlBZ0lDQWdJQ0FnWlhabGJuUTZJQ2QwWVhBbkxGeHVJQ0FnSUNBZ0lDQndiMmx1ZEdWeWN6b2dNU3hjYmlBZ0lDQWdJQ0FnZEdGd2N6b2dNU3hjYmlBZ0lDQWdJQ0FnYVc1MFpYSjJZV3c2SURNd01Dd2dMeThnYldGNElIUnBiV1VnWW1WMGQyVmxiaUIwYUdVZ2JYVnNkR2t0ZEdGd0lIUmhjSE5jYmlBZ0lDQWdJQ0FnZEdsdFpUb2dNalV3TENBdkx5QnRZWGdnZEdsdFpTQnZaaUIwYUdVZ2NHOXBiblJsY2lCMGJ5QmlaU0JrYjNkdUlDaHNhV3RsSUdacGJtZGxjaUJ2YmlCMGFHVWdjMk55WldWdUtWeHVJQ0FnSUNBZ0lDQjBhSEpsYzJodmJHUTZJRGtzSUM4dklHRWdiV2x1YVcxaGJDQnRiM1psYldWdWRDQnBjeUJ2YXl3Z1luVjBJR3RsWlhBZ2FYUWdiRzkzWEc0Z0lDQWdJQ0FnSUhCdmMxUm9jbVZ6YUc5c1pEb2dNVEFnTHk4Z1lTQnRkV3gwYVMxMFlYQWdZMkZ1SUdKbElHRWdZbWwwSUc5bVppQjBhR1VnYVc1cGRHbGhiQ0J3YjNOcGRHbHZibHh1SUNBZ0lIMHNYRzVjYmlBZ0lDQm5aWFJVYjNWamFFRmpkR2x2YmpvZ1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJWRTlWUTBoZlFVTlVTVTlPWDAxQlRrbFFWVXhCVkVsUFRsMDdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lIQnliMk5sYzNNNklHWjFibU4wYVc5dUtHbHVjSFYwS1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJ2Y0hScGIyNXpJRDBnZEdocGN5NXZjSFJwYjI1ek8xeHVYRzRnSUNBZ0lDQWdJSFpoY2lCMllXeHBaRkJ2YVc1MFpYSnpJRDBnYVc1d2RYUXVjRzlwYm5SbGNuTXViR1Z1WjNSb0lEMDlQU0J2Y0hScGIyNXpMbkJ2YVc1MFpYSnpPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2RtRnNhV1JOYjNabGJXVnVkQ0E5SUdsdWNIVjBMbVJwYzNSaGJtTmxJRHdnYjNCMGFXOXVjeTUwYUhKbGMyaHZiR1E3WEc0Z0lDQWdJQ0FnSUhaaGNpQjJZV3hwWkZSdmRXTm9WR2x0WlNBOUlHbHVjSFYwTG1SbGJIUmhWR2x0WlNBOElHOXdkR2x2Ym5NdWRHbHRaVHRjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbkpsYzJWMEtDazdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tDaHBibkIxZEM1bGRtVnVkRlI1Y0dVZ0ppQkpUbEJWVkY5VFZFRlNWQ2tnSmlZZ0tIUm9hWE11WTI5MWJuUWdQVDA5SURBcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW1ZV2xzVkdsdFpXOTFkQ2dwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdMeThnZDJVZ2IyNXNlU0JoYkd4dmR5QnNhWFIwYkdVZ2JXOTJaVzFsYm5SY2JpQWdJQ0FnSUNBZ0x5OGdZVzVrSUhkbEozWmxJSEpsWVdOb1pXUWdZVzRnWlc1a0lHVjJaVzUwTENCemJ5QmhJSFJoY0NCcGN5QndiM056YVdKc1pWeHVJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2FXUk5iM1psYldWdWRDQW1KaUIyWVd4cFpGUnZkV05vVkdsdFpTQW1KaUIyWVd4cFpGQnZhVzUwWlhKektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hVzV3ZFhRdVpYWmxiblJVZVhCbElDRTlJRWxPVUZWVVgwVk9SQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWmhhV3hVYVcxbGIzVjBLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIyWVd4cFpFbHVkR1Z5ZG1Gc0lEMGdkR2hwY3k1d1ZHbHRaU0EvSUNocGJuQjFkQzUwYVcxbFUzUmhiWEFnTFNCMGFHbHpMbkJVYVcxbElEd2diM0IwYVc5dWN5NXBiblJsY25aaGJDa2dPaUIwY25WbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIWmhiR2xrVFhWc2RHbFVZWEFnUFNBaGRHaHBjeTV3UTJWdWRHVnlJSHg4SUdkbGRFUnBjM1JoYm1ObEtIUm9hWE11Y0VObGJuUmxjaXdnYVc1d2RYUXVZMlZ1ZEdWeUtTQThJRzl3ZEdsdmJuTXVjRzl6VkdoeVpYTm9iMnhrTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQlVhVzFsSUQwZ2FXNXdkWFF1ZEdsdFpWTjBZVzF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d1EyVnVkR1Z5SUQwZ2FXNXdkWFF1WTJWdWRHVnlPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhaaGJHbGtUWFZzZEdsVVlYQWdmSHdnSVhaaGJHbGtTVzUwWlhKMllXd3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTnZkVzUwSUQwZ01UdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiM1Z1ZENBclBTQXhPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlwYm5CMWRDQTlJR2x1Y0hWME8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QnBaaUIwWVhBZ1kyOTFiblFnYldGMFkyaGxjeUIzWlNCb1lYWmxJSEpsWTI5bmJtbDZaV1FnYVhRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCbGJITmxJR2wwSUdoaGN5QmlaV2RoYmlCeVpXTnZaMjVwZW1sdVp5NHVMbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSFJoY0VOdmRXNTBJRDBnZEdocGN5NWpiM1Z1ZENBbElHOXdkR2x2Ym5NdWRHRndjenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwWVhCRGIzVnVkQ0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUc1dklHWmhhV3hwYm1jZ2NtVnhkV2x5WlcxbGJuUnpMQ0JwYlcxbFpHbGhkR1ZzZVNCMGNtbG5aMlZ5SUhSb1pTQjBZWEFnWlhabGJuUmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJ2Y2lCM1lXbDBJR0Z6SUd4dmJtY2dZWE1nZEdobElHMTFiSFJwZEdGd0lHbHVkR1Z5ZG1Gc0lIUnZJSFJ5YVdkblpYSmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVhR0Z6VW1WeGRXbHlaVVpoYVd4MWNtVnpLQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGTlVRVlJGWDFKRlEwOUhUa2xhUlVRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmRHbHRaWElnUFNCelpYUlVhVzFsYjNWMFEyOXVkR1Y0ZENobWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzNSaGRHVWdQU0JUVkVGVVJWOVNSVU5QUjA1SldrVkVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MGNubEZiV2wwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzSUc5d2RHbHZibk11YVc1MFpYSjJZV3dzSUhSb2FYTXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVTFSQlZFVmZRa1ZIUVU0N1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCVFZFRlVSVjlHUVVsTVJVUTdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lHWmhhV3hVYVcxbGIzVjBPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmZEdsdFpYSWdQU0J6WlhSVWFXMWxiM1YwUTI5dWRHVjRkQ2htZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMzUmhkR1VnUFNCVFZFRlVSVjlHUVVsTVJVUTdYRzRnSUNBZ0lDQWdJSDBzSUhSb2FYTXViM0IwYVc5dWN5NXBiblJsY25aaGJDd2dkR2hwY3lrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCVFZFRlVSVjlHUVVsTVJVUTdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lISmxjMlYwT2lCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdZMnhsWVhKVWFXMWxiM1YwS0hSb2FYTXVYM1JwYldWeUtUdGNiaUFnSUNCOUxGeHVYRzRnSUNBZ1pXMXBkRG9nWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuTjBZWFJsSUQwOUlGTlVRVlJGWDFKRlEwOUhUa2xhUlVRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMmx1Y0hWMExuUmhjRU52ZFc1MElEMGdkR2hwY3k1amIzVnVkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGdVlXZGxjaTVsYldsMEtIUm9hWE11YjNCMGFXOXVjeTVsZG1WdWRDd2dkR2hwY3k1ZmFXNXdkWFFwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZTazdYRzVjYmk4cUtseHVJQ29nVTJsdGNHeGxJSGRoZVNCMGJ5QmpjbVZoZEdVZ1lTQnRZVzVoWjJWeUlIZHBkR2dnWVNCa1pXWmhkV3gwSUhObGRDQnZaaUJ5WldOdloyNXBlbVZ5Y3k1Y2JpQXFJRUJ3WVhKaGJTQjdTRlJOVEVWc1pXMWxiblI5SUdWc1pXMWxiblJjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCYmIzQjBhVzl1YzExY2JpQXFJRUJqYjI1emRISjFZM1J2Y2x4dUlDb3ZYRzVtZFc1amRHbHZiaUJJWVcxdFpYSW9aV3hsYldWdWRDd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lHOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1eklIeDhJSHQ5TzF4dUlDQWdJRzl3ZEdsdmJuTXVjbVZqYjJkdWFYcGxjbk1nUFNCcFpsVnVaR1ZtYVc1bFpDaHZjSFJwYjI1ekxuSmxZMjluYm1sNlpYSnpMQ0JJWVcxdFpYSXVaR1ZtWVhWc2RITXVjSEpsYzJWMEtUdGNiaUFnSUNCeVpYUjFjbTRnYm1WM0lFMWhibUZuWlhJb1pXeGxiV1Z1ZEN3Z2IzQjBhVzl1Y3lrN1hHNTlYRzVjYmk4cUtseHVJQ29nUUdOdmJuTjBJSHR6ZEhKcGJtZDlYRzRnS2k5Y2JraGhiVzFsY2k1V1JWSlRTVTlPSUQwZ0p6SXVNQzQzSnp0Y2JseHVMeW9xWEc0Z0tpQmtaV1poZFd4MElITmxkSFJwYm1kelhHNGdLaUJBYm1GdFpYTndZV05sWEc0Z0tpOWNia2hoYlcxbGNpNWtaV1poZFd4MGN5QTlJSHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJ6WlhRZ2FXWWdSRTlOSUdWMlpXNTBjeUJoY21VZ1ltVnBibWNnZEhKcFoyZGxjbVZrTGx4dUlDQWdJQ0FxSUVKMWRDQjBhR2x6SUdseklITnNiM2RsY2lCaGJtUWdkVzUxYzJWa0lHSjVJSE5wYlhCc1pTQnBiWEJzWlcxbGJuUmhkR2x2Ym5Nc0lITnZJR1JwYzJGaWJHVmtJR0o1SUdSbFptRjFiSFF1WEc0Z0lDQWdJQ29nUUhSNWNHVWdlMEp2YjJ4bFlXNTlYRzRnSUNBZ0lDb2dRR1JsWm1GMWJIUWdabUZzYzJWY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JrYjIxRmRtVnVkSE02SUdaaGJITmxMRnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVkdobElIWmhiSFZsSUdadmNpQjBhR1VnZEc5MVkyaEJZM1JwYjI0Z2NISnZjR1Z5ZEhrdlptRnNiR0poWTJzdVhHNGdJQ0FnSUNvZ1YyaGxiaUJ6WlhRZ2RHOGdZR052YlhCMWRHVmdJR2wwSUhkcGJHd2diV0ZuYVdOaGJHeDVJSE5sZENCMGFHVWdZMjl5Y21WamRDQjJZV3gxWlNCaVlYTmxaQ0J2YmlCMGFHVWdZV1JrWldRZ2NtVmpiMmR1YVhwbGNuTXVYRzRnSUNBZ0lDb2dRSFI1Y0dVZ2UxTjBjbWx1WjMxY2JpQWdJQ0FnS2lCQVpHVm1ZWFZzZENCamIyMXdkWFJsWEc0Z0lDQWdJQ292WEc0Z0lDQWdkRzkxWTJoQlkzUnBiMjQ2SUZSUFZVTklYMEZEVkVsUFRsOURUMDFRVlZSRkxGeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRSFI1Y0dVZ2UwSnZiMnhsWVc1OVhHNGdJQ0FnSUNvZ1FHUmxabUYxYkhRZ2RISjFaVnh1SUNBZ0lDQXFMMXh1SUNBZ0lHVnVZV0pzWlRvZ2RISjFaU3hjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVWWVVFVlNTVTFGVGxSQlRDQkdSVUZVVlZKRklDMHRJR05oYmlCaVpTQnlaVzF2ZG1Wa0wyTm9ZVzVuWldSY2JpQWdJQ0FnS2lCRGFHRnVaMlVnZEdobElIQmhjbVZ1ZENCcGJuQjFkQ0IwWVhKblpYUWdaV3hsYldWdWRDNWNiaUFnSUNBZ0tpQkpaaUJPZFd4c0xDQjBhR1Z1SUdsMElHbHpJR0psYVc1bklITmxkQ0IwYUdVZ2RHOGdiV0ZwYmlCbGJHVnRaVzUwTGx4dUlDQWdJQ0FxSUVCMGVYQmxJSHRPZFd4c2ZFVjJaVzUwVkdGeVoyVjBmVnh1SUNBZ0lDQXFJRUJrWldaaGRXeDBJRzUxYkd4Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0JwYm5CMWRGUmhjbWRsZERvZ2JuVnNiQ3hjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdadmNtTmxJR0Z1SUdsdWNIVjBJR05zWVhOelhHNGdJQ0FnSUNvZ1FIUjVjR1VnZTA1MWJHeDhSblZ1WTNScGIyNTlYRzRnSUNBZ0lDb2dRR1JsWm1GMWJIUWdiblZzYkZ4dUlDQWdJQ0FxTDF4dUlDQWdJR2x1Y0hWMFEyeGhjM002SUc1MWJHd3NYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJFWldaaGRXeDBJSEpsWTI5bmJtbDZaWElnYzJWMGRYQWdkMmhsYmlCallXeHNhVzVuSUdCSVlXMXRaWElvS1dCY2JpQWdJQ0FnS2lCWGFHVnVJR055WldGMGFXNW5JR0VnYm1WM0lFMWhibUZuWlhJZ2RHaGxjMlVnZDJsc2JDQmlaU0J6YTJsd2NHVmtMbHh1SUNBZ0lDQXFJRUIwZVhCbElIdEJjbkpoZVgxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J3Y21WelpYUTZJRnRjYmlBZ0lDQWdJQ0FnTHk4Z1VtVmpiMmR1YVhwbGNrTnNZWE56TENCdmNIUnBiMjV6TENCYmNtVmpiMmR1YVhwbFYybDBhQ3dnTGk0dVhTd2dXM0psY1hWcGNtVkdZV2xzZFhKbExDQXVMaTVkWEc0Z0lDQWdJQ0FnSUZ0U2IzUmhkR1ZTWldOdloyNXBlbVZ5TENCN1pXNWhZbXhsT2lCbVlXeHpaWDFkTEZ4dUlDQWdJQ0FnSUNCYlVHbHVZMmhTWldOdloyNXBlbVZ5TENCN1pXNWhZbXhsT2lCbVlXeHpaWDBzSUZzbmNtOTBZWFJsSjExZExGeHVJQ0FnSUNBZ0lDQmJVM2RwY0dWU1pXTnZaMjVwZW1WeUxDQjdaR2x5WldOMGFXOXVPaUJFU1ZKRlExUkpUMDVmU0U5U1NWcFBUbFJCVEgxZExGeHVJQ0FnSUNBZ0lDQmJVR0Z1VW1WamIyZHVhWHBsY2l3Z2UyUnBjbVZqZEdsdmJqb2dSRWxTUlVOVVNVOU9YMGhQVWtsYVQwNVVRVXg5TENCYkozTjNhWEJsSjExZExGeHVJQ0FnSUNBZ0lDQmJWR0Z3VW1WamIyZHVhWHBsY2wwc1hHNGdJQ0FnSUNBZ0lGdFVZWEJTWldOdloyNXBlbVZ5TENCN1pYWmxiblE2SUNka2IzVmliR1YwWVhBbkxDQjBZWEJ6T2lBeWZTd2dXeWQwWVhBblhWMHNYRzRnSUNBZ0lDQWdJRnRRY21WemMxSmxZMjluYm1sNlpYSmRYRzRnSUNBZ1hTeGNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRk52YldVZ1ExTlRJSEJ5YjNCbGNuUnBaWE1nWTJGdUlHSmxJSFZ6WldRZ2RHOGdhVzF3Y205MlpTQjBhR1VnZDI5eWEybHVaeUJ2WmlCSVlXMXRaWEl1WEc0Z0lDQWdJQ29nUVdSa0lIUm9aVzBnZEc4Z2RHaHBjeUJ0WlhSb2IyUWdZVzVrSUhSb1pYa2dkMmxzYkNCaVpTQnpaWFFnZDJobGJpQmpjbVZoZEdsdVp5QmhJRzVsZHlCTllXNWhaMlZ5TGx4dUlDQWdJQ0FxSUVCdVlXMWxjM0JoWTJWY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JqYzNOUWNtOXdjem9nZTF4dUlDQWdJQ0FnSUNBdktpcGNiaUFnSUNBZ0lDQWdJQ29nUkdsellXSnNaWE1nZEdWNGRDQnpaV3hsWTNScGIyNGdkRzhnYVcxd2NtOTJaU0IwYUdVZ1pISmhaMmRwYm1jZ1oyVnpkSFZ5WlM0Z1RXRnBibXg1SUdadmNpQmtaWE5yZEc5d0lHSnliM2R6WlhKekxseHVJQ0FnSUNBZ0lDQWdLaUJBZEhsd1pTQjdVM1J5YVc1bmZWeHVJQ0FnSUNBZ0lDQWdLaUJBWkdWbVlYVnNkQ0FuYm05dVpTZGNiaUFnSUNBZ0lDQWdJQ292WEc0Z0lDQWdJQ0FnSUhWelpYSlRaV3hsWTNRNklDZHViMjVsSnl4Y2JseHVJQ0FnSUNBZ0lDQXZLaXBjYmlBZ0lDQWdJQ0FnSUNvZ1JHbHpZV0pzWlNCMGFHVWdWMmx1Wkc5M2N5QlFhRzl1WlNCbmNtbHdjR1Z5Y3lCM2FHVnVJSEJ5WlhOemFXNW5JR0Z1SUdWc1pXMWxiblF1WEc0Z0lDQWdJQ0FnSUNBcUlFQjBlWEJsSUh0VGRISnBibWQ5WEc0Z0lDQWdJQ0FnSUNBcUlFQmtaV1poZFd4MElDZHViMjVsSjF4dUlDQWdJQ0FnSUNBZ0tpOWNiaUFnSUNBZ0lDQWdkRzkxWTJoVFpXeGxZM1E2SUNkdWIyNWxKeXhjYmx4dUlDQWdJQ0FnSUNBdktpcGNiaUFnSUNBZ0lDQWdJQ29nUkdsellXSnNaWE1nZEdobElHUmxabUYxYkhRZ1kyRnNiRzkxZENCemFHOTNiaUIzYUdWdUlIbHZkU0IwYjNWamFDQmhibVFnYUc5c1pDQmhJSFJ2ZFdOb0lIUmhjbWRsZEM1Y2JpQWdJQ0FnSUNBZ0lDb2dUMjRnYVU5VExDQjNhR1Z1SUhsdmRTQjBiM1ZqYUNCaGJtUWdhRzlzWkNCaElIUnZkV05vSUhSaGNtZGxkQ0J6ZFdOb0lHRnpJR0VnYkdsdWF5d2dVMkZtWVhKcElHUnBjM0JzWVhselhHNGdJQ0FnSUNBZ0lDQXFJR0VnWTJGc2JHOTFkQ0JqYjI1MFlXbHVhVzVuSUdsdVptOXliV0YwYVc5dUlHRmliM1YwSUhSb1pTQnNhVzVyTGlCVWFHbHpJSEJ5YjNCbGNuUjVJR0ZzYkc5M2N5QjViM1VnZEc4Z1pHbHpZV0pzWlNCMGFHRjBJR05oYkd4dmRYUXVYRzRnSUNBZ0lDQWdJQ0FxSUVCMGVYQmxJSHRUZEhKcGJtZDlYRzRnSUNBZ0lDQWdJQ0FxSUVCa1pXWmhkV3gwSUNkdWIyNWxKMXh1SUNBZ0lDQWdJQ0FnS2k5Y2JpQWdJQ0FnSUNBZ2RHOTFZMmhEWVd4c2IzVjBPaUFuYm05dVpTY3NYRzVjYmlBZ0lDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0lDQXFJRk53WldOcFptbGxjeUIzYUdWMGFHVnlJSHB2YjIxcGJtY2dhWE1nWlc1aFlteGxaQzRnVlhObFpDQmllU0JKUlRFd1BseHVJQ0FnSUNBZ0lDQWdLaUJBZEhsd1pTQjdVM1J5YVc1bmZWeHVJQ0FnSUNBZ0lDQWdLaUJBWkdWbVlYVnNkQ0FuYm05dVpTZGNiaUFnSUNBZ0lDQWdJQ292WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblJhYjI5dGFXNW5PaUFuYm05dVpTY3NYRzVjYmlBZ0lDQWdJQ0FnTHlvcVhHNGdJQ0FnSUNBZ0lDQXFJRk53WldOcFptbGxjeUIwYUdGMElHRnVJR1Z1ZEdseVpTQmxiR1Z0Wlc1MElITm9iM1ZzWkNCaVpTQmtjbUZuWjJGaWJHVWdhVzV6ZEdWaFpDQnZaaUJwZEhNZ1kyOXVkR1Z1ZEhNdUlFMWhhVzVzZVNCbWIzSWdaR1Z6YTNSdmNDQmljbTkzYzJWeWN5NWNiaUFnSUNBZ0lDQWdJQ29nUUhSNWNHVWdlMU4wY21sdVozMWNiaUFnSUNBZ0lDQWdJQ29nUUdSbFptRjFiSFFnSjI1dmJtVW5YRzRnSUNBZ0lDQWdJQ0FxTDF4dUlDQWdJQ0FnSUNCMWMyVnlSSEpoWnpvZ0oyNXZibVVuTEZ4dVhHNGdJQ0FnSUNBZ0lDOHFLbHh1SUNBZ0lDQWdJQ0FnS2lCUGRtVnljbWxrWlhNZ2RHaGxJR2hwWjJoc2FXZG9kQ0JqYjJ4dmNpQnphRzkzYmlCM2FHVnVJSFJvWlNCMWMyVnlJSFJoY0hNZ1lTQnNhVzVySUc5eUlHRWdTbUYyWVZOamNtbHdkRnh1SUNBZ0lDQWdJQ0FnS2lCamJHbGphMkZpYkdVZ1pXeGxiV1Z1ZENCcGJpQnBUMU11SUZSb2FYTWdjSEp2Y0dWeWRIa2diMkpsZVhNZ2RHaGxJR0ZzY0doaElIWmhiSFZsTENCcFppQnpjR1ZqYVdacFpXUXVYRzRnSUNBZ0lDQWdJQ0FxSUVCMGVYQmxJSHRUZEhKcGJtZDlYRzRnSUNBZ0lDQWdJQ0FxSUVCa1pXWmhkV3gwSUNkeVoySmhLREFzTUN3d0xEQXBKMXh1SUNBZ0lDQWdJQ0FnS2k5Y2JpQWdJQ0FnSUNBZ2RHRndTR2xuYUd4cFoyaDBRMjlzYjNJNklDZHlaMkpoS0RBc01Dd3dMREFwSjF4dUlDQWdJSDFjYm4wN1hHNWNiblpoY2lCVFZFOVFJRDBnTVR0Y2JuWmhjaUJHVDFKRFJVUmZVMVJQVUNBOUlESTdYRzVjYmk4cUtseHVJQ29nVFdGdVlXZGxjbHh1SUNvZ1FIQmhjbUZ0SUh0SVZFMU1SV3hsYldWdWRIMGdaV3hsYldWdWRGeHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJRnR2Y0hScGIyNXpYVnh1SUNvZ1FHTnZibk4wY25WamRHOXlYRzRnS2k5Y2JtWjFibU4wYVc5dUlFMWhibUZuWlhJb1pXeGxiV1Z1ZEN3Z2IzQjBhVzl1Y3lrZ2UxeHVJQ0FnSUhSb2FYTXViM0IwYVc5dWN5QTlJR0Z6YzJsbmJpaDdmU3dnU0dGdGJXVnlMbVJsWm1GMWJIUnpMQ0J2Y0hScGIyNXpJSHg4SUh0OUtUdGNibHh1SUNBZ0lIUm9hWE11YjNCMGFXOXVjeTVwYm5CMWRGUmhjbWRsZENBOUlIUm9hWE11YjNCMGFXOXVjeTVwYm5CMWRGUmhjbWRsZENCOGZDQmxiR1Z0Wlc1ME8xeHVYRzRnSUNBZ2RHaHBjeTVvWVc1a2JHVnljeUE5SUh0OU8xeHVJQ0FnSUhSb2FYTXVjMlZ6YzJsdmJpQTlJSHQ5TzF4dUlDQWdJSFJvYVhNdWNtVmpiMmR1YVhwbGNuTWdQU0JiWFR0Y2JpQWdJQ0IwYUdsekxtOXNaRU56YzFCeWIzQnpJRDBnZTMwN1hHNWNiaUFnSUNCMGFHbHpMbVZzWlcxbGJuUWdQU0JsYkdWdFpXNTBPMXh1SUNBZ0lIUm9hWE11YVc1d2RYUWdQU0JqY21WaGRHVkpibkIxZEVsdWMzUmhibU5sS0hSb2FYTXBPMXh1SUNBZ0lIUm9hWE11ZEc5MVkyaEJZM1JwYjI0Z1BTQnVaWGNnVkc5MVkyaEJZM1JwYjI0b2RHaHBjeXdnZEdocGN5NXZjSFJwYjI1ekxuUnZkV05vUVdOMGFXOXVLVHRjYmx4dUlDQWdJSFJ2WjJkc1pVTnpjMUJ5YjNCektIUm9hWE1zSUhSeWRXVXBPMXh1WEc0Z0lDQWdaV0ZqYUNoMGFHbHpMbTl3ZEdsdmJuTXVjbVZqYjJkdWFYcGxjbk1zSUdaMWJtTjBhVzl1S0dsMFpXMHBJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlISmxZMjluYm1sNlpYSWdQU0IwYUdsekxtRmtaQ2h1WlhjZ0tHbDBaVzFiTUYwcEtHbDBaVzFiTVYwcEtUdGNiaUFnSUNBZ0lDQWdhWFJsYlZzeVhTQW1KaUJ5WldOdloyNXBlbVZ5TG5KbFkyOW5ibWw2WlZkcGRHZ29hWFJsYlZzeVhTazdYRzRnSUNBZ0lDQWdJR2wwWlcxYk0xMGdKaVlnY21WamIyZHVhWHBsY2k1eVpYRjFhWEpsUm1GcGJIVnlaU2hwZEdWdFd6TmRLVHRjYmlBZ0lDQjlMQ0IwYUdsektUdGNibjFjYmx4dVRXRnVZV2RsY2k1d2NtOTBiM1I1Y0dVZ1BTQjdYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djMlYwSUc5d2RHbHZibk5jYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdiM0IwYVc5dWMxeHVJQ0FnSUNBcUlFQnlaWFIxY201eklIdE5ZVzVoWjJWeWZWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhObGREb2dablZ1WTNScGIyNG9iM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0JoYzNOcFoyNG9kR2hwY3k1dmNIUnBiMjV6TENCdmNIUnBiMjV6S1R0Y2JseHVJQ0FnSUNBZ0lDQXZMeUJQY0hScGIyNXpJSFJvWVhRZ2JtVmxaQ0JoSUd4cGRIUnNaU0J0YjNKbElITmxkSFZ3WEc0Z0lDQWdJQ0FnSUdsbUlDaHZjSFJwYjI1ekxuUnZkV05vUVdOMGFXOXVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5SdmRXTm9RV04wYVc5dUxuVndaR0YwWlNncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNodmNIUnBiMjV6TG1sdWNIVjBWR0Z5WjJWMEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QkRiR1ZoYmlCMWNDQmxlR2x6ZEdsdVp5QmxkbVZ1ZENCc2FYTjBaVzVsY25NZ1lXNWtJSEpsYVc1cGRHbGhiR2w2WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGJuQjFkQzVrWlhOMGNtOTVLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sdWNIVjBMblJoY21kbGRDQTlJRzl3ZEdsdmJuTXVhVzV3ZFhSVVlYSm5aWFE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sdWNIVjBMbWx1YVhRb0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ2MzUnZjQ0J5WldOdloyNXBlbWx1WnlCbWIzSWdkR2hwY3lCelpYTnphVzl1TGx4dUlDQWdJQ0FxSUZSb2FYTWdjMlZ6YzJsdmJpQjNhV3hzSUdKbElHUnBjMk5oY21SbFpDd2dkMmhsYmlCaElHNWxkeUJiYVc1d2RYUmRjM1JoY25RZ1pYWmxiblFnYVhNZ1ptbHlaV1F1WEc0Z0lDQWdJQ29nVjJobGJpQm1iM0pqWldRc0lIUm9aU0J5WldOdloyNXBlbVZ5SUdONVkyeGxJR2x6SUhOMGIzQndaV1FnYVcxdFpXUnBZWFJsYkhrdVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUh0Q2IyOXNaV0Z1ZlNCYlptOXlZMlZkWEc0Z0lDQWdJQ292WEc0Z0lDQWdjM1J2Y0RvZ1puVnVZM1JwYjI0b1ptOXlZMlVwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhOemFXOXVMbk4wYjNCd1pXUWdQU0JtYjNKalpTQS9JRVpQVWtORlJGOVRWRTlRSURvZ1UxUlBVRHRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nY25WdUlIUm9aU0J5WldOdloyNXBlbVZ5Y3lGY2JpQWdJQ0FnS2lCallXeHNaV1FnWW5rZ2RHaGxJR2x1Y0hWMFNHRnVaR3hsY2lCbWRXNWpkR2x2YmlCdmJpQmxkbVZ5ZVNCdGIzWmxiV1Z1ZENCdlppQjBhR1VnY0c5cGJuUmxjbk1nS0hSdmRXTm9aWE1wWEc0Z0lDQWdJQ29nYVhRZ2QyRnNhM01nZEdoeWIzVm5hQ0JoYkd3Z2RHaGxJSEpsWTI5bmJtbDZaWEp6SUdGdVpDQjBjbWxsY3lCMGJ5QmtaWFJsWTNRZ2RHaGxJR2RsYzNSMWNtVWdkR2hoZENCcGN5QmlaV2x1WnlCdFlXUmxYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlHbHVjSFYwUkdGMFlWeHVJQ0FnSUNBcUwxeHVJQ0FnSUhKbFkyOW5ibWw2WlRvZ1puVnVZM1JwYjI0b2FXNXdkWFJFWVhSaEtTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCelpYTnphVzl1SUQwZ2RHaHBjeTV6WlhOemFXOXVPMXh1SUNBZ0lDQWdJQ0JwWmlBb2MyVnpjMmx2Ymk1emRHOXdjR1ZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBdkx5QnlkVzRnZEdobElIUnZkV05vTFdGamRHbHZiaUJ3YjJ4NVptbHNiRnh1SUNBZ0lDQWdJQ0IwYUdsekxuUnZkV05vUVdOMGFXOXVMbkJ5WlhabGJuUkVaV1poZFd4MGN5aHBibkIxZEVSaGRHRXBPMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQnlaV052WjI1cGVtVnlPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2NtVmpiMmR1YVhwbGNuTWdQU0IwYUdsekxuSmxZMjluYm1sNlpYSnpPMXh1WEc0Z0lDQWdJQ0FnSUM4dklIUm9hWE1nYUc5c1pITWdkR2hsSUhKbFkyOW5ibWw2WlhJZ2RHaGhkQ0JwY3lCaVpXbHVaeUJ5WldOdloyNXBlbVZrTGx4dUlDQWdJQ0FnSUNBdkx5QnpieUIwYUdVZ2NtVmpiMmR1YVhwbGNpZHpJSE4wWVhSbElHNWxaV1J6SUhSdklHSmxJRUpGUjBGT0xDQkRTRUZPUjBWRUxDQkZUa1JGUkNCdmNpQlNSVU5QUjA1SldrVkVYRzRnSUNBZ0lDQWdJQzh2SUdsbUlHNXZJSEpsWTI5bmJtbDZaWElnYVhNZ1pHVjBaV04wYVc1bklHRWdkR2hwYm1jc0lHbDBJR2x6SUhObGRDQjBieUJnYm5Wc2JHQmNiaUFnSUNBZ0lDQWdkbUZ5SUdOMWNsSmxZMjluYm1sNlpYSWdQU0J6WlhOemFXOXVMbU4xY2xKbFkyOW5ibWw2WlhJN1hHNWNiaUFnSUNBZ0lDQWdMeThnY21WelpYUWdkMmhsYmlCMGFHVWdiR0Z6ZENCeVpXTnZaMjVwZW1WeUlHbHpJSEpsWTI5bmJtbDZaV1JjYmlBZ0lDQWdJQ0FnTHk4Z2IzSWdkMmhsYmlCM1pTZHlaU0JwYmlCaElHNWxkeUJ6WlhOemFXOXVYRzRnSUNBZ0lDQWdJR2xtSUNnaFkzVnlVbVZqYjJkdWFYcGxjaUI4ZkNBb1kzVnlVbVZqYjJkdWFYcGxjaUFtSmlCamRYSlNaV052WjI1cGVtVnlMbk4wWVhSbElDWWdVMVJCVkVWZlVrVkRUMGRPU1ZwRlJDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbEpsWTI5bmJtbDZaWElnUFNCelpYTnphVzl1TG1OMWNsSmxZMjluYm1sNlpYSWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZG1GeUlHa2dQU0F3TzF4dUlDQWdJQ0FnSUNCM2FHbHNaU0FvYVNBOElISmxZMjluYm1sNlpYSnpMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVmpiMmR1YVhwbGNpQTlJSEpsWTI5bmJtbDZaWEp6VzJsZE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5Qm1hVzVrSUc5MWRDQnBaaUIzWlNCaGNtVWdZV3hzYjNkbFpDQjBjbmtnZEc4Z2NtVmpiMmR1YVhwbElIUm9aU0JwYm5CMWRDQm1iM0lnZEdocGN5QnZibVV1WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUF4TGlBZ0lHRnNiRzkzSUdsbUlIUm9aU0J6WlhOemFXOXVJR2x6SUU1UFZDQm1iM0pqWldRZ2MzUnZjSEJsWkNBb2MyVmxJSFJvWlNBdWMzUnZjQ2dwSUcxbGRHaHZaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJREl1SUNBZ1lXeHNiM2NnYVdZZ2QyVWdjM1JwYkd3Z2FHRjJaVzRuZENCeVpXTnZaMjVwZW1Wa0lHRWdaMlZ6ZEhWeVpTQnBiaUIwYUdseklITmxjM05wYjI0c0lHOXlJSFJvWlNCMGFHbHpJSEpsWTI5bmJtbDZaWElnYVhNZ2RHaGxJRzl1WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnSUNBZ0lDQjBhR0YwSUdseklHSmxhVzVuSUhKbFkyOW5ibWw2WldRdVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlBekxpQWdJR0ZzYkc5M0lHbG1JSFJvWlNCeVpXTnZaMjVwZW1WeUlHbHpJR0ZzYkc5M1pXUWdkRzhnY25WdUlITnBiWFZzZEdGdVpXOTFjeUIzYVhSb0lIUm9aU0JqZFhKeVpXNTBJSEpsWTI5bmJtbDZaV1FnY21WamIyZHVhWHBsY2k1Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUNBZ0lDQWdkR2hwY3lCallXNGdZbVVnYzJWMGRYQWdkMmwwYUNCMGFHVWdZSEpsWTI5bmJtbDZaVmRwZEdnb0tXQWdiV1YwYUc5a0lHOXVJSFJvWlNCeVpXTnZaMjVwZW1WeUxseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmxjM05wYjI0dWMzUnZjSEJsWkNBaFBUMGdSazlTUTBWRVgxTlVUMUFnSmlZZ0tDQXZMeUF4WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDRmpkWEpTWldOdloyNXBlbVZ5SUh4OElISmxZMjluYm1sNlpYSWdQVDBnWTNWeVVtVmpiMmR1YVhwbGNpQjhmQ0F2THlBeVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsWTI5bmJtbDZaWEl1WTJGdVVtVmpiMmR1YVhwbFYybDBhQ2hqZFhKU1pXTnZaMjVwZW1WeUtTa3BJSHNnTHk4Z00xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxZMjluYm1sNlpYSXVjbVZqYjJkdWFYcGxLR2x1Y0hWMFJHRjBZU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxZMjluYm1sNlpYSXVjbVZ6WlhRb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2FXWWdkR2hsSUhKbFkyOW5ibWw2WlhJZ2FHRnpJR0psWlc0Z2NtVmpiMmR1YVhwcGJtY2dkR2hsSUdsdWNIVjBJR0Z6SUdFZ2RtRnNhV1FnWjJWemRIVnlaU3dnZDJVZ2QyRnVkQ0IwYnlCemRHOXlaU0IwYUdseklHOXVaU0JoY3lCMGFHVmNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHTjFjbkpsYm5RZ1lXTjBhWFpsSUhKbFkyOW5ibWw2WlhJdUlHSjFkQ0J2Ym14NUlHbG1JSGRsSUdSdmJpZDBJR0ZzY21WaFpIa2dhR0YyWlNCaGJpQmhZM1JwZG1VZ2NtVmpiMmR1YVhwbGNseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmpkWEpTWldOdloyNXBlbVZ5SUNZbUlISmxZMjluYm1sNlpYSXVjM1JoZEdVZ0ppQW9VMVJCVkVWZlFrVkhRVTRnZkNCVFZFRlVSVjlEU0VGT1IwVkVJSHdnVTFSQlZFVmZSVTVFUlVRcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5VW1WamIyZHVhWHBsY2lBOUlITmxjM05wYjI0dVkzVnlVbVZqYjJkdWFYcGxjaUE5SUhKbFkyOW5ibWw2WlhJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBLeXM3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1oyVjBJR0VnY21WamIyZHVhWHBsY2lCaWVTQnBkSE1nWlhabGJuUWdibUZ0WlM1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTFKbFkyOW5ibWw2WlhKOFUzUnlhVzVuZlNCeVpXTnZaMjVwZW1WeVhHNGdJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UxSmxZMjluYm1sNlpYSjhUblZzYkgxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtISmxZMjluYm1sNlpYSXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tISmxZMjluYm1sNlpYSWdhVzV6ZEdGdVkyVnZaaUJTWldOdloyNXBlbVZ5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZqYjJkdWFYcGxjanRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJ5WldOdloyNXBlbVZ5Y3lBOUlIUm9hWE11Y21WamIyZHVhWHBsY25NN1hHNGdJQ0FnSUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2djbVZqYjJkdWFYcGxjbk11YkdWdVozUm9PeUJwS3lzcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlaV052WjI1cGVtVnljMXRwWFM1dmNIUnBiMjV6TG1WMlpXNTBJRDA5SUhKbFkyOW5ibWw2WlhJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVmpiMmR1YVhwbGNuTmJhVjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHRmtaQ0JoSUhKbFkyOW5ibWw2WlhJZ2RHOGdkR2hsSUcxaGJtRm5aWEpjYmlBZ0lDQWdLaUJsZUdsemRHbHVaeUJ5WldOdloyNXBlbVZ5Y3lCM2FYUm9JSFJvWlNCellXMWxJR1YyWlc1MElHNWhiV1VnZDJsc2JDQmlaU0J5WlcxdmRtVmtYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFNaV052WjI1cGVtVnlmU0J5WldOdloyNXBlbVZ5WEc0Z0lDQWdJQ29nUUhKbGRIVnlibk1nZTFKbFkyOW5ibWw2WlhKOFRXRnVZV2RsY24xY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JoWkdRNklHWjFibU4wYVc5dUtISmxZMjluYm1sNlpYSXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHbHVkbTlyWlVGeWNtRjVRWEpuS0hKbFkyOW5ibWw2WlhJc0lDZGhaR1FuTENCMGFHbHpLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQXZMeUJ5WlcxdmRtVWdaWGhwYzNScGJtZGNiaUFnSUNBZ0lDQWdkbUZ5SUdWNGFYTjBhVzVuSUQwZ2RHaHBjeTVuWlhRb2NtVmpiMmR1YVhwbGNpNXZjSFJwYjI1ekxtVjJaVzUwS1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLR1Y0YVhOMGFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJXOTJaU2hsZUdsemRHbHVaeWs3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KbFkyOW5ibWw2WlhKekxuQjFjMmdvY21WamIyZHVhWHBsY2lrN1hHNGdJQ0FnSUNBZ0lISmxZMjluYm1sNlpYSXViV0Z1WVdkbGNpQTlJSFJvYVhNN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1MGIzVmphRUZqZEdsdmJpNTFjR1JoZEdVb0tUdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxZMjluYm1sNlpYSTdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSEpsYlc5MlpTQmhJSEpsWTI5bmJtbDZaWElnWW5rZ2JtRnRaU0J2Y2lCcGJuTjBZVzVqWlZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3VW1WamIyZHVhWHBsY254VGRISnBibWQ5SUhKbFkyOW5ibWw2WlhKY2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCN1RXRnVZV2RsY24xY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J5WlcxdmRtVTZJR1oxYm1OMGFXOXVLSEpsWTI5bmJtbDZaWElwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR2x1ZG05clpVRnljbUY1UVhKbktISmxZMjluYm1sNlpYSXNJQ2R5WlcxdmRtVW5MQ0IwYUdsektTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCeVpXTnZaMjVwZW1WeUlEMGdkR2hwY3k1blpYUW9jbVZqYjJkdWFYcGxjaWs3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdiR1YwSjNNZ2JXRnJaU0J6ZFhKbElIUm9hWE1nY21WamIyZHVhWHBsY2lCbGVHbHpkSE5jYmlBZ0lDQWdJQ0FnYVdZZ0tISmxZMjluYm1sNlpYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ5WldOdloyNXBlbVZ5Y3lBOUlIUm9hWE11Y21WamIyZHVhWHBsY25NN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXNWtaWGdnUFNCcGJrRnljbUY1S0hKbFkyOW5ibWw2WlhKekxDQnlaV052WjI1cGVtVnlLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsdVpHVjRJQ0U5UFNBdE1Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsWTI5bmJtbDZaWEp6TG5Od2JHbGpaU2hwYm1SbGVDd2dNU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTBiM1ZqYUVGamRHbHZiaTUxY0dSaGRHVW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQmlhVzVrSUdWMlpXNTBYRzRnSUNBZ0lDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlHVjJaVzUwYzF4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdoaGJtUnNaWEpjYmlBZ0lDQWdLaUJBY21WMGRYSnVjeUI3UlhabGJuUkZiV2wwZEdWeWZTQjBhR2x6WEc0Z0lDQWdJQ292WEc0Z0lDQWdiMjQ2SUdaMWJtTjBhVzl1S0dWMlpXNTBjeXdnYUdGdVpHeGxjaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9aWFpsYm5SeklEMDlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb2FHRnVaR3hsY2lBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0IyWVhJZ2FHRnVaR3hsY25NZ1BTQjBhR2x6TG1oaGJtUnNaWEp6TzF4dUlDQWdJQ0FnSUNCbFlXTm9LSE53YkdsMFUzUnlLR1YyWlc1MGN5a3NJR1oxYm1OMGFXOXVLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1lXNWtiR1Z5YzF0bGRtVnVkRjBnUFNCb1lXNWtiR1Z5YzF0bGRtVnVkRjBnZkh3Z1cxMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1lXNWtiR1Z5YzF0bGRtVnVkRjB1Y0hWemFDaG9ZVzVrYkdWeUtUdGNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQjFibUpwYm1RZ1pYWmxiblFzSUd4bFlYWmxJR1Z0YVhRZ1lteGhibXNnZEc4Z2NtVnRiM1psSUdGc2JDQm9ZVzVrYkdWeWMxeHVJQ0FnSUNBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCbGRtVnVkSE5jYmlBZ0lDQWdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JiYUdGdVpHeGxjbDFjYmlBZ0lDQWdLaUJBY21WMGRYSnVjeUI3UlhabGJuUkZiV2wwZEdWeWZTQjBhR2x6WEc0Z0lDQWdJQ292WEc0Z0lDQWdiMlptT2lCbWRXNWpkR2x2YmlobGRtVnVkSE1zSUdoaGJtUnNaWElwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MGN5QTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCMllYSWdhR0Z1Wkd4bGNuTWdQU0IwYUdsekxtaGhibVJzWlhKek8xeHVJQ0FnSUNBZ0lDQmxZV05vS0hOd2JHbDBVM1J5S0dWMlpXNTBjeWtzSUdaMWJtTjBhVzl1S0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdoaGJtUnNaWElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXeGxkR1VnYUdGdVpHeGxjbk5iWlhabGJuUmRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXNWtiR1Z5YzF0bGRtVnVkRjBnSmlZZ2FHRnVaR3hsY25OYlpYWmxiblJkTG5Od2JHbGpaU2hwYmtGeWNtRjVLR2hoYm1Sc1pYSnpXMlYyWlc1MFhTd2dhR0Z1Wkd4bGNpa3NJREVwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJR1Z0YVhRZ1pYWmxiblFnZEc4Z2RHaGxJR3hwYzNSbGJtVnljMXh1SUNBZ0lDQXFJRUJ3WVhKaGJTQjdVM1J5YVc1bmZTQmxkbVZ1ZEZ4dUlDQWdJQ0FxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JrWVhSaFhHNGdJQ0FnSUNvdlhHNGdJQ0FnWlcxcGREb2dablZ1WTNScGIyNG9aWFpsYm5Rc0lHUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdkMlVnWVd4emJ5QjNZVzUwSUhSdklIUnlhV2RuWlhJZ1pHOXRJR1YyWlc1MGMxeHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXZjSFJwYjI1ekxtUnZiVVYyWlc1MGN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISnBaMmRsY2tSdmJVVjJaVzUwS0dWMlpXNTBMQ0JrWVhSaEtUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUM4dklHNXZJR2hoYm1Sc1pYSnpMQ0J6YnlCemEybHdJR2wwSUdGc2JGeHVJQ0FnSUNBZ0lDQjJZWElnYUdGdVpHeGxjbk1nUFNCMGFHbHpMbWhoYm1Sc1pYSnpXMlYyWlc1MFhTQW1KaUIwYUdsekxtaGhibVJzWlhKelcyVjJaVzUwWFM1emJHbGpaU2dwTzF4dUlDQWdJQ0FnSUNCcFppQW9JV2hoYm1Sc1pYSnpJSHg4SUNGb1lXNWtiR1Z5Y3k1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdSaGRHRXVkSGx3WlNBOUlHVjJaVzUwTzF4dUlDQWdJQ0FnSUNCa1lYUmhMbkJ5WlhabGJuUkVaV1poZFd4MElEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoTG5OeVkwVjJaVzUwTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3WEc0Z0lDQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lDQWdkbUZ5SUdrZ1BTQXdPMXh1SUNBZ0lDQWdJQ0IzYUdsc1pTQW9hU0E4SUdoaGJtUnNaWEp6TG14bGJtZDBhQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhR0Z1Wkd4bGNuTmJhVjBvWkdGMFlTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCcEt5czdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nWkdWemRISnZlU0IwYUdVZ2JXRnVZV2RsY2lCaGJtUWdkVzVpYVc1a2N5QmhiR3dnWlhabGJuUnpYRzRnSUNBZ0lDb2dhWFFnWkc5bGMyNG5kQ0IxYm1KcGJtUWdaRzl0SUdWMlpXNTBjeXdnZEdoaGRDQnBjeUIwYUdVZ2RYTmxjaUJ2ZDI0Z2NtVnpjRzl1YzJsaWFXeHBkSGxjYmlBZ0lDQWdLaTljYmlBZ0lDQmtaWE4wY205NU9pQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElDWW1JSFJ2WjJkc1pVTnpjMUJ5YjNCektIUm9hWE1zSUdaaGJITmxLVHRjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbWhoYm1Sc1pYSnpJRDBnZTMwN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWemMybHZiaUE5SUh0OU8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1sdWNIVjBMbVJsYzNSeWIza29LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MElEMGdiblZzYkR0Y2JpQWdJQ0I5WEc1OU8xeHVYRzR2S2lwY2JpQXFJR0ZrWkM5eVpXMXZkbVVnZEdobElHTnpjeUJ3Y205d1pYSjBhV1Z6SUdGeklHUmxabWx1WldRZ2FXNGdiV0Z1WVdkbGNpNXZjSFJwYjI1ekxtTnpjMUJ5YjNCelhHNGdLaUJBY0dGeVlXMGdlMDFoYm1GblpYSjlJRzFoYm1GblpYSmNiaUFxSUVCd1lYSmhiU0I3UW05dmJHVmhibjBnWVdSa1hHNGdLaTljYm1aMWJtTjBhVzl1SUhSdloyZHNaVU56YzFCeWIzQnpLRzFoYm1GblpYSXNJR0ZrWkNrZ2UxeHVJQ0FnSUhaaGNpQmxiR1Z0Wlc1MElEMGdiV0Z1WVdkbGNpNWxiR1Z0Wlc1ME8xeHVJQ0FnSUdsbUlDZ2haV3hsYldWdWRDNXpkSGxzWlNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dUlDQWdJSFpoY2lCd2NtOXdPMXh1SUNBZ0lHVmhZMmdvYldGdVlXZGxjaTV2Y0hScGIyNXpMbU56YzFCeWIzQnpMQ0JtZFc1amRHbHZiaWgyWVd4MVpTd2dibUZ0WlNrZ2UxeHVJQ0FnSUNBZ0lDQndjbTl3SUQwZ2NISmxabWw0WldRb1pXeGxiV1Z1ZEM1emRIbHNaU3dnYm1GdFpTazdYRzRnSUNBZ0lDQWdJR2xtSUNoaFpHUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhibUZuWlhJdWIyeGtRM056VUhKdmNITmJjSEp2Y0YwZ1BTQmxiR1Z0Wlc1MExuTjBlV3hsVzNCeWIzQmRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaVnR3Y205d1hTQTlJSFpoYkhWbE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWld4bGJXVnVkQzV6ZEhsc1pWdHdjbTl3WFNBOUlHMWhibUZuWlhJdWIyeGtRM056VUhKdmNITmJjSEp2Y0YwZ2ZId2dKeWM3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5S1R0Y2JpQWdJQ0JwWmlBb0lXRmtaQ2tnZTF4dUlDQWdJQ0FnSUNCdFlXNWhaMlZ5TG05c1pFTnpjMUJ5YjNCeklEMGdlMzA3WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZLaXBjYmlBcUlIUnlhV2RuWlhJZ1pHOXRJR1YyWlc1MFhHNGdLaUJBY0dGeVlXMGdlMU4wY21sdVozMGdaWFpsYm5SY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQmtZWFJoWEc0Z0tpOWNibVoxYm1OMGFXOXVJSFJ5YVdkblpYSkViMjFGZG1WdWRDaGxkbVZ1ZEN3Z1pHRjBZU2tnZTF4dUlDQWdJSFpoY2lCblpYTjBkWEpsUlhabGJuUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZkbVZ1ZENnblJYWmxiblFuS1R0Y2JpQWdJQ0JuWlhOMGRYSmxSWFpsYm5RdWFXNXBkRVYyWlc1MEtHVjJaVzUwTENCMGNuVmxMQ0IwY25WbEtUdGNiaUFnSUNCblpYTjBkWEpsUlhabGJuUXVaMlZ6ZEhWeVpTQTlJR1JoZEdFN1hHNGdJQ0FnWkdGMFlTNTBZWEpuWlhRdVpHbHpjR0YwWTJoRmRtVnVkQ2huWlhOMGRYSmxSWFpsYm5RcE8xeHVmVnh1WEc1aGMzTnBaMjRvU0dGdGJXVnlMQ0I3WEc0Z0lDQWdTVTVRVlZSZlUxUkJVbFE2SUVsT1VGVlVYMU5VUVZKVUxGeHVJQ0FnSUVsT1VGVlVYMDFQVmtVNklFbE9VRlZVWDAxUFZrVXNYRzRnSUNBZ1NVNVFWVlJmUlU1RU9pQkpUbEJWVkY5RlRrUXNYRzRnSUNBZ1NVNVFWVlJmUTBGT1EwVk1PaUJKVGxCVlZGOURRVTVEUlV3c1hHNWNiaUFnSUNCVFZFRlVSVjlRVDFOVFNVSk1SVG9nVTFSQlZFVmZVRTlUVTBsQ1RFVXNYRzRnSUNBZ1UxUkJWRVZmUWtWSFFVNDZJRk5VUVZSRlgwSkZSMEZPTEZ4dUlDQWdJRk5VUVZSRlgwTklRVTVIUlVRNklGTlVRVlJGWDBOSVFVNUhSVVFzWEc0Z0lDQWdVMVJCVkVWZlJVNUVSVVE2SUZOVVFWUkZYMFZPUkVWRUxGeHVJQ0FnSUZOVVFWUkZYMUpGUTA5SFRrbGFSVVE2SUZOVVFWUkZYMUpGUTA5SFRrbGFSVVFzWEc0Z0lDQWdVMVJCVkVWZlEwRk9RMFZNVEVWRU9pQlRWRUZVUlY5RFFVNURSVXhNUlVRc1hHNGdJQ0FnVTFSQlZFVmZSa0ZKVEVWRU9pQlRWRUZVUlY5R1FVbE1SVVFzWEc1Y2JpQWdJQ0JFU1ZKRlExUkpUMDVmVGs5T1JUb2dSRWxTUlVOVVNVOU9YMDVQVGtVc1hHNGdJQ0FnUkVsU1JVTlVTVTlPWDB4RlJsUTZJRVJKVWtWRFZFbFBUbDlNUlVaVUxGeHVJQ0FnSUVSSlVrVkRWRWxQVGw5U1NVZElWRG9nUkVsU1JVTlVTVTlPWDFKSlIwaFVMRnh1SUNBZ0lFUkpVa1ZEVkVsUFRsOVZVRG9nUkVsU1JVTlVTVTlPWDFWUUxGeHVJQ0FnSUVSSlVrVkRWRWxQVGw5RVQxZE9PaUJFU1ZKRlExUkpUMDVmUkU5WFRpeGNiaUFnSUNCRVNWSkZRMVJKVDA1ZlNFOVNTVnBQVGxSQlREb2dSRWxTUlVOVVNVOU9YMGhQVWtsYVQwNVVRVXdzWEc0Z0lDQWdSRWxTUlVOVVNVOU9YMVpGVWxSSlEwRk1PaUJFU1ZKRlExUkpUMDVmVmtWU1ZFbERRVXdzWEc0Z0lDQWdSRWxTUlVOVVNVOU9YMEZNVERvZ1JFbFNSVU5VU1U5T1gwRk1UQ3hjYmx4dUlDQWdJRTFoYm1GblpYSTZJRTFoYm1GblpYSXNYRzRnSUNBZ1NXNXdkWFE2SUVsdWNIVjBMRnh1SUNBZ0lGUnZkV05vUVdOMGFXOXVPaUJVYjNWamFFRmpkR2x2Yml4Y2JseHVJQ0FnSUZSdmRXTm9TVzV3ZFhRNklGUnZkV05vU1c1d2RYUXNYRzRnSUNBZ1RXOTFjMlZKYm5CMWREb2dUVzkxYzJWSmJuQjFkQ3hjYmlBZ0lDQlFiMmx1ZEdWeVJYWmxiblJKYm5CMWREb2dVRzlwYm5SbGNrVjJaVzUwU1c1d2RYUXNYRzRnSUNBZ1ZHOTFZMmhOYjNWelpVbHVjSFYwT2lCVWIzVmphRTF2ZFhObFNXNXdkWFFzWEc0Z0lDQWdVMmx1WjJ4bFZHOTFZMmhKYm5CMWREb2dVMmx1WjJ4bFZHOTFZMmhKYm5CMWRDeGNibHh1SUNBZ0lGSmxZMjluYm1sNlpYSTZJRkpsWTI5bmJtbDZaWElzWEc0Z0lDQWdRWFIwY2xKbFkyOW5ibWw2WlhJNklFRjBkSEpTWldOdloyNXBlbVZ5TEZ4dUlDQWdJRlJoY0RvZ1ZHRndVbVZqYjJkdWFYcGxjaXhjYmlBZ0lDQlFZVzQ2SUZCaGJsSmxZMjluYm1sNlpYSXNYRzRnSUNBZ1UzZHBjR1U2SUZOM2FYQmxVbVZqYjJkdWFYcGxjaXhjYmlBZ0lDQlFhVzVqYURvZ1VHbHVZMmhTWldOdloyNXBlbVZ5TEZ4dUlDQWdJRkp2ZEdGMFpUb2dVbTkwWVhSbFVtVmpiMmR1YVhwbGNpeGNiaUFnSUNCUWNtVnpjem9nVUhKbGMzTlNaV052WjI1cGVtVnlMRnh1WEc0Z0lDQWdiMjQ2SUdGa1pFVjJaVzUwVEdsemRHVnVaWEp6TEZ4dUlDQWdJRzltWmpvZ2NtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNuTXNYRzRnSUNBZ1pXRmphRG9nWldGamFDeGNiaUFnSUNCdFpYSm5aVG9nYldWeVoyVXNYRzRnSUNBZ1pYaDBaVzVrT2lCbGVIUmxibVFzWEc0Z0lDQWdZWE56YVdkdU9pQmhjM05wWjI0c1hHNGdJQ0FnYVc1b1pYSnBkRG9nYVc1b1pYSnBkQ3hjYmlBZ0lDQmlhVzVrUm00NklHSnBibVJHYml4Y2JpQWdJQ0J3Y21WbWFYaGxaRG9nY0hKbFptbDRaV1JjYm4wcE8xeHVYRzR2THlCMGFHbHpJSEJ5WlhabGJuUnpJR1Z5Y205eWN5QjNhR1Z1SUVoaGJXMWxjaUJwY3lCc2IyRmtaV1FnYVc0Z2RHaGxJSEJ5WlhObGJtTmxJRzltSUdGdUlFRk5SRnh1THk4Z0lITjBlV3hsSUd4dllXUmxjaUJpZFhRZ1lua2djMk55YVhCMElIUmhaeXdnYm05MElHSjVJSFJvWlNCc2IyRmtaWEl1WEc1MllYSWdabkpsWlVkc2IySmhiQ0E5SUNoMGVYQmxiMllnZDJsdVpHOTNJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QS9JSGRwYm1SdmR5QTZJQ2gwZVhCbGIyWWdjMlZzWmlBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCelpXeG1JRG9nZTMwcEtUc2dMeThnYW5Ob2FXNTBJR2xuYm05eVpUcHNhVzVsWEc1bWNtVmxSMnh2WW1Gc0xraGhiVzFsY2lBOUlFaGhiVzFsY2p0Y2JseHVhV1lnS0hSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ2tnZTF4dUlDQWdJR1JsWm1sdVpTaG1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRWhoYlcxbGNqdGNiaUFnSUNCOUtUdGNibjBnWld4elpTQnBaaUFvZEhsd1pXOW1JRzF2WkhWc1pTQWhQU0FuZFc1a1pXWnBibVZrSnlBbUppQnRiMlIxYkdVdVpYaHdiM0owY3lrZ2UxeHVJQ0FnSUcxdlpIVnNaUzVsZUhCdmNuUnpJRDBnU0dGdGJXVnlPMXh1ZlNCbGJITmxJSHRjYmlBZ0lDQjNhVzVrYjNkYlpYaHdiM0owVG1GdFpWMGdQU0JJWVcxdFpYSTdYRzU5WEc1Y2JuMHBLSGRwYm1SdmR5d2daRzlqZFcxbGJuUXNJQ2RJWVcxdFpYSW5LVHRjYmlJc0lpOHFLbHh1SUNvZ1EyeGhjM01nWVd4c2IzZHBibWNnWVhCd1pYSnBibWNnWVc1a0lHUnBjMkZ3Y0dWaGNtbHVaeUJ2YmlCbGJHVnRaVzUwYzF4dUlDb2dRR05zWVhOelhHNGdLaTljYm1Oc1lYTnpJRUZ3Y0dWaGNudGNibHh1SUNBdktpcGNiaUFnSUNvZ1FHTnZibk4wY25WamRHOXlYRzRnSUNBcUlFeHBjM1JsYm1sdVp5QjBieUJ6WTNKdmJHd3NJR3hoZFc1amFHVnpJR05zWVhOeklHRmtaSE11WEc0Z0lDQXFJRUJ3WVhKaGJTQjdiMkpxWldOMGZTQndZWEpoYlhNZ0xTQkRiMjUwWVdsdWN5QXpJSEJoY21GdFpYUmxjbk1nT2lBa1kyOXVkR0ZwYm1WeUxDQjdaV3hsYldWdWRIMHNJR052Ym5SaGFXNWxjaUIwYnlCdlluTmxjbllnT3lBa1lXNXBiV0YwWlN3Z2UyVnNaVzFsYm5SOUxDQmxiR1Z0Wlc1MElIUnZJR0Z1YVcxaGRHVWdPeUJoYm1sdFlYUnBiMjRzSUh0emRISnBibWQ5TENCdVlXMWxJRzltSUhSb1pTQmpiR0Z6Y3lCMGJ5QmhaR1FnYjI0Z2RISnBaMmRsY2x4dUlDQWdLaTljYmlBZ1kyOXVjM1J5ZFdOMGIzSWdLSEJoY21GdGN5a2dlMXh1SUNBZ0lIZHBibVJ2ZHk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkelkzSnZiR3duTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0JwWmlBb2NHRnlZVzF6TGlSamIyNTBZV2x1WlhJdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2t1ZVNBOElEY3dJQ1ltSUhCaGNtRnRjeTRrWTI5dWRHRnBibVZ5TG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BMbmtnUGlBdElIQmhjbUZ0Y3k0a1kyOXVkR0ZwYm1WeUxtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTG1obGFXZG9kQ2tnZTF4dUlDQWdJQ0FnSUNCd1lYSmhiWE11SkdGdWFXMWhkR1V1Wm05eVJXRmphQ2dnWld4bGJXVnVkQ0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0hCaGNtRnRjeTVoYm1sdFlYUnBiMjRwWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCbGJITmxlMXh1SUNBZ0lDQWdJQ0J3WVhKaGJYTXVKR0Z1YVcxaGRHVXVabTl5UldGamFDZ2daV3hsYldWdWRDQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0hCaGNtRnRjeTVoYm1sdFlYUnBiMjRwWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNsY2JpQWdmVnh1ZlZ4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlFRndjR1ZoY2x4dUlpd2lMeW9xWEc0Z0tpQlVhR2x6SUdOc1lYTnpJSEpsY1hWcGNtVnpJSFJvWlNCdGIyUjFiR1Z6SUdoaGJXMWxjbXB6WEc0Z0tpQkFZMjl1YzNSY2JpQXFJRUJ5WlhGMWFYSmxjeUJvWVcxdFpYSnFjMXh1SUNvdlhHNWpiMjV6ZENCSVlXMXRaWElnUFNCeVpYRjFhWEpsS0Nkb1lXMXRaWEpxY3ljcFhHNWNiaThxS2x4dUlDb2dRMkZ5YjNWelpXd2dZMnhoYzNOY2JpQXFJRUJqYkdGemMxeHVJQ292WEc1amJHRnpjeUJEWVhKdmRYTmxiQ0I3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRVJsWTJ4aGNtVnpJR0ZzYkNCd1lYSmhiV1YwWlhKekxpQk1hWE4wWlc0Z2RHOGdZMnhwWTJ0eklHRnVaQ0JvWVcxdFpYSWdjR0Z1Y3k1Y2JpQWdJQ29nUUdOdmJuTjBjblZqZEc5eVhHNGdJQ0FxSUVCd1lYSmhiU0I3YjJKcVpXTjBmU0J3WVhKaGJYTWdMU0JEYjI1MFlXbHVjeUF4SUhCaGNtRnRaWFJsY2lBNklDUmpiMjUwWVdsdVpYSXNJSHRsYkdWdFpXNTBmU3dnWTI5dWRHRnBibVZ5SUhSdklHOWljMlZ5ZGx4dUlDQWdLaTljYmlBZ1kyOXVjM1J5ZFdOMGIzSWdLSEJoY21GdGN5a2dlMXh1SUNBZ0lIUm9hWE11YVc1a1pYZ2dQU0F3WEc1Y2JpQWdJQ0IwYUdsekxpUmpiMjUwWVdsdVpYSWdQU0J3WVhKaGJYTXVKR052Ym5SaGFXNWxjbHh1SUNBZ0lIUm9hWE11SkdOdmJuUnliMnh6SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnbkxtTnZiRzl5YzE5ZlkyOXVkSEp2YkhNbktWeHVJQ0FnSUhSb2FYTXVKR2x0WVdkbGN5QTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KeTVqYjJ4dmNuTmZYMmx0WVdkbFEyOXVkR0ZwYm1WeUp5bGNiaUFnSUNCMGFHbHpMaVJwYldGblpTQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NWpiMnh2Y25OZlgybHRZV2RsY3ljcFhHNGdJQ0FnZEdocGN5NGtaR2xoYlc5dVpDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NWpiMnh2Y25OZlgyUnBZVzF2Ym1RbktWeHVJQ0FnSUhSb2FYTXVKR1JwWVcxdmJtUlVaWGgwSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1OdmJHOXljMTlmYm5WdFltVnlKeWxjYmlBZ0lDQjBhR2x6TGlSMFpYaDBjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1amIyeHZjbk5mWDNSbGVIUkRiMjUwWVdsdVpYSW5LVnh1SUNBZ0lIUm9hWE11SkhSbGVIUWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ2N1WTI5c2IzSnpYMTkwWlhoMEp5bGNiaUFnSUNCMGFHbHpMaVJpWVdOclozSnZkVzVrUkdsMmN5QTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KeTVpWVdOclozSnZkVzVrSUdScGRqcHViM1FvTG1KaFkydG5jbTkxYm1SZlgyTnBjbU5zWlNrbktWeHVJQ0FnSUhSb2FYTXVKR05wY21Oc1pYTWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ2N1WW1GamEyZHliM1Z1WkY5ZlkybHlZMnhsSnlsY2JseHVJQ0FnSUhSb2FYTXVjWFZoYm5ScGRIa2dQU0IwYUdsekxpUnBiV0ZuWlhNdWJHVnVaM1JvWEc0Z0lDQWdkR2hwY3k1emQybHdaV1FnUFNCbVlXeHpaVnh1WEc0Z0lDQWdkR2hwY3k1amIyeHZjbk1nUFNCYlhHNGdJQ0FnSUNBbkkwWkdSa1pHUmljc1hHNGdJQ0FnSUNBbkl6VTJSa1pCTnljc1hHNGdJQ0FnSUNBbkl6VTJSakJHUmljc1hHNGdJQ0FnSUNBbkkwWkdOekF5T1Njc1hHNGdJQ0FnSUNBbkkwWkdSRFV3TUNkY2JpQWdJQ0JkWEc1Y2JpQWdJQ0IwYUdsekxtSmhZMnRuY205MWJtUkRiMnh2Y25NZ1BTQmJYRzRnSUNBZ0lDQW5JelU1TlRrMU9TY3NYRzRnSUNBZ0lDQW5JekkwTkRBeU9DY3NYRzRnSUNBZ0lDQW5JekkwTXpVME1DY3NYRzRnSUNBZ0lDQW5JelF3TWtJeU5DY3NYRzRnSUNBZ0lDQW5JelF3TTBJeU5DZGNiaUFnSUNCZFhHNWNiaUFnSUNCMGFHbHpMbk4zYVhCbGN5QTlJRzVsZHlCSVlXMXRaWElvZEdocGN5NGthVzFoWjJVcFhHNWNiaUFnSUNCMGFHbHpMbk4zYVhCbGN5NXZiaWduY0dGdWJHVm1kQ2NzSUdVZ1BUNTdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NXBibVJsZUNBcklERWdQRDBnZEdocGN5NXhkV0Z1ZEdsMGVTQXRJREVnSmlZZ2RHaHBjeTV6ZDJsd1pXUWdQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXBibVJsZUNzclhHNGdJQ0FnSUNBZ0lIUm9hWE11WTJoaGJtZGxVMnhwWkdVb0tWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcFhHNWNiaUFnSUNCMGFHbHpMbk4zYVhCbGN5NXZiaWduY0dGdWNtbG5hSFFuTENCbElEMCtlMXh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVhVzVrWlhnZ0xTQXhJRDQ5SURBZ0lDWW1JSFJvYVhNdWMzZHBjR1ZrSUQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YVc1a1pYZ3RMVnh1SUNBZ0lDQWdJQ0IwYUdsekxtTm9ZVzVuWlZOc2FXUmxLQ2xjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVnh1WEc0Z0lDQWdkR2hwY3k1amFHRnVaMlZUYkdsa1pTZ3BYRzVjYmlBZ0lDQjBhR2x6TGlSamIyNTBjbTlzY3k1bWIzSkZZV05vS0NobGJHVnRaVzUwTENCcGJtUmxlQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ1pXeGxiV1Z1ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXBibVJsZUNBOUlHbHVaR1Y0WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMmhoYm1kbFUyeHBaR1VvS1Z4dUlDQWdJQ0FnZlNsY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnZDJsdVpHOTNMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KM05qY205c2JDY3NJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lIUm9hWE11WTJobFkyc29LVnh1SUNBZ0lIMHBYRzRnSUgxY2JseHVJQ0F2S2lwY2JpQWdJQ29nVEdGMWJtTm9aWE1nWlhabGNua2daWFpsYm5RZ2JtVmxaR1ZrSUhkb1pXNGdZMkZ5YjNWelpXd2dhWE1nYlc5MmFXNW5YRzRnSUNBcUlFQm1kVzVqZEdsdmJseHVJQ0FnS2lCQWJtRnRaU0JqYUdGdVoyVlRiR2xrWlZ4dUlDQWdLaTljYmlBZ1kyaGhibWRsVTJ4cFpHVW9LU0I3WEc0Z0lDQWdkR2hwY3k1emQybHdaV1FnUFNCMGNuVmxYRzVjYmlBZ0lDQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdVkyOXNiM0p6WDE5amIyNTBjbTlzY3kwdFlXTjBhWFpsSnlrdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnblkyOXNiM0p6WDE5amIyNTBjbTlzY3kwdFlXTjBhWFpsSnlsY2JpQWdJQ0IwYUdsekxpUmpiMjUwY205c2MxdDBhR2x6TG1sdVpHVjRYUzVqYkdGemMweHBjM1F1WVdSa0tDZGpiMnh2Y25OZlgyTnZiblJ5YjJ4ekxTMWhZM1JwZG1VbktWeHVYRzRnSUNBZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1OdmJHOXljMTlmYVcxaFoyVkRiMjUwWVdsdVpYSXRMV0ZqZEdsMlpTY3BMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMk52Ykc5eWMxOWZhVzFoWjJWRGIyNTBZV2x1WlhJdExXRmpkR2wyWlNjcFhHNGdJQ0FnZEdocGN5NGthVzFoWjJWelczUm9hWE11YVc1a1pYaGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyTnZiRzl5YzE5ZmFXMWhaMlZEYjI1MFlXbHVaWEl0TFdGamRHbDJaU2NwWEc1Y2JpQWdJQ0IwYUdsekxpUmthV0Z0YjI1a1ZHVjRkQzVwYm01bGNraFVUVXdnUFNCMGFHbHpMbWx1WkdWNElDc2dNVnh1WEc0Z0lDQWdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtTnZiRzl5YzE5ZmRHVjRkRU52Ym5SaGFXNWxjaTB0WVdOMGFYWmxKeWt1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duWTI5c2IzSnpYMTkwWlhoMFEyOXVkR0ZwYm1WeUxTMWhZM1JwZG1VbktWeHVJQ0FnSUhSb2FYTXVKSFJsZUhSelczUm9hWE11YVc1a1pYaGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyTnZiRzl5YzE5ZmRHVjRkRU52Ym5SaGFXNWxjaTB0WVdOMGFYWmxKeWxjYmx4dUlDQWdJSFJvYVhNdUpIUmxlSFF1Wm05eVJXRmphQ2dnWld4bGJXVnVkQ0E5UGlCN1hHNGdJQ0FnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbU52Ykc5eUlEMGdkR2hwY3k1amIyeHZjbk5iZEdocGN5NXBibVJsZUYxY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnZEdocGN5NWphR1ZqYXlncFhHNWNiaUFnSUNCMGFHbHpMaVJrYVdGdGIyNWtMbk4wZVd4bExtSnZjbVJsY2tOdmJHOXlJRDBnZEdocGN5NWpiMnh2Y25OYmRHaHBjeTVwYm1SbGVGMWNibHh1SUNBZ0lIZHBibVJ2ZHk1elpYUlVhVzFsYjNWMEtDQW9LU0E5UGlCN1hHNGdJQ0FnSUNCMGFHbHpMbk4zYVhCbFpDQTlJR1poYkhObFhHNGdJQ0FnZlN3Z01UVXdNQ2xjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCWGFHVnVJR052Ym5SaGFXNWxjaUJwY3lCMmFYTnBZbXhsSUdOb1lXNW5aU0JpWVdOclozSnZkVzVrSUdOdmJHOXlYRzRnSUNBcUlFQm1kVzVqZEdsdmJseHVJQ0FnS2lCQWJtRnRaU0JqYUdWamExeHVJQ0FnS2k5Y2JpQWdZMmhsWTJzb0tTQjdYRzRnSUNBZ2FXWWdLSFJvYVhNdUpHTnZiblJoYVc1bGNpNW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvS1M1NUlEd2dNVGt3SUNZbUlIUm9hWE11SkdOdmJuUmhhVzVsY2k1blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUW9LUzU1SUQ0Z0xTQjBhR2x6TGlSamIyNTBZV2x1WlhJdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2t1YUdWcFoyaDBJQ3NnTXpBd0tTQjdYRzRnSUNBZ0lDQjBhR2x6TGlSaVlXTnJaM0p2ZFc1a1JHbDJjeTVtYjNKRllXTm9LQ0JsYkdWdFpXNTBJRDArSUh0Y2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzVpWVdOclozSnZkVzVrUTI5c2IzSWdQU0IwYUdsekxtSmhZMnRuY205MWJtUkRiMnh2Y25OYmRHaHBjeTVwYm1SbGVGMWNiaUFnSUNBZ0lIMHBYRzRnSUNBZ0lDQjBhR2x6TGlSamFYSmpiR1Z6TG1admNrVmhZMmdvSUdWc1pXMWxiblFnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG1KdmNtUmxja052Ykc5eUlEMGdkR2hwY3k1aVlXTnJaM0p2ZFc1a1EyOXNiM0p6VzNSb2FYTXVhVzVrWlhoZFhHNGdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JpQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lIUm9hWE11SkdKaFkydG5jbTkxYm1SRWFYWnpMbVp2Y2tWaFkyZ29JR1ZzWlcxbGJuUWdQVDRnZTF4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbUpoWTJ0bmNtOTFibVJEYjJ4dmNpQTlJQ2NqTkRBek5USTBKMXh1SUNBZ0lDQWdmU2xjYmlBZ0lDQWdJSFJvYVhNdUpHTnBjbU5zWlhNdVptOXlSV0ZqYUNnZ1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUNBZ0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdVltOXlaR1Z5UTI5c2IzSWdQU0FuSXpRd016VXlOQ2RjYmlBZ0lDQWdJSDBwWEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnUTJGeWIzVnpaV3hjYmlJc0lpOHFLbHh1SUNvZ1ZHaHBjeUJqYkdGemN5QndiR0Y1Y3lCdGRYTnBZMXh1SUNvZ1FHTnNZWE56WEc0Z0tpOWNibU5zWVhOeklFMTFjMmxqSUh0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nUkdWamJHRnlaWE1nWVd4c0lIQmhjbUZ0WlhSbGNuTXVJR055WldGMFpTQmhkV1JwYnlCdlltcGxZM1FnWVc1a0lHeHBjM1JsYmlCMGJ5QmlkWFIwYjI0Z2JYVjBaUzVjYmlBZ0lDb2dRR052Ym5OMGNuVmpkRzl5WEc0Z0lDQXFJRUJ3WVhKaGJTQjdiMkpxWldOMGZTQndZWEpoYlhNZ0xTQkRiMjUwWVdsdWN5QXpJSEJoY21GdFpYUmxjbk5jYmlBZ0lDb2dRSEJoY21GdElIdHpkSEpwYm1kOUlHeHBibXNnTFNCc2FXNXJJSFJ2SUhSb1pTQmhkV1JwYjF4dUlDQWdLaUJBY0dGeVlXMGdlMlZzWlcxbGJuUjlJQ1JsYkNBdElHVnNaVzFsYm5RZ2QyaHBZMmdnWTI5dWRHRnBibk1nYlhWMFpTQmlkWFIwYjI1Y2JpQWdJQ29nUUhCaGNtRnRJSHRsYkdWdFpXNTBmU0FrYVdOdmJpQXRJR1ZzWlcxbGJuUWdkMmhwWTJnZ1kyOXVkR0ZwYm5NZ2FXTnZibHh1SUNBZ0tpOWNiaUFnWTI5dWMzUnlkV04wYjNJb2NHRnlZVzF6S1h0Y2JseHVJQ0FnSUhSb2FYTXVZWFZrYVc4Z1BTQnVaWGNnUVhWa2FXOG9jR0Z5WVcxekxteHBibXNwWEc0Z0lDQWdkR2hwY3k1aGRXUnBieTVoZFhSdmNHeGhlU0E5SUhSeWRXVmNibHh1SUNBZ0lIUm9hWE11Y0dGeVlXMXpJRDBnY0dGeVlXMXpYRzVjYmlBZ0lDQnBaaWhzYjJOaGJGTjBiM0poWjJVdVoyVjBTWFJsYlNnbllYVmthVzhuS1NBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV6ZEdGMFpTQTlJRXBUVDA0dWNHRnljMlVvYkc5allXeFRkRzl5WVdkbExtZGxkRWwwWlcwb0oyRjFaR2x2SnlrcFhHNGdJQ0FnSUNCMGFHbHpMbk4wWVhSbElEMGdkR2hwY3k1emRHRjBaU0EvSUhSb2FYTXVjM1JoZEdVZ1BTQm1ZV3h6WlNBNklIUm9hWE11YzNSaGRHVWdQU0IwY25WbFhHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSFJvYVhNdWMzUmhkR1VnUFNCMGNuVmxYRzRnSUNBZ0lDQnNiMk5oYkZOMGIzSmhaMlV1YzJWMFNYUmxiU2duWVhWa2FXOG5MQ0IwYUdsekxuTjBZWFJsS1Z4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdWJYVjBaU2dwWEc1Y2JpQWdJQ0J3WVhKaGJYTXVKR1ZzTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdkR2hwY3k1dGRYUmxLQ2xjYmlBZ0lDQjlLVnh1WEc0Z0lIMWNibHh1SUNCdGRYUmxLQ2tnZTF4dUlDQWdJR2xtS0hSb2FYTXVjM1JoZEdVZ1BUMGdkSEoxWlNsN1hHNGdJQ0FnSUNCMGFHbHpMbkJoY21GdGN5NGthV052Ymk1emNtTWdQU0FuTDJGemMyVjBjeTlwYldjdlkzSnZjM011Y0c1bkoxeHVJQ0FnSUNBZ2RHaHBjeTVoZFdScGJ5NXdZWFZ6WlNncFhHNGdJQ0FnSUNCMGFHbHpMbUYxWkdsdkxuWnZiSFZ0WlNBOUlEQmNiaUFnSUNBZ0lIUm9hWE11YzNSaGRHVWdQU0JtWVd4elpWeHVJQ0FnSUNBZ2JHOWpZV3hUZEc5eVlXZGxMbk5sZEVsMFpXMG9KMkYxWkdsdkp5d2dkR2hwY3k1emRHRjBaU2xjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV3WVhKaGJYTXVKR2xqYjI0dWMzSmpJRDBnSnk5aGMzTmxkSE12YVcxbkwzTnZkVzVrTG1kcFppZGNiaUFnSUNBZ0lIUm9hWE11WVhWa2FXOHVjR3hoZVNncFhHNGdJQ0FnSUNCMGFHbHpMbUYxWkdsdkxuWnZiSFZ0WlNBOUlERmNiaUFnSUNBZ0lIUm9hWE11YzNSaGRHVWdQU0IwY25WbFhHNGdJQ0FnSUNCc2IyTmhiRk4wYjNKaFoyVXVjMlYwU1hSbGJTZ25ZWFZrYVc4bkxDQjBhR2x6TG5OMFlYUmxLVnh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRTExYzJsalhHNGlMQ0l2S2lwY2JpQXFJRmRvWlc0Z1pXeGxiV1Z1ZENCM2FYUm9JR0VnYzNCbFkybG1hV01nUTFOVElHTnNZWE56SUdseklIWnBjMmxpYkdVZ2FXNGdkMmx1Wkc5M0xDQm5hWFpsSUdsMElHRWdibVYzSUVOVFV5QmpiR0Z6YzF4dUlDb2dRR05zWVhOelhHNGdLaTljYm1Oc1lYTnpJRk5qY205c2JFRndjR1ZoY21sdVp5QjdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlFQmpiMjV6ZEhKMVkzUnZjbHh1SUNBZ0tpQkVaV05zWVhKbGN5QmhiR3dnY0dGeVlXMWxkR1Z5Y3k0Z1NXNXBkSE1nYzNsemRHVnRMbHh1SUNBZ0tpQkFjR0Z5WVcwZ2UyOWlhbVZqZEgwZ2NHRnlZVzF6SUMwZ1EyOXVkR0ZwYm5NZ01pQndZWEpoYldWMFpYSnpJRG9nYUdsa1pHVnVMQ0I3YzNSeWFXNW5mU3dnUTFOVElHTnNZWE56SUhkb2FXTm9JSGRwYkd3Z1ltVWdjbVZ0YjNabFpEc2dZWEJ3WldGeVpXUXNJSHR6ZEhKcGJtZDlMQ0JEVTFNZ2QyaHBZMmdnZDJsc2JDQmlaU0JoWkdSbFpEdGNiaUFnSUNvdlhHNGdJR052Ym5OMGNuVmpkRzl5SUNod1lYSmhiWE1wSUh0Y2JpQWdJQ0IwYUdsekxuQmhjbUZ0Y3lBOUlIQmhjbUZ0YzF4dUlDQWdJSFJvYVhNdUpHVnNaVzFsYm5SeklEMGdibVYzSUU5aWFtVmpkQ2dwWEc0Z0lDQWdkR2hwY3k1eVpXWnlaWE5vVUhKdmNHVnlkR2xsY3lncFhHNGdJQ0FnZEdocGN5NXBibWwwS0NsY2JpQWdJQ0IzYVc1a2IzY3VjMlYwU1c1MFpYSjJZV3dvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdkR2hwY3k1cGJtbDBLQ2xjYmlBZ0lDQjlMQ0ExTURBcFhHNGdJSDFjYmx4dUlDQXZLaXBjYmlBZ0lDb2dUR2x6ZEdWdUlIUnZJSE5qY205c2JDQmxkbVZ1ZEN3Z1lXNWtJSEpsWm5KbGMyZ2daV3hsYldWdWRITmNiaUFnSUNvZ1FHWjFibU4wYVc5dVhHNGdJQ0FxSUVCdVlXMWxJR2x1YVhSY2JpQWdJQ292WEc0Z0lHbHVhWFFvS1NCN1hHNGdJQ0FnZEdocGN5NXlaV1p5WlhOb1VISnZjR1Z5ZEdsbGN5Z3BYRzRnSUNBZ2QybHVaRzkzTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjNOamNtOXNiQ2NzSUhSb2FYTXVZMmhsWTJzb0tTbGNiaUFnZlZ4dVhHNGdJQzhxS2x4dUlDQWdLaUJWY0dSaGRHVWdhR2xrWkdWdUlHVnNaVzFsYm5SeklHeHBjM1FzSUdGdVpDQjNhVzVrYjNjZ2FHVnBaMmgwWEc0Z0lDQXFJRUJtZFc1amRHbHZibHh1SUNBZ0tpQkFibUZ0WlNCeVpXWnlaWE5vVUhKdmNHVnlkR2xsYzF4dUlDQWdLaTljYmlBZ2NtVm1jbVZ6YUZCeWIzQmxjblJwWlhNb0tTQjdYRzRnSUNBZ2RHaHBjeTRrWld4bGJXVnVkSE11YUdsa1pHVnVJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2hnTGlSN2RHaHBjeTV3WVhKaGJYTXVhR2xrWkdWdWZXQXBYRzRnSUNBZ2RHaHBjeTVvWldsbmFIUWdQU0IzYVc1a2IzY3VhVzV1WlhKSVpXbG5hSFJjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCSlppQmhiaUJsYkdWdFpXNTBJR2x6SUhacGMybGliR1VzSUhKbGNHeGhZMlVnYUdsa1pHVnVJRU5UVXlCamJHRnpjeUJpZVNCaGNIQmxZWEpsWkNCRFUxTWdZMnhoYzNOY2JpQWdJQ29nUUdaMWJtTjBhVzl1WEc0Z0lDQXFJRUJ1WVcxbElHTm9aV05yWEc0Z0lDQXFMMXh1SUNCamFHVmpheWdwSUh0Y2JpQWdJQ0IwYUdsekxpUmxiR1Z0Wlc1MGN5NW9hV1JrWlc0dVptOXlSV0ZqYUNnZ1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUNBZ0lDQnNaWFFnZEdWdGNHOXpJRDBnWld4bGJXVnVkQzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tTNTBiM0JjYmlBZ0lDQWdJR2xtSUNoMFpXMXdiM01nTFNCMGFHbHpMbWhsYVdkb2RDQThQU0F3S1Z4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwTG1Oc1lYTnpUbUZ0WlNBOUlHVnNaVzFsYm5RdVkyeGhjM05PWVcxbExuSmxjR3hoWTJVb2RHaHBjeTV3WVhKaGJYTXVhR2xrWkdWdUxDQjBhR2x6TG5CaGNtRnRjeTVoY0hCbFlYSmxaQ2xjYmlBZ0lDQjlLVnh1SUNCOVhHNTlYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnVTJOeWIyeHNRWEJ3WldGeWFXNW5YRzRpTENKcGJYQnZjblFnVTJOeWIyeHNRWEJ3WldGeWFXNW5JR1p5YjIwZ0p5NHZZMjl0Y0c5dVpXNTBjeTl6WTNKdmJHeGhjSEJsWVhKcGJtY25YRzVwYlhCdmNuUWdRWEJ3WldGeUlHWnliMjBnSnk0dlkyOXRjRzl1Wlc1MGN5OWhjSEJsWVhJblhHNXBiWEJ2Y25RZ1EyRnliM1Z6Wld3Z1puSnZiU0FuTGk5amIyMXdiMjVsYm5SekwyTmhjbTkxYzJWc0oxeHVhVzF3YjNKMElFMTFjMmxqSUdaeWIyMGdKeTR2WTI5dGNHOXVaVzUwY3k5dGRYTnBZeWRjYmk4dklHbHRjRzl5ZENCU1pXeHNZWGdnWm5KdmJTQW5jbVZzYkdGNEoxeHVhVzF3YjNKMElFSnZaSGx0YjNacGJpQm1jbTl0SUNkaWIyUjViVzkyYVc0blhHNWNibHh1THlvcVhHNGdLaUJBWTI5dWMzUmNiaUFxSUVCdVlXMWxJR0Z1YVcxaGRHbHZibHh1SUNvZ1FHbHVjM1JoYm1ObElGTmpjbTlzYkVGd2NHVmhjbWx1WjF4dUlDb3ZYRzVqYjI1emRDQmhibWx0WVhScGIyNGdQU0J1WlhjZ1UyTnliMnhzUVhCd1pXRnlhVzVuS0h0Y2JpQWdhR2xrWkdWdUlEb2dKMmhwWkdSbGJpY3NYRzRnSUdGd2NHVmhjbVZrSURvZ0oyRndjR1ZoY21Wa0oxeHVmU2xjYmx4dUx5b3FYRzRnS2lCQVkyOXVjM1JjYmlBcUlFQnVZVzFsSUdGd2NHVmhjbWx1WjF4dUlDb2dRR2x1YzNSaGJtTmxJRUZ3Y0dWaGNseHVJQ292WEc1amIyNXpkQ0JoY0hCbFlYSnBibWNnUFNCdVpYY2dRWEJ3WldGeUtIdGNiaUFnSkdOdmJuUmhhVzVsY2lBNklHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnk1aWIzZ25LU3hjYmlBZ0pHRnVhVzFoZEdVZ09pQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDY3VZbUZqYTJkeWIzVnVaRjlmWTJseVkyeGxKeWtzWEc0Z0lHRnVhVzFoZEdsdmJpQTZJQ2R2Y0dGamFYUjVKMXh1ZlNsY2JseHVYRzR2S2lwY2JpQXFJRUJqYjI1emRGeHVJQ29nUUc1aGJXVWdjMnhwWkdWeVhHNGdLaUJBYVc1emRHRnVZMlVnUTJGeWIzVnpaV3hjYmlBcUwxeHVZMjl1YzNRZ2MyeHBaR1Z5SUQwZ2JtVjNJRU5oY205MWMyVnNLSHRjYmlBZ0pHTnZiblJoYVc1bGNpQTZJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NWpiMnh2Y25NbktWeHVmU2xjYmx4dUx5b3FYRzRnS2lCQVkyOXVjM1JjYmlBcUlFQnVZVzFsSUdGMVpHbHZYRzRnS2lCQWFXNXpkR0Z1WTJVZ1RYVnphV05jYmlBcUwxeHVZMjl1YzNRZ1lYVmthVzhnUFNCdVpYY2dUWFZ6YVdNb2UxeHVJQ0JzYVc1ck9pQW5MMkZ6YzJWMGN5OXpiM1Z1WkhNdlltRmphMmR5YjNWdVpDNXRjRE1uTEZ4dUlDQWtaV3c2SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVoZFdScGIxOWZZblYwZEc5dUp5a3NYRzRnSUNScFkyOXVPaUJrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VZWFZrYVc5ZlgybGpiMjRuS1Z4dWZTbGNibHh1THlvcVhHNGdLaUJBWTI5dWMzUmNiaUFxSUVCdVlXMWxJR3h2WVdSbGNseHVJQ292WEc1amIyNXpkQ0JzYjJGa1pYSWdQU0JDYjJSNWJXOTJhVzR1Ykc5aFpFRnVhVzFoZEdsdmJpaDdYRzRnSUdOdmJuUmhhVzVsY2pvZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG14dllXUmxjaWNwTEZ4dUlDQnlaVzVrWlhKbGNqb2dKM04yWnljc1hHNGdJR0YxZEc5d2JHRjVPaUIwY25WbExGeHVJQ0J3WVhSb09pQW5MMkZ6YzJWMGN5OWtZWFJoTDJ4dllXUmxjaTVxYzI5dUoxeHVmU2xjYmx4dWQybHVaRzkzTG05dWJHOWhaQ0E5SUNncElEMCtJSHRjYmlBZ2MyVjBWR2x0Wlc5MWRDZ29LU0E5UG50Y2JpQWdJQ0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3ViRzloWkdWeUp5a3VZMnhoYzNOTWFYTjBMbUZrWkNnbmNtVnRiM1psWkNjcFhHNGdJQ0FnYzJWMFZHbHRaVzkxZENnb0tTQTlQaUI3WEc0Z0lDQWdJQ0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3ViRzloWkdWeUp5a3VjM1I1YkdVdVpHbHpjR3hoZVNBOUlDZHViMjVsSjF4dUlDQWdJSDBzSURJd01EQXBYRzRnSUgwc0lESTFNREFwWEc1OVhHNGlYWDA9XG4iXX0=
